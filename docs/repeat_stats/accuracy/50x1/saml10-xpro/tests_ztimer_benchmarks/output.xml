<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201117 14:46:50.149" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:46:50.735" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:46:50.744" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:46:51.852" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:46:50.734" endtime="20201117 14:46:51.853"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.855" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:46:51.854" endtime="20201117 14:46:51.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:50.732" endtime="20201117 14:46:51.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:51.858" endtime="20201117 14:46:52.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.857" endtime="20201117 14:46:52.045"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.073" endtime="20201117 14:46:52.089"></status>
</kw>
<msg timestamp="20201117 14:46:52.090" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:52.070" endtime="20201117 14:46:52.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.096" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:52.092" endtime="20201117 14:46:52.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.102" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:52.098" endtime="20201117 14:46:52.103"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:52.064" endtime="20201117 14:46:52.104"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:52.058" endtime="20201117 14:46:52.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.056" endtime="20201117 14:46:52.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:52.114" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:52.112" endtime="20201117 14:46:52.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.108" endtime="20201117 14:46:52.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.054" endtime="20201117 14:46:52.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.053" endtime="20201117 14:46:52.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.117" endtime="20201117 14:46:52.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.050" endtime="20201117 14:46:52.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.123" endtime="20201117 14:46:52.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.047" endtime="20201117 14:46:52.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:50.731" endtime="20201117 14:46:52.126"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:52.133" endtime="20201117 14:46:52.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.131" endtime="20201117 14:46:52.153"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.167" endtime="20201117 14:46:52.179"></status>
</kw>
<msg timestamp="20201117 14:46:52.179" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:52.165" endtime="20201117 14:46:52.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.182" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:52.181" endtime="20201117 14:46:52.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.185" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:52.183" endtime="20201117 14:46:52.185"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:52.163" endtime="20201117 14:46:52.186"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:52.160" endtime="20201117 14:46:52.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.158" endtime="20201117 14:46:52.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:52.190" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:52.190" endtime="20201117 14:46:52.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.188" endtime="20201117 14:46:52.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.157" endtime="20201117 14:46:52.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.156" endtime="20201117 14:46:52.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.192" endtime="20201117 14:46:52.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.155" endtime="20201117 14:46:52.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.153" endtime="20201117 14:46:52.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.130" endtime="20201117 14:46:52.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.202" endtime="20201117 14:46:52.210"></status>
</kw>
<msg timestamp="20201117 14:46:52.210" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:52.200" endtime="20201117 14:46:52.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.213" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:52.211" endtime="20201117 14:46:52.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.214" endtime="20201117 14:46:52.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.198" endtime="20201117 14:46:52.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.196" endtime="20201117 14:46:52.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.221" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201117 14:46:52.220" endtime="20201117 14:46:52.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.223" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201117 14:46:52.222" endtime="20201117 14:46:52.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.217" endtime="20201117 14:46:52.224"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:46:52.127" endtime="20201117 14:46:52.224" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:46:50.268" endtime="20201117 14:46:52.227"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.279" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:46:52.287" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:46:53.474" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:46:52.278" endtime="20201117 14:46:53.475"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.477" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:46:53.476" endtime="20201117 14:46:53.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.276" endtime="20201117 14:46:53.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:53.480" endtime="20201117 14:46:53.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.479" endtime="20201117 14:46:53.701"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.713" endtime="20201117 14:46:53.725"></status>
</kw>
<msg timestamp="20201117 14:46:53.726" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.712" endtime="20201117 14:46:53.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.728" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.727" endtime="20201117 14:46:53.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.732" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:53.729" endtime="20201117 14:46:53.732"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:53.709" endtime="20201117 14:46:53.733"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:53.707" endtime="20201117 14:46:53.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.706" endtime="20201117 14:46:53.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:53.738" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:53.737" endtime="20201117 14:46:53.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.735" endtime="20201117 14:46:53.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.705" endtime="20201117 14:46:53.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.704" endtime="20201117 14:46:53.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.739" endtime="20201117 14:46:53.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.703" endtime="20201117 14:46:53.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.742" endtime="20201117 14:46:53.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.701" endtime="20201117 14:46:53.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.275" endtime="20201117 14:46:53.746"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:53.758" endtime="20201117 14:46:53.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.755" endtime="20201117 14:46:53.781"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.807" endtime="20201117 14:46:53.823"></status>
</kw>
<msg timestamp="20201117 14:46:53.824" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.804" endtime="20201117 14:46:53.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.830" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.827" endtime="20201117 14:46:53.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.836" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:53.832" endtime="20201117 14:46:53.837"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:53.799" endtime="20201117 14:46:53.838"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:53.794" endtime="20201117 14:46:53.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.791" endtime="20201117 14:46:53.840"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:53.847" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:53.846" endtime="20201117 14:46:53.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.842" endtime="20201117 14:46:53.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.789" endtime="20201117 14:46:53.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.788" endtime="20201117 14:46:53.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.849" endtime="20201117 14:46:53.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.786" endtime="20201117 14:46:53.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.782" endtime="20201117 14:46:53.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.752" endtime="20201117 14:46:53.852"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.855" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.863" endtime="20201117 14:46:53.879"></status>
</kw>
<msg timestamp="20201117 14:46:53.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.862" endtime="20201117 14:46:53.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.881" endtime="20201117 14:46:53.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.883" endtime="20201117 14:46:53.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.859" endtime="20201117 14:46:53.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.857" endtime="20201117 14:46:53.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.892" endtime="20201117 14:46:54.191"></status>
</kw>
<msg timestamp="20201117 14:46:54.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.096440819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.096485097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:53.890" endtime="20201117 14:46:54.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.096440819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.096485097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.195" endtime="20201117 14:46:54.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.203" endtime="20201117 14:46:54.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.888" endtime="20201117 14:46:54.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.886" endtime="20201117 14:46:54.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:54.210" level="INFO">${RESULT} = [{'time': 0.096485097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.42780000000087e-05, 'source_diff': 4.42780000000087e-05}, {'time': 0.096578708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:46:54.207" endtime="20201117 14:46:54.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:54.224" level="INFO">${ACCURACY} = {'diff': [4.42780000000087e-05, 4.35139999999945e-05, 4.347199999998885e-05, 4.348599999999536e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.348599999999536e-05, 4.350000000000187e-05, 4.347200...</msg>
<status status="PASS" starttime="20201117 14:46:54.211" endtime="20201117 14:46:54.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.229" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:46:54.228" endtime="20201117 14:46:54.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.231" level="INFO">VALUE: [4.42780000000087e-05, 4.35139999999945e-05, 4.347199999998885e-05, 4.348599999999536e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.348599999999536e-05, 4.350000000000187e-05, 4.347200000000273e-05, 4.344400000000359e-05, 4.348599999999536e-05, 4.348599999999536e-05, 4.348600000000924e-05, 4.347199999998885e-05, 4.347200000000273e-05, 4.350000000000187e-05, 4.348599999999536e-05, 4.3445000000003064e-05, 4.348599999999536e-05, 4.348599999999536e-05, 4.347200000000273e-05, 4.35139999999945e-05, 4.348700000000871e-05, 4.347200000000273e-05, 4.347199999998885e-05, 4.348599999999536e-05, 4.348599999999536e-05, 4.350000000000187e-05, 4.348599999999536e-05, 4.348599999999536e-05, 4.348599999999536e-05, 4.348600000000924e-05, 4.355600000000015e-05, 4.348599999999536e-05, 4.344400000000359e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.35139999999945e-05, 4.344400000000359e-05, 4.350000000000187e-05, 4.3458999999995696e-05, 4.350000000000187e-05, 4.35139999999945e-05, 4.347199999998885e-05, 4.347200000000273e-05, 4.348599999999536e-05, 4.35139999999945e-05, 4.348599999999536e-05, 4.347200000000273e-05, 4.3445000000003064e-05]</msg>
<status status="PASS" starttime="20201117 14:46:54.230" endtime="20201117 14:46:54.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.225" endtime="20201117 14:46:54.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.234" endtime="20201117 14:46:54.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:54.238" endtime="20201117 14:46:54.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.236" endtime="20201117 14:46:54.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.233" endtime="20201117 14:46:54.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.856" endtime="20201117 14:46:54.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.854" endtime="20201117 14:46:54.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.853" endtime="20201117 14:46:54.259"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.261" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.269" endtime="20201117 14:46:54.285"></status>
</kw>
<msg timestamp="20201117 14:46:54.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.267" endtime="20201117 14:46:54.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.286" endtime="20201117 14:46:54.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.288" endtime="20201117 14:46:54.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.265" endtime="20201117 14:46:54.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.263" endtime="20201117 14:46:54.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.297" endtime="20201117 14:46:54.583"></status>
</kw>
<msg timestamp="20201117 14:46:54.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023194236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023238542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.296" endtime="20201117 14:46:54.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023194236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023238542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.587" endtime="20201117 14:46:54.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.596" endtime="20201117 14:46:54.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.293" endtime="20201117 14:46:54.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.292" endtime="20201117 14:46:54.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:54.602" level="INFO">${RESULT} = [{'time': 0.023238542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.43060000000009e-05, 'source_diff': 4.43060000000009e-05}, {'time': 0.023330681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:46:54.599" endtime="20201117 14:46:54.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:54.617" level="INFO">${ACCURACY} = {'diff': [4.43060000000009e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.34860000000023e-05, 4.347200000000273e-05, 4.34999999999984e-05, 4.34860000000023e-05, 4.345799999999969e-05, 4.347199999...</msg>
<status status="PASS" starttime="20201117 14:46:54.604" endtime="20201117 14:46:54.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.621" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:46:54.620" endtime="20201117 14:46:54.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.624" level="INFO">VALUE: [4.43060000000009e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.34860000000023e-05, 4.347200000000273e-05, 4.34999999999984e-05, 4.34860000000023e-05, 4.345799999999969e-05, 4.347199999999926e-05, 4.344400000000012e-05, 4.348599999999883e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.34860000000023e-05, 4.3541000000001107e-05, 4.351400000000144e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.3444999999999595e-05, 4.34999999999984e-05, 4.345799999999969e-05, 4.3487000000001774e-05, 4.3487000000001774e-05, 4.351400000000144e-05, 4.347200000000273e-05, 4.3486999999998305e-05, 4.347199999999926e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.34860000000023e-05, 4.341600000000098e-05, 4.34999999999984e-05, 4.347200000000273e-05, 4.3473000000002204e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.351400000000144e-05, 4.350000000000187e-05, 4.3487000000001774e-05, 4.351400000000144e-05, 4.351400000000144e-05, 4.351400000000144e-05, 4.354200000000058e-05, 4.34860000000023e-05, 4.347200000000273e-05, 4.348599999999883e-05]</msg>
<status status="PASS" starttime="20201117 14:46:54.622" endtime="20201117 14:46:54.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.618" endtime="20201117 14:46:54.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.627" endtime="20201117 14:46:54.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:54.630" endtime="20201117 14:46:54.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.628" endtime="20201117 14:46:54.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.625" endtime="20201117 14:46:54.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.262" endtime="20201117 14:46:54.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.260" endtime="20201117 14:46:54.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.259" endtime="20201117 14:46:54.651"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.653" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.661" endtime="20201117 14:46:54.677"></status>
</kw>
<msg timestamp="20201117 14:46:54.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.660" endtime="20201117 14:46:54.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.679" endtime="20201117 14:46:54.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.681" endtime="20201117 14:46:54.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.657" endtime="20201117 14:46:54.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.655" endtime="20201117 14:46:54.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.691" endtime="20201117 14:46:54.976"></status>
</kw>
<msg timestamp="20201117 14:46:54.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023275625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023319931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.689" endtime="20201117 14:46:54.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023275625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023319931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.981" endtime="20201117 14:46:54.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.989" endtime="20201117 14:46:54.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.686" endtime="20201117 14:46:54.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.684" endtime="20201117 14:46:54.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:54.996" level="INFO">${RESULT} = [{'time': 0.023319931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430599999999743e-05, 'source_diff': 4.430599999999743e-05}, {'time': 0.023411139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:54.993" endtime="20201117 14:46:54.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:55.011" level="INFO">${ACCURACY} = {'diff': [4.430599999999743e-05, 4.345799999999969e-05, 4.347199999999926e-05, 4.347199999999926e-05, 4.3431000000000025e-05, 4.351400000000144e-05, 4.348599999999883e-05, 4.351399999999797e-05, 4.348...</msg>
<status status="PASS" starttime="20201117 14:46:54.997" endtime="20201117 14:46:55.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.016" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:46:55.015" endtime="20201117 14:46:55.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.018" level="INFO">VALUE: [4.430599999999743e-05, 4.345799999999969e-05, 4.347199999999926e-05, 4.347199999999926e-05, 4.3431000000000025e-05, 4.351400000000144e-05, 4.348599999999883e-05, 4.351399999999797e-05, 4.348599999999883e-05, 4.351300000000197e-05, 4.351399999999797e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.35129999999985e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.344400000000012e-05, 4.34999999999984e-05, 4.3555000000000677e-05, 4.34999999999984e-05, 4.34999999999984e-05, 4.34999999999984e-05, 4.351399999999797e-05, 4.348599999999883e-05, 4.347200000000273e-05, 4.350000000000187e-05, 4.347199999999926e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.3569000000000246e-05, 4.350000000000187e-05, 4.3472999999998735e-05, 4.34999999999984e-05, 4.351399999999797e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.354200000000058e-05, 4.351399999999797e-05, 4.34860000000023e-05, 4.3444999999999595e-05, 4.350000000000187e-05, 4.350000000000187e-05]</msg>
<status status="PASS" starttime="20201117 14:46:55.017" endtime="20201117 14:46:55.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.012" endtime="20201117 14:46:55.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.021" endtime="20201117 14:46:55.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:55.024" endtime="20201117 14:46:55.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.023" endtime="20201117 14:46:55.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.019" endtime="20201117 14:46:55.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.654" endtime="20201117 14:46:55.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.652" endtime="20201117 14:46:55.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.651" endtime="20201117 14:46:55.046"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.048" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.056" endtime="20201117 14:46:55.072"></status>
</kw>
<msg timestamp="20201117 14:46:55.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.054" endtime="20201117 14:46:55.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.073" endtime="20201117 14:46:55.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.076" endtime="20201117 14:46:55.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.052" endtime="20201117 14:46:55.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.050" endtime="20201117 14:46:55.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.085" endtime="20201117 14:46:55.372"></status>
</kw>
<msg timestamp="20201117 14:46:55.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023234014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023278375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.084" endtime="20201117 14:46:55.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023234014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023278375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.376" endtime="20201117 14:46:55.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.384" endtime="20201117 14:46:55.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.081" endtime="20201117 14:46:55.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.079" endtime="20201117 14:46:55.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:55.391" level="INFO">${RESULT} = [{'time': 0.023278375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4360999999999706e-05, 'source_diff': 4.4360999999999706e-05}, {'time': 0.023366097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:55.387" endtime="20201117 14:46:55.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:55.404" level="INFO">${ACCURACY} = {'diff': [4.4360999999999706e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.34860000000023e-05, 4.3444999999999595e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.3500...</msg>
<status status="PASS" starttime="20201117 14:46:55.392" endtime="20201117 14:46:55.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.408" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:46:55.407" endtime="20201117 14:46:55.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.411" level="INFO">VALUE: [4.4360999999999706e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.34860000000023e-05, 4.3444999999999595e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.3417000000000455e-05, 4.352799999999754e-05, 4.347199999999926e-05, 4.350000000000187e-05, 4.3431000000000025e-05, 4.348599999999883e-05, 4.3487000000001774e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.3417000000000455e-05, 4.34999999999984e-05, 4.351300000000197e-05, 4.345799999999969e-05, 4.3431000000000025e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.345799999999969e-05, 4.351400000000144e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.351399999999797e-05, 4.3473000000002204e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.351399999999797e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.34860000000023e-05, 4.3486999999998305e-05, 4.347199999999926e-05, 4.34860000000023e-05, 4.347200000000273e-05, 4.348599999999883e-05, 4.3487000000001774e-05, 4.34999999999984e-05]</msg>
<status status="PASS" starttime="20201117 14:46:55.409" endtime="20201117 14:46:55.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.405" endtime="20201117 14:46:55.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.414" endtime="20201117 14:46:55.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:55.417" endtime="20201117 14:46:55.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.416" endtime="20201117 14:46:55.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.412" endtime="20201117 14:46:55.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.048" endtime="20201117 14:46:55.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.047" endtime="20201117 14:46:55.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.046" endtime="20201117 14:46:55.438"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.440" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.449" endtime="20201117 14:46:55.465"></status>
</kw>
<msg timestamp="20201117 14:46:55.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.448" endtime="20201117 14:46:55.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.466" endtime="20201117 14:46:55.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.469" endtime="20201117 14:46:55.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.445" endtime="20201117 14:46:55.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.442" endtime="20201117 14:46:55.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.478" endtime="20201117 14:46:55.763"></status>
</kw>
<msg timestamp="20201117 14:46:55.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023851903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023896181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.476" endtime="20201117 14:46:55.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023851903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023896181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.768" endtime="20201117 14:46:55.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.776" endtime="20201117 14:46:55.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.473" endtime="20201117 14:46:55.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.472" endtime="20201117 14:46:55.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:55.782" level="INFO">${RESULT} = [{'time': 0.023896181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.427799999999829e-05, 'source_diff': 4.427799999999829e-05}, {'time': 0.023978986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:55.779" endtime="20201117 14:46:55.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:55.796" level="INFO">${ACCURACY} = {'diff': [4.427799999999829e-05, 4.34860000000023e-05, 4.347199999999926e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.351400000000144e-05, 4.350000000000187e-05, 4.347199999999926e-05, 4.3430000...</msg>
<status status="PASS" starttime="20201117 14:46:55.783" endtime="20201117 14:46:55.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.801" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:46:55.800" endtime="20201117 14:46:55.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.803" level="INFO">VALUE: [4.427799999999829e-05, 4.34860000000023e-05, 4.347199999999926e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.351400000000144e-05, 4.350000000000187e-05, 4.347199999999926e-05, 4.343000000000055e-05, 4.347199999999926e-05, 4.3458999999999165e-05, 4.34860000000023e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.34860000000023e-05, 4.3487000000001774e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.3472999999998735e-05, 4.347200000000273e-05, 4.350000000000187e-05, 4.345799999999969e-05, 4.3431000000000025e-05, 4.345799999999969e-05, 4.352799999999754e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.347200000000273e-05, 4.351400000000144e-05, 4.34999999999984e-05, 4.3473000000002204e-05, 4.347200000000273e-05, 4.347200000000273e-05, 4.3555000000000677e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.355600000000015e-05, 4.35129999999985e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.352700000000154e-05, 4.34999999999984e-05, 4.348599999999883e-05]</msg>
<status status="PASS" starttime="20201117 14:46:55.802" endtime="20201117 14:46:55.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.797" endtime="20201117 14:46:55.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.806" endtime="20201117 14:46:55.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:55.809" endtime="20201117 14:46:55.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.808" endtime="20201117 14:46:55.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.805" endtime="20201117 14:46:55.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.441" endtime="20201117 14:46:55.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.439" endtime="20201117 14:46:55.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.438" endtime="20201117 14:46:55.831"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.833" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.841" endtime="20201117 14:46:55.857"></status>
</kw>
<msg timestamp="20201117 14:46:55.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.840" endtime="20201117 14:46:55.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.858" endtime="20201117 14:46:55.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.861" endtime="20201117 14:46:55.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.837" endtime="20201117 14:46:55.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.835" endtime="20201117 14:46:55.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.870" endtime="20201117 14:46:56.156"></status>
</kw>
<msg timestamp="20201117 14:46:56.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023716208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:46:55.868" endtime="20201117 14:46:56.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023716208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:46:56.160" endtime="20201117 14:46:56.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.168" endtime="20201117 14:46:56.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.866" endtime="20201117 14:46:56.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.864" endtime="20201117 14:46:56.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:56.175" level="INFO">${RESULT} = [{'time': 0.0237605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429200000000133e-05, 'source_diff': 4.429200000000133e-05}, {'time': 0.023840806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:46:56.172" endtime="20201117 14:46:56.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:56.188" level="INFO">${ACCURACY} = {'diff': [4.429200000000133e-05, 4.3486999999998305e-05, 4.351400000000144e-05, 4.34860000000023e-05, 4.351400000000144e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.3485...</msg>
<status status="PASS" starttime="20201117 14:46:56.176" endtime="20201117 14:46:56.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.192" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:46:56.191" endtime="20201117 14:46:56.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.195" level="INFO">VALUE: [4.429200000000133e-05, 4.3486999999998305e-05, 4.351400000000144e-05, 4.34860000000023e-05, 4.351400000000144e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.3487000000001774e-05, 4.34860000000023e-05, 4.341599999999751e-05, 4.3486999999998305e-05, 4.351399999999797e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.345799999999969e-05, 4.3555000000000677e-05, 4.3431000000000025e-05, 4.352800000000101e-05, 4.34860000000023e-05, 4.347200000000273e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.34860000000023e-05, 4.351400000000144e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.347200000000273e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.3444999999999595e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.3472999999998735e-05, 4.34860000000023e-05, 4.3487000000001774e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.3487000000001774e-05, 4.354200000000058e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.34860000000023e-05, 4.34860000000023e-05, 4.34860000000023e-05, 4.348599999999883e-05, 4.344400000000012e-05, 4.34860000000023e-05]</msg>
<status status="PASS" starttime="20201117 14:46:56.194" endtime="20201117 14:46:56.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.189" endtime="20201117 14:46:56.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.199" endtime="20201117 14:46:56.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:56.202" endtime="20201117 14:46:56.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.200" endtime="20201117 14:46:56.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.197" endtime="20201117 14:46:56.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.834" endtime="20201117 14:46:56.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.832" endtime="20201117 14:46:56.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.831" endtime="20201117 14:46:56.223"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.225" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.233" endtime="20201117 14:46:56.249"></status>
</kw>
<msg timestamp="20201117 14:46:56.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.232" endtime="20201117 14:46:56.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.251" endtime="20201117 14:46:56.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.253" endtime="20201117 14:46:56.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.229" endtime="20201117 14:46:56.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.227" endtime="20201117 14:46:56.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.262" endtime="20201117 14:46:56.548"></status>
</kw>
<msg timestamp="20201117 14:46:56.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023297611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023341917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.260" endtime="20201117 14:46:56.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023297611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023341917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.552" endtime="20201117 14:46:56.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.561" endtime="20201117 14:46:56.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.258" endtime="20201117 14:46:56.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.256" endtime="20201117 14:46:56.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:56.567" level="INFO">${RESULT} = [{'time': 0.023341917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.43060000000009e-05, 'source_diff': 4.43060000000009e-05}, {'time': 0.023439319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:46:56.564" endtime="20201117 14:46:56.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:56.582" level="INFO">${ACCURACY} = {'diff': [4.43060000000009e-05, 4.347199999999926e-05, 4.3472999999998735e-05, 4.344400000000012e-05, 4.347199999999926e-05, 4.345799999999969e-05, 4.347199999999926e-05, 4.345799999999969e-05, 4.3499...</msg>
<status status="PASS" starttime="20201117 14:46:56.568" endtime="20201117 14:46:56.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.586" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:46:56.585" endtime="20201117 14:46:56.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.589" level="INFO">VALUE: [4.43060000000009e-05, 4.347199999999926e-05, 4.3472999999998735e-05, 4.344400000000012e-05, 4.347199999999926e-05, 4.345799999999969e-05, 4.347199999999926e-05, 4.345799999999969e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.34860000000023e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.3431000000000025e-05, 4.3555000000000677e-05, 4.347199999999926e-05, 4.34860000000023e-05, 4.34860000000023e-05, 4.347199999999926e-05, 4.347199999999926e-05, 4.3472999999998735e-05, 4.351399999999797e-05, 4.3541000000001107e-05, 4.352799999999754e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.347200000000273e-05, 4.34999999999984e-05, 4.352800000000101e-05, 4.351400000000144e-05, 4.355600000000015e-05, 4.347200000000273e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.340200000000141e-05, 4.350000000000187e-05, 4.3458999999999165e-05, 4.347199999999926e-05, 4.355499999999721e-05, 4.34860000000023e-05, 4.345799999999969e-05, 4.351400000000144e-05, 4.34860000000023e-05, 4.347199999999926e-05, 4.347199999999926e-05]</msg>
<status status="PASS" starttime="20201117 14:46:56.587" endtime="20201117 14:46:56.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.583" endtime="20201117 14:46:56.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.592" endtime="20201117 14:46:56.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:56.596" endtime="20201117 14:46:56.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.594" endtime="20201117 14:46:56.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.591" endtime="20201117 14:46:56.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.226" endtime="20201117 14:46:56.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.224" endtime="20201117 14:46:56.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.223" endtime="20201117 14:46:56.617"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.619" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.627" endtime="20201117 14:46:56.643"></status>
</kw>
<msg timestamp="20201117 14:46:56.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.626" endtime="20201117 14:46:56.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.644" endtime="20201117 14:46:56.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.647" endtime="20201117 14:46:56.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.623" endtime="20201117 14:46:56.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.621" endtime="20201117 14:46:56.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.656" endtime="20201117 14:46:56.941"></status>
</kw>
<msg timestamp="20201117 14:46:56.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023241958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023286264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.654" endtime="20201117 14:46:56.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023241958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023286264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.946" endtime="20201117 14:46:56.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.954" endtime="20201117 14:46:56.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.652" endtime="20201117 14:46:56.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.650" endtime="20201117 14:46:56.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:56.960" level="INFO">${RESULT} = [{'time': 0.023286264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.43060000000009e-05, 'source_diff': 4.43060000000009e-05}, {'time': 0.023371556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:46:56.957" endtime="20201117 14:46:56.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:56.974" level="INFO">${ACCURACY} = {'diff': [4.43060000000009e-05, 4.3487000000001774e-05, 4.3473000000002204e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.347199999999926e-05, 4.34999999999984e-05, 4.3472999999998735e-05, 4.348...</msg>
<status status="PASS" starttime="20201117 14:46:56.962" endtime="20201117 14:46:56.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.979" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:46:56.978" endtime="20201117 14:46:56.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.981" level="INFO">VALUE: [4.43060000000009e-05, 4.3487000000001774e-05, 4.3473000000002204e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.347199999999926e-05, 4.34999999999984e-05, 4.3472999999998735e-05, 4.34860000000023e-05, 4.34860000000023e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.3459000000002634e-05, 4.351300000000197e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.3472999999998735e-05, 4.34999999999984e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.345799999999969e-05, 4.347200000000273e-05, 4.351400000000144e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.3473000000002204e-05, 4.350000000000187e-05, 4.3487000000001774e-05, 4.3486999999998305e-05, 4.3473000000002204e-05, 4.34860000000023e-05, 4.350000000000187e-05, 4.3486999999998305e-05, 4.350000000000187e-05, 4.3431000000000025e-05, 4.34860000000023e-05, 4.348599999999883e-05, 4.3458999999999165e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.347200000000273e-05, 4.351400000000144e-05, 4.345799999999969e-05, 4.344400000000012e-05, 4.350000000000187e-05, 4.3487000000001774e-05, 4.347199999999926e-05, 4.348599999999883e-05]</msg>
<status status="PASS" starttime="20201117 14:46:56.980" endtime="20201117 14:46:56.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.975" endtime="20201117 14:46:56.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.984" endtime="20201117 14:46:56.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:56.987" endtime="20201117 14:46:57.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.986" endtime="20201117 14:46:57.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.982" endtime="20201117 14:46:57.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.620" endtime="20201117 14:46:57.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.618" endtime="20201117 14:46:57.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.617" endtime="20201117 14:46:57.009"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.011" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.019" endtime="20201117 14:46:57.034"></status>
</kw>
<msg timestamp="20201117 14:46:57.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.017" endtime="20201117 14:46:57.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.036" endtime="20201117 14:46:57.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.038" endtime="20201117 14:46:57.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.015" endtime="20201117 14:46:57.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.013" endtime="20201117 14:46:57.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.047" endtime="20201117 14:46:57.334"></status>
</kw>
<msg timestamp="20201117 14:46:57.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023322875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023367181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.046" endtime="20201117 14:46:57.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023322875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023367181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.338" endtime="20201117 14:46:57.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.346" endtime="20201117 14:46:57.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.043" endtime="20201117 14:46:57.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.041" endtime="20201117 14:46:57.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:57.353" level="INFO">${RESULT} = [{'time': 0.023367181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.43060000000009e-05, 'source_diff': 4.43060000000009e-05}, {'time': 0.023445014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:46:57.350" endtime="20201117 14:46:57.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:57.367" level="INFO">${ACCURACY} = {'diff': [4.43060000000009e-05, 4.352800000000101e-05, 4.348599999999883e-05, 4.3473000000002204e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.3500...</msg>
<status status="PASS" starttime="20201117 14:46:57.354" endtime="20201117 14:46:57.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.371" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:46:57.371" endtime="20201117 14:46:57.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.374" level="INFO">VALUE: [4.43060000000009e-05, 4.352800000000101e-05, 4.348599999999883e-05, 4.3473000000002204e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.3417000000000455e-05, 4.347199999999926e-05, 4.347199999999926e-05, 4.347199999999926e-05, 4.347199999999926e-05, 4.34860000000023e-05, 4.341600000000098e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.345799999999969e-05, 4.347199999999926e-05, 4.345799999999969e-05, 4.345799999999969e-05, 4.34860000000023e-05, 4.345799999999969e-05, 4.34999999999984e-05, 4.3431000000000025e-05, 4.347200000000273e-05, 4.348599999999883e-05, 4.34860000000023e-05, 4.354199999999711e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.3472999999998735e-05, 4.34860000000023e-05, 4.3555000000000677e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.351400000000144e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.3444999999999595e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.347199999999926e-05, 4.347200000000273e-05, 4.348599999999883e-05, 4.347200000000273e-05]</msg>
<status status="PASS" starttime="20201117 14:46:57.373" endtime="20201117 14:46:57.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.368" endtime="20201117 14:46:57.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.377" endtime="20201117 14:46:57.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:57.380" endtime="20201117 14:46:57.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.379" endtime="20201117 14:46:57.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.376" endtime="20201117 14:46:57.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.011" endtime="20201117 14:46:57.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.010" endtime="20201117 14:46:57.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.009" endtime="20201117 14:46:57.402"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.404" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.412" endtime="20201117 14:46:57.428"></status>
</kw>
<msg timestamp="20201117 14:46:57.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.410" endtime="20201117 14:46:57.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.429" endtime="20201117 14:46:57.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.432" endtime="20201117 14:46:57.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.408" endtime="20201117 14:46:57.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.406" endtime="20201117 14:46:57.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.442" endtime="20201117 14:46:57.728"></status>
</kw>
<msg timestamp="20201117 14:46:57.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023507986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023552292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.440" endtime="20201117 14:46:57.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023507986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023552292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.732" endtime="20201117 14:46:57.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.740" endtime="20201117 14:46:57.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.437" endtime="20201117 14:46:57.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.435" endtime="20201117 14:46:57.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:57.747" level="INFO">${RESULT} = [{'time': 0.023552292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430599999999743e-05, 'source_diff': 4.430599999999743e-05}, {'time': 0.023632931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:57.744" endtime="20201117 14:46:57.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:57.760" level="INFO">${ACCURACY} = {'diff': [4.430599999999743e-05, 4.351399999999797e-05, 4.3487000000001774e-05, 4.354200000000058e-05, 4.34860000000023e-05, 4.344400000000012e-05, 4.348599999999883e-05, 4.3486999999998305e-05, 4.348...</msg>
<status status="PASS" starttime="20201117 14:46:57.748" endtime="20201117 14:46:57.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.765" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:46:57.764" endtime="20201117 14:46:57.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.767" level="INFO">VALUE: [4.430599999999743e-05, 4.351399999999797e-05, 4.3487000000001774e-05, 4.354200000000058e-05, 4.34860000000023e-05, 4.344400000000012e-05, 4.348599999999883e-05, 4.3486999999998305e-05, 4.34860000000023e-05, 4.347200000000273e-05, 4.347199999999926e-05, 4.3458999999999165e-05, 4.3486999999998305e-05, 4.3444999999999595e-05, 4.352800000000101e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.3473000000002204e-05, 4.3431000000000025e-05, 4.34999999999984e-05, 4.345799999999969e-05, 4.351399999999797e-05, 4.3487000000001774e-05, 4.3431000000000025e-05, 4.347199999999926e-05, 4.350000000000187e-05, 4.347199999999926e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.3444999999999595e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.3487000000001774e-05, 4.345799999999969e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.3472999999998735e-05, 4.345799999999969e-05, 4.3431000000000025e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.34999999999984e-05]</msg>
<status status="PASS" starttime="20201117 14:46:57.766" endtime="20201117 14:46:57.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.761" endtime="20201117 14:46:57.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.770" endtime="20201117 14:46:57.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:57.773" endtime="20201117 14:46:57.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.772" endtime="20201117 14:46:57.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.769" endtime="20201117 14:46:57.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.405" endtime="20201117 14:46:57.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.403" endtime="20201117 14:46:57.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.402" endtime="20201117 14:46:57.795"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.797" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.805" endtime="20201117 14:46:57.821"></status>
</kw>
<msg timestamp="20201117 14:46:57.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.803" endtime="20201117 14:46:57.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.822" endtime="20201117 14:46:57.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.825" endtime="20201117 14:46:57.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.801" endtime="20201117 14:46:57.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.799" endtime="20201117 14:46:57.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.834" endtime="20201117 14:46:58.120"></status>
</kw>
<msg timestamp="20201117 14:46:58.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023435736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023480208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.833" endtime="20201117 14:46:58.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023435736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023480208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.125" endtime="20201117 14:46:58.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.133" endtime="20201117 14:46:58.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.830" endtime="20201117 14:46:58.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.828" endtime="20201117 14:46:58.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:58.139" level="INFO">${RESULT} = [{'time': 0.023480208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.447200000000026e-05, 'source_diff': 4.447200000000026e-05}, {'time': 0.023574819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:58.136" endtime="20201117 14:46:58.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:58.154" level="INFO">${ACCURACY} = {'diff': [4.447200000000026e-05, 4.347199999999926e-05, 4.345799999999969e-05, 4.3681000000000275e-05, 4.366599999999776e-05, 4.3610999999998956e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.344...</msg>
<status status="PASS" starttime="20201117 14:46:58.140" endtime="20201117 14:46:58.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.158" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:46:58.157" endtime="20201117 14:46:58.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.161" level="INFO">VALUE: [4.447200000000026e-05, 4.347199999999926e-05, 4.345799999999969e-05, 4.3681000000000275e-05, 4.366599999999776e-05, 4.3610999999998956e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.344400000000012e-05, 4.347200000000273e-05, 4.34860000000023e-05, 4.348599999999883e-05, 4.351400000000144e-05, 4.35129999999985e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.3611000000002426e-05, 4.351400000000144e-05, 4.34999999999984e-05, 4.3860999999999206e-05, 4.34860000000023e-05, 4.350000000000187e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.350000000000187e-05, 4.344400000000012e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.3860999999999206e-05, 4.347199999999926e-05, 4.354199999999711e-05, 4.348599999999883e-05, 4.3610999999998956e-05, 4.3444999999999595e-05, 4.374999999999865e-05, 4.348599999999883e-05, 4.3569000000000246e-05, 4.354200000000058e-05, 4.348599999999883e-05, 4.367999999999733e-05, 4.345800000000316e-05, 4.347199999999926e-05, 4.34999999999984e-05, 4.3569000000000246e-05, 4.3610999999998956e-05, 4.3722999999998985e-05]</msg>
<status status="PASS" starttime="20201117 14:46:58.159" endtime="20201117 14:46:58.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.155" endtime="20201117 14:46:58.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.164" endtime="20201117 14:46:58.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:58.167" endtime="20201117 14:46:58.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.166" endtime="20201117 14:46:58.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.162" endtime="20201117 14:46:58.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.798" endtime="20201117 14:46:58.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.796" endtime="20201117 14:46:58.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.795" endtime="20201117 14:46:58.188"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.191" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.199" endtime="20201117 14:46:58.215"></status>
</kw>
<msg timestamp="20201117 14:46:58.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.198" endtime="20201117 14:46:58.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.216" endtime="20201117 14:46:58.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.219" endtime="20201117 14:46:58.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.195" endtime="20201117 14:46:58.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.192" endtime="20201117 14:46:58.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.228" endtime="20201117 14:46:58.514"></status>
</kw>
<msg timestamp="20201117 14:46:58.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023843847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023889264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.226" endtime="20201117 14:46:58.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023843847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023889264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.518" endtime="20201117 14:46:58.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.526" endtime="20201117 14:46:58.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.224" endtime="20201117 14:46:58.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.222" endtime="20201117 14:46:58.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:58.533" level="INFO">${RESULT} = [{'time': 0.023889264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5416999999998986e-05, 'source_diff': 4.5416999999998986e-05}, {'time': 0.023980764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:58.530" endtime="20201117 14:46:58.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:58.546" level="INFO">${ACCURACY} = {'diff': [4.5416999999998986e-05, 4.472200000000051e-05, 4.391600000000148e-05, 4.3846999999999636e-05, 4.473600000000008e-05, 4.456999999999725e-05, 4.3846999999999636e-05, 4.441599999999851e-05, 4.3...</msg>
<status status="PASS" starttime="20201117 14:46:58.534" endtime="20201117 14:46:58.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.551" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:46:58.550" endtime="20201117 14:46:58.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.553" level="INFO">VALUE: [4.5416999999998986e-05, 4.472200000000051e-05, 4.391600000000148e-05, 4.3846999999999636e-05, 4.473600000000008e-05, 4.456999999999725e-05, 4.3846999999999636e-05, 4.441599999999851e-05, 4.3930999999997056e-05, 4.455499999999821e-05, 4.384799999999911e-05, 4.484699999999717e-05, 4.405499999999771e-05, 4.447200000000026e-05, 4.3917000000000955e-05, 4.426399999999872e-05, 4.4624999999999526e-05, 4.376400000000169e-05, 4.3931000000000525e-05, 4.4597000000000386e-05, 4.4583000000000816e-05, 4.402800000000151e-05, 4.417999999999783e-05, 4.472200000000051e-05, 4.4416999999997986e-05, 4.402799999999804e-05, 4.398599999999933e-05, 4.46800000000018e-05, 4.398599999999933e-05, 4.4458999999996696e-05, 4.405600000000065e-05, 4.405499999999771e-05, 4.416599999999826e-05, 4.39999999999989e-05, 4.3931000000000525e-05, 4.374999999999865e-05, 4.4360999999999706e-05, 4.3917000000000955e-05, 4.467999999999833e-05, 4.472200000000051e-05, 4.3973000000002704e-05, 4.402800000000151e-05, 4.3833000000000066e-05, 4.4472999999999735e-05, 4.4167000000001205e-05, 4.4347000000000136e-05, 4.39860000000028e-05, 4.408399999999979e-05, 4.402799999999804e-05, 4.472200000000051e-05]</msg>
<status status="PASS" starttime="20201117 14:46:58.552" endtime="20201117 14:46:58.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.547" endtime="20201117 14:46:58.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.556" endtime="20201117 14:46:58.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:58.559" endtime="20201117 14:46:58.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.558" endtime="20201117 14:46:58.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.555" endtime="20201117 14:46:58.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.191" endtime="20201117 14:46:58.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.189" endtime="20201117 14:46:58.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.189" endtime="20201117 14:46:58.581"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.583" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.591" endtime="20201117 14:46:58.607"></status>
</kw>
<msg timestamp="20201117 14:46:58.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.590" endtime="20201117 14:46:58.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.609" endtime="20201117 14:46:58.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.611" endtime="20201117 14:46:58.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.587" endtime="20201117 14:46:58.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.585" endtime="20201117 14:46:58.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.620" endtime="20201117 14:46:58.906"></status>
</kw>
<msg timestamp="20201117 14:46:58.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0238055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023851653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:46:58.618" endtime="20201117 14:46:58.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0238055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023851653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:46:58.910" endtime="20201117 14:46:58.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.918" endtime="20201117 14:46:58.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.616" endtime="20201117 14:46:58.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.614" endtime="20201117 14:46:58.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:58.925" level="INFO">${RESULT} = [{'time': 0.023851653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6153000000000166e-05, 'source_diff': 4.6153000000000166e-05}, {'time': 0.023932194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:58.921" endtime="20201117 14:46:58.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:58.938" level="INFO">${ACCURACY} = {'diff': [4.6153000000000166e-05, 4.4847000000000636e-05, 4.523600000000058e-05, 4.576400000000022e-05, 4.5111000000000456e-05, 4.501399999999947e-05, 4.567999999999933e-05, 4.5402999999999416e-05, 4....</msg>
<status status="PASS" starttime="20201117 14:46:58.926" endtime="20201117 14:46:58.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.942" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:46:58.941" endtime="20201117 14:46:58.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.945" level="INFO">VALUE: [4.6153000000000166e-05, 4.4847000000000636e-05, 4.523600000000058e-05, 4.576400000000022e-05, 4.5111000000000456e-05, 4.501399999999947e-05, 4.567999999999933e-05, 4.5402999999999416e-05, 4.573600000000108e-05, 4.5611000000000956e-05, 4.526399999999972e-05, 4.5209000000000915e-05, 4.49999999999999e-05, 4.5681000000002275e-05, 4.523600000000058e-05, 4.552799999999954e-05, 4.515199999999969e-05, 4.5416999999998986e-05, 4.5652999999999666e-05, 4.548600000000083e-05, 4.4903000000002385e-05, 4.476399999999922e-05, 4.495799999999772e-05, 4.529199999999886e-05, 4.547200000000126e-05, 4.4916999999998486e-05, 4.527799999999929e-05, 4.5402999999999416e-05, 4.497199999999729e-05, 4.480499999999846e-05, 4.4973000000000235e-05, 4.507000000000122e-05, 4.5611000000000956e-05, 4.555600000000215e-05, 4.5111000000000456e-05, 4.4709000000000415e-05, 4.5347000000001136e-05, 4.555600000000215e-05, 4.561099999999749e-05, 4.4847000000000636e-05, 4.5388999999999846e-05, 4.5209000000000915e-05, 4.574999999999718e-05, 4.558299999999835e-05, 4.477799999999879e-05, 4.508400000000079e-05, 4.4902999999998916e-05, 4.547200000000126e-05, 4.576300000000075e-05, 4.4917000000001955e-05]</msg>
<status status="PASS" starttime="20201117 14:46:58.944" endtime="20201117 14:46:58.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.939" endtime="20201117 14:46:58.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.948" endtime="20201117 14:46:58.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:58.952" endtime="20201117 14:46:58.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.950" endtime="20201117 14:46:58.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.947" endtime="20201117 14:46:58.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.584" endtime="20201117 14:46:58.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.582" endtime="20201117 14:46:58.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.581" endtime="20201117 14:46:58.973"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.975" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.983" endtime="20201117 14:46:58.999"></status>
</kw>
<msg timestamp="20201117 14:46:59.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.982" endtime="20201117 14:46:59.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.001" endtime="20201117 14:46:59.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.003" endtime="20201117 14:46:59.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.979" endtime="20201117 14:46:59.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.977" endtime="20201117 14:46:59.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.012" endtime="20201117 14:46:59.300"></status>
</kw>
<msg timestamp="20201117 14:46:59.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023430194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023477917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.011" endtime="20201117 14:46:59.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023430194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023477917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.304" endtime="20201117 14:46:59.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.313" endtime="20201117 14:46:59.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.008" endtime="20201117 14:46:59.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.006" endtime="20201117 14:46:59.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:59.319" level="INFO">${RESULT} = [{'time': 0.023477917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7722999999999516e-05, 'source_diff': 4.7722999999999516e-05}, {'time': 0.023572403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:59.316" endtime="20201117 14:46:59.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:59.332" level="INFO">${ACCURACY} = {'diff': [4.7722999999999516e-05, 4.598599999999786e-05, 4.659699999999892e-05, 4.579099999999989e-05, 4.654200000000011e-05, 4.645800000000269e-05, 4.6375000000001276e-05, 4.6111000000001456e-05, 4.6...</msg>
<status status="PASS" starttime="20201117 14:46:59.320" endtime="20201117 14:46:59.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.337" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:46:59.336" endtime="20201117 14:46:59.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.340" level="INFO">VALUE: [4.7722999999999516e-05, 4.598599999999786e-05, 4.659699999999892e-05, 4.579099999999989e-05, 4.654200000000011e-05, 4.645800000000269e-05, 4.6375000000001276e-05, 4.6111000000001456e-05, 4.638800000000137e-05, 4.6236999999997586e-05, 4.622199999999854e-05, 4.623600000000158e-05, 4.5931000000002525e-05, 4.6083000000002317e-05, 4.6166999999999736e-05, 4.58329999999986e-05, 4.5847000000001636e-05, 4.577799999999979e-05, 4.577799999999979e-05, 4.6166999999999736e-05, 4.634699999999867e-05, 4.624999999999768e-05, 4.647199999999879e-05, 4.620799999999897e-05, 4.65130000000015e-05, 4.601400000000047e-05, 4.606899999999928e-05, 4.604100000000014e-05, 4.5861000000001206e-05, 4.640200000000094e-05, 4.672200000000251e-05, 4.652800000000054e-05, 4.6611000000001956e-05, 4.6459000000002165e-05, 4.604199999999961e-05, 4.654100000000064e-05, 4.6125000000001026e-05, 4.666600000000076e-05, 4.577799999999979e-05, 4.641600000000051e-05, 4.609699999999842e-05, 4.613800000000112e-05, 4.6139000000000596e-05, 4.672199999999904e-05, 4.604199999999961e-05, 4.601400000000047e-05, 4.647199999999879e-05, 4.652700000000107e-05, 4.6459000000002165e-05, 4.634699999999867e-05]</msg>
<status status="PASS" starttime="20201117 14:46:59.338" endtime="20201117 14:46:59.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.333" endtime="20201117 14:46:59.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.343" endtime="20201117 14:46:59.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:59.346" endtime="20201117 14:46:59.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.345" endtime="20201117 14:46:59.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.341" endtime="20201117 14:46:59.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.976" endtime="20201117 14:46:59.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.974" endtime="20201117 14:46:59.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.973" endtime="20201117 14:46:59.367"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.370" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.378" endtime="20201117 14:46:59.394"></status>
</kw>
<msg timestamp="20201117 14:46:59.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.376" endtime="20201117 14:46:59.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.396" endtime="20201117 14:46:59.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.398" endtime="20201117 14:46:59.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.374" endtime="20201117 14:46:59.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.372" endtime="20201117 14:46:59.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.407" endtime="20201117 14:46:59.692"></status>
</kw>
<msg timestamp="20201117 14:46:59.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023546417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023594639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.406" endtime="20201117 14:46:59.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023546417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023594639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.697" endtime="20201117 14:46:59.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.705" endtime="20201117 14:46:59.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.403" endtime="20201117 14:46:59.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.401" endtime="20201117 14:46:59.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:59.711" level="INFO">${RESULT} = [{'time': 0.023594639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.822200000000054e-05, 'source_diff': 4.822200000000054e-05}, {'time': 0.023681167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:59.708" endtime="20201117 14:46:59.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:59.731" level="INFO">${ACCURACY} = {'diff': [4.822200000000054e-05, 4.754200000000111e-05, 4.7153000000001166e-05, 4.7722999999999516e-05, 4.734699999999967e-05, 4.741699999999752e-05, 4.7653000000001666e-05, 4.71940000000004e-05, 4.69...</msg>
<status status="PASS" starttime="20201117 14:46:59.717" endtime="20201117 14:46:59.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.735" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:46:59.734" endtime="20201117 14:46:59.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.738" level="INFO">VALUE: [4.822200000000054e-05, 4.754200000000111e-05, 4.7153000000001166e-05, 4.7722999999999516e-05, 4.734699999999967e-05, 4.741699999999752e-05, 4.7653000000001666e-05, 4.71940000000004e-05, 4.6973000000002235e-05, 4.76529999999982e-05, 4.7487000000002305e-05, 4.761099999999949e-05, 4.6944999999999626e-05, 4.679200000000036e-05, 4.7639000000002096e-05, 4.709699999999942e-05, 4.722199999999954e-05, 4.7167000000000736e-05, 4.754199999999764e-05, 4.7653000000001666e-05, 4.741599999999804e-05, 4.740299999999795e-05, 4.7667000000001236e-05, 4.690299999999745e-05, 4.76529999999982e-05, 4.7361000000002706e-05, 4.686099999999874e-05, 4.758399999999982e-05, 4.73330000000001e-05, 4.723599999999911e-05, 4.683400000000254e-05, 4.708299999999985e-05, 4.7013999999998e-05, 4.680500000000046e-05, 4.702799999999757e-05, 4.722199999999954e-05, 4.676400000000122e-05, 4.7347000000003137e-05, 4.734699999999967e-05, 4.727800000000129e-05, 4.752800000000154e-05, 4.777800000000179e-05, 4.676400000000122e-05, 4.683300000000307e-05, 4.7139000000001596e-05, 4.7667000000001236e-05, 4.702799999999757e-05, 4.6903000000000916e-05, 4.73330000000001e-05, 4.751400000000197e-05]</msg>
<status status="PASS" starttime="20201117 14:46:59.736" endtime="20201117 14:46:59.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.732" endtime="20201117 14:46:59.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.741" endtime="20201117 14:46:59.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:59.744" endtime="20201117 14:46:59.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.743" endtime="20201117 14:46:59.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.739" endtime="20201117 14:46:59.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.370" endtime="20201117 14:46:59.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.369" endtime="20201117 14:46:59.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.368" endtime="20201117 14:46:59.765"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.768" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.776" endtime="20201117 14:46:59.792"></status>
</kw>
<msg timestamp="20201117 14:46:59.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.774" endtime="20201117 14:46:59.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.793" endtime="20201117 14:46:59.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.796" endtime="20201117 14:46:59.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.772" endtime="20201117 14:46:59.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.770" endtime="20201117 14:46:59.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.805" endtime="20201117 14:47:00.090"></status>
</kw>
<msg timestamp="20201117 14:47:00.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023439667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023489264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.803" endtime="20201117 14:47:00.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023439667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023489264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.094" endtime="20201117 14:47:00.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.102" endtime="20201117 14:47:00.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.801" endtime="20201117 14:47:00.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.799" endtime="20201117 14:47:00.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:00.109" level="INFO">${RESULT} = [{'time': 0.023489264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.959699999999845e-05, 'source_diff': 4.959699999999845e-05}, {'time': 0.023571792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:00.106" endtime="20201117 14:47:00.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:00.122" level="INFO">${ACCURACY} = {'diff': [4.959699999999845e-05, 4.773599999999961e-05, 4.823600000000011e-05, 4.81529999999987e-05, 4.802800000000204e-05, 4.812499999999956e-05, 4.837499999999981e-05, 4.822200000000054e-05, 4.78889...</msg>
<status status="PASS" starttime="20201117 14:47:00.110" endtime="20201117 14:47:00.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.127" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:47:00.126" endtime="20201117 14:47:00.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.129" level="INFO">VALUE: [4.959699999999845e-05, 4.773599999999961e-05, 4.823600000000011e-05, 4.81529999999987e-05, 4.802800000000204e-05, 4.812499999999956e-05, 4.837499999999981e-05, 4.822200000000054e-05, 4.788899999999888e-05, 4.8653000000002666e-05, 4.852799999999907e-05, 4.777800000000179e-05, 4.7959000000000196e-05, 4.855599999999821e-05, 4.804199999999814e-05, 4.872200000000104e-05, 4.81940000000014e-05, 4.840299999999895e-05, 4.833400000000057e-05, 4.86529999999992e-05, 4.802700000000257e-05, 4.784700000000017e-05, 4.822200000000054e-05, 4.802799999999857e-05, 4.855599999999821e-05, 4.847199999999732e-05, 4.820800000000097e-05, 4.7903000000001916e-05, 4.808300000000085e-05, 4.808400000000032e-05, 4.858399999999735e-05, 4.866699999999877e-05, 4.8403000000002416e-05, 4.791699999999802e-05, 4.7903000000001916e-05, 4.845799999999775e-05, 4.861100000000049e-05, 4.840299999999895e-05, 4.854200000000211e-05, 4.786099999999974e-05, 4.82079999999975e-05, 4.852799999999907e-05, 4.795799999999725e-05, 4.776300000000275e-05, 4.808300000000085e-05, 4.841600000000251e-05, 4.831899999999806e-05, 4.845800000000122e-05, 4.798599999999986e-05, 4.777700000000232e-05]</msg>
<status status="PASS" starttime="20201117 14:47:00.128" endtime="20201117 14:47:00.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.123" endtime="20201117 14:47:00.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.132" endtime="20201117 14:47:00.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:00.136" endtime="20201117 14:47:00.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.134" endtime="20201117 14:47:00.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.131" endtime="20201117 14:47:00.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.768" endtime="20201117 14:47:00.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.766" endtime="20201117 14:47:00.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.766" endtime="20201117 14:47:00.157"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.159" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.167" endtime="20201117 14:47:00.183"></status>
</kw>
<msg timestamp="20201117 14:47:00.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.166" endtime="20201117 14:47:00.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.185" endtime="20201117 14:47:00.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.187" endtime="20201117 14:47:00.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.163" endtime="20201117 14:47:00.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.161" endtime="20201117 14:47:00.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.197" endtime="20201117 14:47:00.482"></status>
</kw>
<msg timestamp="20201117 14:47:00.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023360861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023411417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.195" endtime="20201117 14:47:00.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023360861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023411417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.487" endtime="20201117 14:47:00.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.495" endtime="20201117 14:47:00.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.192" endtime="20201117 14:47:00.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.190" endtime="20201117 14:47:00.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:00.501" level="INFO">${RESULT} = [{'time': 0.023411417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055600000000021e-05, 'source_diff': 5.055600000000021e-05}, {'time': 0.023502903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:00.498" endtime="20201117 14:47:00.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:00.515" level="INFO">${ACCURACY} = {'diff': [5.055600000000021e-05, 4.927799999999982e-05, 4.95140000000005e-05, 4.9707999999999e-05, 4.927799999999982e-05, 4.955599999999921e-05, 4.909700000000142e-05, 4.8889000000003346e-05, 4.963900...</msg>
<status status="PASS" starttime="20201117 14:47:00.502" endtime="20201117 14:47:00.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.519" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:47:00.518" endtime="20201117 14:47:00.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.522" level="INFO">VALUE: [5.055600000000021e-05, 4.927799999999982e-05, 4.95140000000005e-05, 4.9707999999999e-05, 4.927799999999982e-05, 4.955599999999921e-05, 4.909700000000142e-05, 4.8889000000003346e-05, 4.963900000000063e-05, 4.962499999999759e-05, 4.941699999999952e-05, 4.88469999999977e-05, 4.881899999999856e-05, 4.927699999999688e-05, 4.9014e-05, 4.970800000000247e-05, 4.92079999999985e-05, 4.877800000000279e-05, 4.927799999999982e-05, 4.958299999999888e-05, 4.938900000000038e-05, 4.91940000000024e-05, 4.956899999999931e-05, 4.894399999999868e-05, 4.970800000000247e-05, 4.904099999999967e-05, 4.891699999999902e-05, 4.973600000000161e-05, 4.954199999999964e-05, 4.888899999999988e-05, 4.95140000000005e-05, 4.926400000000025e-05, 4.913900000000013e-05, 4.945800000000222e-05, 4.945799999999875e-05, 4.93330000000021e-05, 4.91529999999997e-05, 4.929199999999939e-05, 4.929199999999939e-05, 4.9707999999999e-05, 4.893000000000258e-05, 4.958399999999835e-05, 4.92079999999985e-05, 4.8973000000000766e-05, 4.945799999999875e-05, 4.926400000000025e-05, 4.977800000000032e-05, 4.95140000000005e-05, 4.9472999999997797e-05, 4.929199999999939e-05]</msg>
<status status="PASS" starttime="20201117 14:47:00.520" endtime="20201117 14:47:00.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.516" endtime="20201117 14:47:00.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.525" endtime="20201117 14:47:00.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:00.528" endtime="20201117 14:47:00.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.526" endtime="20201117 14:47:00.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.523" endtime="20201117 14:47:00.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.160" endtime="20201117 14:47:00.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.158" endtime="20201117 14:47:00.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.157" endtime="20201117 14:47:00.549"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.551" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.559" endtime="20201117 14:47:00.576"></status>
</kw>
<msg timestamp="20201117 14:47:00.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.558" endtime="20201117 14:47:00.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.577" endtime="20201117 14:47:00.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.580" endtime="20201117 14:47:00.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.555" endtime="20201117 14:47:00.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.553" endtime="20201117 14:47:00.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.589" endtime="20201117 14:47:00.874"></status>
</kw>
<msg timestamp="20201117 14:47:00.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023473694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023525278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.587" endtime="20201117 14:47:00.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023473694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023525278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.878" endtime="20201117 14:47:00.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.887" endtime="20201117 14:47:00.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.585" endtime="20201117 14:47:00.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.583" endtime="20201117 14:47:00.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:00.893" level="INFO">${RESULT} = [{'time': 0.023525278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.158400000000035e-05, 'source_diff': 5.158400000000035e-05}, {'time': 0.023615875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:00.890" endtime="20201117 14:47:00.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:00.907" level="INFO">${ACCURACY} = {'diff': [5.158400000000035e-05, 4.991700000000002e-05, 4.988900000000088e-05, 4.995899999999873e-05, 4.974999999999771e-05, 5.029200000000039e-05, 4.98469999999987e-05, 5.0472999999998797e-05, 5.0083...</msg>
<status status="PASS" starttime="20201117 14:47:00.894" endtime="20201117 14:47:00.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.911" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:47:00.910" endtime="20201117 14:47:00.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.914" level="INFO">VALUE: [5.158400000000035e-05, 4.991700000000002e-05, 4.988900000000088e-05, 4.995899999999873e-05, 4.974999999999771e-05, 5.029200000000039e-05, 4.98469999999987e-05, 5.0472999999998797e-05, 5.008300000000285e-05, 5.0651999999998254e-05, 4.987500000000131e-05, 5.013900000000113e-05, 4.979199999999989e-05, 5.02079999999995e-05, 4.98330000000026e-05, 5.06530000000012e-05, 5.009799999999842e-05, 5.004200000000014e-05, 5.009800000000189e-05, 5.008300000000285e-05, 5.0665999999997824e-05, 5.0651999999998254e-05, 5.045799999999975e-05, 5.015299999999723e-05, 5.052800000000107e-05, 5.066600000000129e-05, 4.995899999999873e-05, 5.045799999999975e-05, 5.002800000000057e-05, 4.995799999999925e-05, 5.023600000000211e-05, 5.016700000000027e-05, 5.049999999999846e-05, 5.027800000000082e-05, 5.013900000000113e-05, 4.98339999999986e-05, 5.058299999999988e-05, 5.040299999999748e-05, 5.074999999999871e-05, 5.040300000000095e-05, 5.054200000000064e-05, 5.048599999999889e-05, 5.0401999999998004e-05, 5.03469999999992e-05, 5.036100000000224e-05, 5.006999999999928e-05, 5.044499999999966e-05, 5.030499999999702e-05, 5.069499999999991e-05, 5.009699999999895e-05]</msg>
<status status="PASS" starttime="20201117 14:47:00.912" endtime="20201117 14:47:00.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.907" endtime="20201117 14:47:00.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.917" endtime="20201117 14:47:00.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:00.920" endtime="20201117 14:47:00.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.919" endtime="20201117 14:47:00.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.915" endtime="20201117 14:47:00.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.552" endtime="20201117 14:47:00.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.550" endtime="20201117 14:47:00.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.549" endtime="20201117 14:47:00.941"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.944" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.952" endtime="20201117 14:47:00.969"></status>
</kw>
<msg timestamp="20201117 14:47:00.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.951" endtime="20201117 14:47:00.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.970" endtime="20201117 14:47:00.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.973" endtime="20201117 14:47:00.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.948" endtime="20201117 14:47:00.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.946" endtime="20201117 14:47:00.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.981" endtime="20201117 14:47:01.268"></status>
</kw>
<msg timestamp="20201117 14:47:01.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02404525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024097639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:00.980" endtime="20201117 14:47:01.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02404525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024097639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:01.272" endtime="20201117 14:47:01.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.281" endtime="20201117 14:47:01.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.977" endtime="20201117 14:47:01.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.976" endtime="20201117 14:47:01.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:01.287" level="INFO">${RESULT} = [{'time': 0.024097639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.238899999999991e-05, 'source_diff': 5.238899999999991e-05}, {'time': 0.024201097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:01.284" endtime="20201117 14:47:01.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:01.302" level="INFO">${ACCURACY} = {'diff': [5.238899999999991e-05, 5.094400000000068e-05, 5.161199999999949e-05, 5.162499999999959e-05, 5.076400000000175e-05, 5.115299999999823e-05, 5.1138000000002654e-05, 5.154200000000164e-05, 5.165...</msg>
<status status="PASS" starttime="20201117 14:47:01.288" endtime="20201117 14:47:01.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.306" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:47:01.305" endtime="20201117 14:47:01.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.309" level="INFO">VALUE: [5.238899999999991e-05, 5.094400000000068e-05, 5.161199999999949e-05, 5.162499999999959e-05, 5.076400000000175e-05, 5.115299999999823e-05, 5.1138000000002654e-05, 5.154200000000164e-05, 5.1651999999999254e-05, 5.075000000000218e-05, 5.118100000000084e-05, 5.15279999999986e-05, 5.109699999999995e-05, 5.169500000000091e-05, 5.126399999999878e-05, 5.141700000000152e-05, 5.1679999999998394e-05, 5.168100000000134e-05, 5.108300000000038e-05, 5.10279999999981e-05, 5.1693999999997964e-05, 5.11530000000017e-05, 5.124999999999921e-05, 5.158299999999741e-05, 5.158400000000035e-05, 5.1416000000002043e-05, 5.123599999999964e-05, 5.081900000000056e-05, 5.163899999999916e-05, 5.108399999999985e-05, 5.163899999999916e-05, 5.145900000000023e-05, 5.108300000000038e-05, 5.08339999999996e-05, 5.12080000000005e-05, 5.154100000000217e-05, 5.088899999999841e-05, 5.126399999999878e-05, 5.0901999999998504e-05, 5.143099999999762e-05, 5.163899999999916e-05, 5.108300000000038e-05, 5.163899999999916e-05, 5.109699999999995e-05, 5.11669999999978e-05, 5.151399999999903e-05, 5.173699999999962e-05, 5.094499999999669e-05, 5.163900000000263e-05, 5.093000000000111e-05]</msg>
<status status="PASS" starttime="20201117 14:47:01.308" endtime="20201117 14:47:01.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.303" endtime="20201117 14:47:01.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.312" endtime="20201117 14:47:01.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:01.315" endtime="20201117 14:47:01.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.314" endtime="20201117 14:47:01.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.310" endtime="20201117 14:47:01.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.944" endtime="20201117 14:47:01.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.943" endtime="20201117 14:47:01.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.942" endtime="20201117 14:47:01.338"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.341" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.352" endtime="20201117 14:47:01.368"></status>
</kw>
<msg timestamp="20201117 14:47:01.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.350" endtime="20201117 14:47:01.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.370" endtime="20201117 14:47:01.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.375" endtime="20201117 14:47:01.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.346" endtime="20201117 14:47:01.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.344" endtime="20201117 14:47:01.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.387" endtime="20201117 14:47:01.674"></status>
</kw>
<msg timestamp="20201117 14:47:01.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028566792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028620375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.386" endtime="20201117 14:47:01.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028566792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028620375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.678" endtime="20201117 14:47:01.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.686" endtime="20201117 14:47:01.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.382" endtime="20201117 14:47:01.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.380" endtime="20201117 14:47:01.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:01.693" level="INFO">${RESULT} = [{'time': 0.028620375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.358299999999941e-05, 'source_diff': 5.358299999999941e-05}, {'time': 0.028718917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:01.689" endtime="20201117 14:47:01.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:01.706" level="INFO">${ACCURACY} = {'diff': [5.358299999999941e-05, 5.244500000000166e-05, 5.201399999999953e-05, 5.18470000000007e-05, 5.183300000000113e-05, 5.251400000000003e-05, 5.222200000000107e-05, 5.226399999999978e-05, 5.23470...</msg>
<status status="PASS" starttime="20201117 14:47:01.694" endtime="20201117 14:47:01.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.711" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:47:01.710" endtime="20201117 14:47:01.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.713" level="INFO">VALUE: [5.358299999999941e-05, 5.244500000000166e-05, 5.201399999999953e-05, 5.18470000000007e-05, 5.183300000000113e-05, 5.251400000000003e-05, 5.222200000000107e-05, 5.226399999999978e-05, 5.23470000000012e-05, 5.190299999999898e-05, 5.181900000000156e-05, 5.220899999999751e-05, 5.269400000000243e-05, 5.251400000000003e-05, 5.202800000000257e-05, 5.270900000000148e-05, 5.202800000000257e-05, 5.213899999999966e-05, 5.251400000000003e-05, 5.1957999999997784e-05, 5.2138000000000184e-05, 5.213899999999966e-05, 5.250000000000046e-05, 5.181899999999809e-05, 5.21669999999988e-05, 5.183300000000113e-05, 5.1943999999998214e-05, 5.20279999999991e-05, 5.212499999999662e-05, 5.258300000000188e-05, 5.227800000000282e-05, 5.182000000000103e-05, 5.213899999999966e-05, 5.2709000000004946e-05, 5.1943999999998214e-05, 5.183300000000113e-05, 5.2263999999996313e-05, 5.2167000000005737e-05, 5.2665999999999824e-05, 5.2735999999997674e-05, 5.2209000000004446e-05, 5.270800000000547e-05, 5.247200000000479e-05, 5.194499999999769e-05, 5.250000000000393e-05, 5.226400000000325e-05, 5.190299999999898e-05, 5.205500000000224e-05, 5.202800000000257e-05, 5.213899999999966e-05]</msg>
<status status="PASS" starttime="20201117 14:47:01.712" endtime="20201117 14:47:01.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.707" endtime="20201117 14:47:01.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.717" endtime="20201117 14:47:01.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:01.720" endtime="20201117 14:47:01.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.719" endtime="20201117 14:47:01.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.715" endtime="20201117 14:47:01.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.342" endtime="20201117 14:47:01.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.339" endtime="20201117 14:47:01.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.338" endtime="20201117 14:47:01.741"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.744" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.752" endtime="20201117 14:47:01.768"></status>
</kw>
<msg timestamp="20201117 14:47:01.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.750" endtime="20201117 14:47:01.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.770" endtime="20201117 14:47:01.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.772" endtime="20201117 14:47:01.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.748" endtime="20201117 14:47:01.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.746" endtime="20201117 14:47:01.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.781" endtime="20201117 14:47:02.068"></status>
</kw>
<msg timestamp="20201117 14:47:02.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023489875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023543625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.779" endtime="20201117 14:47:02.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023489875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023543625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.072" endtime="20201117 14:47:02.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.080" endtime="20201117 14:47:02.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.777" endtime="20201117 14:47:02.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.775" endtime="20201117 14:47:02.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:02.086" level="INFO">${RESULT} = [{'time': 0.023543625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3749999999998244e-05, 'source_diff': 5.3749999999998244e-05}, {'time': 0.023631222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:02.083" endtime="20201117 14:47:02.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:02.100" level="INFO">${ACCURACY} = {'diff': [5.3749999999998244e-05, 5.28470000000017e-05, 5.3693999999999964e-05, 5.361099999999855e-05, 5.301400000000053e-05, 5.288900000000041e-05, 5.31669999999998e-05, 5.354200000000017e-05, 5.3652...</msg>
<status status="PASS" starttime="20201117 14:47:02.087" endtime="20201117 14:47:02.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.104" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:47:02.103" endtime="20201117 14:47:02.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.107" level="INFO">VALUE: [5.3749999999998244e-05, 5.28470000000017e-05, 5.3693999999999964e-05, 5.361099999999855e-05, 5.301400000000053e-05, 5.288900000000041e-05, 5.31669999999998e-05, 5.354200000000017e-05, 5.3652000000001254e-05, 5.3471999999998854e-05, 5.344499999999919e-05, 5.313900000000066e-05, 5.309700000000195e-05, 5.287500000000084e-05, 5.272200000000157e-05, 5.32080000000025e-05, 5.283399999999813e-05, 5.338900000000091e-05, 5.348600000000189e-05, 5.327800000000035e-05, 5.284800000000117e-05, 5.3707999999999534e-05, 5.282000000000203e-05, 5.301300000000106e-05, 5.3193999999999464e-05, 5.345800000000275e-05, 5.290299999999998e-05, 5.301400000000053e-05, 5.356999999999931e-05, 5.297200000000182e-05, 5.306899999999934e-05, 5.295899999999826e-05, 5.331900000000306e-05, 5.2943999999999214e-05, 5.290299999999998e-05, 5.311099999999805e-05, 5.311099999999805e-05, 5.3513999999997564e-05, 5.326400000000078e-05, 5.326299999999784e-05, 5.3152000000000754e-05, 5.286100000000127e-05, 5.3388000000001434e-05, 5.313899999999719e-05, 5.3013999999997063e-05, 5.305500000000324e-05, 5.3707999999999534e-05, 5.344499999999919e-05, 5.277799999999985e-05, 5.3693999999999964e-05]</msg>
<status status="PASS" starttime="20201117 14:47:02.105" endtime="20201117 14:47:02.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.101" endtime="20201117 14:47:02.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.110" endtime="20201117 14:47:02.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.114" endtime="20201117 14:47:02.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.112" endtime="20201117 14:47:02.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.109" endtime="20201117 14:47:02.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.745" endtime="20201117 14:47:02.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.743" endtime="20201117 14:47:02.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.742" endtime="20201117 14:47:02.135"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.137" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.145" endtime="20201117 14:47:02.161"></status>
</kw>
<msg timestamp="20201117 14:47:02.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.144" endtime="20201117 14:47:02.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.163" endtime="20201117 14:47:02.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.166" endtime="20201117 14:47:02.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.141" endtime="20201117 14:47:02.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.139" endtime="20201117 14:47:02.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.175" endtime="20201117 14:47:02.462"></status>
</kw>
<msg timestamp="20201117 14:47:02.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023334639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023389958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.173" endtime="20201117 14:47:02.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023334639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023389958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.466" endtime="20201117 14:47:02.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.474" endtime="20201117 14:47:02.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.170" endtime="20201117 14:47:02.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.169" endtime="20201117 14:47:02.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:02.481" level="INFO">${RESULT} = [{'time': 0.023389958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.531899999999812e-05, 'source_diff': 5.531899999999812e-05}, {'time': 0.023492431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:02.478" endtime="20201117 14:47:02.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:02.495" level="INFO">${ACCURACY} = {'diff': [5.531899999999812e-05, 5.401400000000153e-05, 5.462499999999912e-05, 5.4194000000000464e-05, 5.380599999999999e-05, 5.3971999999999354e-05, 5.4513999999998564e-05, 5.415299999999776e-05, 5.3...</msg>
<status status="PASS" starttime="20201117 14:47:02.482" endtime="20201117 14:47:02.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.499" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:47:02.498" endtime="20201117 14:47:02.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.501" level="INFO">VALUE: [5.531899999999812e-05, 5.401400000000153e-05, 5.462499999999912e-05, 5.4194000000000464e-05, 5.380599999999999e-05, 5.3971999999999354e-05, 5.4513999999998564e-05, 5.415299999999776e-05, 5.3735999999998674e-05, 5.398600000000239e-05, 5.415299999999776e-05, 5.463899999999869e-05, 5.430499999999755e-05, 5.431900000000059e-05, 5.458300000000041e-05, 5.375000000000171e-05, 5.412499999999862e-05, 5.451400000000203e-05, 5.458300000000041e-05, 5.4138000000002184e-05, 5.438900000000191e-05, 5.452700000000213e-05, 5.3999999999998494e-05, 5.405500000000077e-05, 5.4499999999998994e-05, 5.382000000000303e-05, 5.408400000000285e-05, 5.4694000000000964e-05, 5.433300000000016e-05, 5.3971999999999354e-05, 5.383299999999966e-05, 5.4749999999999244e-05, 5.383300000000313e-05, 5.388900000000141e-05, 5.4527999999998134e-05, 5.415299999999776e-05, 5.4194000000000464e-05, 5.432000000000006e-05, 5.404200000000067e-05, 5.375000000000171e-05, 5.3763999999997814e-05, 5.3957999999999784e-05, 5.4444000000000714e-05, 5.376400000000128e-05, 5.461099999999955e-05, 5.4194000000000464e-05, 5.4221999999999604e-05, 5.438899999999844e-05, 5.4499999999998994e-05, 5.406999999999981e-05]</msg>
<status status="PASS" starttime="20201117 14:47:02.500" endtime="20201117 14:47:02.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.495" endtime="20201117 14:47:02.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.505" endtime="20201117 14:47:02.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.508" endtime="20201117 14:47:02.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.506" endtime="20201117 14:47:02.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.503" endtime="20201117 14:47:02.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.138" endtime="20201117 14:47:02.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.136" endtime="20201117 14:47:02.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.135" endtime="20201117 14:47:02.529"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.531" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.539" endtime="20201117 14:47:02.556"></status>
</kw>
<msg timestamp="20201117 14:47:02.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.538" endtime="20201117 14:47:02.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.557" endtime="20201117 14:47:02.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.560" endtime="20201117 14:47:02.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.535" endtime="20201117 14:47:02.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.533" endtime="20201117 14:47:02.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.569" endtime="20201117 14:47:02.854"></status>
</kw>
<msg timestamp="20201117 14:47:02.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023444944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023500986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.567" endtime="20201117 14:47:02.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023444944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023500986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.859" endtime="20201117 14:47:02.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.867" endtime="20201117 14:47:02.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.565" endtime="20201117 14:47:02.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.563" endtime="20201117 14:47:02.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:02.874" level="INFO">${RESULT} = [{'time': 0.023500986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.604200000000267e-05, 'source_diff': 5.604200000000267e-05}, {'time': 0.023608417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:02.870" endtime="20201117 14:47:02.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:02.888" level="INFO">${ACCURACY} = {'diff': [5.604200000000267e-05, 5.4763999999998814e-05, 5.562500000000012e-05, 5.491699999999808e-05, 5.4944000000001214e-05, 5.537499999999987e-05, 5.4999999999999494e-05, 5.513899999999919e-05, 5.5...</msg>
<status status="PASS" starttime="20201117 14:47:02.875" endtime="20201117 14:47:02.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.893" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:47:02.892" endtime="20201117 14:47:02.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.895" level="INFO">VALUE: [5.604200000000267e-05, 5.4763999999998814e-05, 5.562500000000012e-05, 5.491699999999808e-05, 5.4944000000001214e-05, 5.537499999999987e-05, 5.4999999999999494e-05, 5.513899999999919e-05, 5.506900000000134e-05, 5.561100000000055e-05, 5.5194000000001464e-05, 5.508300000000091e-05, 5.5513999999999564e-05, 5.5694000000001964e-05, 5.507000000000081e-05, 5.5499999999999994e-05, 5.558299999999794e-05, 5.5249999999999744e-05, 5.516699999999833e-05, 5.475000000000271e-05, 5.534700000000073e-05, 5.5263999999999314e-05, 5.537499999999987e-05, 5.544500000000119e-05, 5.545900000000076e-05, 5.4777999999998384e-05, 5.5444000000001714e-05, 5.556900000000184e-05, 5.5263999999999314e-05, 5.50410000000022e-05, 5.551400000000303e-05, 5.4999999999999494e-05, 5.538899999999944e-05, 5.563899999999969e-05, 5.565299999999926e-05, 5.5499999999999994e-05, 5.5263999999999314e-05, 5.5194000000001464e-05, 5.538900000000291e-05, 5.50280000000021e-05, 5.488899999999894e-05, 5.533300000000116e-05, 5.5236000000000174e-05, 5.483400000000013e-05, 5.487500000000284e-05, 5.543100000000162e-05, 5.490299999999851e-05, 5.518100000000137e-05, 5.5708000000001534e-05, 5.530600000000149e-05]</msg>
<status status="PASS" starttime="20201117 14:47:02.894" endtime="20201117 14:47:02.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.889" endtime="20201117 14:47:02.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.898" endtime="20201117 14:47:02.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.902" endtime="20201117 14:47:02.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.900" endtime="20201117 14:47:02.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.897" endtime="20201117 14:47:02.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.532" endtime="20201117 14:47:02.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.530" endtime="20201117 14:47:02.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.529" endtime="20201117 14:47:02.923"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.925" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.933" endtime="20201117 14:47:02.950"></status>
</kw>
<msg timestamp="20201117 14:47:02.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.932" endtime="20201117 14:47:02.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.951" endtime="20201117 14:47:02.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.954" endtime="20201117 14:47:02.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.929" endtime="20201117 14:47:02.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.927" endtime="20201117 14:47:02.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.963" endtime="20201117 14:47:03.249"></status>
</kw>
<msg timestamp="20201117 14:47:03.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023382819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023439944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.961" endtime="20201117 14:47:03.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023382819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023439944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.253" endtime="20201117 14:47:03.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.261" endtime="20201117 14:47:03.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.958" endtime="20201117 14:47:03.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.957" endtime="20201117 14:47:03.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:03.268" level="INFO">${RESULT} = [{'time': 0.023439944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.712500000000162e-05, 'source_diff': 5.712500000000162e-05}, {'time': 0.023530472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:03.265" endtime="20201117 14:47:03.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:03.281" level="INFO">${ACCURACY} = {'diff': [5.712500000000162e-05, 5.6707999999999065e-05, 5.6222000000001604e-05, 5.6679999999999925e-05, 5.577699999999991e-05, 5.638900000000044e-05, 5.6000000000000494e-05, 5.583299999999819e-05, 5....</msg>
<status status="PASS" starttime="20201117 14:47:03.269" endtime="20201117 14:47:03.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.286" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:47:03.285" endtime="20201117 14:47:03.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.288" level="INFO">VALUE: [5.712500000000162e-05, 5.6707999999999065e-05, 5.6222000000001604e-05, 5.6679999999999925e-05, 5.577699999999991e-05, 5.638900000000044e-05, 5.6000000000000494e-05, 5.583299999999819e-05, 5.6138000000000715e-05, 5.6264000000000314e-05, 5.6319999999998593e-05, 5.6721999999998635e-05, 5.6319999999998593e-05, 5.6485999999997955e-05, 5.5750000000000244e-05, 5.612500000000062e-05, 5.634700000000173e-05, 5.6402000000000535e-05, 5.6514000000000564e-05, 5.583400000000113e-05, 5.6250000000000744e-05, 5.606899999999887e-05, 5.634700000000173e-05, 5.6027999999999634e-05, 5.622299999999761e-05, 5.633300000000216e-05, 5.620900000000151e-05, 5.6500000000000994e-05, 5.663900000000069e-05, 5.654100000000023e-05, 5.6264000000000314e-05, 5.637500000000087e-05, 5.651299999999762e-05, 5.607000000000181e-05, 5.5999999999997024e-05, 5.5971999999997885e-05, 5.6014000000000064e-05, 5.594499999999822e-05, 5.604200000000267e-05, 5.6528000000000134e-05, 5.662500000000112e-05, 5.6541999999999704e-05, 5.6138000000000715e-05, 5.631899999999912e-05, 5.6305999999999023e-05, 5.612500000000062e-05, 5.637500000000087e-05, 5.581899999999862e-05, 5.6569999999998843e-05, 5.6152000000000285e-05]</msg>
<status status="PASS" starttime="20201117 14:47:03.287" endtime="20201117 14:47:03.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.282" endtime="20201117 14:47:03.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.291" endtime="20201117 14:47:03.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:03.294" endtime="20201117 14:47:03.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.293" endtime="20201117 14:47:03.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.290" endtime="20201117 14:47:03.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.926" endtime="20201117 14:47:03.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.924" endtime="20201117 14:47:03.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.923" endtime="20201117 14:47:03.316"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.318" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.326" endtime="20201117 14:47:03.343"></status>
</kw>
<msg timestamp="20201117 14:47:03.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.324" endtime="20201117 14:47:03.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.344" endtime="20201117 14:47:03.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.347" endtime="20201117 14:47:03.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.322" endtime="20201117 14:47:03.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.320" endtime="20201117 14:47:03.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.356" endtime="20201117 14:47:03.643"></status>
</kw>
<msg timestamp="20201117 14:47:03.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023392417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023450861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.354" endtime="20201117 14:47:03.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023392417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023450861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.647" endtime="20201117 14:47:03.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.655" endtime="20201117 14:47:03.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.352" endtime="20201117 14:47:03.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.350" endtime="20201117 14:47:03.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:03.662" level="INFO">${RESULT} = [{'time': 0.023450861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8444000000001245e-05, 'source_diff': 5.8444000000001245e-05}, {'time': 0.023548375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:03.659" endtime="20201117 14:47:03.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:03.675" level="INFO">${ACCURACY} = {'diff': [5.8444000000001245e-05, 5.712499999999815e-05, 5.680500000000005e-05, 5.751300000000209e-05, 5.6943999999999745e-05, 5.6943999999999745e-05, 5.688899999999747e-05, 5.71809999999999e-05, 5.67...</msg>
<status status="PASS" starttime="20201117 14:47:03.663" endtime="20201117 14:47:03.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.680" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:47:03.679" endtime="20201117 14:47:03.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.682" level="INFO">VALUE: [5.8444000000001245e-05, 5.712499999999815e-05, 5.680500000000005e-05, 5.751300000000209e-05, 5.6943999999999745e-05, 5.6943999999999745e-05, 5.688899999999747e-05, 5.71809999999999e-05, 5.672299999999811e-05, 5.6943999999999745e-05, 5.7235999999998705e-05, 5.769499999999997e-05, 5.743100000000015e-05, 5.744499999999972e-05, 5.7430000000000675e-05, 5.6930000000000175e-05, 5.738900000000144e-05, 5.711100000000205e-05, 5.6764000000000814e-05, 5.688900000000094e-05, 5.752699999999819e-05, 5.7193999999999995e-05, 5.6985999999998455e-05, 5.73749999999984e-05, 5.712499999999815e-05, 5.706899999999987e-05, 5.708299999999944e-05, 5.687500000000137e-05, 5.712500000000162e-05, 5.7014000000001064e-05, 5.7444000000000245e-05, 5.765300000000126e-05, 5.690300000000051e-05, 5.693099999999965e-05, 5.686200000000127e-05, 5.6972000000002354e-05, 5.68610000000018e-05, 5.761100000000255e-05, 5.6763999999997344e-05, 5.7387999999998496e-05, 5.6958000000002784e-05, 5.6888000000001465e-05, 5.7069999999999343e-05, 5.6958000000002784e-05, 5.756900000000037e-05, 5.745899999999929e-05, 5.7000000000001494e-05, 5.7319999999999593e-05, 5.7264000000001314e-05, 5.7499999999998525e-05]</msg>
<status status="PASS" starttime="20201117 14:47:03.681" endtime="20201117 14:47:03.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.676" endtime="20201117 14:47:03.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.685" endtime="20201117 14:47:03.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:03.689" endtime="20201117 14:47:03.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.687" endtime="20201117 14:47:03.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.684" endtime="20201117 14:47:03.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.318" endtime="20201117 14:47:03.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.317" endtime="20201117 14:47:03.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.316" endtime="20201117 14:47:03.710"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.712" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.724" endtime="20201117 14:47:03.741"></status>
</kw>
<msg timestamp="20201117 14:47:03.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.723" endtime="20201117 14:47:03.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.743" endtime="20201117 14:47:03.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.745" endtime="20201117 14:47:03.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.720" endtime="20201117 14:47:03.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.714" endtime="20201117 14:47:03.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.754" endtime="20201117 14:47:04.041"></status>
</kw>
<msg timestamp="20201117 14:47:04.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027862472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027921958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.752" endtime="20201117 14:47:04.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027862472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027921958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.045" endtime="20201117 14:47:04.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.053" endtime="20201117 14:47:04.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.750" endtime="20201117 14:47:04.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.748" endtime="20201117 14:47:04.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:04.060" level="INFO">${RESULT} = [{'time': 0.027921958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9486000000000955e-05, 'source_diff': 5.9486000000000955e-05}, {'time': 0.028029417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:04.056" endtime="20201117 14:47:04.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:04.073" level="INFO">${ACCURACY} = {'diff': [5.9486000000000955e-05, 5.794500000000022e-05, 5.831900000000112e-05, 5.812500000000262e-05, 5.8693999999998026e-05, 5.8194000000000995e-05, 5.795899999999979e-05, 5.843100000000115e-05, 5.8...</msg>
<status status="PASS" starttime="20201117 14:47:04.061" endtime="20201117 14:47:04.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.077" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:47:04.076" endtime="20201117 14:47:04.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.080" level="INFO">VALUE: [5.9486000000000955e-05, 5.794500000000022e-05, 5.831900000000112e-05, 5.812500000000262e-05, 5.8693999999998026e-05, 5.8194000000000995e-05, 5.795899999999979e-05, 5.843100000000115e-05, 5.869500000000097e-05, 5.8165999999998386e-05, 5.813899999999872e-05, 5.8570000000000844e-05, 5.8263999999998844e-05, 5.80550000000013e-05, 5.81810000000009e-05, 5.787500000000237e-05, 5.7944000000000745e-05, 5.7999999999999025e-05, 5.78619999999988e-05, 5.862499999999965e-05, 5.7944000000000745e-05, 5.8179999999997956e-05, 5.781900000000062e-05, 5.837500000000287e-05, 5.86810000000014e-05, 5.8306000000001024e-05, 5.8513999999999095e-05, 5.83749999999994e-05, 5.788899999999847e-05, 5.8584000000000414e-05, 5.862499999999965e-05, 5.791700000000108e-05, 5.862500000000312e-05, 5.8236000000003174e-05, 5.861199999999955e-05, 5.8694000000004964e-05, 5.8499999999996055e-05, 5.8042000000001204e-05, 5.781900000000062e-05, 5.7722000000003104e-05, 5.788899999999847e-05, 5.865299999999879e-05, 5.8443999999997776e-05, 5.8514000000002564e-05, 5.861100000000008e-05, 5.780500000000105e-05, 5.7764000000001814e-05, 5.788899999999847e-05, 5.837500000000634e-05, 5.8193999999997525e-05]</msg>
<status status="PASS" starttime="20201117 14:47:04.078" endtime="20201117 14:47:04.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.074" endtime="20201117 14:47:04.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.083" endtime="20201117 14:47:04.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:04.086" endtime="20201117 14:47:04.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.085" endtime="20201117 14:47:04.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.081" endtime="20201117 14:47:04.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.713" endtime="20201117 14:47:04.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.711" endtime="20201117 14:47:04.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.710" endtime="20201117 14:47:04.108"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.110" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.118" endtime="20201117 14:47:04.135"></status>
</kw>
<msg timestamp="20201117 14:47:04.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.117" endtime="20201117 14:47:04.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.136" endtime="20201117 14:47:04.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.139" endtime="20201117 14:47:04.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.114" endtime="20201117 14:47:04.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.112" endtime="20201117 14:47:04.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.148" endtime="20201117 14:47:04.434"></status>
</kw>
<msg timestamp="20201117 14:47:04.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023548958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023608944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.146" endtime="20201117 14:47:04.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023548958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023608944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.438" endtime="20201117 14:47:04.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.447" endtime="20201117 14:47:04.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.144" endtime="20201117 14:47:04.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.142" endtime="20201117 14:47:04.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:04.454" level="INFO">${RESULT} = [{'time': 0.023608944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9986000000001455e-05, 'source_diff': 5.9986000000001455e-05}, {'time': 0.023702431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:04.450" endtime="20201117 14:47:04.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:04.469" level="INFO">${ACCURACY} = {'diff': [5.9986000000001455e-05, 5.9362000000000303e-05, 5.893100000000165e-05, 5.930499999999908e-05, 5.959699999999804e-05, 5.8915999999999136e-05, 5.961099999999761e-05, 5.948700000000043e-05, 5.9...</msg>
<status status="PASS" starttime="20201117 14:47:04.455" endtime="20201117 14:47:04.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.474" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:47:04.472" endtime="20201117 14:47:04.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.476" level="INFO">VALUE: [5.9986000000001455e-05, 5.9362000000000303e-05, 5.893100000000165e-05, 5.930499999999908e-05, 5.959699999999804e-05, 5.8915999999999136e-05, 5.961099999999761e-05, 5.948700000000043e-05, 5.9222000000001135e-05, 5.937499999999693e-05, 5.9236000000000705e-05, 5.9249999999996805e-05, 5.9250000000000275e-05, 5.9250000000000275e-05, 5.9165999999999386e-05, 5.913899999999972e-05, 5.9527999999999665e-05, 5.944500000000172e-05, 5.913899999999972e-05, 5.916699999999886e-05, 5.961099999999761e-05, 5.8764000000002814e-05, 5.8736000000000205e-05, 5.958300000000194e-05, 5.9042000000002204e-05, 5.9541999999999234e-05, 5.9264000000003314e-05, 5.893099999999818e-05, 5.88619999999998e-05, 5.9500000000000525e-05, 5.9179999999998956e-05, 5.91810000000019e-05, 5.9056000000001774e-05, 5.9291999999998984e-05, 5.9555999999998804e-05, 5.9292000000002454e-05, 5.8972000000000885e-05, 5.963900000000022e-05, 5.901300000000012e-05, 5.937499999999693e-05, 5.8986000000000455e-05, 5.9541999999999234e-05, 5.886100000000033e-05, 5.88749999999999e-05, 5.9679999999999456e-05, 5.872300000000011e-05, 5.9429999999999206e-05, 5.9415999999999636e-05, 5.9500000000000525e-05, 5.8722000000000635e-05]</msg>
<status status="PASS" starttime="20201117 14:47:04.475" endtime="20201117 14:47:04.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.470" endtime="20201117 14:47:04.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.479" endtime="20201117 14:47:04.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:04.483" endtime="20201117 14:47:04.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.481" endtime="20201117 14:47:04.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.478" endtime="20201117 14:47:04.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.111" endtime="20201117 14:47:04.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.109" endtime="20201117 14:47:04.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.108" endtime="20201117 14:47:04.504"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.506" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.514" endtime="20201117 14:47:04.531"></status>
</kw>
<msg timestamp="20201117 14:47:04.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.513" endtime="20201117 14:47:04.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.533" endtime="20201117 14:47:04.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.535" endtime="20201117 14:47:04.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.510" endtime="20201117 14:47:04.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.508" endtime="20201117 14:47:04.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.544" endtime="20201117 14:47:04.828"></status>
</kw>
<msg timestamp="20201117 14:47:04.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023605403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023666264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.542" endtime="20201117 14:47:04.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023605403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023666264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.832" endtime="20201117 14:47:04.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.841" endtime="20201117 14:47:04.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.540" endtime="20201117 14:47:04.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.538" endtime="20201117 14:47:04.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:04.847" level="INFO">${RESULT} = [{'time': 0.023666264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.086099999999886e-05, 'source_diff': 6.086099999999886e-05}, {'time': 0.023761764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:04.844" endtime="20201117 14:47:04.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:04.860" level="INFO">${ACCURACY} = {'diff': [6.086099999999886e-05, 6.038900000000097e-05, 6.0207999999999096e-05, 6.012499999999768e-05, 6.013900000000072e-05, 5.994499999999875e-05, 5.986099999999786e-05, 6.040300000000054e-05, 6.012...</msg>
<status status="PASS" starttime="20201117 14:47:04.848" endtime="20201117 14:47:04.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.865" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:47:04.864" endtime="20201117 14:47:04.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.874" level="INFO">VALUE: [6.086099999999886e-05, 6.038900000000097e-05, 6.0207999999999096e-05, 6.012499999999768e-05, 6.013900000000072e-05, 5.994499999999875e-05, 5.986099999999786e-05, 6.040300000000054e-05, 6.012499999999768e-05, 5.972300000000111e-05, 6.0041999999999734e-05, 5.9736000000001205e-05, 5.986100000000133e-05, 5.988900000000047e-05, 6.0542000000000235e-05, 6.0348000000001734e-05, 5.9999999999997555e-05, 6.062500000000165e-05, 6.0014000000000595e-05, 5.98750000000009e-05, 6.0333999999998694e-05, 5.9805999999999054e-05, 6.012499999999768e-05, 6.036100000000183e-05, 5.980499999999958e-05, 6.065300000000079e-05, 5.994500000000222e-05, 6.061100000000208e-05, 6.0750000000001775e-05, 6.018099999999943e-05, 6.0305999999999554e-05, 6.018099999999943e-05, 5.986100000000133e-05, 5.986099999999786e-05, 6.068099999999993e-05, 5.98750000000009e-05, 6.0291999999999984e-05, 5.9986000000001455e-05, 6.066699999999689e-05, 6.037499999999793e-05, 5.981899999999915e-05, 6.009699999999854e-05, 6.0499999999998055e-05, 6.029100000000051e-05, 6.062499999999818e-05, 6.016699999999986e-05, 6.0319999999999124e-05, 5.9805999999999054e-05, 6.044499999999925e-05, 6.002700000000069e-05]</msg>
<status status="PASS" starttime="20201117 14:47:04.866" endtime="20201117 14:47:04.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.861" endtime="20201117 14:47:04.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.877" endtime="20201117 14:47:04.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:04.881" endtime="20201117 14:47:04.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.879" endtime="20201117 14:47:04.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.876" endtime="20201117 14:47:04.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.507" endtime="20201117 14:47:04.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.505" endtime="20201117 14:47:04.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.504" endtime="20201117 14:47:04.902"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.904" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.912" endtime="20201117 14:47:04.929"></status>
</kw>
<msg timestamp="20201117 14:47:04.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.911" endtime="20201117 14:47:04.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.930" endtime="20201117 14:47:04.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.933" endtime="20201117 14:47:04.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.908" endtime="20201117 14:47:04.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.906" endtime="20201117 14:47:04.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.942" endtime="20201117 14:47:05.227"></status>
</kw>
<msg timestamp="20201117 14:47:05.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023556292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.940" endtime="20201117 14:47:05.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023556292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.231" endtime="20201117 14:47:05.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.239" endtime="20201117 14:47:05.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.938" endtime="20201117 14:47:05.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.936" endtime="20201117 14:47:05.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.246" level="INFO">${RESULT} = [{'time': 0.023556292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.205599999999784e-05, 'source_diff': 6.205599999999784e-05}, {'time': 0.023656778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:05.243" endtime="20201117 14:47:05.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:05.260" level="INFO">${ACCURACY} = {'diff': [6.205599999999784e-05, 6.130600000000055e-05, 6.1013999999998125e-05, 6.086099999999886e-05, 6.161199999999908e-05, 6.154200000000123e-05, 6.1000000000002025e-05, 6.129100000000151e-05, 6.14...</msg>
<status status="PASS" starttime="20201117 14:47:05.247" endtime="20201117 14:47:05.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.264" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:47:05.263" endtime="20201117 14:47:05.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.266" level="INFO">VALUE: [6.205599999999784e-05, 6.130600000000055e-05, 6.1013999999998125e-05, 6.086099999999886e-05, 6.161199999999908e-05, 6.154200000000123e-05, 6.1000000000002025e-05, 6.129100000000151e-05, 6.148599999999949e-05, 6.0722000000002635e-05, 6.130600000000055e-05, 6.12499999999988e-05, 6.168099999999746e-05, 6.13620000000023e-05, 6.123599999999924e-05, 6.086099999999886e-05, 6.147199999999992e-05, 6.137499999999893e-05, 6.086099999999886e-05, 6.104200000000073e-05, 6.108299999999997e-05, 6.0792000000000485e-05, 6.143100000000068e-05, 6.112500000000215e-05, 6.0778000000000915e-05, 6.130600000000055e-05, 6.080500000000058e-05, 6.14300000000012e-05, 6.095899999999932e-05, 6.112500000000215e-05, 6.120899999999957e-05, 6.10690000000004e-05, 6.13889999999985e-05, 6.159700000000004e-05, 6.0985999999998985e-05, 6.0806000000000054e-05, 6.123599999999924e-05, 6.093100000000018e-05, 6.12499999999988e-05, 6.106999999999987e-05, 6.0985999999998985e-05, 6.136100000000283e-05, 6.093100000000018e-05, 6.136099999999936e-05, 6.130500000000108e-05, 6.130600000000055e-05, 6.143100000000068e-05, 6.091700000000061e-05, 6.1000000000002025e-05, 6.0985999999998985e-05]</msg>
<status status="PASS" starttime="20201117 14:47:05.265" endtime="20201117 14:47:05.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.260" endtime="20201117 14:47:05.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.270" endtime="20201117 14:47:05.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.273" endtime="20201117 14:47:05.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.271" endtime="20201117 14:47:05.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.268" endtime="20201117 14:47:05.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.905" endtime="20201117 14:47:05.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.903" endtime="20201117 14:47:05.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.902" endtime="20201117 14:47:05.294"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.296" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.304" endtime="20201117 14:47:05.321"></status>
</kw>
<msg timestamp="20201117 14:47:05.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.303" endtime="20201117 14:47:05.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.323" endtime="20201117 14:47:05.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.325" endtime="20201117 14:47:05.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.300" endtime="20201117 14:47:05.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.298" endtime="20201117 14:47:05.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.334" endtime="20201117 14:47:05.620"></status>
</kw>
<msg timestamp="20201117 14:47:05.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023404125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023467736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.332" endtime="20201117 14:47:05.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023404125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023467736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.624" endtime="20201117 14:47:05.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.633" endtime="20201117 14:47:05.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.330" endtime="20201117 14:47:05.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.328" endtime="20201117 14:47:05.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.640" level="INFO">${RESULT} = [{'time': 0.023467736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.361099999999814e-05, 'source_diff': 6.361099999999814e-05}, {'time': 0.023566167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:05.636" endtime="20201117 14:47:05.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:05.653" level="INFO">${ACCURACY} = {'diff': [6.361099999999814e-05, 6.237499999999993e-05, 6.230499999999861e-05, 6.211100000000011e-05, 6.237499999999993e-05, 6.261100000000061e-05, 6.250000000000006e-05, 6.23340000000007e-05, 6.25269...</msg>
<status status="PASS" starttime="20201117 14:47:05.641" endtime="20201117 14:47:05.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.657" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:47:05.656" endtime="20201117 14:47:05.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.660" level="INFO">VALUE: [6.361099999999814e-05, 6.237499999999993e-05, 6.230499999999861e-05, 6.211100000000011e-05, 6.237499999999993e-05, 6.261100000000061e-05, 6.250000000000006e-05, 6.23340000000007e-05, 6.252699999999972e-05, 6.179199999999802e-05, 6.230499999999861e-05, 6.198599999999999e-05, 6.179100000000201e-05, 6.208300000000097e-05, 6.193100000000118e-05, 6.187499999999943e-05, 6.234800000000026e-05, 6.180600000000105e-05, 6.23889999999995e-05, 6.237499999999993e-05, 6.243100000000168e-05, 6.23889999999995e-05, 6.230600000000155e-05, 6.254199999999877e-05, 6.223600000000024e-05, 6.186099999999986e-05, 6.177800000000191e-05, 6.223600000000024e-05, 6.181900000000115e-05, 6.205500000000183e-05, 6.212499999999968e-05, 6.234700000000079e-05, 6.190299999999857e-05, 6.23889999999995e-05, 6.273600000000074e-05, 6.267999999999899e-05, 6.250000000000006e-05, 6.198599999999999e-05, 6.186099999999986e-05, 6.266700000000236e-05, 6.211100000000011e-05, 6.227799999999895e-05, 6.209800000000001e-05, 6.180499999999811e-05, 6.229100000000251e-05, 6.212499999999968e-05, 6.180599999999759e-05, 6.222300000000014e-05, 6.20690000000014e-05, 6.26950000000015e-05]</msg>
<status status="PASS" starttime="20201117 14:47:05.658" endtime="20201117 14:47:05.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.654" endtime="20201117 14:47:05.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.663" endtime="20201117 14:47:05.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.666" endtime="20201117 14:47:05.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.665" endtime="20201117 14:47:05.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.661" endtime="20201117 14:47:05.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.297" endtime="20201117 14:47:05.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.295" endtime="20201117 14:47:05.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.294" endtime="20201117 14:47:05.687"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.690" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.698" endtime="20201117 14:47:05.715"></status>
</kw>
<msg timestamp="20201117 14:47:05.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.696" endtime="20201117 14:47:05.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.716" endtime="20201117 14:47:05.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.719" endtime="20201117 14:47:05.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.694" endtime="20201117 14:47:05.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.692" endtime="20201117 14:47:05.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.728" endtime="20201117 14:47:06.015"></status>
</kw>
<msg timestamp="20201117 14:47:06.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023377694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023441903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.726" endtime="20201117 14:47:06.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023377694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023441903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.019" endtime="20201117 14:47:06.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.027" endtime="20201117 14:47:06.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.724" endtime="20201117 14:47:06.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.722" endtime="20201117 14:47:06.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:06.034" level="INFO">${RESULT} = [{'time': 0.023441903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.42089999999991e-05, 'source_diff': 6.42089999999991e-05}, {'time': 0.023545361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:06.030" endtime="20201117 14:47:06.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:06.048" level="INFO">${ACCURACY} = {'diff': [6.42089999999991e-05, 6.300000000000056e-05, 6.366599999999695e-05, 6.361100000000161e-05, 6.315299999999982e-05, 6.305499999999936e-05, 6.273600000000074e-05, 6.334700000000179e-05, 6.27360...</msg>
<status status="PASS" starttime="20201117 14:47:06.035" endtime="20201117 14:47:06.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.053" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:47:06.052" endtime="20201117 14:47:06.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.055" level="INFO">VALUE: [6.42089999999991e-05, 6.300000000000056e-05, 6.366599999999695e-05, 6.361100000000161e-05, 6.315299999999982e-05, 6.305499999999936e-05, 6.273600000000074e-05, 6.334700000000179e-05, 6.273600000000074e-05, 6.354200000000323e-05, 6.327799999999995e-05, 6.279200000000248e-05, 6.293099999999871e-05, 6.272300000000064e-05, 6.277699999999997e-05, 6.312500000000068e-05, 6.347199999999845e-05, 6.365300000000032e-05, 6.354100000000029e-05, 6.281899999999868e-05, 6.311100000000111e-05, 6.32500000000008e-05, 6.322200000000167e-05, 6.366600000000042e-05, 6.347199999999845e-05, 6.345799999999888e-05, 6.298600000000099e-05, 6.280599999999859e-05, 6.354199999999977e-05, 6.359800000000151e-05, 6.27500000000003e-05, 6.273600000000074e-05, 6.311100000000111e-05, 6.334699999999832e-05, 6.298600000000099e-05, 6.37089999999986e-05, 6.304199999999927e-05, 6.295899999999785e-05, 6.365300000000032e-05, 6.279199999999902e-05, 6.292999999999924e-05, 6.355499999999986e-05, 6.327700000000047e-05, 6.304199999999927e-05, 6.320799999999863e-05, 6.291699999999914e-05, 6.298599999999752e-05, 6.348600000000149e-05, 6.291599999999967e-05, 6.348599999999802e-05]</msg>
<status status="PASS" starttime="20201117 14:47:06.054" endtime="20201117 14:47:06.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.049" endtime="20201117 14:47:06.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.058" endtime="20201117 14:47:06.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:06.062" endtime="20201117 14:47:06.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.060" endtime="20201117 14:47:06.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.057" endtime="20201117 14:47:06.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.690" endtime="20201117 14:47:06.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.689" endtime="20201117 14:47:06.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.688" endtime="20201117 14:47:06.083"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.085" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.093" endtime="20201117 14:47:06.110"></status>
</kw>
<msg timestamp="20201117 14:47:06.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.092" endtime="20201117 14:47:06.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.112" endtime="20201117 14:47:06.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.114" endtime="20201117 14:47:06.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.089" endtime="20201117 14:47:06.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.087" endtime="20201117 14:47:06.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.123" endtime="20201117 14:47:06.410"></status>
</kw>
<msg timestamp="20201117 14:47:06.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023426972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023492056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.122" endtime="20201117 14:47:06.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023426972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023492056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.414" endtime="20201117 14:47:06.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.422" endtime="20201117 14:47:06.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.119" endtime="20201117 14:47:06.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.118" endtime="20201117 14:47:06.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:06.429" level="INFO">${RESULT} = [{'time': 0.023492056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.508399999999998e-05, 'source_diff': 6.508399999999998e-05}, {'time': 0.0236045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:06.426" endtime="20201117 14:47:06.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:06.442" level="INFO">${ACCURACY} = {'diff': [6.508399999999998e-05, 6.443100000000021e-05, 6.434699999999932e-05, 6.413900000000125e-05, 6.383399999999873e-05, 6.468000000000099e-05, 6.413900000000125e-05, 6.463899999999828e-05, 6.4153...</msg>
<status status="PASS" starttime="20201117 14:47:06.430" endtime="20201117 14:47:06.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.447" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:47:06.446" endtime="20201117 14:47:06.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.449" level="INFO">VALUE: [6.508399999999998e-05, 6.443100000000021e-05, 6.434699999999932e-05, 6.413900000000125e-05, 6.383399999999873e-05, 6.468000000000099e-05, 6.413900000000125e-05, 6.463899999999828e-05, 6.415300000000082e-05, 6.44440000000003e-05, 6.416700000000039e-05, 6.370799999999913e-05, 6.398600000000199e-05, 6.429200000000052e-05, 6.393099999999971e-05, 6.447300000000239e-05, 6.386200000000133e-05, 6.448600000000249e-05, 6.373600000000174e-05, 6.436099999999889e-05, 6.400000000000156e-05, 6.404200000000027e-05, 6.4583e-05, 6.415200000000135e-05, 6.37080000000026e-05, 6.394499999999928e-05, 6.429100000000104e-05, 6.404100000000079e-05, 6.459699999999957e-05, 6.422299999999867e-05, 6.404099999999732e-05, 6.429100000000104e-05, 6.429099999999757e-05, 6.393099999999971e-05, 6.42219999999992e-05, 6.434700000000279e-05, 6.391700000000014e-05, 6.412499999999821e-05, 6.429200000000052e-05, 6.431900000000018e-05, 6.380599999999959e-05, 6.386199999999786e-05, 6.42500000000018e-05, 6.445899999999935e-05, 6.466700000000089e-05, 6.412499999999821e-05, 6.459699999999957e-05, 6.398600000000199e-05, 6.448699999999849e-05, 6.452699999999825e-05]</msg>
<status status="PASS" starttime="20201117 14:47:06.448" endtime="20201117 14:47:06.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.443" endtime="20201117 14:47:06.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.452" endtime="20201117 14:47:06.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:06.456" endtime="20201117 14:47:06.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.454" endtime="20201117 14:47:06.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.451" endtime="20201117 14:47:06.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.086" endtime="20201117 14:47:06.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.084" endtime="20201117 14:47:06.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.083" endtime="20201117 14:47:06.477"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.479" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.488" endtime="20201117 14:47:06.506"></status>
</kw>
<msg timestamp="20201117 14:47:06.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.487" endtime="20201117 14:47:06.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.507" endtime="20201117 14:47:06.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.510" endtime="20201117 14:47:06.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.484" endtime="20201117 14:47:06.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.481" endtime="20201117 14:47:06.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.519" endtime="20201117 14:47:06.806"></status>
</kw>
<msg timestamp="20201117 14:47:06.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025046861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025113153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.517" endtime="20201117 14:47:06.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025046861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025113153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.810" endtime="20201117 14:47:06.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.818" endtime="20201117 14:47:06.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.514" endtime="20201117 14:47:06.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.513" endtime="20201117 14:47:06.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:06.825" level="INFO">${RESULT} = [{'time': 0.025113153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.629199999999905e-05, 'source_diff': 6.629199999999905e-05}, {'time': 0.025215639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:06.821" endtime="20201117 14:47:06.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:06.838" level="INFO">${ACCURACY} = {'diff': [6.629199999999905e-05, 6.565300000000232e-05, 6.522299999999967e-05, 6.518000000000149e-05, 6.555599999999787e-05, 6.565199999999938e-05, 6.511099999999964e-05, 6.562499999999971e-05, 6.5401...</msg>
<status status="PASS" starttime="20201117 14:47:06.826" endtime="20201117 14:47:06.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.842" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:47:06.841" endtime="20201117 14:47:06.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.845" level="INFO">VALUE: [6.629199999999905e-05, 6.565300000000232e-05, 6.522299999999967e-05, 6.518000000000149e-05, 6.555599999999787e-05, 6.565199999999938e-05, 6.511099999999964e-05, 6.562499999999971e-05, 6.540199999999913e-05, 6.484699999999982e-05, 6.530500000000161e-05, 6.480600000000059e-05, 6.529200000000152e-05, 6.493100000000071e-05, 6.547299999999992e-05, 6.551400000000263e-05, 6.488899999999853e-05, 6.559700000000057e-05, 6.545900000000035e-05, 6.518000000000149e-05, 6.506900000000093e-05, 6.473599999999927e-05, 6.523599999999977e-05, 6.55419999999983e-05, 6.498600000000299e-05, 6.518000000000149e-05, 6.476400000000188e-05, 6.473599999999927e-05, 6.527799999999848e-05, 6.516699999999792e-05, 6.491700000000114e-05, 6.511099999999964e-05, 6.547200000000045e-05, 6.502799999999823e-05, 6.548600000000002e-05, 6.568099999999799e-05, 6.544500000000078e-05, 6.534700000000032e-05, 6.472300000000264e-05, 6.559800000000005e-05, 6.504099999999832e-05, 6.566699999999842e-05, 6.515300000000182e-05, 6.495800000000038e-05, 6.497299999999942e-05, 6.47219999999997e-05, 6.561100000000014e-05, 6.533300000000075e-05, 6.566699999999842e-05, 6.493100000000071e-05]</msg>
<status status="PASS" starttime="20201117 14:47:06.843" endtime="20201117 14:47:06.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.839" endtime="20201117 14:47:06.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.848" endtime="20201117 14:47:06.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:06.851" endtime="20201117 14:47:06.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.850" endtime="20201117 14:47:06.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.846" endtime="20201117 14:47:06.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.480" endtime="20201117 14:47:06.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.478" endtime="20201117 14:47:06.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.477" endtime="20201117 14:47:06.873"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.875" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.883" endtime="20201117 14:47:06.900"></status>
</kw>
<msg timestamp="20201117 14:47:06.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.881" endtime="20201117 14:47:06.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.901" endtime="20201117 14:47:06.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.904" endtime="20201117 14:47:06.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.879" endtime="20201117 14:47:06.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.877" endtime="20201117 14:47:06.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.913" endtime="20201117 14:47:07.199"></status>
</kw>
<msg timestamp="20201117 14:47:07.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023808431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023875569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.911" endtime="20201117 14:47:07.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023808431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023875569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.203" endtime="20201117 14:47:07.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.212" endtime="20201117 14:47:07.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.909" endtime="20201117 14:47:07.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.907" endtime="20201117 14:47:07.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.218" level="INFO">${RESULT} = [{'time': 0.023875569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.713799999999784e-05, 'source_diff': 6.713799999999784e-05}, {'time': 0.023976056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:07.215" endtime="20201117 14:47:07.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.231" level="INFO">${ACCURACY} = {'diff': [6.713799999999784e-05, 6.665299999999985e-05, 6.57359999999968e-05, 6.659700000000157e-05, 6.583299999999778e-05, 6.612499999999674e-05, 6.644499999999831e-05, 6.65419999999993e-05, 6.648600...</msg>
<status status="PASS" starttime="20201117 14:47:07.219" endtime="20201117 14:47:07.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.236" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.235" endtime="20201117 14:47:07.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.238" level="INFO">VALUE: [6.713799999999784e-05, 6.665299999999985e-05, 6.57359999999968e-05, 6.659700000000157e-05, 6.583299999999778e-05, 6.612499999999674e-05, 6.644499999999831e-05, 6.65419999999993e-05, 6.648600000000102e-05, 6.601399999999966e-05, 6.634700000000132e-05, 6.605600000000184e-05, 6.584699999999735e-05, 6.583300000000125e-05, 6.652799999999973e-05, 6.579199999999855e-05, 6.57639999999994e-05, 6.58480000000003e-05, 6.662500000000071e-05, 6.598600000000052e-05, 6.633300000000175e-05, 6.64029999999996e-05, 6.64029999999996e-05, 6.60830000000015e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.62639999999999e-05, 6.65419999999993e-05, 6.65419999999993e-05, 6.584700000000082e-05, 6.580500000000211e-05, 6.59159999999992e-05, 6.600000000000009e-05, 6.641699999999917e-05, 6.661099999999767e-05, 6.647300000000092e-05, 6.62639999999999e-05, 6.625000000000034e-05, 6.595799999999791e-05, 6.597200000000095e-05, 6.65419999999993e-05, 6.622300000000067e-05, 6.633400000000123e-05, 6.623600000000077e-05, 6.648600000000102e-05, 6.652799999999973e-05, 6.590300000000257e-05, 6.604200000000227e-05, 6.62639999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.237" endtime="20201117 14:47:07.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.232" endtime="20201117 14:47:07.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.242" endtime="20201117 14:47:07.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.245" endtime="20201117 14:47:07.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.244" endtime="20201117 14:47:07.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.240" endtime="20201117 14:47:07.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.876" endtime="20201117 14:47:07.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.874" endtime="20201117 14:47:07.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.873" endtime="20201117 14:47:07.266"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.269" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.277" endtime="20201117 14:47:07.294"></status>
</kw>
<msg timestamp="20201117 14:47:07.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.275" endtime="20201117 14:47:07.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.295" endtime="20201117 14:47:07.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.298" endtime="20201117 14:47:07.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.273" endtime="20201117 14:47:07.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.271" endtime="20201117 14:47:07.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.307" endtime="20201117 14:47:07.593"></status>
</kw>
<msg timestamp="20201117 14:47:07.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023433347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023501611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.305" endtime="20201117 14:47:07.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023433347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023501611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.597" endtime="20201117 14:47:07.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.605" endtime="20201117 14:47:07.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.302" endtime="20201117 14:47:07.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.301" endtime="20201117 14:47:07.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.612" level="INFO">${RESULT} = [{'time': 0.023501611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.826399999999844e-05, 'source_diff': 6.826399999999844e-05}, {'time': 0.023616986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:07.609" endtime="20201117 14:47:07.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.627" level="INFO">${ACCURACY} = {'diff': [6.826399999999844e-05, 6.70969999999986e-05, 6.756999999999944e-05, 6.718099999999949e-05, 6.673600000000127e-05, 6.681899999999921e-05, 6.69030000000001e-05, 6.693100000000271e-05, 6.729200...</msg>
<status status="PASS" starttime="20201117 14:47:07.613" endtime="20201117 14:47:07.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.631" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.630" endtime="20201117 14:47:07.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.634" level="INFO">VALUE: [6.826399999999844e-05, 6.70969999999986e-05, 6.756999999999944e-05, 6.718099999999949e-05, 6.673600000000127e-05, 6.681899999999921e-05, 6.69030000000001e-05, 6.693100000000271e-05, 6.729200000000005e-05, 6.691699999999967e-05, 6.697199999999848e-05, 6.711200000000112e-05, 6.747299999999845e-05, 6.694500000000228e-05, 6.68480000000013e-05, 6.672300000000117e-05, 6.726300000000143e-05, 6.675000000000084e-05, 6.75420000000003e-05, 6.697199999999848e-05, 6.715200000000088e-05, 6.761099999999867e-05, 6.752800000000073e-05, 6.72220000000022e-05, 6.752699999999778e-05, 6.691699999999967e-05, 6.733400000000223e-05, 6.7277000000001e-05, 6.67090000000016e-05, 6.686200000000087e-05, 6.701400000000066e-05, 6.695799999999891e-05, 6.679100000000007e-05, 6.729200000000005e-05, 6.716699999999992e-05, 6.681900000000268e-05, 6.750000000000159e-05, 6.67220000000017e-05, 6.74030000000006e-05, 6.679100000000007e-05, 6.715200000000088e-05, 6.698599999999805e-05, 6.684700000000182e-05, 6.743000000000027e-05, 6.758299999999953e-05, 6.75969999999991e-05, 6.761199999999815e-05, 6.701400000000066e-05, 6.720899999999863e-05, 6.67359999999978e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.632" endtime="20201117 14:47:07.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.628" endtime="20201117 14:47:07.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.637" endtime="20201117 14:47:07.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.641" endtime="20201117 14:47:07.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.639" endtime="20201117 14:47:07.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.636" endtime="20201117 14:47:07.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.269" endtime="20201117 14:47:07.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.267" endtime="20201117 14:47:07.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.267" endtime="20201117 14:47:07.662"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.664" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.672" endtime="20201117 14:47:07.689"></status>
</kw>
<msg timestamp="20201117 14:47:07.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.671" endtime="20201117 14:47:07.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.691" endtime="20201117 14:47:07.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.693" endtime="20201117 14:47:07.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.668" endtime="20201117 14:47:07.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.666" endtime="20201117 14:47:07.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.702" endtime="20201117 14:47:07.988"></status>
</kw>
<msg timestamp="20201117 14:47:07.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023493194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023561972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.701" endtime="20201117 14:47:07.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023493194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023561972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.992" endtime="20201117 14:47:08.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.001" endtime="20201117 14:47:08.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.698" endtime="20201117 14:47:08.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.696" endtime="20201117 14:47:08.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:08.007" level="INFO">${RESULT} = [{'time': 0.023561972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.877800000000198e-05, 'source_diff': 6.877800000000198e-05}, {'time': 0.023672431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:08.004" endtime="20201117 14:47:08.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:08.021" level="INFO">${ACCURACY} = {'diff': [6.877800000000198e-05, 6.865300000000185e-05, 6.824999999999887e-05, 6.858299999999706e-05, 6.783400000000273e-05, 6.829200000000105e-05, 6.863899999999881e-05, 6.790299999999763e-05, 6.8152...</msg>
<status status="PASS" starttime="20201117 14:47:08.009" endtime="20201117 14:47:08.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.026" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:47:08.025" endtime="20201117 14:47:08.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.028" level="INFO">VALUE: [6.877800000000198e-05, 6.865300000000185e-05, 6.824999999999887e-05, 6.858299999999706e-05, 6.783400000000273e-05, 6.829200000000105e-05, 6.863899999999881e-05, 6.790299999999763e-05, 6.815299999999788e-05, 6.77359999999988e-05, 6.776399999999794e-05, 6.795799999999991e-05, 6.848700000000249e-05, 6.798599999999905e-05, 6.85970000000001e-05, 6.858300000000053e-05, 6.80969999999996e-05, 6.851400000000216e-05, 6.824999999999887e-05, 6.852800000000173e-05, 6.851399999999869e-05, 6.820800000000016e-05, 6.776399999999794e-05, 6.830600000000062e-05, 6.851399999999869e-05, 6.843100000000074e-05, 6.777800000000098e-05, 6.845800000000041e-05, 6.834699999999985e-05, 6.836099999999942e-05, 6.834699999999985e-05, 6.786099999999892e-05, 6.858300000000053e-05, 6.819400000000059e-05, 6.772199999999923e-05, 6.794400000000034e-05, 6.79030000000011e-05, 6.781999999999969e-05, 6.79169999999972e-05, 6.805600000000037e-05, 6.820800000000016e-05, 6.866700000000142e-05, 6.79160000000012e-05, 6.840199999999866e-05, 6.851399999999869e-05, 6.838899999999856e-05, 6.793100000000024e-05, 6.806899999999699e-05, 6.843100000000074e-05, 6.805500000000089e-05]</msg>
<status status="PASS" starttime="20201117 14:47:08.027" endtime="20201117 14:47:08.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.022" endtime="20201117 14:47:08.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.031" endtime="20201117 14:47:08.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:08.034" endtime="20201117 14:47:08.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.033" endtime="20201117 14:47:08.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.029" endtime="20201117 14:47:08.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.665" endtime="20201117 14:47:08.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.663" endtime="20201117 14:47:08.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.662" endtime="20201117 14:47:08.056"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.058" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.066" endtime="20201117 14:47:08.083"></status>
</kw>
<msg timestamp="20201117 14:47:08.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.064" endtime="20201117 14:47:08.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.085" endtime="20201117 14:47:08.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.087" endtime="20201117 14:47:08.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.062" endtime="20201117 14:47:08.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.060" endtime="20201117 14:47:08.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.096" endtime="20201117 14:47:08.382"></status>
</kw>
<msg timestamp="20201117 14:47:08.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023440403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023510681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.094" endtime="20201117 14:47:08.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023440403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023510681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.387" endtime="20201117 14:47:08.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.395" endtime="20201117 14:47:08.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.092" endtime="20201117 14:47:08.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.090" endtime="20201117 14:47:08.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:08.402" level="INFO">${RESULT} = [{'time': 0.023510681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.027800000000001e-05, 'source_diff': 7.027800000000001e-05}, {'time': 0.023616167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:08.399" endtime="20201117 14:47:08.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:08.415" level="INFO">${ACCURACY} = {'diff': [7.027800000000001e-05, 6.884799999999983e-05, 6.869400000000109e-05, 6.94169999999987e-05, 6.933300000000128e-05, 6.966699999999895e-05, 6.881899999999774e-05, 6.94299999999988e-05, 6.890200...</msg>
<status status="PASS" starttime="20201117 14:47:08.403" endtime="20201117 14:47:08.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.420" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:47:08.419" endtime="20201117 14:47:08.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.422" level="INFO">VALUE: [7.027800000000001e-05, 6.884799999999983e-05, 6.869400000000109e-05, 6.94169999999987e-05, 6.933300000000128e-05, 6.966699999999895e-05, 6.881899999999774e-05, 6.94299999999988e-05, 6.890200000000263e-05, 6.908299999999756e-05, 6.898600000000005e-05, 6.913899999999931e-05, 6.926399999999944e-05, 6.870799999999719e-05, 6.95970000000011e-05, 6.886099999999992e-05, 6.965299999999938e-05, 6.959699999999763e-05, 6.879199999999808e-05, 6.944399999999837e-05, 6.89169999999982e-05, 6.913899999999931e-05, 6.90420000000018e-05, 6.874999999999937e-05, 6.912499999999974e-05, 6.872200000000023e-05, 6.884699999999688e-05, 6.874999999999937e-05, 6.929199999999858e-05, 6.922299999999673e-05, 6.934700000000085e-05, 6.952799999999926e-05, 6.908300000000103e-05, 6.945800000000141e-05, 6.897200000000048e-05, 6.922200000000073e-05, 6.902800000000223e-05, 6.927799999999901e-05, 6.90420000000018e-05, 6.883400000000026e-05, 6.941700000000217e-05, 6.898600000000005e-05, 6.87359999999998e-05, 6.877800000000198e-05, 6.95970000000011e-05, 6.95970000000011e-05, 6.87359999999998e-05, 6.929199999999858e-05, 6.937499999999999e-05, 6.959800000000058e-05]</msg>
<status status="PASS" starttime="20201117 14:47:08.421" endtime="20201117 14:47:08.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.416" endtime="20201117 14:47:08.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.425" endtime="20201117 14:47:08.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:08.428" endtime="20201117 14:47:08.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.427" endtime="20201117 14:47:08.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.424" endtime="20201117 14:47:08.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.058" endtime="20201117 14:47:08.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.057" endtime="20201117 14:47:08.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.056" endtime="20201117 14:47:08.450"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.452" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.460" endtime="20201117 14:47:08.477"></status>
</kw>
<msg timestamp="20201117 14:47:08.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.458" endtime="20201117 14:47:08.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.479" endtime="20201117 14:47:08.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.481" endtime="20201117 14:47:08.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.456" endtime="20201117 14:47:08.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.454" endtime="20201117 14:47:08.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.490" endtime="20201117 14:47:08.791"></status>
</kw>
<msg timestamp="20201117 14:47:08.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023356556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023428028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.488" endtime="20201117 14:47:08.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023356556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023428028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.795" endtime="20201117 14:47:08.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.803" endtime="20201117 14:47:08.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.486" endtime="20201117 14:47:08.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.484" endtime="20201117 14:47:08.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:08.810" level="INFO">${RESULT} = [{'time': 0.023428028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.147199999999951e-05, 'source_diff': 7.147199999999951e-05}, {'time': 0.023539444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:08.806" endtime="20201117 14:47:08.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:08.823" level="INFO">${ACCURACY} = {'diff': [7.147199999999951e-05, 7.013800000000084e-05, 7.025000000000087e-05, 7.040300000000013e-05, 7.052799999999679e-05, 7.001400000000019e-05, 6.982000000000169e-05, 7.020899999999816e-05, 7.0625...</msg>
<status status="PASS" starttime="20201117 14:47:08.811" endtime="20201117 14:47:08.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.827" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:47:08.826" endtime="20201117 14:47:08.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.830" level="INFO">VALUE: [7.147199999999951e-05, 7.013800000000084e-05, 7.025000000000087e-05, 7.040300000000013e-05, 7.052799999999679e-05, 7.001400000000019e-05, 6.982000000000169e-05, 7.020899999999816e-05, 7.062500000000124e-05, 7.061100000000167e-05, 7.051400000000069e-05, 7.044399999999937e-05, 7.025000000000087e-05, 6.97909999999996e-05, 7.05689999999995e-05, 7.026400000000044e-05, 7.058399999999854e-05, 7.015299999999988e-05, 6.995800000000191e-05, 7.063899999999734e-05, 7.012500000000074e-05, 7.050000000000112e-05, 6.988900000000006e-05, 6.983400000000126e-05, 7.033399999999829e-05, 7.030499999999967e-05, 7.022299999999773e-05, 7.051400000000069e-05, 6.976399999999994e-05, 6.988800000000059e-05, 7.065300000000038e-05, 7.016599999999998e-05, 7.002799999999976e-05, 7.038900000000056e-05, 7.033400000000176e-05, 7.011100000000117e-05, 7.041600000000023e-05, 7.047200000000198e-05, 6.972200000000123e-05, 7.058300000000253e-05, 6.995800000000191e-05, 6.973599999999733e-05, 6.968100000000199e-05, 7.022200000000173e-05, 6.986100000000092e-05, 7.020899999999816e-05, 6.983299999999831e-05, 7.048599999999808e-05, 7.015299999999988e-05, 6.979200000000255e-05]</msg>
<status status="PASS" starttime="20201117 14:47:08.828" endtime="20201117 14:47:08.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.824" endtime="20201117 14:47:08.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.833" endtime="20201117 14:47:08.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:08.836" endtime="20201117 14:47:08.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.835" endtime="20201117 14:47:08.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.831" endtime="20201117 14:47:08.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.452" endtime="20201117 14:47:08.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.451" endtime="20201117 14:47:08.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.450" endtime="20201117 14:47:08.857"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.859" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.867" endtime="20201117 14:47:08.885"></status>
</kw>
<msg timestamp="20201117 14:47:08.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.866" endtime="20201117 14:47:08.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.886" endtime="20201117 14:47:08.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.889" endtime="20201117 14:47:08.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.863" endtime="20201117 14:47:08.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.861" endtime="20201117 14:47:08.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.898" endtime="20201117 14:47:09.183"></status>
</kw>
<msg timestamp="20201117 14:47:09.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023227819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.896" endtime="20201117 14:47:09.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023227819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.187" endtime="20201117 14:47:09.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.196" endtime="20201117 14:47:09.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.894" endtime="20201117 14:47:09.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.892" endtime="20201117 14:47:09.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.202" level="INFO">${RESULT} = [{'time': 0.023299681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.186199999999893e-05, 'source_diff': 7.186199999999893e-05}, {'time': 0.023413097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:09.199" endtime="20201117 14:47:09.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.217" level="INFO">${ACCURACY} = {'diff': [7.186199999999893e-05, 7.070799999999919e-05, 7.131900000000024e-05, 7.070800000000266e-05, 7.163900000000181e-05, 7.094399999999987e-05, 7.16109999999992e-05, 7.134699999999938e-05, 7.08749...</msg>
<status status="PASS" starttime="20201117 14:47:09.203" endtime="20201117 14:47:09.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.221" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.220" endtime="20201117 14:47:09.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.224" level="INFO">VALUE: [7.186199999999893e-05, 7.070799999999919e-05, 7.131900000000024e-05, 7.070800000000266e-05, 7.163900000000181e-05, 7.094399999999987e-05, 7.16109999999992e-05, 7.134699999999938e-05, 7.087499999999802e-05, 7.070800000000266e-05, 7.154100000000135e-05, 7.073599999999833e-05, 7.109699999999913e-05, 7.107000000000294e-05, 7.137500000000199e-05, 7.151399999999822e-05, 7.162500000000224e-05, 7.088900000000106e-05, 7.158300000000006e-05, 7.077800000000051e-05, 7.102700000000128e-05, 7.095899999999891e-05, 7.087500000000149e-05, 7.077699999999756e-05, 7.137500000000199e-05, 7.081899999999974e-05, 7.070799999999919e-05, 7.07499999999979e-05, 7.082000000000269e-05, 7.15970000000031e-05, 7.125000000000187e-05, 7.07369999999978e-05, 7.083400000000226e-05, 7.152699999999831e-05, 7.138899999999809e-05, 7.152800000000126e-05, 7.094399999999987e-05, 7.12360000000023e-05, 7.127800000000101e-05, 7.120799999999969e-05, 7.108299999999956e-05, 7.118000000000055e-05, 7.088900000000106e-05, 7.15690000000005e-05, 7.126400000000144e-05, 7.076400000000094e-05, 7.145799999999994e-05, 7.083299999999931e-05, 7.152800000000126e-05, 7.122199999999926e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.222" endtime="20201117 14:47:09.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.218" endtime="20201117 14:47:09.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.227" endtime="20201117 14:47:09.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.230" endtime="20201117 14:47:09.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.229" endtime="20201117 14:47:09.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.225" endtime="20201117 14:47:09.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.860" endtime="20201117 14:47:09.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.858" endtime="20201117 14:47:09.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.857" endtime="20201117 14:47:09.251"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.253" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.262" endtime="20201117 14:47:09.279"></status>
</kw>
<msg timestamp="20201117 14:47:09.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.260" endtime="20201117 14:47:09.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.281" endtime="20201117 14:47:09.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.283" endtime="20201117 14:47:09.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.257" endtime="20201117 14:47:09.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.255" endtime="20201117 14:47:09.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.292" endtime="20201117 14:47:09.576"></status>
</kw>
<msg timestamp="20201117 14:47:09.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023753472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023826403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.290" endtime="20201117 14:47:09.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023753472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023826403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.580" endtime="20201117 14:47:09.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.588" endtime="20201117 14:47:09.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.288" endtime="20201117 14:47:09.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.286" endtime="20201117 14:47:09.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.595" level="INFO">${RESULT} = [{'time': 0.023826403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.29309999999983e-05, 'source_diff': 7.29309999999983e-05}, {'time': 0.023943861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:09.592" endtime="20201117 14:47:09.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.608" level="INFO">${ACCURACY} = {'diff': [7.29309999999983e-05, 7.24170000000017e-05, 7.215299999999841e-05, 7.259699999999716e-05, 7.212499999999927e-05, 7.25690000000015e-05, 7.265199999999944e-05, 7.233300000000081e-05, 7.2319000...</msg>
<status status="PASS" starttime="20201117 14:47:09.596" endtime="20201117 14:47:09.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.613" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.612" endtime="20201117 14:47:09.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.615" level="INFO">VALUE: [7.29309999999983e-05, 7.24170000000017e-05, 7.215299999999841e-05, 7.259699999999716e-05, 7.212499999999927e-05, 7.25690000000015e-05, 7.265199999999944e-05, 7.233300000000081e-05, 7.231900000000124e-05, 7.25829999999976e-05, 7.213900000000231e-05, 7.237499999999952e-05, 7.2069000000001e-05, 7.226399999999897e-05, 7.176400000000194e-05, 7.197200000000001e-05, 7.213900000000231e-05, 7.213900000000231e-05, 7.227799999999854e-05, 7.21109999999997e-05, 7.237499999999952e-05, 7.180500000000117e-05, 7.195899999999991e-05, 7.170899999999966e-05, 7.213900000000231e-05, 7.184699999999988e-05, 7.249999999999965e-05, 7.183399999999979e-05, 7.248699999999955e-05, 7.195899999999991e-05, 7.227800000000201e-05, 7.222299999999973e-05, 7.257000000000097e-05, 7.177700000000203e-05, 7.170899999999966e-05, 7.17360000000028e-05, 7.241699999999823e-05, 7.188899999999859e-05, 7.184799999999936e-05, 7.194400000000087e-05, 7.256899999999802e-05, 7.2069000000001e-05, 7.201400000000219e-05, 7.177799999999804e-05, 7.172199999999976e-05, 7.197200000000001e-05, 7.188899999999859e-05, 7.238900000000256e-05, 7.216700000000145e-05, 7.263899999999934e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.614" endtime="20201117 14:47:09.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.609" endtime="20201117 14:47:09.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.618" endtime="20201117 14:47:09.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.621" endtime="20201117 14:47:09.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.620" endtime="20201117 14:47:09.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.617" endtime="20201117 14:47:09.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.254" endtime="20201117 14:47:09.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.252" endtime="20201117 14:47:09.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.251" endtime="20201117 14:47:09.643"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.645" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.653" endtime="20201117 14:47:09.671"></status>
</kw>
<msg timestamp="20201117 14:47:09.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.652" endtime="20201117 14:47:09.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.672" endtime="20201117 14:47:09.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.675" endtime="20201117 14:47:09.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.649" endtime="20201117 14:47:09.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.647" endtime="20201117 14:47:09.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.683" endtime="20201117 14:47:09.970"></status>
</kw>
<msg timestamp="20201117 14:47:09.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023816431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023890486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.682" endtime="20201117 14:47:09.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023816431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023890486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.974" endtime="20201117 14:47:09.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.982" endtime="20201117 14:47:09.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.679" endtime="20201117 14:47:09.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.678" endtime="20201117 14:47:09.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.988" level="INFO">${RESULT} = [{'time': 0.023890486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.405499999999995e-05, 'source_diff': 7.405499999999995e-05}, {'time': 0.024013917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:09.985" endtime="20201117 14:47:09.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.002" level="INFO">${ACCURACY} = {'diff': [7.405499999999995e-05, 7.291699999999873e-05, 7.302799999999929e-05, 7.269500000000109e-05, 7.277799999999904e-05, 7.316699999999898e-05, 7.277799999999904e-05, 7.327700000000006e-05, 7.2695...</msg>
<status status="PASS" starttime="20201117 14:47:09.989" endtime="20201117 14:47:10.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.006" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.005" endtime="20201117 14:47:10.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.008" level="INFO">VALUE: [7.405499999999995e-05, 7.291699999999873e-05, 7.302799999999929e-05, 7.269500000000109e-05, 7.277799999999904e-05, 7.316699999999898e-05, 7.277799999999904e-05, 7.327700000000006e-05, 7.269500000000109e-05, 7.306899999999852e-05, 7.365299999999991e-05, 7.301399999999972e-05, 7.344499999999837e-05, 7.358400000000154e-05, 7.294499999999787e-05, 7.294400000000187e-05, 7.31110000000007e-05, 7.331999999999825e-05, 7.309699999999766e-05, 7.295900000000091e-05, 7.320799999999822e-05, 7.365299999999991e-05, 7.34439999999989e-05, 7.327799999999954e-05, 7.294400000000187e-05, 7.307000000000147e-05, 7.338899999999662e-05, 7.308400000000104e-05, 7.322199999999779e-05, 7.29309999999983e-05, 7.344400000000237e-05, 7.340299999999966e-05, 7.308300000000156e-05, 7.270800000000119e-05, 7.270800000000119e-05, 7.345800000000194e-05, 7.348600000000108e-05, 7.352799999999979e-05, 7.268100000000152e-05, 7.288899999999959e-05, 7.287500000000002e-05, 7.270900000000066e-05, 7.350000000000065e-05, 7.320799999999822e-05, 7.318099999999855e-05, 7.358300000000206e-05, 7.286100000000045e-05, 7.354099999999988e-05, 7.338800000000062e-05, 7.263899999999934e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.007" endtime="20201117 14:47:10.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.003" endtime="20201117 14:47:10.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.017" endtime="20201117 14:47:10.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.020" endtime="20201117 14:47:10.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.019" endtime="20201117 14:47:10.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.015" endtime="20201117 14:47:10.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.646" endtime="20201117 14:47:10.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.644" endtime="20201117 14:47:10.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.643" endtime="20201117 14:47:10.041"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.044" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.052" endtime="20201117 14:47:10.069"></status>
</kw>
<msg timestamp="20201117 14:47:10.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.050" endtime="20201117 14:47:10.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.071" endtime="20201117 14:47:10.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.073" endtime="20201117 14:47:10.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.048" endtime="20201117 14:47:10.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.046" endtime="20201117 14:47:10.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.082" endtime="20201117 14:47:10.388"></status>
</kw>
<msg timestamp="20201117 14:47:10.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023580694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023656153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.081" endtime="20201117 14:47:10.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023580694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023656153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.392" endtime="20201117 14:47:10.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.401" endtime="20201117 14:47:10.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.078" endtime="20201117 14:47:10.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.076" endtime="20201117 14:47:10.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.407" level="INFO">${RESULT} = [{'time': 0.023656153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.545899999999994e-05, 'source_diff': 7.545899999999994e-05}, {'time': 0.023780542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:10.404" endtime="20201117 14:47:10.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.421" level="INFO">${ACCURACY} = {'diff': [7.545899999999994e-05, 7.437500000000152e-05, 7.372199999999829e-05, 7.455500000000045e-05, 7.426400000000097e-05, 7.383399999999832e-05, 7.463899999999787e-05, 7.463900000000134e-05, 7.3861...</msg>
<status status="PASS" starttime="20201117 14:47:10.408" endtime="20201117 14:47:10.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.425" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.424" endtime="20201117 14:47:10.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.428" level="INFO">VALUE: [7.545899999999994e-05, 7.437500000000152e-05, 7.372199999999829e-05, 7.455500000000045e-05, 7.426400000000097e-05, 7.383399999999832e-05, 7.463899999999787e-05, 7.463900000000134e-05, 7.386100000000145e-05, 7.376400000000047e-05, 7.448700000000155e-05, 7.461099999999873e-05, 7.37500000000009e-05, 7.463899999999787e-05, 7.3763000000001e-05, 7.451400000000122e-05, 7.463900000000134e-05, 7.406899999999952e-05, 7.372200000000176e-05, 7.45829999999996e-05, 7.415300000000041e-05, 7.447199999999904e-05, 7.407000000000247e-05, 7.440300000000066e-05, 7.440300000000066e-05, 7.42500000000014e-05, 7.436099999999848e-05, 7.426400000000097e-05, 7.388900000000059e-05, 7.44439999999999e-05, 7.395799999999897e-05, 7.362500000000077e-05, 7.416699999999998e-05, 7.40829999999991e-05, 7.444500000000284e-05, 7.419499999999912e-05, 7.413900000000084e-05, 7.390300000000016e-05, 7.369399999999915e-05, 7.397200000000201e-05, 7.391699999999973e-05, 7.395899999999844e-05, 7.390300000000016e-05, 7.437500000000152e-05, 7.395899999999844e-05, 7.418099999999955e-05, 7.409799999999814e-05, 7.4069999999999e-05, 7.419400000000312e-05, 7.41110000000017e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.426" endtime="20201117 14:47:10.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.421" endtime="20201117 14:47:10.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.431" endtime="20201117 14:47:10.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.435" endtime="20201117 14:47:10.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.433" endtime="20201117 14:47:10.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.430" endtime="20201117 14:47:10.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.044" endtime="20201117 14:47:10.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.042" endtime="20201117 14:47:10.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.042" endtime="20201117 14:47:10.456"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.458" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.466" endtime="20201117 14:47:10.484"></status>
</kw>
<msg timestamp="20201117 14:47:10.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.465" endtime="20201117 14:47:10.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.485" endtime="20201117 14:47:10.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.488" endtime="20201117 14:47:10.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.462" endtime="20201117 14:47:10.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.460" endtime="20201117 14:47:10.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.497" endtime="20201117 14:47:10.784"></status>
</kw>
<msg timestamp="20201117 14:47:10.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023514333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023590306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.495" endtime="20201117 14:47:10.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023514333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023590306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.788" endtime="20201117 14:47:10.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.796" endtime="20201117 14:47:10.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.492" endtime="20201117 14:47:10.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.491" endtime="20201117 14:47:10.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.803" level="INFO">${RESULT} = [{'time': 0.023590306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.597300000000001e-05, 'source_diff': 7.597300000000001e-05}, {'time': 0.023700764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:10.799" endtime="20201117 14:47:10.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.818" level="INFO">${ACCURACY} = {'diff': [7.597300000000001e-05, 7.495799999999997e-05, 7.524999999999893e-05, 7.486099999999898e-05, 7.493000000000083e-05, 7.500000000000215e-05, 7.482000000000322e-05, 7.544399999999743e-05, 7.5249...</msg>
<status status="PASS" starttime="20201117 14:47:10.804" endtime="20201117 14:47:10.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.823" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.822" endtime="20201117 14:47:10.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.825" level="INFO">VALUE: [7.597300000000001e-05, 7.495799999999997e-05, 7.524999999999893e-05, 7.486099999999898e-05, 7.493000000000083e-05, 7.500000000000215e-05, 7.482000000000322e-05, 7.544399999999743e-05, 7.524999999999893e-05, 7.537500000000252e-05, 7.534699999999991e-05, 7.55700000000005e-05, 7.531900000000077e-05, 7.519500000000012e-05, 7.518100000000055e-05, 7.555600000000093e-05, 7.523599999999936e-05, 7.518000000000108e-05, 7.495799999999997e-05, 7.462500000000177e-05, 7.552699999999885e-05, 7.556900000000102e-05, 7.527799999999807e-05, 7.51249999999988e-05, 7.468100000000005e-05, 7.544399999999743e-05, 7.49310000000003e-05, 7.519399999999718e-05, 7.488900000000159e-05, 7.520800000000022e-05, 7.473599999999886e-05, 7.494499999999987e-05, 7.469500000000309e-05, 7.52500000000024e-05, 7.4763999999998e-05, 7.55700000000005e-05, 7.532000000000025e-05, 7.519500000000012e-05, 7.520799999999675e-05, 7.545800000000047e-05, 7.505599999999696e-05, 7.551399999999875e-05, 7.531900000000077e-05, 7.545800000000047e-05, 7.472299999999876e-05, 7.541699999999776e-05, 7.551299999999928e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.538899999999862e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.824" endtime="20201117 14:47:10.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.819" endtime="20201117 14:47:10.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.828" endtime="20201117 14:47:10.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.832" endtime="20201117 14:47:10.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.830" endtime="20201117 14:47:10.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.827" endtime="20201117 14:47:10.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.459" endtime="20201117 14:47:10.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.457" endtime="20201117 14:47:10.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.456" endtime="20201117 14:47:10.853"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.855" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.863" endtime="20201117 14:47:10.881"></status>
</kw>
<msg timestamp="20201117 14:47:10.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.862" endtime="20201117 14:47:10.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.882" endtime="20201117 14:47:10.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.885" endtime="20201117 14:47:10.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.859" endtime="20201117 14:47:10.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.857" endtime="20201117 14:47:10.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.894" endtime="20201117 14:47:11.179"></status>
</kw>
<msg timestamp="20201117 14:47:11.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023516403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02359375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:10.892" endtime="20201117 14:47:11.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023516403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02359375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:11.183" endtime="20201117 14:47:11.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.192" endtime="20201117 14:47:11.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.890" endtime="20201117 14:47:11.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.888" endtime="20201117 14:47:11.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.199" level="INFO">${RESULT} = [{'time': 0.02359375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.734699999999844e-05, 'source_diff': 7.734699999999844e-05}, {'time': 0.023708167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:11.195" endtime="20201117 14:47:11.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.212" level="INFO">${ACCURACY} = {'diff': [7.734699999999844e-05, 7.595900000000044e-05, 7.597300000000001e-05, 7.584799999999989e-05, 7.587499999999955e-05, 7.619400000000165e-05, 7.624999999999993e-05, 7.630600000000168e-05, 7.6693...</msg>
<status status="PASS" starttime="20201117 14:47:11.200" endtime="20201117 14:47:11.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.217" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.216" endtime="20201117 14:47:11.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.219" level="INFO">VALUE: [7.734699999999844e-05, 7.595900000000044e-05, 7.597300000000001e-05, 7.584799999999989e-05, 7.587499999999955e-05, 7.619400000000165e-05, 7.624999999999993e-05, 7.630600000000168e-05, 7.669399999999868e-05, 7.63189999999983e-05, 7.644399999999843e-05, 7.601399999999925e-05, 7.61249999999998e-05, 7.663899999999987e-05, 7.636100000000048e-05, 7.61249999999998e-05, 7.631900000000177e-05, 7.663899999999987e-05, 7.613899999999937e-05, 7.601399999999925e-05, 7.599999999999968e-05, 7.593000000000183e-05, 7.618100000000155e-05, 7.655500000000245e-05, 7.619500000000112e-05, 7.611100000000023e-05, 7.586099999999998e-05, 7.617999999999861e-05, 7.654100000000288e-05, 7.648599999999714e-05, 7.655499999999898e-05, 7.630600000000168e-05, 7.616699999999851e-05, 7.624999999999993e-05, 7.605600000000143e-05, 7.661100000000073e-05, 7.630499999999873e-05, 7.637500000000005e-05, 7.644399999999843e-05, 7.580600000000118e-05, 7.568099999999758e-05, 7.574999999999943e-05, 7.648600000000061e-05, 7.629199999999864e-05, 7.663899999999987e-05, 7.598600000000011e-05, 7.605600000000143e-05, 7.648600000000061e-05, 7.60830000000011e-05, 7.629199999999864e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.218" endtime="20201117 14:47:11.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.213" endtime="20201117 14:47:11.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.222" endtime="20201117 14:47:11.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.226" endtime="20201117 14:47:11.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.224" endtime="20201117 14:47:11.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.220" endtime="20201117 14:47:11.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.856" endtime="20201117 14:47:11.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.854" endtime="20201117 14:47:11.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.853" endtime="20201117 14:47:11.247"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.249" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.257" endtime="20201117 14:47:11.275"></status>
</kw>
<msg timestamp="20201117 14:47:11.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.256" endtime="20201117 14:47:11.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.277" endtime="20201117 14:47:11.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.279" endtime="20201117 14:47:11.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.253" endtime="20201117 14:47:11.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.251" endtime="20201117 14:47:11.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.288" endtime="20201117 14:47:11.575"></status>
</kw>
<msg timestamp="20201117 14:47:11.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023544986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023623278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.286" endtime="20201117 14:47:11.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023544986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023623278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.579" endtime="20201117 14:47:11.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.588" endtime="20201117 14:47:11.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.284" endtime="20201117 14:47:11.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.282" endtime="20201117 14:47:11.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.594" level="INFO">${RESULT} = [{'time': 0.023623278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.829200000000064e-05, 'source_diff': 7.829200000000064e-05}, {'time': 0.023736708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:11.591" endtime="20201117 14:47:11.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.607" level="INFO">${ACCURACY} = {'diff': [7.829200000000064e-05, 7.679099999999967e-05, 7.69029999999997e-05, 7.705599999999896e-05, 7.71250000000008e-05, 7.727800000000007e-05, 7.666700000000248e-05, 7.724999999999746e-05, 7.686100...</msg>
<status status="PASS" starttime="20201117 14:47:11.595" endtime="20201117 14:47:11.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.612" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.611" endtime="20201117 14:47:11.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.614" level="INFO">VALUE: [7.829200000000064e-05, 7.679099999999967e-05, 7.69029999999997e-05, 7.705599999999896e-05, 7.71250000000008e-05, 7.727800000000007e-05, 7.666700000000248e-05, 7.724999999999746e-05, 7.686100000000098e-05, 7.705599999999896e-05, 7.730599999999921e-05, 7.67229999999973e-05, 7.741600000000029e-05, 7.74440000000029e-05, 7.756999999999903e-05, 7.761100000000173e-05, 7.688900000000012e-05, 7.693000000000283e-05, 7.717999999999961e-05, 7.755600000000293e-05, 7.675000000000043e-05, 7.715299999999994e-05, 7.748600000000161e-05, 7.694399999999893e-05, 7.695899999999797e-05, 7.673599999999739e-05, 7.734699999999844e-05, 7.700000000000068e-05, 7.693000000000283e-05, 7.744399999999943e-05, 7.691700000000273e-05, 7.748600000000161e-05, 7.750000000000118e-05, 7.700000000000068e-05, 7.734799999999792e-05, 7.761099999999826e-05, 7.711100000000123e-05, 7.669400000000215e-05, 7.6764e-05, 7.701300000000078e-05, 7.681900000000227e-05, 7.741699999999976e-05, 7.765299999999697e-05, 7.722199999999832e-05, 7.71380000000009e-05, 7.761099999999826e-05, 7.743099999999933e-05, 7.680499999999923e-05, 7.7457999999999e-05, 7.725000000000093e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.613" endtime="20201117 14:47:11.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.608" endtime="20201117 14:47:11.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.617" endtime="20201117 14:47:11.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.621" endtime="20201117 14:47:11.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.619" endtime="20201117 14:47:11.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.616" endtime="20201117 14:47:11.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.250" endtime="20201117 14:47:11.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.248" endtime="20201117 14:47:11.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.247" endtime="20201117 14:47:11.642"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.644" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.652" endtime="20201117 14:47:11.670"></status>
</kw>
<msg timestamp="20201117 14:47:11.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.650" endtime="20201117 14:47:11.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.671" endtime="20201117 14:47:11.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.674" endtime="20201117 14:47:11.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.648" endtime="20201117 14:47:11.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.646" endtime="20201117 14:47:11.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.683" endtime="20201117 14:47:11.985"></status>
</kw>
<msg timestamp="20201117 14:47:11.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023304917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023383833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.681" endtime="20201117 14:47:11.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023304917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023383833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.989" endtime="20201117 14:47:11.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.997" endtime="20201117 14:47:11.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.679" endtime="20201117 14:47:11.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.677" endtime="20201117 14:47:12.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.004" level="INFO">${RESULT} = [{'time': 0.023383833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.891599999999832e-05, 'source_diff': 7.891599999999832e-05}, {'time': 0.02350125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:12.001" endtime="20201117 14:47:12.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.017" level="INFO">${ACCURACY} = {'diff': [7.891599999999832e-05, 7.798600000000211e-05, 7.772200000000229e-05, 7.847200000000304e-05, 7.837500000000205e-05, 7.773700000000133e-05, 7.769499999999915e-05, 7.830600000000021e-05, 7.8055...</msg>
<status status="PASS" starttime="20201117 14:47:12.005" endtime="20201117 14:47:12.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.021" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.020" endtime="20201117 14:47:12.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.024" level="INFO">VALUE: [7.891599999999832e-05, 7.798600000000211e-05, 7.772200000000229e-05, 7.847200000000304e-05, 7.837500000000205e-05, 7.773700000000133e-05, 7.769499999999915e-05, 7.830600000000021e-05, 7.805599999999996e-05, 7.843000000000086e-05, 7.801400000000125e-05, 7.836099999999901e-05, 7.836099999999901e-05, 7.805500000000049e-05, 7.850000000000218e-05, 7.84169999999973e-05, 7.80969999999992e-05, 7.801400000000125e-05, 7.775000000000143e-05, 7.798599999999864e-05, 7.794399999999993e-05, 7.834699999999944e-05, 7.804199999999692e-05, 7.848600000000261e-05, 7.82640000000015e-05, 7.834699999999944e-05, 7.805599999999996e-05, 7.848599999999914e-05, 7.811100000000223e-05, 7.768000000000011e-05, 7.833299999999987e-05, 7.811199999999824e-05, 7.843099999999686e-05, 7.848599999999914e-05, 7.791700000000026e-05, 7.788900000000112e-05, 7.78189999999998e-05, 7.830600000000021e-05, 7.831999999999978e-05, 7.816600000000104e-05, 7.800000000000168e-05, 7.829100000000117e-05, 7.822200000000279e-05, 7.816600000000104e-05, 7.787500000000155e-05, 7.836099999999901e-05, 7.791700000000026e-05, 7.834699999999944e-05, 7.861099999999926e-05, 7.824999999999846e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.022" endtime="20201117 14:47:12.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.018" endtime="20201117 14:47:12.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.027" endtime="20201117 14:47:12.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.030" endtime="20201117 14:47:12.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.029" endtime="20201117 14:47:12.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.025" endtime="20201117 14:47:12.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.645" endtime="20201117 14:47:12.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.643" endtime="20201117 14:47:12.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.642" endtime="20201117 14:47:12.051"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.054" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.062" endtime="20201117 14:47:12.080"></status>
</kw>
<msg timestamp="20201117 14:47:12.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.061" endtime="20201117 14:47:12.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.081" endtime="20201117 14:47:12.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.084" endtime="20201117 14:47:12.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.058" endtime="20201117 14:47:12.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.056" endtime="20201117 14:47:12.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.092" endtime="20201117 14:47:12.378"></status>
</kw>
<msg timestamp="20201117 14:47:12.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023741306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023821167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.091" endtime="20201117 14:47:12.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023741306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023821167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.382" endtime="20201117 14:47:12.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.390" endtime="20201117 14:47:12.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.088" endtime="20201117 14:47:12.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.087" endtime="20201117 14:47:12.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.397" level="INFO">${RESULT} = [{'time': 0.023821167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.986100000000051e-05, 'source_diff': 7.986100000000051e-05}, {'time': 0.023943569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:12.394" endtime="20201117 14:47:12.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.411" level="INFO">${ACCURACY} = {'diff': [7.986100000000051e-05, 7.893000000000136e-05, 7.94169999999983e-05, 7.909799999999967e-05, 7.873599999999939e-05, 7.904100000000192e-05, 7.872199999999982e-05, 7.925000000000293e-05, 7.92920...</msg>
<status status="PASS" starttime="20201117 14:47:12.398" endtime="20201117 14:47:12.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.416" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.415" endtime="20201117 14:47:12.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.418" level="INFO">VALUE: [7.986100000000051e-05, 7.893000000000136e-05, 7.94169999999983e-05, 7.909799999999967e-05, 7.873599999999939e-05, 7.904100000000192e-05, 7.872199999999982e-05, 7.925000000000293e-05, 7.929200000000164e-05, 7.875000000000243e-05, 7.874999999999896e-05, 7.954099999999895e-05, 7.918000000000161e-05, 7.876299999999906e-05, 7.936100000000001e-05, 7.865200000000197e-05, 7.934700000000044e-05, 7.934699999999698e-05, 7.938899999999915e-05, 7.872199999999982e-05, 7.927800000000207e-05, 7.880599999999724e-05, 7.911099999999976e-05, 7.911099999999976e-05, 7.911099999999976e-05, 7.951400000000275e-05, 7.90970000000002e-05, 7.93190000000013e-05, 7.87229999999993e-05, 7.898599999999964e-05, 7.897200000000007e-05, 7.947300000000004e-05, 7.87229999999993e-05, 7.934700000000044e-05, 7.94719999999971e-05, 7.944399999999796e-05, 7.865299999999797e-05, 7.932000000000078e-05, 7.927800000000207e-05, 7.948600000000014e-05, 7.961100000000026e-05, 7.887500000000255e-05, 7.94030000000022e-05, 7.922200000000032e-05, 7.865299999999797e-05, 7.886100000000298e-05, 7.897200000000007e-05, 7.933400000000035e-05, 7.92909999999987e-05, 7.873599999999939e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.417" endtime="20201117 14:47:12.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.412" endtime="20201117 14:47:12.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.421" endtime="20201117 14:47:12.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.425" endtime="20201117 14:47:12.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.423" endtime="20201117 14:47:12.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.420" endtime="20201117 14:47:12.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.054" endtime="20201117 14:47:12.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.053" endtime="20201117 14:47:12.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.052" endtime="20201117 14:47:12.446"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.449" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.456" endtime="20201117 14:47:12.474"></status>
</kw>
<msg timestamp="20201117 14:47:12.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.455" endtime="20201117 14:47:12.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.476" endtime="20201117 14:47:12.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.478" endtime="20201117 14:47:12.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.452" endtime="20201117 14:47:12.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.450" endtime="20201117 14:47:12.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.487" endtime="20201117 14:47:12.773"></status>
</kw>
<msg timestamp="20201117 14:47:12.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023729194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023810306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.485" endtime="20201117 14:47:12.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023729194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023810306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.778" endtime="20201117 14:47:12.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.786" endtime="20201117 14:47:12.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.483" endtime="20201117 14:47:12.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.481" endtime="20201117 14:47:12.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.792" level="INFO">${RESULT} = [{'time': 0.023810306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.111200000000124e-05, 'source_diff': 8.111200000000124e-05}, {'time': 0.023939667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:12.789" endtime="20201117 14:47:12.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.805" level="INFO">${ACCURACY} = {'diff': [8.111200000000124e-05, 7.997300000000054e-05, 8.037500000000058e-05, 8.01389999999999e-05, 7.979100000000267e-05, 8.0458000000002e-05, 8.004100000000292e-05, 8.061100000000126e-05, 8.0556000...</msg>
<status status="PASS" starttime="20201117 14:47:12.793" endtime="20201117 14:47:12.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.810" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.809" endtime="20201117 14:47:12.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.812" level="INFO">VALUE: [8.111200000000124e-05, 7.997300000000054e-05, 8.037500000000058e-05, 8.01389999999999e-05, 7.979100000000267e-05, 8.0458000000002e-05, 8.004100000000292e-05, 8.061100000000126e-05, 8.055600000000246e-05, 8.026400000000003e-05, 7.983300000000138e-05, 7.986100000000051e-05, 7.979200000000214e-05, 8.023600000000089e-05, 7.994399999999846e-05, 7.992999999999889e-05, 8.015299999999947e-05, 7.966699999999854e-05, 8.055599999999899e-05, 8.034700000000145e-05, 8.041599999999982e-05, 8.034699999999798e-05, 8.044399999999896e-05, 8.015299999999947e-05, 7.988899999999965e-05, 7.993000000000236e-05, 8.012500000000033e-05, 7.993099999999836e-05, 7.97779999999991e-05, 8.019399999999871e-05, 7.973600000000039e-05, 8.004199999999892e-05, 8.019400000000218e-05, 7.972200000000082e-05, 8.009699999999773e-05, 8.040299999999972e-05, 7.98190000000018e-05, 8.017999999999914e-05, 7.980499999999877e-05, 8.047300000000104e-05, 8.026400000000003e-05, 7.972200000000082e-05, 8.04169999999993e-05, 7.99169999999988e-05, 8.006899999999859e-05, 8.02779999999996e-05, 8.000000000000021e-05, 8.048600000000114e-05, 7.974999999999996e-05, 8.043100000000233e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.811" endtime="20201117 14:47:12.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.806" endtime="20201117 14:47:12.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.816" endtime="20201117 14:47:12.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.819" endtime="20201117 14:47:12.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.817" endtime="20201117 14:47:12.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.814" endtime="20201117 14:47:12.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.449" endtime="20201117 14:47:12.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.447" endtime="20201117 14:47:12.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.447" endtime="20201117 14:47:12.840"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.842" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.850" endtime="20201117 14:47:12.868"></status>
</kw>
<msg timestamp="20201117 14:47:12.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.849" endtime="20201117 14:47:12.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.869" endtime="20201117 14:47:12.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.872" endtime="20201117 14:47:12.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.846" endtime="20201117 14:47:12.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.844" endtime="20201117 14:47:12.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.881" endtime="20201117 14:47:13.167"></status>
</kw>
<msg timestamp="20201117 14:47:13.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023246125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023328236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.879" endtime="20201117 14:47:13.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023246125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023328236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.171" endtime="20201117 14:47:13.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.179" endtime="20201117 14:47:13.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.877" endtime="20201117 14:47:13.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.875" endtime="20201117 14:47:13.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.186" level="INFO">${RESULT} = [{'time': 0.023328236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.21109999999993e-05, 'source_diff': 8.21109999999993e-05}, {'time': 0.023455597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:13.183" endtime="20201117 14:47:13.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.199" level="INFO">${ACCURACY} = {'diff': [8.21109999999993e-05, 8.138900000000115e-05, 8.14719999999991e-05, 8.084699999999848e-05, 8.111100000000177e-05, 8.14170000000003e-05, 8.084700000000195e-05, 8.086100000000151e-05, 8.1167000...</msg>
<status status="PASS" starttime="20201117 14:47:13.187" endtime="20201117 14:47:13.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.204" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.203" endtime="20201117 14:47:13.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.206" level="INFO">VALUE: [8.21109999999993e-05, 8.138900000000115e-05, 8.14719999999991e-05, 8.084699999999848e-05, 8.111100000000177e-05, 8.14170000000003e-05, 8.084700000000195e-05, 8.086100000000151e-05, 8.116700000000004e-05, 8.097200000000207e-05, 8.084799999999795e-05, 8.154199999999695e-05, 8.120799999999928e-05, 8.155599999999999e-05, 8.125000000000146e-05, 8.161200000000174e-05, 8.120799999999928e-05, 8.083300000000238e-05, 8.097200000000207e-05, 8.079199999999967e-05, 8.080499999999977e-05, 8.102700000000088e-05, 8.087500000000108e-05, 8.083300000000238e-05, 8.127699999999766e-05, 8.13329999999994e-05, 8.122200000000232e-05, 8.081999999999881e-05, 8.130500000000027e-05, 8.154200000000042e-05, 8.084699999999848e-05, 8.152800000000085e-05, 8.129200000000017e-05, 8.079199999999967e-05, 8.095799999999903e-05, 8.127799999999713e-05, 8.072199999999835e-05, 8.159699999999923e-05, 8.140300000000072e-05, 8.159699999999923e-05, 8.134699999999898e-05, 8.14170000000003e-05, 8.149999999999824e-05, 8.108299999999916e-05, 8.118000000000014e-05, 8.109699999999873e-05, 8.091600000000032e-05, 8.11109999999983e-05, 8.097200000000207e-05, 8.161100000000227e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.205" endtime="20201117 14:47:13.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.200" endtime="20201117 14:47:13.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.209" endtime="20201117 14:47:13.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.213" endtime="20201117 14:47:13.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.211" endtime="20201117 14:47:13.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.208" endtime="20201117 14:47:13.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.843" endtime="20201117 14:47:13.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.841" endtime="20201117 14:47:13.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.840" endtime="20201117 14:47:13.234"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.236" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.244" endtime="20201117 14:47:13.262"></status>
</kw>
<msg timestamp="20201117 14:47:13.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.243" endtime="20201117 14:47:13.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.264" endtime="20201117 14:47:13.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.266" endtime="20201117 14:47:13.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.240" endtime="20201117 14:47:13.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.238" endtime="20201117 14:47:13.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.275" endtime="20201117 14:47:13.561"></status>
</kw>
<msg timestamp="20201117 14:47:13.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023284958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023368069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.273" endtime="20201117 14:47:13.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023284958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023368069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.565" endtime="20201117 14:47:13.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.573" endtime="20201117 14:47:13.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.271" endtime="20201117 14:47:13.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.269" endtime="20201117 14:47:13.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.580" level="INFO">${RESULT} = [{'time': 0.023368069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.31110000000003e-05, 'source_diff': 8.31110000000003e-05}, {'time': 0.023501389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:13.577" endtime="20201117 14:47:13.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.594" level="INFO">${ACCURACY} = {'diff': [8.31110000000003e-05, 8.212500000000234e-05, 8.22910000000017e-05, 8.193000000000089e-05, 8.234699999999998e-05, 8.19719999999996e-05, 8.255499999999805e-05, 8.26109999999998e-05, 8.24160000...</msg>
<status status="PASS" starttime="20201117 14:47:13.581" endtime="20201117 14:47:13.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.599" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.598" endtime="20201117 14:47:13.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.601" level="INFO">VALUE: [8.31110000000003e-05, 8.212500000000234e-05, 8.22910000000017e-05, 8.193000000000089e-05, 8.234699999999998e-05, 8.19719999999996e-05, 8.255499999999805e-05, 8.26109999999998e-05, 8.241600000000182e-05, 8.236199999999902e-05, 8.234699999999998e-05, 8.198599999999917e-05, 8.224999999999899e-05, 8.255499999999805e-05, 8.211200000000224e-05, 8.252799999999838e-05, 8.258400000000013e-05, 8.186099999999905e-05, 8.204100000000145e-05, 8.245800000000053e-05, 8.234699999999998e-05, 8.208300000000016e-05, 8.202800000000135e-05, 8.173599999999892e-05, 8.234799999999945e-05, 8.176399999999806e-05, 8.170799999999978e-05, 8.169499999999968e-05, 8.184699999999948e-05, 8.24720000000001e-05, 8.259700000000023e-05, 8.170799999999978e-05, 8.234699999999998e-05, 8.219400000000071e-05, 8.213899999999844e-05, 8.166700000000054e-05, 8.21109999999993e-05, 8.193100000000036e-05, 8.222299999999932e-05, 8.17919999999972e-05, 8.220800000000028e-05, 8.215300000000147e-05, 8.204200000000092e-05, 8.177699999999816e-05, 8.190300000000122e-05, 8.231900000000084e-05, 8.204100000000145e-05, 8.166600000000107e-05, 8.222299999999932e-05, 8.2152999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.600" endtime="20201117 14:47:13.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.595" endtime="20201117 14:47:13.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.604" endtime="20201117 14:47:13.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.607" endtime="20201117 14:47:13.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.606" endtime="20201117 14:47:13.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.602" endtime="20201117 14:47:13.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.237" endtime="20201117 14:47:13.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.235" endtime="20201117 14:47:13.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.234" endtime="20201117 14:47:13.628"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.631" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.639" endtime="20201117 14:47:13.657"></status>
</kw>
<msg timestamp="20201117 14:47:13.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.637" endtime="20201117 14:47:13.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.658" endtime="20201117 14:47:13.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.660" endtime="20201117 14:47:13.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.635" endtime="20201117 14:47:13.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.633" endtime="20201117 14:47:13.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.669" endtime="20201117 14:47:13.955"></status>
</kw>
<msg timestamp="20201117 14:47:13.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02331175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023396194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:13.668" endtime="20201117 14:47:13.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02331175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023396194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:13.959" endtime="20201117 14:47:13.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.968" endtime="20201117 14:47:13.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.665" endtime="20201117 14:47:13.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.664" endtime="20201117 14:47:13.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.974" level="INFO">${RESULT} = [{'time': 0.023396194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.444399999999949e-05, 'source_diff': 8.444399999999949e-05}, {'time': 0.023531542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:13.971" endtime="20201117 14:47:13.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.989" level="INFO">${ACCURACY} = {'diff': [8.444399999999949e-05, 8.345899999999754e-05, 8.286100000000005e-05, 8.29170000000018e-05, 8.351399999999981e-05, 8.352799999999938e-05, 8.32919999999987e-05, 8.345899999999754e-05, 8.347200...</msg>
<status status="PASS" starttime="20201117 14:47:13.975" endtime="20201117 14:47:13.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.993" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.992" endtime="20201117 14:47:13.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.996" level="INFO">VALUE: [8.444399999999949e-05, 8.345899999999754e-05, 8.286100000000005e-05, 8.29170000000018e-05, 8.351399999999981e-05, 8.352799999999938e-05, 8.32919999999987e-05, 8.345899999999754e-05, 8.34720000000011e-05, 8.27780000000021e-05, 8.265300000000197e-05, 8.29170000000018e-05, 8.320799999999781e-05, 8.359700000000123e-05, 8.265300000000197e-05, 8.320900000000075e-05, 8.302800000000235e-05, 8.315300000000247e-05, 8.265199999999903e-05, 8.27919999999982e-05, 8.273599999999992e-05, 8.287499999999962e-05, 8.29309999999979e-05, 8.327699999999966e-05, 8.318099999999815e-05, 8.361200000000027e-05, 8.262499999999937e-05, 8.294500000000093e-05, 8.327699999999966e-05, 8.319400000000171e-05, 8.345800000000153e-05, 8.302799999999888e-05, 8.34720000000011e-05, 8.274999999999949e-05, 8.362500000000037e-05, 8.34720000000011e-05, 8.301399999999931e-05, 8.342999999999892e-05, 8.336200000000002e-05, 8.3152999999999e-05, 8.280600000000124e-05, 8.33330000000014e-05, 8.277799999999863e-05, 8.33049999999988e-05, 8.315300000000247e-05, 8.341599999999935e-05, 8.36110000000008e-05, 8.344399999999849e-05, 8.270800000000078e-05, 8.336100000000055e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.994" endtime="20201117 14:47:13.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.990" endtime="20201117 14:47:13.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.999" endtime="20201117 14:47:14.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.002" endtime="20201117 14:47:14.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.001" endtime="20201117 14:47:14.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.997" endtime="20201117 14:47:14.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.631" endtime="20201117 14:47:14.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.630" endtime="20201117 14:47:14.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.629" endtime="20201117 14:47:14.023"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.025" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.033" endtime="20201117 14:47:14.051"></status>
</kw>
<msg timestamp="20201117 14:47:14.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.032" endtime="20201117 14:47:14.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.053" endtime="20201117 14:47:14.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.055" endtime="20201117 14:47:14.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.029" endtime="20201117 14:47:14.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.027" endtime="20201117 14:47:14.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.064" endtime="20201117 14:47:14.351"></status>
</kw>
<msg timestamp="20201117 14:47:14.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023258292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023343889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.062" endtime="20201117 14:47:14.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023258292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023343889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.355" endtime="20201117 14:47:14.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.363" endtime="20201117 14:47:14.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.060" endtime="20201117 14:47:14.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.058" endtime="20201117 14:47:14.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.369" level="INFO">${RESULT} = [{'time': 0.023343889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.559699999999976e-05, 'source_diff': 8.559699999999976e-05}, {'time': 0.023480236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:14.366" endtime="20201117 14:47:14.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:14.383" level="INFO">${ACCURACY} = {'diff': [8.559699999999976e-05, 8.365300000000297e-05, 8.422199999999838e-05, 8.458299999999919e-05, 8.437500000000112e-05, 8.42370000000009e-05, 8.39720000000016e-05, 8.462500000000137e-05, 8.400000...</msg>
<status status="PASS" starttime="20201117 14:47:14.370" endtime="20201117 14:47:14.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.387" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:47:14.386" endtime="20201117 14:47:14.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.389" level="INFO">VALUE: [8.559699999999976e-05, 8.365300000000297e-05, 8.422199999999838e-05, 8.458299999999919e-05, 8.437500000000112e-05, 8.42370000000009e-05, 8.39720000000016e-05, 8.462500000000137e-05, 8.400000000000074e-05, 8.459700000000223e-05, 8.422199999999838e-05, 8.427800000000013e-05, 8.384700000000148e-05, 8.375000000000049e-05, 8.372199999999788e-05, 8.401400000000031e-05, 8.434800000000145e-05, 8.422199999999838e-05, 8.420800000000228e-05, 8.437500000000112e-05, 8.391699999999933e-05, 8.375000000000049e-05, 8.42919999999997e-05, 8.377799999999963e-05, 8.373600000000092e-05, 8.46110000000018e-05, 8.438900000000069e-05, 8.390200000000028e-05, 8.41110000000013e-05, 8.447199999999863e-05, 8.441600000000035e-05, 8.427800000000013e-05, 8.451400000000081e-05, 8.387500000000062e-05, 8.420800000000228e-05, 8.377700000000016e-05, 8.404199999999945e-05, 8.383299999999844e-05, 8.380600000000224e-05, 8.411099999999783e-05, 8.426400000000056e-05, 8.455599999999952e-05, 8.46110000000018e-05, 8.411099999999783e-05, 8.370800000000178e-05, 8.383299999999844e-05, 8.377799999999963e-05, 8.402799999999988e-05, 8.365300000000297e-05, 8.36659999999996e-05]</msg>
<status status="PASS" starttime="20201117 14:47:14.388" endtime="20201117 14:47:14.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.384" endtime="20201117 14:47:14.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.392" endtime="20201117 14:47:14.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.396" endtime="20201117 14:47:14.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.394" endtime="20201117 14:47:14.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.391" endtime="20201117 14:47:14.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.026" endtime="20201117 14:47:14.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.024" endtime="20201117 14:47:14.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.024" endtime="20201117 14:47:14.417"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.419" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.427" endtime="20201117 14:47:14.445"></status>
</kw>
<msg timestamp="20201117 14:47:14.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.426" endtime="20201117 14:47:14.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.447" endtime="20201117 14:47:14.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.449" endtime="20201117 14:47:14.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.423" endtime="20201117 14:47:14.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.421" endtime="20201117 14:47:14.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.458" endtime="20201117 14:47:14.745"></status>
</kw>
<msg timestamp="20201117 14:47:14.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023313542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023400125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.457" endtime="20201117 14:47:14.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023313542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023400125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.749" endtime="20201117 14:47:14.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.757" endtime="20201117 14:47:14.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.454" endtime="20201117 14:47:14.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.452" endtime="20201117 14:47:14.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.764" level="INFO">${RESULT} = [{'time': 0.023400125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.658300000000119e-05, 'source_diff': 8.658300000000119e-05}, {'time': 0.023521542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:14.760" endtime="20201117 14:47:14.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:14.777" level="INFO">${ACCURACY} = {'diff': [8.658300000000119e-05, 8.527800000000113e-05, 8.484700000000248e-05, 8.491700000000033e-05, 8.463900000000094e-05, 8.516700000000058e-05, 8.495799999999956e-05, 8.54720000000031e-05, 8.54030...</msg>
<status status="PASS" starttime="20201117 14:47:14.765" endtime="20201117 14:47:14.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.781" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:47:14.780" endtime="20201117 14:47:14.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.784" level="INFO">VALUE: [8.658300000000119e-05, 8.527800000000113e-05, 8.484700000000248e-05, 8.491700000000033e-05, 8.463900000000094e-05, 8.516700000000058e-05, 8.495799999999956e-05, 8.54720000000031e-05, 8.540300000000126e-05, 8.544499999999997e-05, 8.522200000000285e-05, 8.522199999999938e-05, 8.472300000000182e-05, 8.551399999999834e-05, 8.470799999999931e-05, 8.540300000000126e-05, 8.558300000000019e-05, 8.480599999999977e-05, 8.545800000000006e-05, 8.554199999999748e-05, 8.5153000000001e-05, 8.506900000000012e-05, 8.509700000000273e-05, 8.537500000000212e-05, 8.526400000000156e-05, 8.495799999999956e-05, 8.541700000000083e-05, 8.519400000000024e-05, 8.501399999999784e-05, 8.522300000000232e-05, 8.490300000000076e-05, 8.499999999999827e-05, 8.5153000000001e-05, 8.554200000000095e-05, 8.522199999999938e-05, 8.536099999999908e-05, 8.46110000000018e-05, 8.554100000000148e-05, 8.472199999999888e-05, 8.53050000000008e-05, 8.490300000000076e-05, 8.498600000000217e-05, 8.49720000000026e-05, 8.468000000000017e-05, 8.472199999999888e-05, 8.54859999999992e-05, 8.484799999999848e-05, 8.523599999999895e-05, 8.494399999999999e-05, 8.552800000000138e-05]</msg>
<status status="PASS" starttime="20201117 14:47:14.782" endtime="20201117 14:47:14.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.778" endtime="20201117 14:47:14.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.787" endtime="20201117 14:47:14.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.790" endtime="20201117 14:47:14.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.789" endtime="20201117 14:47:14.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.785" endtime="20201117 14:47:14.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.420" endtime="20201117 14:47:14.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.418" endtime="20201117 14:47:14.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.417" endtime="20201117 14:47:14.811"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.814" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.822" endtime="20201117 14:47:14.840"></status>
</kw>
<msg timestamp="20201117 14:47:14.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.820" endtime="20201117 14:47:14.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.842" endtime="20201117 14:47:14.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.844" endtime="20201117 14:47:14.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.817" endtime="20201117 14:47:14.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.815" endtime="20201117 14:47:14.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.855" endtime="20201117 14:47:15.142"></status>
</kw>
<msg timestamp="20201117 14:47:15.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023912917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023999833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.853" endtime="20201117 14:47:15.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023912917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023999833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.146" endtime="20201117 14:47:15.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.155" endtime="20201117 14:47:15.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.850" endtime="20201117 14:47:15.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.848" endtime="20201117 14:47:15.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.161" level="INFO">${RESULT} = [{'time': 0.023999833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.691600000000285e-05, 'source_diff': 8.691600000000285e-05}, {'time': 0.024132236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:15.158" endtime="20201117 14:47:15.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.175" level="INFO">${ACCURACY} = {'diff': [8.691600000000285e-05, 8.633300000000094e-05, 8.602800000000188e-05, 8.66669999999986e-05, 8.64860000000002e-05, 8.590300000000176e-05, 8.584799999999948e-05, 8.606900000000112e-05, 8.629099...</msg>
<status status="PASS" starttime="20201117 14:47:15.162" endtime="20201117 14:47:15.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.179" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.178" endtime="20201117 14:47:15.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.181" level="INFO">VALUE: [8.691600000000285e-05, 8.633300000000094e-05, 8.602800000000188e-05, 8.66669999999986e-05, 8.64860000000002e-05, 8.590300000000176e-05, 8.584799999999948e-05, 8.606900000000112e-05, 8.629099999999876e-05, 8.665299999999904e-05, 8.654200000000195e-05, 8.64310000000014e-05, 8.629199999999823e-05, 8.579099999999826e-05, 8.663899999999947e-05, 8.57920000000012e-05, 8.622200000000038e-05, 8.611099999999983e-05, 8.615299999999854e-05, 8.620900000000029e-05, 8.573600000000292e-05, 8.616599999999863e-05, 8.654200000000195e-05, 8.609700000000026e-05, 8.633300000000094e-05, 8.645800000000106e-05, 8.59859999999997e-05, 8.602799999999841e-05, 8.566700000000108e-05, 8.630499999999833e-05, 8.622200000000038e-05, 8.565199999999856e-05, 8.602799999999841e-05, 8.658299999999772e-05, 8.645800000000106e-05, 8.5847e-05, 8.574999999999902e-05, 8.658300000000119e-05, 8.602799999999841e-05, 8.604199999999798e-05, 8.588899999999872e-05, 8.640300000000226e-05, 8.569500000000022e-05, 8.623599999999995e-05, 8.570800000000031e-05, 8.627799999999866e-05, 8.588899999999872e-05, 8.63189999999979e-05, 8.655599999999805e-05, 8.661100000000033e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.180" endtime="20201117 14:47:15.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.175" endtime="20201117 14:47:15.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.184" endtime="20201117 14:47:15.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.188" endtime="20201117 14:47:15.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.186" endtime="20201117 14:47:15.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.183" endtime="20201117 14:47:15.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.814" endtime="20201117 14:47:15.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.812" endtime="20201117 14:47:15.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.811" endtime="20201117 14:47:15.215"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.217" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.225" endtime="20201117 14:47:15.243"></status>
</kw>
<msg timestamp="20201117 14:47:15.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.224" endtime="20201117 14:47:15.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.245" endtime="20201117 14:47:15.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.247" endtime="20201117 14:47:15.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.221" endtime="20201117 14:47:15.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.219" endtime="20201117 14:47:15.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.256" endtime="20201117 14:47:15.543"></status>
</kw>
<msg timestamp="20201117 14:47:15.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029401778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029489556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.255" endtime="20201117 14:47:15.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029401778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029489556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.547" endtime="20201117 14:47:15.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.555" endtime="20201117 14:47:15.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.252" endtime="20201117 14:47:15.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.250" endtime="20201117 14:47:15.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.562" level="INFO">${RESULT} = [{'time': 0.029489556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.777800000000016e-05, 'source_diff': 8.777800000000016e-05}, {'time': 0.029623889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:15.558" endtime="20201117 14:47:15.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.576" level="INFO">${ACCURACY} = {'diff': [8.777800000000016e-05, 8.66249999999999e-05, 8.688900000000319e-05, 8.668099999999818e-05, 8.758300000000219e-05, 8.661100000000033e-05, 8.720799999999834e-05, 8.676399999999959e-05, 8.72370...</msg>
<status status="PASS" starttime="20201117 14:47:15.562" endtime="20201117 14:47:15.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.581" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.580" endtime="20201117 14:47:15.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.583" level="INFO">VALUE: [8.777800000000016e-05, 8.66249999999999e-05, 8.688900000000319e-05, 8.668099999999818e-05, 8.758300000000219e-05, 8.661100000000033e-05, 8.720799999999834e-05, 8.676399999999959e-05, 8.723700000000043e-05, 8.736100000000108e-05, 8.752799999999991e-05, 8.688900000000319e-05, 8.663899999999947e-05, 8.736100000000108e-05, 8.740299999999632e-05, 8.72920000000027e-05, 8.726400000000356e-05, 8.761100000000133e-05, 8.718100000000562e-05, 8.71669999999991e-05, 8.663899999999947e-05, 8.676399999999612e-05, 8.718000000000614e-05, 8.669500000000468e-05, 8.669399999999827e-05, 8.732000000000184e-05, 8.687500000000015e-05, 8.745799999999859e-05, 8.713800000000049e-05, 8.686100000000058e-05, 8.724999999999705e-05, 8.697199999999766e-05, 8.727800000000313e-05, 8.708399999999422e-05, 8.708300000000169e-05, 8.732000000000184e-05, 8.687500000000015e-05, 8.757000000000209e-05, 8.687500000000015e-05, 8.66249999999999e-05, 8.688899999999972e-05, 8.670799999999784e-05, 8.743099999999893e-05, 8.679100000000273e-05, 8.706900000000212e-05, 8.726400000000356e-05, 8.722200000000485e-05, 8.751399999999687e-05, 8.706900000000212e-05, 8.688899999999972e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.582" endtime="20201117 14:47:15.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.577" endtime="20201117 14:47:15.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.587" endtime="20201117 14:47:15.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.590" endtime="20201117 14:47:15.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.588" endtime="20201117 14:47:15.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.585" endtime="20201117 14:47:15.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.218" endtime="20201117 14:47:15.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.216" endtime="20201117 14:47:15.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.215" endtime="20201117 14:47:15.611"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.614" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.623" endtime="20201117 14:47:15.641"></status>
</kw>
<msg timestamp="20201117 14:47:15.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.621" endtime="20201117 14:47:15.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.643" endtime="20201117 14:47:15.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.645" endtime="20201117 14:47:15.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.618" endtime="20201117 14:47:15.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.616" endtime="20201117 14:47:15.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.654" endtime="20201117 14:47:15.940"></status>
</kw>
<msg timestamp="20201117 14:47:15.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024997319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025086486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.652" endtime="20201117 14:47:15.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024997319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025086486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.944" endtime="20201117 14:47:15.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.952" endtime="20201117 14:47:15.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.650" endtime="20201117 14:47:15.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.648" endtime="20201117 14:47:15.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.959" level="INFO">${RESULT} = [{'time': 0.025086486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.91670000000011e-05, 'source_diff': 8.91670000000011e-05}, {'time': 0.025218861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:15.955" endtime="20201117 14:47:15.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.972" level="INFO">${ACCURACY} = {'diff': [8.91670000000011e-05, 8.765300000000004e-05, 8.759700000000176e-05, 8.801400000000084e-05, 8.794500000000247e-05, 8.788900000000072e-05, 8.811100000000183e-05, 8.791699999999986e-05, 8.83890...</msg>
<status status="PASS" starttime="20201117 14:47:15.959" endtime="20201117 14:47:15.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.976" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.975" endtime="20201117 14:47:15.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.979" level="INFO">VALUE: [8.91670000000011e-05, 8.765300000000004e-05, 8.759700000000176e-05, 8.801400000000084e-05, 8.794500000000247e-05, 8.788900000000072e-05, 8.811100000000183e-05, 8.791699999999986e-05, 8.838900000000122e-05, 8.795799999999909e-05, 8.819399999999977e-05, 8.83189999999999e-05, 8.858299999999972e-05, 8.819399999999977e-05, 8.805599999999955e-05, 8.855500000000058e-05, 8.83189999999999e-05, 8.769499999999875e-05, 8.815200000000106e-05, 8.805500000000008e-05, 8.781900000000287e-05, 8.783299999999897e-05, 8.833399999999894e-05, 8.841600000000088e-05, 8.812499999999793e-05, 8.841700000000036e-05, 8.837500000000165e-05, 8.776400000000059e-05, 8.795800000000256e-05, 8.794399999999952e-05, 8.76250000000009e-05, 8.777700000000069e-05, 8.858299999999972e-05, 8.779199999999973e-05, 8.809699999999879e-05, 8.820900000000229e-05, 8.801400000000084e-05, 8.826399999999762e-05, 8.784700000000201e-05, 8.769500000000222e-05, 8.788900000000072e-05, 8.815299999999707e-05, 8.833399999999894e-05, 8.833299999999947e-05, 8.787499999999768e-05, 8.84449999999995e-05, 8.805500000000008e-05, 8.819499999999578e-05, 8.765300000000004e-05, 8.859700000000276e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.977" endtime="20201117 14:47:15.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.973" endtime="20201117 14:47:15.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.982" endtime="20201117 14:47:15.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.985" endtime="20201117 14:47:16.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.984" endtime="20201117 14:47:16.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.980" endtime="20201117 14:47:16.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.615" endtime="20201117 14:47:16.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.612" endtime="20201117 14:47:16.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.612" endtime="20201117 14:47:16.007"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.009" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.017" endtime="20201117 14:47:16.035"></status>
</kw>
<msg timestamp="20201117 14:47:16.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.015" endtime="20201117 14:47:16.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.037" endtime="20201117 14:47:16.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.039" endtime="20201117 14:47:16.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.013" endtime="20201117 14:47:16.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.011" endtime="20201117 14:47:16.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.048" endtime="20201117 14:47:16.334"></status>
</kw>
<msg timestamp="20201117 14:47:16.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02328675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023376431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:16.046" endtime="20201117 14:47:16.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02328675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023376431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:16.339" endtime="20201117 14:47:16.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.347" endtime="20201117 14:47:16.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.044" endtime="20201117 14:47:16.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.042" endtime="20201117 14:47:16.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:16.353" level="INFO">${RESULT} = [{'time': 0.023376431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.968100000000118e-05, 'source_diff': 8.968100000000118e-05}, {'time': 0.02351875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:16.350" endtime="20201117 14:47:16.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:16.367" level="INFO">${ACCURACY} = {'diff': [8.968100000000118e-05, 8.934700000000004e-05, 8.874999999999855e-05, 8.869400000000027e-05, 8.861099999999886e-05, 8.916599999999816e-05, 8.898599999999923e-05, 8.962499999999943e-05, 8.8806...</msg>
<status status="PASS" starttime="20201117 14:47:16.355" endtime="20201117 14:47:16.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.371" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:47:16.370" endtime="20201117 14:47:16.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.374" level="INFO">VALUE: [8.968100000000118e-05, 8.934700000000004e-05, 8.874999999999855e-05, 8.869400000000027e-05, 8.861099999999886e-05, 8.916599999999816e-05, 8.898599999999923e-05, 8.962499999999943e-05, 8.88060000000003e-05, 8.88190000000004e-05, 8.902699999999847e-05, 8.944399999999755e-05, 8.932000000000037e-05, 8.894399999999705e-05, 8.865299999999757e-05, 8.908399999999969e-05, 8.880500000000083e-05, 8.920800000000034e-05, 8.909799999999926e-05, 8.879200000000073e-05, 8.902800000000141e-05, 8.915300000000154e-05, 8.891600000000138e-05, 8.920800000000034e-05, 8.88060000000003e-05, 8.863900000000147e-05, 8.933300000000047e-05, 8.945799999999712e-05, 8.905500000000108e-05, 8.906900000000065e-05, 8.901399999999837e-05, 8.943099999999746e-05, 8.86250000000019e-05, 8.91389999999985e-05, 8.951400000000234e-05, 8.870899999999932e-05, 8.879200000000073e-05, 8.938799999999927e-05, 8.905599999999708e-05, 8.956899999999768e-05, 8.874999999999855e-05, 8.94999999999993e-05, 8.937499999999918e-05, 8.937500000000265e-05, 8.876399999999812e-05, 8.955500000000158e-05, 8.927799999999819e-05, 8.924999999999905e-05, 8.944400000000102e-05, 8.923599999999948e-05]</msg>
<status status="PASS" starttime="20201117 14:47:16.372" endtime="20201117 14:47:16.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.368" endtime="20201117 14:47:16.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.377" endtime="20201117 14:47:16.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:16.380" endtime="20201117 14:47:16.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.378" endtime="20201117 14:47:16.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.375" endtime="20201117 14:47:16.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.009" endtime="20201117 14:47:16.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.008" endtime="20201117 14:47:16.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.007" endtime="20201117 14:47:16.401"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.403" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.411" endtime="20201117 14:47:16.429"></status>
</kw>
<msg timestamp="20201117 14:47:16.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.410" endtime="20201117 14:47:16.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.431" endtime="20201117 14:47:16.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.433" endtime="20201117 14:47:16.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.407" endtime="20201117 14:47:16.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.405" endtime="20201117 14:47:16.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.442" endtime="20201117 14:47:16.729"></status>
</kw>
<msg timestamp="20201117 14:47:16.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02322775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023318986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:16.441" endtime="20201117 14:47:16.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02322775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023318986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:16.733" endtime="20201117 14:47:16.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.741" endtime="20201117 14:47:16.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.438" endtime="20201117 14:47:16.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.437" endtime="20201117 14:47:16.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:16.748" level="INFO">${RESULT} = [{'time': 0.023318986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.123600000000148e-05, 'source_diff': 9.123600000000148e-05}, {'time': 0.023457319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:16.745" endtime="20201117 14:47:16.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:16.761" level="INFO">${ACCURACY} = {'diff': [9.123600000000148e-05, 8.973599999999998e-05, 8.981899999999793e-05, 9.012499999999993e-05, 9.033300000000147e-05, 9.05000000000003e-05, 8.977799999999869e-05, 9.008300000000122e-05, 9.04999...</msg>
<status status="PASS" starttime="20201117 14:47:16.749" endtime="20201117 14:47:16.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.766" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:47:16.765" endtime="20201117 14:47:16.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.768" level="INFO">VALUE: [9.123600000000148e-05, 8.973599999999998e-05, 8.981899999999793e-05, 9.012499999999993e-05, 9.033300000000147e-05, 9.05000000000003e-05, 8.977799999999869e-05, 9.008300000000122e-05, 9.049999999999683e-05, 9.038899999999975e-05, 8.988899999999925e-05, 9.015299999999907e-05, 9.036200000000008e-05, 8.969500000000075e-05, 9.009700000000079e-05, 9.037500000000018e-05, 9.005599999999808e-05, 9.05000000000003e-05, 9.040299999999932e-05, 9.047200000000116e-05, 9.04450000000015e-05, 9.038800000000027e-05, 8.98190000000014e-05, 8.998600000000023e-05, 9.01250000000034e-05, 9.038900000000322e-05, 8.990299999999882e-05, 8.994499999999753e-05, 8.99999999999998e-05, 9.033300000000147e-05, 8.982000000000087e-05, 8.994399999999805e-05, 9.01939999999983e-05, 8.987499999999968e-05, 9.020900000000082e-05, 8.99869999999997e-05, 9.041699999999889e-05, 9.041700000000236e-05, 9.002700000000294e-05, 9.052799999999944e-05, 8.980599999999783e-05, 8.969500000000075e-05, 8.988899999999925e-05, 9.036100000000061e-05, 9.037500000000018e-05, 9.031899999999843e-05, 8.987499999999968e-05, 8.987499999999968e-05, 8.98060000000013e-05, 9.005600000000155e-05]</msg>
<status status="PASS" starttime="20201117 14:47:16.767" endtime="20201117 14:47:16.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.762" endtime="20201117 14:47:16.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.771" endtime="20201117 14:47:16.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:16.774" endtime="20201117 14:47:16.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.773" endtime="20201117 14:47:16.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.770" endtime="20201117 14:47:16.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.404" endtime="20201117 14:47:16.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.402" endtime="20201117 14:47:16.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.401" endtime="20201117 14:47:16.796"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.798" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.806" endtime="20201117 14:47:16.824"></status>
</kw>
<msg timestamp="20201117 14:47:16.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.804" endtime="20201117 14:47:16.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.825" endtime="20201117 14:47:16.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.828" endtime="20201117 14:47:16.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.802" endtime="20201117 14:47:16.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.800" endtime="20201117 14:47:16.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.837" endtime="20201117 14:47:17.124"></status>
</kw>
<msg timestamp="20201117 14:47:17.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023293069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023385583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.835" endtime="20201117 14:47:17.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023293069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023385583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.128" endtime="20201117 14:47:17.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.136" endtime="20201117 14:47:17.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.833" endtime="20201117 14:47:17.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.831" endtime="20201117 14:47:17.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.143" level="INFO">${RESULT} = [{'time': 0.023385583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.251400000000187e-05, 'source_diff': 9.251400000000187e-05}, {'time': 0.023516958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:17.139" endtime="20201117 14:47:17.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.157" level="INFO">${ACCURACY} = {'diff': [9.251400000000187e-05, 9.151400000000087e-05, 9.133300000000247e-05, 9.091599999999991e-05, 9.134699999999857e-05, 9.108400000000169e-05, 9.140300000000032e-05, 9.11390000000005e-05, 9.11939...</msg>
<status status="PASS" starttime="20201117 14:47:17.144" endtime="20201117 14:47:17.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.162" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.161" endtime="20201117 14:47:17.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.164" level="INFO">VALUE: [9.251400000000187e-05, 9.151400000000087e-05, 9.133300000000247e-05, 9.091599999999991e-05, 9.134699999999857e-05, 9.108400000000169e-05, 9.140300000000032e-05, 9.11390000000005e-05, 9.11939999999993e-05, 9.137500000000118e-05, 9.156899999999968e-05, 9.076400000000012e-05, 9.095799999999862e-05, 9.101400000000037e-05, 9.10000000000008e-05, 9.122199999999844e-05, 9.094400000000252e-05, 9.116699999999964e-05, 9.095799999999862e-05, 9.06800000000027e-05, 9.108299999999875e-05, 9.140200000000084e-05, 9.080499999999936e-05, 9.061100000000086e-05, 9.088900000000025e-05, 9.101299999999743e-05, 9.09589999999981e-05, 9.106900000000265e-05, 9.11520000000006e-05, 9.10000000000008e-05, 9.144499999999903e-05, 9.155500000000011e-05, 9.09589999999981e-05, 9.113800000000102e-05, 9.158299999999925e-05, 9.0639e-05, 9.120799999999887e-05, 9.124999999999758e-05, 9.088900000000025e-05, 9.127700000000072e-05, 9.084699999999807e-05, 9.14450000000025e-05, 9.117999999999973e-05, 9.08199999999984e-05, 9.120799999999887e-05, 9.11390000000005e-05, 9.11939999999993e-05, 9.0639e-05, 9.125000000000105e-05, 9.112499999999746e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.163" endtime="20201117 14:47:17.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.158" endtime="20201117 14:47:17.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.167" endtime="20201117 14:47:17.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.170" endtime="20201117 14:47:17.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.169" endtime="20201117 14:47:17.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.166" endtime="20201117 14:47:17.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.798" endtime="20201117 14:47:17.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.797" endtime="20201117 14:47:17.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.796" endtime="20201117 14:47:17.191"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.194" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.202" endtime="20201117 14:47:17.220"></status>
</kw>
<msg timestamp="20201117 14:47:17.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.200" endtime="20201117 14:47:17.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.221" endtime="20201117 14:47:17.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.224" endtime="20201117 14:47:17.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.198" endtime="20201117 14:47:17.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.196" endtime="20201117 14:47:17.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.233" endtime="20201117 14:47:17.519"></status>
</kw>
<msg timestamp="20201117 14:47:17.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023296417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023389458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.232" endtime="20201117 14:47:17.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023296417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023389458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.523" endtime="20201117 14:47:17.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.531" endtime="20201117 14:47:17.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.229" endtime="20201117 14:47:17.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.227" endtime="20201117 14:47:17.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.538" level="INFO">${RESULT} = [{'time': 0.023389458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.304099999999857e-05, 'source_diff': 9.304099999999857e-05}, {'time': 0.023518833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:17.534" endtime="20201117 14:47:17.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.551" level="INFO">${ACCURACY} = {'diff': [9.304099999999857e-05, 9.16520000000011e-05, 9.195799999999962e-05, 9.165199999999762e-05, 9.181899999999993e-05, 9.183399999999897e-05, 9.206999999999965e-05, 9.252800000000144e-05, 9.23889...</msg>
<status status="PASS" starttime="20201117 14:47:17.539" endtime="20201117 14:47:17.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.555" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.555" endtime="20201117 14:47:17.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.558" level="INFO">VALUE: [9.304099999999857e-05, 9.16520000000011e-05, 9.195799999999962e-05, 9.165199999999762e-05, 9.181899999999993e-05, 9.183399999999897e-05, 9.206999999999965e-05, 9.252800000000144e-05, 9.238899999999828e-05, 9.198599999999876e-05, 9.212499999999846e-05, 9.218100000000021e-05, 9.222199999999944e-05, 9.25139999999984e-05, 9.244400000000055e-05, 9.193000000000048e-05, 9.176300000000165e-05, 9.162499999999796e-05, 9.230599999999686e-05, 9.194400000000005e-05, 9.218100000000021e-05, 9.224999999999858e-05, 9.220900000000282e-05, 9.184700000000254e-05, 9.177800000000069e-05, 9.170799999999937e-05, 9.1639000000001e-05, 9.249999999999883e-05, 9.179100000000079e-05, 9.188899999999778e-05, 9.161099999999839e-05, 9.181899999999993e-05, 9.252799999999797e-05, 9.229200000000076e-05, 9.2026999999998e-05, 9.169499999999928e-05, 9.182000000000287e-05, 9.193000000000048e-05, 9.193000000000048e-05, 9.255600000000058e-05, 9.202800000000094e-05, 9.20139999999979e-05, 9.166700000000014e-05, 9.227799999999772e-05, 9.175000000000155e-05, 9.238899999999828e-05, 9.237499999999871e-05, 9.177799999999722e-05, 9.20000000000018e-05, 9.249999999999883e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.557" endtime="20201117 14:47:17.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.552" endtime="20201117 14:47:17.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.561" endtime="20201117 14:47:17.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.564" endtime="20201117 14:47:17.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.563" endtime="20201117 14:47:17.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.559" endtime="20201117 14:47:17.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.194" endtime="20201117 14:47:17.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.193" endtime="20201117 14:47:17.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.192" endtime="20201117 14:47:17.585"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.588" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.596" endtime="20201117 14:47:17.614"></status>
</kw>
<msg timestamp="20201117 14:47:17.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.595" endtime="20201117 14:47:17.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.616" endtime="20201117 14:47:17.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.618" endtime="20201117 14:47:17.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.591" endtime="20201117 14:47:17.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.590" endtime="20201117 14:47:17.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.627" endtime="20201117 14:47:17.913"></status>
</kw>
<msg timestamp="20201117 14:47:17.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023904181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.626" endtime="20201117 14:47:17.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023904181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.917" endtime="20201117 14:47:17.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.925" endtime="20201117 14:47:17.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.623" endtime="20201117 14:47:17.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.621" endtime="20201117 14:47:17.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.931" level="INFO">${RESULT} = [{'time': 0.023904181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.455599999999911e-05, 'source_diff': 9.455599999999911e-05}, {'time': 0.024032569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:17.928" endtime="20201117 14:47:17.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.945" level="INFO">${ACCURACY} = {'diff': [9.455599999999911e-05, 9.26940000000008e-05, 9.276399999999865e-05, 9.324999999999958e-05, 9.327800000000219e-05, 9.283299999999703e-05, 9.293000000000148e-05, 9.358400000000072e-05, 9.26940...</msg>
<status status="PASS" starttime="20201117 14:47:17.932" endtime="20201117 14:47:17.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.949" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.948" endtime="20201117 14:47:17.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.951" level="INFO">VALUE: [9.455599999999911e-05, 9.26940000000008e-05, 9.276399999999865e-05, 9.324999999999958e-05, 9.327800000000219e-05, 9.283299999999703e-05, 9.293000000000148e-05, 9.358400000000072e-05, 9.26940000000008e-05, 9.280600000000083e-05, 9.273599999999951e-05, 9.266600000000166e-05, 9.341700000000189e-05, 9.320900000000035e-05, 9.270899999999985e-05, 9.31390000000025e-05, 9.357000000000115e-05, 9.302799999999847e-05, 9.338899999999928e-05, 9.31520000000026e-05, 9.355599999999811e-05, 9.29720000000002e-05, 9.270800000000037e-05, 9.26520000000021e-05, 9.30000000000028e-05, 9.283399999999997e-05, 9.261100000000286e-05, 9.288800000000277e-05, 9.352799999999897e-05, 9.277800000000169e-05, 9.342999999999851e-05, 9.352799999999897e-05, 9.294400000000105e-05, 9.349999999999983e-05, 9.274999999999908e-05, 9.295800000000062e-05, 9.286100000000311e-05, 9.355500000000211e-05, 9.318100000000121e-05, 9.344399999999808e-05, 9.30139999999989e-05, 9.338900000000275e-05, 9.302800000000194e-05, 9.356899999999821e-05, 9.288899999999878e-05, 9.333299999999753e-05, 9.358299999999778e-05, 9.276399999999865e-05, 9.291700000000139e-05, 9.262499999999896e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.950" endtime="20201117 14:47:17.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.946" endtime="20201117 14:47:17.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.955" endtime="20201117 14:47:17.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.958" endtime="20201117 14:47:17.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.956" endtime="20201117 14:47:17.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.953" endtime="20201117 14:47:17.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.588" endtime="20201117 14:47:17.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.586" endtime="20201117 14:47:17.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.586" endtime="20201117 14:47:17.979"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.982" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.990" endtime="20201117 14:47:18.008"></status>
</kw>
<msg timestamp="20201117 14:47:18.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.988" endtime="20201117 14:47:18.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.010" endtime="20201117 14:47:18.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.012" endtime="20201117 14:47:18.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.986" endtime="20201117 14:47:18.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.984" endtime="20201117 14:47:18.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.021" endtime="20201117 14:47:18.307"></status>
</kw>
<msg timestamp="20201117 14:47:18.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023786528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023881597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.019" endtime="20201117 14:47:18.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023786528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023881597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.311" endtime="20201117 14:47:18.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.319" endtime="20201117 14:47:18.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.017" endtime="20201117 14:47:18.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.015" endtime="20201117 14:47:18.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.325" level="INFO">${RESULT} = [{'time': 0.023881597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.506899999999971e-05, 'source_diff': 9.506899999999971e-05}, {'time': 0.024011958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:18.322" endtime="20201117 14:47:18.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.339" level="INFO">${ACCURACY} = {'diff': [9.506899999999971e-05, 9.405499999999914e-05, 9.40139999999999e-05, 9.369500000000128e-05, 9.41940000000023e-05, 9.39859999999973e-05, 9.449999999999736e-05, 9.457000000000215e-05, 9.3819999...</msg>
<status status="PASS" starttime="20201117 14:47:18.326" endtime="20201117 14:47:18.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.343" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.342" endtime="20201117 14:47:18.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.346" level="INFO">VALUE: [9.506899999999971e-05, 9.405499999999914e-05, 9.40139999999999e-05, 9.369500000000128e-05, 9.41940000000023e-05, 9.39859999999973e-05, 9.449999999999736e-05, 9.457000000000215e-05, 9.381999999999793e-05, 9.430500000000286e-05, 9.430599999999886e-05, 9.423600000000101e-05, 9.363899999999953e-05, 9.433299999999853e-05, 9.419500000000178e-05, 9.425000000000058e-05, 9.405499999999914e-05, 9.454100000000007e-05, 9.413900000000003e-05, 9.441699999999942e-05, 9.445799999999865e-05, 9.419499999999831e-05, 9.423600000000101e-05, 9.45140000000004e-05, 9.368100000000171e-05, 9.450000000000083e-05, 9.42079999999984e-05, 9.370800000000137e-05, 9.373600000000051e-05, 9.376399999999965e-05, 9.452799999999997e-05, 9.387500000000021e-05, 9.454199999999954e-05, 9.373599999999704e-05, 9.405600000000208e-05, 9.36529999999991e-05, 9.394400000000205e-05, 9.394399999999858e-05, 9.437499999999724e-05, 9.400000000000033e-05, 9.387500000000021e-05, 9.36940000000018e-05, 9.390299999999935e-05, 9.430600000000233e-05, 9.388899999999978e-05, 9.38200000000014e-05, 9.411100000000089e-05, 9.408299999999828e-05, 9.372300000000042e-05, 9.381900000000193e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.344" endtime="20201117 14:47:18.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.340" endtime="20201117 14:47:18.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.349" endtime="20201117 14:47:18.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.352" endtime="20201117 14:47:18.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.351" endtime="20201117 14:47:18.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.347" endtime="20201117 14:47:18.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.982" endtime="20201117 14:47:18.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.980" endtime="20201117 14:47:18.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.980" endtime="20201117 14:47:18.374"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.376" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.384" endtime="20201117 14:47:18.402"></status>
</kw>
<msg timestamp="20201117 14:47:18.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.382" endtime="20201117 14:47:18.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.404" endtime="20201117 14:47:18.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.406" endtime="20201117 14:47:18.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.380" endtime="20201117 14:47:18.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.378" endtime="20201117 14:47:18.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.415" endtime="20201117 14:47:18.702"></status>
</kw>
<msg timestamp="20201117 14:47:18.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023315542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023411861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.414" endtime="20201117 14:47:18.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023315542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023411861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.706" endtime="20201117 14:47:18.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.714" endtime="20201117 14:47:18.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.411" endtime="20201117 14:47:18.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.409" endtime="20201117 14:47:18.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.721" level="INFO">${RESULT} = [{'time': 0.023411861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.631899999999749e-05, 'source_diff': 9.631899999999749e-05}, {'time': 0.023541236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:18.718" endtime="20201117 14:47:18.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.736" level="INFO">${ACCURACY} = {'diff': [9.631899999999749e-05, 9.462500000000096e-05, 9.484799999999807e-05, 9.480499999999989e-05, 9.487500000000121e-05, 9.469399999999933e-05, 9.556999999999968e-05, 9.557000000000315e-05, 9.5068...</msg>
<status status="PASS" starttime="20201117 14:47:18.722" endtime="20201117 14:47:18.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.740" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.739" endtime="20201117 14:47:18.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.743" level="INFO">VALUE: [9.631899999999749e-05, 9.462500000000096e-05, 9.484799999999807e-05, 9.480499999999989e-05, 9.487500000000121e-05, 9.469399999999933e-05, 9.556999999999968e-05, 9.557000000000315e-05, 9.506899999999971e-05, 9.534799999999857e-05, 9.47079999999989e-05, 9.522200000000244e-05, 9.548600000000226e-05, 9.523600000000201e-05, 9.493099999999949e-05, 9.518099999999974e-05, 9.53469999999991e-05, 9.520900000000235e-05, 9.46530000000001e-05, 9.498600000000176e-05, 9.520899999999888e-05, 9.50140000000009e-05, 9.506899999999971e-05, 9.559699999999935e-05, 9.533299999999953e-05, 9.462500000000096e-05, 9.518099999999974e-05, 9.46530000000001e-05, 9.484700000000207e-05, 9.487500000000121e-05, 9.554100000000107e-05, 9.494399999999958e-05, 9.552800000000097e-05, 9.531899999999996e-05, 9.47079999999989e-05, 9.544400000000008e-05, 9.490300000000035e-05, 9.556900000000021e-05, 9.5027000000001e-05, 9.509699999999885e-05, 9.495800000000262e-05, 9.509699999999885e-05, 9.531899999999996e-05, 9.547199999999922e-05, 9.527799999999725e-05, 9.506999999999918e-05, 9.487500000000121e-05, 9.508299999999928e-05, 9.476399999999718e-05, 9.469499999999881e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.741" endtime="20201117 14:47:18.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.737" endtime="20201117 14:47:18.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.746" endtime="20201117 14:47:18.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.750" endtime="20201117 14:47:18.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.748" endtime="20201117 14:47:18.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.745" endtime="20201117 14:47:18.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.377" endtime="20201117 14:47:18.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.375" endtime="20201117 14:47:18.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.374" endtime="20201117 14:47:18.771"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.773" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.781" endtime="20201117 14:47:18.799"></status>
</kw>
<msg timestamp="20201117 14:47:18.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.779" endtime="20201117 14:47:18.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.801" endtime="20201117 14:47:18.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.803" endtime="20201117 14:47:18.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.777" endtime="20201117 14:47:18.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.775" endtime="20201117 14:47:18.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.812" endtime="20201117 14:47:19.098"></status>
</kw>
<msg timestamp="20201117 14:47:19.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023193986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023291528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.810" endtime="20201117 14:47:19.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023193986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023291528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.102" endtime="20201117 14:47:19.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.110" endtime="20201117 14:47:19.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.808" endtime="20201117 14:47:19.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.806" endtime="20201117 14:47:19.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.116" level="INFO">${RESULT} = [{'time': 0.023291528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.754199999999907e-05, 'source_diff': 9.754199999999907e-05}, {'time': 0.023424917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.113" endtime="20201117 14:47:19.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.130" level="INFO">${ACCURACY} = {'diff': [9.754199999999907e-05, 9.643100000000099e-05, 9.573699999999852e-05, 9.581900000000046e-05, 9.643100000000099e-05, 9.581900000000046e-05, 9.626400000000215e-05, 9.605600000000061e-05, 9.5888...</msg>
<status status="PASS" starttime="20201117 14:47:19.118" endtime="20201117 14:47:19.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.135" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.134" endtime="20201117 14:47:19.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.137" level="INFO">VALUE: [9.754199999999907e-05, 9.643100000000099e-05, 9.573699999999852e-05, 9.581900000000046e-05, 9.643100000000099e-05, 9.581900000000046e-05, 9.626400000000215e-05, 9.605600000000061e-05, 9.588899999999831e-05, 9.625000000000258e-05, 9.562499999999849e-05, 9.598699999999877e-05, 9.649999999999936e-05, 9.566700000000067e-05, 9.581999999999993e-05, 9.586199999999864e-05, 9.579099999999785e-05, 9.59859999999993e-05, 9.572199999999947e-05, 9.616700000000117e-05, 9.566599999999773e-05, 9.61799999999978e-05, 9.591700000000092e-05, 9.637499999999924e-05, 9.605599999999714e-05, 9.562500000000196e-05, 9.562499999999849e-05, 9.626400000000215e-05, 9.555600000000011e-05, 9.599999999999886e-05, 9.59859999999993e-05, 9.605500000000114e-05, 9.587499999999874e-05, 9.594500000000006e-05, 9.604200000000104e-05, 9.61799999999978e-05, 9.652800000000197e-05, 9.649999999999936e-05, 9.579099999999785e-05, 9.563899999999806e-05, 9.622199999999997e-05, 9.561100000000239e-05, 9.580499999999742e-05, 9.611099999999942e-05, 9.593099999999702e-05, 9.629199999999782e-05, 9.632000000000043e-05, 9.655600000000111e-05, 9.62080000000004e-05, 9.593000000000101e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.136" endtime="20201117 14:47:19.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.131" endtime="20201117 14:47:19.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.140" endtime="20201117 14:47:19.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.143" endtime="20201117 14:47:19.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.142" endtime="20201117 14:47:19.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.138" endtime="20201117 14:47:19.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.774" endtime="20201117 14:47:19.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.772" endtime="20201117 14:47:19.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.771" endtime="20201117 14:47:19.164"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.167" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.175" endtime="20201117 14:47:19.193"></status>
</kw>
<msg timestamp="20201117 14:47:19.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.173" endtime="20201117 14:47:19.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.195" endtime="20201117 14:47:19.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.197" endtime="20201117 14:47:19.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.171" endtime="20201117 14:47:19.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.169" endtime="20201117 14:47:19.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.206" endtime="20201117 14:47:19.492"></status>
</kw>
<msg timestamp="20201117 14:47:19.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023390972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023489292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.204" endtime="20201117 14:47:19.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023390972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023489292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.496" endtime="20201117 14:47:19.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.505" endtime="20201117 14:47:19.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.202" endtime="20201117 14:47:19.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.200" endtime="20201117 14:47:19.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.511" level="INFO">${RESULT} = [{'time': 0.023489292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.831999999999896e-05, 'source_diff': 9.831999999999896e-05}, {'time': 0.023630708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.508" endtime="20201117 14:47:19.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.525" level="INFO">${ACCURACY} = {'diff': [9.831999999999896e-05, 9.731900000000196e-05, 9.751399999999993e-05, 9.759700000000135e-05, 9.701299999999996e-05, 9.713899999999956e-05, 9.673600000000004e-05, 9.723600000000054e-05, 9.7430...</msg>
<status status="PASS" starttime="20201117 14:47:19.512" endtime="20201117 14:47:19.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.529" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.528" endtime="20201117 14:47:19.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.532" level="INFO">VALUE: [9.831999999999896e-05, 9.731900000000196e-05, 9.751399999999993e-05, 9.759700000000135e-05, 9.701299999999996e-05, 9.713899999999956e-05, 9.673600000000004e-05, 9.723600000000054e-05, 9.743099999999852e-05, 9.705500000000214e-05, 9.750000000000036e-05, 9.722200000000097e-05, 9.712499999999999e-05, 9.669400000000133e-05, 9.751399999999993e-05, 9.695899999999716e-05, 9.72080000000014e-05, 9.733299999999806e-05, 9.712499999999999e-05, 9.699999999999986e-05, 9.715299999999913e-05, 9.718100000000174e-05, 9.674999999999961e-05, 9.75279999999995e-05, 9.74860000000008e-05, 9.673600000000004e-05, 9.745799999999818e-05, 9.712499999999999e-05, 9.674999999999961e-05, 9.744400000000208e-05, 9.725000000000011e-05, 9.730499999999892e-05, 9.718099999999827e-05, 9.666700000000167e-05, 9.693100000000149e-05, 9.712499999999999e-05, 9.756900000000221e-05, 9.744499999999809e-05, 9.693000000000201e-05, 9.731900000000196e-05, 9.755600000000211e-05, 9.698599999999682e-05, 9.67080000000009e-05, 9.658299999999731e-05, 9.722200000000097e-05, 9.66669999999982e-05, 9.681900000000146e-05, 9.661099999999992e-05, 9.701399999999943e-05, 9.750000000000036e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.530" endtime="20201117 14:47:19.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.526" endtime="20201117 14:47:19.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.535" endtime="20201117 14:47:19.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.538" endtime="20201117 14:47:19.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.536" endtime="20201117 14:47:19.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.533" endtime="20201117 14:47:19.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.167" endtime="20201117 14:47:19.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.166" endtime="20201117 14:47:19.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.165" endtime="20201117 14:47:19.559"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.561" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.569" endtime="20201117 14:47:19.588"></status>
</kw>
<msg timestamp="20201117 14:47:19.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.568" endtime="20201117 14:47:19.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.589" endtime="20201117 14:47:19.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.592" endtime="20201117 14:47:19.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.565" endtime="20201117 14:47:19.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.563" endtime="20201117 14:47:19.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.601" endtime="20201117 14:47:19.887"></status>
</kw>
<msg timestamp="20201117 14:47:19.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023287653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023386486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.599" endtime="20201117 14:47:19.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023287653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023386486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.891" endtime="20201117 14:47:19.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.900" endtime="20201117 14:47:19.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.597" endtime="20201117 14:47:19.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.595" endtime="20201117 14:47:19.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.906" level="INFO">${RESULT} = [{'time': 0.023386486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.883300000000303e-05, 'source_diff': 9.883300000000303e-05}, {'time': 0.023521861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.903" endtime="20201117 14:47:19.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.919" level="INFO">${ACCURACY} = {'diff': [9.883300000000303e-05, 9.809700000000185e-05, 9.762500000000049e-05, 9.794500000000206e-05, 9.832000000000243e-05, 9.776400000000018e-05, 9.784800000000107e-05, 9.780499999999942e-05, 9.8264...</msg>
<status status="PASS" starttime="20201117 14:47:19.907" endtime="20201117 14:47:19.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.924" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.923" endtime="20201117 14:47:19.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.926" level="INFO">VALUE: [9.883300000000303e-05, 9.809700000000185e-05, 9.762500000000049e-05, 9.794500000000206e-05, 9.832000000000243e-05, 9.776400000000018e-05, 9.784800000000107e-05, 9.780499999999942e-05, 9.826400000000068e-05, 9.856899999999974e-05, 9.76799999999993e-05, 9.779199999999932e-05, 9.823600000000154e-05, 9.805499999999967e-05, 9.811099999999795e-05, 9.836100000000167e-05, 9.800000000000086e-05, 9.807000000000218e-05, 9.81669999999997e-05, 9.763900000000006e-05, 9.859699999999888e-05, 9.838900000000081e-05, 9.836100000000167e-05, 9.826400000000068e-05, 9.843100000000299e-05, 9.848599999999832e-05, 9.838900000000081e-05, 9.762500000000049e-05, 9.788900000000031e-05, 9.791700000000292e-05, 9.819499999999884e-05, 9.859699999999888e-05, 9.776400000000018e-05, 9.769500000000181e-05, 9.850000000000136e-05, 9.818100000000274e-05, 9.794500000000206e-05, 9.773600000000104e-05, 9.783299999999856e-05, 9.81799999999998e-05, 9.844399999999962e-05, 9.831999999999896e-05, 9.805499999999967e-05, 9.816600000000023e-05, 9.847199999999875e-05, 9.763900000000006e-05, 9.812500000000099e-05, 9.825000000000111e-05, 9.762499999999702e-05, 9.800000000000086e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.925" endtime="20201117 14:47:19.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.920" endtime="20201117 14:47:19.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.929" endtime="20201117 14:47:19.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.932" endtime="20201117 14:47:19.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.931" endtime="20201117 14:47:19.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.928" endtime="20201117 14:47:19.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.562" endtime="20201117 14:47:19.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.560" endtime="20201117 14:47:19.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.559" endtime="20201117 14:47:19.954"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.956" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.964" endtime="20201117 14:47:19.983"></status>
</kw>
<msg timestamp="20201117 14:47:19.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.962" endtime="20201117 14:47:19.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.984" endtime="20201117 14:47:19.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.987" endtime="20201117 14:47:19.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.960" endtime="20201117 14:47:19.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.958" endtime="20201117 14:47:19.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.996" endtime="20201117 14:47:20.282"></status>
</kw>
<msg timestamp="20201117 14:47:20.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023299597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023400083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.994" endtime="20201117 14:47:20.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023299597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023400083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.286" endtime="20201117 14:47:20.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.295" endtime="20201117 14:47:20.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.992" endtime="20201117 14:47:20.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.990" endtime="20201117 14:47:20.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:20.301" level="INFO">${RESULT} = [{'time': 0.023400083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010048600000000033, 'source_diff': 0.00010048600000000033}, {'time': 0.023551389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:20.298" endtime="20201117 14:47:20.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:20.316" level="INFO">${ACCURACY} = {'diff': [0.00010048600000000033, 9.940299999999791e-05, 9.929200000000082e-05, 9.8721999999999e-05, 9.898599999999882e-05, 9.936100000000267e-05, 9.873599999999857e-05, 9.891600000000098e-05, 9.89579...</msg>
<status status="PASS" starttime="20201117 14:47:20.302" endtime="20201117 14:47:20.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.320" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:47:20.319" endtime="20201117 14:47:20.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.323" level="INFO">VALUE: [0.00010048600000000033, 9.940299999999791e-05, 9.929200000000082e-05, 9.8721999999999e-05, 9.898599999999882e-05, 9.936100000000267e-05, 9.873599999999857e-05, 9.891600000000098e-05, 9.895799999999969e-05, 9.925000000000211e-05, 9.884699999999913e-05, 9.937500000000224e-05, 9.905500000000067e-05, 9.911099999999895e-05, 9.876400000000118e-05, 9.894400000000012e-05, 9.915300000000113e-05, 9.873599999999857e-05, 9.859699999999888e-05, 9.951399999999846e-05, 9.868099999999977e-05, 9.923600000000254e-05, 9.918100000000027e-05, 9.868099999999977e-05, 9.933300000000006e-05, 9.906900000000024e-05, 9.88609999999987e-05, 9.945800000000019e-05, 9.934699999999963e-05, 9.927800000000125e-05, 9.93060000000004e-05, 9.904200000000057e-05, 9.88059999999999e-05, 9.92219999999995e-05, 9.904200000000057e-05, 9.88470000000026e-05, 9.859699999999888e-05, 9.861100000000192e-05, 9.891700000000045e-05, 9.89159999999975e-05, 9.874999999999814e-05, 9.941600000000148e-05, 9.904099999999763e-05, 9.948599999999932e-05, 9.855599999999964e-05, 9.873600000000204e-05, 9.880500000000042e-05, 9.868099999999977e-05, 9.883299999999956e-05, 9.869499999999934e-05]</msg>
<status status="PASS" starttime="20201117 14:47:20.321" endtime="20201117 14:47:20.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.317" endtime="20201117 14:47:20.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.326" endtime="20201117 14:47:20.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.329" endtime="20201117 14:47:20.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.327" endtime="20201117 14:47:20.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.324" endtime="20201117 14:47:20.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.957" endtime="20201117 14:47:20.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.955" endtime="20201117 14:47:20.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.954" endtime="20201117 14:47:20.350"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.352" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.365" endtime="20201117 14:47:20.383"></status>
</kw>
<msg timestamp="20201117 14:47:20.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.363" endtime="20201117 14:47:20.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.385" endtime="20201117 14:47:20.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.387" endtime="20201117 14:47:20.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.356" endtime="20201117 14:47:20.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.354" endtime="20201117 14:47:20.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.396" endtime="20201117 14:47:20.682"></status>
</kw>
<msg timestamp="20201117 14:47:20.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027662931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027764278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.395" endtime="20201117 14:47:20.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027662931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027764278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.686" endtime="20201117 14:47:20.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.694" endtime="20201117 14:47:20.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.392" endtime="20201117 14:47:20.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.390" endtime="20201117 14:47:20.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:20.701" level="INFO">${RESULT} = [{'time': 0.027764278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010134699999999816, 'source_diff': 0.00010134699999999816}, {'time': 0.027914528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:20.698" endtime="20201117 14:47:20.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:20.714" level="INFO">${ACCURACY} = {'diff': [0.00010134699999999816, 9.961099999999945e-05, 0.00010015300000000213, 9.99999999999994e-05, 0.00010023600000000008, 0.00010030500000000192, 9.962499999999902e-05, 9.959699999999988e-05, 9.9...</msg>
<status status="PASS" starttime="20201117 14:47:20.702" endtime="20201117 14:47:20.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.719" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:47:20.718" endtime="20201117 14:47:20.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.721" level="INFO">VALUE: [0.00010134699999999816, 9.961099999999945e-05, 0.00010015300000000213, 9.99999999999994e-05, 0.00010023600000000008, 0.00010030500000000192, 9.962499999999902e-05, 9.959699999999988e-05, 9.98609999999997e-05, 0.00010011099999999995, 0.0001001809999999978, 0.00010006899999999777, 0.00010023600000000008, 9.991699999999798e-05, 9.99869999999993e-05, 0.00010019500000000084, 0.00010036199999999967, 0.00010012499999999952, 9.987499999999927e-05, 9.976399999999871e-05, 0.00010029099999999888, 0.00010030499999999845, 0.0001003610000000002, 9.973599999999957e-05, 0.00010040300000000238, 0.0001005280000000025, 9.98060000000009e-05, 0.00010031899999999455, 0.00010052799999999557, 9.99860000000033e-05, 9.998599999999636e-05, 0.0001005410000000026, 0.00010048599999999686, 0.00010057000000000121, 0.00010054099999999566, 0.00010041699999999848, 9.959699999999988e-05, 0.00010011099999999995, 0.00010016599999999876, 9.979100000000185e-05, 9.992999999999808e-05, 9.993099999999755e-05, 9.994500000000406e-05, 9.984700000000013e-05, 0.00010056900000000174, 9.98060000000009e-05, 0.00010030599999999446, 0.0001000410000000021, 0.00010030500000000192, 9.987499999999927e-05]</msg>
<status status="PASS" starttime="20201117 14:47:20.720" endtime="20201117 14:47:20.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.715" endtime="20201117 14:47:20.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.724" endtime="20201117 14:47:20.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.728" endtime="20201117 14:47:20.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.726" endtime="20201117 14:47:20.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.723" endtime="20201117 14:47:20.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.353" endtime="20201117 14:47:20.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.351" endtime="20201117 14:47:20.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.350" endtime="20201117 14:47:20.749"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.751" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.759" endtime="20201117 14:47:20.778"></status>
</kw>
<msg timestamp="20201117 14:47:20.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.758" endtime="20201117 14:47:20.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.780" endtime="20201117 14:47:20.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.782" endtime="20201117 14:47:20.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.755" endtime="20201117 14:47:20.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.753" endtime="20201117 14:47:20.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.791" endtime="20201117 14:47:21.077"></status>
</kw>
<msg timestamp="20201117 14:47:21.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023647986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023750083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.789" endtime="20201117 14:47:21.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023647986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023750083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.081" endtime="20201117 14:47:21.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.089" endtime="20201117 14:47:21.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.787" endtime="20201117 14:47:21.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.785" endtime="20201117 14:47:21.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.096" level="INFO">${RESULT} = [{'time': 0.023750083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010209700000000238, 'source_diff': 0.00010209700000000238}, {'time': 0.023898403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:21.092" endtime="20201117 14:47:21.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.109" level="INFO">${ACCURACY} = {'diff': [0.00010209700000000238, 0.00010122199999999804, 0.00010067999999999883, 0.00010112499999999705, 0.00010062500000000002, 0.00010093100000000202, 0.00010117999999999933, 0.00010104200000000257...</msg>
<status status="PASS" starttime="20201117 14:47:21.097" endtime="20201117 14:47:21.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.113" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.112" endtime="20201117 14:47:21.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.115" level="INFO">VALUE: [0.00010209700000000238, 0.00010122199999999804, 0.00010067999999999883, 0.00010112499999999705, 0.00010062500000000002, 0.00010093100000000202, 0.00010117999999999933, 0.00010104200000000257, 0.00010129199999999935, 0.00010138800000000087, 0.00010066599999999926, 0.0001011939999999989, 0.0001011939999999989, 0.00010147199999999829, 0.00010102799999999953, 0.00010062500000000002, 0.00010073600000000058, 0.000101416, 0.00010072199999999754, 0.00010098600000000083, 0.0001011809999999988, 0.0001010000000000004, 0.00010140299999999991, 0.00010109700000000138, 0.0001013199999999985, 0.00010094399999999865, 0.00010155599999999917, 0.00010156899999999927, 0.000101513999999997, 0.00010061100000000045, 0.00010151400000000046, 0.00010108400000000128, 0.00010137500000000077, 0.00010101399999999996, 0.00010076399999999971, 0.00010070800000000144, 0.00010083399999999756, 0.0001009870000000003, 0.00010142999999999958, 0.00010062500000000002, 0.00010138900000000034, 0.00010134699999999816, 0.0001011939999999989, 0.00010080599999999842, 0.00010087500000000027, 0.00010144500000000209, 0.00010067999999999883, 0.00010063899999999959, 0.00010125000000000065, 0.00010116699999999923]</msg>
<status status="PASS" starttime="20201117 14:47:21.114" endtime="20201117 14:47:21.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.109" endtime="20201117 14:47:21.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.119" endtime="20201117 14:47:21.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.122" endtime="20201117 14:47:21.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.121" endtime="20201117 14:47:21.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.117" endtime="20201117 14:47:21.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.752" endtime="20201117 14:47:21.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.750" endtime="20201117 14:47:21.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.749" endtime="20201117 14:47:21.143"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.146" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.154" endtime="20201117 14:47:21.172"></status>
</kw>
<msg timestamp="20201117 14:47:21.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.152" endtime="20201117 14:47:21.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.174" endtime="20201117 14:47:21.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.176" endtime="20201117 14:47:21.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.149" endtime="20201117 14:47:21.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.148" endtime="20201117 14:47:21.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.185" endtime="20201117 14:47:21.471"></status>
</kw>
<msg timestamp="20201117 14:47:21.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023275472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023379014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.184" endtime="20201117 14:47:21.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023275472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023379014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.476" endtime="20201117 14:47:21.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.484" endtime="20201117 14:47:21.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.181" endtime="20201117 14:47:21.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.179" endtime="20201117 14:47:21.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.490" level="INFO">${RESULT} = [{'time': 0.023379014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001035420000000016, 'source_diff': 0.0001035420000000016}, {'time': 0.023524347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:21.487" endtime="20201117 14:47:21.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.503" level="INFO">${ACCURACY} = {'diff': [0.0001035420000000016, 0.00010218000000000033, 0.0001016670000000032, 0.00010195799999999922, 0.00010202800000000053, 0.00010259699999999941, 0.00010205599999999967, 0.00010247199999999929, ...</msg>
<status status="PASS" starttime="20201117 14:47:21.491" endtime="20201117 14:47:21.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.507" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.506" endtime="20201117 14:47:21.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.510" level="INFO">VALUE: [0.0001035420000000016, 0.00010218000000000033, 0.0001016670000000032, 0.00010195799999999922, 0.00010202800000000053, 0.00010259699999999941, 0.00010205599999999967, 0.00010247199999999929, 0.00010227799999999732, 0.00010229200000000035, 0.00010247199999999929, 0.00010159700000000188, 0.0001025000000000019, 0.00010198600000000183, 0.00010238899999999787, 0.0001020420000000001, 0.00010198599999999836, 0.00010208400000000228, 0.0001025689999999968, 0.0001023610000000022, 0.00010212500000000152, 0.00010209700000000238, 0.00010236099999999873, 0.00010254199999999714, 0.00010223600000000208, 0.0001020000000000014, 0.00010230500000000045, 0.0001022359999999986, 0.00010241700000000048, 0.00010198599999999836, 0.000101722000000002, 0.00010212500000000152, 0.00010161100000000145, 0.00010191699999999998, 0.00010159700000000188, 0.00010215200000000119, 0.00010206999999999924, 0.00010152800000000003, 0.00010229100000000088, 0.00010218000000000033, 0.00010255600000000017, 0.0001020420000000001, 0.00010241699999999701, 0.00010163900000000059, 0.0001025000000000019, 0.00010211099999999848, 0.00010188899999999737, 0.00010209700000000238, 0.0001025420000000006, 0.00010156899999999927]</msg>
<status status="PASS" starttime="20201117 14:47:21.508" endtime="20201117 14:47:21.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.504" endtime="20201117 14:47:21.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.513" endtime="20201117 14:47:21.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.517" endtime="20201117 14:47:21.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.515" endtime="20201117 14:47:21.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.512" endtime="20201117 14:47:21.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.146" endtime="20201117 14:47:21.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.144" endtime="20201117 14:47:21.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.144" endtime="20201117 14:47:21.538"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.540" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.548" endtime="20201117 14:47:21.567"></status>
</kw>
<msg timestamp="20201117 14:47:21.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.546" endtime="20201117 14:47:21.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.568" endtime="20201117 14:47:21.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.571" endtime="20201117 14:47:21.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.544" endtime="20201117 14:47:21.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.542" endtime="20201117 14:47:21.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.579" endtime="20201117 14:47:21.867"></status>
</kw>
<msg timestamp="20201117 14:47:21.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023313528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023417139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.578" endtime="20201117 14:47:21.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023313528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023417139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.871" endtime="20201117 14:47:21.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.879" endtime="20201117 14:47:21.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.576" endtime="20201117 14:47:21.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.574" endtime="20201117 14:47:21.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.885" level="INFO">${RESULT} = [{'time': 0.023417139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010361099999999998, 'source_diff': 0.00010361099999999998}, {'time': 0.023560472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:21.882" endtime="20201117 14:47:21.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.900" level="INFO">${ACCURACY} = {'diff': [0.00010361099999999998, 0.00010327799999999832, 0.00010330499999999798, 0.0001032359999999996, 0.00010277699999999834, 0.00010274999999999868, 0.00010274999999999868, 0.00010266700000000073,...</msg>
<status status="PASS" starttime="20201117 14:47:21.887" endtime="20201117 14:47:21.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.905" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.904" endtime="20201117 14:47:21.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.907" level="INFO">VALUE: [0.00010361099999999998, 0.00010327799999999832, 0.00010330499999999798, 0.0001032359999999996, 0.00010277699999999834, 0.00010274999999999868, 0.00010274999999999868, 0.00010266700000000073, 0.00010329200000000135, 0.00010286099999999923, 0.00010348599999999986, 0.00010326400000000222, 0.00010307000000000024, 0.00010281900000000052, 0.0001029299999999976, 0.00010358300000000084, 0.00010312500000000252, 0.00010261099999999898, 0.00010349999999999943, 0.00010279200000000085, 0.00010358300000000084, 0.00010309699999999991, 0.00010359700000000041, 0.00010280499999999748, 0.00010318000000000133, 0.00010330499999999798, 0.00010263900000000159, 0.00010311199999999895, 0.00010265300000000116, 0.00010284699999999966, 0.00010274999999999868, 0.00010282, 0.00010305600000000067, 0.00010277699999999834, 0.00010330500000000145, 0.00010313899999999862, 0.00010293100000000055, 0.00010304099999999816, 0.00010312499999999905, 0.00010279099999999791, 0.00010279200000000085, 0.00010329200000000135, 0.00010295800000000022, 0.0001027359999999991, 0.00010309699999999991, 0.00010324999999999918, 0.0001031940000000009, 0.00010324999999999918, 0.00010354199999999814, 0.0001030550000000012]</msg>
<status status="PASS" starttime="20201117 14:47:21.906" endtime="20201117 14:47:21.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.901" endtime="20201117 14:47:21.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.910" endtime="20201117 14:47:21.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.913" endtime="20201117 14:47:21.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.912" endtime="20201117 14:47:21.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.908" endtime="20201117 14:47:21.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.541" endtime="20201117 14:47:21.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.539" endtime="20201117 14:47:21.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.538" endtime="20201117 14:47:21.935"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.937" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.945" endtime="20201117 14:47:21.964"></status>
</kw>
<msg timestamp="20201117 14:47:21.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.943" endtime="20201117 14:47:21.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.965" endtime="20201117 14:47:21.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.968" endtime="20201117 14:47:21.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.941" endtime="20201117 14:47:21.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.939" endtime="20201117 14:47:21.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.976" endtime="20201117 14:47:22.262"></status>
</kw>
<msg timestamp="20201117 14:47:22.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023377653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023483181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.975" endtime="20201117 14:47:22.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023377653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023483181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.266" endtime="20201117 14:47:22.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.275" endtime="20201117 14:47:22.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.972" endtime="20201117 14:47:22.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.971" endtime="20201117 14:47:22.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:22.281" level="INFO">${RESULT} = [{'time': 0.023483181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001055279999999971, 'source_diff': 0.0001055279999999971}, {'time': 0.0236365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:22.278" endtime="20201117 14:47:22.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:22.294" level="INFO">${ACCURACY} = {'diff': [0.0001055279999999971, 0.00010372200000000054, 0.00010409700000000091, 0.0001043200000000015, 0.00010444500000000162, 0.00010447299999999729, 0.000104514, 0.00010397200000000079, 0.000104236...</msg>
<status status="PASS" starttime="20201117 14:47:22.282" endtime="20201117 14:47:22.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.298" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:47:22.298" endtime="20201117 14:47:22.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.301" level="INFO">VALUE: [0.0001055279999999971, 0.00010372200000000054, 0.00010409700000000091, 0.0001043200000000015, 0.00010444500000000162, 0.00010447299999999729, 0.000104514, 0.00010397200000000079, 0.0001042360000000006, 0.00010399999999999993, 0.00010397300000000026, 0.00010415199999999972, 0.00010409700000000091, 0.00010363900000000259, 0.00010442999999999911, 0.00010372199999999707, 0.00010447300000000076, 0.00010362500000000302, 0.00010434700000000116, 0.00010366699999999826, 0.00010383300000000109, 0.00010397200000000079, 0.00010440299999999944, 0.00010454199999999914, 0.00010379199999999839, 0.00010376299999999977, 0.00010363899999999912, 0.00010404099999999916, 0.00010365299999999869, 0.00010441599999999954, 0.00010380499999999848, 0.00010379199999999839, 0.00010405600000000167, 0.00010420899999999747, 0.00010440299999999944, 0.00010427799999999932, 0.00010447300000000076, 0.00010401300000000002, 0.00010397200000000079, 0.00010376399999999925, 0.00010452799999999957, 0.00010426399999999975, 0.00010404199999999864, 0.00010426399999999975, 0.00010398600000000036, 0.00010422200000000104, 0.00010443100000000205, 0.00010434799999999717, 0.00010452799999999957, 0.00010380500000000195]</msg>
<status status="PASS" starttime="20201117 14:47:22.300" endtime="20201117 14:47:22.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.295" endtime="20201117 14:47:22.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.304" endtime="20201117 14:47:22.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:22.307" endtime="20201117 14:47:22.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.306" endtime="20201117 14:47:22.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.302" endtime="20201117 14:47:22.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.937" endtime="20201117 14:47:22.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.936" endtime="20201117 14:47:22.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.935" endtime="20201117 14:47:22.328"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.331" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.339" endtime="20201117 14:47:22.357"></status>
</kw>
<msg timestamp="20201117 14:47:22.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.337" endtime="20201117 14:47:22.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.359" endtime="20201117 14:47:22.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.361" endtime="20201117 14:47:22.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.335" endtime="20201117 14:47:22.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.332" endtime="20201117 14:47:22.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.371" endtime="20201117 14:47:22.657"></status>
</kw>
<msg timestamp="20201117 14:47:22.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023281736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023388278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.369" endtime="20201117 14:47:22.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023281736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023388278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.661" endtime="20201117 14:47:22.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.669" endtime="20201117 14:47:22.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.366" endtime="20201117 14:47:22.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.365" endtime="20201117 14:47:22.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:22.675" level="INFO">${RESULT} = [{'time': 0.023388278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010654199999999767, 'source_diff': 0.00010654199999999767}, {'time': 0.023533597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:22.672" endtime="20201117 14:47:22.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:22.688" level="INFO">${ACCURACY} = {'diff': [0.00010654199999999767, 0.00010545799999999925, 0.00010522200000000204, 0.0001055279999999971, 0.00010462500000000055, 0.00010522299999999804, 0.00010502700000000059, 0.00010502800000000007,...</msg>
<status status="PASS" starttime="20201117 14:47:22.676" endtime="20201117 14:47:22.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.693" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:47:22.692" endtime="20201117 14:47:22.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.695" level="INFO">VALUE: [0.00010654199999999767, 0.00010545799999999925, 0.00010522200000000204, 0.0001055279999999971, 0.00010462500000000055, 0.00010522299999999804, 0.00010502700000000059, 0.00010502800000000007, 0.00010512500000000105, 0.00010479099999999991, 0.00010459700000000141, 0.00010545799999999925, 0.00010490299999999994, 0.00010484699999999819, 0.00010508299999999887, 0.0001047360000000011, 0.00010520900000000194, 0.00010502800000000007, 0.00010508300000000234, 0.00010472199999999807, 0.00010534800000000163, 0.00010536100000000173, 0.00010529100000000041, 0.00010533299999999912, 0.0001048339999999981, 0.00010508299999999887, 0.00010497200000000179, 0.00010491699999999951, 0.00010533299999999912, 0.00010466699999999926, 0.00010504199999999964, 0.0001053620000000012, 0.00010512500000000105, 0.00010472200000000154, 0.00010541700000000001, 0.00010511100000000148, 0.00010534699999999869, 0.000105207999999999, 0.00010509700000000191, 0.00010554200000000014, 0.00010554100000000066, 0.00010476400000000025, 0.00010492999999999961, 0.00010522200000000204, 0.00010458400000000131, 0.0001050689999999993, 0.00010547200000000229, 0.00010466700000000273, 0.00010475000000000068, 0.00010541600000000054]</msg>
<status status="PASS" starttime="20201117 14:47:22.694" endtime="20201117 14:47:22.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.689" endtime="20201117 14:47:22.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.698" endtime="20201117 14:47:22.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:22.701" endtime="20201117 14:47:22.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.700" endtime="20201117 14:47:22.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.696" endtime="20201117 14:47:22.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.331" endtime="20201117 14:47:22.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.329" endtime="20201117 14:47:22.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.329" endtime="20201117 14:47:22.723"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.725" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.733" endtime="20201117 14:47:22.752"></status>
</kw>
<msg timestamp="20201117 14:47:22.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.732" endtime="20201117 14:47:22.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.754" endtime="20201117 14:47:22.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.757" endtime="20201117 14:47:22.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.729" endtime="20201117 14:47:22.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.727" endtime="20201117 14:47:22.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.766" endtime="20201117 14:47:23.052"></status>
</kw>
<msg timestamp="20201117 14:47:23.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024037833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024145167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.764" endtime="20201117 14:47:23.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024037833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024145167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.056" endtime="20201117 14:47:23.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.064" endtime="20201117 14:47:23.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.761" endtime="20201117 14:47:23.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.760" endtime="20201117 14:47:23.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.071" level="INFO">${RESULT} = [{'time': 0.024145167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010733399999999713, 'source_diff': 0.00010733399999999713}, {'time': 0.024304472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:23.068" endtime="20201117 14:47:23.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.084" level="INFO">${ACCURACY} = {'diff': [0.00010733399999999713, 0.00010645800000000025, 0.00010609700000000291, 0.0001057499999999982, 0.00010576400000000125, 0.00010651399999999853, 0.0001061949999999999, 0.00010645800000000025, ...</msg>
<status status="PASS" starttime="20201117 14:47:23.072" endtime="20201117 14:47:23.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.088" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.087" endtime="20201117 14:47:23.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.090" level="INFO">VALUE: [0.00010733399999999713, 0.00010645800000000025, 0.00010609700000000291, 0.0001057499999999982, 0.00010576400000000125, 0.00010651399999999853, 0.0001061949999999999, 0.00010645800000000025, 0.0001057079999999995, 0.00010630500000000098, 0.00010612500000000205, 0.00010570899999999897, 0.00010590299999999747, 0.00010611100000000248, 0.00010566700000000026, 0.0001060690000000003, 0.0001061949999999999, 0.00010570899999999897, 0.00010612500000000205, 0.00010647299999999929, 0.00010645800000000025, 0.000106208, 0.00010558400000000231, 0.00010633300000000012, 0.00010630600000000046, 0.00010637499999999883, 0.00010562500000000155, 0.00010647199999999982, 0.0001056949999999994, 0.00010554099999999719, 0.00010643000000000111, 0.00010605500000000073, 0.00010587499999999833, 0.00010608299999999987, 0.00010595799999999975, 0.0001060140000000015, 0.00010631900000000055, 0.00010638900000000187, 0.0001063889999999984, 0.0001057079999999995, 0.0001062499999999987, 0.0001058889999999979, 0.00010649999999999896, 0.00010613900000000162, 0.0001065279999999981, 0.00010636100000000273, 0.00010595799999999975, 0.00010602800000000107, 0.00010593100000000008, 0.00010583299999999962]</msg>
<status status="PASS" starttime="20201117 14:47:23.089" endtime="20201117 14:47:23.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.084" endtime="20201117 14:47:23.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.093" endtime="20201117 14:47:23.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.097" endtime="20201117 14:47:23.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.095" endtime="20201117 14:47:23.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.092" endtime="20201117 14:47:23.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.726" endtime="20201117 14:47:23.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.724" endtime="20201117 14:47:23.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.723" endtime="20201117 14:47:23.118"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.120" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.129" endtime="20201117 14:47:23.148"></status>
</kw>
<msg timestamp="20201117 14:47:23.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.127" endtime="20201117 14:47:23.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.149" endtime="20201117 14:47:23.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.152" endtime="20201117 14:47:23.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.125" endtime="20201117 14:47:23.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.122" endtime="20201117 14:47:23.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.160" endtime="20201117 14:47:23.447"></status>
</kw>
<msg timestamp="20201117 14:47:23.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023865931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023974389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.159" endtime="20201117 14:47:23.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023865931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023974389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.451" endtime="20201117 14:47:23.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.459" endtime="20201117 14:47:23.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.156" endtime="20201117 14:47:23.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.155" endtime="20201117 14:47:23.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.466" level="INFO">${RESULT} = [{'time': 0.023974389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010845799999999878, 'source_diff': 0.00010845799999999878}, {'time': 0.024120722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:23.463" endtime="20201117 14:47:23.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.480" level="INFO">${ACCURACY} = {'diff': [0.00010845799999999878, 0.0001075279999999991, 0.00010733300000000112, 0.00010713899999999915, 0.00010719400000000143, 0.00010686099999999976, 0.00010731900000000155, 0.00010719499999999743,...</msg>
<status status="PASS" starttime="20201117 14:47:23.467" endtime="20201117 14:47:23.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.485" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.484" endtime="20201117 14:47:23.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.487" level="INFO">VALUE: [0.00010845799999999878, 0.0001075279999999991, 0.00010733300000000112, 0.00010713899999999915, 0.00010719400000000143, 0.00010686099999999976, 0.00010731900000000155, 0.00010719499999999743, 0.00010670899999999997, 0.00010659799999999942, 0.00010727799999999885, 0.00010682000000000053, 0.000107208000000001, 0.00010680600000000096, 0.00010711100000000001, 0.00010704199999999817, 0.00010747200000000082, 0.00010712499999999958, 0.00010740299999999897, 0.00010712499999999958, 0.00010727799999999885, 0.0001072629999999998, 0.00010672200000000007, 0.0001067080000000005, 0.00010716700000000176, 0.00010657000000000028, 0.0001070140000000025, 0.00010740300000000244, 0.00010704199999999817, 0.00010720900000000047, 0.00010751300000000005, 0.0001068889999999989, 0.0001073340000000006, 0.0001065690000000008, 0.00010666699999999779, 0.00010734800000000017, 0.00010726399999999928, 0.0001070279999999986, 0.000107514000000003, 0.00010749999999999996, 0.00010749999999999996, 0.00010716700000000176, 0.00010672299999999954, 0.0001070140000000025, 0.00010695799999999728, 0.00010734699999999722, 0.00010708300000000087, 0.00010713899999999915, 0.00010686099999999976, 0.00010665200000000222]</msg>
<status status="PASS" starttime="20201117 14:47:23.486" endtime="20201117 14:47:23.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.481" endtime="20201117 14:47:23.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.490" endtime="20201117 14:47:23.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.494" endtime="20201117 14:47:23.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.492" endtime="20201117 14:47:23.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.489" endtime="20201117 14:47:23.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.121" endtime="20201117 14:47:23.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.119" endtime="20201117 14:47:23.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.118" endtime="20201117 14:47:23.515"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.517" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.525" endtime="20201117 14:47:23.545"></status>
</kw>
<msg timestamp="20201117 14:47:23.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.524" endtime="20201117 14:47:23.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.546" endtime="20201117 14:47:23.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.548" endtime="20201117 14:47:23.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.521" endtime="20201117 14:47:23.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.519" endtime="20201117 14:47:23.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.557" endtime="20201117 14:47:23.843"></status>
</kw>
<msg timestamp="20201117 14:47:23.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023292583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023401236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.556" endtime="20201117 14:47:23.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023292583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023401236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.847" endtime="20201117 14:47:23.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.855" endtime="20201117 14:47:23.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.553" endtime="20201117 14:47:23.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.552" endtime="20201117 14:47:23.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.862" level="INFO">${RESULT} = [{'time': 0.023401236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010865300000000022, 'source_diff': 0.00010865300000000022}, {'time': 0.023547556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:23.858" endtime="20201117 14:47:23.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.875" level="INFO">${ACCURACY} = {'diff': [0.00010865300000000022, 0.00010762500000000008, 0.000107902, 0.00010815299999999972, 0.00010815299999999972, 0.000108208999999998, 0.00010759700000000094, 0.00010790299999999947, 0.000108139...</msg>
<status status="PASS" starttime="20201117 14:47:23.863" endtime="20201117 14:47:23.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.879" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.878" endtime="20201117 14:47:23.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.881" level="INFO">VALUE: [0.00010865300000000022, 0.00010762500000000008, 0.000107902, 0.00010815299999999972, 0.00010815299999999972, 0.000108208999999998, 0.00010759700000000094, 0.00010790299999999947, 0.00010813900000000015, 0.0001078889999999999, 0.00010761100000000051, 0.00010806899999999883, 0.00010809699999999797, 0.00010781900000000205, 0.00010795800000000175, 0.00010833300000000212, 0.00010773600000000064, 0.00010822200000000157, 0.0001075829999999979, 0.00010820799999999853, 0.00010805599999999874, 0.00010798600000000089, 0.00010780499999999901, 0.00010827799999999985, 0.00010833399999999813, 0.00010794400000000218, 0.00010840299999999997, 0.00010820900000000147, 0.00010808399999999788, 0.00010823599999999767, 0.00010795800000000175, 0.00010791699999999904, 0.00010793100000000208, 0.00010811100000000101, 0.00010830599999999899, 0.00010765299999999922, 0.00010761100000000051, 0.00010790299999999947, 0.00010798600000000089, 0.00010847199999999835, 0.0001075829999999979, 0.00010833300000000212, 0.00010851399999999706, 0.00010817999999999939, 0.00010787500000000033, 0.00010754199999999867, 0.0001078889999999999, 0.00010848600000000139, 0.00010819499999999843, 0.00010813900000000015]</msg>
<status status="PASS" starttime="20201117 14:47:23.880" endtime="20201117 14:47:23.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.875" endtime="20201117 14:47:23.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.885" endtime="20201117 14:47:23.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.888" endtime="20201117 14:47:23.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.887" endtime="20201117 14:47:23.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.883" endtime="20201117 14:47:23.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.518" endtime="20201117 14:47:23.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.516" endtime="20201117 14:47:23.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.515" endtime="20201117 14:47:23.909"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.911" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.919" endtime="20201117 14:47:23.938"></status>
</kw>
<msg timestamp="20201117 14:47:23.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.918" endtime="20201117 14:47:23.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.940" endtime="20201117 14:47:23.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.942" endtime="20201117 14:47:23.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.915" endtime="20201117 14:47:23.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.913" endtime="20201117 14:47:23.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.951" endtime="20201117 14:47:24.238"></status>
</kw>
<msg timestamp="20201117 14:47:24.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023286319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023396028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.950" endtime="20201117 14:47:24.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023286319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023396028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.242" endtime="20201117 14:47:24.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.250" endtime="20201117 14:47:24.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.947" endtime="20201117 14:47:24.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.946" endtime="20201117 14:47:24.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:24.256" level="INFO">${RESULT} = [{'time': 0.023396028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001097089999999995, 'source_diff': 0.0001097089999999995}, {'time': 0.023548375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:24.253" endtime="20201117 14:47:24.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:24.269" level="INFO">${ACCURACY} = {'diff': [0.0001097089999999995, 0.00010948599999999892, 0.00010934699999999922, 0.00010931999999999956, 0.00010881899999999958, 0.00010859700000000194, 0.00010949999999999849, 0.000109208999999999, 0...</msg>
<status status="PASS" starttime="20201117 14:47:24.257" endtime="20201117 14:47:24.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.274" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:47:24.273" endtime="20201117 14:47:24.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.277" level="INFO">VALUE: [0.0001097089999999995, 0.00010948599999999892, 0.00010934699999999922, 0.00010931999999999956, 0.00010881899999999958, 0.00010859700000000194, 0.00010949999999999849, 0.000109208999999999, 0.00010938899999999793, 0.00010891700000000004, 0.00010918099999999986, 0.00010927799999999738, 0.0001092219999999991, 0.00010894399999999971, 0.00010913900000000115, 0.00010859800000000142, 0.00010858399999999838, 0.00010865200000000075, 0.00010893000000000014, 0.00010947200000000282, 0.00010922200000000257, 0.00010922200000000257, 0.00010866699999999979, 0.0001085699999999988, 0.0001094029999999975, 0.00010900000000000146, 0.0001090829999999994, 0.00010872200000000207, 0.00010940300000000097, 0.00010870799999999903, 0.00010883300000000262, 0.00010909700000000244, 0.00010934699999999922, 0.0001090829999999994, 0.00010866699999999979, 0.00010933399999999913, 0.00010950000000000196, 0.00010908399999999888, 0.000108902000000001, 0.00010886099999999829, 0.0001087769999999974, 0.00010863800000000118, 0.00010891700000000004, 0.00010920799999999953, 0.0001090690000000033, 0.00010919399999999996, 0.00010924999999999824, 0.00010919399999999996, 0.00010876400000000078, 0.00010944499999999968]</msg>
<status status="PASS" starttime="20201117 14:47:24.275" endtime="20201117 14:47:24.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.270" endtime="20201117 14:47:24.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.280" endtime="20201117 14:47:24.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:24.283" endtime="20201117 14:47:24.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.281" endtime="20201117 14:47:24.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.278" endtime="20201117 14:47:24.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.912" endtime="20201117 14:47:24.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.910" endtime="20201117 14:47:24.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.909" endtime="20201117 14:47:24.304"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.306" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.314" endtime="20201117 14:47:24.334"></status>
</kw>
<msg timestamp="20201117 14:47:24.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.313" endtime="20201117 14:47:24.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.335" endtime="20201117 14:47:24.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.338" endtime="20201117 14:47:24.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.310" endtime="20201117 14:47:24.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.308" endtime="20201117 14:47:24.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.346" endtime="20201117 14:47:24.633"></status>
</kw>
<msg timestamp="20201117 14:47:24.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023384819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023496014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.345" endtime="20201117 14:47:24.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023384819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023496014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.637" endtime="20201117 14:47:24.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.645" endtime="20201117 14:47:24.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.342" endtime="20201117 14:47:24.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.341" endtime="20201117 14:47:24.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:24.651" level="INFO">${RESULT} = [{'time': 0.023496014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011119499999999796, 'source_diff': 0.00011119499999999796}, {'time': 0.023652333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:24.648" endtime="20201117 14:47:24.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:24.665" level="INFO">${ACCURACY} = {'diff': [0.00011119499999999796, 0.00010961100000000251, 0.00011043100000000111, 0.00010998599999999942, 0.00010970800000000003, 0.00011044500000000068, 0.00011012499999999911, 0.00011044399999999774...</msg>
<status status="PASS" starttime="20201117 14:47:24.653" endtime="20201117 14:47:24.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.669" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:47:24.668" endtime="20201117 14:47:24.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.671" level="INFO">VALUE: [0.00011119499999999796, 0.00010961100000000251, 0.00011043100000000111, 0.00010998599999999942, 0.00010970800000000003, 0.00011044500000000068, 0.00011012499999999911, 0.00011044399999999774, 0.00010968100000000036, 0.0001104020000000025, 0.00011006899999999736, 0.00010979200000000092, 0.00011016699999999782, 0.00010957000000000328, 0.00011048599999999992, 0.00011019400000000096, 0.00011047299999999982, 0.00010958399999999938, 0.00011009699999999997, 0.00010968000000000089, 0.00010981900000000058, 0.00010998600000000289, 0.00011011100000000301, 0.00010987499999999886, 0.00011026399999999881, 0.00010961100000000251, 0.00010975000000000221, 0.00011026400000000228, 0.0001095699999999998, 0.00010987500000000233, 0.00011051399999999906, 0.00010962499999999861, 0.00011030599999999752, 0.00010995800000000028, 0.00010969400000000046, 0.00010979199999999745, 0.00011019400000000096, 0.00010995800000000028, 0.00010961100000000251, 0.0001095829999999999, 0.00010998600000000289, 0.00011048599999999992, 0.00010974999999999874, 0.00011005599999999727, 0.00011029200000000142, 0.00010976399999999831, 0.00011029100000000194, 0.00011031899999999761, 0.00010961099999999904, 0.0001100700000000003]</msg>
<status status="PASS" starttime="20201117 14:47:24.670" endtime="20201117 14:47:24.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.666" endtime="20201117 14:47:24.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.675" endtime="20201117 14:47:24.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:24.678" endtime="20201117 14:47:24.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.676" endtime="20201117 14:47:24.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.673" endtime="20201117 14:47:24.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.307" endtime="20201117 14:47:24.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.305" endtime="20201117 14:47:24.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.304" endtime="20201117 14:47:24.699"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.701" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.709" endtime="20201117 14:47:24.728"></status>
</kw>
<msg timestamp="20201117 14:47:24.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.708" endtime="20201117 14:47:24.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.730" endtime="20201117 14:47:24.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.732" endtime="20201117 14:47:24.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.705" endtime="20201117 14:47:24.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.703" endtime="20201117 14:47:24.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.741" endtime="20201117 14:47:25.029"></status>
</kw>
<msg timestamp="20201117 14:47:25.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023311833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023424278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.740" endtime="20201117 14:47:25.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023311833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023424278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.033" endtime="20201117 14:47:25.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.042" endtime="20201117 14:47:25.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.737" endtime="20201117 14:47:25.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.735" endtime="20201117 14:47:25.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.048" level="INFO">${RESULT} = [{'time': 0.023424278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011244499999999921, 'source_diff': 0.00011244499999999921}, {'time': 0.023574583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:25.045" endtime="20201117 14:47:25.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.063" level="INFO">${ACCURACY} = {'diff': [0.00011244499999999921, 0.00011104099999999922, 0.00011055500000000176, 0.00011104099999999922, 0.00011104099999999922, 0.00011113800000000021, 0.00011138899999999993, 0.00011070799999999756...</msg>
<status status="PASS" starttime="20201117 14:47:25.049" endtime="20201117 14:47:25.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.067" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.066" endtime="20201117 14:47:25.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.070" level="INFO">VALUE: [0.00011244499999999921, 0.00011104099999999922, 0.00011055500000000176, 0.00011104099999999922, 0.00011104099999999922, 0.00011113800000000021, 0.00011138899999999993, 0.00011070799999999756, 0.00011150000000000049, 0.00011062499999999961, 0.00011063899999999918, 0.00011063799999999971, 0.00011067999999999842, 0.00011095800000000128, 0.00011102799999999913, 0.00011079199999999845, 0.0001110549999999988, 0.00011151400000000006, 0.00011145799999999831, 0.00011120799999999806, 0.00011079200000000192, 0.00011063899999999918, 0.00011077799999999888, 0.00011073600000000017, 0.00011058299999999743, 0.00011119500000000143, 0.0001107220000000006, 0.00011055600000000124, 0.00011072199999999713, 0.0001110549999999988, 0.00011051399999999906, 0.00011134700000000122, 0.00011119499999999796, 0.00011113899999999968, 0.00011130599999999852, 0.00011056999999999734, 0.00011106899999999836, 0.00011099999999999999, 0.00011055600000000124, 0.00011088899999999943, 0.0001110700000000013, 0.00011098700000000336, 0.00011061100000000004, 0.00011087499999999986, 0.00011119500000000143, 0.00011094500000000118, 0.0001107220000000006, 0.00011138800000000046, 0.00011108299999999793, 0.00011131899999999861]</msg>
<status status="PASS" starttime="20201117 14:47:25.068" endtime="20201117 14:47:25.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.064" endtime="20201117 14:47:25.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.073" endtime="20201117 14:47:25.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.076" endtime="20201117 14:47:25.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.075" endtime="20201117 14:47:25.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.071" endtime="20201117 14:47:25.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.702" endtime="20201117 14:47:25.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.700" endtime="20201117 14:47:25.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.699" endtime="20201117 14:47:25.097"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.099" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.107" endtime="20201117 14:47:25.127"></status>
</kw>
<msg timestamp="20201117 14:47:25.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.106" endtime="20201117 14:47:25.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.128" endtime="20201117 14:47:25.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.130" endtime="20201117 14:47:25.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.103" endtime="20201117 14:47:25.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.101" endtime="20201117 14:47:25.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.140" endtime="20201117 14:47:25.425"></status>
</kw>
<msg timestamp="20201117 14:47:25.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023300431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023413389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.138" endtime="20201117 14:47:25.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023300431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023413389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.429" endtime="20201117 14:47:25.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.437" endtime="20201117 14:47:25.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.135" endtime="20201117 14:47:25.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.134" endtime="20201117 14:47:25.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.443" level="INFO">${RESULT} = [{'time': 0.023413389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011295799999999981, 'source_diff': 0.00011295799999999981}, {'time': 0.023572653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:25.440" endtime="20201117 14:47:25.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.456" level="INFO">${ACCURACY} = {'diff': [0.00011295799999999981, 0.00011201400000000056, 0.00011176399999999684, 0.00011212499999999764, 0.00011182000000000206, 0.0001120419999999997, 0.00011217999999999992, 0.00011244399999999974,...</msg>
<status status="PASS" starttime="20201117 14:47:25.444" endtime="20201117 14:47:25.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.461" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.460" endtime="20201117 14:47:25.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.463" level="INFO">VALUE: [0.00011295799999999981, 0.00011201400000000056, 0.00011176399999999684, 0.00011212499999999764, 0.00011182000000000206, 0.0001120419999999997, 0.00011217999999999992, 0.00011244399999999974, 0.00011167999999999942, 0.00011245799999999931, 0.00011195799999999881, 0.00011225000000000124, 0.00011148600000000092, 0.0001115419999999992, 0.00011158299999999843, 0.00011206900000000283, 0.00011243099999999964, 0.00011251400000000106, 0.00011225000000000124, 0.00011223600000000167, 0.00011158400000000138, 0.00011243099999999964, 0.00011166699999999932, 0.00011212500000000111, 0.00011225000000000124, 0.00011219499999999896, 0.00011209800000000145, 0.00011211099999999807, 0.00011177799999999988, 0.0001120969999999985, 0.00011190200000000053, 0.00011233400000000213, 0.00011162500000000061, 0.00011168099999999889, 0.00011222199999999863, 0.00011234700000000222, 0.00011169399999999899, 0.00011218099999999939, 0.00011229199999999995, 0.00011176400000000031, 0.00011219499999999896, 0.00011194399999999924, 0.00011187500000000086, 0.00011218099999999939, 0.00011181999999999859, 0.00011243099999999964, 0.00011212500000000111, 0.00011181999999999859, 0.00011205599999999927, 0.00011163900000000018]</msg>
<status status="PASS" starttime="20201117 14:47:25.462" endtime="20201117 14:47:25.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.457" endtime="20201117 14:47:25.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.466" endtime="20201117 14:47:25.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.470" endtime="20201117 14:47:25.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.468" endtime="20201117 14:47:25.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.465" endtime="20201117 14:47:25.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.100" endtime="20201117 14:47:25.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.098" endtime="20201117 14:47:25.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.097" endtime="20201117 14:47:25.491"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.493" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.501" endtime="20201117 14:47:25.520"></status>
</kw>
<msg timestamp="20201117 14:47:25.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.500" endtime="20201117 14:47:25.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.522" endtime="20201117 14:47:25.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.525" endtime="20201117 14:47:25.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.497" endtime="20201117 14:47:25.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.495" endtime="20201117 14:47:25.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.534" endtime="20201117 14:47:25.821"></status>
</kw>
<msg timestamp="20201117 14:47:25.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023354431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023468139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.532" endtime="20201117 14:47:25.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023354431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023468139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.825" endtime="20201117 14:47:25.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.833" endtime="20201117 14:47:25.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.530" endtime="20201117 14:47:25.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.528" endtime="20201117 14:47:25.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.839" level="INFO">${RESULT} = [{'time': 0.023468139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011370800000000056, 'source_diff': 0.00011370800000000056}, {'time': 0.023624431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:25.836" endtime="20201117 14:47:25.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.852" level="INFO">${ACCURACY} = {'diff': [0.00011370800000000056, 0.00011332000000000009, 0.0001130700000000033, 0.00011320800000000006, 0.00011348599999999945, 0.00011256899999999986, 0.00011336099999999932, 0.00011299999999999852,...</msg>
<status status="PASS" starttime="20201117 14:47:25.840" endtime="20201117 14:47:25.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.857" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.856" endtime="20201117 14:47:25.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.859" level="INFO">VALUE: [0.00011370800000000056, 0.00011332000000000009, 0.0001130700000000033, 0.00011320800000000006, 0.00011348599999999945, 0.00011256899999999986, 0.00011336099999999932, 0.00011299999999999852, 0.0001133749999999989, 0.00011275000000000174, 0.00011312499999999864, 0.00011316599999999788, 0.00011329100000000147, 0.0001128749999999984, 0.00011266600000000085, 0.0001125550000000003, 0.00011320800000000006, 0.00011293000000000067, 0.00011324999999999877, 0.00011344500000000021, 0.00011279100000000097, 0.00011347199999999988, 0.00011293100000000014, 0.00011344400000000074, 0.00011305499999999732, 0.00011269399999999999, 0.0001125420000000002, 0.00011324999999999877, 0.00011251400000000106, 0.00011297200000000285, 0.00011308299999999993, 0.0001130420000000007, 0.00011294499999999971, 0.00011294499999999971, 0.00011343100000000064, 0.00011294400000000024, 0.00011291700000000057, 0.00011299999999999852, 0.00011329100000000147, 0.00011332000000000009, 0.00011338899999999846, 0.00011268099999999989, 0.0001130550000000008, 0.0001128749999999984, 0.00011350000000000249, 0.00011277800000000088, 0.00011345899999999978, 0.00011332000000000009, 0.00011288800000000196, 0.0001127359999999987]</msg>
<status status="PASS" starttime="20201117 14:47:25.858" endtime="20201117 14:47:25.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.853" endtime="20201117 14:47:25.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.862" endtime="20201117 14:47:25.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.866" endtime="20201117 14:47:25.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.864" endtime="20201117 14:47:25.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.861" endtime="20201117 14:47:25.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.494" endtime="20201117 14:47:25.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.492" endtime="20201117 14:47:25.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.491" endtime="20201117 14:47:25.887"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.889" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.897" endtime="20201117 14:47:25.917"></status>
</kw>
<msg timestamp="20201117 14:47:25.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.896" endtime="20201117 14:47:25.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.918" endtime="20201117 14:47:25.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.921" endtime="20201117 14:47:25.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.893" endtime="20201117 14:47:25.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.891" endtime="20201117 14:47:25.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.930" endtime="20201117 14:47:26.229"></status>
</kw>
<msg timestamp="20201117 14:47:26.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023894319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024009042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.928" endtime="20201117 14:47:26.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023894319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024009042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.233" endtime="20201117 14:47:26.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.241" endtime="20201117 14:47:26.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.926" endtime="20201117 14:47:26.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.924" endtime="20201117 14:47:26.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:26.247" level="INFO">${RESULT} = [{'time': 0.024009042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001147230000000006, 'source_diff': 0.0001147230000000006}, {'time': 0.024171278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:26.244" endtime="20201117 14:47:26.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:26.260" level="INFO">${ACCURACY} = {'diff': [0.0001147230000000006, 0.00011382000000000059, 0.0001135420000000012, 0.00011448600000000045, 0.00011365299999999828, 0.00011368100000000089, 0.00011394400000000124, 0.00011412499999999964, ...</msg>
<status status="PASS" starttime="20201117 14:47:26.248" endtime="20201117 14:47:26.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.265" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:47:26.264" endtime="20201117 14:47:26.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.267" level="INFO">VALUE: [0.0001147230000000006, 0.00011382000000000059, 0.0001135420000000012, 0.00011448600000000045, 0.00011365299999999828, 0.00011368100000000089, 0.00011394400000000124, 0.00011412499999999964, 0.00011377799999999841, 0.00011366699999999785, 0.00011407000000000084, 0.00011422200000000063, 0.00011436099999999685, 0.00011393100000000114, 0.00011361099999999957, 0.00011362499999999914, 0.00011363899999999871, 0.00011429200000000195, 0.00011436100000000032, 0.00011382000000000059, 0.0001139169999999981, 0.00011422200000000063, 0.00011436100000000032, 0.00011361099999999957, 0.00011374999999999927, 0.00011419500000000096, 0.00011451399999999959, 0.00011430600000000152, 0.0001135689999999974, 0.0001139169999999981, 0.0001143749999999999, 0.00011429199999999848, 0.00011384799999999973, 0.00011370800000000056, 0.00011447200000000088, 0.00011420799999999759, 0.00011411100000000007, 0.00011358299999999696, 0.00011379199999999798, 0.0001142360000000002, 0.00011394400000000124, 0.00011368099999999742, 0.00011368100000000089, 0.00011374999999999927, 0.00011386099999999982, 0.00011432000000000109, 0.000114388999999996, 0.00011379200000000145, 0.00011415299999999878, 0.0001140420000000017]</msg>
<status status="PASS" starttime="20201117 14:47:26.266" endtime="20201117 14:47:26.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.261" endtime="20201117 14:47:26.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.270" endtime="20201117 14:47:26.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:26.274" endtime="20201117 14:47:26.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.272" endtime="20201117 14:47:26.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.268" endtime="20201117 14:47:26.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.890" endtime="20201117 14:47:26.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.888" endtime="20201117 14:47:26.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.887" endtime="20201117 14:47:26.295"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.297" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.306" endtime="20201117 14:47:26.325"></status>
</kw>
<msg timestamp="20201117 14:47:26.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.304" endtime="20201117 14:47:26.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.326" endtime="20201117 14:47:26.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.329" endtime="20201117 14:47:26.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.301" endtime="20201117 14:47:26.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.299" endtime="20201117 14:47:26.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.338" endtime="20201117 14:47:26.624"></status>
</kw>
<msg timestamp="20201117 14:47:26.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023490819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023607236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.336" endtime="20201117 14:47:26.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023490819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023607236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.628" endtime="20201117 14:47:26.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.636" endtime="20201117 14:47:26.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.334" endtime="20201117 14:47:26.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.332" endtime="20201117 14:47:26.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:26.643" level="INFO">${RESULT} = [{'time': 0.023607236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001164170000000006, 'source_diff': 0.0001164170000000006}, {'time': 0.0237665, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:26.640" endtime="20201117 14:47:26.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:26.658" level="INFO">${ACCURACY} = {'diff': [0.0001164170000000006, 0.00011500000000000052, 0.00011480499999999907, 0.00011520799999999859, 0.00011507000000000184, 0.0001149169999999991, 0.00011519400000000249, 0.00011525000000000077, ...</msg>
<status status="PASS" starttime="20201117 14:47:26.644" endtime="20201117 14:47:26.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.662" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:47:26.661" endtime="20201117 14:47:26.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.665" level="INFO">VALUE: [0.0001164170000000006, 0.00011500000000000052, 0.00011480499999999907, 0.00011520799999999859, 0.00011507000000000184, 0.0001149169999999991, 0.00011519400000000249, 0.00011525000000000077, 0.00011498599999999748, 0.0001148620000000003, 0.00011463899999999971, 0.00011480599999999855, 0.00011468100000000189, 0.00011501400000000009, 0.00011516599999999988, 0.000115388999999997, 0.00011537499999999742, 0.0001147909999999995, 0.00011530499999999957, 0.00011544499999999874, 0.0001151109999999976, 0.0001147909999999995, 0.00011475000000000027, 0.00011463899999999971, 0.00011515299999999978, 0.00011462500000000014, 0.00011486100000000082, 0.0001148750000000004, 0.00011475000000000027, 0.00011530599999999905, 0.00011536100000000132, 0.00011469400000000199, 0.0001150550000000028, 0.0001152230000000011, 0.00011507000000000184, 0.00011516699999999935, 0.0001148750000000004, 0.00011505600000000227, 0.00011547199999999841, 0.00011548599999999798, 0.0001152230000000011, 0.00011534699999999828, 0.00011477799999999941, 0.00011540300000000003, 0.00011536100000000132, 0.00011497300000000085, 0.00011533299999999871, 0.00011515299999999978, 0.00011508399999999794, 0.00011541699999999613]</msg>
<status status="PASS" starttime="20201117 14:47:26.664" endtime="20201117 14:47:26.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.659" endtime="20201117 14:47:26.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.668" endtime="20201117 14:47:26.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:26.672" endtime="20201117 14:47:26.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.670" endtime="20201117 14:47:26.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.667" endtime="20201117 14:47:26.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.298" endtime="20201117 14:47:26.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.296" endtime="20201117 14:47:26.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.295" endtime="20201117 14:47:26.693"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.695" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.703" endtime="20201117 14:47:26.723"></status>
</kw>
<msg timestamp="20201117 14:47:26.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.702" endtime="20201117 14:47:26.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.725" endtime="20201117 14:47:26.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.727" endtime="20201117 14:47:26.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.699" endtime="20201117 14:47:26.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.697" endtime="20201117 14:47:26.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.736" endtime="20201117 14:47:27.043"></status>
</kw>
<msg timestamp="20201117 14:47:27.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023679472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02379675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:26.735" endtime="20201117 14:47:27.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023679472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02379675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:27.047" endtime="20201117 14:47:27.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.055" endtime="20201117 14:47:27.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.732" endtime="20201117 14:47:27.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.730" endtime="20201117 14:47:27.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.062" level="INFO">${RESULT} = [{'time': 0.02379675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011727799999999844, 'source_diff': 0.00011727799999999844}, {'time': 0.023963986, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:27.059" endtime="20201117 14:47:27.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.075" level="INFO">${ACCURACY} = {'diff': [0.00011727799999999844, 0.00011598599999999848, 0.00011623599999999873, 0.00011554199999999973, 0.00011634699999999928, 0.00011583299999999921, 0.00011561100000000157, 0.00011551399999999712...</msg>
<status status="PASS" starttime="20201117 14:47:27.063" endtime="20201117 14:47:27.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.080" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.079" endtime="20201117 14:47:27.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.083" level="INFO">VALUE: [0.00011727799999999844, 0.00011598599999999848, 0.00011623599999999873, 0.00011554199999999973, 0.00011634699999999928, 0.00011583299999999921, 0.00011561100000000157, 0.00011551399999999712, 0.0001155559999999993, 0.00011600000000000152, 0.00011575000000000127, 0.00011579199999999998, 0.00011597200000000238, 0.00011615300000000078, 0.00011609699999999903, 0.00011570900000000203, 0.00011593099999999967, 0.0001158889999999975, 0.00011567999999999995, 0.00011559699999999853, 0.00011561100000000157, 0.0001164170000000006, 0.00011627700000000143, 0.00011575000000000127, 0.00011616700000000035, 0.00011597299999999838, 0.00011584699999999878, 0.00011572199999999866, 0.00011609699999999903, 0.00011581900000000311, 0.00011562500000000114, 0.00011562500000000114, 0.00011563900000000071, 0.00011612499999999817, 0.0001161109999999986, 0.00011547200000000188, 0.00011579199999999998, 0.0001155559999999993, 0.00011634699999999928, 0.00011566699999999985, 0.00011611100000000207, 0.0001157910000000005, 0.00011650000000000202, 0.0001164170000000006, 0.00011552800000000016, 0.00011625000000000177, 0.0001155559999999993, 0.00011609699999999556, 0.00011622199999999916, 0.00011611099999999513]</msg>
<status status="PASS" starttime="20201117 14:47:27.081" endtime="20201117 14:47:27.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.076" endtime="20201117 14:47:27.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.086" endtime="20201117 14:47:27.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.089" endtime="20201117 14:47:27.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.088" endtime="20201117 14:47:27.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.084" endtime="20201117 14:47:27.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.696" endtime="20201117 14:47:27.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.694" endtime="20201117 14:47:27.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.693" endtime="20201117 14:47:27.110"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.113" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.121" endtime="20201117 14:47:27.140"></status>
</kw>
<msg timestamp="20201117 14:47:27.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.119" endtime="20201117 14:47:27.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.142" endtime="20201117 14:47:27.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.144" endtime="20201117 14:47:27.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.117" endtime="20201117 14:47:27.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.115" endtime="20201117 14:47:27.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.153" endtime="20201117 14:47:27.441"></status>
</kw>
<msg timestamp="20201117 14:47:27.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023579681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023697861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.152" endtime="20201117 14:47:27.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023579681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023697861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.445" endtime="20201117 14:47:27.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.453" endtime="20201117 14:47:27.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.149" endtime="20201117 14:47:27.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.148" endtime="20201117 14:47:27.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.460" level="INFO">${RESULT} = [{'time': 0.023697861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011817999999999898, 'source_diff': 0.00011817999999999898}, {'time': 0.023865111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:27.456" endtime="20201117 14:47:27.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.473" level="INFO">${ACCURACY} = {'diff': [0.00011817999999999898, 0.0001169170000000011, 0.00011719399999999755, 0.00011725000000000277, 0.00011722200000000016, 0.00011740199999999909, 0.00011723599999999973, 0.00011687499999999892,...</msg>
<status status="PASS" starttime="20201117 14:47:27.461" endtime="20201117 14:47:27.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.478" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.477" endtime="20201117 14:47:27.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.480" level="INFO">VALUE: [0.00011817999999999898, 0.0001169170000000011, 0.00011719399999999755, 0.00011725000000000277, 0.00011722200000000016, 0.00011740199999999909, 0.00011723599999999973, 0.00011687499999999892, 0.00011747200000000041, 0.00011668000000000095, 0.00011686099999999935, 0.00011698599999999948, 0.0001170690000000009, 0.0001173049999999981, 0.00011738800000000299, 0.00011720800000000059, 0.00011673599999999923, 0.00011673599999999923, 0.00011737499999999942, 0.000117291000000002, 0.00011669400000000052, 0.00011718000000000145, 0.0001170690000000009, 0.00011748599999999998, 0.00011704200000000123, 0.00011729200000000148, 0.00011662500000000214, 0.00011654099999999779, 0.00011697199999999991, 0.0001167369999999987, 0.00011673599999999923, 0.000117388999999999, 0.00011680500000000107, 0.00011736099999999985, 0.00011659799999999901, 0.00011709700000000003, 0.00011722200000000016, 0.00011709700000000003, 0.00011709700000000003, 0.0001171109999999996, 0.00011709800000000298, 0.00011734799999999976, 0.000117388999999999, 0.00011736099999999985, 0.00011684699999999978, 0.00011715199999999884, 0.00011734700000000028, 0.00011705500000000132, 0.0001172369999999992, 0.00011666700000000085]</msg>
<status status="PASS" starttime="20201117 14:47:27.479" endtime="20201117 14:47:27.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.474" endtime="20201117 14:47:27.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.483" endtime="20201117 14:47:27.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.487" endtime="20201117 14:47:27.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.485" endtime="20201117 14:47:27.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.482" endtime="20201117 14:47:27.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.113" endtime="20201117 14:47:27.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.111" endtime="20201117 14:47:27.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.111" endtime="20201117 14:47:27.508"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.510" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.518" endtime="20201117 14:47:27.538"></status>
</kw>
<msg timestamp="20201117 14:47:27.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.517" endtime="20201117 14:47:27.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.539" endtime="20201117 14:47:27.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.542" endtime="20201117 14:47:27.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.514" endtime="20201117 14:47:27.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.512" endtime="20201117 14:47:27.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.551" endtime="20201117 14:47:27.837"></status>
</kw>
<msg timestamp="20201117 14:47:27.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023573736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023692944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.550" endtime="20201117 14:47:27.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023573736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023692944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.841" endtime="20201117 14:47:27.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.850" endtime="20201117 14:47:27.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.547" endtime="20201117 14:47:27.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.545" endtime="20201117 14:47:27.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.857" level="INFO">${RESULT} = [{'time': 0.023692944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011920799999999912, 'source_diff': 0.00011920799999999912}, {'time': 0.023856194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:27.853" endtime="20201117 14:47:27.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.870" level="INFO">${ACCURACY} = {'diff': [0.00011920799999999912, 0.00011791599999999916, 0.00011755599999999783, 0.00011786100000000035, 0.00011777799999999894, 0.00011819399999999855, 0.00011818000000000245, 0.00011800000000000005...</msg>
<status status="PASS" starttime="20201117 14:47:27.858" endtime="20201117 14:47:27.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.874" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.873" endtime="20201117 14:47:27.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.877" level="INFO">VALUE: [0.00011920799999999912, 0.00011791599999999916, 0.00011755599999999783, 0.00011786100000000035, 0.00011777799999999894, 0.00011819399999999855, 0.00011818000000000245, 0.00011800000000000005, 0.00011816599999999941, 0.00011780599999999808, 0.00011847200000000141, 0.00011806899999999843, 0.00011812500000000017, 0.00011800000000000005, 0.00011834700000000128, 0.00011840299999999956, 0.0001175829999999975, 0.000118389, 0.00011822300000000063, 0.00011800000000000005, 0.00011840299999999956, 0.00011773600000000023, 0.00011801399999999962, 0.0001177369999999997, 0.00011802799999999919, 0.00011827799999999944, 0.00011770900000000056, 0.0001177910000000025, 0.00011840200000000009, 0.00011813800000000027, 0.00011826399999999987, 0.00011841699999999913, 0.00011763899999999924, 0.00011832000000000162, 0.00011780599999999808, 0.00011815299999999931, 0.00011811200000000008, 0.00011784700000000078, 0.00011752799999999869, 0.00011791599999999916, 0.00011759700000000053, 0.00011773600000000023, 0.00011802799999999919, 0.00011816599999999941, 0.0001177499999999998, 0.00011766700000000185, 0.00011765299999999881, 0.00011798600000000048, 0.00011841600000000313, 0.00011831899999999868]</msg>
<status status="PASS" starttime="20201117 14:47:27.876" endtime="20201117 14:47:27.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.871" endtime="20201117 14:47:27.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.880" endtime="20201117 14:47:27.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.883" endtime="20201117 14:47:27.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.882" endtime="20201117 14:47:27.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.878" endtime="20201117 14:47:27.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.511" endtime="20201117 14:47:27.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.509" endtime="20201117 14:47:27.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.508" endtime="20201117 14:47:27.905"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.907" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.915" endtime="20201117 14:47:27.935"></status>
</kw>
<msg timestamp="20201117 14:47:27.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.914" endtime="20201117 14:47:27.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.936" endtime="20201117 14:47:27.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.939" endtime="20201117 14:47:27.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.911" endtime="20201117 14:47:27.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.909" endtime="20201117 14:47:27.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.949" endtime="20201117 14:47:28.236"></status>
</kw>
<msg timestamp="20201117 14:47:28.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023789264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023909722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.947" endtime="20201117 14:47:28.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023789264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023909722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.240" endtime="20201117 14:47:28.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.248" endtime="20201117 14:47:28.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.944" endtime="20201117 14:47:28.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.942" endtime="20201117 14:47:28.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:28.255" level="INFO">${RESULT} = [{'time': 0.023909722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012045800000000037, 'source_diff': 0.00012045800000000037}, {'time': 0.024067, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:28.252" endtime="20201117 14:47:28.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:28.270" level="INFO">${ACCURACY} = {'diff': [0.00012045800000000037, 0.00011922200000000216, 0.00011890300000000006, 0.00011949999999999808, 0.00011866599999999991, 0.0001194309999999997, 0.00011933299999999925, 0.00011916699999999988,...</msg>
<status status="PASS" starttime="20201117 14:47:28.256" endtime="20201117 14:47:28.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.274" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:47:28.273" endtime="20201117 14:47:28.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.277" level="INFO">VALUE: [0.00012045800000000037, 0.00011922200000000216, 0.00011890300000000006, 0.00011949999999999808, 0.00011866599999999991, 0.0001194309999999997, 0.00011933299999999925, 0.00011916699999999988, 0.00011915300000000031, 0.0001187500000000008, 0.00011940300000000056, 0.00011947200000000241, 0.00011880600000000255, 0.00011874999999999733, 0.00011920900000000206, 0.00011855499999999936, 0.00011877799999999994, 0.00011859700000000153, 0.00011915300000000031, 0.00011902800000000019, 0.0001191110000000016, 0.00011867999999999948, 0.00011904199999999976, 0.00011892999999999973, 0.00011895799999999887, 0.00011901400000000062, 0.00011881899999999918, 0.00011866599999999991, 0.00011902800000000019, 0.00011951400000000112, 0.00011872199999999819, 0.0001187500000000008, 0.00011890300000000006, 0.00011897300000000138, 0.00011922199999999869, 0.00011867999999999948, 0.00011897199999999844, 0.0001194439999999998, 0.00011865299999999981, 0.000119082999999999, 0.00011902800000000019, 0.000118695000000002, 0.00011851400000000012, 0.00011948700000000145, 0.00011905599999999933, 0.00011872200000000166, 0.00011941700000000013, 0.00011886099999999789, 0.00011945900000000231, 0.00011879199999999951]</msg>
<status status="PASS" starttime="20201117 14:47:28.276" endtime="20201117 14:47:28.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.271" endtime="20201117 14:47:28.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.280" endtime="20201117 14:47:28.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:28.283" endtime="20201117 14:47:28.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.282" endtime="20201117 14:47:28.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.278" endtime="20201117 14:47:28.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.908" endtime="20201117 14:47:28.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.906" endtime="20201117 14:47:28.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.905" endtime="20201117 14:47:28.304"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.307" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.315" endtime="20201117 14:47:28.335"></status>
</kw>
<msg timestamp="20201117 14:47:28.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.314" endtime="20201117 14:47:28.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.336" endtime="20201117 14:47:28.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.339" endtime="20201117 14:47:28.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.311" endtime="20201117 14:47:28.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.309" endtime="20201117 14:47:28.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.348" endtime="20201117 14:47:28.634"></status>
</kw>
<msg timestamp="20201117 14:47:28.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023786347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023907194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.347" endtime="20201117 14:47:28.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023786347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023907194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.638" endtime="20201117 14:47:28.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.647" endtime="20201117 14:47:28.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.344" endtime="20201117 14:47:28.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.342" endtime="20201117 14:47:28.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:28.653" level="INFO">${RESULT} = [{'time': 0.023907194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012084700000000032, 'source_diff': 0.00012084700000000032}, {'time': 0.024062486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:28.650" endtime="20201117 14:47:28.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:28.666" level="INFO">${ACCURACY} = {'diff': [0.00012084700000000032, 0.00012009699999999957, 0.00012020800000000012, 0.00012016700000000088, 0.00012009699999999957, 0.00012018100000000045, 0.00011983300000000321, 0.00012027800000000144...</msg>
<status status="PASS" starttime="20201117 14:47:28.654" endtime="20201117 14:47:28.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.671" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:47:28.670" endtime="20201117 14:47:28.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.673" level="INFO">VALUE: [0.00012084700000000032, 0.00012009699999999957, 0.00012020800000000012, 0.00012016700000000088, 0.00012009699999999957, 0.00012018100000000045, 0.00011983300000000321, 0.00012027800000000144, 0.00012004199999999729, 0.00011972200000000266, 0.00012015300000000131, 0.00012029100000000154, 0.00012002799999999772, 0.00012005500000000086, 0.000120389000000002, 0.00012016699999999741, 0.00011990300000000106, 0.00011977799999999747, 0.00011972299999999866, 0.0001199440000000003, 0.00012013899999999827, 0.00011998600000000248, 0.00012008399999999947, 0.00012015199999999837, 0.00012040200000000209, 0.00012023599999999926, 0.00012036099999999939, 0.00012001400000000162, 0.0001205700000000004, 0.00012024999999999883, 0.00012009800000000251, 0.00012022199999999969, 0.00011968099999999995, 0.00011981900000000018, 0.00012000000000000205, 0.00012024999999999883, 0.0001204310000000007, 0.00012008399999999947, 0.00012029199999999754, 0.00011999999999999858, 0.00011956899999999993, 0.00012047299999999941, 0.00011994499999999977, 0.00011961099999999864, 0.00011961099999999864, 0.00012019399999999708, 0.00011987499999999846, 0.00012005600000000033, 0.00012000000000000205, 0.00011968099999999648]</msg>
<status status="PASS" starttime="20201117 14:47:28.672" endtime="20201117 14:47:28.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.667" endtime="20201117 14:47:28.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.676" endtime="20201117 14:47:28.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:28.680" endtime="20201117 14:47:28.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.678" endtime="20201117 14:47:28.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.675" endtime="20201117 14:47:28.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.308" endtime="20201117 14:47:28.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.306" endtime="20201117 14:47:28.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.305" endtime="20201117 14:47:28.701"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.703" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.712" endtime="20201117 14:47:28.732"></status>
</kw>
<msg timestamp="20201117 14:47:28.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.710" endtime="20201117 14:47:28.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.734" endtime="20201117 14:47:28.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.736" endtime="20201117 14:47:28.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.708" endtime="20201117 14:47:28.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.705" endtime="20201117 14:47:28.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.745" endtime="20201117 14:47:29.032"></status>
</kw>
<msg timestamp="20201117 14:47:29.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024350667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024473111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.743" endtime="20201117 14:47:29.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024350667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024473111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.036" endtime="20201117 14:47:29.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.044" endtime="20201117 14:47:29.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.741" endtime="20201117 14:47:29.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.739" endtime="20201117 14:47:29.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.051" level="INFO">${RESULT} = [{'time': 0.024473111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012244399999999933, 'source_diff': 0.00012244399999999933}, {'time': 0.024634403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:29.048" endtime="20201117 14:47:29.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.064" level="INFO">${ACCURACY} = {'diff': [0.00012244399999999933, 0.00012061099999999964, 0.00012119400000000155, 0.00012134800000000029, 0.00012099999999999958, 0.00012070800000000062, 0.00012136100000000039, 0.00012086099999999989...</msg>
<status status="PASS" starttime="20201117 14:47:29.052" endtime="20201117 14:47:29.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.069" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.068" endtime="20201117 14:47:29.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.071" level="INFO">VALUE: [0.00012244399999999933, 0.00012061099999999964, 0.00012119400000000155, 0.00012134800000000029, 0.00012099999999999958, 0.00012070800000000062, 0.00012136100000000039, 0.00012086099999999989, 0.00012105499999999839, 0.000121083000000001, 0.00012108400000000047, 0.00012120799999999765, 0.00012102699999999925, 0.00012106900000000143, 0.00012065299999999834, 0.00012097200000000044, 0.00012073599999999976, 0.00012070800000000062, 0.00012137499999999996, 0.00012116700000000188, 0.00012108299999999753, 0.00012084799999999979, 0.00012068100000000095, 0.00012104199999999829, 0.00012082000000000065, 0.00012072299999999966, 0.00012097299999999991, 0.00012148600000000051, 0.00012130499999999864, 0.00012066700000000138, 0.00012119399999999808, 0.00012067999999999801, 0.00012079200000000151, 0.0001210969999999971, 0.00012066700000000138, 0.00012054200000000126, 0.0001209310000000012, 0.0001209579999999974, 0.00012129100000000254, 0.00012065299999999834, 0.00012070800000000062, 0.00012052799999999822, 0.00012104200000000176, 0.00012124999999999636, 0.00012059700000000007, 0.00012066599999999844, 0.00012084799999999979, 0.00012072199999999672, 0.00012052800000000169, 0.00012095800000000434]</msg>
<status status="PASS" starttime="20201117 14:47:29.070" endtime="20201117 14:47:29.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.065" endtime="20201117 14:47:29.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.074" endtime="20201117 14:47:29.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.078" endtime="20201117 14:47:29.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.076" endtime="20201117 14:47:29.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.072" endtime="20201117 14:47:29.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.704" endtime="20201117 14:47:29.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.702" endtime="20201117 14:47:29.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.701" endtime="20201117 14:47:29.099"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.101" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.110" endtime="20201117 14:47:29.130"></status>
</kw>
<msg timestamp="20201117 14:47:29.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.108" endtime="20201117 14:47:29.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.131" endtime="20201117 14:47:29.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.134" endtime="20201117 14:47:29.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.106" endtime="20201117 14:47:29.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.103" endtime="20201117 14:47:29.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.143" endtime="20201117 14:47:29.429"></status>
</kw>
<msg timestamp="20201117 14:47:29.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023759444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023882, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:29.141" endtime="20201117 14:47:29.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023759444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023882, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:29.433" endtime="20201117 14:47:29.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.441" endtime="20201117 14:47:29.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.139" endtime="20201117 14:47:29.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.137" endtime="20201117 14:47:29.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.448" level="INFO">${RESULT} = [{'time': 0.023882, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012255599999999936, 'source_diff': 0.00012255599999999936}, {'time': 0.024047292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:29.445" endtime="20201117 14:47:29.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.461" level="INFO">${ACCURACY} = {'diff': [0.00012255599999999936, 0.00012241699999999966, 0.00012180599999999861, 0.00012238900000000053, 0.00012173600000000076, 0.00012161100000000064, 0.0001220969999999981, 0.00012247199999999847,...</msg>
<status status="PASS" starttime="20201117 14:47:29.449" endtime="20201117 14:47:29.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.466" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.465" endtime="20201117 14:47:29.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.468" level="INFO">VALUE: [0.00012255599999999936, 0.00012241699999999966, 0.00012180599999999861, 0.00012238900000000053, 0.00012173600000000076, 0.00012161100000000064, 0.0001220969999999981, 0.00012247199999999847, 0.00012204099999999982, 0.00012241699999999966, 0.0001215969999999976, 0.00012183299999999828, 0.00012215299999999985, 0.00012163899999999978, 0.0001220969999999981, 0.00012209800000000104, 0.00012209700000000157, 0.00012179099999999957, 0.0001223480000000013, 0.00012236099999999792, 0.0001224860000000015, 0.00012204099999999982, 0.0001219029999999996, 0.0001220700000000019, 0.00012233300000000225, 0.00012173600000000076, 0.0001219029999999996, 0.00012154099999999932, 0.00012180499999999914, 0.0001216380000000003, 0.00012205599999999886, 0.00012204199999999929, 0.00012191699999999916, 0.0001215830000000015, 0.00012172200000000119, 0.0001219029999999996, 0.00012198600000000101, 0.0001217639999999999, 0.00012161099999999717, 0.00012202799999999972, 0.00012198600000000101, 0.00012197199999999797, 0.00012187500000000046, 0.0001221799999999995, 0.00012191699999999916, 0.00012158299999999803, 0.00012211100000000114, 0.00012197299999999744, 0.00012209699999999463, 0.00012204099999999635]</msg>
<status status="PASS" starttime="20201117 14:47:29.467" endtime="20201117 14:47:29.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.462" endtime="20201117 14:47:29.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.472" endtime="20201117 14:47:29.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.475" endtime="20201117 14:47:29.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.474" endtime="20201117 14:47:29.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.470" endtime="20201117 14:47:29.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.102" endtime="20201117 14:47:29.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.100" endtime="20201117 14:47:29.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.099" endtime="20201117 14:47:29.496"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.499" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.507" endtime="20201117 14:47:29.527"></status>
</kw>
<msg timestamp="20201117 14:47:29.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.505" endtime="20201117 14:47:29.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.528" endtime="20201117 14:47:29.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.531" endtime="20201117 14:47:29.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.503" endtime="20201117 14:47:29.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.501" endtime="20201117 14:47:29.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.540" endtime="20201117 14:47:29.827"></status>
</kw>
<msg timestamp="20201117 14:47:29.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023534389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023658056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.538" endtime="20201117 14:47:29.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023534389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023658056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.831" endtime="20201117 14:47:29.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.839" endtime="20201117 14:47:29.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.536" endtime="20201117 14:47:29.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.534" endtime="20201117 14:47:29.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.847" level="INFO">${RESULT} = [{'time': 0.023658056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012366700000000092, 'source_diff': 0.00012366700000000092}, {'time': 0.023822361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:29.843" endtime="20201117 14:47:29.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.861" level="INFO">${ACCURACY} = {'diff': [0.00012366700000000092, 0.00012256899999999946, 0.0001226250000000012, 0.00012351399999999818, 0.00012268, 0.0001228619999999979, 0.00012255599999999936, 0.00012282000000000265, 0.0001234300...</msg>
<status status="PASS" starttime="20201117 14:47:29.848" endtime="20201117 14:47:29.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.866" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.865" endtime="20201117 14:47:29.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.869" level="INFO">VALUE: [0.00012366700000000092, 0.00012256899999999946, 0.0001226250000000012, 0.00012351399999999818, 0.00012268, 0.0001228619999999979, 0.00012255599999999936, 0.00012282000000000265, 0.00012343000000000076, 0.00012274999999999786, 0.00012322199999999922, 0.00012286099999999842, 0.00012268, 0.0001227229999999982, 0.00012261099999999817, 0.00012298599999999854, 0.0001233060000000001, 0.00012268, 0.00012323699999999826, 0.00012250000000000108, 0.00012262499999999774, 0.00012294399999999983, 0.00012294399999999983, 0.00012263900000000078, 0.00012343000000000076, 0.00012322199999999922, 0.0001234449999999998, 0.00012341700000000067, 0.00012256900000000293, 0.00012312499999999824, 0.00012261100000000164, 0.00012287500000000146, 0.00012266699999999991, 0.00012294399999999983, 0.00012311099999999867, 0.00012261100000000164, 0.0001234999999999986, 0.00012329199999999707, 0.00012302800000000072, 0.0001230969999999991, 0.00012284799999999832, 0.00012340299999999763, 0.00012284699999999885, 0.00012261100000000164, 0.00012337500000000196, 0.00012256999999999893, 0.0001229999999999981, 0.00012272199999999872, 0.00012298599999999854, 0.00012304099999999735]</msg>
<status status="PASS" starttime="20201117 14:47:29.867" endtime="20201117 14:47:29.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.862" endtime="20201117 14:47:29.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.872" endtime="20201117 14:47:29.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.875" endtime="20201117 14:47:29.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.874" endtime="20201117 14:47:29.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.870" endtime="20201117 14:47:29.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.499" endtime="20201117 14:47:29.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.498" endtime="20201117 14:47:29.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.497" endtime="20201117 14:47:29.897"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.899" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.907" endtime="20201117 14:47:29.927"></status>
</kw>
<msg timestamp="20201117 14:47:29.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.906" endtime="20201117 14:47:29.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.929" endtime="20201117 14:47:29.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.931" endtime="20201117 14:47:29.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.903" endtime="20201117 14:47:29.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.901" endtime="20201117 14:47:29.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.940" endtime="20201117 14:47:30.226"></status>
</kw>
<msg timestamp="20201117 14:47:30.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023653403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023778806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.939" endtime="20201117 14:47:30.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023653403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023778806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.230" endtime="20201117 14:47:30.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.238" endtime="20201117 14:47:30.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.936" endtime="20201117 14:47:30.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.934" endtime="20201117 14:47:30.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:30.245" level="INFO">${RESULT} = [{'time': 0.023778806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012540299999999963, 'source_diff': 0.00012540299999999963}, {'time': 0.023948069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:30.242" endtime="20201117 14:47:30.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:30.259" level="INFO">${ACCURACY} = {'diff': [0.00012540299999999963, 0.00012420799999999718, 0.00012447200000000047, 0.00012379200000000104, 0.0001244169999999982, 0.00012424999999999936, 0.00012416599999999847, 0.00012411099999999967,...</msg>
<status status="PASS" starttime="20201117 14:47:30.246" endtime="20201117 14:47:30.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.263" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:47:30.262" endtime="20201117 14:47:30.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.266" level="INFO">VALUE: [0.00012540299999999963, 0.00012420799999999718, 0.00012447200000000047, 0.00012379200000000104, 0.0001244169999999982, 0.00012424999999999936, 0.00012416599999999847, 0.00012411099999999967, 0.00012386099999999942, 0.0001241800000000015, 0.00012441700000000167, 0.00012405500000000139, 0.00012411099999999967, 0.00012373600000000276, 0.00012356999999999993, 0.00012393100000000074, 0.00012451400000000265, 0.00012383399999999975, 0.00012448600000000004, 0.0001239169999999977, 0.00012384699999999985, 0.00012348599999999904, 0.00012437499999999949, 0.00012416700000000142, 0.0001242779999999985, 0.00012391700000000117, 0.00012397199999999997, 0.00012402800000000172, 0.00012384699999999985, 0.00012422200000000022, 0.00012427800000000197, 0.00012402800000000172, 0.00012420800000000065, 0.00012355600000000036, 0.00012440299999999863, 0.00012447299999999994, 0.00012372199999999972, 0.0001239580000000004, 0.00012388899999999856, 0.00012386099999999942, 0.00012433300000000078, 0.00012383300000000028, 0.00012429199999999807, 0.00012390299999999813, 0.0001239999999999991, 0.00012420799999999718, 0.0001241109999999962, 0.00012372199999999972, 0.00012377800000000494, 0.00012434700000000382]</msg>
<status status="PASS" starttime="20201117 14:47:30.264" endtime="20201117 14:47:30.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.259" endtime="20201117 14:47:30.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.269" endtime="20201117 14:47:30.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:30.272" endtime="20201117 14:47:30.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.270" endtime="20201117 14:47:30.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.267" endtime="20201117 14:47:30.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.900" endtime="20201117 14:47:30.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.898" endtime="20201117 14:47:30.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.897" endtime="20201117 14:47:30.293"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.296" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.304" endtime="20201117 14:47:30.324"></status>
</kw>
<msg timestamp="20201117 14:47:30.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.302" endtime="20201117 14:47:30.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.325" endtime="20201117 14:47:30.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.328" endtime="20201117 14:47:30.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.300" endtime="20201117 14:47:30.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.298" endtime="20201117 14:47:30.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.337" endtime="20201117 14:47:30.622"></status>
</kw>
<msg timestamp="20201117 14:47:30.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023714361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023839903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.335" endtime="20201117 14:47:30.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023714361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023839903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.627" endtime="20201117 14:47:30.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.639" endtime="20201117 14:47:30.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.333" endtime="20201117 14:47:30.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.331" endtime="20201117 14:47:30.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:30.646" level="INFO">${RESULT} = [{'time': 0.023839903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012554199999999932, 'source_diff': 0.00012554199999999932}, {'time': 0.024015125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:30.643" endtime="20201117 14:47:30.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:30.659" level="INFO">${ACCURACY} = {'diff': [0.00012554199999999932, 0.000124777999999999, 0.00012534700000000135, 0.00012538900000000006, 0.0001252779999999995, 0.0001250970000000011, 0.00012504199999999882, 0.0001249169999999987, 0.0...</msg>
<status status="PASS" starttime="20201117 14:47:30.647" endtime="20201117 14:47:30.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.664" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:47:30.663" endtime="20201117 14:47:30.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.666" level="INFO">VALUE: [0.00012554199999999932, 0.000124777999999999, 0.00012534700000000135, 0.00012538900000000006, 0.0001252779999999995, 0.0001250970000000011, 0.00012504199999999882, 0.0001249169999999987, 0.000125471999999998, 0.00012451399999999918, 0.0001247360000000003, 0.00012501399999999968, 0.00012508300000000153, 0.00012490199999999965, 0.00012547200000000147, 0.00012477800000000247, 0.00012540299999999963, 0.00012490299999999913, 0.00012472200000000072, 0.00012487499999999999, 0.0001254169999999992, 0.0001252230000000007, 0.00012515299999999938, 0.00012454099999999885, 0.00012451399999999918, 0.00012540299999999963, 0.00012490299999999913, 0.00012481899999999824, 0.00012461100000000017, 0.00012515300000000285, 0.0001245420000000018, 0.00012497200000000097, 0.0001247909999999991, 0.00012537500000000049, 0.00012548600000000104, 0.00012472199999999725, 0.00012517999999999904, 0.0001247230000000002, 0.00012516700000000242, 0.00012527800000000297, 0.0001252360000000008, 0.00012498600000000054, 0.00012530499999999917, 0.00012541599999999972, 0.00012525000000000036, 0.00012465300000000235, 0.0001247360000000003, 0.000124777999999999, 0.00012455499999999842, 0.00012455600000000483]</msg>
<status status="PASS" starttime="20201117 14:47:30.665" endtime="20201117 14:47:30.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.660" endtime="20201117 14:47:30.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.669" endtime="20201117 14:47:30.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:30.673" endtime="20201117 14:47:30.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.671" endtime="20201117 14:47:30.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.668" endtime="20201117 14:47:30.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.296" endtime="20201117 14:47:30.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.295" endtime="20201117 14:47:30.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.294" endtime="20201117 14:47:30.694"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.696" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.704" endtime="20201117 14:47:30.725"></status>
</kw>
<msg timestamp="20201117 14:47:30.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.703" endtime="20201117 14:47:30.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.726" endtime="20201117 14:47:30.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.728" endtime="20201117 14:47:30.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.700" endtime="20201117 14:47:30.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.698" endtime="20201117 14:47:30.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.738" endtime="20201117 14:47:31.025"></status>
</kw>
<msg timestamp="20201117 14:47:31.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023522319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023649806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.736" endtime="20201117 14:47:31.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023522319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023649806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.029" endtime="20201117 14:47:31.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.037" endtime="20201117 14:47:31.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.733" endtime="20201117 14:47:31.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.732" endtime="20201117 14:47:31.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.044" level="INFO">${RESULT} = [{'time': 0.023649806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012748699999999905, 'source_diff': 0.00012748699999999905}, {'time': 0.023817069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:31.041" endtime="20201117 14:47:31.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.057" level="INFO">${ACCURACY} = {'diff': [0.00012748699999999905, 0.0001259719999999985, 0.00012593099999999927, 0.00012622199999999875, 0.00012576400000000043, 0.00012570900000000162, 0.000125778, 0.00012630599999999964, 0.00012601...</msg>
<status status="PASS" starttime="20201117 14:47:31.045" endtime="20201117 14:47:31.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.061" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.060" endtime="20201117 14:47:31.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.064" level="INFO">VALUE: [0.00012748699999999905, 0.0001259719999999985, 0.00012593099999999927, 0.00012622199999999875, 0.00012576400000000043, 0.00012570900000000162, 0.000125778, 0.00012630599999999964, 0.00012601400000000068, 0.0001264589999999989, 0.0001262780000000005, 0.00012620899999999866, 0.00012615300000000038, 0.00012616699999999995, 0.00012641600000000072, 0.00012615300000000038, 0.0001265000000000016, 0.0001263329999999993, 0.00012598600000000154, 0.0001264450000000028, 0.00012558299999999856, 0.00012588900000000056, 0.00012640200000000115, 0.00012608399999999853, 0.0001260559999999994, 0.00012638900000000106, 0.00012586099999999795, 0.00012602800000000025, 0.00012590299999999666, 0.00012595799999999893, 0.00012570799999999868, 0.00012559699999999813, 0.0001263329999999993, 0.0001257910000000001, 0.00012567999999999954, 0.00012626400000000093, 0.00012605499999999992, 0.0001256520000000004, 0.00012595900000000188, 0.00012568099999999902, 0.0001260559999999994, 0.00012609699999999863, 0.00012593099999999927, 0.00012604199999999982, 0.0001255000000000006, 0.00012561100000000117, 0.00012613900000000428, 0.0001256109999999977, 0.00012636199999999792, 0.00012622199999999528]</msg>
<status status="PASS" starttime="20201117 14:47:31.063" endtime="20201117 14:47:31.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.058" endtime="20201117 14:47:31.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.067" endtime="20201117 14:47:31.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.071" endtime="20201117 14:47:31.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.069" endtime="20201117 14:47:31.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.066" endtime="20201117 14:47:31.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.697" endtime="20201117 14:47:31.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.695" endtime="20201117 14:47:31.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.694" endtime="20201117 14:47:31.092"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.094" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.102" endtime="20201117 14:47:31.122"></status>
</kw>
<msg timestamp="20201117 14:47:31.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.101" endtime="20201117 14:47:31.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.124" endtime="20201117 14:47:31.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.127" endtime="20201117 14:47:31.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.098" endtime="20201117 14:47:31.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.096" endtime="20201117 14:47:31.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.136" endtime="20201117 14:47:31.423"></status>
</kw>
<msg timestamp="20201117 14:47:31.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023583917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023711722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.134" endtime="20201117 14:47:31.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023583917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023711722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.427" endtime="20201117 14:47:31.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.435" endtime="20201117 14:47:31.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.131" endtime="20201117 14:47:31.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.130" endtime="20201117 14:47:31.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.442" level="INFO">${RESULT} = [{'time': 0.023711722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012780500000000167, 'source_diff': 0.00012780500000000167}, {'time': 0.023885958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:31.439" endtime="20201117 14:47:31.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.457" level="INFO">${ACCURACY} = {'diff': [0.00012780500000000167, 0.00012670799999999968, 0.0001272780000000015, 0.00012712499999999877, 0.00012688900000000156, 0.00012741599999999825, 0.00012651400000000118, 0.00012673599999999882,...</msg>
<status status="PASS" starttime="20201117 14:47:31.443" endtime="20201117 14:47:31.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.461" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.460" endtime="20201117 14:47:31.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.464" level="INFO">VALUE: [0.00012780500000000167, 0.00012670799999999968, 0.0001272780000000015, 0.00012712499999999877, 0.00012688900000000156, 0.00012741599999999825, 0.00012651400000000118, 0.00012673599999999882, 0.00012716700000000095, 0.00012673599999999882, 0.0001269170000000007, 0.00012743100000000077, 0.00012668000000000054, 0.00012665300000000088, 0.0001268889999999981, 0.00012662500000000174, 0.00012694499999999984, 0.00012662499999999827, 0.0001271390000000018, 0.00012656999999999946, 0.0001265559999999999, 0.00012705499999999745, 0.00012720800000000018, 0.0001274589999999999, 0.00012744400000000086, 0.0001273200000000002, 0.00012722199999999975, 0.00012726399999999846, 0.00012655500000000042, 0.00012712499999999877, 0.0001265000000000016, 0.0001270000000000021, 0.000126778000000001, 0.00012745800000000043, 0.00012745900000000338, 0.00012665300000000088, 0.00012698699999999855, 0.00012731900000000074, 0.00012687499999999852, 0.00012662499999999827, 0.00012670799999999968, 0.00012698599999999907, 0.00012737500000000249, 0.00012694499999999984, 0.0001266390000000013, 0.0001271529999999979, 0.00012693100000000374, 0.000126778000000001, 0.00012666600000000444, 0.0001273330000000003]</msg>
<status status="PASS" starttime="20201117 14:47:31.462" endtime="20201117 14:47:31.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.458" endtime="20201117 14:47:31.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.467" endtime="20201117 14:47:31.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.470" endtime="20201117 14:47:31.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.469" endtime="20201117 14:47:31.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.465" endtime="20201117 14:47:31.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.095" endtime="20201117 14:47:31.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.093" endtime="20201117 14:47:31.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.092" endtime="20201117 14:47:31.491"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.494" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.502" endtime="20201117 14:47:31.522"></status>
</kw>
<msg timestamp="20201117 14:47:31.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.501" endtime="20201117 14:47:31.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.524" endtime="20201117 14:47:31.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.526" endtime="20201117 14:47:31.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.498" endtime="20201117 14:47:31.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.496" endtime="20201117 14:47:31.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.535" endtime="20201117 14:47:31.821"></status>
</kw>
<msg timestamp="20201117 14:47:31.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024064889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024193389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.534" endtime="20201117 14:47:31.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024064889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024193389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.825" endtime="20201117 14:47:31.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.833" endtime="20201117 14:47:31.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.531" endtime="20201117 14:47:31.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.530" endtime="20201117 14:47:31.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.840" level="INFO">${RESULT} = [{'time': 0.024193389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012850000000000014, 'source_diff': 0.00012850000000000014}, {'time': 0.024354694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:31.837" endtime="20201117 14:47:31.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.853" level="INFO">${ACCURACY} = {'diff': [0.00012850000000000014, 0.00012779099999999863, 0.0001276109999999997, 0.00012829200000000207, 0.00012772299999999973, 0.00012773599999999982, 0.00012820800000000118, 0.0001276940000000011, ...</msg>
<status status="PASS" starttime="20201117 14:47:31.841" endtime="20201117 14:47:31.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.858" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.856" endtime="20201117 14:47:31.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.860" level="INFO">VALUE: [0.00012850000000000014, 0.00012779099999999863, 0.0001276109999999997, 0.00012829200000000207, 0.00012772299999999973, 0.00012773599999999982, 0.00012820800000000118, 0.0001276940000000011, 0.00012752799999999828, 0.00012765300000000188, 0.00012831899999999827, 0.00012770900000000016, 0.00012752800000000175, 0.00012829099999999913, 0.0001280139999999992, 0.00012820900000000066, 0.00012765300000000188, 0.0001275979999999996, 0.00012804200000000182, 0.00012772200000000025, 0.00012768100000000102, 0.00012772200000000025, 0.00012847300000000048, 0.00012786099999999995, 0.00012809700000000063, 0.00012783299999999734, 0.0001276529999999984, 0.00012762499999999927, 0.00012784799999999985, 0.0001283330000000013, 0.00012786199999999942, 0.00012787499999999952, 0.00012770800000000068, 0.00012751400000000218, 0.00012820900000000066, 0.00012770800000000068, 0.0001277499999999994, 0.00012840299999999916, 0.00012844500000000134, 0.0001278330000000008, 0.00012808300000000106, 0.00012840299999999916, 0.00012762500000000274, 0.00012762499999999927, 0.00012840299999999916, 0.00012793000000000526, 0.00012813900000000628, 0.00012819499999999762, 0.00012758299999999362, 0.0001277639999999955]</msg>
<status status="PASS" starttime="20201117 14:47:31.859" endtime="20201117 14:47:31.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.854" endtime="20201117 14:47:31.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.864" endtime="20201117 14:47:31.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.868" endtime="20201117 14:47:31.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.866" endtime="20201117 14:47:31.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.862" endtime="20201117 14:47:31.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.494" endtime="20201117 14:47:31.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.492" endtime="20201117 14:47:31.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.492" endtime="20201117 14:47:31.889"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.892" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.900" endtime="20201117 14:47:31.920"></status>
</kw>
<msg timestamp="20201117 14:47:31.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.898" endtime="20201117 14:47:31.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.922" endtime="20201117 14:47:31.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.924" endtime="20201117 14:47:31.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.896" endtime="20201117 14:47:31.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.894" endtime="20201117 14:47:31.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.933" endtime="20201117 14:47:32.219"></status>
</kw>
<msg timestamp="20201117 14:47:32.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023671208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023801292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.931" endtime="20201117 14:47:32.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023671208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023801292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.224" endtime="20201117 14:47:32.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.232" endtime="20201117 14:47:32.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.929" endtime="20201117 14:47:32.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.927" endtime="20201117 14:47:32.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:32.238" level="INFO">${RESULT} = [{'time': 0.023801292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013008400000000253, 'source_diff': 0.00013008400000000253}, {'time': 0.0239785, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:32.235" endtime="20201117 14:47:32.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:32.251" level="INFO">${ACCURACY} = {'diff': [0.00013008400000000253, 0.0001287500000000004, 0.00012881899999999877, 0.00012880599999999867, 0.0001287919999999991, 0.00012861099999999723, 0.00012900000000000064, 0.00012907000000000196, ...</msg>
<status status="PASS" starttime="20201117 14:47:32.239" endtime="20201117 14:47:32.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.256" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:47:32.255" endtime="20201117 14:47:32.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.258" level="INFO">VALUE: [0.00013008400000000253, 0.0001287500000000004, 0.00012881899999999877, 0.00012880599999999867, 0.0001287919999999991, 0.00012861099999999723, 0.00012900000000000064, 0.00012907000000000196, 0.00012900000000000064, 0.00012870900000000116, 0.00012940300000000016, 0.0001294309999999993, 0.0001287079999999982, 0.00012906899999999902, 0.00012883299999999834, 0.00012879099999999963, 0.00012927800000000003, 0.00012909699999999816, 0.00012894499999999837, 0.0001291940000000026, 0.0001290980000000011, 0.00012945799999999896, 0.00012858400000000103, 0.00012850000000000014, 0.0001288890000000001, 0.00012913900000000034, 0.000129263000000001, 0.00012868100000000202, 0.00012859700000000113, 0.0001285139999999997, 0.00012876399999999996, 0.00012937500000000102, 0.00012931899999999927, 0.00012866699999999898, 0.00012859700000000113, 0.0001289590000000014, 0.00012890299999999966, 0.00012876399999999996, 0.00012912500000000077, 0.00012870800000000168, 0.00012859700000000113, 0.00012872200000000125, 0.0001289439999999989, 0.0001285560000000019, 0.00012870800000000168, 0.0001286529999999994, 0.00012868099999999855, 0.00012940300000000016, 0.0001292780000000035, 0.000128778000000003]</msg>
<status status="PASS" starttime="20201117 14:47:32.257" endtime="20201117 14:47:32.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.252" endtime="20201117 14:47:32.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.262" endtime="20201117 14:47:32.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:32.265" endtime="20201117 14:47:32.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.264" endtime="20201117 14:47:32.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.260" endtime="20201117 14:47:32.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.892" endtime="20201117 14:47:32.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.890" endtime="20201117 14:47:32.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.890" endtime="20201117 14:47:32.286"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.289" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.297" endtime="20201117 14:47:32.317"></status>
</kw>
<msg timestamp="20201117 14:47:32.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.295" endtime="20201117 14:47:32.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.319" endtime="20201117 14:47:32.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.321" endtime="20201117 14:47:32.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.293" endtime="20201117 14:47:32.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.291" endtime="20201117 14:47:32.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.330" endtime="20201117 14:47:32.617"></status>
</kw>
<msg timestamp="20201117 14:47:32.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023566375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023696931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.329" endtime="20201117 14:47:32.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023566375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023696931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.621" endtime="20201117 14:47:32.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.629" endtime="20201117 14:47:32.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.326" endtime="20201117 14:47:32.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.324" endtime="20201117 14:47:32.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:32.636" level="INFO">${RESULT} = [{'time': 0.023696931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013055600000000042, 'source_diff': 0.00013055600000000042}, {'time': 0.023877139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:32.632" endtime="20201117 14:47:32.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:32.649" level="INFO">${ACCURACY} = {'diff': [0.00013055600000000042, 0.000129569999999999, 0.00013012500000000177, 0.00012970800000000268, 0.00013033299999999984, 0.0001295140000000007, 0.0001300980000000021, 0.00013005500000000045, 0....</msg>
<status status="PASS" starttime="20201117 14:47:32.637" endtime="20201117 14:47:32.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.653" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:47:32.652" endtime="20201117 14:47:32.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.656" level="INFO">VALUE: [0.00013055600000000042, 0.000129569999999999, 0.00013012500000000177, 0.00012970800000000268, 0.00013033299999999984, 0.0001295140000000007, 0.0001300980000000021, 0.00013005500000000045, 0.00012972299999999826, 0.000130166000000001, 0.00013022199999999928, 0.0001299439999999999, 0.00012969399999999964, 0.00012977799999999706, 0.0001297079999999992, 0.00013044499999999987, 0.00013000000000000164, 0.0001300699999999995, 0.00012965200000000093, 0.00012958399999999856, 0.00013041600000000125, 0.00012977800000000053, 0.0001295140000000007, 0.00013024999999999842, 0.00012997199999999903, 0.00012997199999999903, 0.00012987499999999805, 0.0001299439999999999, 0.0001295829999999991, 0.0001302089999999992, 0.00013022199999999928, 0.00013027800000000103, 0.00012980599999999967, 0.00012950000000000114, 0.00012986200000000142, 0.0001295829999999991, 0.00012952800000000028, 0.00013013899999999787, 0.00012962500000000127, 0.0001297500000000014, 0.00012952800000000028, 0.00012970800000000268, 0.0001301249999999983, 0.0001299439999999999, 0.00013012500000000177, 0.00012987500000000152, 0.0001301530000000009, 0.0001299580000000064, 0.0001298890000000011, 0.000129569000000003]</msg>
<status status="PASS" starttime="20201117 14:47:32.654" endtime="20201117 14:47:32.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.650" endtime="20201117 14:47:32.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.659" endtime="20201117 14:47:32.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:32.663" endtime="20201117 14:47:32.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.661" endtime="20201117 14:47:32.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.658" endtime="20201117 14:47:32.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.289" endtime="20201117 14:47:32.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.288" endtime="20201117 14:47:32.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.287" endtime="20201117 14:47:32.684"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.686" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.694" endtime="20201117 14:47:32.715"></status>
</kw>
<msg timestamp="20201117 14:47:32.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.693" endtime="20201117 14:47:32.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.716" endtime="20201117 14:47:32.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.719" endtime="20201117 14:47:32.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.690" endtime="20201117 14:47:32.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.688" endtime="20201117 14:47:32.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.728" endtime="20201117 14:47:33.015"></status>
</kw>
<msg timestamp="20201117 14:47:33.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023646486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023778764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.726" endtime="20201117 14:47:33.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023646486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023778764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.019" endtime="20201117 14:47:33.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.027" endtime="20201117 14:47:33.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.724" endtime="20201117 14:47:33.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.722" endtime="20201117 14:47:33.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.034" level="INFO">${RESULT} = [{'time': 0.023778764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013227799999999956, 'source_diff': 0.00013227799999999956}, {'time': 0.023959014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:33.030" endtime="20201117 14:47:33.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.049" level="INFO">${ACCURACY} = {'diff': [0.00013227799999999956, 0.00013145800000000096, 0.00013065299999999794, 0.00013079099999999816, 0.00013127799999999856, 0.00013115199999999896, 0.000131263999999999, 0.00013127800000000203, ...</msg>
<status status="PASS" starttime="20201117 14:47:33.035" endtime="20201117 14:47:33.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.053" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.052" endtime="20201117 14:47:33.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.056" level="INFO">VALUE: [0.00013227799999999956, 0.00013145800000000096, 0.00013065299999999794, 0.00013079099999999816, 0.00013127799999999856, 0.00013115199999999896, 0.000131263999999999, 0.00013127800000000203, 0.0001308469999999999, 0.0001305279999999978, 0.00013056900000000052, 0.00013098600000000307, 0.0001310279999999983, 0.00013052800000000128, 0.0001310700000000005, 0.0001314310000000013, 0.00013144399999999792, 0.00013097200000000003, 0.00013062500000000227, 0.00013104200000000135, 0.00013057, 0.00013076400000000196, 0.00013097200000000003, 0.00013106899999999755, 0.00013069400000000064, 0.0001308890000000021, 0.0001305279999999978, 0.0001314860000000001, 0.00013083300000000034, 0.00013101399999999874, 0.00013073599999999935, 0.0001310700000000005, 0.000131263999999999, 0.00013076400000000196, 0.00013055600000000042, 0.00013088799999999914, 0.00013055600000000042, 0.0001309440000000009, 0.00013074999999999892, 0.00013113899999999887, 0.00013059699999999966, 0.00013124999999999942, 0.0001313340000000003, 0.00013113900000000234, 0.00013130600000000464, 0.00013055599999999695, 0.00013051399999999824, 0.00013137500000000302, 0.00013076400000000543, 0.00013122200000000028]</msg>
<status status="PASS" starttime="20201117 14:47:33.054" endtime="20201117 14:47:33.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.050" endtime="20201117 14:47:33.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.059" endtime="20201117 14:47:33.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.062" endtime="20201117 14:47:33.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.060" endtime="20201117 14:47:33.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.057" endtime="20201117 14:47:33.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.687" endtime="20201117 14:47:33.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.685" endtime="20201117 14:47:33.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.684" endtime="20201117 14:47:33.083"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.086" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.094" endtime="20201117 14:47:33.114"></status>
</kw>
<msg timestamp="20201117 14:47:33.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.092" endtime="20201117 14:47:33.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.116" endtime="20201117 14:47:33.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.118" endtime="20201117 14:47:33.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.090" endtime="20201117 14:47:33.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.087" endtime="20201117 14:47:33.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.127" endtime="20201117 14:47:33.414"></status>
</kw>
<msg timestamp="20201117 14:47:33.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023757333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023890278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.126" endtime="20201117 14:47:33.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023757333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023890278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.418" endtime="20201117 14:47:33.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.427" endtime="20201117 14:47:33.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.123" endtime="20201117 14:47:33.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.121" endtime="20201117 14:47:33.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.433" level="INFO">${RESULT} = [{'time': 0.023890278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013294500000000237, 'source_diff': 0.00013294500000000237}, {'time': 0.024075472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:33.430" endtime="20201117 14:47:33.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.446" level="INFO">${ACCURACY} = {'diff': [0.00013294500000000237, 0.00013211100000000073, 0.0001319310000000018, 0.00013238900000000012, 0.00013182000000000124, 0.0001324029999999997, 0.00013180600000000167, 0.0001317639999999995, 0...</msg>
<status status="PASS" starttime="20201117 14:47:33.434" endtime="20201117 14:47:33.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.451" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.450" endtime="20201117 14:47:33.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.453" level="INFO">VALUE: [0.00013294500000000237, 0.00013211100000000073, 0.0001319310000000018, 0.00013238900000000012, 0.00013182000000000124, 0.0001324029999999997, 0.00013180600000000167, 0.0001317639999999995, 0.00013151399999999924, 0.00013206900000000202, 0.000132264, 0.00013208299999999812, 0.00013197200000000103, 0.00013163899999999937, 0.00013182000000000124, 0.000132264, 0.00013173600000000035, 0.00013165199999999946, 0.00013194500000000137, 0.00013222200000000128, 0.00013211100000000073, 0.00013172300000000026, 0.00013188899999999962, 0.00013188899999999962, 0.0001317639999999995, 0.0001317080000000012, 0.00013187500000000005, 0.00013231999999999827, 0.00013181900000000177, 0.00013184800000000038, 0.00013238800000000064, 0.00013234800000000088, 0.00013241599999999978, 0.00013166599999999903, 0.00013188899999999962, 0.00013151399999999924, 0.00013229099999999966, 0.00013230600000000217, 0.00013236200000000045, 0.00013225000000000042, 0.00013219500000000162, 0.00013223600000000085, 0.00013218099999999858, 0.0001319310000000018, 0.0001323200000000052, 0.0001321110000000042, 0.00013195800000000146, 0.00013169400000000164, 0.00013212500000000377, 0.00013168100000000155]</msg>
<status status="PASS" starttime="20201117 14:47:33.452" endtime="20201117 14:47:33.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.447" endtime="20201117 14:47:33.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.456" endtime="20201117 14:47:33.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.460" endtime="20201117 14:47:33.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.458" endtime="20201117 14:47:33.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.455" endtime="20201117 14:47:33.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.086" endtime="20201117 14:47:33.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.084" endtime="20201117 14:47:33.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.084" endtime="20201117 14:47:33.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.852" endtime="20201117 14:47:33.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.490" endtime="20201117 14:47:33.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.488" endtime="20201117 14:47:33.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.487" endtime="20201117 14:47:33.510"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:46:53.747" endtime="20201117 14:47:33.511" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.519" endtime="20201117 14:47:33.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.518" endtime="20201117 14:47:33.540"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.553" endtime="20201117 14:47:33.566"></status>
</kw>
<msg timestamp="20201117 14:47:33.567" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.551" endtime="20201117 14:47:33.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.569" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.568" endtime="20201117 14:47:33.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.572" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:47:33.570" endtime="20201117 14:47:33.573"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:33.548" endtime="20201117 14:47:33.573"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:33.546" endtime="20201117 14:47:33.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.545" endtime="20201117 14:47:33.574"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:47:33.578" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:47:33.577" endtime="20201117 14:47:33.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.575" endtime="20201117 14:47:33.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.544" endtime="20201117 14:47:33.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.543" endtime="20201117 14:47:33.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.580" endtime="20201117 14:47:33.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.542" endtime="20201117 14:47:33.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.540" endtime="20201117 14:47:33.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.517" endtime="20201117 14:47:33.582"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.586" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.594" endtime="20201117 14:47:33.611"></status>
</kw>
<msg timestamp="20201117 14:47:33.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.593" endtime="20201117 14:47:33.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.613" endtime="20201117 14:47:33.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.615" endtime="20201117 14:47:33.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.590" endtime="20201117 14:47:33.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.588" endtime="20201117 14:47:33.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.625" endtime="20201117 14:47:33.910"></status>
</kw>
<msg timestamp="20201117 14:47:33.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067068986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067147625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.623" endtime="20201117 14:47:33.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067068986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067147625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.915" endtime="20201117 14:47:33.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.923" endtime="20201117 14:47:33.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.620" endtime="20201117 14:47:33.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.619" endtime="20201117 14:47:33.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.930" level="INFO">${RESULT} = [{'time': 0.067147625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.863900000000534e-05, 'source_diff': 7.863900000000534e-05}, {'time': 0.067250042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:33.926" endtime="20201117 14:47:33.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.945" level="INFO">${ACCURACY} = {'diff': [7.863900000000534e-05, 7.781999999999234e-05, 7.7846999999992e-05, 7.776400000000794e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.776399999999406e-05, 7.775000...</msg>
<status status="PASS" starttime="20201117 14:47:33.931" endtime="20201117 14:47:33.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.949" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.948" endtime="20201117 14:47:33.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.951" level="INFO">VALUE: [7.863900000000534e-05, 7.781999999999234e-05, 7.7846999999992e-05, 7.776400000000794e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.776399999999406e-05, 7.775000000000143e-05, 7.776400000000794e-05, 7.77770000000011e-05, 7.775000000000143e-05, 7.773599999999492e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.776400000000794e-05, 7.776400000000794e-05, 7.774999999998755e-05, 7.773599999999492e-05, 7.775000000000143e-05, 7.769500000000262e-05, 7.774999999998755e-05, 7.769400000000315e-05, 7.777800000000057e-05, 7.775000000000143e-05, 7.773599999999492e-05, 7.775000000000143e-05, 7.77910000000076e-05, 7.776399999999406e-05, 7.777800000000057e-05, 7.775000000000143e-05, 7.773599999999492e-05, 7.775000000000143e-05, 7.776400000000794e-05, 7.775000000000143e-05, 7.780599999999971e-05, 7.776400000000794e-05, 7.776399999999406e-05, 7.776399999999406e-05, 7.781999999999234e-05, 7.775000000000143e-05, 7.776399999999406e-05, 7.775000000000143e-05, 7.776400000000794e-05, 7.77360000000088e-05, 7.776399999999406e-05, 7.773599999999492e-05, 7.776399999999406e-05, 7.772199999998841e-05, 7.775000000000143e-05]</msg>
<status status="PASS" starttime="20201117 14:47:33.950" endtime="20201117 14:47:33.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.945" endtime="20201117 14:47:33.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.955" endtime="20201117 14:47:33.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.958" endtime="20201117 14:47:33.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.957" endtime="20201117 14:47:33.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.953" endtime="20201117 14:47:33.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.587" endtime="20201117 14:47:33.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.585" endtime="20201117 14:47:33.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.584" endtime="20201117 14:47:33.979"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.982" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.990" endtime="20201117 14:47:34.006"></status>
</kw>
<msg timestamp="20201117 14:47:34.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.988" endtime="20201117 14:47:34.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.008" endtime="20201117 14:47:34.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.010" endtime="20201117 14:47:34.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.986" endtime="20201117 14:47:34.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.984" endtime="20201117 14:47:34.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.019" endtime="20201117 14:47:34.305"></status>
</kw>
<msg timestamp="20201117 14:47:34.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023770986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023849681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.018" endtime="20201117 14:47:34.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023770986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023849681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.310" endtime="20201117 14:47:34.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.318" endtime="20201117 14:47:34.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.015" endtime="20201117 14:47:34.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.013" endtime="20201117 14:47:34.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.325" level="INFO">${RESULT} = [{'time': 0.023849681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.869500000000015e-05, 'source_diff': 7.869500000000015e-05}, {'time': 0.023950514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:34.322" endtime="20201117 14:47:34.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.338" level="INFO">${ACCURACY} = {'diff': [7.869500000000015e-05, 7.784699999999894e-05, 7.777800000000057e-05, 7.777800000000057e-05, 7.777800000000057e-05, 7.776399999999753e-05, 7.777800000000057e-05, 7.7764000000001e-05, 7.777700...</msg>
<status status="PASS" starttime="20201117 14:47:34.326" endtime="20201117 14:47:34.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.343" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.342" endtime="20201117 14:47:34.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.345" level="INFO">VALUE: [7.869500000000015e-05, 7.784699999999894e-05, 7.777800000000057e-05, 7.777800000000057e-05, 7.777800000000057e-05, 7.776399999999753e-05, 7.777800000000057e-05, 7.7764000000001e-05, 7.77770000000011e-05, 7.7764000000001e-05, 7.774999999999796e-05, 7.773600000000186e-05, 7.776399999999753e-05, 7.777800000000057e-05, 7.776399999999753e-05, 7.776300000000153e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.776399999999753e-05, 7.777800000000057e-05, 7.7764000000001e-05, 7.776399999999753e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.770899999999872e-05, 7.77770000000011e-05, 7.780599999999971e-05, 7.776399999999753e-05, 7.779100000000067e-05, 7.7764000000001e-05, 7.779200000000014e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.7764000000001e-05, 7.77770000000011e-05, 7.775000000000143e-05, 7.777800000000057e-05, 7.7764000000001e-05, 7.776399999999753e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.780500000000024e-05, 7.779200000000014e-05, 7.777800000000057e-05, 7.77770000000011e-05, 7.777800000000057e-05, 7.777800000000057e-05, 7.777800000000057e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.344" endtime="20201117 14:47:34.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.339" endtime="20201117 14:47:34.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.348" endtime="20201117 14:47:34.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.352" endtime="20201117 14:47:34.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.350" endtime="20201117 14:47:34.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.347" endtime="20201117 14:47:34.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.982" endtime="20201117 14:47:34.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.980" endtime="20201117 14:47:34.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.980" endtime="20201117 14:47:34.373"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.376" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.384" endtime="20201117 14:47:34.401"></status>
</kw>
<msg timestamp="20201117 14:47:34.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.382" endtime="20201117 14:47:34.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.402" endtime="20201117 14:47:34.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.405" endtime="20201117 14:47:34.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.380" endtime="20201117 14:47:34.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.377" endtime="20201117 14:47:34.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.414" endtime="20201117 14:47:34.704"></status>
</kw>
<msg timestamp="20201117 14:47:34.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023773278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023851917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.413" endtime="20201117 14:47:34.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023773278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023851917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.708" endtime="20201117 14:47:34.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.717" endtime="20201117 14:47:34.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.410" endtime="20201117 14:47:34.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.408" endtime="20201117 14:47:34.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.725" level="INFO">${RESULT} = [{'time': 0.023851917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.863900000000187e-05, 'source_diff': 7.863900000000187e-05}, {'time': 0.023949319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:34.721" endtime="20201117 14:47:34.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.739" level="INFO">${ACCURACY} = {'diff': [7.863900000000187e-05, 7.779100000000067e-05, 7.781900000000327e-05, 7.7764000000001e-05, 7.777800000000057e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.78189999999998e-05, 7.77779999999...</msg>
<status status="PASS" starttime="20201117 14:47:34.726" endtime="20201117 14:47:34.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.743" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.742" endtime="20201117 14:47:34.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.746" level="INFO">VALUE: [7.863900000000187e-05, 7.779100000000067e-05, 7.781900000000327e-05, 7.7764000000001e-05, 7.777800000000057e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.78189999999998e-05, 7.77779999999971e-05, 7.7764000000001e-05, 7.777800000000057e-05, 7.7764000000001e-05, 7.77779999999971e-05, 7.773599999999839e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.776399999999753e-05, 7.7764000000001e-05, 7.776399999999753e-05, 7.780599999999971e-05, 7.770899999999872e-05, 7.777800000000057e-05, 7.780500000000024e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.779200000000014e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.780500000000024e-05, 7.773599999999839e-05, 7.783400000000232e-05, 7.780599999999971e-05, 7.7764000000001e-05, 7.777800000000057e-05, 7.7764000000001e-05, 7.783299999999937e-05, 7.780500000000024e-05, 7.77770000000011e-05, 7.773599999999839e-05, 7.770800000000272e-05, 7.776299999999806e-05, 7.780599999999971e-05, 7.77779999999971e-05, 7.780599999999971e-05, 7.772199999999882e-05, 7.776399999999753e-05, 7.779200000000014e-05, 7.7764000000001e-05, 7.776399999999753e-05, 7.775000000000143e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.744" endtime="20201117 14:47:34.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.740" endtime="20201117 14:47:34.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.749" endtime="20201117 14:47:34.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.752" endtime="20201117 14:47:34.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.751" endtime="20201117 14:47:34.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.747" endtime="20201117 14:47:34.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.376" endtime="20201117 14:47:34.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.374" endtime="20201117 14:47:34.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.374" endtime="20201117 14:47:34.773"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.776" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.783" endtime="20201117 14:47:34.800"></status>
</kw>
<msg timestamp="20201117 14:47:34.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.782" endtime="20201117 14:47:34.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.802" endtime="20201117 14:47:34.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.804" endtime="20201117 14:47:34.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.779" endtime="20201117 14:47:34.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.777" endtime="20201117 14:47:34.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.813" endtime="20201117 14:47:35.102"></status>
</kw>
<msg timestamp="20201117 14:47:35.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023482917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023561542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.812" endtime="20201117 14:47:35.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023482917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023561542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.106" endtime="20201117 14:47:35.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.115" endtime="20201117 14:47:35.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.809" endtime="20201117 14:47:35.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.808" endtime="20201117 14:47:35.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.122" level="INFO">${RESULT} = [{'time': 0.023561542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.86250000000023e-05, 'source_diff': 7.86250000000023e-05}, {'time': 0.023655806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:35.119" endtime="20201117 14:47:35.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.135" level="INFO">${ACCURACY} = {'diff': [7.86250000000023e-05, 7.7764000000001e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.776399999999753e-05, 7.7750000...</msg>
<status status="PASS" starttime="20201117 14:47:35.123" endtime="20201117 14:47:35.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.140" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.139" endtime="20201117 14:47:35.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.142" level="INFO">VALUE: [7.86250000000023e-05, 7.7764000000001e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.776399999999753e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.781900000000327e-05, 7.769399999999968e-05, 7.774999999999796e-05, 7.774999999999796e-05, 7.776399999999753e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.773600000000186e-05, 7.777800000000057e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.777800000000057e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.770799999999925e-05, 7.7764000000001e-05, 7.772200000000229e-05, 7.777800000000057e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.772200000000229e-05, 7.776399999999753e-05, 7.7764000000001e-05, 7.776399999999753e-05, 7.7764000000001e-05, 7.773600000000186e-05, 7.774999999999796e-05, 7.777800000000057e-05, 7.776300000000153e-05, 7.777800000000057e-05, 7.7764000000001e-05, 7.773599999999839e-05, 7.779200000000014e-05, 7.770800000000272e-05, 7.7764000000001e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.141" endtime="20201117 14:47:35.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.136" endtime="20201117 14:47:35.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.145" endtime="20201117 14:47:35.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.148" endtime="20201117 14:47:35.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.147" endtime="20201117 14:47:35.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.144" endtime="20201117 14:47:35.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.776" endtime="20201117 14:47:35.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.774" endtime="20201117 14:47:35.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.774" endtime="20201117 14:47:35.169"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.172" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.181" endtime="20201117 14:47:35.198"></status>
</kw>
<msg timestamp="20201117 14:47:35.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.179" endtime="20201117 14:47:35.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.199" endtime="20201117 14:47:35.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.201" endtime="20201117 14:47:35.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.177" endtime="20201117 14:47:35.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.174" endtime="20201117 14:47:35.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.210" endtime="20201117 14:47:35.513"></status>
</kw>
<msg timestamp="20201117 14:47:35.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024618833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024697444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.209" endtime="20201117 14:47:35.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024618833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024697444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.517" endtime="20201117 14:47:35.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.525" endtime="20201117 14:47:35.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.206" endtime="20201117 14:47:35.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.205" endtime="20201117 14:47:35.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.532" level="INFO">${RESULT} = [{'time': 0.024697444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861099999999926e-05, 'source_diff': 7.861099999999926e-05}, {'time': 0.024792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:35.529" endtime="20201117 14:47:35.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.545" level="INFO">${ACCURACY} = {'diff': [7.861099999999926e-05, 7.775000000000143e-05, 7.773600000000186e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.772200000000229e-05, 7.773599999999839e-05, 7.772300000000176e-05, 7.7736...</msg>
<status status="PASS" starttime="20201117 14:47:35.533" endtime="20201117 14:47:35.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.550" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.549" endtime="20201117 14:47:35.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.552" level="INFO">VALUE: [7.861099999999926e-05, 7.775000000000143e-05, 7.773600000000186e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.772200000000229e-05, 7.773599999999839e-05, 7.772300000000176e-05, 7.773699999999786e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.776300000000153e-05, 7.780500000000024e-05, 7.775000000000143e-05, 7.769499999999915e-05, 7.773700000000133e-05, 7.773600000000186e-05, 7.781999999999928e-05, 7.77229999999983e-05, 7.7764000000001e-05, 7.773600000000186e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.776399999999753e-05, 7.780500000000024e-05, 7.773700000000133e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.772200000000229e-05, 7.773600000000186e-05, 7.773700000000133e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.773700000000133e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.772199999999882e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.770799999999925e-05, 7.774999999999796e-05, 7.776399999999753e-05, 7.768099999999958e-05, 7.774999999999796e-05, 7.772199999999882e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.551" endtime="20201117 14:47:35.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.546" endtime="20201117 14:47:35.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.555" endtime="20201117 14:47:35.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.559" endtime="20201117 14:47:35.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.557" endtime="20201117 14:47:35.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.554" endtime="20201117 14:47:35.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.173" endtime="20201117 14:47:35.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.171" endtime="20201117 14:47:35.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.170" endtime="20201117 14:47:35.580"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.583" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.591" endtime="20201117 14:47:35.607"></status>
</kw>
<msg timestamp="20201117 14:47:35.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.589" endtime="20201117 14:47:35.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.609" endtime="20201117 14:47:35.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.611" endtime="20201117 14:47:35.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.587" endtime="20201117 14:47:35.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.585" endtime="20201117 14:47:35.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.620" endtime="20201117 14:47:35.907"></status>
</kw>
<msg timestamp="20201117 14:47:35.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023905667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023984264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.619" endtime="20201117 14:47:35.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023905667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023984264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.912" endtime="20201117 14:47:35.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.921" endtime="20201117 14:47:35.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.616" endtime="20201117 14:47:35.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.615" endtime="20201117 14:47:35.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.928" level="INFO">${RESULT} = [{'time': 0.023984264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.859700000000316e-05, 'source_diff': 7.859700000000316e-05}, {'time': 0.024080694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:35.924" endtime="20201117 14:47:35.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.941" level="INFO">${ACCURACY} = {'diff': [7.859700000000316e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.774999...</msg>
<status status="PASS" starttime="20201117 14:47:35.929" endtime="20201117 14:47:35.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.946" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.945" endtime="20201117 14:47:35.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.948" level="INFO">VALUE: [7.859700000000316e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.774999999999796e-05, 7.779200000000014e-05, 7.769399999999968e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.773600000000186e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.770900000000219e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.777800000000057e-05, 7.775000000000143e-05, 7.772199999999882e-05, 7.774999999999796e-05, 7.773699999999786e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.776299999999806e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.779200000000014e-05, 7.779100000000067e-05, 7.774999999999796e-05, 7.773600000000186e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.769499999999915e-05, 7.775000000000143e-05, 7.776399999999753e-05, 7.773700000000133e-05, 7.775000000000143e-05, 7.773699999999786e-05, 7.779200000000014e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.765300000000044e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.947" endtime="20201117 14:47:35.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.942" endtime="20201117 14:47:35.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.956" endtime="20201117 14:47:35.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.959" endtime="20201117 14:47:35.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.957" endtime="20201117 14:47:35.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.954" endtime="20201117 14:47:35.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.583" endtime="20201117 14:47:35.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.581" endtime="20201117 14:47:35.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.580" endtime="20201117 14:47:35.980"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.982" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.990" endtime="20201117 14:47:36.007"></status>
</kw>
<msg timestamp="20201117 14:47:36.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.989" endtime="20201117 14:47:36.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.009" endtime="20201117 14:47:36.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.011" endtime="20201117 14:47:36.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.986" endtime="20201117 14:47:36.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.984" endtime="20201117 14:47:36.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.020" endtime="20201117 14:47:36.308"></status>
</kw>
<msg timestamp="20201117 14:47:36.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023427139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02350575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:36.018" endtime="20201117 14:47:36.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023427139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02350575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:36.313" endtime="20201117 14:47:36.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.321" endtime="20201117 14:47:36.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.016" endtime="20201117 14:47:36.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.014" endtime="20201117 14:47:36.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.328" level="INFO">${RESULT} = [{'time': 0.02350575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861099999999926e-05, 'source_diff': 7.861099999999926e-05}, {'time': 0.023608722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:36.325" endtime="20201117 14:47:36.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.341" level="INFO">${ACCURACY} = {'diff': [7.861099999999926e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.773600000000186e-05, 7.77229999999983e-05, 7.775000000000143e-05, 7.779200000000014e-05, 7.773599999999839e-05, 7.78050...</msg>
<status status="PASS" starttime="20201117 14:47:36.329" endtime="20201117 14:47:36.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.346" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.345" endtime="20201117 14:47:36.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.350" level="INFO">VALUE: [7.861099999999926e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.773600000000186e-05, 7.77229999999983e-05, 7.775000000000143e-05, 7.779200000000014e-05, 7.773599999999839e-05, 7.780500000000024e-05, 7.780500000000024e-05, 7.773599999999839e-05, 7.773600000000186e-05, 7.775000000000143e-05, 7.776300000000153e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.77229999999983e-05, 7.772300000000176e-05, 7.772200000000229e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.773600000000186e-05, 7.772199999999882e-05, 7.772199999999882e-05, 7.773599999999839e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.772200000000229e-05, 7.773600000000186e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.776399999999753e-05, 7.775000000000143e-05, 7.773600000000186e-05, 7.774999999999796e-05, 7.780500000000024e-05, 7.772199999999882e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.77229999999983e-05, 7.773600000000186e-05, 7.7764000000001e-05, 7.773600000000186e-05, 7.772199999999882e-05]</msg>
<status status="PASS" starttime="20201117 14:47:36.347" endtime="20201117 14:47:36.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.342" endtime="20201117 14:47:36.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.353" endtime="20201117 14:47:36.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.356" endtime="20201117 14:47:36.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.355" endtime="20201117 14:47:36.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.351" endtime="20201117 14:47:36.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.983" endtime="20201117 14:47:36.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.981" endtime="20201117 14:47:36.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.980" endtime="20201117 14:47:36.377"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.380" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.388" endtime="20201117 14:47:36.404"></status>
</kw>
<msg timestamp="20201117 14:47:36.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.386" endtime="20201117 14:47:36.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.406" endtime="20201117 14:47:36.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.408" endtime="20201117 14:47:36.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.384" endtime="20201117 14:47:36.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.382" endtime="20201117 14:47:36.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.417" endtime="20201117 14:47:36.705"></status>
</kw>
<msg timestamp="20201117 14:47:36.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023544417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023623083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.416" endtime="20201117 14:47:36.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023544417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023623083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.709" endtime="20201117 14:47:36.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.718" endtime="20201117 14:47:36.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.413" endtime="20201117 14:47:36.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.411" endtime="20201117 14:47:36.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.724" level="INFO">${RESULT} = [{'time': 0.023623083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.866599999999807e-05, 'source_diff': 7.866599999999807e-05}, {'time': 0.023727889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:36.721" endtime="20201117 14:47:36.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.738" level="INFO">${ACCURACY} = {'diff': [7.866599999999807e-05, 7.776399999999753e-05, 7.773600000000186e-05, 7.769499999999915e-05, 7.772199999999882e-05, 7.773600000000186e-05, 7.775000000000143e-05, 7.77229999999983e-05, 7.77360...</msg>
<status status="PASS" starttime="20201117 14:47:36.726" endtime="20201117 14:47:36.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.742" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.741" endtime="20201117 14:47:36.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.745" level="INFO">VALUE: [7.866599999999807e-05, 7.776399999999753e-05, 7.773600000000186e-05, 7.769499999999915e-05, 7.772199999999882e-05, 7.773600000000186e-05, 7.775000000000143e-05, 7.77229999999983e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.773600000000186e-05, 7.772199999999882e-05, 7.773599999999839e-05, 7.776399999999753e-05, 7.773699999999786e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.7764000000001e-05, 7.774999999999796e-05, 7.770900000000219e-05, 7.774999999999796e-05, 7.773699999999786e-05, 7.779200000000014e-05, 7.773600000000186e-05, 7.768099999999958e-05, 7.77229999999983e-05, 7.777800000000057e-05, 7.773600000000186e-05, 7.773600000000186e-05, 7.773600000000186e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.769399999999968e-05, 7.7764000000001e-05, 7.777800000000057e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.773600000000186e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.776399999999753e-05, 7.78189999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:47:36.744" endtime="20201117 14:47:36.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.739" endtime="20201117 14:47:36.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.748" endtime="20201117 14:47:36.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.751" endtime="20201117 14:47:36.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.750" endtime="20201117 14:47:36.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.746" endtime="20201117 14:47:36.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.380" endtime="20201117 14:47:36.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.379" endtime="20201117 14:47:36.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.378" endtime="20201117 14:47:36.772"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.775" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.782" endtime="20201117 14:47:36.799"></status>
</kw>
<msg timestamp="20201117 14:47:36.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.781" endtime="20201117 14:47:36.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.801" endtime="20201117 14:47:36.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.803" endtime="20201117 14:47:36.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.779" endtime="20201117 14:47:36.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.777" endtime="20201117 14:47:36.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.812" endtime="20201117 14:47:37.098"></status>
</kw>
<msg timestamp="20201117 14:47:37.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023438958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023517556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.810" endtime="20201117 14:47:37.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023438958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023517556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.102" endtime="20201117 14:47:37.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.112" endtime="20201117 14:47:37.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.808" endtime="20201117 14:47:37.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.806" endtime="20201117 14:47:37.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.118" level="INFO">${RESULT} = [{'time': 0.023517556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.859799999999917e-05, 'source_diff': 7.859799999999917e-05}, {'time': 0.023609986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:37.115" endtime="20201117 14:47:37.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.131" level="INFO">${ACCURACY} = {'diff': [7.859799999999917e-05, 7.779200000000014e-05, 7.775000000000143e-05, 7.77770000000011e-05, 7.772199999999882e-05, 7.772199999999882e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.77359...</msg>
<status status="PASS" starttime="20201117 14:47:37.119" endtime="20201117 14:47:37.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.136" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.135" endtime="20201117 14:47:37.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.138" level="INFO">VALUE: [7.859799999999917e-05, 7.779200000000014e-05, 7.775000000000143e-05, 7.77770000000011e-05, 7.772199999999882e-05, 7.772199999999882e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.773600000000186e-05, 7.773600000000186e-05, 7.770799999999925e-05, 7.773600000000186e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.7764000000001e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.768099999999958e-05, 7.770799999999925e-05, 7.770799999999925e-05, 7.772199999999882e-05, 7.7764000000001e-05, 7.773700000000133e-05, 7.772200000000229e-05, 7.774999999999796e-05, 7.772200000000229e-05, 7.772300000000176e-05, 7.772200000000229e-05, 7.772300000000176e-05, 7.77229999999983e-05, 7.773599999999839e-05, 7.77779999999971e-05, 7.77229999999983e-05, 7.773700000000133e-05, 7.768000000000011e-05, 7.775000000000143e-05, 7.772200000000229e-05, 7.773600000000186e-05, 7.765300000000044e-05, 7.772199999999882e-05, 7.773599999999839e-05, 7.772200000000229e-05, 7.777800000000057e-05, 7.768000000000011e-05, 7.770899999999872e-05, 7.773599999999839e-05, 7.773700000000133e-05]</msg>
<status status="PASS" starttime="20201117 14:47:37.137" endtime="20201117 14:47:37.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.132" endtime="20201117 14:47:37.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.141" endtime="20201117 14:47:37.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.145" endtime="20201117 14:47:37.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.143" endtime="20201117 14:47:37.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.140" endtime="20201117 14:47:37.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.775" endtime="20201117 14:47:37.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.773" endtime="20201117 14:47:37.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.773" endtime="20201117 14:47:37.166"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.168" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.176" endtime="20201117 14:47:37.193"></status>
</kw>
<msg timestamp="20201117 14:47:37.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.175" endtime="20201117 14:47:37.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.195" endtime="20201117 14:47:37.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.197" endtime="20201117 14:47:37.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.172" endtime="20201117 14:47:37.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.170" endtime="20201117 14:47:37.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.206" endtime="20201117 14:47:37.493"></status>
</kw>
<msg timestamp="20201117 14:47:37.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023687597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023766236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.204" endtime="20201117 14:47:37.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023687597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023766236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.497" endtime="20201117 14:47:37.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.505" endtime="20201117 14:47:37.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.202" endtime="20201117 14:47:37.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.200" endtime="20201117 14:47:37.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.513" level="INFO">${RESULT} = [{'time': 0.023766236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.86389999999984e-05, 'source_diff': 7.86389999999984e-05}, {'time': 0.023867583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:37.508" endtime="20201117 14:47:37.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.526" level="INFO">${ACCURACY} = {'diff': [7.86389999999984e-05, 7.772200000000229e-05, 7.772200000000229e-05, 7.775000000000143e-05, 7.772199999999882e-05, 7.773599999999839e-05, 7.772199999999882e-05, 7.772199999999882e-05, 7.77360...</msg>
<status status="PASS" starttime="20201117 14:47:37.514" endtime="20201117 14:47:37.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.530" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.529" endtime="20201117 14:47:37.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.533" level="INFO">VALUE: [7.86389999999984e-05, 7.772200000000229e-05, 7.772200000000229e-05, 7.775000000000143e-05, 7.772199999999882e-05, 7.773599999999839e-05, 7.772199999999882e-05, 7.772199999999882e-05, 7.773600000000186e-05, 7.773700000000133e-05, 7.773599999999839e-05, 7.770799999999925e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.774999999999796e-05, 7.766700000000001e-05, 7.773699999999786e-05, 7.766600000000054e-05, 7.773599999999839e-05, 7.774999999999796e-05, 7.773600000000186e-05, 7.772200000000229e-05, 7.772200000000229e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.772199999999882e-05, 7.772199999999882e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.773700000000133e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.77229999999983e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.773700000000133e-05, 7.770799999999925e-05, 7.774999999999796e-05, 7.772200000000229e-05, 7.773599999999839e-05, 7.780500000000024e-05, 7.773599999999839e-05, 7.773699999999786e-05, 7.773699999999786e-05, 7.772200000000229e-05, 7.77229999999983e-05, 7.775000000000143e-05]</msg>
<status status="PASS" starttime="20201117 14:47:37.531" endtime="20201117 14:47:37.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.527" endtime="20201117 14:47:37.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.536" endtime="20201117 14:47:37.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.539" endtime="20201117 14:47:37.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.538" endtime="20201117 14:47:37.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.534" endtime="20201117 14:47:37.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.169" endtime="20201117 14:47:37.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.167" endtime="20201117 14:47:37.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.166" endtime="20201117 14:47:37.560"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.562" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.570" endtime="20201117 14:47:37.587"></status>
</kw>
<msg timestamp="20201117 14:47:37.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.569" endtime="20201117 14:47:37.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.589" endtime="20201117 14:47:37.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.592" endtime="20201117 14:47:37.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.566" endtime="20201117 14:47:37.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.564" endtime="20201117 14:47:37.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.600" endtime="20201117 14:47:37.887"></status>
</kw>
<msg timestamp="20201117 14:47:37.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023523667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023602403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.599" endtime="20201117 14:47:37.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023523667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023602403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.891" endtime="20201117 14:47:37.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.899" endtime="20201117 14:47:37.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.596" endtime="20201117 14:47:37.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.595" endtime="20201117 14:47:37.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.906" level="INFO">${RESULT} = [{'time': 0.023602403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.873599999999939e-05, 'source_diff': 7.873599999999939e-05}, {'time': 0.023695778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:37.903" endtime="20201117 14:47:37.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.920" level="INFO">${ACCURACY} = {'diff': [7.873599999999939e-05, 7.815300000000094e-05, 7.773600000000186e-05, 7.788900000000112e-05, 7.774999999999796e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.773700000000133e-05, 7.7750...</msg>
<status status="PASS" starttime="20201117 14:47:37.907" endtime="20201117 14:47:37.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.925" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.924" endtime="20201117 14:47:37.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.927" level="INFO">VALUE: [7.873599999999939e-05, 7.815300000000094e-05, 7.773600000000186e-05, 7.788900000000112e-05, 7.774999999999796e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.773700000000133e-05, 7.775000000000143e-05, 7.82640000000015e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.772199999999882e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.769399999999968e-05, 7.80969999999992e-05, 7.772200000000229e-05, 7.791600000000079e-05, 7.7764000000001e-05, 7.773600000000186e-05, 7.774999999999796e-05, 7.770799999999925e-05, 7.795899999999897e-05, 7.773600000000186e-05, 7.777800000000057e-05, 7.773599999999839e-05, 7.779199999999667e-05, 7.813900000000137e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.772199999999882e-05, 7.774999999999796e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.788900000000112e-05, 7.79449999999994e-05, 7.824999999999846e-05, 7.805499999999702e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.812499999999833e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.779200000000014e-05, 7.800000000000168e-05, 7.779100000000067e-05, 7.816600000000104e-05, 7.7764000000001e-05]</msg>
<status status="PASS" starttime="20201117 14:47:37.926" endtime="20201117 14:47:37.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.921" endtime="20201117 14:47:37.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.930" endtime="20201117 14:47:37.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.933" endtime="20201117 14:47:37.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.932" endtime="20201117 14:47:37.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.928" endtime="20201117 14:47:37.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.563" endtime="20201117 14:47:37.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.561" endtime="20201117 14:47:37.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.561" endtime="20201117 14:47:37.955"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.957" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.966" endtime="20201117 14:47:37.983"></status>
</kw>
<msg timestamp="20201117 14:47:37.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.965" endtime="20201117 14:47:37.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.986" endtime="20201117 14:47:37.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.990" endtime="20201117 14:47:37.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.962" endtime="20201117 14:47:37.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.959" endtime="20201117 14:47:37.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.999" endtime="20201117 14:47:38.286"></status>
</kw>
<msg timestamp="20201117 14:47:38.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025141403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025219944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.997" endtime="20201117 14:47:38.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025141403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025219944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.290" endtime="20201117 14:47:38.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.299" endtime="20201117 14:47:38.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.995" endtime="20201117 14:47:38.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.993" endtime="20201117 14:47:38.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.305" level="INFO">${RESULT} = [{'time': 0.025219944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.854100000000142e-05, 'source_diff': 7.854100000000142e-05}, {'time': 0.025321417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:38.302" endtime="20201117 14:47:38.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.319" level="INFO">${ACCURACY} = {'diff': [7.854100000000142e-05, 7.748599999999814e-05, 7.750000000000118e-05, 7.750000000000118e-05, 7.748599999999814e-05, 7.748600000000161e-05, 7.748599999999814e-05, 7.756899999999955e-05, 7.7499...</msg>
<status status="PASS" starttime="20201117 14:47:38.306" endtime="20201117 14:47:38.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.324" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.323" endtime="20201117 14:47:38.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.326" level="INFO">VALUE: [7.854100000000142e-05, 7.748599999999814e-05, 7.750000000000118e-05, 7.750000000000118e-05, 7.748599999999814e-05, 7.748600000000161e-05, 7.748599999999814e-05, 7.756899999999955e-05, 7.749999999999771e-05, 7.748600000000161e-05, 7.748700000000108e-05, 7.761099999999826e-05, 7.755499999999999e-05, 7.748599999999814e-05, 7.761099999999826e-05, 7.76250000000013e-05, 7.748599999999814e-05, 7.748600000000161e-05, 7.75969999999987e-05, 7.748599999999814e-05, 7.759700000000216e-05, 7.761100000000173e-05, 7.748600000000161e-05, 7.762499999999783e-05, 7.769399999999968e-05, 7.750000000000118e-05, 7.755499999999999e-05, 7.747199999999857e-05, 7.748600000000161e-05, 7.742999999999986e-05, 7.743099999999933e-05, 7.750000000000118e-05, 7.755499999999999e-05, 7.749999999999771e-05, 7.758299999999912e-05, 7.750000000000118e-05, 7.76389999999974e-05, 7.761099999999826e-05, 7.750000000000118e-05, 7.763900000000087e-05, 7.754199999999989e-05, 7.754199999999989e-05, 7.748599999999814e-05, 7.761099999999826e-05, 7.747199999999857e-05, 7.7457999999999e-05, 7.747299999999804e-05, 7.762499999999783e-05, 7.76250000000013e-05, 7.7457999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.325" endtime="20201117 14:47:38.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.320" endtime="20201117 14:47:38.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.329" endtime="20201117 14:47:38.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.333" endtime="20201117 14:47:38.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.331" endtime="20201117 14:47:38.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.328" endtime="20201117 14:47:38.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.958" endtime="20201117 14:47:38.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.956" endtime="20201117 14:47:38.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.955" endtime="20201117 14:47:38.354"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.357" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.364" endtime="20201117 14:47:38.382"></status>
</kw>
<msg timestamp="20201117 14:47:38.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.363" endtime="20201117 14:47:38.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.383" endtime="20201117 14:47:38.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.386" endtime="20201117 14:47:38.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.360" endtime="20201117 14:47:38.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.358" endtime="20201117 14:47:38.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.395" endtime="20201117 14:47:38.679"></status>
</kw>
<msg timestamp="20201117 14:47:38.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023996444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024074972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.393" endtime="20201117 14:47:38.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023996444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024074972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.683" endtime="20201117 14:47:38.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.691" endtime="20201117 14:47:38.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.390" endtime="20201117 14:47:38.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.389" endtime="20201117 14:47:38.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.698" level="INFO">${RESULT} = [{'time': 0.024074972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.852800000000132e-05, 'source_diff': 7.852800000000132e-05}, {'time': 0.024206722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:38.695" endtime="20201117 14:47:38.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.712" level="INFO">${ACCURACY} = {'diff': [7.852800000000132e-05, 9.930500000000092e-05, 9.979200000000132e-05, 7.843100000000033e-05, 9.897200000000272e-05, 9.975000000000261e-05, 7.841599999999782e-05, 9.895899999999916e-05, 9.9778...</msg>
<status status="PASS" starttime="20201117 14:47:38.699" endtime="20201117 14:47:38.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.717" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.716" endtime="20201117 14:47:38.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.719" level="INFO">VALUE: [7.852800000000132e-05, 9.930500000000092e-05, 9.979200000000132e-05, 7.843100000000033e-05, 9.897200000000272e-05, 9.975000000000261e-05, 7.841599999999782e-05, 9.895899999999916e-05, 9.977800000000175e-05, 7.84169999999973e-05, 9.897200000000272e-05, 7.836099999999901e-05, 9.89860000000023e-05, 7.841599999999782e-05, 7.758400000000207e-05, 7.754199999999989e-05, 9.897299999999873e-05, 7.843000000000086e-05, 7.777699999999763e-05, 9.900000000000186e-05, 9.987499999999927e-05, 7.836099999999901e-05, 9.89860000000023e-05, 7.847199999999957e-05, 7.752700000000085e-05, 7.754199999999989e-05, 9.894400000000012e-05, 9.984700000000013e-05, 9.976400000000218e-05, 7.837499999999858e-05, 7.752800000000032e-05, 7.773599999999839e-05, 7.76250000000013e-05, 9.897199999999926e-05, 7.84169999999973e-05, 7.765300000000044e-05, 7.773599999999839e-05, 9.895800000000315e-05, 7.847200000000304e-05, 7.755499999999999e-05, 7.75839999999986e-05, 7.754199999999989e-05, 7.781999999999928e-05, 7.754199999999989e-05, 7.756999999999903e-05, 7.761100000000173e-05, 9.900000000000186e-05, 9.976400000000218e-05, 9.981900000000099e-05, 7.852700000000185e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.718" endtime="20201117 14:47:38.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.713" endtime="20201117 14:47:38.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.723" endtime="20201117 14:47:38.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.726" endtime="20201117 14:47:38.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.725" endtime="20201117 14:47:38.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.721" endtime="20201117 14:47:38.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.357" endtime="20201117 14:47:38.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.355" endtime="20201117 14:47:38.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.355" endtime="20201117 14:47:38.747"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.750" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.758" endtime="20201117 14:47:38.775"></status>
</kw>
<msg timestamp="20201117 14:47:38.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.756" endtime="20201117 14:47:38.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.777" endtime="20201117 14:47:38.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.779" endtime="20201117 14:47:38.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.754" endtime="20201117 14:47:38.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.751" endtime="20201117 14:47:38.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.788" endtime="20201117 14:47:39.074"></status>
</kw>
<msg timestamp="20201117 14:47:39.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0235735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023673847, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:38.787" endtime="20201117 14:47:39.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0235735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023673847, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:39.078" endtime="20201117 14:47:39.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.086" endtime="20201117 14:47:39.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.784" endtime="20201117 14:47:39.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.782" endtime="20201117 14:47:39.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.093" level="INFO">${RESULT} = [{'time': 0.023673847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010034700000000063, 'source_diff': 0.00010034700000000063}, {'time': 0.023797069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:39.090" endtime="20201117 14:47:39.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.106" level="INFO">${ACCURACY} = {'diff': [0.00010034700000000063, 9.98609999999997e-05, 9.979200000000132e-05, 9.980499999999795e-05, 9.979199999999785e-05, 9.98060000000009e-05, 9.981900000000099e-05, 9.98060000000009e-05, 9.973599...</msg>
<status status="PASS" starttime="20201117 14:47:39.094" endtime="20201117 14:47:39.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.112" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.110" endtime="20201117 14:47:39.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.114" level="INFO">VALUE: [0.00010034700000000063, 9.98609999999997e-05, 9.979200000000132e-05, 9.980499999999795e-05, 9.979199999999785e-05, 9.98060000000009e-05, 9.981900000000099e-05, 9.98060000000009e-05, 9.973599999999957e-05, 9.980500000000142e-05, 9.979100000000185e-05, 9.981899999999752e-05, 9.979199999999785e-05, 9.983300000000056e-05, 9.979100000000185e-05, 9.979200000000132e-05, 9.98060000000009e-05, 9.979200000000132e-05, 9.977800000000175e-05, 9.979100000000185e-05, 9.979200000000132e-05, 9.98060000000009e-05, 9.977799999999828e-05, 9.976400000000218e-05, 9.977799999999828e-05, 9.980500000000142e-05, 9.974999999999914e-05, 9.980500000000142e-05, 9.982000000000046e-05, 9.98060000000009e-05, 9.979199999999785e-05, 9.979199999999785e-05, 9.977800000000175e-05, 9.977800000000175e-05, 9.979200000000132e-05, 9.979199999999785e-05, 9.981900000000099e-05, 9.981900000000099e-05, 9.980500000000142e-05, 9.974999999999914e-05, 9.979200000000132e-05, 9.979200000000132e-05, 9.982000000000046e-05, 9.979200000000132e-05, 9.980499999999795e-05, 9.976400000000218e-05, 9.980500000000142e-05, 9.982000000000046e-05, 9.977800000000175e-05, 9.980499999999795e-05]</msg>
<status status="PASS" starttime="20201117 14:47:39.113" endtime="20201117 14:47:39.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.107" endtime="20201117 14:47:39.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.117" endtime="20201117 14:47:39.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.121" endtime="20201117 14:47:39.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.119" endtime="20201117 14:47:39.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.116" endtime="20201117 14:47:39.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.750" endtime="20201117 14:47:39.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.748" endtime="20201117 14:47:39.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.748" endtime="20201117 14:47:39.142"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.144" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.152" endtime="20201117 14:47:39.170"></status>
</kw>
<msg timestamp="20201117 14:47:39.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.151" endtime="20201117 14:47:39.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.172" endtime="20201117 14:47:39.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.174" endtime="20201117 14:47:39.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.148" endtime="20201117 14:47:39.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.146" endtime="20201117 14:47:39.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.183" endtime="20201117 14:47:39.470"></status>
</kw>
<msg timestamp="20201117 14:47:39.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023686958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023787278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.182" endtime="20201117 14:47:39.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023686958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023787278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.474" endtime="20201117 14:47:39.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.482" endtime="20201117 14:47:39.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.179" endtime="20201117 14:47:39.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.177" endtime="20201117 14:47:39.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.489" level="INFO">${RESULT} = [{'time': 0.023787278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001003199999999975, 'source_diff': 0.0001003199999999975}, {'time': 0.023901694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:39.486" endtime="20201117 14:47:39.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.503" level="INFO">${ACCURACY} = {'diff': [0.0001003199999999975, 9.977700000000228e-05, 9.977799999999828e-05, 9.976400000000218e-05, 9.979200000000132e-05, 9.976400000000218e-05, 9.979200000000132e-05, 9.976299999999924e-05, 9.9791...</msg>
<status status="PASS" starttime="20201117 14:47:39.490" endtime="20201117 14:47:39.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.507" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.506" endtime="20201117 14:47:39.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.509" level="INFO">VALUE: [0.0001003199999999975, 9.977700000000228e-05, 9.977799999999828e-05, 9.976400000000218e-05, 9.979200000000132e-05, 9.976400000000218e-05, 9.979200000000132e-05, 9.976299999999924e-05, 9.979199999999785e-05, 9.979199999999785e-05, 9.98609999999997e-05, 9.979200000000132e-05, 9.979200000000132e-05, 9.979199999999785e-05, 9.979100000000185e-05, 9.974999999999914e-05, 9.979200000000132e-05, 9.980499999999795e-05, 9.979099999999838e-05, 9.981900000000099e-05, 9.976400000000218e-05, 9.98060000000009e-05, 9.979100000000185e-05, 9.970800000000044e-05, 9.975000000000261e-05, 9.979199999999785e-05, 9.981899999999752e-05, 9.979200000000132e-05, 9.979199999999785e-05, 9.977800000000175e-05, 9.979200000000132e-05, 9.982000000000046e-05, 9.979200000000132e-05, 9.979099999999838e-05, 9.977799999999828e-05, 9.976299999999924e-05, 9.979200000000132e-05, 9.982000000000046e-05, 9.980500000000142e-05, 9.979100000000185e-05, 9.984700000000013e-05, 9.974999999999914e-05, 9.980500000000142e-05, 9.98060000000009e-05, 9.977700000000228e-05, 9.979200000000132e-05, 9.977799999999828e-05, 9.979200000000132e-05, 9.980500000000142e-05, 9.982000000000046e-05]</msg>
<status status="PASS" starttime="20201117 14:47:39.508" endtime="20201117 14:47:39.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.504" endtime="20201117 14:47:39.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.514" endtime="20201117 14:47:39.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.517" endtime="20201117 14:47:39.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.515" endtime="20201117 14:47:39.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.512" endtime="20201117 14:47:39.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.145" endtime="20201117 14:47:39.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.143" endtime="20201117 14:47:39.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.142" endtime="20201117 14:47:39.538"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.540" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.548" endtime="20201117 14:47:39.566"></status>
</kw>
<msg timestamp="20201117 14:47:39.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.547" endtime="20201117 14:47:39.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.568" endtime="20201117 14:47:39.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.570" endtime="20201117 14:47:39.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.544" endtime="20201117 14:47:39.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.542" endtime="20201117 14:47:39.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.579" endtime="20201117 14:47:39.865"></status>
</kw>
<msg timestamp="20201117 14:47:39.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023593403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023693764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.577" endtime="20201117 14:47:39.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023593403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023693764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.869" endtime="20201117 14:47:39.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.877" endtime="20201117 14:47:39.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.575" endtime="20201117 14:47:39.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.573" endtime="20201117 14:47:39.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.884" level="INFO">${RESULT} = [{'time': 0.023693764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001003610000000002, 'source_diff': 0.0001003610000000002}, {'time': 0.023822208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:39.881" endtime="20201117 14:47:39.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.897" level="INFO">${ACCURACY} = {'diff': [0.0001003610000000002, 9.979100000000185e-05, 9.979199999999785e-05, 9.979200000000132e-05, 9.976400000000218e-05, 9.977800000000175e-05, 9.977699999999881e-05, 9.979199999999785e-05, 9.9792...</msg>
<status status="PASS" starttime="20201117 14:47:39.885" endtime="20201117 14:47:39.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.902" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.901" endtime="20201117 14:47:39.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.904" level="INFO">VALUE: [0.0001003610000000002, 9.979100000000185e-05, 9.979199999999785e-05, 9.979200000000132e-05, 9.976400000000218e-05, 9.977800000000175e-05, 9.977699999999881e-05, 9.979199999999785e-05, 9.979200000000132e-05, 9.982000000000046e-05, 9.979199999999785e-05, 9.980499999999795e-05, 9.979100000000185e-05, 9.977800000000175e-05, 9.974999999999914e-05, 9.980500000000142e-05, 9.977799999999828e-05, 9.979200000000132e-05, 9.977800000000175e-05, 9.981900000000099e-05, 9.979200000000132e-05, 9.980499999999795e-05, 9.979099999999838e-05, 9.979099999999838e-05, 9.977800000000175e-05, 9.979100000000185e-05, 9.976399999999871e-05, 9.976400000000218e-05, 9.9819999999997e-05, 9.977799999999828e-05, 9.977799999999828e-05, 9.983399999999656e-05, 9.983300000000056e-05, 9.979199999999785e-05, 9.979200000000132e-05, 9.979200000000132e-05, 9.973599999999957e-05, 9.977800000000175e-05, 9.980500000000142e-05, 9.982000000000046e-05, 9.984700000000013e-05, 9.976399999999871e-05, 9.977800000000175e-05, 9.979199999999785e-05, 9.98060000000009e-05, 9.982000000000046e-05, 9.984700000000013e-05, 9.974999999999914e-05, 9.979200000000132e-05, 9.98060000000009e-05]</msg>
<status status="PASS" starttime="20201117 14:47:39.903" endtime="20201117 14:47:39.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.898" endtime="20201117 14:47:39.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.907" endtime="20201117 14:47:39.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.911" endtime="20201117 14:47:39.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.909" endtime="20201117 14:47:39.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.906" endtime="20201117 14:47:39.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.541" endtime="20201117 14:47:39.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.539" endtime="20201117 14:47:39.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.538" endtime="20201117 14:47:39.933"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.935" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.943" endtime="20201117 14:47:39.961"></status>
</kw>
<msg timestamp="20201117 14:47:39.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.941" endtime="20201117 14:47:39.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.962" endtime="20201117 14:47:39.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.965" endtime="20201117 14:47:39.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.939" endtime="20201117 14:47:39.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.937" endtime="20201117 14:47:39.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.974" endtime="20201117 14:47:40.262"></status>
</kw>
<msg timestamp="20201117 14:47:40.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0236965, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:39.972" endtime="20201117 14:47:40.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0236965, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:40.266" endtime="20201117 14:47:40.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.274" endtime="20201117 14:47:40.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.969" endtime="20201117 14:47:40.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.968" endtime="20201117 14:47:40.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.280" level="INFO">${RESULT} = [{'time': 0.0236965, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010038899999999934, 'source_diff': 0.00010038899999999934}, {'time': 0.023818028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:40.277" endtime="20201117 14:47:40.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.294" level="INFO">${ACCURACY} = {'diff': [0.00010038899999999934, 9.979200000000132e-05, 9.979200000000132e-05, 9.979199999999785e-05, 9.98060000000009e-05, 9.974999999999914e-05, 9.977800000000175e-05, 9.977700000000228e-05, 9.9792...</msg>
<status status="PASS" starttime="20201117 14:47:40.281" endtime="20201117 14:47:40.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.298" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.297" endtime="20201117 14:47:40.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.300" level="INFO">VALUE: [0.00010038899999999934, 9.979200000000132e-05, 9.979200000000132e-05, 9.979199999999785e-05, 9.98060000000009e-05, 9.974999999999914e-05, 9.977800000000175e-05, 9.977700000000228e-05, 9.979200000000132e-05, 9.979099999999838e-05, 9.976399999999871e-05, 9.977799999999828e-05, 9.974999999999914e-05, 9.977799999999828e-05, 9.974999999999914e-05, 9.976399999999871e-05, 9.979100000000185e-05, 9.980599999999742e-05, 9.976400000000218e-05, 9.977800000000175e-05, 9.979200000000132e-05, 9.980500000000142e-05, 9.977700000000228e-05, 9.979200000000132e-05, 9.979200000000132e-05, 9.98060000000009e-05, 9.98060000000009e-05, 9.977699999999881e-05, 9.979099999999838e-05, 9.979200000000132e-05, 9.979199999999785e-05, 9.979200000000132e-05, 9.976299999999924e-05, 9.980500000000142e-05, 9.979200000000132e-05, 9.976400000000218e-05, 9.977800000000175e-05, 9.977799999999828e-05, 9.976399999999871e-05, 9.977799999999828e-05, 9.977800000000175e-05, 9.979200000000132e-05, 9.973599999999957e-05, 9.98479999999996e-05, 9.977800000000175e-05, 9.977799999999828e-05, 9.979100000000185e-05, 9.979200000000132e-05, 9.981900000000099e-05, 9.977799999999828e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.299" endtime="20201117 14:47:40.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.295" endtime="20201117 14:47:40.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.304" endtime="20201117 14:47:40.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.307" endtime="20201117 14:47:40.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.305" endtime="20201117 14:47:40.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.302" endtime="20201117 14:47:40.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.935" endtime="20201117 14:47:40.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.934" endtime="20201117 14:47:40.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.933" endtime="20201117 14:47:40.328"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.330" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.338" endtime="20201117 14:47:40.356"></status>
</kw>
<msg timestamp="20201117 14:47:40.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.337" endtime="20201117 14:47:40.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.358" endtime="20201117 14:47:40.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.360" endtime="20201117 14:47:40.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.334" endtime="20201117 14:47:40.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.332" endtime="20201117 14:47:40.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.369" endtime="20201117 14:47:40.656"></status>
</kw>
<msg timestamp="20201117 14:47:40.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023587528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023687903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.368" endtime="20201117 14:47:40.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023587528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023687903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.660" endtime="20201117 14:47:40.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.668" endtime="20201117 14:47:40.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.365" endtime="20201117 14:47:40.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.364" endtime="20201117 14:47:40.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.675" level="INFO">${RESULT} = [{'time': 0.023687903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010037499999999977, 'source_diff': 0.00010037499999999977}, {'time': 0.023809167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:40.672" endtime="20201117 14:47:40.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.688" level="INFO">${ACCURACY} = {'diff': [0.00010037499999999977, 9.977799999999828e-05, 9.982000000000046e-05, 9.979200000000132e-05, 9.979200000000132e-05, 9.979200000000132e-05, 9.979099999999838e-05, 9.983400000000003e-05, 9.982...</msg>
<status status="PASS" starttime="20201117 14:47:40.676" endtime="20201117 14:47:40.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.692" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.692" endtime="20201117 14:47:40.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.695" level="INFO">VALUE: [0.00010037499999999977, 9.977799999999828e-05, 9.982000000000046e-05, 9.979200000000132e-05, 9.979200000000132e-05, 9.979200000000132e-05, 9.979099999999838e-05, 9.983400000000003e-05, 9.982000000000046e-05, 9.979199999999785e-05, 9.981900000000099e-05, 9.979200000000132e-05, 9.977699999999881e-05, 9.979099999999838e-05, 9.980499999999795e-05, 9.981899999999752e-05, 9.98060000000009e-05, 9.979100000000185e-05, 9.981900000000099e-05, 9.979200000000132e-05, 9.98060000000009e-05, 9.980500000000142e-05, 9.980500000000142e-05, 9.983400000000003e-05, 9.979200000000132e-05, 9.976400000000218e-05, 9.977799999999828e-05, 9.979099999999838e-05, 9.979099999999838e-05, 9.980500000000142e-05, 9.98060000000009e-05, 9.979199999999785e-05, 9.977799999999828e-05, 9.979200000000132e-05, 9.979200000000132e-05, 9.977699999999881e-05, 9.977800000000175e-05, 9.979200000000132e-05, 9.980599999999742e-05, 9.977799999999828e-05, 9.979199999999785e-05, 9.979200000000132e-05, 9.979200000000132e-05, 9.976400000000218e-05, 9.982000000000046e-05, 9.979200000000132e-05, 9.984700000000013e-05, 9.980500000000142e-05, 9.977800000000175e-05, 9.977799999999828e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.694" endtime="20201117 14:47:40.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.689" endtime="20201117 14:47:40.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.698" endtime="20201117 14:47:40.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.701" endtime="20201117 14:47:40.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.700" endtime="20201117 14:47:40.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.696" endtime="20201117 14:47:40.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.331" endtime="20201117 14:47:40.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.329" endtime="20201117 14:47:40.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.328" endtime="20201117 14:47:40.722"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.725" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.733" endtime="20201117 14:47:40.751"></status>
</kw>
<msg timestamp="20201117 14:47:40.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.732" endtime="20201117 14:47:40.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.753" endtime="20201117 14:47:40.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.755" endtime="20201117 14:47:40.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.729" endtime="20201117 14:47:40.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.727" endtime="20201117 14:47:40.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.764" endtime="20201117 14:47:41.051"></status>
</kw>
<msg timestamp="20201117 14:47:41.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024282014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024382389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.762" endtime="20201117 14:47:41.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024282014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024382389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.056" endtime="20201117 14:47:41.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.064" endtime="20201117 14:47:41.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.760" endtime="20201117 14:47:41.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.758" endtime="20201117 14:47:41.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.070" level="INFO">${RESULT} = [{'time': 0.024382389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010037499999999977, 'source_diff': 0.00010037499999999977}, {'time': 0.024512972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:41.067" endtime="20201117 14:47:41.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.084" level="INFO">${ACCURACY} = {'diff': [0.00010037499999999977, 9.977800000000175e-05, 9.98060000000009e-05, 9.974999999999914e-05, 9.979200000000132e-05, 9.977799999999828e-05, 9.977799999999828e-05, 9.979200000000132e-05, 9.9777...</msg>
<status status="PASS" starttime="20201117 14:47:41.071" endtime="20201117 14:47:41.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.088" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.087" endtime="20201117 14:47:41.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.090" level="INFO">VALUE: [0.00010037499999999977, 9.977800000000175e-05, 9.98060000000009e-05, 9.974999999999914e-05, 9.979200000000132e-05, 9.977799999999828e-05, 9.977799999999828e-05, 9.979200000000132e-05, 9.977799999999828e-05, 9.983300000000056e-05, 9.977799999999828e-05, 9.979099999999838e-05, 9.980500000000142e-05, 9.979200000000132e-05, 9.979199999999785e-05, 9.977800000000175e-05, 9.976299999999924e-05, 9.979200000000132e-05, 9.980499999999795e-05, 9.979200000000132e-05, 9.979199999999785e-05, 9.976399999999871e-05, 9.977799999999828e-05, 9.981900000000099e-05, 9.979200000000132e-05, 9.977799999999828e-05, 9.980500000000142e-05, 9.974999999999914e-05, 9.977799999999828e-05, 9.979199999999785e-05, 9.979100000000185e-05, 9.983400000000003e-05, 9.98060000000009e-05, 9.979199999999785e-05, 9.98060000000009e-05, 9.982000000000046e-05, 9.98060000000009e-05, 9.977799999999828e-05, 9.98060000000009e-05, 9.979199999999785e-05, 9.977800000000175e-05, 9.977700000000228e-05, 9.977800000000175e-05, 9.98060000000009e-05, 9.979100000000185e-05, 9.98060000000009e-05, 9.979200000000132e-05, 9.98609999999997e-05, 9.979200000000132e-05, 9.977799999999828e-05]</msg>
<status status="PASS" starttime="20201117 14:47:41.089" endtime="20201117 14:47:41.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.085" endtime="20201117 14:47:41.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.094" endtime="20201117 14:47:41.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.097" endtime="20201117 14:47:41.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.095" endtime="20201117 14:47:41.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.092" endtime="20201117 14:47:41.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.725" endtime="20201117 14:47:41.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.724" endtime="20201117 14:47:41.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.723" endtime="20201117 14:47:41.123"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.125" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.133" endtime="20201117 14:47:41.151"></status>
</kw>
<msg timestamp="20201117 14:47:41.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.132" endtime="20201117 14:47:41.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.153" endtime="20201117 14:47:41.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.155" endtime="20201117 14:47:41.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.129" endtime="20201117 14:47:41.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.127" endtime="20201117 14:47:41.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.164" endtime="20201117 14:47:41.449"></status>
</kw>
<msg timestamp="20201117 14:47:41.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028536556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028636972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.162" endtime="20201117 14:47:41.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028536556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028636972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.453" endtime="20201117 14:47:41.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.461" endtime="20201117 14:47:41.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.160" endtime="20201117 14:47:41.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.158" endtime="20201117 14:47:41.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.468" level="INFO">${RESULT} = [{'time': 0.028636972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000100415999999999, 'source_diff': 0.000100415999999999}, {'time': 0.028750458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:41.464" endtime="20201117 14:47:41.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.481" level="INFO">${ACCURACY} = {'diff': [0.000100415999999999, 9.976399999999871e-05, 9.979199999999785e-05, 9.974999999999914e-05, 9.9722e-05, 9.982000000000046e-05, 9.977799999999828e-05, 9.9722e-05, 9.975000000000261e-05, 9.9708...</msg>
<status status="PASS" starttime="20201117 14:47:41.468" endtime="20201117 14:47:41.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.485" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.484" endtime="20201117 14:47:41.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.487" level="INFO">VALUE: [0.000100415999999999, 9.976399999999871e-05, 9.979199999999785e-05, 9.974999999999914e-05, 9.9722e-05, 9.982000000000046e-05, 9.977799999999828e-05, 9.9722e-05, 9.975000000000261e-05, 9.970800000000044e-05, 9.981900000000099e-05, 9.970800000000044e-05, 9.981900000000099e-05, 9.979099999999838e-05, 9.980500000000142e-05, 9.987499999999927e-05, 9.983299999999709e-05, 9.9722e-05, 9.970800000000044e-05, 9.977700000000228e-05, 9.979200000000132e-05, 9.970799999999697e-05, 9.976399999999871e-05, 9.972199999999654e-05, 9.96809999999973e-05, 9.977700000000228e-05, 9.976400000000218e-05, 9.988900000000578e-05, 9.973700000000252e-05, 9.970900000000338e-05, 9.974999999999568e-05, 9.970799999999697e-05, 9.979200000000132e-05, 9.979200000000132e-05, 9.976399999999525e-05, 9.972199999999654e-05, 9.973600000000304e-05, 9.972199999999654e-05, 9.977800000000175e-05, 9.977800000000175e-05, 9.973600000000304e-05, 9.97359999999961e-05, 9.97359999999961e-05, 9.976399999999525e-05, 9.98479999999996e-05, 9.970799999999697e-05, 9.970799999999697e-05, 9.987499999999927e-05, 9.980599999999396e-05, 9.972200000000347e-05]</msg>
<status status="PASS" starttime="20201117 14:47:41.486" endtime="20201117 14:47:41.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.482" endtime="20201117 14:47:41.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.491" endtime="20201117 14:47:41.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.494" endtime="20201117 14:47:41.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.493" endtime="20201117 14:47:41.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.489" endtime="20201117 14:47:41.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.126" endtime="20201117 14:47:41.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.124" endtime="20201117 14:47:41.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.123" endtime="20201117 14:47:41.515"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.518" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.526" endtime="20201117 14:47:41.543"></status>
</kw>
<msg timestamp="20201117 14:47:41.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.524" endtime="20201117 14:47:41.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.545" endtime="20201117 14:47:41.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.547" endtime="20201117 14:47:41.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.522" endtime="20201117 14:47:41.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.520" endtime="20201117 14:47:41.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.556" endtime="20201117 14:47:41.843"></status>
</kw>
<msg timestamp="20201117 14:47:41.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023558069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023657486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.555" endtime="20201117 14:47:41.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023558069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023657486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.848" endtime="20201117 14:47:41.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.856" endtime="20201117 14:47:41.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.552" endtime="20201117 14:47:41.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.550" endtime="20201117 14:47:41.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.862" level="INFO">${RESULT} = [{'time': 0.023657486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.941699999999748e-05, 'source_diff': 9.941699999999748e-05}, {'time': 0.0237835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:41.859" endtime="20201117 14:47:41.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.875" level="INFO">${ACCURACY} = {'diff': [9.941699999999748e-05, 9.891700000000045e-05, 9.886100000000217e-05, 9.879200000000032e-05, 9.923600000000254e-05, 9.886100000000217e-05, 9.88470000000026e-05, 9.886100000000217e-05, 9.87920...</msg>
<status status="PASS" starttime="20201117 14:47:41.863" endtime="20201117 14:47:41.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.880" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.879" endtime="20201117 14:47:41.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.883" level="INFO">VALUE: [9.941699999999748e-05, 9.891700000000045e-05, 9.886100000000217e-05, 9.879200000000032e-05, 9.923600000000254e-05, 9.886100000000217e-05, 9.88470000000026e-05, 9.886100000000217e-05, 9.879200000000032e-05, 9.884699999999913e-05, 9.883300000000303e-05, 9.883299999999956e-05, 9.88609999999987e-05, 9.920899999999941e-05, 9.884699999999913e-05, 9.88470000000026e-05, 9.88609999999987e-05, 9.88609999999987e-05, 9.88609999999987e-05, 9.886100000000217e-05, 9.993100000000102e-05, 9.911100000000242e-05, 9.923600000000254e-05, 9.88059999999999e-05, 9.88470000000026e-05, 9.923600000000254e-05, 9.923600000000254e-05, 9.877699999999781e-05, 9.998599999999983e-05, 9.872200000000247e-05, 9.88609999999987e-05, 9.891699999999698e-05, 9.887499999999827e-05, 9.881999999999946e-05, 9.884699999999913e-05, 9.886100000000217e-05, 9.993099999999755e-05, 9.8721999999999e-05, 9.884699999999913e-05, 9.88470000000026e-05, 9.88470000000026e-05, 9.917999999999733e-05, 9.890300000000088e-05, 9.886200000000164e-05, 9.92219999999995e-05, 9.887500000000174e-05, 9.920899999999941e-05, 9.88609999999987e-05, 9.923599999999907e-05, 9.920900000000288e-05]</msg>
<status status="PASS" starttime="20201117 14:47:41.881" endtime="20201117 14:47:41.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.876" endtime="20201117 14:47:41.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.886" endtime="20201117 14:47:41.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.889" endtime="20201117 14:47:41.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.888" endtime="20201117 14:47:41.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.884" endtime="20201117 14:47:41.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.518" endtime="20201117 14:47:41.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.516" endtime="20201117 14:47:41.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.516" endtime="20201117 14:47:41.911"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.914" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.921" endtime="20201117 14:47:41.940"></status>
</kw>
<msg timestamp="20201117 14:47:41.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.920" endtime="20201117 14:47:41.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.941" endtime="20201117 14:47:41.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.944" endtime="20201117 14:47:41.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.918" endtime="20201117 14:47:41.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.916" endtime="20201117 14:47:41.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.952" endtime="20201117 14:47:42.239"></status>
</kw>
<msg timestamp="20201117 14:47:42.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024542264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024654694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.951" endtime="20201117 14:47:42.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024542264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024654694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.243" endtime="20201117 14:47:42.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.251" endtime="20201117 14:47:42.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.948" endtime="20201117 14:47:42.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.947" endtime="20201117 14:47:42.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.258" level="INFO">${RESULT} = [{'time': 0.024654694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011243000000000017, 'source_diff': 0.00011243000000000017}, {'time': 0.024773347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:42.255" endtime="20201117 14:47:42.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.271" level="INFO">${ACCURACY} = {'diff': [0.00011243000000000017, 9.994400000000112e-05, 9.990199999999894e-05, 9.98609999999997e-05, 9.998599999999983e-05, 9.994500000000059e-05, 9.986199999999917e-05, 9.98060000000009e-05, 9.98750...</msg>
<status status="PASS" starttime="20201117 14:47:42.259" endtime="20201117 14:47:42.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.276" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.275" endtime="20201117 14:47:42.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.278" level="INFO">VALUE: [0.00011243000000000017, 9.994400000000112e-05, 9.990199999999894e-05, 9.98609999999997e-05, 9.998599999999983e-05, 9.994500000000059e-05, 9.986199999999917e-05, 9.98060000000009e-05, 9.987500000000274e-05, 9.979200000000132e-05, 9.987499999999927e-05, 9.984700000000013e-05, 0.00011166599999999985, 0.0001120700000000023, 9.973599999999957e-05, 9.984700000000013e-05, 9.990299999999841e-05, 9.988799999999937e-05, 0.00011169499999999846, 0.00011206899999999936, 9.974999999999914e-05, 9.998599999999983e-05, 9.992999999999808e-05, 0.00011162500000000061, 9.980499999999795e-05, 0.00011169499999999846, 0.00011208399999999841, 0.0001120419999999997, 9.99999999999994e-05, 9.984700000000013e-05, 0.00011167999999999942, 9.979200000000132e-05, 9.987499999999927e-05, 9.984700000000013e-05, 9.983400000000003e-05, 0.00011167999999999942, 9.983299999999709e-05, 9.976400000000218e-05, 9.984699999999666e-05, 9.98479999999996e-05, 0.00011173600000000117, 9.983300000000056e-05, 9.98609999999997e-05, 9.993100000000102e-05, 9.983300000000056e-05, 9.983300000000056e-05, 9.993099999999755e-05, 9.998599999999983e-05, 9.984700000000013e-05, 9.979099999999838e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.277" endtime="20201117 14:47:42.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.272" endtime="20201117 14:47:42.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.281" endtime="20201117 14:47:42.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.285" endtime="20201117 14:47:42.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.283" endtime="20201117 14:47:42.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.280" endtime="20201117 14:47:42.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.914" endtime="20201117 14:47:42.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.912" endtime="20201117 14:47:42.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.912" endtime="20201117 14:47:42.306"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.308" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.317" endtime="20201117 14:47:42.336"></status>
</kw>
<msg timestamp="20201117 14:47:42.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.316" endtime="20201117 14:47:42.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.337" endtime="20201117 14:47:42.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.340" endtime="20201117 14:47:42.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.313" endtime="20201117 14:47:42.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.311" endtime="20201117 14:47:42.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.348" endtime="20201117 14:47:42.636"></status>
</kw>
<msg timestamp="20201117 14:47:42.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024636917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024749333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.347" endtime="20201117 14:47:42.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024636917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024749333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.640" endtime="20201117 14:47:42.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.648" endtime="20201117 14:47:42.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.345" endtime="20201117 14:47:42.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.343" endtime="20201117 14:47:42.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.655" level="INFO">${RESULT} = [{'time': 0.024749333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011241599999999713, 'source_diff': 0.00011241599999999713}, {'time': 0.024876639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:42.652" endtime="20201117 14:47:42.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.668" level="INFO">${ACCURACY} = {'diff': [0.00011241599999999713, 0.00011205599999999927, 0.00011204099999999675, 0.0001120549999999998, 0.0001120419999999997, 0.00011206900000000283, 0.0001120830000000024, 0.00011204100000000022, 0...</msg>
<status status="PASS" starttime="20201117 14:47:42.656" endtime="20201117 14:47:42.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.672" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.671" endtime="20201117 14:47:42.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.674" level="INFO">VALUE: [0.00011241599999999713, 0.00011205599999999927, 0.00011204099999999675, 0.0001120549999999998, 0.0001120419999999997, 0.00011206900000000283, 0.0001120830000000024, 0.00011204100000000022, 0.00011205599999999927, 0.00011206999999999884, 0.00011205599999999927, 0.00011205600000000274, 0.00011202800000000013, 0.0001120419999999997, 0.00011204100000000022, 0.0001120419999999997, 0.0001120419999999997, 0.00011206999999999884, 0.00011205599999999927, 0.00011205599999999927, 0.00011202800000000013, 0.00011209700000000197, 0.00011205599999999927, 0.00011202800000000013, 0.00011200000000000099, 0.0001120549999999998, 0.00011205599999999927, 0.00011202800000000013, 0.00011202700000000065, 0.00011206899999999936, 0.0001120419999999997, 0.00011204200000000317, 0.0001120419999999997, 0.00011204100000000022, 0.00011206899999999936, 0.00011201400000000056, 0.0001120419999999997, 0.00011205599999999927, 0.00011204200000000317, 0.0001120549999999998, 0.0001120419999999997, 0.0001120419999999997, 0.00011205599999999927, 0.00011206999999999884, 0.00011202700000000065, 0.00011202799999999666, 0.0001120419999999997, 0.00011202800000000013, 0.00011204100000000022, 0.00011205599999999927]</msg>
<status status="PASS" starttime="20201117 14:47:42.673" endtime="20201117 14:47:42.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.669" endtime="20201117 14:47:42.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.677" endtime="20201117 14:47:42.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.681" endtime="20201117 14:47:42.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.679" endtime="20201117 14:47:42.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.676" endtime="20201117 14:47:42.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.309" endtime="20201117 14:47:42.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.307" endtime="20201117 14:47:42.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.306" endtime="20201117 14:47:42.702"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.704" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.713" endtime="20201117 14:47:42.732"></status>
</kw>
<msg timestamp="20201117 14:47:42.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.712" endtime="20201117 14:47:42.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.733" endtime="20201117 14:47:42.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.736" endtime="20201117 14:47:42.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.708" endtime="20201117 14:47:42.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.706" endtime="20201117 14:47:42.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.745" endtime="20201117 14:47:43.032"></status>
</kw>
<msg timestamp="20201117 14:47:43.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024676778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024789222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.743" endtime="20201117 14:47:43.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024676778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024789222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.037" endtime="20201117 14:47:43.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.045" endtime="20201117 14:47:43.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.741" endtime="20201117 14:47:43.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.739" endtime="20201117 14:47:43.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.051" level="INFO">${RESULT} = [{'time': 0.024789222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011244399999999974, 'source_diff': 0.00011244399999999974}, {'time': 0.024916528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:43.048" endtime="20201117 14:47:43.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.064" level="INFO">${ACCURACY} = {'diff': [0.00011244399999999974, 0.00011205599999999927, 0.0001120419999999997, 0.00011202700000000065, 0.0001120419999999997, 0.0001120419999999997, 0.00011205599999999927, 0.0001120549999999998, 0....</msg>
<status status="PASS" starttime="20201117 14:47:43.052" endtime="20201117 14:47:43.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.068" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.067" endtime="20201117 14:47:43.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.071" level="INFO">VALUE: [0.00011244399999999974, 0.00011205599999999927, 0.0001120419999999997, 0.00011202700000000065, 0.0001120419999999997, 0.0001120419999999997, 0.00011205599999999927, 0.0001120549999999998, 0.0001120419999999997, 0.0001120419999999997, 0.0001120700000000023, 0.00011206999999999884, 0.0001120549999999998, 0.0001120419999999997, 0.0001120830000000024, 0.0001120969999999985, 0.0001120969999999985, 0.00011208299999999893, 0.00011206899999999936, 0.00011212499999999764, 0.00011206899999999936, 0.00011206999999999884, 0.0001120549999999998, 0.0001120419999999997, 0.00011206899999999936, 0.0001120419999999997, 0.00011206899999999936, 0.00011202800000000013, 0.0001120549999999998, 0.00011206899999999936, 0.0001120700000000023, 0.00011204100000000022, 0.00011206900000000283, 0.00011206899999999936, 0.00011205599999999927, 0.00011204200000000317, 0.00011205599999999927, 0.00011206900000000283, 0.0001120830000000024, 0.00011204100000000022, 0.00011205599999999927, 0.0001120549999999998, 0.00011205599999999927, 0.00011206899999999936, 0.0001120969999999985, 0.00011205599999999927, 0.00011205599999999927, 0.00011206899999999936, 0.0001120549999999998, 0.00011207000000000578]</msg>
<status status="PASS" starttime="20201117 14:47:43.069" endtime="20201117 14:47:43.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.065" endtime="20201117 14:47:43.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.074" endtime="20201117 14:47:43.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.077" endtime="20201117 14:47:43.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.076" endtime="20201117 14:47:43.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.072" endtime="20201117 14:47:43.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.705" endtime="20201117 14:47:43.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.703" endtime="20201117 14:47:43.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.702" endtime="20201117 14:47:43.098"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.101" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.108" endtime="20201117 14:47:43.127"></status>
</kw>
<msg timestamp="20201117 14:47:43.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.107" endtime="20201117 14:47:43.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.129" endtime="20201117 14:47:43.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.132" endtime="20201117 14:47:43.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.105" endtime="20201117 14:47:43.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.102" endtime="20201117 14:47:43.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.141" endtime="20201117 14:47:43.426"></status>
</kw>
<msg timestamp="20201117 14:47:43.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023527806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02364025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:43.139" endtime="20201117 14:47:43.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023527806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02364025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:43.430" endtime="20201117 14:47:43.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.438" endtime="20201117 14:47:43.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.137" endtime="20201117 14:47:43.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.135" endtime="20201117 14:47:43.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.445" level="INFO">${RESULT} = [{'time': 0.02364025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011244400000000321, 'source_diff': 0.00011244400000000321}, {'time': 0.023784736, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:43.442" endtime="20201117 14:47:43.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.458" level="INFO">${ACCURACY} = {'diff': [0.00011244400000000321, 0.0001120830000000024, 0.0001120830000000024, 0.0001120830000000024, 0.00011204100000000022, 0.00011206900000000283, 0.00011208299999999893, 0.00011206999999999884, 0...</msg>
<status status="PASS" starttime="20201117 14:47:43.446" endtime="20201117 14:47:43.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.462" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.461" endtime="20201117 14:47:43.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.465" level="INFO">VALUE: [0.00011244400000000321, 0.0001120830000000024, 0.0001120830000000024, 0.0001120830000000024, 0.00011204100000000022, 0.00011206900000000283, 0.00011208299999999893, 0.00011206999999999884, 0.00011211099999999807, 0.0001120700000000023, 0.00011211100000000154, 0.0001120549999999998, 0.00011205599999999927, 0.00011206899999999936, 0.00011208299999999893, 0.0001120830000000024, 0.00011212500000000111, 0.00011206900000000283, 0.00011206900000000283, 0.0001120549999999998, 0.00011206900000000283, 0.0001120830000000024, 0.00011211200000000102, 0.00011206899999999936, 0.00011206999999999884, 0.0001120549999999998, 0.0001120830000000024, 0.00011205599999999927, 0.00011206899999999936, 0.0001120700000000023, 0.0001120969999999985, 0.00011206999999999884, 0.00011213899999999721, 0.00011205600000000274, 0.00011206899999999936, 0.0001120700000000023, 0.00011206999999999884, 0.00011206999999999884, 0.00011208299999999893, 0.00011206999999999884, 0.0001120700000000023, 0.0001120830000000024, 0.00011206899999999936, 0.00011201400000000056, 0.00011208299999999893, 0.0001120549999999998, 0.00011200000000000099, 0.00011206999999999884, 0.00011204100000000022, 0.00011205599999999927]</msg>
<status status="PASS" starttime="20201117 14:47:43.463" endtime="20201117 14:47:43.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.459" endtime="20201117 14:47:43.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.468" endtime="20201117 14:47:43.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.471" endtime="20201117 14:47:43.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.469" endtime="20201117 14:47:43.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.466" endtime="20201117 14:47:43.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.101" endtime="20201117 14:47:43.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.099" endtime="20201117 14:47:43.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.099" endtime="20201117 14:47:43.492"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.494" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.503" endtime="20201117 14:47:43.521"></status>
</kw>
<msg timestamp="20201117 14:47:43.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.501" endtime="20201117 14:47:43.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.523" endtime="20201117 14:47:43.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.525" endtime="20201117 14:47:43.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.499" endtime="20201117 14:47:43.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.496" endtime="20201117 14:47:43.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.534" endtime="20201117 14:47:43.821"></status>
</kw>
<msg timestamp="20201117 14:47:43.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024125083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024237528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.533" endtime="20201117 14:47:43.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024125083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024237528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.825" endtime="20201117 14:47:43.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.833" endtime="20201117 14:47:43.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.530" endtime="20201117 14:47:43.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.528" endtime="20201117 14:47:43.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.839" level="INFO">${RESULT} = [{'time': 0.024237528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011244500000000268, 'source_diff': 0.00011244500000000268}, {'time': 0.024380819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:43.836" endtime="20201117 14:47:43.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.852" level="INFO">${ACCURACY} = {'diff': [0.00011244500000000268, 0.00011212500000000111, 0.0001120830000000024, 0.00011206900000000283, 0.00011205599999999927, 0.0001120419999999997, 0.0001120419999999997, 0.00011205600000000274, 0...</msg>
<status status="PASS" starttime="20201117 14:47:43.840" endtime="20201117 14:47:43.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.857" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.856" endtime="20201117 14:47:43.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.859" level="INFO">VALUE: [0.00011244500000000268, 0.00011212500000000111, 0.0001120830000000024, 0.00011206900000000283, 0.00011205599999999927, 0.0001120419999999997, 0.0001120419999999997, 0.00011205600000000274, 0.00011205600000000274, 0.00011206899999999936, 0.0001120700000000023, 0.0001120549999999998, 0.0001120419999999997, 0.00011209700000000197, 0.00011206899999999936, 0.00011206899999999936, 0.00011206899999999936, 0.00011201400000000056, 0.0001120969999999985, 0.00011206999999999884, 0.00011206999999999884, 0.00011206999999999884, 0.00011206999999999884, 0.00011208400000000188, 0.00011208400000000188, 0.0001120830000000024, 0.00011209800000000145, 0.00011202800000000013, 0.00011208299999999893, 0.0001120969999999985, 0.00011202800000000013, 0.0001120700000000023, 0.00011211099999999807, 0.00011211100000000154, 0.00011208400000000188, 0.0001120419999999997, 0.00011206900000000283, 0.00011212500000000111, 0.0001120830000000024, 0.00011212500000000111, 0.00011206999999999884, 0.00011208299999999893, 0.00011208299999999893, 0.00011206900000000283, 0.00011206899999999936, 0.00011209700000000197, 0.00011208299999999893, 0.00011208399999999841, 0.00011205599999999927, 0.00011208399999999841]</msg>
<status status="PASS" starttime="20201117 14:47:43.858" endtime="20201117 14:47:43.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.853" endtime="20201117 14:47:43.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.862" endtime="20201117 14:47:43.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.866" endtime="20201117 14:47:43.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.864" endtime="20201117 14:47:43.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.860" endtime="20201117 14:47:43.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.495" endtime="20201117 14:47:43.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.493" endtime="20201117 14:47:43.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.492" endtime="20201117 14:47:43.887"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.889" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.897" endtime="20201117 14:47:43.916"></status>
</kw>
<msg timestamp="20201117 14:47:43.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.896" endtime="20201117 14:47:43.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.917" endtime="20201117 14:47:43.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.920" endtime="20201117 14:47:43.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.893" endtime="20201117 14:47:43.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.891" endtime="20201117 14:47:43.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.929" endtime="20201117 14:47:44.216"></status>
</kw>
<msg timestamp="20201117 14:47:44.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023650569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023762986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.927" endtime="20201117 14:47:44.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023650569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023762986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.220" endtime="20201117 14:47:44.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.228" endtime="20201117 14:47:44.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.925" endtime="20201117 14:47:44.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.923" endtime="20201117 14:47:44.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.235" level="INFO">${RESULT} = [{'time': 0.023762986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011241700000000007, 'source_diff': 0.00011241700000000007}, {'time': 0.023901208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:44.232" endtime="20201117 14:47:44.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.248" level="INFO">${ACCURACY} = {'diff': [0.00011241700000000007, 0.0001120549999999998, 0.0001120419999999997, 0.0001120549999999998, 0.00011200000000000099, 0.0001120419999999997, 0.00011206899999999936, 0.00011208299999999893, 0....</msg>
<status status="PASS" starttime="20201117 14:47:44.236" endtime="20201117 14:47:44.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.252" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.251" endtime="20201117 14:47:44.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.254" level="INFO">VALUE: [0.00011241700000000007, 0.0001120549999999998, 0.0001120419999999997, 0.0001120549999999998, 0.00011200000000000099, 0.0001120419999999997, 0.00011206899999999936, 0.00011208299999999893, 0.00011205599999999927, 0.00011204100000000022, 0.0001120830000000024, 0.00011206999999999884, 0.00011208299999999893, 0.00011202800000000013, 0.00011205599999999927, 0.00011209800000000145, 0.00011206999999999884, 0.00011205600000000274, 0.00011208299999999893, 0.00011208299999999893, 0.00011208299999999893, 0.00011206899999999936, 0.00011209700000000197, 0.00011206899999999936, 0.0001120700000000023, 0.00011205599999999927, 0.00011205599999999927, 0.00011211100000000154, 0.00011205599999999927, 0.00011206899999999936, 0.00011204100000000022, 0.00011208399999999841, 0.00011206899999999936, 0.00011208299999999893, 0.00011208400000000188, 0.00011205599999999927, 0.0001120700000000023, 0.0001120419999999997, 0.00011206999999999884, 0.00011208299999999893, 0.0001120549999999998, 0.00011206899999999936, 0.00011206899999999936, 0.00011205599999999927, 0.00011212500000000111, 0.0001120830000000024, 0.00011205599999999927, 0.00011205599999999927, 0.0001120549999999998, 0.00011206900000000283]</msg>
<status status="PASS" starttime="20201117 14:47:44.253" endtime="20201117 14:47:44.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.249" endtime="20201117 14:47:44.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.258" endtime="20201117 14:47:44.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.261" endtime="20201117 14:47:44.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.260" endtime="20201117 14:47:44.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.256" endtime="20201117 14:47:44.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.890" endtime="20201117 14:47:44.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.888" endtime="20201117 14:47:44.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.887" endtime="20201117 14:47:44.282"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.285" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.293" endtime="20201117 14:47:44.312"></status>
</kw>
<msg timestamp="20201117 14:47:44.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.291" endtime="20201117 14:47:44.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.313" endtime="20201117 14:47:44.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.316" endtime="20201117 14:47:44.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.289" endtime="20201117 14:47:44.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.287" endtime="20201117 14:47:44.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.325" endtime="20201117 14:47:44.611"></status>
</kw>
<msg timestamp="20201117 14:47:44.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023658903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023771347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.323" endtime="20201117 14:47:44.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023658903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023771347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.615" endtime="20201117 14:47:44.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.623" endtime="20201117 14:47:44.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.321" endtime="20201117 14:47:44.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.319" endtime="20201117 14:47:44.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.629" level="INFO">${RESULT} = [{'time': 0.023771347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011244400000000321, 'source_diff': 0.00011244400000000321}, {'time': 0.023907431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:44.626" endtime="20201117 14:47:44.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.642" level="INFO">${ACCURACY} = {'diff': [0.00011244400000000321, 0.00011209800000000145, 0.00011206999999999884, 0.00011206900000000283, 0.00011206899999999936, 0.00011206899999999936, 0.0001120419999999997, 0.00011208299999999893,...</msg>
<status status="PASS" starttime="20201117 14:47:44.630" endtime="20201117 14:47:44.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.647" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.646" endtime="20201117 14:47:44.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.650" level="INFO">VALUE: [0.00011244400000000321, 0.00011209800000000145, 0.00011206999999999884, 0.00011206900000000283, 0.00011206899999999936, 0.00011206899999999936, 0.0001120419999999997, 0.00011208299999999893, 0.00011205599999999927, 0.00011206899999999936, 0.00011205599999999927, 0.00011206999999999884, 0.0001120830000000024, 0.00011206899999999936, 0.00011206899999999936, 0.00011206999999999884, 0.00011205599999999927, 0.0001120549999999998, 0.00011206900000000283, 0.00011208299999999893, 0.00011211100000000154, 0.00011200000000000099, 0.00011204100000000022, 0.00011206899999999936, 0.00011208399999999841, 0.0001120830000000024, 0.00011208400000000188, 0.00011206900000000283, 0.00011206999999999884, 0.00011209700000000197, 0.00011213900000000068, 0.00011206899999999936, 0.00011209799999999798, 0.00011201400000000056, 0.00011208400000000188, 0.00011205599999999927, 0.0001120549999999998, 0.00011206899999999936, 0.00011206999999999884, 0.00011212499999999764, 0.00011212500000000111, 0.00011208400000000188, 0.0001120419999999997, 0.00011209700000000197, 0.0001120700000000023, 0.00011206899999999936, 0.0001120549999999998, 0.00011204100000000022, 0.0001120549999999998, 0.0001120700000000023]</msg>
<status status="PASS" starttime="20201117 14:47:44.648" endtime="20201117 14:47:44.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.643" endtime="20201117 14:47:44.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.653" endtime="20201117 14:47:44.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.656" endtime="20201117 14:47:44.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.655" endtime="20201117 14:47:44.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.651" endtime="20201117 14:47:44.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.285" endtime="20201117 14:47:44.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.284" endtime="20201117 14:47:44.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.283" endtime="20201117 14:47:44.677"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.679" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.687" endtime="20201117 14:47:44.706"></status>
</kw>
<msg timestamp="20201117 14:47:44.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.686" endtime="20201117 14:47:44.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.707" endtime="20201117 14:47:44.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.710" endtime="20201117 14:47:44.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.683" endtime="20201117 14:47:44.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.681" endtime="20201117 14:47:44.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.720" endtime="20201117 14:47:45.006"></status>
</kw>
<msg timestamp="20201117 14:47:45.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023585986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023698444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.718" endtime="20201117 14:47:45.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023585986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023698444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.010" endtime="20201117 14:47:45.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.018" endtime="20201117 14:47:45.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.716" endtime="20201117 14:47:45.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.714" endtime="20201117 14:47:45.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.025" level="INFO">${RESULT} = [{'time': 0.023698444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011245799999999931, 'source_diff': 0.00011245799999999931}, {'time': 0.023826722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:45.021" endtime="20201117 14:47:45.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:45.038" level="INFO">${ACCURACY} = {'diff': [0.00011245799999999931, 0.00011209700000000197, 0.00011206900000000283, 0.00011206900000000283, 0.00011205599999999927, 0.00011206999999999884, 0.00011206900000000283, 0.00011208299999999893...</msg>
<status status="PASS" starttime="20201117 14:47:45.026" endtime="20201117 14:47:45.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.043" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:47:45.042" endtime="20201117 14:47:45.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.045" level="INFO">VALUE: [0.00011245799999999931, 0.00011209700000000197, 0.00011206900000000283, 0.00011206900000000283, 0.00011205599999999927, 0.00011206999999999884, 0.00011206900000000283, 0.00011208299999999893, 0.00011202800000000013, 0.00011208399999999841, 0.00011206899999999936, 0.00011206899999999936, 0.00011209700000000197, 0.00011206999999999884, 0.0001120969999999985, 0.00011206899999999936, 0.0001120549999999998, 0.0001120969999999985, 0.00011199999999999752, 0.00011208399999999841, 0.00011206899999999936, 0.00011212500000000111, 0.00011208400000000188, 0.0001120700000000023, 0.00011209700000000197, 0.00011208299999999893, 0.00011202800000000013, 0.0001120830000000024, 0.00011206899999999936, 0.00011206899999999936, 0.00011212499999999764, 0.00011206999999999884, 0.0001120549999999998, 0.00011208299999999893, 0.00011206999999999884, 0.00011206899999999936, 0.0001120700000000023, 0.00011206899999999936, 0.00011208299999999893, 0.00011206899999999936, 0.00011206999999999884, 0.00011205599999999927, 0.00011215200000000078, 0.00011205599999999927, 0.00011206900000000283, 0.00011206999999999884, 0.00011213900000000068, 0.00011205599999999927, 0.00011205599999999927, 0.00011208299999999893]</msg>
<status status="PASS" starttime="20201117 14:47:45.044" endtime="20201117 14:47:45.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.039" endtime="20201117 14:47:45.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.048" endtime="20201117 14:47:45.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:45.052" endtime="20201117 14:47:45.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.050" endtime="20201117 14:47:45.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.046" endtime="20201117 14:47:45.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.680" endtime="20201117 14:47:45.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.678" endtime="20201117 14:47:45.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.677" endtime="20201117 14:47:45.073"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.075" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.083" endtime="20201117 14:47:45.102"></status>
</kw>
<msg timestamp="20201117 14:47:45.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.082" endtime="20201117 14:47:45.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.104" endtime="20201117 14:47:45.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.106" endtime="20201117 14:47:45.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.079" endtime="20201117 14:47:45.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.077" endtime="20201117 14:47:45.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.116" endtime="20201117 14:47:45.403"></status>
</kw>
<msg timestamp="20201117 14:47:45.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023828194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023940653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.114" endtime="20201117 14:47:45.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023828194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023940653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.407" endtime="20201117 14:47:45.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.415" endtime="20201117 14:47:45.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.112" endtime="20201117 14:47:45.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.109" endtime="20201117 14:47:45.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.421" level="INFO">${RESULT} = [{'time': 0.023940653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011245899999999878, 'source_diff': 0.00011245899999999878}, {'time': 0.024079514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:45.418" endtime="20201117 14:47:45.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:45.434" level="INFO">${ACCURACY} = {'diff': [0.00011245899999999878, 0.0001120969999999985, 0.0001120830000000024, 0.00011204200000000317, 0.0001120700000000023, 0.00011208299999999893, 0.00011205599999999927, 0.0001120549999999998, 0....</msg>
<status status="PASS" starttime="20201117 14:47:45.422" endtime="20201117 14:47:45.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.439" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:47:45.438" endtime="20201117 14:47:45.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.441" level="INFO">VALUE: [0.00011245899999999878, 0.0001120969999999985, 0.0001120830000000024, 0.00011204200000000317, 0.0001120700000000023, 0.00011208299999999893, 0.00011205599999999927, 0.0001120549999999998, 0.00011206999999999884, 0.00011206899999999936, 0.00011208299999999893, 0.00011205599999999927, 0.00011206899999999936, 0.0001120700000000023, 0.00011198600000000142, 0.00011215300000000025, 0.00011209800000000145, 0.0001120419999999997, 0.00011205599999999927, 0.00011208400000000188, 0.00011206899999999936, 0.0001120549999999998, 0.00011202800000000013, 0.00011206999999999884, 0.00011202800000000013, 0.00011206899999999936, 0.00011208299999999893, 0.00011209800000000145, 0.0001120969999999985, 0.00011198600000000142, 0.00011206999999999884, 0.00011204100000000022, 0.00011206899999999936, 0.00011204100000000022, 0.00011205599999999927, 0.00011208400000000188, 0.00011208299999999893, 0.00011205600000000274, 0.00011205599999999927, 0.00011211100000000154, 0.00011208399999999841, 0.00011206899999999936, 0.00011202800000000013, 0.0001120700000000023, 0.00011208299999999893, 0.00011206999999999884, 0.0001120700000000023, 0.00011206899999999936, 0.00011206999999999884, 0.00011205599999999927]</msg>
<status status="PASS" starttime="20201117 14:47:45.440" endtime="20201117 14:47:45.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.435" endtime="20201117 14:47:45.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.444" endtime="20201117 14:47:45.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:45.448" endtime="20201117 14:47:45.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.446" endtime="20201117 14:47:45.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.443" endtime="20201117 14:47:45.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.076" endtime="20201117 14:47:45.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.074" endtime="20201117 14:47:45.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.073" endtime="20201117 14:47:45.469"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.471" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.479" endtime="20201117 14:47:45.497"></status>
</kw>
<msg timestamp="20201117 14:47:45.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.477" endtime="20201117 14:47:45.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.499" endtime="20201117 14:47:45.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.501" endtime="20201117 14:47:45.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.475" endtime="20201117 14:47:45.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.473" endtime="20201117 14:47:45.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.512" endtime="20201117 14:47:45.799"></status>
</kw>
<msg timestamp="20201117 14:47:45.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023539167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023651653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.509" endtime="20201117 14:47:45.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023539167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023651653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.803" endtime="20201117 14:47:45.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.811" endtime="20201117 14:47:45.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.506" endtime="20201117 14:47:45.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.504" endtime="20201117 14:47:45.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.817" level="INFO">${RESULT} = [{'time': 0.023651653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011248600000000192, 'source_diff': 0.00011248600000000192}, {'time': 0.023789528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:45.814" endtime="20201117 14:47:45.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:45.873" level="INFO">${ACCURACY} = {'diff': [0.00011248600000000192, 0.00011202800000000013, 0.00011204100000000022, 0.00011205599999999927, 0.00011206900000000283, 0.0001120549999999998, 0.0001120700000000023, 0.0001120419999999997, 0...</msg>
<status status="PASS" starttime="20201117 14:47:45.818" endtime="20201117 14:47:45.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.877" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:47:45.876" endtime="20201117 14:47:45.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.880" level="INFO">VALUE: [0.00011248600000000192, 0.00011202800000000013, 0.00011204100000000022, 0.00011205599999999927, 0.00011206900000000283, 0.0001120549999999998, 0.0001120700000000023, 0.0001120419999999997, 0.00011206899999999936, 0.00011206899999999936, 0.00011208399999999841, 0.00011205599999999927, 0.0001120549999999998, 0.00011206899999999936, 0.00011212500000000111, 0.00011208299999999893, 0.0001120549999999998, 0.0001120549999999998, 0.00011206899999999936, 0.0001120549999999998, 0.00011209800000000145, 0.00011205599999999927, 0.00011205599999999927, 0.00011206899999999936, 0.00011206899999999936, 0.0001120549999999998, 0.00011215300000000025, 0.0001120419999999997, 0.0001120700000000023, 0.00011206899999999936, 0.00011205599999999927, 0.00011205500000000326, 0.00011198599999999795, 0.00011206899999999936, 0.00011208400000000188, 0.00011205599999999927, 0.0001120549999999998, 0.0001120549999999998, 0.00011204100000000022, 0.00011206899999999936, 0.00011201299999999761, 0.00011206899999999936, 0.00011205599999999927, 0.00011201400000000056, 0.0001120549999999998, 0.00011205599999999927, 0.00011208399999999841, 0.0001120969999999985, 0.00011205600000000274, 0.00011206899999999936]</msg>
<status status="PASS" starttime="20201117 14:47:45.878" endtime="20201117 14:47:45.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.874" endtime="20201117 14:47:45.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.883" endtime="20201117 14:47:45.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:45.886" endtime="20201117 14:47:45.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.884" endtime="20201117 14:47:45.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.881" endtime="20201117 14:47:45.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.472" endtime="20201117 14:47:45.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.470" endtime="20201117 14:47:45.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.469" endtime="20201117 14:47:45.907"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.909" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.919" endtime="20201117 14:47:45.938"></status>
</kw>
<msg timestamp="20201117 14:47:45.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.917" endtime="20201117 14:47:45.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.939" endtime="20201117 14:47:45.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.942" endtime="20201117 14:47:45.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.914" endtime="20201117 14:47:45.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.912" endtime="20201117 14:47:45.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.951" endtime="20201117 14:47:46.236"></status>
</kw>
<msg timestamp="20201117 14:47:46.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025271083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0253835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:45.949" endtime="20201117 14:47:46.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025271083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0253835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:46.240" endtime="20201117 14:47:46.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.248" endtime="20201117 14:47:46.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.947" endtime="20201117 14:47:46.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.945" endtime="20201117 14:47:46.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.255" level="INFO">${RESULT} = [{'time': 0.0253835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011241700000000007, 'source_diff': 0.00011241700000000007}, {'time': 0.025516, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:46.251" endtime="20201117 14:47:46.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.268" level="INFO">${ACCURACY} = {'diff': [0.00011241700000000007, 0.00011318100000000039, 0.00011356900000000086, 0.00011355600000000077, 0.0001120419999999997, 0.0001132229999999991, 0.00011365299999999828, 0.00011358399999999991, ...</msg>
<status status="PASS" starttime="20201117 14:47:46.256" endtime="20201117 14:47:46.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.272" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.271" endtime="20201117 14:47:46.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.275" level="INFO">VALUE: [0.00011241700000000007, 0.00011318100000000039, 0.00011356900000000086, 0.00011355600000000077, 0.0001120419999999997, 0.0001132229999999991, 0.00011365299999999828, 0.00011358399999999991, 0.00011219400000000296, 0.0001120700000000023, 0.00011206900000000283, 0.00011355600000000077, 0.0001120419999999997, 0.00011326399999999834, 0.00011349999999999902, 0.00011362499999999914, 0.00011356900000000086, 0.00011206899999999936, 0.00011366700000000132, 0.00011206899999999936, 0.00011322199999999963, 0.0001120830000000024, 0.00011363899999999871, 0.00011382000000000059, 0.00011206899999999936, 0.00011326399999999834, 0.00011372200000000013, 0.00011358300000000043, 0.00011201399999999709, 0.00011332000000000009, 0.0001135550000000013, 0.00011208400000000188, 0.00011361199999999905, 0.00011218100000000286, 0.00011338899999999846, 0.00011344500000000021, 0.00011313900000000168, 0.00011208299999999893, 0.00011369400000000099, 0.00011341700000000107, 0.00011337500000000236, 0.00011327800000000138, 0.00011320800000000006, 0.00011312500000000211, 0.00011359799999999948, 0.00011205599999999927, 0.00011313900000000515, 0.0001134169999999976, 0.00011334799999999923, 0.00011209700000000544]</msg>
<status status="PASS" starttime="20201117 14:47:46.273" endtime="20201117 14:47:46.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.269" endtime="20201117 14:47:46.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.278" endtime="20201117 14:47:46.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.281" endtime="20201117 14:47:46.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.279" endtime="20201117 14:47:46.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.276" endtime="20201117 14:47:46.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.910" endtime="20201117 14:47:46.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.908" endtime="20201117 14:47:46.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.907" endtime="20201117 14:47:46.302"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.304" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.318" endtime="20201117 14:47:46.337"></status>
</kw>
<msg timestamp="20201117 14:47:46.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.316" endtime="20201117 14:47:46.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.338" endtime="20201117 14:47:46.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.341" endtime="20201117 14:47:46.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.313" endtime="20201117 14:47:46.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.306" endtime="20201117 14:47:46.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.350" endtime="20201117 14:47:46.636"></status>
</kw>
<msg timestamp="20201117 14:47:46.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029182889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029296958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.348" endtime="20201117 14:47:46.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029182889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029296958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.640" endtime="20201117 14:47:46.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.648" endtime="20201117 14:47:46.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.346" endtime="20201117 14:47:46.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.344" endtime="20201117 14:47:46.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.655" level="INFO">${RESULT} = [{'time': 0.029296958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011406900000000136, 'source_diff': 0.00011406900000000136}, {'time': 0.029424583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:46.651" endtime="20201117 14:47:46.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.668" level="INFO">${ACCURACY} = {'diff': [0.00011406900000000136, 0.00011454099999999925, 0.0001140689999999979, 0.00011480600000000202, 0.00011395900000000028, 0.0001142360000000002, 0.00011462500000000014, 0.00011383400000000016, ...</msg>
<status status="PASS" starttime="20201117 14:47:46.656" endtime="20201117 14:47:46.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.673" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.671" endtime="20201117 14:47:46.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.675" level="INFO">VALUE: [0.00011406900000000136, 0.00011454099999999925, 0.0001140689999999979, 0.00011480600000000202, 0.00011395900000000028, 0.0001142360000000002, 0.00011462500000000014, 0.00011383400000000016, 0.0001138749999999994, 0.00011408300000000093, 0.0001142360000000002, 0.00011448599999999698, 0.00011412499999999964, 0.00011472299999999713, 0.00011407000000000084, 0.00011431899999999814, 0.00011430599999999458, 0.00011448599999999698, 0.00011413899999999921, 0.00011444399999999827, 0.0001144169999999986, 0.00011415299999999878, 0.00011380600000000102, 0.0001140420000000017, 0.00011449999999999655, 0.00011469399999999852, 0.00011395899999999681, 0.00011431900000000161, 0.00011451399999999612, 0.00011407000000000084, 0.00011400000000000299, 0.00011469399999999852, 0.00011451400000000306, 0.00011412499999999964, 0.00011458400000000091, 0.0001143749999999999, 0.00011430600000000152, 0.00011470799999999809, 0.00011383400000000016, 0.00011386099999999982, 0.00011475000000000374, 0.00011405600000000127, 0.00011380600000000102, 0.00011381900000000111, 0.00011457000000000134, 0.00011408300000000093, 0.00011373599999999623, 0.00011463899999999971, 0.00011454100000000272, 0.00011448700000000339]</msg>
<status status="PASS" starttime="20201117 14:47:46.674" endtime="20201117 14:47:46.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.669" endtime="20201117 14:47:46.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.678" endtime="20201117 14:47:46.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.682" endtime="20201117 14:47:46.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.680" endtime="20201117 14:47:46.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.676" endtime="20201117 14:47:46.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.305" endtime="20201117 14:47:46.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.303" endtime="20201117 14:47:46.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.302" endtime="20201117 14:47:46.703"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.706" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.715" endtime="20201117 14:47:46.739"></status>
</kw>
<msg timestamp="20201117 14:47:46.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.712" endtime="20201117 14:47:46.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.742" endtime="20201117 14:47:46.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.747" endtime="20201117 14:47:46.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.710" endtime="20201117 14:47:46.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.708" endtime="20201117 14:47:46.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.766" endtime="20201117 14:47:47.061"></status>
</kw>
<msg timestamp="20201117 14:47:47.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0249615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025076375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:46.763" endtime="20201117 14:47:47.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0249615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025076375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:47.065" endtime="20201117 14:47:47.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.073" endtime="20201117 14:47:47.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.758" endtime="20201117 14:47:47.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.754" endtime="20201117 14:47:47.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.080" level="INFO">${RESULT} = [{'time': 0.025076375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001148750000000004, 'source_diff': 0.0001148750000000004}, {'time': 0.025208917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:47.076" endtime="20201117 14:47:47.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.094" level="INFO">${ACCURACY} = {'diff': [0.0001148750000000004, 0.00011509800000000098, 0.00011484700000000125, 0.00011507000000000184, 0.0001150689999999989, 0.00011505600000000227, 0.0001148750000000004, 0.00011530600000000252, 0...</msg>
<status status="PASS" starttime="20201117 14:47:47.081" endtime="20201117 14:47:47.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.098" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:47:47.097" endtime="20201117 14:47:47.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.101" level="INFO">VALUE: [0.0001148750000000004, 0.00011509800000000098, 0.00011484700000000125, 0.00011507000000000184, 0.0001150689999999989, 0.00011505600000000227, 0.0001148750000000004, 0.00011530600000000252, 0.0001148750000000004, 0.00011481899999999864, 0.00011475000000000027, 0.0001152360000000012, 0.00011552800000000016, 0.00011576400000000084, 0.00011536100000000132, 0.0001154169999999996, 0.00011480500000000254, 0.00011561100000000157, 0.00011502799999999966, 0.00011519399999999902, 0.00011515299999999978, 0.00011573599999999823, 0.00011570799999999909, 0.00011483400000000116, 0.00011516599999999988, 0.00011561100000000157, 0.00011544499999999874, 0.00011495800000000181, 0.00011540300000000003, 0.00011512500000000064, 0.00011486100000000082, 0.00011561100000000157, 0.00011504099999999975, 0.00011580500000000007, 0.00011554100000000025, 0.00011518100000000239, 0.00011519400000000249, 0.00011543099999999917, 0.00011562499999999767, 0.00011527799999999991, 0.00011569399999999952, 0.00011501400000000009, 0.00011486100000000082, 0.00011543100000000264, 0.00011517999999999945, 0.0001157629999999979, 0.00011476399999999984, 0.00011567999999999995, 0.00011483300000000168, 0.00011486100000000082]</msg>
<status status="PASS" starttime="20201117 14:47:47.099" endtime="20201117 14:47:47.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.095" endtime="20201117 14:47:47.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.104" endtime="20201117 14:47:47.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:47.108" endtime="20201117 14:47:47.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.106" endtime="20201117 14:47:47.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.103" endtime="20201117 14:47:47.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.706" endtime="20201117 14:47:47.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.704" endtime="20201117 14:47:47.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.704" endtime="20201117 14:47:47.129"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.131" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.139" endtime="20201117 14:47:47.159"></status>
</kw>
<msg timestamp="20201117 14:47:47.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.138" endtime="20201117 14:47:47.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.161" endtime="20201117 14:47:47.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.163" endtime="20201117 14:47:47.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.135" endtime="20201117 14:47:47.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.133" endtime="20201117 14:47:47.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.172" endtime="20201117 14:47:47.458"></status>
</kw>
<msg timestamp="20201117 14:47:47.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024758153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024874167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.171" endtime="20201117 14:47:47.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024758153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024874167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.462" endtime="20201117 14:47:47.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.470" endtime="20201117 14:47:47.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.168" endtime="20201117 14:47:47.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.166" endtime="20201117 14:47:47.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.477" level="INFO">${RESULT} = [{'time': 0.024874167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011601399999999762, 'source_diff': 0.00011601399999999762}, {'time': 0.02500675, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:47.473" endtime="20201117 14:47:47.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.491" level="INFO">${ACCURACY} = {'diff': [0.00011601399999999762, 0.00011666700000000085, 0.00011609800000000198, 0.00011622199999999916, 0.00011609800000000198, 0.00011612500000000164, 0.0001167360000000027, 0.00011643100000000017,...</msg>
<status status="PASS" starttime="20201117 14:47:47.478" endtime="20201117 14:47:47.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.496" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:47:47.495" endtime="20201117 14:47:47.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.498" level="INFO">VALUE: [0.00011601399999999762, 0.00011666700000000085, 0.00011609800000000198, 0.00011622199999999916, 0.00011609800000000198, 0.00011612500000000164, 0.0001167360000000027, 0.00011643100000000017, 0.00011584699999999878, 0.0001161109999999986, 0.00011623599999999873, 0.00011661100000000257, 0.00011575000000000127, 0.00011648599999999898, 0.0001163750000000019, 0.0001159300000000002, 0.0001161109999999986, 0.00011604200000000023, 0.00011588900000000096, 0.00011629200000000048, 0.00011601400000000109, 0.00011619400000000002, 0.00011663799999999877, 0.00011647200000000288, 0.00011619499999999949, 0.00011622200000000263, 0.00011597199999999891, 0.0001158750000000014, 0.00011570900000000203, 0.00011655500000000082, 0.0001158620000000013, 0.0001162499999999983, 0.00011600000000000152, 0.0001167360000000027, 0.00011580500000000007, 0.00011599999999999805, 0.00011579199999999998, 0.00011648599999999898, 0.0001165560000000003, 0.00011650000000000202, 0.00011591600000000063, 0.00011611100000000207, 0.00011586100000000182, 0.00011597199999999891, 0.0001162360000000022, 0.00011626400000000134, 0.00011656900000000386, 0.00011576399999999737, 0.0001159300000000002, 0.00011633399999999572]</msg>
<status status="PASS" starttime="20201117 14:47:47.497" endtime="20201117 14:47:47.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.492" endtime="20201117 14:47:47.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.502" endtime="20201117 14:47:47.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:47.505" endtime="20201117 14:47:47.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.503" endtime="20201117 14:47:47.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.500" endtime="20201117 14:47:47.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.132" endtime="20201117 14:47:47.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.130" endtime="20201117 14:47:47.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.129" endtime="20201117 14:47:47.526"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.528" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.537" endtime="20201117 14:47:47.556"></status>
</kw>
<msg timestamp="20201117 14:47:47.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.535" endtime="20201117 14:47:47.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.557" endtime="20201117 14:47:47.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.560" endtime="20201117 14:47:47.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.532" endtime="20201117 14:47:47.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.530" endtime="20201117 14:47:47.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.569" endtime="20201117 14:47:47.855"></status>
</kw>
<msg timestamp="20201117 14:47:47.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023994639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024111569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.567" endtime="20201117 14:47:47.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023994639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024111569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.859" endtime="20201117 14:47:47.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.867" endtime="20201117 14:47:47.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.565" endtime="20201117 14:47:47.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.563" endtime="20201117 14:47:47.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.874" level="INFO">${RESULT} = [{'time': 0.024111569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011692999999999773, 'source_diff': 0.00011692999999999773}, {'time': 0.024259, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:47.870" endtime="20201117 14:47:47.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.887" level="INFO">${ACCURACY} = {'diff': [0.00011692999999999773, 0.00011695800000000034, 0.00011725000000000277, 0.00011762499999999967, 0.00011734700000000028, 0.00011718000000000145, 0.00011740300000000203, 0.00011726399999999887...</msg>
<status status="PASS" starttime="20201117 14:47:47.875" endtime="20201117 14:47:47.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.892" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:47:47.891" endtime="20201117 14:47:47.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.894" level="INFO">VALUE: [0.00011692999999999773, 0.00011695800000000034, 0.00011725000000000277, 0.00011762499999999967, 0.00011734700000000028, 0.00011718000000000145, 0.00011740300000000203, 0.00011726399999999887, 0.00011677799999999794, 0.00011762499999999967, 0.00011672199999999966, 0.00011693100000000067, 0.0001169170000000011, 0.00011686099999999935, 0.00011713900000000221, 0.00011759700000000053, 0.00011740299999999856, 0.00011747200000000041, 0.00011684699999999978, 0.00011690299999999806, 0.00011723599999999973, 0.00011709699999999656, 0.00011705500000000132, 0.00011690299999999806, 0.00011779200000000198, 0.0001168049999999976, 0.00011734700000000028, 0.00011679199999999751, 0.0001171109999999996, 0.0001176110000000001, 0.00011736099999999985, 0.00011719499999999702, 0.00011762499999999967, 0.00011773600000000023, 0.00011747200000000041, 0.00011759700000000053, 0.0001175560000000013, 0.00011716700000000135, 0.00011679099999999804, 0.00011754199999999826, 0.00011686100000000282, 0.00011766599999999891, 0.00011736099999999985, 0.0001176110000000001, 0.00011763899999999924, 0.00011761199999999958, 0.00011704099999999829, 0.0001167499999999988, 0.00011683399999999969, 0.0001176110000000001]</msg>
<status status="PASS" starttime="20201117 14:47:47.893" endtime="20201117 14:47:47.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.888" endtime="20201117 14:47:47.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.897" endtime="20201117 14:47:47.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:47.901" endtime="20201117 14:47:47.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.899" endtime="20201117 14:47:47.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.896" endtime="20201117 14:47:47.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.529" endtime="20201117 14:47:47.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.527" endtime="20201117 14:47:47.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.526" endtime="20201117 14:47:47.922"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.924" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.932" endtime="20201117 14:47:47.951"></status>
</kw>
<msg timestamp="20201117 14:47:47.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.931" endtime="20201117 14:47:47.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.953" endtime="20201117 14:47:47.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.955" endtime="20201117 14:47:47.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.928" endtime="20201117 14:47:47.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.926" endtime="20201117 14:47:47.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.964" endtime="20201117 14:47:48.255"></status>
</kw>
<msg timestamp="20201117 14:47:48.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023802597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023921361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.962" endtime="20201117 14:47:48.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023802597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023921361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.265" endtime="20201117 14:47:48.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.284" endtime="20201117 14:47:48.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.960" endtime="20201117 14:47:48.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.958" endtime="20201117 14:47:48.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:48.298" level="INFO">${RESULT} = [{'time': 0.023921361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001187639999999969, 'source_diff': 0.0001187639999999969}, {'time': 0.024057833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:48.291" endtime="20201117 14:47:48.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.329" level="INFO">${ACCURACY} = {'diff': [0.0001187639999999969, 0.00011840200000000009, 0.00011773600000000023, 0.00011843100000000217, 0.00011809700000000103, 0.00011798600000000048, 0.00011786100000000035, 0.00011831999999999815,...</msg>
<status status="PASS" starttime="20201117 14:47:48.300" endtime="20201117 14:47:48.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.338" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.336" endtime="20201117 14:47:48.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.343" level="INFO">VALUE: [0.0001187639999999969, 0.00011840200000000009, 0.00011773600000000023, 0.00011843100000000217, 0.00011809700000000103, 0.00011798600000000048, 0.00011786100000000035, 0.00011831999999999815, 0.00011790199999999959, 0.00011859700000000153, 0.00011804099999999929, 0.00011854099999999979, 0.00011836100000000085, 0.00011852799999999969, 0.00011797199999999744, 0.0001186110000000011, 0.00011837499999999695, 0.00011816699999999888, 0.00011848600000000098, 0.00011790199999999959, 0.00011795900000000081, 0.00011792999999999873, 0.00011779200000000198, 0.00011779199999999851, 0.00011866699999999938, 0.00011855599999999883, 0.00011823600000000073, 0.00011862500000000067, 0.0001177499999999998, 0.0001185699999999984, 0.00011807000000000137, 0.00011822300000000063, 0.00011865299999999981, 0.00011822200000000116, 0.00011792999999999873, 0.0001184439999999988, 0.00011869399999999905, 0.0001177499999999998, 0.00011823600000000073, 0.00011809800000000051, 0.00011802799999999919, 0.0001184309999999987, 0.00011854199999999926, 0.00011798600000000048, 0.00011802799999999919, 0.00011795900000000081, 0.00011848700000000045, 0.00011818000000000245, 0.00011862500000000067, 0.00011861200000000058]</msg>
<status status="PASS" starttime="20201117 14:47:48.340" endtime="20201117 14:47:48.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.330" endtime="20201117 14:47:48.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.347" endtime="20201117 14:47:48.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.351" endtime="20201117 14:47:48.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.349" endtime="20201117 14:47:48.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.346" endtime="20201117 14:47:48.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.925" endtime="20201117 14:47:48.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.923" endtime="20201117 14:47:48.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.922" endtime="20201117 14:47:48.372"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.374" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.382" endtime="20201117 14:47:48.402"></status>
</kw>
<msg timestamp="20201117 14:47:48.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.381" endtime="20201117 14:47:48.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.403" endtime="20201117 14:47:48.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.406" endtime="20201117 14:47:48.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.378" endtime="20201117 14:47:48.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.376" endtime="20201117 14:47:48.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.415" endtime="20201117 14:47:48.701"></status>
</kw>
<msg timestamp="20201117 14:47:48.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024676486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024796097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.413" endtime="20201117 14:47:48.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024676486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024796097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.705" endtime="20201117 14:47:48.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.713" endtime="20201117 14:47:48.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.411" endtime="20201117 14:47:48.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.409" endtime="20201117 14:47:48.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:48.720" level="INFO">${RESULT} = [{'time': 0.024796097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011961099999999864, 'source_diff': 0.00011961099999999864}, {'time': 0.024928681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:48.716" endtime="20201117 14:47:48.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.733" level="INFO">${ACCURACY} = {'diff': [0.00011961099999999864, 0.00011951400000000112, 0.00011919399999999955, 0.00011966599999999744, 0.00011879100000000004, 0.00011930600000000305, 0.00011954100000000079, 0.0001187500000000008,...</msg>
<status status="PASS" starttime="20201117 14:47:48.721" endtime="20201117 14:47:48.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.738" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.737" endtime="20201117 14:47:48.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.740" level="INFO">VALUE: [0.00011961099999999864, 0.00011951400000000112, 0.00011919399999999955, 0.00011966599999999744, 0.00011879100000000004, 0.00011930600000000305, 0.00011954100000000079, 0.0001187500000000008, 0.00011884799999999779, 0.0001188049999999996, 0.00011933399999999872, 0.0001193050000000001, 0.00011918099999999945, 0.00011891600000000016, 0.00011941700000000013, 0.00011909699999999857, 0.00011934699999999882, 0.00011934699999999882, 0.00011909700000000203, 0.00011966600000000091, 0.00011913900000000074, 0.00011892999999999973, 0.00011918099999999945, 0.00011937500000000142, 0.00011963899999999777, 0.00011934700000000228, 0.0001196249999999982, 0.0001189309999999992, 0.0001196110000000021, 0.00011961099999999864, 0.00011869499999999852, 0.0001188890000000005, 0.00011973699999999823, 0.00011950000000000155, 0.00011945899999999884, 0.00011930599999999958, 0.00011894400000000277, 0.00011959800000000201, 0.00011955599999999983, 0.00011876299999999743, 0.00011923599999999826, 0.00011883299999999875, 0.00011941599999999719, 0.00011940300000000056, 0.0001193050000000001, 0.00011887500000000092, 0.00011933299999999925, 0.00011955599999999983, 0.0001190699999999989, 0.00011936100000000532]</msg>
<status status="PASS" starttime="20201117 14:47:48.739" endtime="20201117 14:47:48.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.734" endtime="20201117 14:47:48.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.743" endtime="20201117 14:47:48.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.747" endtime="20201117 14:47:48.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.745" endtime="20201117 14:47:48.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.742" endtime="20201117 14:47:48.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.375" endtime="20201117 14:47:48.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.373" endtime="20201117 14:47:48.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.372" endtime="20201117 14:47:48.768"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.770" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.778" endtime="20201117 14:47:48.798"></status>
</kw>
<msg timestamp="20201117 14:47:48.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.777" endtime="20201117 14:47:48.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.800" endtime="20201117 14:47:48.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.803" endtime="20201117 14:47:48.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.774" endtime="20201117 14:47:48.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.772" endtime="20201117 14:47:48.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.812" endtime="20201117 14:47:49.098"></status>
</kw>
<msg timestamp="20201117 14:47:49.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024634264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02475425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:48.810" endtime="20201117 14:47:49.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024634264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02475425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:49.102" endtime="20201117 14:47:49.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.110" endtime="20201117 14:47:49.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.808" endtime="20201117 14:47:49.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.806" endtime="20201117 14:47:49.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.117" level="INFO">${RESULT} = [{'time': 0.02475425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011998599999999901, 'source_diff': 0.00011998599999999901}, {'time': 0.024904667, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:49.114" endtime="20201117 14:47:49.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:49.132" level="INFO">${ACCURACY} = {'diff': [0.00011998599999999901, 0.00012045899999999984, 0.00011987499999999846, 0.00012065300000000181, 0.00012016600000000141, 0.00012020800000000012, 0.0001205830000000005, 0.00012045800000000037,...</msg>
<status status="PASS" starttime="20201117 14:47:49.118" endtime="20201117 14:47:49.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.137" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:47:49.136" endtime="20201117 14:47:49.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.139" level="INFO">VALUE: [0.00011998599999999901, 0.00012045899999999984, 0.00011987499999999846, 0.00012065300000000181, 0.00012016600000000141, 0.00012020800000000012, 0.0001205830000000005, 0.00012045800000000037, 0.00012033300000000025, 0.0001205700000000004, 0.00012048599999999951, 0.00012061099999999964, 0.00012073599999999976, 0.00012024999999999883, 0.0001197500000000018, 0.00012009699999999957, 0.00012016599999999794, 0.00011980600000000008, 0.00011968000000000048, 0.00012044500000000027, 0.00012066599999999844, 0.0001206110000000031, 0.00012016700000000088, 0.00012069399999999758, 0.00011998599999999901, 0.00012055600000000083, 0.00011972199999999919, 0.00011979200000000051, 0.00012052699999999875, 0.00012061099999999964, 0.00011979100000000104, 0.00012017999999999751, 0.00011998700000000195, 0.00011998599999999901, 0.00011997199999999944, 0.00012059800000000301, 0.00012027700000000197, 0.00012005499999999739, 0.00011986200000000183, 0.0001202769999999985, 0.00011984699999999932, 0.0001207639999999989, 0.00011991600000000116, 0.00011994499999999977, 0.00012048599999999951, 0.00012058399999999997, 0.00012009699999999957, 0.00012020799999999665, 0.00012068099999999748, 0.00011976400000000137]</msg>
<status status="PASS" starttime="20201117 14:47:49.138" endtime="20201117 14:47:49.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.133" endtime="20201117 14:47:49.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.142" endtime="20201117 14:47:49.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:49.146" endtime="20201117 14:47:49.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.144" endtime="20201117 14:47:49.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.140" endtime="20201117 14:47:49.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.771" endtime="20201117 14:47:49.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.769" endtime="20201117 14:47:49.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.768" endtime="20201117 14:47:49.167"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.169" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.178" endtime="20201117 14:47:49.197"></status>
</kw>
<msg timestamp="20201117 14:47:49.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.176" endtime="20201117 14:47:49.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.198" endtime="20201117 14:47:49.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.201" endtime="20201117 14:47:49.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.174" endtime="20201117 14:47:49.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.171" endtime="20201117 14:47:49.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.210" endtime="20201117 14:47:49.495"></status>
</kw>
<msg timestamp="20201117 14:47:49.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024377208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024498514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.209" endtime="20201117 14:47:49.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024377208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024498514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.499" endtime="20201117 14:47:49.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.507" endtime="20201117 14:47:49.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.206" endtime="20201117 14:47:49.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.204" endtime="20201117 14:47:49.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.514" level="INFO">${RESULT} = [{'time': 0.024498514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012130599999999811, 'source_diff': 0.00012130599999999811}, {'time': 0.024651042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:49.510" endtime="20201117 14:47:49.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:49.527" level="INFO">${ACCURACY} = {'diff': [0.00012130599999999811, 0.00012169500000000152, 0.00012097200000000044, 0.00012134700000000082, 0.00012148600000000051, 0.0001214029999999991, 0.00012145900000000084, 0.00012102700000000272,...</msg>
<status status="PASS" starttime="20201117 14:47:49.515" endtime="20201117 14:47:49.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.531" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:47:49.530" endtime="20201117 14:47:49.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.534" level="INFO">VALUE: [0.00012130599999999811, 0.00012169500000000152, 0.00012097200000000044, 0.00012134700000000082, 0.00012148600000000051, 0.0001214029999999991, 0.00012145900000000084, 0.00012102700000000272, 0.00012122200000000069, 0.00012116699999999841, 0.00012090300000000206, 0.00012086099999999989, 0.00012136100000000039, 0.00012091700000000163, 0.00012163899999999978, 0.00012074999999999933, 0.00012152799999999922, 0.00012090300000000206, 0.000121083000000001, 0.00012097200000000044, 0.00012086199999999936, 0.00012095900000000034, 0.0001209440000000013, 0.00012141700000000213, 0.00012083300000000075, 0.00012158299999999803, 0.00012111100000000014, 0.0001212639999999994, 0.0001209029999999986, 0.00012152800000000269, 0.00012084700000000032, 0.00012101299999999968, 0.00012093000000000173, 0.00012104099999999882, 0.00012158299999999803, 0.00012173600000000076, 0.00012148600000000051, 0.00012088899999999903, 0.00012172199999999772, 0.00012077800000000194, 0.00012083299999999728, 0.00012072299999999966, 0.00012141699999999866, 0.00012150000000000008, 0.00012113899999999928, 0.0001215830000000015, 0.00012083299999999728, 0.00012102799999999872, 0.00012152799999999922, 0.00012116599999999894]</msg>
<status status="PASS" starttime="20201117 14:47:49.533" endtime="20201117 14:47:49.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.528" endtime="20201117 14:47:49.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.537" endtime="20201117 14:47:49.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:49.541" endtime="20201117 14:47:49.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.539" endtime="20201117 14:47:49.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.535" endtime="20201117 14:47:49.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.170" endtime="20201117 14:47:49.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.168" endtime="20201117 14:47:49.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.167" endtime="20201117 14:47:49.562"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.564" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.573" endtime="20201117 14:47:49.592"></status>
</kw>
<msg timestamp="20201117 14:47:49.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.571" endtime="20201117 14:47:49.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.593" endtime="20201117 14:47:49.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.596" endtime="20201117 14:47:49.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.569" endtime="20201117 14:47:49.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.566" endtime="20201117 14:47:49.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.605" endtime="20201117 14:47:49.890"></status>
</kw>
<msg timestamp="20201117 14:47:49.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024011389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024133528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.603" endtime="20201117 14:47:49.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024011389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024133528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.894" endtime="20201117 14:47:49.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.902" endtime="20201117 14:47:49.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.601" endtime="20201117 14:47:49.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.599" endtime="20201117 14:47:49.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.909" level="INFO">${RESULT} = [{'time': 0.024133528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012213900000000028, 'source_diff': 0.00012213900000000028}, {'time': 0.024286014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:49.906" endtime="20201117 14:47:49.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:49.922" level="INFO">${ACCURACY} = {'diff': [0.00012213900000000028, 0.00012194500000000177, 0.00012234700000000182, 0.00012238900000000053, 0.00012183299999999828, 0.00012172199999999772, 0.0001224449999999988, 0.00012190200000000012,...</msg>
<status status="PASS" starttime="20201117 14:47:49.910" endtime="20201117 14:47:49.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.927" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:47:49.926" endtime="20201117 14:47:49.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.929" level="INFO">VALUE: [0.00012213900000000028, 0.00012194500000000177, 0.00012234700000000182, 0.00012238900000000053, 0.00012183299999999828, 0.00012172199999999772, 0.0001224449999999988, 0.00012190200000000012, 0.00012205499999999939, 0.00012229199999999954, 0.00012197199999999797, 0.00012247199999999847, 0.00012236100000000139, 0.00012262499999999774, 0.00012215299999999985, 0.00012179099999999957, 0.00012194399999999883, 0.00012179199999999904, 0.00012195800000000187, 0.00012183299999999828, 0.0001224579999999989, 0.00012201400000000015, 0.00012172199999999772, 0.00012237500000000096, 0.00012213900000000028, 0.00012237500000000096, 0.00012254100000000032, 0.00012191699999999916, 0.00012177799999999947, 0.00012231999999999868, 0.00012213900000000028, 0.00012201400000000015, 0.00012255599999999936, 0.0001219579999999984, 0.0001224030000000001, 0.00012184800000000079, 0.0001226380000000013, 0.0001224579999999989, 0.00012213900000000028, 0.00012263900000000078, 0.00012247199999999847, 0.00012215299999999985, 0.00012184699999999785, 0.00012215299999999985, 0.00012247199999999847, 0.0001222220000000017, 0.00012177799999999947, 0.0001219579999999984, 0.00012184700000000132, 0.0001225830000000025]</msg>
<status status="PASS" starttime="20201117 14:47:49.928" endtime="20201117 14:47:49.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.923" endtime="20201117 14:47:49.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.933" endtime="20201117 14:47:49.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:49.936" endtime="20201117 14:47:49.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.935" endtime="20201117 14:47:49.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.931" endtime="20201117 14:47:49.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.565" endtime="20201117 14:47:49.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.563" endtime="20201117 14:47:49.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.562" endtime="20201117 14:47:49.957"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.960" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.968" endtime="20201117 14:47:49.987"></status>
</kw>
<msg timestamp="20201117 14:47:49.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.966" endtime="20201117 14:47:49.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.989" endtime="20201117 14:47:49.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.991" endtime="20201117 14:47:49.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.964" endtime="20201117 14:47:49.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.962" endtime="20201117 14:47:49.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.000" endtime="20201117 14:47:50.286"></status>
</kw>
<msg timestamp="20201117 14:47:50.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024044431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024167958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.999" endtime="20201117 14:47:50.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024044431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024167958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.290" endtime="20201117 14:47:50.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.298" endtime="20201117 14:47:50.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.996" endtime="20201117 14:47:50.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.994" endtime="20201117 14:47:50.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:50.305" level="INFO">${RESULT} = [{'time': 0.024167958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012352699999999828, 'source_diff': 0.00012352699999999828}, {'time': 0.024309431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:50.301" endtime="20201117 14:47:50.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:50.318" level="INFO">${ACCURACY} = {'diff': [0.00012352699999999828, 0.0001234030000000011, 0.00012354100000000132, 0.00012287499999999799, 0.00012365300000000135, 0.00012362499999999874, 0.00012334699999999935, 0.0001235839999999995, ...</msg>
<status status="PASS" starttime="20201117 14:47:50.306" endtime="20201117 14:47:50.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.323" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.322" endtime="20201117 14:47:50.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.326" level="INFO">VALUE: [0.00012352699999999828, 0.0001234030000000011, 0.00012354100000000132, 0.00012287499999999799, 0.00012365300000000135, 0.00012362499999999874, 0.00012334699999999935, 0.0001235839999999995, 0.0001235420000000008, 0.00012277800000000047, 0.00012336099999999892, 0.00012302800000000072, 0.00012347299999999894, 0.0001233060000000001, 0.00012348599999999904, 0.00012302799999999725, 0.0001235969999999996, 0.00012273600000000176, 0.0001230420000000003, 0.00012300000000000158, 0.0001229160000000007, 0.00012316700000000042, 0.00012298599999999854, 0.00012284699999999885, 0.00012338899999999806, 0.000122986000000002, 0.00012297199999999897, 0.00012277800000000047, 0.0001234579999999999, 0.00012359800000000254, 0.00012315300000000085, 0.00012315300000000085, 0.00012337499999999849, 0.00012286200000000136, 0.00012279200000000004, 0.00012324999999999836, 0.00012358300000000003, 0.0001232779999999975, 0.0001234449999999998, 0.0001229579999999994, 0.00012334799999999882, 0.0001234449999999998, 0.00012300000000000158, 0.00012279200000000004, 0.0001231519999999979, 0.00012334700000000282, 0.000122777999999997, 0.00012351399999999818, 0.00012329200000000054, 0.00012350000000000208]</msg>
<status status="PASS" starttime="20201117 14:47:50.324" endtime="20201117 14:47:50.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.319" endtime="20201117 14:47:50.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.329" endtime="20201117 14:47:50.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:50.332" endtime="20201117 14:47:50.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.331" endtime="20201117 14:47:50.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.327" endtime="20201117 14:47:50.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.960" endtime="20201117 14:47:50.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.958" endtime="20201117 14:47:50.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.958" endtime="20201117 14:47:50.353"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.356" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.364" endtime="20201117 14:47:50.384"></status>
</kw>
<msg timestamp="20201117 14:47:50.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.362" endtime="20201117 14:47:50.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.386" endtime="20201117 14:47:50.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.388" endtime="20201117 14:47:50.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.360" endtime="20201117 14:47:50.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.358" endtime="20201117 14:47:50.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.397" endtime="20201117 14:47:50.683"></status>
</kw>
<msg timestamp="20201117 14:47:50.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024895486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025020083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.396" endtime="20201117 14:47:50.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024895486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025020083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.687" endtime="20201117 14:47:50.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.695" endtime="20201117 14:47:50.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.393" endtime="20201117 14:47:50.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.391" endtime="20201117 14:47:50.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:50.702" level="INFO">${RESULT} = [{'time': 0.025020083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012459699999999713, 'source_diff': 0.00012459699999999713}, {'time': 0.025157556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:50.699" endtime="20201117 14:47:50.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:50.717" level="INFO">${ACCURACY} = {'diff': [0.00012459699999999713, 0.0001244030000000021, 0.0001246389999999993, 0.00012383300000000028, 0.00012440299999999863, 0.0001242779999999985, 0.000124084, 0.0001240970000000001, 0.00012373600...</msg>
<status status="PASS" starttime="20201117 14:47:50.703" endtime="20201117 14:47:50.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.722" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.720" endtime="20201117 14:47:50.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.724" level="INFO">VALUE: [0.00012459699999999713, 0.0001244030000000021, 0.0001246389999999993, 0.00012383300000000028, 0.00012440299999999863, 0.0001242779999999985, 0.000124084, 0.0001240970000000001, 0.00012373600000000276, 0.00012479200000000204, 0.00012412499999999924, 0.00012454199999999832, 0.00012415200000000237, 0.00012436099999999992, 0.0001246389999999993, 0.00012415200000000237, 0.00012401399999999868, 0.00012451399999999918, 0.00012382000000000018, 0.00012433399999999678, 0.00012397199999999997, 0.00012397300000000291, 0.00012432000000000068, 0.00012438899999999906, 0.00012434700000000035, 0.00012422200000000022, 0.00012459699999999713, 0.00012420800000000065, 0.00012415300000000185, 0.00012384699999999985, 0.00012433400000000025, 0.00012420800000000065, 0.00012440299999999863, 0.00012433300000000078, 0.00012370800000000015, 0.00012415299999999838, 0.00012424999999999936, 0.00012405600000000086, 0.00012413900000000228, 0.00012455600000000136, 0.00012405600000000086, 0.00012422200000000022, 0.00012447200000000047, 0.0001245559999999979, 0.0001242779999999985, 0.00012465300000000235, 0.00012408400000000347, 0.00012408399999999653, 0.00012465300000000235, 0.00012463899999999584]</msg>
<status status="PASS" starttime="20201117 14:47:50.723" endtime="20201117 14:47:50.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.718" endtime="20201117 14:47:50.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.727" endtime="20201117 14:47:50.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:50.730" endtime="20201117 14:47:50.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.729" endtime="20201117 14:47:50.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.725" endtime="20201117 14:47:50.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.356" endtime="20201117 14:47:50.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.355" endtime="20201117 14:47:50.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.354" endtime="20201117 14:47:50.752"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.754" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.762" endtime="20201117 14:47:50.782"></status>
</kw>
<msg timestamp="20201117 14:47:50.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.761" endtime="20201117 14:47:50.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.783" endtime="20201117 14:47:50.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.786" endtime="20201117 14:47:50.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.758" endtime="20201117 14:47:50.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.756" endtime="20201117 14:47:50.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.795" endtime="20201117 14:47:51.080"></status>
</kw>
<msg timestamp="20201117 14:47:51.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024049278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024174264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.793" endtime="20201117 14:47:51.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024049278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024174264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.085" endtime="20201117 14:47:51.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.093" endtime="20201117 14:47:51.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.791" endtime="20201117 14:47:51.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.789" endtime="20201117 14:47:51.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.100" level="INFO">${RESULT} = [{'time': 0.024174264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012498600000000054, 'source_diff': 0.00012498600000000054}, {'time': 0.024318833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:51.097" endtime="20201117 14:47:51.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:51.113" level="INFO">${ACCURACY} = {'diff': [0.00012498600000000054, 0.0001255970000000016, 0.00012497200000000097, 0.00012495799999999793, 0.00012532000000000168, 0.00012497200000000097, 0.00012552799999999975, 0.0001251389999999998, ...</msg>
<status status="PASS" starttime="20201117 14:47:51.101" endtime="20201117 14:47:51.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.118" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:47:51.117" endtime="20201117 14:47:51.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.120" level="INFO">VALUE: [0.00012498600000000054, 0.0001255970000000016, 0.00012497200000000097, 0.00012495799999999793, 0.00012532000000000168, 0.00012497200000000097, 0.00012552799999999975, 0.0001251389999999998, 0.00012516599999999947, 0.00012476399999999943, 0.00012551400000000018, 0.00012486100000000042, 0.00012483300000000128, 0.00012474999999999986, 0.00012556999999999846, 0.00012540200000000015, 0.0001252779999999995, 0.0001255970000000016, 0.0001255970000000016, 0.00012477699999999953, 0.00012552799999999975, 0.00012487499999999999, 0.00012470800000000115, 0.00012572199999999825, 0.00012552799999999975, 0.00012465299999999888, 0.0001249580000000014, 0.0001250130000000002, 0.00012530500000000264, 0.00012536099999999745, 0.0001253329999999983, 0.0001250559999999984, 0.00012540299999999963, 0.0001250970000000011, 0.0001252779999999995, 0.00012536100000000092, 0.00012486100000000042, 0.00012472200000000072, 0.00012476399999999943, 0.00012554199999999932, 0.000125084000000001, 0.00012531899999999874, 0.0001249450000000013, 0.0001249030000000026, 0.00012516699999999895, 0.00012568099999999902, 0.00012511100000000067, 0.00012509800000000057, 0.00012534700000000135, 0.00012529199999999907]</msg>
<status status="PASS" starttime="20201117 14:47:51.119" endtime="20201117 14:47:51.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.114" endtime="20201117 14:47:51.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.123" endtime="20201117 14:47:51.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:51.127" endtime="20201117 14:47:51.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.125" endtime="20201117 14:47:51.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.122" endtime="20201117 14:47:51.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.755" endtime="20201117 14:47:51.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.753" endtime="20201117 14:47:51.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.752" endtime="20201117 14:47:51.148"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.151" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.159" endtime="20201117 14:47:51.178"></status>
</kw>
<msg timestamp="20201117 14:47:51.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.157" endtime="20201117 14:47:51.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.180" endtime="20201117 14:47:51.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.182" endtime="20201117 14:47:51.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.155" endtime="20201117 14:47:51.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.153" endtime="20201117 14:47:51.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.192" endtime="20201117 14:47:51.477"></status>
</kw>
<msg timestamp="20201117 14:47:51.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024600111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024726847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.190" endtime="20201117 14:47:51.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024600111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024726847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.481" endtime="20201117 14:47:51.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.490" endtime="20201117 14:47:51.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.187" endtime="20201117 14:47:51.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.186" endtime="20201117 14:47:51.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.496" level="INFO">${RESULT} = [{'time': 0.024726847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012673599999999882, 'source_diff': 0.00012673599999999882}, {'time': 0.024881278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:51.493" endtime="20201117 14:47:51.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:51.509" level="INFO">${ACCURACY} = {'diff': [0.00012673599999999882, 0.00012580599999999914, 0.00012615300000000038, 0.00012652800000000075, 0.00012615300000000038, 0.00012654099999999738, 0.00012645799999999943, 0.00012579199999999957...</msg>
<status status="PASS" starttime="20201117 14:47:51.497" endtime="20201117 14:47:51.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.514" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:47:51.513" endtime="20201117 14:47:51.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.517" level="INFO">VALUE: [0.00012673599999999882, 0.00012580599999999914, 0.00012615300000000038, 0.00012652800000000075, 0.00012615300000000038, 0.00012654099999999738, 0.00012645799999999943, 0.00012579199999999957, 0.00012665300000000088, 0.0001263199999999992, 0.00012590300000000013, 0.00012651400000000118, 0.00012620900000000213, 0.0001264170000000002, 0.00012665300000000088, 0.00012597299999999798, 0.0001261939999999996, 0.00012648599999999857, 0.0001265559999999999, 0.0001263329999999993, 0.00012583399999999828, 0.00012579199999999957, 0.0001261390000000008, 0.00012640300000000063, 0.0001259719999999985, 0.00012620799999999918, 0.000126471999999999, 0.0001260979999999981, 0.0001263199999999992, 0.00012672199999999925, 0.0001265000000000016, 0.00012629200000000007, 0.00012640300000000063, 0.00012576400000000043, 0.0001258329999999988, 0.00012612500000000124, 0.0001260000000000011, 0.00012581899999999924, 0.00012565299999999988, 0.0001259299999999998, 0.00012609699999999863, 0.0001259719999999985, 0.00012658299999999956, 0.00012654200000000032, 0.00012652799999999728, 0.00012638900000000453, 0.0001260130000000012, 0.00012586099999999795, 0.00012575000000000086, 0.0001257079999999952]</msg>
<status status="PASS" starttime="20201117 14:47:51.515" endtime="20201117 14:47:51.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.510" endtime="20201117 14:47:51.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.520" endtime="20201117 14:47:51.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:51.523" endtime="20201117 14:47:51.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.522" endtime="20201117 14:47:51.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.518" endtime="20201117 14:47:51.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.151" endtime="20201117 14:47:51.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.149" endtime="20201117 14:47:51.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.148" endtime="20201117 14:47:51.544"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.547" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.555" endtime="20201117 14:47:51.574"></status>
</kw>
<msg timestamp="20201117 14:47:51.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.553" endtime="20201117 14:47:51.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.576" endtime="20201117 14:47:51.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.584" endtime="20201117 14:47:51.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.551" endtime="20201117 14:47:51.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.549" endtime="20201117 14:47:51.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.593" endtime="20201117 14:47:51.879"></status>
</kw>
<msg timestamp="20201117 14:47:51.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023850806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023977944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.591" endtime="20201117 14:47:51.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023850806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023977944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.884" endtime="20201117 14:47:51.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.892" endtime="20201117 14:47:51.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.589" endtime="20201117 14:47:51.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.587" endtime="20201117 14:47:51.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.898" level="INFO">${RESULT} = [{'time': 0.023977944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012713800000000233, 'source_diff': 0.00012713800000000233}, {'time': 0.024131306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:51.895" endtime="20201117 14:47:51.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:51.912" level="INFO">${ACCURACY} = {'diff': [0.00012713800000000233, 0.00012752800000000175, 0.00012720899999999966, 0.00012684699999999938, 0.00012745800000000043, 0.0001268889999999981, 0.00012708300000000006, 0.00012737499999999902,...</msg>
<status status="PASS" starttime="20201117 14:47:51.899" endtime="20201117 14:47:51.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.916" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:47:51.915" endtime="20201117 14:47:51.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.919" level="INFO">VALUE: [0.00012713800000000233, 0.00012752800000000175, 0.00012720899999999966, 0.00012684699999999938, 0.00012745800000000043, 0.0001268889999999981, 0.00012708300000000006, 0.00012737499999999902, 0.00012719500000000009, 0.000126778000000001, 0.00012676400000000143, 0.00012713899999999834, 0.00012719500000000009, 0.00012769500000000059, 0.00012734699999999988, 0.00012734699999999988, 0.00012722199999999975, 0.00012711100000000267, 0.00012722199999999975, 0.00012752799999999828, 0.00012758300000000056, 0.0001267369999999983, 0.00012690299999999766, 0.00012687500000000199, 0.00012701400000000168, 0.00012726399999999846, 0.00012698600000000254, 0.0001276940000000011, 0.0001272499999999989, 0.00012694499999999984, 0.00012662499999999827, 0.0001269589999999994, 0.0001272499999999989, 0.00012681900000000024, 0.00012706899999999702, 0.0001270690000000005, 0.00012687499999999852, 0.00012756899999999752, 0.00012726399999999846, 0.00012747300000000295, 0.00012702800000000125, 0.0001270690000000005, 0.00012720900000000313, 0.00012679200000000057, 0.0001275139999999987, 0.00012745800000000043, 0.00012673599999999882, 0.00012752799999999828, 0.00012744400000000086, 0.00012690299999999766]</msg>
<status status="PASS" starttime="20201117 14:47:51.917" endtime="20201117 14:47:51.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.913" endtime="20201117 14:47:51.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.922" endtime="20201117 14:47:51.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:51.925" endtime="20201117 14:47:51.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.924" endtime="20201117 14:47:51.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.920" endtime="20201117 14:47:51.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.547" endtime="20201117 14:47:51.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.546" endtime="20201117 14:47:51.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.545" endtime="20201117 14:47:51.946"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.949" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.957" endtime="20201117 14:47:51.978"></status>
</kw>
<msg timestamp="20201117 14:47:51.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.956" endtime="20201117 14:47:51.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.979" endtime="20201117 14:47:51.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.982" endtime="20201117 14:47:51.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.953" endtime="20201117 14:47:51.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.951" endtime="20201117 14:47:51.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.991" endtime="20201117 14:47:52.277"></status>
</kw>
<msg timestamp="20201117 14:47:52.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025147875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025276528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.989" endtime="20201117 14:47:52.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025147875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025276528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.281" endtime="20201117 14:47:52.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.289" endtime="20201117 14:47:52.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.987" endtime="20201117 14:47:52.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.985" endtime="20201117 14:47:52.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.296" level="INFO">${RESULT} = [{'time': 0.025276528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001286529999999994, 'source_diff': 0.0001286529999999994}, {'time': 0.025436944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:52.292" endtime="20201117 14:47:52.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.310" level="INFO">${ACCURACY} = {'diff': [0.0001286529999999994, 0.00012833299999999784, 0.000128569000000002, 0.00012826400000000293, 0.0001283330000000013, 0.0001280139999999992, 0.00012813899999999934, 0.00012767999999999807, 0.0...</msg>
<status status="PASS" starttime="20201117 14:47:52.297" endtime="20201117 14:47:52.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.315" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.314" endtime="20201117 14:47:52.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.317" level="INFO">VALUE: [0.0001286529999999994, 0.00012833299999999784, 0.000128569000000002, 0.00012826400000000293, 0.0001283330000000013, 0.0001280139999999992, 0.00012813899999999934, 0.00012767999999999807, 0.0001283330000000013, 0.00012812499999999977, 0.0001280699999999975, 0.00012794400000000136, 0.0001285980000000006, 0.0001278889999999991, 0.00012833299999999784, 0.0001277499999999994, 0.00012795800000000093, 0.00012844500000000134, 0.0001281110000000002, 0.00012808300000000106, 0.00012826399999999946, 0.00012837500000000002, 0.00012870800000000168, 0.0001283889999999996, 0.00012767999999999807, 0.0001277919999999981, 0.0001281529999999989, 0.00012854099999999938, 0.000128569000000002, 0.00012798600000000007, 0.0001279720000000005, 0.0001279720000000005, 0.00012842999999999882, 0.00012795800000000093, 0.00012790300000000213, 0.00012790299999999866, 0.00012837500000000002, 0.00012797299999999998, 0.0001283200000000012, 0.00012790299999999866, 0.00012768099999999755, 0.0001280000000000031, 0.0001283200000000012, 0.00012854200000000232, 0.00012838900000000653, 0.0001283889999999996, 0.0001284439999999984, 0.00012790299999999866, 0.000128472999999997, 0.00012819399999999814]</msg>
<status status="PASS" starttime="20201117 14:47:52.316" endtime="20201117 14:47:52.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.311" endtime="20201117 14:47:52.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.320" endtime="20201117 14:47:52.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.324" endtime="20201117 14:47:52.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.322" endtime="20201117 14:47:52.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.319" endtime="20201117 14:47:52.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.949" endtime="20201117 14:47:52.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.948" endtime="20201117 14:47:52.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.947" endtime="20201117 14:47:52.345"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.348" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.356" endtime="20201117 14:47:52.376"></status>
</kw>
<msg timestamp="20201117 14:47:52.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.355" endtime="20201117 14:47:52.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.377" endtime="20201117 14:47:52.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.380" endtime="20201117 14:47:52.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.352" endtime="20201117 14:47:52.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.350" endtime="20201117 14:47:52.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.389" endtime="20201117 14:47:52.673"></status>
</kw>
<msg timestamp="20201117 14:47:52.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023952, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024081806, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:52.387" endtime="20201117 14:47:52.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023952, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024081806, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:52.677" endtime="20201117 14:47:52.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.685" endtime="20201117 14:47:52.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.385" endtime="20201117 14:47:52.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.383" endtime="20201117 14:47:52.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.692" level="INFO">${RESULT} = [{'time': 0.024081806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012980599999999967, 'source_diff': 0.00012980599999999967}, {'time': 0.024243194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:52.689" endtime="20201117 14:47:52.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.705" level="INFO">${ACCURACY} = {'diff': [0.00012980599999999967, 0.00012961099999999823, 0.00012937500000000102, 0.00012955599999999942, 0.00012909700000000163, 0.00012913900000000034, 0.00012874999999999692, 0.00012963900000000084...</msg>
<status status="PASS" starttime="20201117 14:47:52.693" endtime="20201117 14:47:52.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.710" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.709" endtime="20201117 14:47:52.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.712" level="INFO">VALUE: [0.00012980599999999967, 0.00012961099999999823, 0.00012937500000000102, 0.00012955599999999942, 0.00012909700000000163, 0.00012913900000000034, 0.00012874999999999692, 0.00012963900000000084, 0.00012937500000000102, 0.0001293890000000006, 0.00012940300000000016, 0.00012897300000000098, 0.00012870899999999769, 0.00012886100000000095, 0.0001288890000000001, 0.00012890299999999966, 0.0001292500000000009, 0.00012899999999999717, 0.00012950000000000114, 0.00012942999999999982, 0.00012907000000000196, 0.00012906899999999902, 0.00012876399999999996, 0.00012937500000000102, 0.00012881900000000224, 0.00012955499999999995, 0.0001292500000000009, 0.00012942999999999982, 0.00012900000000000064, 0.0001290140000000002, 0.0001293049999999997, 0.00012894400000000236, 0.0001291249999999973, 0.0001288200000000017, 0.0001288200000000017, 0.0001287500000000004, 0.0001292500000000009, 0.00012954199999999985, 0.0001288890000000001, 0.00012963899999999737, 0.00012955499999999995, 0.00012883400000000128, 0.00012919399999999914, 0.0001291529999999999, 0.0001288200000000017, 0.0001290140000000002, 0.00012962500000000127, 0.00012905599999999892, 0.000129472999999998, 0.00012972199999999878]</msg>
<status status="PASS" starttime="20201117 14:47:52.711" endtime="20201117 14:47:52.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.706" endtime="20201117 14:47:52.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.716" endtime="20201117 14:47:52.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.719" endtime="20201117 14:47:52.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.718" endtime="20201117 14:47:52.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.714" endtime="20201117 14:47:52.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.348" endtime="20201117 14:47:52.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.347" endtime="20201117 14:47:52.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.346" endtime="20201117 14:47:52.740"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.743" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.751" endtime="20201117 14:47:52.770"></status>
</kw>
<msg timestamp="20201117 14:47:52.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.749" endtime="20201117 14:47:52.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.772" endtime="20201117 14:47:52.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.775" endtime="20201117 14:47:52.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.747" endtime="20201117 14:47:52.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.745" endtime="20201117 14:47:52.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.784" endtime="20201117 14:47:53.069"></status>
</kw>
<msg timestamp="20201117 14:47:53.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023742722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023873181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.782" endtime="20201117 14:47:53.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023742722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023873181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.073" endtime="20201117 14:47:53.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.082" endtime="20201117 14:47:53.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.779" endtime="20201117 14:47:53.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.778" endtime="20201117 14:47:53.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.088" level="INFO">${RESULT} = [{'time': 0.023873181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013045899999999944, 'source_diff': 0.00013045899999999944}, {'time': 0.024029722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:53.085" endtime="20201117 14:47:53.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.102" level="INFO">${ACCURACY} = {'diff': [0.00013045899999999944, 0.00013036099999999898, 0.00013016700000000048, 0.00013047300000000248, 0.00012995799999999946, 0.0001304310000000003, 0.0001299439999999999, 0.00012969499999999912, ...</msg>
<status status="PASS" starttime="20201117 14:47:53.089" endtime="20201117 14:47:53.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.106" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.105" endtime="20201117 14:47:53.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.109" level="INFO">VALUE: [0.00013045899999999944, 0.00013036099999999898, 0.00013016700000000048, 0.00013047300000000248, 0.00012995799999999946, 0.0001304310000000003, 0.0001299439999999999, 0.00012969499999999912, 0.0001298330000000028, 0.00012986099999999848, 0.00012991600000000075, 0.0001297630000000015, 0.00013013800000000186, 0.00012999999999999817, 0.00013020800000000318, 0.00012976400000000096, 0.00013047199999999953, 0.0001305279999999978, 0.00012995899999999894, 0.0001300279999999973, 0.0001300140000000012, 0.0001299309999999998, 0.00013037500000000202, 0.00012987499999999805, 0.00012966699999999998, 0.0001306249999999988, 0.00013057, 0.0001300279999999973, 0.00012987499999999805, 0.0001301530000000009, 0.00012988899999999762, 0.00013030499999999723, 0.00013016700000000048, 0.0001304310000000003, 0.00013015299999999744, 0.00013062500000000227, 0.00013033299999999984, 0.00012969399999999964, 0.0001299309999999998, 0.00013019499999999962, 0.00013036100000000245, 0.00013008399999999906, 0.00013061099999999923, 0.00013037499999999855, 0.0001304859999999991, 0.00013008399999999906, 0.0001302079999999997, 0.00013002800000000078, 0.00013018000000000057, 0.00012968099999999955]</msg>
<status status="PASS" starttime="20201117 14:47:53.107" endtime="20201117 14:47:53.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.102" endtime="20201117 14:47:53.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.112" endtime="20201117 14:47:53.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.116" endtime="20201117 14:47:53.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.114" endtime="20201117 14:47:53.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.111" endtime="20201117 14:47:53.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.743" endtime="20201117 14:47:53.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.742" endtime="20201117 14:47:53.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.741" endtime="20201117 14:47:53.137"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.139" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.147" endtime="20201117 14:47:53.167"></status>
</kw>
<msg timestamp="20201117 14:47:53.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.146" endtime="20201117 14:47:53.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.169" endtime="20201117 14:47:53.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.172" endtime="20201117 14:47:53.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.143" endtime="20201117 14:47:53.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.141" endtime="20201117 14:47:53.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.182" endtime="20201117 14:47:53.468"></status>
</kw>
<msg timestamp="20201117 14:47:53.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023760347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023892139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.180" endtime="20201117 14:47:53.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023760347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023892139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.472" endtime="20201117 14:47:53.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.480" endtime="20201117 14:47:53.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.177" endtime="20201117 14:47:53.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.175" endtime="20201117 14:47:53.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.487" level="INFO">${RESULT} = [{'time': 0.023892139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013179199999999863, 'source_diff': 0.00013179199999999863}, {'time': 0.024051542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:53.484" endtime="20201117 14:47:53.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.501" level="INFO">${ACCURACY} = {'diff': [0.00013179199999999863, 0.00013136099999999998, 0.00013093099999999733, 0.00013123599999999985, 0.00013151399999999924, 0.00013099999999999917, 0.00013079199999999763, 0.00013087500000000252...</msg>
<status status="PASS" starttime="20201117 14:47:53.488" endtime="20201117 14:47:53.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.505" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.504" endtime="20201117 14:47:53.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.508" level="INFO">VALUE: [0.00013179199999999863, 0.00013136099999999998, 0.00013093099999999733, 0.00013123599999999985, 0.00013151399999999924, 0.00013099999999999917, 0.00013079199999999763, 0.00013087500000000252, 0.00013068000000000107, 0.00013130499999999823, 0.00013123599999999985, 0.000131166999999998, 0.00013136099999999998, 0.0001311249999999993, 0.00013094500000000037, 0.00013080600000000067, 0.0001316249999999998, 0.00013141599999999878, 0.00013119399999999767, 0.00013100000000000264, 0.00013151399999999924, 0.0001309440000000009, 0.00013129100000000213, 0.00013086100000000295, 0.00013102800000000178, 0.0001308469999999999, 0.00013106900000000102, 0.00013104200000000135, 0.00013079199999999763, 0.00013068100000000055, 0.00013154200000000185, 0.00013136199999999945, 0.00013124999999999942, 0.00013132000000000074, 0.00013105500000000145, 0.00013080600000000067, 0.00013072199999999978, 0.00013124999999999942, 0.00013069400000000064, 0.0001316799999999986, 0.0001308050000000012, 0.0001314440000000014, 0.0001309859999999996, 0.0001314860000000001, 0.0001314310000000013, 0.000131570000000001, 0.00013163900000000284, 0.00013066599999999803, 0.000131472000000004, 0.0001316389999999959]</msg>
<status status="PASS" starttime="20201117 14:47:53.506" endtime="20201117 14:47:53.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.502" endtime="20201117 14:47:53.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.511" endtime="20201117 14:47:53.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.514" endtime="20201117 14:47:53.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.513" endtime="20201117 14:47:53.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.509" endtime="20201117 14:47:53.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.140" endtime="20201117 14:47:53.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.138" endtime="20201117 14:47:53.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.137" endtime="20201117 14:47:53.535"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.538" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.546" endtime="20201117 14:47:53.566"></status>
</kw>
<msg timestamp="20201117 14:47:53.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.544" endtime="20201117 14:47:53.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.568" endtime="20201117 14:47:53.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.570" endtime="20201117 14:47:53.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.542" endtime="20201117 14:47:53.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.540" endtime="20201117 14:47:53.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.579" endtime="20201117 14:47:53.865"></status>
</kw>
<msg timestamp="20201117 14:47:53.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024759292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024891194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.578" endtime="20201117 14:47:53.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024759292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024891194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.869" endtime="20201117 14:47:53.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.878" endtime="20201117 14:47:53.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.575" endtime="20201117 14:47:53.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.574" endtime="20201117 14:47:53.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.884" level="INFO">${RESULT} = [{'time': 0.024891194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013190199999999971, 'source_diff': 0.00013190199999999971}, {'time': 0.025044583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:53.881" endtime="20201117 14:47:53.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.899" level="INFO">${ACCURACY} = {'diff': [0.00013190199999999971, 0.00013188899999999962, 0.0001319860000000006, 0.00013179100000000263, 0.00013205599999999845, 0.00013173600000000035, 0.00013197200000000103, 0.00013237500000000055,...</msg>
<status status="PASS" starttime="20201117 14:47:53.885" endtime="20201117 14:47:53.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.903" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.902" endtime="20201117 14:47:53.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.906" level="INFO">VALUE: [0.00013190199999999971, 0.00013188899999999962, 0.0001319860000000006, 0.00013179100000000263, 0.00013205599999999845, 0.00013173600000000035, 0.00013197200000000103, 0.00013237500000000055, 0.0001325279999999998, 0.0001326669999999995, 0.0001324440000000024, 0.0001323470000000014, 0.00013198700000000008, 0.00013259800000000113, 0.00013209800000000063, 0.00013173600000000035, 0.00013237500000000055, 0.0001322920000000026, 0.00013216599999999953, 0.0001325969999999982, 0.00013241699999999926, 0.00013242999999999935, 0.00013205499999999898, 0.00013193099999999833, 0.0001318059999999982, 0.00013197299999999704, 0.00013205500000000245, 0.00013223600000000085, 0.0001325409999999999, 0.00013198599999999713, 0.00013174999999999992, 0.00013201399999999974, 0.00013192999999999885, 0.00013237500000000055, 0.0001319860000000006, 0.00013182000000000124, 0.00013201399999999974, 0.00013220899999999772, 0.00013200000000000017, 0.0001317639999999995, 0.0001326669999999995, 0.00013205600000000192, 0.00013256999999999852, 0.00013222200000000128, 0.00013262499999999733, 0.0001318189999999983, 0.00013223700000000033, 0.0001318189999999983, 0.0001323609999999975, 0.00013238899999999665]</msg>
<status status="PASS" starttime="20201117 14:47:53.904" endtime="20201117 14:47:53.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.900" endtime="20201117 14:47:53.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.909" endtime="20201117 14:47:53.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.912" endtime="20201117 14:47:53.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.911" endtime="20201117 14:47:53.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.907" endtime="20201117 14:47:53.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.538" endtime="20201117 14:47:53.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.536" endtime="20201117 14:47:53.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.536" endtime="20201117 14:47:53.933"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.936" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.944" endtime="20201117 14:47:53.964"></status>
</kw>
<msg timestamp="20201117 14:47:53.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.942" endtime="20201117 14:47:53.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.965" endtime="20201117 14:47:53.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.968" endtime="20201117 14:47:53.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.940" endtime="20201117 14:47:53.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.938" endtime="20201117 14:47:53.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.977" endtime="20201117 14:47:54.263"></status>
</kw>
<msg timestamp="20201117 14:47:54.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023899347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024032875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.975" endtime="20201117 14:47:54.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023899347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024032875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.268" endtime="20201117 14:47:54.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.276" endtime="20201117 14:47:54.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.973" endtime="20201117 14:47:54.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.971" endtime="20201117 14:47:54.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.282" level="INFO">${RESULT} = [{'time': 0.024032875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013352799999999734, 'source_diff': 0.00013352799999999734}, {'time': 0.024191292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:54.279" endtime="20201117 14:47:54.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:54.296" level="INFO">${ACCURACY} = {'diff': [0.00013352799999999734, 0.0001334999999999982, 0.0001330410000000004, 0.00013330500000000023, 0.00013337499999999808, 0.00013333299999999937, 0.00013323599999999838, 0.00013351400000000124, ...</msg>
<status status="PASS" starttime="20201117 14:47:54.283" endtime="20201117 14:47:54.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.300" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.299" endtime="20201117 14:47:54.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.303" level="INFO">VALUE: [0.00013352799999999734, 0.0001334999999999982, 0.0001330410000000004, 0.00013330500000000023, 0.00013337499999999808, 0.00013333299999999937, 0.00013323599999999838, 0.00013351400000000124, 0.00013326399999999752, 0.0001335280000000008, 0.00013290200000000071, 0.00013276300000000102, 0.0001333059999999997, 0.00013323599999999838, 0.00013280499999999973, 0.00013300000000000117, 0.00013291699999999976, 0.00013338899999999765, 0.00013273599999999788, 0.00013323600000000185, 0.0001331120000000012, 0.00013320799999999924, 0.00013288800000000114, 0.0001328189999999993, 0.00013302700000000084, 0.00013324999999999795, 0.00013306899999999955, 0.00013327800000000056, 0.0001330969999999987, 0.0001330280000000003, 0.00013279199999999963, 0.00013341600000000078, 0.00013330500000000023, 0.00013312499999999783, 0.00013287500000000105, 0.00013308299999999912, 0.00013275000000000092, 0.0001330969999999987, 0.0001327219999999983, 0.00013348599999999863, 0.00013319399999999967, 0.00013293099999999933, 0.00013341700000000026, 0.00013300000000000117, 0.0001331800000000001, 0.00013354200000000038, 0.00013309700000000216, 0.00013305599999999945, 0.0001329310000000028, 0.00013319500000000262]</msg>
<status status="PASS" starttime="20201117 14:47:54.301" endtime="20201117 14:47:54.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.297" endtime="20201117 14:47:54.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.306" endtime="20201117 14:47:54.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.309" endtime="20201117 14:47:54.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.308" endtime="20201117 14:47:54.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.304" endtime="20201117 14:47:54.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.936" endtime="20201117 14:47:54.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.934" endtime="20201117 14:47:54.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.934" endtime="20201117 14:47:54.330"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.333" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.341" endtime="20201117 14:47:54.360"></status>
</kw>
<msg timestamp="20201117 14:47:54.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.339" endtime="20201117 14:47:54.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.362" endtime="20201117 14:47:54.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.365" endtime="20201117 14:47:54.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.337" endtime="20201117 14:47:54.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.335" endtime="20201117 14:47:54.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.374" endtime="20201117 14:47:54.660"></status>
</kw>
<msg timestamp="20201117 14:47:54.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023779431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023914028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.373" endtime="20201117 14:47:54.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023779431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023914028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.665" endtime="20201117 14:47:54.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.673" endtime="20201117 14:47:54.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.370" endtime="20201117 14:47:54.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.368" endtime="20201117 14:47:54.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.679" level="INFO">${RESULT} = [{'time': 0.023914028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001345970000000002, 'source_diff': 0.0001345970000000002}, {'time': 0.024067431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:54.676" endtime="20201117 14:47:54.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:54.693" level="INFO">${ACCURACY} = {'diff': [0.0001345970000000002, 0.00013441700000000126, 0.0001339449999999999, 0.00013419400000000067, 0.00013462499999999933, 0.00013455600000000095, 0.00013430499999999776, 0.0001346670000000015, 0...</msg>
<status status="PASS" starttime="20201117 14:47:54.680" endtime="20201117 14:47:54.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.699" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.697" endtime="20201117 14:47:54.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.704" level="INFO">VALUE: [0.0001345970000000002, 0.00013441700000000126, 0.0001339449999999999, 0.00013419400000000067, 0.00013462499999999933, 0.00013455600000000095, 0.00013430499999999776, 0.0001346670000000015, 0.00013455599999999748, 0.00013419500000000015, 0.0001344169999999978, 0.0001336939999999967, 0.0001345970000000002, 0.00013370799999999974, 0.0001343609999999995, 0.000133860999999999, 0.0001337770000000016, 0.00013415300000000144, 0.00013457000000000052, 0.00013415300000000144, 0.00013412499999999883, 0.00013391700000000076, 0.00013397199999999956, 0.00013373599999999888, 0.00013459799999999966, 0.00013411099999999926, 0.00013395900000000294, 0.00013420800000000024, 0.000133958, 0.0001342909999999982, 0.0001336389999999979, 0.00013452700000000234, 0.00013451400000000224, 0.00013443100000000083, 0.000134167000000001, 0.00013443000000000135, 0.00013422300000000276, 0.00013374999999999845, 0.0001340419999999974, 0.00013441700000000126, 0.00013456899999999758, 0.0001345419999999979, 0.0001342909999999982, 0.00013398599999999913, 0.0001340969999999997, 0.0001340969999999997, 0.00013431899999999733, 0.0001338060000000002, 0.00013415299999999797, 0.0001339719999999961]</msg>
<status status="PASS" starttime="20201117 14:47:54.702" endtime="20201117 14:47:54.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.694" endtime="20201117 14:47:54.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.711" endtime="20201117 14:47:54.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.718" endtime="20201117 14:47:54.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.715" endtime="20201117 14:47:54.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.708" endtime="20201117 14:47:54.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.333" endtime="20201117 14:47:54.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.331" endtime="20201117 14:47:54.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.331" endtime="20201117 14:47:54.744"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.749" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.766" endtime="20201117 14:47:54.789"></status>
</kw>
<msg timestamp="20201117 14:47:54.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.763" endtime="20201117 14:47:54.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.792" endtime="20201117 14:47:54.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.798" endtime="20201117 14:47:54.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.758" endtime="20201117 14:47:54.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.753" endtime="20201117 14:47:54.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.807" endtime="20201117 14:47:55.092"></status>
</kw>
<msg timestamp="20201117 14:47:55.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040726167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040861208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.805" endtime="20201117 14:47:55.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040726167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040861208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.096" endtime="20201117 14:47:55.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.104" endtime="20201117 14:47:55.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.803" endtime="20201117 14:47:55.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.801" endtime="20201117 14:47:55.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:55.110" level="INFO">${RESULT} = [{'time': 0.040861208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001350410000000024, 'source_diff': 0.0001350410000000024}, {'time': 0.041023611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:55.107" endtime="20201117 14:47:55.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.124" level="INFO">${ACCURACY} = {'diff': [0.0001350410000000024, 0.00013556900000000205, 0.0001351809999999981, 0.00013555600000000195, 0.0001350970000000007, 0.00013533300000000137, 0.00013548599999999716, 0.00013468100000000455, 0...</msg>
<status status="PASS" starttime="20201117 14:47:55.111" endtime="20201117 14:47:55.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.128" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.127" endtime="20201117 14:47:55.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.130" level="INFO">VALUE: [0.0001350410000000024, 0.00013556900000000205, 0.0001351809999999981, 0.00013555600000000195, 0.0001350970000000007, 0.00013533300000000137, 0.00013548599999999716, 0.00013468100000000455, 0.0001352919999999952, 0.0001355280000000028, 0.0001356939999999987, 0.00013549999999999673, 0.0001349310000000048, 0.0001348190000000013, 0.00013512499999999983, 0.00013492999999999838, 0.00013561100000000076, 0.00013544399999999845, 0.00013476399999999555, 0.00013525000000000342, 0.0001350280000000023, 0.00013499999999999623, 0.0001354310000000053, 0.00013525000000000342, 0.00013517999999999863, 0.00013544399999999845, 0.00013561100000000076, 0.00013549999999999673, 0.00013515299999999897, 0.0001355689999999951, 0.00013472199999999684, 0.0001349310000000048, 0.00013562500000000033, 0.0001346809999999976, 0.0001348190000000013, 0.0001354860000000041, 0.00013479100000000216, 0.00013477800000000206, 0.00013519499999999768, 0.00013487499999999958, 0.00013556999999999458, 0.00013476399999999555, 0.0001347640000000025, 0.0001352080000000047, 0.00013543099999999836, 0.00013480500000000173, 0.00013505600000000145, 0.000134861, 0.000135652, 0.00013493099999999786]</msg>
<status status="PASS" starttime="20201117 14:47:55.129" endtime="20201117 14:47:55.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.125" endtime="20201117 14:47:55.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.134" endtime="20201117 14:47:55.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.137" endtime="20201117 14:47:55.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.135" endtime="20201117 14:47:55.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.132" endtime="20201117 14:47:55.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.750" endtime="20201117 14:47:55.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.746" endtime="20201117 14:47:55.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.744" endtime="20201117 14:47:55.158"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.161" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.169" endtime="20201117 14:47:55.190"></status>
</kw>
<msg timestamp="20201117 14:47:55.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.167" endtime="20201117 14:47:55.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.191" endtime="20201117 14:47:55.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.194" endtime="20201117 14:47:55.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.165" endtime="20201117 14:47:55.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.163" endtime="20201117 14:47:55.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.205" endtime="20201117 14:47:55.491"></status>
</kw>
<msg timestamp="20201117 14:47:55.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024538333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024674278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.203" endtime="20201117 14:47:55.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024538333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024674278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.495" endtime="20201117 14:47:55.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.503" endtime="20201117 14:47:55.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.200" endtime="20201117 14:47:55.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.198" endtime="20201117 14:47:55.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:55.517" level="INFO">${RESULT} = [{'time': 0.024674278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001359450000000019, 'source_diff': 0.0001359450000000019}, {'time': 0.024841819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:55.510" endtime="20201117 14:47:55.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.549" level="INFO">${ACCURACY} = {'diff': [0.0001359450000000019, 0.00013638800000000117, 0.00013570899999999775, 0.00013626300000000105, 0.00013609699999999822, 0.00013565299999999947, 0.00013595900000000147, 0.00013584699999999797,...</msg>
<status status="PASS" starttime="20201117 14:47:55.519" endtime="20201117 14:47:55.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.558" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.556" endtime="20201117 14:47:55.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.563" level="INFO">VALUE: [0.0001359450000000019, 0.00013638800000000117, 0.00013570899999999775, 0.00013626300000000105, 0.00013609699999999822, 0.00013565299999999947, 0.00013595900000000147, 0.00013584699999999797, 0.00013579199999999916, 0.0001361390000000004, 0.0001366390000000009, 0.00013598600000000113, 0.00013661100000000176, 0.0001361939999999992, 0.00013662499999999786, 0.00013602799999999984, 0.00013626400000000052, 0.0001364580000000025, 0.00013668000000000013, 0.00013595900000000147, 0.0001360549999999995, 0.00013587500000000058, 0.00013574999999999698, 0.00013670899999999875, 0.00013594399999999895, 0.00013642999999999988, 0.00013598600000000113, 0.00013629199999999966, 0.000136555, 0.0001360000000000007, 0.0001365139999999973, 0.00013620799999999877, 0.00013624999999999748, 0.0001362780000000001, 0.000135861000000001, 0.0001362910000000002, 0.0001357779999999996, 0.00013598600000000113, 0.00013594499999999843, 0.0001359719999999981, 0.00013595799999999852, 0.00013593099999999886, 0.0001360840000000016, 0.00013625000000000442, 0.0001363190000000028, 0.00013611100000000126, 0.0001357640000000035, 0.0001365840000000021, 0.00013661200000000123, 0.0001363610000000015]</msg>
<status status="PASS" starttime="20201117 14:47:55.560" endtime="20201117 14:47:55.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.551" endtime="20201117 14:47:55.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.570" endtime="20201117 14:47:55.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.577" endtime="20201117 14:47:55.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.574" endtime="20201117 14:47:55.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.567" endtime="20201117 14:47:55.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.161" endtime="20201117 14:47:55.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.160" endtime="20201117 14:47:55.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.159" endtime="20201117 14:47:55.602"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.606" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.614" endtime="20201117 14:47:55.634"></status>
</kw>
<msg timestamp="20201117 14:47:55.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.612" endtime="20201117 14:47:55.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.635" endtime="20201117 14:47:55.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.638" endtime="20201117 14:47:55.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.610" endtime="20201117 14:47:55.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.608" endtime="20201117 14:47:55.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.647" endtime="20201117 14:47:55.931"></status>
</kw>
<msg timestamp="20201117 14:47:55.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028230417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028367389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.645" endtime="20201117 14:47:55.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028230417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028367389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.936" endtime="20201117 14:47:55.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.944" endtime="20201117 14:47:55.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.643" endtime="20201117 14:47:55.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.641" endtime="20201117 14:47:55.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:55.950" level="INFO">${RESULT} = [{'time': 0.028367389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001369719999999991, 'source_diff': 0.0001369719999999991}, {'time': 0.028536736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:55.947" endtime="20201117 14:47:55.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.963" level="INFO">${ACCURACY} = {'diff': [0.0001369719999999991, 0.00013695799999999952, 0.00013679200000000016, 0.00013702800000000084, 0.0001375420000000009, 0.00013738900000000165, 0.00013672199999999884, 0.00013734699999999947, ...</msg>
<status status="PASS" starttime="20201117 14:47:55.951" endtime="20201117 14:47:55.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.968" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.967" endtime="20201117 14:47:55.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.970" level="INFO">VALUE: [0.0001369719999999991, 0.00013695799999999952, 0.00013679200000000016, 0.00013702800000000084, 0.0001375420000000009, 0.00013738900000000165, 0.00013672199999999884, 0.00013734699999999947, 0.0001368749999999981, 0.0001373049999999973, 0.00013731900000000033, 0.0001371529999999975, 0.00013727799999999762, 0.00013683300000000287, 0.00013730600000000023, 0.00013690300000000072, 0.00013740200000000174, 0.0001371520000000015, 0.00013722199999999934, 0.00013686099999999507, 0.0001369170000000003, 0.0001370970000000027, 0.00013668000000000013, 0.00013733299999999643, 0.000137652000000002, 0.00013761099999999582, 0.000136652000000001, 0.00013673599999999841, 0.00013716700000000054, 0.0001373610000000025, 0.0001367919999999967, 0.00013750000000000567, 0.0001373339999999959, 0.0001374719999999996, 0.00013722199999999934, 0.00013676399999999755, 0.00013673600000000535, 0.00013723599999999891, 0.00013711100000000226, 0.00013711100000000226, 0.000136958999999999, 0.00013711099999999532, 0.00013672200000000578, 0.00013730599999999676, 0.00013672299999999832, 0.00013761100000000276, 0.0001373049999999973, 0.00013740300000000122, 0.00013716700000000054, 0.0001375970000000032]</msg>
<status status="PASS" starttime="20201117 14:47:55.969" endtime="20201117 14:47:55.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.964" endtime="20201117 14:47:55.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.974" endtime="20201117 14:47:55.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.977" endtime="20201117 14:47:55.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.975" endtime="20201117 14:47:55.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.972" endtime="20201117 14:47:55.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.607" endtime="20201117 14:47:55.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.605" endtime="20201117 14:47:55.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.603" endtime="20201117 14:47:55.998"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.000" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.008" endtime="20201117 14:47:56.028"></status>
</kw>
<msg timestamp="20201117 14:47:56.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.007" endtime="20201117 14:47:56.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.030" endtime="20201117 14:47:56.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.032" endtime="20201117 14:47:56.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.004" endtime="20201117 14:47:56.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.002" endtime="20201117 14:47:56.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.041" endtime="20201117 14:47:56.326"></status>
</kw>
<msg timestamp="20201117 14:47:56.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023604542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023742319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.039" endtime="20201117 14:47:56.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023604542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023742319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.330" endtime="20201117 14:47:56.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.338" endtime="20201117 14:47:56.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.037" endtime="20201117 14:47:56.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.035" endtime="20201117 14:47:56.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.345" level="INFO">${RESULT} = [{'time': 0.023742319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013777700000000212, 'source_diff': 0.00013777700000000212}, {'time': 0.023906806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:56.342" endtime="20201117 14:47:56.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.358" level="INFO">${ACCURACY} = {'diff': [0.00013777700000000212, 0.000137652999999998, 0.00013816700000000154, 0.00013827700000000262, 0.0001380139999999988, 0.00013823599999999991, 0.00013818099999999764, 0.00013843000000000188, 0...</msg>
<status status="PASS" starttime="20201117 14:47:56.346" endtime="20201117 14:47:56.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.363" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.362" endtime="20201117 14:47:56.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.365" level="INFO">VALUE: [0.00013777700000000212, 0.000137652999999998, 0.00013816700000000154, 0.00013827700000000262, 0.0001380139999999988, 0.00013823599999999991, 0.00013818099999999764, 0.00013843000000000188, 0.00013827799999999862, 0.000137652999999998, 0.00013762499999999886, 0.00013805600000000098, 0.00013809700000000022, 0.0001383330000000009, 0.00013805600000000098, 0.0001386110000000003, 0.0001384170000000018, 0.00013838900000000265, 0.00013804100000000194, 0.00013802800000000184, 0.00013844500000000093, 0.00013809700000000022, 0.00013830600000000123, 0.00013852799999999887, 0.0001381529999999985, 0.00013790299999999825, 0.00013827699999999915, 0.0001382919999999982, 0.00013791599999999835, 0.00013772199999999984, 0.00013806900000000108, 0.00013816699999999807, 0.0001384720000000006, 0.0001385139999999993, 0.00013848600000000016, 0.0001382780000000021, 0.0001378200000000003, 0.00013812499999999936, 0.00013804100000000194, 0.00013823600000000338, 0.00013841599999999885, 0.00013795800000000052, 0.0001383200000000008, 0.000137861000000003, 0.00013773599999999941, 0.00013798599999999966, 0.00013774999999999898, 0.0001385139999999993, 0.00013843100000000136, 0.00013843099999999442]</msg>
<status status="PASS" starttime="20201117 14:47:56.364" endtime="20201117 14:47:56.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.359" endtime="20201117 14:47:56.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.368" endtime="20201117 14:47:56.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.371" endtime="20201117 14:47:56.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.370" endtime="20201117 14:47:56.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.367" endtime="20201117 14:47:56.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.001" endtime="20201117 14:47:56.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.999" endtime="20201117 14:47:56.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.998" endtime="20201117 14:47:56.393"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.395" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.403" endtime="20201117 14:47:56.423"></status>
</kw>
<msg timestamp="20201117 14:47:56.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.401" endtime="20201117 14:47:56.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.424" endtime="20201117 14:47:56.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.427" endtime="20201117 14:47:56.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.399" endtime="20201117 14:47:56.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.397" endtime="20201117 14:47:56.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.436" endtime="20201117 14:47:56.722"></status>
</kw>
<msg timestamp="20201117 14:47:56.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023608444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023747986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.434" endtime="20201117 14:47:56.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023608444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023747986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.726" endtime="20201117 14:47:56.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.742" endtime="20201117 14:47:56.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.432" endtime="20201117 14:47:56.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.430" endtime="20201117 14:47:56.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.749" level="INFO">${RESULT} = [{'time': 0.023747986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013954199999999944, 'source_diff': 0.00013954199999999944}, {'time': 0.023901542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:56.746" endtime="20201117 14:47:56.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.762" level="INFO">${ACCURACY} = {'diff': [0.00013954199999999944, 0.0001395140000000003, 0.00013870900000000075, 0.0001395140000000003, 0.00013877799999999912, 0.0001389170000000023, 0.00013929099999999972, 0.00013909700000000122, 0...</msg>
<status status="PASS" starttime="20201117 14:47:56.750" endtime="20201117 14:47:56.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.766" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.765" endtime="20201117 14:47:56.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.769" level="INFO">VALUE: [0.00013954199999999944, 0.0001395140000000003, 0.00013870900000000075, 0.0001395140000000003, 0.00013877799999999912, 0.0001389170000000023, 0.00013929099999999972, 0.00013909700000000122, 0.0001389170000000023, 0.00013874999999999998, 0.00013923599999999745, 0.00013941699999999932, 0.00013936100000000104, 0.00013923599999999745, 0.0001389720000000011, 0.00013922200000000134, 0.0001388330000000014, 0.00013906999999999808, 0.0001387369999999999, 0.00013913899999999993, 0.0001389729999999971, 0.00013866600000000256, 0.00013923599999999745, 0.00013938900000000018, 0.00013930599999999876, 0.0001394309999999989, 0.00013933299999999843, 0.0001388750000000001, 0.0001391529999999995, 0.0001391110000000008, 0.00013909700000000122, 0.00013909799999999722, 0.00013872200000000084, 0.0001388049999999988, 0.00013958299999999868, 0.00013884700000000097, 0.00013884700000000097, 0.00013940299999999975, 0.0001391659999999996, 0.00013922200000000134, 0.0001390980000000007, 0.0001391659999999996, 0.00013927699999999668, 0.00013902800000000284, 0.00013911099999999732, 0.0001388200000000013, 0.00013931899999999886, 0.00013951400000000377, 0.00013940200000000375, 0.00013929200000000613]</msg>
<status status="PASS" starttime="20201117 14:47:56.767" endtime="20201117 14:47:56.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.763" endtime="20201117 14:47:56.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.772" endtime="20201117 14:47:56.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.775" endtime="20201117 14:47:56.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.774" endtime="20201117 14:47:56.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.770" endtime="20201117 14:47:56.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.396" endtime="20201117 14:47:56.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.394" endtime="20201117 14:47:56.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.393" endtime="20201117 14:47:56.796"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.799" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.806" endtime="20201117 14:47:56.827"></status>
</kw>
<msg timestamp="20201117 14:47:56.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.805" endtime="20201117 14:47:56.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.829" endtime="20201117 14:47:56.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.831" endtime="20201117 14:47:56.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.802" endtime="20201117 14:47:56.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.800" endtime="20201117 14:47:56.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.841" endtime="20201117 14:47:57.126"></status>
</kw>
<msg timestamp="20201117 14:47:57.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024364444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024504847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.839" endtime="20201117 14:47:57.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024364444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024504847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.130" endtime="20201117 14:47:57.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.138" endtime="20201117 14:47:57.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.836" endtime="20201117 14:47:57.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.834" endtime="20201117 14:47:57.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.144" level="INFO">${RESULT} = [{'time': 0.024504847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014040300000000075, 'source_diff': 0.00014040300000000075}, {'time': 0.024663319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:57.141" endtime="20201117 14:47:57.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.159" level="INFO">${ACCURACY} = {'diff': [0.00014040300000000075, 0.00014009699999999875, 0.00013967999999999967, 0.00014031899999999986, 0.00013983299999999893, 0.0001402079999999993, 0.00014040300000000075, 0.0001400140000000008, ...</msg>
<status status="PASS" starttime="20201117 14:47:57.145" endtime="20201117 14:47:57.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.163" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.162" endtime="20201117 14:47:57.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.165" level="INFO">VALUE: [0.00014040300000000075, 0.00014009699999999875, 0.00013967999999999967, 0.00014031899999999986, 0.00013983299999999893, 0.0001402079999999993, 0.00014040300000000075, 0.0001400140000000008, 0.00014036100000000204, 0.00014034700000000247, 0.00014041700000000032, 0.00013966699999999957, 0.00014066700000000057, 0.00014027700000000115, 0.0001398750000000011, 0.00013984800000000144, 0.0001399859999999982, 0.00014041600000000085, 0.00013991699999999982, 0.00014058299999999968, 0.0001398049999999998, 0.00014052800000000087, 0.0001404309999999999, 0.00014036099999999857, 0.00013981899999999936, 0.00014027800000000062, 0.00014041700000000032, 0.00014040299999999728, 0.00014008299999999918, 0.00014023599999999845, 0.00013963900000000043, 0.00014058299999999968, 0.0001398469999999985, 0.00013988900000000068, 0.0001399309999999994, 0.0001398469999999985, 0.000139862000000001, 0.00013969500000000218, 0.0001403050000000003, 0.0001404859999999987, 0.00014041599999999738, 0.00014023599999999845, 0.00014040300000000075, 0.00014040299999999728, 0.0001404019999999978, 0.0001396669999999961, 0.00014002800000000037, 0.00014059699999999925, 0.0001401669999999966, 0.0001399999999999943]</msg>
<status status="PASS" starttime="20201117 14:47:57.164" endtime="20201117 14:47:57.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.160" endtime="20201117 14:47:57.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.168" endtime="20201117 14:47:57.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.172" endtime="20201117 14:47:57.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.170" endtime="20201117 14:47:57.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.167" endtime="20201117 14:47:57.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.799" endtime="20201117 14:47:57.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.797" endtime="20201117 14:47:57.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.797" endtime="20201117 14:47:57.193"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.195" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.203" endtime="20201117 14:47:57.223"></status>
</kw>
<msg timestamp="20201117 14:47:57.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.202" endtime="20201117 14:47:57.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.225" endtime="20201117 14:47:57.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.228" endtime="20201117 14:47:57.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.199" endtime="20201117 14:47:57.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.197" endtime="20201117 14:47:57.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.238" endtime="20201117 14:47:57.523"></status>
</kw>
<msg timestamp="20201117 14:47:57.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023556958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023698736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.236" endtime="20201117 14:47:57.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023556958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023698736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.527" endtime="20201117 14:47:57.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.535" endtime="20201117 14:47:57.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.233" endtime="20201117 14:47:57.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.231" endtime="20201117 14:47:57.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.542" level="INFO">${RESULT} = [{'time': 0.023698736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014177800000000212, 'source_diff': 0.00014177800000000212}, {'time': 0.023867111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:57.539" endtime="20201117 14:47:57.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.555" level="INFO">${ACCURACY} = {'diff': [0.00014177800000000212, 0.00014159700000000025, 0.00014127799999999816, 0.00014159700000000025, 0.00014136199999999904, 0.00014109799999999922, 0.0001410270000000019, 0.00014059799999999872,...</msg>
<status status="PASS" starttime="20201117 14:47:57.543" endtime="20201117 14:47:57.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.560" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.559" endtime="20201117 14:47:57.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.562" level="INFO">VALUE: [0.00014177800000000212, 0.00014159700000000025, 0.00014127799999999816, 0.00014159700000000025, 0.00014136199999999904, 0.00014109799999999922, 0.0001410270000000019, 0.00014059799999999872, 0.00014099999999999877, 0.00014151299999999936, 0.000141347, 0.00014124999999999902, 0.00014091699999999735, 0.00014095800000000006, 0.0001409859999999992, 0.00014163899999999896, 0.00014122199999999988, 0.00014147200000000013, 0.00014072199999999938, 0.00014102800000000137, 0.00014127800000000162, 0.00014140299999999828, 0.00014136099999999957, 0.00014161099999999982, 0.00014075000000000198, 0.00014098600000000266, 0.0001414859999999997, 0.00014136099999999957, 0.00014081900000000036, 0.00014086099999999907, 0.00014159699999999678, 0.0001408469999999995, 0.0001408339999999994, 0.00014147200000000013, 0.00014095800000000006, 0.00014118100000000064, 0.00014097199999999963, 0.00014157000000000058, 0.00014136099999999957, 0.00014105499999999757, 0.00014073599999999895, 0.00014101399999999834, 0.00014090300000000125, 0.0001411530000000015, 0.00014152800000000187, 0.000141347, 0.0001408050000000008, 0.0001408889999999982, 0.00014090299999999778, 0.0001414019999999988]</msg>
<status status="PASS" starttime="20201117 14:47:57.561" endtime="20201117 14:47:57.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.556" endtime="20201117 14:47:57.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.565" endtime="20201117 14:47:57.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.568" endtime="20201117 14:47:57.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.567" endtime="20201117 14:47:57.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.563" endtime="20201117 14:47:57.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.196" endtime="20201117 14:47:57.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.194" endtime="20201117 14:47:57.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.193" endtime="20201117 14:47:57.589"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.592" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.600" endtime="20201117 14:47:57.620"></status>
</kw>
<msg timestamp="20201117 14:47:57.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.598" endtime="20201117 14:47:57.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.622" endtime="20201117 14:47:57.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.624" endtime="20201117 14:47:57.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.596" endtime="20201117 14:47:57.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.594" endtime="20201117 14:47:57.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.633" endtime="20201117 14:47:57.918"></status>
</kw>
<msg timestamp="20201117 14:47:57.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023983861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024125681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.631" endtime="20201117 14:47:57.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023983861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024125681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.922" endtime="20201117 14:47:57.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.930" endtime="20201117 14:47:57.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.629" endtime="20201117 14:47:57.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.627" endtime="20201117 14:47:57.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.936" level="INFO">${RESULT} = [{'time': 0.024125681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014182000000000083, 'source_diff': 0.00014182000000000083}, {'time': 0.024285125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:57.933" endtime="20201117 14:47:57.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.950" level="INFO">${ACCURACY} = {'diff': [0.00014182000000000083, 0.00014227800000000262, 0.00014211100000000032, 0.00014170900000000028, 0.00014254200000000244, 0.00014190300000000225, 0.0001420279999999989, 0.00014177799999999866,...</msg>
<status status="PASS" starttime="20201117 14:47:57.937" endtime="20201117 14:47:57.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.954" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.953" endtime="20201117 14:47:57.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.956" level="INFO">VALUE: [0.00014182000000000083, 0.00014227800000000262, 0.00014211100000000032, 0.00014170900000000028, 0.00014254200000000244, 0.00014190300000000225, 0.0001420279999999989, 0.00014177799999999866, 0.0001425690000000021, 0.00014172299999999985, 0.00014204200000000194, 0.00014197200000000063, 0.00014172200000000038, 0.0001425829999999982, 0.00014255599999999854, 0.00014215299999999903, 0.00014254200000000244, 0.00014191699999999835, 0.000142040999999999, 0.00014195900000000053, 0.00014258400000000115, 0.00014179099999999875, 0.00014259700000000125, 0.00014166599999999863, 0.00014241599999999938, 0.00014258300000000168, 0.00014183300000000093, 0.0001422080000000013, 0.00014180600000000126, 0.00014215299999999903, 0.00014261100000000082, 0.00014188900000000268, 0.00014257000000000158, 0.00014247200000000113, 0.0001417920000000017, 0.0001423059999999983, 0.00014226399999999959, 0.0001425829999999982, 0.0001425279999999994, 0.0001416950000000007, 0.0001422920000000022, 0.0001418340000000004, 0.00014169400000000124, 0.00014170900000000028, 0.00014233299999999796, 0.0001420140000000028, 0.0001419999999999963, 0.0001418470000000005, 0.00014263899999999996, 0.00014222299999999688]</msg>
<status status="PASS" starttime="20201117 14:47:57.955" endtime="20201117 14:47:57.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.950" endtime="20201117 14:47:57.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.959" endtime="20201117 14:47:57.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.963" endtime="20201117 14:47:57.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.961" endtime="20201117 14:47:57.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.958" endtime="20201117 14:47:57.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.592" endtime="20201117 14:47:57.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.590" endtime="20201117 14:47:57.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.590" endtime="20201117 14:47:57.984"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.987" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.995" endtime="20201117 14:47:58.015"></status>
</kw>
<msg timestamp="20201117 14:47:58.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.993" endtime="20201117 14:47:58.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.016" endtime="20201117 14:47:58.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.019" endtime="20201117 14:47:58.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.991" endtime="20201117 14:47:58.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.989" endtime="20201117 14:47:58.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.028" endtime="20201117 14:47:58.313"></status>
</kw>
<msg timestamp="20201117 14:47:58.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023576542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023719653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.026" endtime="20201117 14:47:58.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023576542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023719653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.317" endtime="20201117 14:47:58.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.325" endtime="20201117 14:47:58.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.024" endtime="20201117 14:47:58.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.022" endtime="20201117 14:47:58.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.332" level="INFO">${RESULT} = [{'time': 0.023719653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014311100000000132, 'source_diff': 0.00014311100000000132}, {'time': 0.023876139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:58.328" endtime="20201117 14:47:58.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.345" level="INFO">${ACCURACY} = {'diff': [0.00014311100000000132, 0.00014276400000000009, 0.00014276400000000009, 0.00014282000000000183, 0.00014368099999999967, 0.0001434730000000016, 0.00014337500000000114, 0.00014359700000000225,...</msg>
<status status="PASS" starttime="20201117 14:47:58.333" endtime="20201117 14:47:58.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.349" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.348" endtime="20201117 14:47:58.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.352" level="INFO">VALUE: [0.00014311100000000132, 0.00014276400000000009, 0.00014276400000000009, 0.00014282000000000183, 0.00014368099999999967, 0.0001434730000000016, 0.00014337500000000114, 0.00014359700000000225, 0.00014344399999999952, 0.000143041, 0.00014266599999999963, 0.00014294399999999902, 0.0001429860000000012, 0.00014336100000000157, 0.00014304199999999948, 0.00014358399999999868, 0.00014355599999999955, 0.00014361199999999782, 0.00014362499999999792, 0.00014323600000000145, 0.00014345799999999909, 0.00014337500000000114, 0.0001428059999999988, 0.00014365200000000106, 0.00014279199999999923, 0.00014269400000000224, 0.00014277799999999966, 0.00014350000000000127, 0.00014365300000000053, 0.00014316600000000013, 0.00014315200000000056, 0.00014351400000000084, 0.00014313900000000046, 0.00014341699999999985, 0.00014336100000000157, 0.00014320799999999884, 0.00014292999999999945, 0.00014297200000000163, 0.00014287500000000064, 0.00014322299999999788, 0.00014344400000000299, 0.00014290299999999978, 0.0001432630000000011, 0.00014298599999999773, 0.00014283300000000193, 0.000143138999999997, 0.00014320799999999884, 0.00014320900000000525, 0.00014319399999999927, 0.00014320799999999884]</msg>
<status status="PASS" starttime="20201117 14:47:58.350" endtime="20201117 14:47:58.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.346" endtime="20201117 14:47:58.353"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.355" endtime="20201117 14:47:58.356"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.358" endtime="20201117 14:47:58.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.357" endtime="20201117 14:47:58.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.354" endtime="20201117 14:47:58.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.987" endtime="20201117 14:47:58.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.986" endtime="20201117 14:47:58.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.985" endtime="20201117 14:47:58.380"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.382" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.390" endtime="20201117 14:47:58.411"></status>
</kw>
<msg timestamp="20201117 14:47:58.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.388" endtime="20201117 14:47:58.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.412" endtime="20201117 14:47:58.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.415" endtime="20201117 14:47:58.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.386" endtime="20201117 14:47:58.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.384" endtime="20201117 14:47:58.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.424" endtime="20201117 14:47:58.708"></status>
</kw>
<msg timestamp="20201117 14:47:58.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024360306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024504639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.422" endtime="20201117 14:47:58.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024360306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024504639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.713" endtime="20201117 14:47:58.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.721" endtime="20201117 14:47:58.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.420" endtime="20201117 14:47:58.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.418" endtime="20201117 14:47:58.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.728" level="INFO">${RESULT} = [{'time': 0.024504639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014433299999999996, 'source_diff': 0.00014433299999999996}, {'time': 0.024665153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:58.725" endtime="20201117 14:47:58.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.742" level="INFO">${ACCURACY} = {'diff': [0.00014433299999999996, 0.0001446389999999985, 0.00014448599999999923, 0.00014369399999999977, 0.0001440829999999997, 0.00014374999999999805, 0.00014376299999999814, 0.0001436250000000014, 0...</msg>
<status status="PASS" starttime="20201117 14:47:58.729" endtime="20201117 14:47:58.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.747" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.746" endtime="20201117 14:47:58.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.749" level="INFO">VALUE: [0.00014433299999999996, 0.0001446389999999985, 0.00014448599999999923, 0.00014369399999999977, 0.0001440829999999997, 0.00014374999999999805, 0.00014376299999999814, 0.0001436250000000014, 0.00014425000000000202, 0.0001446389999999985, 0.00014363900000000096, 0.00014379200000000023, 0.0001445410000000015, 0.00014443100000000042, 0.0001438059999999998, 0.00014383299999999946, 0.0001439999999999983, 0.0001436250000000014, 0.0001436670000000001, 0.00014391699999999688, 0.00014369499999999924, 0.00014394500000000296, 0.00014383299999999946, 0.00014430500000000082, 0.00014419400000000027, 0.00014394400000000002, 0.00014390300000000078, 0.00014462499999999892, 0.00014374999999999805, 0.00014459699999999978, 0.00014409699999999928, 0.00014426399999999812, 0.00014376400000000109, 0.00014429200000000073, 0.00014420799999999984, 0.0001439449999999995, 0.0001444999999999988, 0.00014445800000000009, 0.000144138999999998, 0.0001441800000000007, 0.00014427799999999769, 0.00014390300000000078, 0.00014374999999999805, 0.00014407000000000308, 0.00014432000000000333, 0.0001438890000000012, 0.00014423599999999898, 0.00014445800000000009, 0.00014431900000000386, 0.00014409700000000275]</msg>
<status status="PASS" starttime="20201117 14:47:58.748" endtime="20201117 14:47:58.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.743" endtime="20201117 14:47:58.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.753" endtime="20201117 14:47:58.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.756" endtime="20201117 14:47:58.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.754" endtime="20201117 14:47:58.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.751" endtime="20201117 14:47:58.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.382" endtime="20201117 14:47:58.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.381" endtime="20201117 14:47:58.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.380" endtime="20201117 14:47:58.777"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.779" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.787" endtime="20201117 14:47:58.808"></status>
</kw>
<msg timestamp="20201117 14:47:58.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.786" endtime="20201117 14:47:58.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.809" endtime="20201117 14:47:58.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.812" endtime="20201117 14:47:58.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.783" endtime="20201117 14:47:58.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.781" endtime="20201117 14:47:58.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.820" endtime="20201117 14:47:59.106"></status>
</kw>
<msg timestamp="20201117 14:47:59.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023589528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02373525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:58.819" endtime="20201117 14:47:59.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023589528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02373525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:59.111" endtime="20201117 14:47:59.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.119" endtime="20201117 14:47:59.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.816" endtime="20201117 14:47:59.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.815" endtime="20201117 14:47:59.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.126" level="INFO">${RESULT} = [{'time': 0.02373525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001457220000000009, 'source_diff': 0.0001457220000000009}, {'time': 0.023900653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:59.123" endtime="20201117 14:47:59.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.140" level="INFO">${ACCURACY} = {'diff': [0.0001457220000000009, 0.0001451670000000016, 0.00014547200000000066, 0.0001451670000000016, 0.00014511099999999985, 0.00014519400000000127, 0.00014495800000000059, 0.00014529199999999826, 0...</msg>
<status status="PASS" starttime="20201117 14:47:59.127" endtime="20201117 14:47:59.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.144" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.143" endtime="20201117 14:47:59.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.146" level="INFO">VALUE: [0.0001457220000000009, 0.0001451670000000016, 0.00014547200000000066, 0.0001451670000000016, 0.00014511099999999985, 0.00014519400000000127, 0.00014495800000000059, 0.00014529199999999826, 0.00014501399999999887, 0.00014498599999999973, 0.0001450280000000019, 0.00014527799999999869, 0.00014480500000000132, 0.0001452220000000004, 0.00014490300000000178, 0.00014476400000000209, 0.00014498599999999973, 0.0001455830000000012, 0.00014502699999999896, 0.0001455549999999986, 0.00014520800000000084, 0.00014541699999999838, 0.0001453610000000001, 0.00014556999999999765, 0.00014551400000000284, 0.00014480500000000132, 0.00014547200000000066, 0.00014465300000000153, 0.00014534700000000053, 0.00014474999999999905, 0.00014551399999999937, 0.00014519500000000074, 0.00014483300000000046, 0.00014515299999999856, 0.0001450969999999968, 0.00014520799999999737, 0.00014501300000000286, 0.00014551399999999937, 0.00014529099999999878, 0.00014488899999999874, 0.00014551399999999937, 0.00014494400000000102, 0.00014490300000000178, 0.0001455830000000012, 0.00014490300000000178, 0.00014520800000000084, 0.00014495900000000006, 0.00014541700000000185, 0.00014484800000000297, 0.00014512499999999595]</msg>
<status status="PASS" starttime="20201117 14:47:59.145" endtime="20201117 14:47:59.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.141" endtime="20201117 14:47:59.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.149" endtime="20201117 14:47:59.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.153" endtime="20201117 14:47:59.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.151" endtime="20201117 14:47:59.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.148" endtime="20201117 14:47:59.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.780" endtime="20201117 14:47:59.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.778" endtime="20201117 14:47:59.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.777" endtime="20201117 14:47:59.174"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.176" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.184" endtime="20201117 14:47:59.205"></status>
</kw>
<msg timestamp="20201117 14:47:59.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.183" endtime="20201117 14:47:59.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.206" endtime="20201117 14:47:59.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.209" endtime="20201117 14:47:59.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.180" endtime="20201117 14:47:59.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.178" endtime="20201117 14:47:59.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.217" endtime="20201117 14:47:59.502"></status>
</kw>
<msg timestamp="20201117 14:47:59.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023730222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023876, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:59.216" endtime="20201117 14:47:59.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023730222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023876, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:59.506" endtime="20201117 14:47:59.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.516" endtime="20201117 14:47:59.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.213" endtime="20201117 14:47:59.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.212" endtime="20201117 14:47:59.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.522" level="INFO">${RESULT} = [{'time': 0.023876, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014577800000000266, 'source_diff': 0.00014577800000000266}, {'time': 0.024043528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:59.519" endtime="20201117 14:47:59.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.535" level="INFO">${ACCURACY} = {'diff': [0.00014577800000000266, 0.0001460280000000029, 0.00014634700000000153, 0.00014629199999999926, 0.00014597200000000116, 0.00014659800000000126, 0.00014651400000000037, 0.00014656900000000264,...</msg>
<status status="PASS" starttime="20201117 14:47:59.523" endtime="20201117 14:47:59.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.540" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.539" endtime="20201117 14:47:59.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.542" level="INFO">VALUE: [0.00014577800000000266, 0.0001460280000000029, 0.00014634700000000153, 0.00014629199999999926, 0.00014597200000000116, 0.00014659800000000126, 0.00014651400000000037, 0.00014656900000000264, 0.00014626400000000012, 0.000146348000000001, 0.00014620799999999837, 0.00014656899999999917, 0.000146139, 0.00014625000000000055, 0.00014616599999999966, 0.0001458190000000019, 0.00014598600000000073, 0.00014569499999999777, 0.00014609800000000076, 0.00014601399999999987, 0.00014573700000000342, 0.00014609700000000128, 0.00014608400000000119, 0.00014622300000000088, 0.0001457769999999997, 0.0001458610000000006, 0.00014580499999999885, 0.00014651400000000037, 0.00014651400000000037, 0.00014570800000000134, 0.0001463329999999985, 0.00014606899999999867, 0.00014649999999999733, 0.0001465000000000008, 0.0001462770000000002, 0.00014641699999999938, 0.0001459580000000016, 0.00014620799999999837, 0.00014597200000000116, 0.00014626400000000012, 0.0001466390000000005, 0.00014652799999999994, 0.00014651400000000037, 0.00014655600000000255, 0.0001463890000000037, 0.00014616699999999566, 0.0001458749999999967, 0.00014625000000000055, 0.00014627799999999969, 0.00014627799999999969]</msg>
<status status="PASS" starttime="20201117 14:47:59.541" endtime="20201117 14:47:59.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.536" endtime="20201117 14:47:59.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.545" endtime="20201117 14:47:59.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.549" endtime="20201117 14:47:59.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.547" endtime="20201117 14:47:59.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.544" endtime="20201117 14:47:59.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.177" endtime="20201117 14:47:59.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.175" endtime="20201117 14:47:59.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.174" endtime="20201117 14:47:59.570"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.572" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.580" endtime="20201117 14:47:59.600"></status>
</kw>
<msg timestamp="20201117 14:47:59.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.579" endtime="20201117 14:47:59.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.602" endtime="20201117 14:47:59.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.604" endtime="20201117 14:47:59.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.576" endtime="20201117 14:47:59.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.574" endtime="20201117 14:47:59.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.614" endtime="20201117 14:47:59.899"></status>
</kw>
<msg timestamp="20201117 14:47:59.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023664458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023811417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.612" endtime="20201117 14:47:59.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023664458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023811417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.903" endtime="20201117 14:47:59.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.912" endtime="20201117 14:47:59.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.609" endtime="20201117 14:47:59.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.608" endtime="20201117 14:47:59.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.919" level="INFO">${RESULT} = [{'time': 0.023811417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014695900000000206, 'source_diff': 0.00014695900000000206}, {'time': 0.023989736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:59.916" endtime="20201117 14:47:59.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.932" level="INFO">${ACCURACY} = {'diff': [0.00014695900000000206, 0.00014691699999999988, 0.00014758400000000269, 0.0001470969999999988, 0.00014761200000000183, 0.00014759799999999879, 0.00014708399999999872, 0.00014754100000000103,...</msg>
<status status="PASS" starttime="20201117 14:47:59.920" endtime="20201117 14:47:59.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.936" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.935" endtime="20201117 14:47:59.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.939" level="INFO">VALUE: [0.00014695900000000206, 0.00014691699999999988, 0.00014758400000000269, 0.0001470969999999988, 0.00014761200000000183, 0.00014759799999999879, 0.00014708399999999872, 0.00014754100000000103, 0.00014676399999999715, 0.0001474030000000008, 0.0001467220000000019, 0.00014705599999999958, 0.0001470139999999974, 0.00014683399999999847, 0.00014715300000000056, 0.0001470830000000027, 0.0001472229999999984, 0.00014702700000000096, 0.00014709700000000228, 0.0001474719999999992, 0.00014687500000000117, 0.00014670800000000234, 0.00014661099999999788, 0.00014731899999999992, 0.00014756999999999965, 0.00014731899999999992, 0.00014702800000000044, 0.00014720899999999884, 0.00014759799999999879, 0.00014736099999999863, 0.0001470969999999988, 0.00014675000000000105, 0.00014756999999999965, 0.0001474030000000008, 0.000147042, 0.00014670899999999834, 0.00014670899999999834, 0.0001466390000000005, 0.00014676400000000062, 0.00014675000000000105, 0.00014702800000000044, 0.0001473199999999994, 0.00014686099999999813, 0.0001469030000000003, 0.00014683300000000246, 0.00014738899999999777, 0.00014758299999999974, 0.00014663899999999702, 0.00014676400000000062, 0.00014731899999999992]</msg>
<status status="PASS" starttime="20201117 14:47:59.938" endtime="20201117 14:47:59.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.933" endtime="20201117 14:47:59.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.942" endtime="20201117 14:47:59.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.945" endtime="20201117 14:47:59.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.944" endtime="20201117 14:47:59.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.940" endtime="20201117 14:47:59.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.573" endtime="20201117 14:47:59.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.571" endtime="20201117 14:47:59.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.570" endtime="20201117 14:47:59.966"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.969" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.976" endtime="20201117 14:47:59.998"></status>
</kw>
<msg timestamp="20201117 14:47:59.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.975" endtime="20201117 14:47:59.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.999" endtime="20201117 14:48:00.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.002" endtime="20201117 14:48:00.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.972" endtime="20201117 14:48:00.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.970" endtime="20201117 14:48:00.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.011" endtime="20201117 14:48:00.296"></status>
</kw>
<msg timestamp="20201117 14:48:00.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024397194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024545583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.010" endtime="20201117 14:48:00.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024397194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024545583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.300" endtime="20201117 14:48:00.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.308" endtime="20201117 14:48:00.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.007" endtime="20201117 14:48:00.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.005" endtime="20201117 14:48:00.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.316" level="INFO">${RESULT} = [{'time': 0.024545583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014838899999999877, 'source_diff': 0.00014838899999999877}, {'time': 0.024720069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:00.313" endtime="20201117 14:48:00.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.330" level="INFO">${ACCURACY} = {'diff': [0.00014838899999999877, 0.00014863799999999955, 0.00014824999999999908, 0.00014775000000000205, 0.00014848599999999976, 0.00014784699999999956, 0.00014847299999999966, 0.00014822199999999994...</msg>
<status status="PASS" starttime="20201117 14:48:00.317" endtime="20201117 14:48:00.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.335" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.334" endtime="20201117 14:48:00.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.337" level="INFO">VALUE: [0.00014838899999999877, 0.00014863799999999955, 0.00014824999999999908, 0.00014775000000000205, 0.00014848599999999976, 0.00014784699999999956, 0.00014847299999999966, 0.00014822199999999994, 0.0001485970000000003, 0.00014783399999999947, 0.00014772199999999944, 0.00014852700000000246, 0.00014791599999999794, 0.00014840299999999834, 0.00014827800000000169, 0.00014831900000000092, 0.00014776399999999815, 0.00014769499999999977, 0.00014820899999999984, 0.00014818000000000123, 0.00014795799999999665, 0.00014827799999999822, 0.000148042000000001, 0.0001479030000000013, 0.00014786200000000208, 0.00014783399999999947, 0.0001480269999999985, 0.00014822199999999994, 0.00014797299999999916, 0.00014811099999999938, 0.00014776399999999815, 0.0001481529999999981, 0.0001480689999999972, 0.00014797299999999916, 0.00014837500000000267, 0.00014840299999999834, 0.00014818000000000123, 0.00014845800000000062, 0.00014826399999999865, 0.0001480139999999984, 0.00014776400000000162, 0.00014827800000000169, 0.0001486529999999986, 0.00014807000000000015, 0.00014784699999999956, 0.0001478749999999987, 0.00014769399999999683, 0.00014769399999999683, 0.0001485970000000003, 0.0001480969999999998]</msg>
<status status="PASS" starttime="20201117 14:48:00.336" endtime="20201117 14:48:00.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.331" endtime="20201117 14:48:00.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.340" endtime="20201117 14:48:00.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.343" endtime="20201117 14:48:00.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.342" endtime="20201117 14:48:00.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.338" endtime="20201117 14:48:00.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.969" endtime="20201117 14:48:00.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.967" endtime="20201117 14:48:00.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.967" endtime="20201117 14:48:00.364"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.367" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.375" endtime="20201117 14:48:00.396"></status>
</kw>
<msg timestamp="20201117 14:48:00.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.374" endtime="20201117 14:48:00.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.397" endtime="20201117 14:48:00.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.400" endtime="20201117 14:48:00.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.371" endtime="20201117 14:48:00.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.369" endtime="20201117 14:48:00.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.408" endtime="20201117 14:48:00.694"></status>
</kw>
<msg timestamp="20201117 14:48:00.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024017764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024167028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.407" endtime="20201117 14:48:00.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024017764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024167028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.699" endtime="20201117 14:48:00.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.707" endtime="20201117 14:48:00.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.404" endtime="20201117 14:48:00.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.403" endtime="20201117 14:48:00.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.714" level="INFO">${RESULT} = [{'time': 0.024167028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014926399999999965, 'source_diff': 0.00014926399999999965}, {'time': 0.024343472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:00.710" endtime="20201117 14:48:00.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.727" level="INFO">${ACCURACY} = {'diff': [0.00014926399999999965, 0.00014904100000000253, 0.00014940299999999934, 0.00014958299999999827, 0.00014899999999999983, 0.00014894399999999808, 0.00014925000000000008, 0.0001488879999999998,...</msg>
<status status="PASS" starttime="20201117 14:48:00.715" endtime="20201117 14:48:00.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.732" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.731" endtime="20201117 14:48:00.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.734" level="INFO">VALUE: [0.00014926399999999965, 0.00014904100000000253, 0.00014940299999999934, 0.00014958299999999827, 0.00014899999999999983, 0.00014894399999999808, 0.00014925000000000008, 0.0001488879999999998, 0.00014856900000000117, 0.00014908400000000072, 0.0001495139999999999, 0.00014913899999999952, 0.00014927799999999922, 0.0001488749999999997, 0.00014894399999999808, 0.00014905600000000158, 0.00014930499999999888, 0.00014884800000000004, 0.00014926399999999965, 0.000148736, 0.00014866699999999816, 0.00014899999999999983, 0.0001486940000000013, 0.00014938899999999977, 0.00014863899999999902, 0.00014895799999999765, 0.0001493330000000015, 0.00014908300000000124, 0.00014906999999999768, 0.00014913899999999952, 0.00014931899999999845, 0.00014931899999999845, 0.00014880600000000133, 0.00014868099999999773, 0.0001491940000000018, 0.00014955600000000208, 0.00014888899999999927, 0.00014920800000000137, 0.00014931899999999845, 0.00014881900000000142, 0.00014958400000000122, 0.00014944400000000205, 0.00014912500000000342, 0.00014873600000000348, 0.00014965200000000012, 0.00014943099999999848, 0.0001493059999999949, 0.00014863899999999902, 0.0001487220000000039, 0.0001495000000000038]</msg>
<status status="PASS" starttime="20201117 14:48:00.733" endtime="20201117 14:48:00.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.728" endtime="20201117 14:48:00.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.737" endtime="20201117 14:48:00.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.741" endtime="20201117 14:48:00.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.739" endtime="20201117 14:48:00.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.736" endtime="20201117 14:48:00.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.367" endtime="20201117 14:48:00.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.366" endtime="20201117 14:48:00.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.365" endtime="20201117 14:48:00.762"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.764" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.772" endtime="20201117 14:48:00.793"></status>
</kw>
<msg timestamp="20201117 14:48:00.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.771" endtime="20201117 14:48:00.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.794" endtime="20201117 14:48:00.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.797" endtime="20201117 14:48:00.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.768" endtime="20201117 14:48:00.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.766" endtime="20201117 14:48:00.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.806" endtime="20201117 14:48:01.091"></status>
</kw>
<msg timestamp="20201117 14:48:01.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237475, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:00.804" endtime="20201117 14:48:01.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237475, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:01.095" endtime="20201117 14:48:01.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.103" endtime="20201117 14:48:01.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.802" endtime="20201117 14:48:01.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.800" endtime="20201117 14:48:01.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.110" level="INFO">${RESULT} = [{'time': 0.0237475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015068099999999973, 'source_diff': 0.00015068099999999973}, {'time': 0.023927944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:01.107" endtime="20201117 14:48:01.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.124" level="INFO">${ACCURACY} = {'diff': [0.00015068099999999973, 0.00014995799999999865, 0.00015055500000000013, 0.0001498200000000019, 0.00014962500000000045, 0.0001501530000000001, 0.00014958400000000122, 0.00015020800000000237, ...</msg>
<status status="PASS" starttime="20201117 14:48:01.112" endtime="20201117 14:48:01.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.128" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.128" endtime="20201117 14:48:01.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.131" level="INFO">VALUE: [0.00015068099999999973, 0.00014995799999999865, 0.00015055500000000013, 0.0001498200000000019, 0.00014962500000000045, 0.0001501530000000001, 0.00014958400000000122, 0.00015020800000000237, 0.0001501949999999988, 0.00014979200000000276, 0.0001497629999999972, 0.0001501530000000001, 0.000150527000000001, 0.00015002799999999997, 0.00015063899999999755, 0.00015044500000000252, 0.00015044399999999958, 0.0001500140000000004, 0.00015030599999999936, 0.00015020800000000237, 0.0001502360000000015, 0.0001505689999999997, 0.00014981899999999895, 0.00015030599999999936, 0.00015043, 0.00015030599999999936, 0.00015045899999999862, 0.00014976400000000015, 0.00015058300000000274, 0.00015019500000000227, 0.0001500140000000004, 0.0001498750000000007, 0.00014975000000000058, 0.00015027800000000022, 0.00015034700000000206, 0.00014972200000000144, 0.0001499169999999994, 0.0001498750000000007, 0.00014994400000000255, 0.0001505140000000009, 0.00015055500000000013, 0.00015030599999999936, 0.0001504169999999999, 0.00015051399999999743, 0.00015026399999999718, 0.00014993099999999898, 0.00015026399999999718, 0.00015051400000000437, 0.0001497499999999971, 0.00015027800000000369]</msg>
<status status="PASS" starttime="20201117 14:48:01.130" endtime="20201117 14:48:01.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.125" endtime="20201117 14:48:01.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.134" endtime="20201117 14:48:01.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.138" endtime="20201117 14:48:01.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.136" endtime="20201117 14:48:01.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.133" endtime="20201117 14:48:01.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.765" endtime="20201117 14:48:01.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.763" endtime="20201117 14:48:01.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.762" endtime="20201117 14:48:01.159"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.161" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.169" endtime="20201117 14:48:01.190"></status>
</kw>
<msg timestamp="20201117 14:48:01.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.168" endtime="20201117 14:48:01.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.191" endtime="20201117 14:48:01.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.194" endtime="20201117 14:48:01.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.165" endtime="20201117 14:48:01.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.163" endtime="20201117 14:48:01.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.202" endtime="20201117 14:48:01.490"></status>
</kw>
<msg timestamp="20201117 14:48:01.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02346525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023616167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:01.201" endtime="20201117 14:48:01.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02346525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023616167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:01.494" endtime="20201117 14:48:01.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.502" endtime="20201117 14:48:01.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.198" endtime="20201117 14:48:01.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.197" endtime="20201117 14:48:01.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.508" level="INFO">${RESULT} = [{'time': 0.023616167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001509170000000004, 'source_diff': 0.0001509170000000004}, {'time': 0.023799625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:01.505" endtime="20201117 14:48:01.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.522" level="INFO">${ACCURACY} = {'diff': [0.0001509170000000004, 0.0001510690000000002, 0.0001510560000000001, 0.00015127800000000122, 0.00015070800000000287, 0.00015100000000000183, 0.00015070899999999887, 0.00015143100000000048, 0...</msg>
<status status="PASS" starttime="20201117 14:48:01.509" endtime="20201117 14:48:01.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.526" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.525" endtime="20201117 14:48:01.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.529" level="INFO">VALUE: [0.0001509170000000004, 0.0001510690000000002, 0.0001510560000000001, 0.00015127800000000122, 0.00015070800000000287, 0.00015100000000000183, 0.00015070899999999887, 0.00015143100000000048, 0.00015063900000000102, 0.00015102800000000097, 0.00015162500000000245, 0.00015133300000000002, 0.00015127800000000122, 0.00015086099999999866, 0.00015163900000000202, 0.00015099999999999836, 0.00015122199999999947, 0.00015137499999999873, 0.00015131900000000045, 0.00015066599999999722, 0.00015108299999999977, 0.00015091599999999747, 0.00015131900000000045, 0.00015076399999999768, 0.00015087499999999823, 0.00015106999999999968, 0.00015076400000000115, 0.00015159799999999932, 0.00015151299999999895, 0.0001510140000000014, 0.00015068000000000026, 0.00015123700000000198, 0.00015101399999999793, 0.0001509859999999988, 0.0001513889999999983, 0.0001514859999999993, 0.0001512079999999999, 0.00015149999999999886, 0.00015137499999999873, 0.0001510560000000001, 0.000150833999999999, 0.00015111100000000238, 0.00015119400000000033, 0.00015166700000000116, 0.00015151300000000242, 0.0001512780000000047, 0.00015130499999999741, 0.00015084700000000256, 0.0001507499999999981, 0.00015068099999999973]</msg>
<status status="PASS" starttime="20201117 14:48:01.527" endtime="20201117 14:48:01.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.522" endtime="20201117 14:48:01.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.532" endtime="20201117 14:48:01.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.535" endtime="20201117 14:48:01.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.534" endtime="20201117 14:48:01.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.530" endtime="20201117 14:48:01.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.162" endtime="20201117 14:48:01.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.160" endtime="20201117 14:48:01.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.159" endtime="20201117 14:48:01.557"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.559" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.567" endtime="20201117 14:48:01.588"></status>
</kw>
<msg timestamp="20201117 14:48:01.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.565" endtime="20201117 14:48:01.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.590" endtime="20201117 14:48:01.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.592" endtime="20201117 14:48:01.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.563" endtime="20201117 14:48:01.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.561" endtime="20201117 14:48:01.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.601" endtime="20201117 14:48:01.887"></status>
</kw>
<msg timestamp="20201117 14:48:01.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024462111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024614542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.600" endtime="20201117 14:48:01.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024462111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024614542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.891" endtime="20201117 14:48:01.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.899" endtime="20201117 14:48:01.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.597" endtime="20201117 14:48:01.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.596" endtime="20201117 14:48:01.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.905" level="INFO">${RESULT} = [{'time': 0.024614542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000152430999999998, 'source_diff': 0.000152430999999998}, {'time': 0.024786972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:01.902" endtime="20201117 14:48:01.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.926" level="INFO">${ACCURACY} = {'diff': [0.000152430999999998, 0.0001521530000000021, 0.00015191600000000194, 0.00015204199999999807, 0.00015198699999999926, 0.00015201399999999893, 0.00015187499999999923, 0.00015200000000000283, 0...</msg>
<status status="PASS" starttime="20201117 14:48:01.912" endtime="20201117 14:48:01.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.930" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.929" endtime="20201117 14:48:01.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.933" level="INFO">VALUE: [0.000152430999999998, 0.0001521530000000021, 0.00015191600000000194, 0.00015204199999999807, 0.00015198699999999926, 0.00015201399999999893, 0.00015187499999999923, 0.00015200000000000283, 0.00015245800000000115, 0.00015181899999999748, 0.00015249999999999986, 0.0001519300000000015, 0.00015220900000000037, 0.00015226399999999918, 0.00015204200000000154, 0.0001525409999999991, 0.00015204200000000154, 0.0001519859999999998, 0.00015251399999999943, 0.0001522629999999997, 0.00015172199999999997, 0.00015205499999999816, 0.00015248700000000323, 0.0001525409999999991, 0.00015195900000000012, 0.00015205599999999764, 0.0001524860000000003, 0.00015229199999999832, 0.00015187499999999923, 0.00015158399999999975, 0.00015227799999999875, 0.00015212499999999948, 0.0001526110000000004, 0.00015245800000000115, 0.00015168100000000073, 0.00015212500000000295, 0.00015172199999999997, 0.0001521109999999999, 0.00015227799999999875, 0.00015201399999999893, 0.00015188899999999533, 0.0001519859999999998, 0.00015213900000000252, 0.00015184700000000356, 0.00015199999999999936, 0.00015180499999999791, 0.0001521939999999944, 0.00015219400000000133, 0.00015184700000000356, 0.00015226400000000612]</msg>
<status status="PASS" starttime="20201117 14:48:01.931" endtime="20201117 14:48:01.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.927" endtime="20201117 14:48:01.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.936" endtime="20201117 14:48:01.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.939" endtime="20201117 14:48:01.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.938" endtime="20201117 14:48:01.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.934" endtime="20201117 14:48:01.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.559" endtime="20201117 14:48:01.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.558" endtime="20201117 14:48:01.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.557" endtime="20201117 14:48:01.963"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.968" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.985" endtime="20201117 14:48:02.008"></status>
</kw>
<msg timestamp="20201117 14:48:02.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.981" endtime="20201117 14:48:02.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.011" endtime="20201117 14:48:02.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.017" endtime="20201117 14:48:02.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.976" endtime="20201117 14:48:02.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.972" endtime="20201117 14:48:02.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.035" endtime="20201117 14:48:02.326"></status>
</kw>
<msg timestamp="20201117 14:48:02.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03916225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039315042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:02.032" endtime="20201117 14:48:02.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03916225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039315042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:02.330" endtime="20201117 14:48:02.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.338" endtime="20201117 14:48:02.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.027" endtime="20201117 14:48:02.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.023" endtime="20201117 14:48:02.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.345" level="INFO">${RESULT} = [{'time': 0.039315042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015279199999999882, 'source_diff': 0.00015279199999999882}, {'time': 0.039500417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:02.342" endtime="20201117 14:48:02.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.358" level="INFO">${ACCURACY} = {'diff': [0.00015279199999999882, 0.0001529860000000008, 0.00015273600000000054, 0.00015361099999999794, 0.0001527500000000001, 0.00015299999999999342, 0.00015294500000000155, 0.00015283400000000447, ...</msg>
<status status="PASS" starttime="20201117 14:48:02.346" endtime="20201117 14:48:02.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.362" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.362" endtime="20201117 14:48:02.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.365" level="INFO">VALUE: [0.00015279199999999882, 0.0001529860000000008, 0.00015273600000000054, 0.00015361099999999794, 0.0001527500000000001, 0.00015299999999999342, 0.00015294500000000155, 0.00015283400000000447, 0.0001529579999999947, 0.0001530279999999995, 0.00015361099999999794, 0.00015301300000000045, 0.000153124999999997, 0.00015345900000000162, 0.00015344400000000258, 0.0001532370000000005, 0.00015306899999999873, 0.00015340300000000334, 0.00015283299999999805, 0.00015313899999999658, 0.00015263900000000302, 0.00015281900000000542, 0.00015343100000000248, 0.0001535699999999987, 0.00015298700000000026, 0.0001528750000000037, 0.0001534730000000012, 0.00015286100000000413, 0.0001531950000000018, 0.00015288900000000327, 0.0001531950000000018, 0.0001534449999999951, 0.00015305599999999864, 0.0001530279999999995, 0.00015305599999999864, 0.00015330600000000583, 0.00015363900000000402, 0.0001532080000000019, 0.000153124999999997, 0.00015263900000000302, 0.000153124999999997, 0.00015261099999999694, 0.00015320900000000137, 0.0001532630000000007, 0.0001530699999999982, 0.00015326400000000018, 0.00015323600000000104, 0.00015280499999999891, 0.00015363900000000402, 0.0001530279999999995]</msg>
<status status="PASS" starttime="20201117 14:48:02.364" endtime="20201117 14:48:02.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.359" endtime="20201117 14:48:02.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.368" endtime="20201117 14:48:02.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.371" endtime="20201117 14:48:02.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.370" endtime="20201117 14:48:02.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.366" endtime="20201117 14:48:02.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.969" endtime="20201117 14:48:02.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.966" endtime="20201117 14:48:02.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.964" endtime="20201117 14:48:02.392"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.395" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.402" endtime="20201117 14:48:02.423"></status>
</kw>
<msg timestamp="20201117 14:48:02.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.401" endtime="20201117 14:48:02.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.425" endtime="20201117 14:48:02.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.427" endtime="20201117 14:48:02.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.398" endtime="20201117 14:48:02.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.397" endtime="20201117 14:48:02.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.437" endtime="20201117 14:48:02.721"></status>
</kw>
<msg timestamp="20201117 14:48:02.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023576514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023731069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.435" endtime="20201117 14:48:02.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023576514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023731069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.725" endtime="20201117 14:48:02.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.733" endtime="20201117 14:48:02.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.432" endtime="20201117 14:48:02.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.430" endtime="20201117 14:48:02.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.740" level="INFO">${RESULT} = [{'time': 0.023731069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015455500000000066, 'source_diff': 0.00015455500000000066}, {'time': 0.023908583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:02.737" endtime="20201117 14:48:02.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.753" level="INFO">${ACCURACY} = {'diff': [0.00015455500000000066, 0.00015445799999999968, 0.00015431899999999998, 0.00015412500000000148, 0.00015432000000000293, 0.00015413900000000105, 0.00015429200000000032, 0.00015393000000000004...</msg>
<status status="PASS" starttime="20201117 14:48:02.741" endtime="20201117 14:48:02.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.757" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.756" endtime="20201117 14:48:02.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.760" level="INFO">VALUE: [0.00015455500000000066, 0.00015445799999999968, 0.00015431899999999998, 0.00015412500000000148, 0.00015432000000000293, 0.00015413900000000105, 0.00015429200000000032, 0.00015393000000000004, 0.0001544020000000014, 0.000154431, 0.00015400000000000136, 0.0001539439999999996, 0.00015443000000000054, 0.00015386200000000114, 0.00015437499999999826, 0.0001544440000000001, 0.00015454200000000057, 0.0001537219999999985, 0.00015398599999999832, 0.00015387500000000123, 0.00015412500000000148, 0.00015419499999999933, 0.00015412500000000148, 0.0001536669999999997, 0.0001543609999999987, 0.00015444399999999664, 0.0001543890000000013, 0.00015379199999999982, 0.0001541670000000002, 0.00015433299999999955, 0.00015443000000000054, 0.00015450000000000186, 0.0001538059999999994, 0.00015443000000000054, 0.0001539029999999969, 0.00015400000000000136, 0.00015402699999999755, 0.000154431, 0.000154431, 0.0001545829999999998, 0.0001543890000000013, 0.0001539999999999979, 0.00015400000000000136, 0.0001535690000000027, 0.00015372200000000197, 0.00015438899999999783, 0.00015400000000000136, 0.00015380499999999991, 0.00015365299999999665, 0.00015461099999999894]</msg>
<status status="PASS" starttime="20201117 14:48:02.759" endtime="20201117 14:48:02.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.754" endtime="20201117 14:48:02.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.763" endtime="20201117 14:48:02.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.766" endtime="20201117 14:48:02.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.765" endtime="20201117 14:48:02.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.761" endtime="20201117 14:48:02.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.395" endtime="20201117 14:48:02.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.393" endtime="20201117 14:48:02.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.393" endtime="20201117 14:48:02.787"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.790" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.798" endtime="20201117 14:48:02.818"></status>
</kw>
<msg timestamp="20201117 14:48:02.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.796" endtime="20201117 14:48:02.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.820" endtime="20201117 14:48:02.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.823" endtime="20201117 14:48:02.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.794" endtime="20201117 14:48:02.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.792" endtime="20201117 14:48:02.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.832" endtime="20201117 14:48:03.116"></status>
</kw>
<msg timestamp="20201117 14:48:03.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023506889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023661889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.830" endtime="20201117 14:48:03.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023506889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023661889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.120" endtime="20201117 14:48:03.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.128" endtime="20201117 14:48:03.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.828" endtime="20201117 14:48:03.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.826" endtime="20201117 14:48:03.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.135" level="INFO">${RESULT} = [{'time': 0.023661889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001549999999999989, 'source_diff': 0.0001549999999999989}, {'time': 0.023839222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:03.132" endtime="20201117 14:48:03.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.148" level="INFO">${ACCURACY} = {'diff': [0.0001549999999999989, 0.00015461099999999894, 0.00015541699999999797, 0.00015554200000000157, 0.00015473599999999907, 0.00015551399999999896, 0.0001550419999999976, 0.00015529099999999837, ...</msg>
<status status="PASS" starttime="20201117 14:48:03.136" endtime="20201117 14:48:03.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.152" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.151" endtime="20201117 14:48:03.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.155" level="INFO">VALUE: [0.0001549999999999989, 0.00015461099999999894, 0.00015541699999999797, 0.00015554200000000157, 0.00015473599999999907, 0.00015551399999999896, 0.0001550419999999976, 0.00015529099999999837, 0.00015533400000000003, 0.0001549310000000005, 0.00015472200000000297, 0.0001547639999999982, 0.00015537499999999926, 0.0001545829999999998, 0.00015537499999999926, 0.00015538899999999883, 0.00015504200000000107, 0.000155222, 0.0001554999999999994, 0.0001548060000000004, 0.0001549869999999988, 0.00015541700000000144, 0.0001553609999999997, 0.00015533300000000055, 0.00015519400000000086, 0.00015497200000000322, 0.00015480599999999692, 0.0001549730000000027, 0.00015486200000000214, 0.00015483300000000005, 0.0001554999999999994, 0.00015520800000000043, 0.00015494399999999714, 0.0001550830000000003, 0.00015524999999999914, 0.0001551939999999974, 0.0001549999999999989, 0.00015512499999999901, 0.00015480499999999744, 0.00015474999999999864, 0.00015487500000000223, 0.00015476400000000168, 0.00015537499999999926, 0.0001550419999999976, 0.00015543100000000448, 0.00015554199999999463, 0.0001551939999999974, 0.00015483399999999953, 0.00015499999999999542, 0.00015511100000000638]</msg>
<status status="PASS" starttime="20201117 14:48:03.154" endtime="20201117 14:48:03.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.149" endtime="20201117 14:48:03.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.158" endtime="20201117 14:48:03.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.161" endtime="20201117 14:48:03.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.160" endtime="20201117 14:48:03.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.156" endtime="20201117 14:48:03.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.790" endtime="20201117 14:48:03.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.788" endtime="20201117 14:48:03.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.788" endtime="20201117 14:48:03.182"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.185" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.193" endtime="20201117 14:48:03.215"></status>
</kw>
<msg timestamp="20201117 14:48:03.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.192" endtime="20201117 14:48:03.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.216" endtime="20201117 14:48:03.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.219" endtime="20201117 14:48:03.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.189" endtime="20201117 14:48:03.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.187" endtime="20201117 14:48:03.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.227" endtime="20201117 14:48:03.513"></status>
</kw>
<msg timestamp="20201117 14:48:03.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025048556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025205139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.226" endtime="20201117 14:48:03.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025048556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025205139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.517" endtime="20201117 14:48:03.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.525" endtime="20201117 14:48:03.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.223" endtime="20201117 14:48:03.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.222" endtime="20201117 14:48:03.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.531" level="INFO">${RESULT} = [{'time': 0.025205139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001565830000000018, 'source_diff': 0.0001565830000000018}, {'time': 0.025376722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:03.528" endtime="20201117 14:48:03.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.546" level="INFO">${ACCURACY} = {'diff': [0.0001565830000000018, 0.00015601399999999946, 0.0001556809999999978, 0.0001561809999999983, 0.00015651399999999996, 0.0001557639999999992, 0.00015648699999999682, 0.000155528000000002, 0.00...</msg>
<status status="PASS" starttime="20201117 14:48:03.532" endtime="20201117 14:48:03.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.550" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.549" endtime="20201117 14:48:03.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.553" level="INFO">VALUE: [0.0001565830000000018, 0.00015601399999999946, 0.0001556809999999978, 0.0001561809999999983, 0.00015651399999999996, 0.0001557639999999992, 0.00015648699999999682, 0.000155528000000002, 0.00015633300000000155, 0.00015611100000000044, 0.0001562639999999997, 0.00015572299999999997, 0.00015611100000000044, 0.00015568100000000126, 0.00015574999999999964, 0.00015562499999999951, 0.0001558610000000002, 0.0001556809999999978, 0.00015595900000000065, 0.00015609700000000087, 0.00015615299999999915, 0.00015629199999999885, 0.00015615299999999915, 0.00015609700000000087, 0.00015598600000000032, 0.0001556670000000017, 0.0001557220000000005, 0.00015579100000000234, 0.00015573600000000007, 0.00015609700000000087, 0.0001560839999999973, 0.00015633400000000103, 0.00015659700000000137, 0.00015629200000000232, 0.0001564029999999994, 0.0001555700000000007, 0.00015641699999999897, 0.00015617999999999882, 0.000155915999999999, 0.0001562500000000036, 0.00015647199999999778, 0.0001555689999999943, 0.00015565199999999918, 0.0001556809999999978, 0.00015617999999999882, 0.00015554200000000157, 0.00015623600000000404, 0.00015609700000000087, 0.0001564159999999995, 0.0001556939999999979]</msg>
<status status="PASS" starttime="20201117 14:48:03.551" endtime="20201117 14:48:03.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.547" endtime="20201117 14:48:03.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.556" endtime="20201117 14:48:03.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.559" endtime="20201117 14:48:03.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.557" endtime="20201117 14:48:03.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.554" endtime="20201117 14:48:03.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.185" endtime="20201117 14:48:03.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.183" endtime="20201117 14:48:03.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.183" endtime="20201117 14:48:03.580"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.583" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.591" endtime="20201117 14:48:03.612"></status>
</kw>
<msg timestamp="20201117 14:48:03.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.589" endtime="20201117 14:48:03.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.613" endtime="20201117 14:48:03.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.616" endtime="20201117 14:48:03.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.587" endtime="20201117 14:48:03.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.585" endtime="20201117 14:48:03.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.624" endtime="20201117 14:48:03.910"></status>
</kw>
<msg timestamp="20201117 14:48:03.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023601625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023759069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.623" endtime="20201117 14:48:03.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023601625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023759069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.914" endtime="20201117 14:48:03.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.922" endtime="20201117 14:48:03.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.620" endtime="20201117 14:48:03.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.619" endtime="20201117 14:48:03.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.929" level="INFO">${RESULT} = [{'time': 0.023759069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015744399999999964, 'source_diff': 0.00015744399999999964}, {'time': 0.023933389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:03.926" endtime="20201117 14:48:03.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.942" level="INFO">${ACCURACY} = {'diff': [0.00015744399999999964, 0.00015658299999999833, 0.0001570969999999984, 0.00015684700000000162, 0.00015677799999999978, 0.00015709800000000135, 0.00015665299999999965, 0.00015761100000000194,...</msg>
<status status="PASS" starttime="20201117 14:48:03.930" endtime="20201117 14:48:03.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.946" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.945" endtime="20201117 14:48:03.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.949" level="INFO">VALUE: [0.00015744399999999964, 0.00015658299999999833, 0.0001570969999999984, 0.00015684700000000162, 0.00015677799999999978, 0.00015709800000000135, 0.00015665299999999965, 0.00015761100000000194, 0.00015713900000000058, 0.00015720799999999896, 0.00015761099999999847, 0.0001567220000000015, 0.00015754100000000062, 0.0001572909999999969, 0.00015687500000000076, 0.00015727800000000028, 0.00015701400000000046, 0.00015686200000000067, 0.00015711100000000144, 0.0001571519999999972, 0.00015720799999999896, 0.00015659700000000137, 0.00015687500000000076, 0.0001570700000000022, 0.00015691699999999947, 0.0001574579999999992, 0.0001567220000000015, 0.00015752800000000053, 0.00015702700000000056, 0.00015754199999999663, 0.0001568480000000011, 0.0001575000000000014, 0.00015727800000000028, 0.00015688900000000033, 0.00015688900000000033, 0.00015762500000000151, 0.0001572359999999981, 0.00015722199999999853, 0.00015711099999999797, 0.0001568749999999973, 0.00015730499999999994, 0.00015705599999999917, 0.00015712500000000101, 0.0001574860000000053, 0.0001569029999999999, 0.00015722200000000547, 0.00015705600000000264, 0.00015743099999999954, 0.00015667999999999932, 0.0001572359999999981]</msg>
<status status="PASS" starttime="20201117 14:48:03.948" endtime="20201117 14:48:03.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.943" endtime="20201117 14:48:03.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.952" endtime="20201117 14:48:03.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.956" endtime="20201117 14:48:03.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.954" endtime="20201117 14:48:03.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.951" endtime="20201117 14:48:03.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.583" endtime="20201117 14:48:03.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.582" endtime="20201117 14:48:03.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.581" endtime="20201117 14:48:03.977"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.979" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.987" endtime="20201117 14:48:04.008"></status>
</kw>
<msg timestamp="20201117 14:48:04.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.986" endtime="20201117 14:48:04.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.010" endtime="20201117 14:48:04.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.012" endtime="20201117 14:48:04.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.983" endtime="20201117 14:48:04.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.981" endtime="20201117 14:48:04.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.021" endtime="20201117 14:48:04.306"></status>
</kw>
<msg timestamp="20201117 14:48:04.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023641556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023799986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.019" endtime="20201117 14:48:04.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023641556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023799986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.310" endtime="20201117 14:48:04.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.318" endtime="20201117 14:48:04.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.017" endtime="20201117 14:48:04.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.015" endtime="20201117 14:48:04.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.324" level="INFO">${RESULT} = [{'time': 0.023799986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001584299999999976, 'source_diff': 0.0001584299999999976}, {'time': 0.023981444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:04.321" endtime="20201117 14:48:04.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.338" level="INFO">${ACCURACY} = {'diff': [0.0001584299999999976, 0.00015811100000000244, 0.00015761199999999795, 0.00015848599999999935, 0.00015793000000000057, 0.00015826399999999824, 0.0001579449999999996, 0.00015854199999999763, ...</msg>
<status status="PASS" starttime="20201117 14:48:04.325" endtime="20201117 14:48:04.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.342" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.341" endtime="20201117 14:48:04.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.345" level="INFO">VALUE: [0.0001584299999999976, 0.00015811100000000244, 0.00015761199999999795, 0.00015848599999999935, 0.00015793000000000057, 0.00015826399999999824, 0.0001579449999999996, 0.00015854199999999763, 0.00015834699999999965, 0.00015815200000000168, 0.0001576809999999998, 0.00015806999999999974, 0.00015784799999999863, 0.00015805600000000017, 0.00015777800000000078, 0.0001580969999999994, 0.00015783299999999958, 0.0001584299999999976, 0.00015829200000000085, 0.00015795899999999918, 0.00015784799999999863, 0.0001577359999999986, 0.0001582640000000017, 0.0001577359999999986, 0.00015763899999999761, 0.00015795899999999918, 0.0001582359999999991, 0.00015804100000000113, 0.0001575420000000001, 0.00015774999999999817, 0.00015852799999999806, 0.00015793000000000057, 0.0001580420000000006, 0.0001576809999999998, 0.00015829200000000085, 0.00015762499999999804, 0.00015811099999999897, 0.00015798599999999885, 0.00015793100000000004, 0.0001585420000000011, 0.0001581810000000003, 0.00015843100000000054, 0.00015804199999999713, 0.00015841700000000097, 0.00015793000000000057, 0.0001581940000000004, 0.00015761100000000194, 0.0001578610000000022, 0.00015836099999999576, 0.00015866699999999428]</msg>
<status status="PASS" starttime="20201117 14:48:04.344" endtime="20201117 14:48:04.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.339" endtime="20201117 14:48:04.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.348" endtime="20201117 14:48:04.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.352" endtime="20201117 14:48:04.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.350" endtime="20201117 14:48:04.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.347" endtime="20201117 14:48:04.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.980" endtime="20201117 14:48:04.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.978" endtime="20201117 14:48:04.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.977" endtime="20201117 14:48:04.373"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.375" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.383" endtime="20201117 14:48:04.404"></status>
</kw>
<msg timestamp="20201117 14:48:04.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.381" endtime="20201117 14:48:04.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.406" endtime="20201117 14:48:04.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.408" endtime="20201117 14:48:04.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.379" endtime="20201117 14:48:04.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.377" endtime="20201117 14:48:04.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.417" endtime="20201117 14:48:04.703"></status>
</kw>
<msg timestamp="20201117 14:48:04.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023616889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023776194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.415" endtime="20201117 14:48:04.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023616889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023776194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.707" endtime="20201117 14:48:04.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.715" endtime="20201117 14:48:04.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.413" endtime="20201117 14:48:04.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.411" endtime="20201117 14:48:04.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.721" level="INFO">${RESULT} = [{'time': 0.023776194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015930500000000195, 'source_diff': 0.00015930500000000195}, {'time': 0.023951653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:04.718" endtime="20201117 14:48:04.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.735" level="INFO">${ACCURACY} = {'diff': [0.00015930500000000195, 0.00015862499999999904, 0.00015954099999999916, 0.0001585969999999999, 0.00015956900000000176, 0.0001587770000000023, 0.00015894400000000114, 0.0001595840000000008, 0...</msg>
<status status="PASS" starttime="20201117 14:48:04.723" endtime="20201117 14:48:04.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.740" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.739" endtime="20201117 14:48:04.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.742" level="INFO">VALUE: [0.00015930500000000195, 0.00015862499999999904, 0.00015954099999999916, 0.0001585969999999999, 0.00015956900000000176, 0.0001587770000000023, 0.00015894400000000114, 0.0001595840000000008, 0.00015919500000000086, 0.0001594580000000012, 0.00015893000000000157, 0.00015934700000000065, 0.00015908300000000083, 0.0001594580000000012, 0.0001586810000000008, 0.00015863900000000208, 0.0001588749999999993, 0.00015873699999999907, 0.0001593749999999998, 0.00015902800000000203, 0.00015934799999999666, 0.00015872200000000003, 0.00015884700000000015, 0.00015865300000000165, 0.00015880600000000092, 0.00015888900000000233, 0.0001592779999999988, 0.00015952800000000253, 0.00015886099999999972, 0.00015863899999999861, 0.0001590550000000017, 0.00015859800000000285, 0.00015938899999999936, 0.00015883300000000058, 0.00015936200000000317, 0.0001594719999999973, 0.00015936099999999676, 0.00015963899999999961, 0.00015863900000000208, 0.000159013999999999, 0.00015854199999999763, 0.00015920800000000096, 0.0001593480000000036, 0.00015865300000000165, 0.00015920800000000096, 0.00015870800000000046, 0.00015943000000000207, 0.00015858400000000328, 0.00015927800000000575, 0.00015931899999999805]</msg>
<status status="PASS" starttime="20201117 14:48:04.741" endtime="20201117 14:48:04.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.736" endtime="20201117 14:48:04.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.745" endtime="20201117 14:48:04.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.748" endtime="20201117 14:48:04.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.747" endtime="20201117 14:48:04.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.743" endtime="20201117 14:48:04.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.376" endtime="20201117 14:48:04.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.374" endtime="20201117 14:48:04.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.373" endtime="20201117 14:48:04.769"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.772" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.780" endtime="20201117 14:48:04.801"></status>
</kw>
<msg timestamp="20201117 14:48:04.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.778" endtime="20201117 14:48:04.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.803" endtime="20201117 14:48:04.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.805" endtime="20201117 14:48:04.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.776" endtime="20201117 14:48:04.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.774" endtime="20201117 14:48:04.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.814" endtime="20201117 14:48:05.100"></status>
</kw>
<msg timestamp="20201117 14:48:05.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024325861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024486306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.813" endtime="20201117 14:48:05.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024325861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024486306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.104" endtime="20201117 14:48:05.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.113" endtime="20201117 14:48:05.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.810" endtime="20201117 14:48:05.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.808" endtime="20201117 14:48:05.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.119" level="INFO">${RESULT} = [{'time': 0.024486306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016044499999999864, 'source_diff': 0.00016044499999999864}, {'time': 0.024678681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:05.116" endtime="20201117 14:48:05.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.134" level="INFO">${ACCURACY} = {'diff': [0.00016044499999999864, 0.00016059800000000138, 0.00015970900000000093, 0.00015981900000000202, 0.00016050000000000092, 0.0001605140000000005, 0.0001602779999999998, 0.00015980500000000245, ...</msg>
<status status="PASS" starttime="20201117 14:48:05.120" endtime="20201117 14:48:05.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.138" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.137" endtime="20201117 14:48:05.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.140" level="INFO">VALUE: [0.00016044499999999864, 0.00016059800000000138, 0.00015970900000000093, 0.00015981900000000202, 0.00016050000000000092, 0.0001605140000000005, 0.0001602779999999998, 0.00015980500000000245, 0.00016019399999999892, 0.00016058299999999887, 0.00016018099999999882, 0.00015976399999999974, 0.0001601810000000023, 0.00016026400000000024, 0.00015994500000000161, 0.00016013900000000011, 0.00016013900000000011, 0.00015975000000000017, 0.0001595970000000009, 0.00015990299999999943, 0.00016034700000000165, 0.000159707999999998, 0.0001598750000000003, 0.0001604719999999983, 0.00015975000000000017, 0.00015969399999999842, 0.00015988899999999986, 0.00016037499999999733, 0.0001598200000000015, 0.0001597909999999994, 0.00015983300000000158, 0.00015988899999999986, 0.00016043099999999907, 0.00016048600000000135, 0.0001595689999999983, 0.00016031899999999905, 0.0001602360000000011, 0.0001600689999999988, 0.00015986099999999726, 0.00015954199999999863, 0.00016013900000000358, 0.00016000000000000042, 0.00016012500000000401, 0.00015988900000000333, 0.00015987499999999683, 0.00015970800000000146, 0.00015976300000000027, 0.00015970900000000093, 0.00016008299999999837, 0.00016033400000000503]</msg>
<status status="PASS" starttime="20201117 14:48:05.139" endtime="20201117 14:48:05.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.134" endtime="20201117 14:48:05.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.144" endtime="20201117 14:48:05.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.147" endtime="20201117 14:48:05.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.145" endtime="20201117 14:48:05.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.142" endtime="20201117 14:48:05.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.772" endtime="20201117 14:48:05.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.770" endtime="20201117 14:48:05.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.770" endtime="20201117 14:48:05.168"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.170" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.178" endtime="20201117 14:48:05.199"></status>
</kw>
<msg timestamp="20201117 14:48:05.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.177" endtime="20201117 14:48:05.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.201" endtime="20201117 14:48:05.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.203" endtime="20201117 14:48:05.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.174" endtime="20201117 14:48:05.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.172" endtime="20201117 14:48:05.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.212" endtime="20201117 14:48:05.498"></status>
</kw>
<msg timestamp="20201117 14:48:05.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023601028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023762694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.211" endtime="20201117 14:48:05.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023601028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023762694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.502" endtime="20201117 14:48:05.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.510" endtime="20201117 14:48:05.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.208" endtime="20201117 14:48:05.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.206" endtime="20201117 14:48:05.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.517" level="INFO">${RESULT} = [{'time': 0.023762694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016166600000000128, 'source_diff': 0.00016166600000000128}, {'time': 0.023956069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:05.514" endtime="20201117 14:48:05.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.530" level="INFO">${ACCURACY} = {'diff': [0.00016166600000000128, 0.00016130500000000048, 0.0001613339999999991, 0.00016063900000000061, 0.00016083299999999912, 0.00016080599999999945, 0.0001607780000000003, 0.00016062500000000104, ...</msg>
<status status="PASS" starttime="20201117 14:48:05.518" endtime="20201117 14:48:05.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.535" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.534" endtime="20201117 14:48:05.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.537" level="INFO">VALUE: [0.00016166600000000128, 0.00016130500000000048, 0.0001613339999999991, 0.00016063900000000061, 0.00016083299999999912, 0.00016080599999999945, 0.0001607780000000003, 0.00016062500000000104, 0.0001615560000000002, 0.00016130500000000048, 0.0001613339999999991, 0.00016125000000000167, 0.0001612499999999982, 0.00016108299999999937, 0.00016086099999999826, 0.00016105500000000023, 0.00016062500000000104, 0.00016144400000000017, 0.00016131999999999952, 0.00016119399999999992, 0.00016073599999999813, 0.00016069399999999942, 0.00016099999999999795, 0.00016126400000000124, 0.00016134699999999919, 0.00016093100000000304, 0.00016105500000000023, 0.00016050000000000092, 0.00016095799999999924, 0.00016148600000000235, 0.00016143100000000007, 0.0001607780000000003, 0.00016095900000000218, 0.00016120800000000296, 0.0001608339999999986, 0.00016100000000000142, 0.00016055499999999973, 0.00016144499999999964, 0.0001610689999999998, 0.00016145900000000268, 0.00016125000000000167, 0.00016140300000000093, 0.00016142999999999713, 0.00016081899999999955, 0.00016074999999999423, 0.00016105500000000023, 0.00016093100000000304, 0.00016062499999999758, 0.0001612360000000021, 0.0001615690000000003]</msg>
<status status="PASS" starttime="20201117 14:48:05.536" endtime="20201117 14:48:05.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.531" endtime="20201117 14:48:05.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.540" endtime="20201117 14:48:05.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.543" endtime="20201117 14:48:05.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.542" endtime="20201117 14:48:05.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.538" endtime="20201117 14:48:05.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.171" endtime="20201117 14:48:05.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.169" endtime="20201117 14:48:05.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.168" endtime="20201117 14:48:05.564"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.567" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.575" endtime="20201117 14:48:05.596"></status>
</kw>
<msg timestamp="20201117 14:48:05.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.573" endtime="20201117 14:48:05.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.597" endtime="20201117 14:48:05.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.600" endtime="20201117 14:48:05.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.571" endtime="20201117 14:48:05.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.569" endtime="20201117 14:48:05.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.609" endtime="20201117 14:48:05.894"></status>
</kw>
<msg timestamp="20201117 14:48:05.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023498931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023661319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.608" endtime="20201117 14:48:05.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023498931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023661319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.898" endtime="20201117 14:48:05.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.906" endtime="20201117 14:48:05.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.605" endtime="20201117 14:48:05.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.603" endtime="20201117 14:48:05.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.913" level="INFO">${RESULT} = [{'time': 0.023661319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016238799999999942, 'source_diff': 0.00016238799999999942}, {'time': 0.02384475, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:48:05.910" endtime="20201117 14:48:05.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.926" level="INFO">${ACCURACY} = {'diff': [0.00016238799999999942, 0.0001625560000000012, 0.00016198599999999938, 0.00016195800000000024, 0.00016181900000000055, 0.00016236099999999976, 0.0001616949999999999, 0.00016187499999999883, ...</msg>
<status status="PASS" starttime="20201117 14:48:05.914" endtime="20201117 14:48:05.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.931" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.930" endtime="20201117 14:48:05.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.933" level="INFO">VALUE: [0.00016238799999999942, 0.0001625560000000012, 0.00016198599999999938, 0.00016195800000000024, 0.00016181900000000055, 0.00016236099999999976, 0.0001616949999999999, 0.00016187499999999883, 0.00016182000000000002, 0.00016188799999999892, 0.00016148599999999888, 0.0001617780000000013, 0.0001619439999999972, 0.0001623750000000028, 0.0001615690000000003, 0.00016222200000000006, 0.00016193100000000057, 0.00016182000000000002, 0.00016258300000000087, 0.0001625829999999974, 0.00016212499999999908, 0.0001618750000000023, 0.00016172199999999956, 0.00016229200000000138, 0.00016241599999999856, 0.00016256899999999783, 0.0001620560000000007, 0.0001616659999999978, 0.00016176399999999827, 0.00016208300000000037, 0.0001615560000000002, 0.00016176400000000174, 0.0001622910000000019, 0.00016204200000000113, 0.00016259700000000044, 0.0001619300000000011, 0.0001623340000000001, 0.00016218000000000135, 0.0001624720000000003, 0.00016175000000000217, 0.00016193100000000057, 0.00016237499999999933, 0.00016190300000000143, 0.0001618889999999984, 0.000162014000000002, 0.0001621940000000044, 0.00016230600000000095, 0.0001621109999999995, 0.00016254200000000163, 0.00016201300000000252]</msg>
<status status="PASS" starttime="20201117 14:48:05.932" endtime="20201117 14:48:05.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.927" endtime="20201117 14:48:05.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.936" endtime="20201117 14:48:05.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.939" endtime="20201117 14:48:05.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.938" endtime="20201117 14:48:05.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.934" endtime="20201117 14:48:05.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.567" endtime="20201117 14:48:05.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.566" endtime="20201117 14:48:05.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.565" endtime="20201117 14:48:05.960"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.963" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.971" endtime="20201117 14:48:05.992"></status>
</kw>
<msg timestamp="20201117 14:48:05.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.970" endtime="20201117 14:48:05.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.994" endtime="20201117 14:48:05.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.996" endtime="20201117 14:48:05.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.967" endtime="20201117 14:48:05.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.965" endtime="20201117 14:48:05.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.005" endtime="20201117 14:48:06.291"></status>
</kw>
<msg timestamp="20201117 14:48:06.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024035806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024198542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.004" endtime="20201117 14:48:06.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024035806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024198542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.295" endtime="20201117 14:48:06.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.303" endtime="20201117 14:48:06.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.001" endtime="20201117 14:48:06.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.000" endtime="20201117 14:48:06.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.310" level="INFO">${RESULT} = [{'time': 0.024198542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016273600000000013, 'source_diff': 0.00016273600000000013}, {'time': 0.024386889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:06.307" endtime="20201117 14:48:06.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.323" level="INFO">${ACCURACY} = {'diff': [0.00016273600000000013, 0.00016341699999999904, 0.00016293100000000157, 0.00016306899999999833, 0.0001631110000000005, 0.00016297300000000028, 0.00016323600000000063, 0.00016272200000000056,...</msg>
<status status="PASS" starttime="20201117 14:48:06.311" endtime="20201117 14:48:06.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.327" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.326" endtime="20201117 14:48:06.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.330" level="INFO">VALUE: [0.00016273600000000013, 0.00016341699999999904, 0.00016293100000000157, 0.00016306899999999833, 0.0001631110000000005, 0.00016297300000000028, 0.00016323600000000063, 0.00016272200000000056, 0.00016302699999999962, 0.00016341699999999904, 0.00016330600000000195, 0.00016312500000000008, 0.0001632500000000002, 0.0001630279999999991, 0.00016273600000000013, 0.0001630560000000017, 0.00016309700000000094, 0.00016326399999999977, 0.00016272200000000056, 0.0001632500000000002, 0.00016316700000000225, 0.00016292999999999863, 0.00016275000000000317, 0.00016345799999999827, 0.0001628750000000033, 0.00016287499999999983, 0.00016345900000000121, 0.000162917000000002, 0.0001627910000000024, 0.00016265299999999872, 0.00016319400000000192, 0.0001632919999999989, 0.00016309700000000094, 0.0001625279999999986, 0.00016350000000000045, 0.00016294400000000167, 0.00016305499999999876, 0.00016348700000000035, 0.0001630279999999991, 0.00016330499999999554, 0.0001634439999999987, 0.00016280500000000198, 0.00016312500000000008, 0.0001634859999999974, 0.00016347199999999784, 0.00016290299999999897, 0.00016323700000000357, 0.00016337500000000033, 0.00016354100000000316, 0.000162611]</msg>
<status status="PASS" starttime="20201117 14:48:06.328" endtime="20201117 14:48:06.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.324" endtime="20201117 14:48:06.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.333" endtime="20201117 14:48:06.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.336" endtime="20201117 14:48:06.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.334" endtime="20201117 14:48:06.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.331" endtime="20201117 14:48:06.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.963" endtime="20201117 14:48:06.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.962" endtime="20201117 14:48:06.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.961" endtime="20201117 14:48:06.358"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.360" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.369" endtime="20201117 14:48:06.391"></status>
</kw>
<msg timestamp="20201117 14:48:06.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.368" endtime="20201117 14:48:06.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.393" endtime="20201117 14:48:06.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.396" endtime="20201117 14:48:06.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.365" endtime="20201117 14:48:06.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.362" endtime="20201117 14:48:06.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.404" endtime="20201117 14:48:06.690"></status>
</kw>
<msg timestamp="20201117 14:48:06.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026087514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026251306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.403" endtime="20201117 14:48:06.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026087514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026251306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.694" endtime="20201117 14:48:06.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.702" endtime="20201117 14:48:06.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.400" endtime="20201117 14:48:06.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.399" endtime="20201117 14:48:06.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.708" level="INFO">${RESULT} = [{'time': 0.026251306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001637919999999994, 'source_diff': 0.0001637919999999994}, {'time': 0.026432625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:06.705" endtime="20201117 14:48:06.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.723" level="INFO">${ACCURACY} = {'diff': [0.0001637919999999994, 0.00016387500000000083, 0.00016356899999999883, 0.00016413900000000065, 0.00016443000000000013, 0.0001635980000000009, 0.00016367999999999938, 0.00016419499999999893, ...</msg>
<status status="PASS" starttime="20201117 14:48:06.709" endtime="20201117 14:48:06.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.727" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.726" endtime="20201117 14:48:06.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.730" level="INFO">VALUE: [0.0001637919999999994, 0.00016387500000000083, 0.00016356899999999883, 0.00016413900000000065, 0.00016443000000000013, 0.0001635980000000009, 0.00016367999999999938, 0.00016419499999999893, 0.00016394400000000267, 0.00016380599999999898, 0.00016397300000000128, 0.00016390299999999997, 0.00016358400000000134, 0.00016450000000000145, 0.00016365199999999677, 0.00016409699999999847, 0.00016456899999999983, 0.0001638890000000004, 0.00016411099999999804, 0.00016401399999999705, 0.00016405499999999976, 0.00016398600000000138, 0.00016387500000000083, 0.0001642080000000025, 0.00016416699999999979, 0.0001637919999999994, 0.0001639309999999991, 0.000163611000000001, 0.00016387500000000083, 0.0001645419999999967, 0.00016424999999999773, 0.00016412500000000108, 0.00016392999999999963, 0.00016368099999999886, 0.00016405599999999576, 0.0001640839999999949, 0.00016412500000000108, 0.00016369399999999895, 0.00016387500000000083, 0.00016423599999999816, 0.00016387500000000083, 0.00016440300000000047, 0.00016456999999999583, 0.0001639309999999991, 0.0001641810000000063, 0.00016412500000000108, 0.00016387500000000083, 0.0001635560000000022, 0.0001637219999999981, 0.0001637639999999968]</msg>
<status status="PASS" starttime="20201117 14:48:06.728" endtime="20201117 14:48:06.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.724" endtime="20201117 14:48:06.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.733" endtime="20201117 14:48:06.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.737" endtime="20201117 14:48:06.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.735" endtime="20201117 14:48:06.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.732" endtime="20201117 14:48:06.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.361" endtime="20201117 14:48:06.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.359" endtime="20201117 14:48:06.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.358" endtime="20201117 14:48:06.758"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.760" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.768" endtime="20201117 14:48:06.789"></status>
</kw>
<msg timestamp="20201117 14:48:06.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.766" endtime="20201117 14:48:06.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.791" endtime="20201117 14:48:06.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.793" endtime="20201117 14:48:06.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.764" endtime="20201117 14:48:06.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.762" endtime="20201117 14:48:06.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.802" endtime="20201117 14:48:07.088"></status>
</kw>
<msg timestamp="20201117 14:48:07.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023503819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023669167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.800" endtime="20201117 14:48:07.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023503819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023669167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.092" endtime="20201117 14:48:07.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.100" endtime="20201117 14:48:07.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.798" endtime="20201117 14:48:07.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.796" endtime="20201117 14:48:07.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.106" level="INFO">${RESULT} = [{'time': 0.023669167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016534800000000266, 'source_diff': 0.00016534800000000266}, {'time': 0.023856583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:07.103" endtime="20201117 14:48:07.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.119" level="INFO">${ACCURACY} = {'diff': [0.00016534800000000266, 0.00016531900000000058, 0.00016459699999999897, 0.00016522299999999907, 0.00016495899999999925, 0.0001651660000000013, 0.00016534699999999972, 0.00016480599999999998,...</msg>
<status status="PASS" starttime="20201117 14:48:07.107" endtime="20201117 14:48:07.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.124" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.123" endtime="20201117 14:48:07.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.132" level="INFO">VALUE: [0.00016534800000000266, 0.00016531900000000058, 0.00016459699999999897, 0.00016522299999999907, 0.00016495899999999925, 0.0001651660000000013, 0.00016534699999999972, 0.00016480599999999998, 0.00016480499999999704, 0.00016542999999999766, 0.0001647500000000017, 0.00016495799999999977, 0.0001654440000000007, 0.0001651119999999985, 0.00016526400000000177, 0.00016537500000000233, 0.00016511099999999904, 0.0001654859999999994, 0.00016483399999999912, 0.00016451299999999808, 0.00016466599999999734, 0.00016534699999999972, 0.0001649310000000001, 0.00016540300000000147, 0.00016512500000000208, 0.00016459799999999844, 0.00016465299999999725, 0.00016473599999999866, 0.00016466700000000029, 0.0001650419999999972, 0.0001647219999999991, 0.00016486099999999879, 0.00016495899999999925, 0.00016463800000000167, 0.00016531900000000058, 0.00016500000000000195, 0.0001646249999999981, 0.00016468000000000038, 0.00016519400000000045, 0.000164611000000002, 0.0001651119999999985, 0.00016533299999999668, 0.00016534700000000319, 0.00016491700000000054, 0.00016479200000000388, 0.00016552799999999812, 0.00016504099999999772, 0.0001654859999999994, 0.0001652219999999996, 0.00016523699999999863]</msg>
<status status="PASS" starttime="20201117 14:48:07.125" endtime="20201117 14:48:07.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.120" endtime="20201117 14:48:07.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.136" endtime="20201117 14:48:07.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.139" endtime="20201117 14:48:07.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.137" endtime="20201117 14:48:07.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.134" endtime="20201117 14:48:07.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.761" endtime="20201117 14:48:07.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.759" endtime="20201117 14:48:07.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.758" endtime="20201117 14:48:07.160"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.162" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.170" endtime="20201117 14:48:07.192"></status>
</kw>
<msg timestamp="20201117 14:48:07.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.169" endtime="20201117 14:48:07.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.193" endtime="20201117 14:48:07.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.196" endtime="20201117 14:48:07.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.166" endtime="20201117 14:48:07.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.164" endtime="20201117 14:48:07.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.204" endtime="20201117 14:48:07.490"></status>
</kw>
<msg timestamp="20201117 14:48:07.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023536778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02370275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:07.203" endtime="20201117 14:48:07.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023536778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02370275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:07.494" endtime="20201117 14:48:07.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.502" endtime="20201117 14:48:07.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.200" endtime="20201117 14:48:07.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.199" endtime="20201117 14:48:07.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.508" level="INFO">${RESULT} = [{'time': 0.02370275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016597200000000034, 'source_diff': 0.00016597200000000034}, {'time': 0.023889111, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:48:07.505" endtime="20201117 14:48:07.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.522" level="INFO">${ACCURACY} = {'diff': [0.00016597200000000034, 0.00016581900000000108, 0.00016615300000000222, 0.0001659029999999985, 0.00016613899999999918, 0.0001662220000000006, 0.00016568099999999739, 0.00016600000000000295, ...</msg>
<status status="PASS" starttime="20201117 14:48:07.510" endtime="20201117 14:48:07.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.526" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.525" endtime="20201117 14:48:07.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.528" level="INFO">VALUE: [0.00016597200000000034, 0.00016581900000000108, 0.00016615300000000222, 0.0001659029999999985, 0.00016613899999999918, 0.0001662220000000006, 0.00016568099999999739, 0.00016600000000000295, 0.00016626299999999983, 0.00016652699999999965, 0.0001659020000000025, 0.00016627800000000234, 0.00016595900000000025, 0.0001657220000000001, 0.00016611100000000004, 0.0001664449999999977, 0.00016627799999999887, 0.00016645900000000075, 0.00016624999999999973, 0.0001659859999999999, 0.00016563899999999868, 0.00016591600000000206, 0.0001662220000000006, 0.00016566700000000129, 0.0001655280000000016, 0.00016580499999999804, 0.00016592999999999816, 0.0001664310000000016, 0.0001658890000000024, 0.0001656379999999992, 0.0001665280000000026, 0.00016606899999999786, 0.00016609700000000047, 0.0001665419999999987, 0.0001662639999999993, 0.0001660410000000022, 0.00016584700000000022, 0.00016601399999999905, 0.000166402999999999, 0.00016616700000000179, 0.00016649999999999998, 0.00016566700000000129, 0.00016591700000000154, 0.00016641700000000204, 0.00016627799999999887, 0.00016566700000000129, 0.00016565300000000172, 0.00016620800000000102, 0.0001663340000000041, 0.00016588800000000292]</msg>
<status status="PASS" starttime="20201117 14:48:07.527" endtime="20201117 14:48:07.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.523" endtime="20201117 14:48:07.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.532" endtime="20201117 14:48:07.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.535" endtime="20201117 14:48:07.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.533" endtime="20201117 14:48:07.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.530" endtime="20201117 14:48:07.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.163" endtime="20201117 14:48:07.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.161" endtime="20201117 14:48:07.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.160" endtime="20201117 14:48:07.556"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.558" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.566" endtime="20201117 14:48:07.588"></status>
</kw>
<msg timestamp="20201117 14:48:07.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.565" endtime="20201117 14:48:07.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.589" endtime="20201117 14:48:07.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.592" endtime="20201117 14:48:07.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.562" endtime="20201117 14:48:07.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.560" endtime="20201117 14:48:07.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.600" endtime="20201117 14:48:07.886"></status>
</kw>
<msg timestamp="20201117 14:48:07.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023516639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023683667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.599" endtime="20201117 14:48:07.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023516639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023683667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.890" endtime="20201117 14:48:07.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.899" endtime="20201117 14:48:07.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.596" endtime="20201117 14:48:07.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.595" endtime="20201117 14:48:07.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.905" level="INFO">${RESULT} = [{'time': 0.023683667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016702799999999962, 'source_diff': 0.00016702799999999962}, {'time': 0.023879014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:07.902" endtime="20201117 14:48:07.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.918" level="INFO">${ACCURACY} = {'diff': [0.00016702799999999962, 0.00016669500000000143, 0.00016665299999999925, 0.00016651399999999955, 0.000167305999999999, 0.00016741699999999957, 0.00016715200000000027, 0.00016711100000000104, ...</msg>
<status status="PASS" starttime="20201117 14:48:07.906" endtime="20201117 14:48:07.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.923" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.922" endtime="20201117 14:48:07.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.925" level="INFO">VALUE: [0.00016702799999999962, 0.00016669500000000143, 0.00016665299999999925, 0.00016651399999999955, 0.000167305999999999, 0.00016741699999999957, 0.00016715200000000027, 0.00016711100000000104, 0.00016711100000000104, 0.00016734699999999825, 0.0001670419999999992, 0.00016687500000000036, 0.00016661100000000054, 0.00016672300000000057, 0.00016736099999999782, 0.00016686099999999732, 0.0001672359999999977, 0.0001669860000000009, 0.00016716599999999984, 0.00016723600000000116, 0.00016673600000000066, 0.00016716699999999932, 0.00016666699999999882, 0.0001667920000000024, 0.00016679199999999894, 0.00016734700000000172, 0.00016718000000000288, 0.0001665549999999988, 0.0001666250000000001, 0.00016677799999999937, 0.00016661100000000054, 0.00016747300000000132, 0.00016716699999999932, 0.0001669860000000009, 0.00016704200000000266, 0.00016669399999999848, 0.00016684700000000122, 0.00016691699999999907, 0.00016733299999999868, 0.0001669159999999996, 0.00016745900000000175, 0.0001669860000000009, 0.00016704099999999972, 0.0001665560000000052, 0.00016729199999999944, 0.00016729099999999997, 0.00016727799999999987, 0.00016706899999999886, 0.0001668340000000046, 0.00016705599999999876]</msg>
<status status="PASS" starttime="20201117 14:48:07.924" endtime="20201117 14:48:07.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.919" endtime="20201117 14:48:07.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.928" endtime="20201117 14:48:07.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.931" endtime="20201117 14:48:07.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.930" endtime="20201117 14:48:07.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.927" endtime="20201117 14:48:07.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.559" endtime="20201117 14:48:07.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.557" endtime="20201117 14:48:07.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.556" endtime="20201117 14:48:07.953"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.955" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.963" endtime="20201117 14:48:07.985"></status>
</kw>
<msg timestamp="20201117 14:48:07.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.961" endtime="20201117 14:48:07.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.986" endtime="20201117 14:48:07.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.989" endtime="20201117 14:48:07.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.959" endtime="20201117 14:48:07.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.957" endtime="20201117 14:48:07.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.998" endtime="20201117 14:48:08.283"></status>
</kw>
<msg timestamp="20201117 14:48:08.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024330264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024498708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.996" endtime="20201117 14:48:08.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024330264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024498708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.287" endtime="20201117 14:48:08.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.295" endtime="20201117 14:48:08.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.994" endtime="20201117 14:48:08.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.992" endtime="20201117 14:48:08.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.302" level="INFO">${RESULT} = [{'time': 0.024498708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016844400000000023, 'source_diff': 0.00016844400000000023}, {'time': 0.024688069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:08.298" endtime="20201117 14:48:08.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.316" level="INFO">${ACCURACY} = {'diff': [0.00016844400000000023, 0.00016788800000000145, 0.00016822199999999912, 0.00016786099999999832, 0.00016788800000000145, 0.00016822199999999912, 0.00016822199999999912, 0.0001680420000000002,...</msg>
<status status="PASS" starttime="20201117 14:48:08.303" endtime="20201117 14:48:08.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.320" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.319" endtime="20201117 14:48:08.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.323" level="INFO">VALUE: [0.00016844400000000023, 0.00016788800000000145, 0.00016822199999999912, 0.00016786099999999832, 0.00016788800000000145, 0.00016822199999999912, 0.00016822199999999912, 0.0001680420000000002, 0.00016765200000000077, 0.000167999999999998, 0.0001680830000000029, 0.00016780500000000004, 0.00016841700000000057, 0.0001677359999999982, 0.0001679030000000005, 0.0001682229999999986, 0.0001678749999999979, 0.00016798599999999844, 0.00016841700000000057, 0.00016845900000000275, 0.00016763900000000068, 0.00016788900000000093, 0.0001677220000000021, 0.00016765300000000025, 0.00016758299999999893, 0.00016834699999999925, 0.00016765200000000077, 0.00016822199999999912, 0.00016787500000000136, 0.0001682229999999986, 0.00016784699999999875, 0.0001679030000000005, 0.00016793000000000016, 0.00016793000000000016, 0.000168096999999999, 0.00016834700000000272, 0.00016772199999999862, 0.00016777800000000037, 0.00016780600000000645, 0.00016766599999999687, 0.000168096999999999, 0.00016768100000000286, 0.00016779199999999994, 0.00016752800000000012, 0.0001684860000000024, 0.0001678749999999979, 0.00016772199999999515, 0.00016822300000000207, 0.00016756899999999936, 0.000167709000000002]</msg>
<status status="PASS" starttime="20201117 14:48:08.322" endtime="20201117 14:48:08.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.317" endtime="20201117 14:48:08.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.326" endtime="20201117 14:48:08.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.329" endtime="20201117 14:48:08.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.328" endtime="20201117 14:48:08.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.324" endtime="20201117 14:48:08.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.955" endtime="20201117 14:48:08.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.954" endtime="20201117 14:48:08.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.953" endtime="20201117 14:48:08.350"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.352" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.360" endtime="20201117 14:48:08.382"></status>
</kw>
<msg timestamp="20201117 14:48:08.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.359" endtime="20201117 14:48:08.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.383" endtime="20201117 14:48:08.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.387" endtime="20201117 14:48:08.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.356" endtime="20201117 14:48:08.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.354" endtime="20201117 14:48:08.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.396" endtime="20201117 14:48:08.682"></status>
</kw>
<msg timestamp="20201117 14:48:08.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023454333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023623931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.395" endtime="20201117 14:48:08.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023454333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023623931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.686" endtime="20201117 14:48:08.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.694" endtime="20201117 14:48:08.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.392" endtime="20201117 14:48:08.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.390" endtime="20201117 14:48:08.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.700" level="INFO">${RESULT} = [{'time': 0.023623931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016959799999999997, 'source_diff': 0.00016959799999999997}, {'time': 0.023808236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:08.697" endtime="20201117 14:48:08.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.714" level="INFO">${ACCURACY} = {'diff': [0.00016959799999999997, 0.00016941700000000157, 0.0001689580000000003, 0.00016945799999999733, 0.00016951399999999908, 0.00016952699999999918, 0.00016861099999999907, 0.00016902799999999815,...</msg>
<status status="PASS" starttime="20201117 14:48:08.701" endtime="20201117 14:48:08.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.718" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.717" endtime="20201117 14:48:08.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.721" level="INFO">VALUE: [0.00016959799999999997, 0.00016941700000000157, 0.0001689580000000003, 0.00016945799999999733, 0.00016951399999999908, 0.00016952699999999918, 0.00016861099999999907, 0.00016902799999999815, 0.00016902699999999868, 0.0001684999999999985, 0.00016868100000000039, 0.0001689030000000015, 0.00016870899999999953, 0.00016912499999999914, 0.00016879200000000094, 0.00016870899999999953, 0.0001689860000000029, 0.00016870800000000005, 0.0001689169999999976, 0.00016877800000000137, 0.00016877800000000137, 0.00016941700000000157, 0.00016870800000000005, 0.00016884699999999975, 0.00016915299999999828, 0.00016877699999999843, 0.0001694580000000008, 0.00016927699999999893, 0.00016941599999999862, 0.00016880500000000104, 0.00016877800000000137, 0.00016934700000000025, 0.00016863900000000168, 0.00016929199999999797, 0.00016884699999999975, 0.00016940299999999853, 0.00016852700000000165, 0.0001695420000000017, 0.00016918100000000089, 0.00016866700000000082, 0.00016872199999999962, 0.00016954199999999475, 0.00016944499999999724, 0.00016859799999999897, 0.0001687220000000031, 0.00016933400000000015, 0.0001689719999999964, 0.0001690420000000012, 0.00016949999999999604, 0.00016911099999999957]</msg>
<status status="PASS" starttime="20201117 14:48:08.719" endtime="20201117 14:48:08.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.715" endtime="20201117 14:48:08.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.724" endtime="20201117 14:48:08.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.727" endtime="20201117 14:48:08.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.726" endtime="20201117 14:48:08.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.722" endtime="20201117 14:48:08.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.353" endtime="20201117 14:48:08.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.351" endtime="20201117 14:48:08.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.351" endtime="20201117 14:48:08.748"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.750" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.759" endtime="20201117 14:48:08.780"></status>
</kw>
<msg timestamp="20201117 14:48:08.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.757" endtime="20201117 14:48:08.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.782" endtime="20201117 14:48:08.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.784" endtime="20201117 14:48:08.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.755" endtime="20201117 14:48:08.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.752" endtime="20201117 14:48:08.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.793" endtime="20201117 14:48:09.079"></status>
</kw>
<msg timestamp="20201117 14:48:09.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024042931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024212986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.792" endtime="20201117 14:48:09.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024042931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024212986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.083" endtime="20201117 14:48:09.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.091" endtime="20201117 14:48:09.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.789" endtime="20201117 14:48:09.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.788" endtime="20201117 14:48:09.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.097" level="INFO">${RESULT} = [{'time': 0.024212986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017005499999999882, 'source_diff': 0.00017005499999999882}, {'time': 0.024406319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:09.094" endtime="20201117 14:48:09.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.110" level="INFO">${ACCURACY} = {'diff': [0.00017005499999999882, 0.0001697360000000002, 0.000170097000000001, 0.00017047299999999738, 0.00016958299999999746, 0.000170097000000001, 0.0001702360000000007, 0.00016977699999999943, 0.00...</msg>
<status status="PASS" starttime="20201117 14:48:09.098" endtime="20201117 14:48:09.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.115" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.114" endtime="20201117 14:48:09.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.117" level="INFO">VALUE: [0.00017005499999999882, 0.0001697360000000002, 0.000170097000000001, 0.00017047299999999738, 0.00016958299999999746, 0.000170097000000001, 0.0001702360000000007, 0.00016977699999999943, 0.0001699030000000025, 0.00017041700000000257, 0.00017002799999999915, 0.00017002799999999915, 0.00016962499999999964, 0.00016972200000000062, 0.00017012500000000014, 0.00016998600000000044, 0.00017031899999999864, 0.0001699030000000025, 0.00017048599999999747, 0.00016966700000000182, 0.0001700559999999983, 0.000170306000000002, 0.00016977800000000237, 0.0001701389999999997, 0.00017040299999999953, 0.0001698749999999999, 0.00016998600000000044, 0.00016976399999999933, 0.0001697360000000002, 0.00017023599999999722, 0.00017020799999999808, 0.00016980499999999857, 0.00017036100000000082, 0.00017026399999999983, 0.0001699299999999987, 0.00016988799999999998, 0.00017041599999999962, 0.00017008299999999796, 0.00016988799999999998, 0.00016977799999999543, 0.00016995799999999783, 0.0001699169999999986, 0.00016990199999999955, 0.0001695840000000004, 0.00016976399999999586, 0.00017022199999999765, 0.00017051400000000355, 0.00017002800000000262, 0.00016986099999999338, 0.0001697220000000041]</msg>
<status status="PASS" starttime="20201117 14:48:09.116" endtime="20201117 14:48:09.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.111" endtime="20201117 14:48:09.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.120" endtime="20201117 14:48:09.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.124" endtime="20201117 14:48:09.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.122" endtime="20201117 14:48:09.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.119" endtime="20201117 14:48:09.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.751" endtime="20201117 14:48:09.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.749" endtime="20201117 14:48:09.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.748" endtime="20201117 14:48:09.145"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.147" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.155" endtime="20201117 14:48:09.177"></status>
</kw>
<msg timestamp="20201117 14:48:09.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.154" endtime="20201117 14:48:09.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.178" endtime="20201117 14:48:09.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.181" endtime="20201117 14:48:09.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.151" endtime="20201117 14:48:09.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.149" endtime="20201117 14:48:09.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.190" endtime="20201117 14:48:09.475"></status>
</kw>
<msg timestamp="20201117 14:48:09.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023610931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023782444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.188" endtime="20201117 14:48:09.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023610931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023782444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.479" endtime="20201117 14:48:09.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.487" endtime="20201117 14:48:09.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.186" endtime="20201117 14:48:09.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.184" endtime="20201117 14:48:09.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.494" level="INFO">${RESULT} = [{'time': 0.023782444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017151299999999814, 'source_diff': 0.00017151299999999814}, {'time': 0.023972708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:09.490" endtime="20201117 14:48:09.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.507" level="INFO">${ACCURACY} = {'diff': [0.00017151299999999814, 0.0001706390000000002, 0.00017122199999999865, 0.000171194999999999, 0.00017122299999999813, 0.00017102800000000015, 0.00017095799999999883, 0.00017058299999999846, 0...</msg>
<status status="PASS" starttime="20201117 14:48:09.495" endtime="20201117 14:48:09.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.511" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.510" endtime="20201117 14:48:09.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.514" level="INFO">VALUE: [0.00017151299999999814, 0.0001706390000000002, 0.00017122199999999865, 0.000171194999999999, 0.00017122299999999813, 0.00017102800000000015, 0.00017095799999999883, 0.00017058299999999846, 0.00017116699999999985, 0.00017076400000000033, 0.00017086100000000132, 0.0001707369999999972, 0.00017081899999999914, 0.00017126400000000083, 0.0001706520000000003, 0.000171097000000002, 0.0001705970000000015, 0.00017083300000000218, 0.00017151400000000108, 0.000171097000000002, 0.00017126400000000083, 0.00017115300000000028, 0.00017052799999999965, 0.00017134699999999878, 0.0001709719999999984, 0.0001707230000000011, 0.0001708329999999987, 0.00017061100000000107, 0.000170693999999999, 0.00017066699999999935, 0.00017120800000000255, 0.00017063800000000073, 0.0001712780000000004, 0.00017051400000000008, 0.00017126399999999736, 0.0001705420000000027, 0.00017108399999999843, 0.0001709580000000023, 0.000171000000000001, 0.0001708049999999961, 0.00017091600000000012, 0.00017129200000000344, 0.0001705970000000015, 0.00017090300000000003, 0.00017131999999999564, 0.00017141600000000062, 0.0001709169999999996, 0.00017111099999999463, 0.0001710829999999955, 0.00017116699999999985]</msg>
<status status="PASS" starttime="20201117 14:48:09.512" endtime="20201117 14:48:09.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.508" endtime="20201117 14:48:09.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.517" endtime="20201117 14:48:09.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.520" endtime="20201117 14:48:09.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.519" endtime="20201117 14:48:09.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.515" endtime="20201117 14:48:09.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.148" endtime="20201117 14:48:09.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.146" endtime="20201117 14:48:09.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.145" endtime="20201117 14:48:09.541"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.544" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.552" endtime="20201117 14:48:09.574"></status>
</kw>
<msg timestamp="20201117 14:48:09.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.550" endtime="20201117 14:48:09.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.576" endtime="20201117 14:48:09.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.578" endtime="20201117 14:48:09.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.548" endtime="20201117 14:48:09.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.546" endtime="20201117 14:48:09.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.587" endtime="20201117 14:48:09.872"></status>
</kw>
<msg timestamp="20201117 14:48:09.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024503667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024675819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.586" endtime="20201117 14:48:09.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024503667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024675819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.876" endtime="20201117 14:48:09.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.884" endtime="20201117 14:48:09.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.583" endtime="20201117 14:48:09.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.581" endtime="20201117 14:48:09.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.890" level="INFO">${RESULT} = [{'time': 0.024675819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001721520000000018, 'source_diff': 0.0001721520000000018}, {'time': 0.024863208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:09.887" endtime="20201117 14:48:09.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.905" level="INFO">${ACCURACY} = {'diff': [0.0001721520000000018, 0.00017244400000000076, 0.00017236099999999935, 0.0001721940000000005, 0.00017151400000000108, 0.00017170799999999958, 0.00017201400000000158, 0.00017162499999999817, ...</msg>
<status status="PASS" starttime="20201117 14:48:09.891" endtime="20201117 14:48:09.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.909" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.908" endtime="20201117 14:48:09.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.912" level="INFO">VALUE: [0.0001721520000000018, 0.00017244400000000076, 0.00017236099999999935, 0.0001721940000000005, 0.00017151400000000108, 0.00017170799999999958, 0.00017201400000000158, 0.00017162499999999817, 0.0001717499999999983, 0.00017182000000000308, 0.0001719170000000006, 0.00017252799999999818, 0.00017215300000000128, 0.00017244500000000024, 0.0001721940000000005, 0.00017226399999999836, 0.000172097999999999, 0.0001719300000000007, 0.00017205500000000082, 0.00017162500000000164, 0.0001724300000000012, 0.00017208299999999996, 0.00017190300000000103, 0.00017176400000000133, 0.00017220799999999661, 0.00017223599999999922, 0.00017213800000000223, 0.00017248600000000294, 0.00017166700000000035, 0.00017198699999999845, 0.00017187499999999842, 0.00017237499999999892, 0.0001720139999999981, 0.00017168000000000044, 0.00017168099999999992, 0.00017181999999999614, 0.0001725139999999986, 0.0001723750000000024, 0.0001721940000000005, 0.00017152799999999718, 0.00017193100000000017, 0.00017216700000000085, 0.00017220899999999956, 0.00017168099999999992, 0.0001716390000000012, 0.00017220899999999956, 0.00017199999999999854, 0.00017168099999999992, 0.0001716390000000012, 0.00017165300000000078]</msg>
<status status="PASS" starttime="20201117 14:48:09.910" endtime="20201117 14:48:09.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.906" endtime="20201117 14:48:09.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.915" endtime="20201117 14:48:09.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.918" endtime="20201117 14:48:09.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.917" endtime="20201117 14:48:09.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.914" endtime="20201117 14:48:09.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.544" endtime="20201117 14:48:09.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.543" endtime="20201117 14:48:09.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.542" endtime="20201117 14:48:09.940"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.942" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.950" endtime="20201117 14:48:09.971"></status>
</kw>
<msg timestamp="20201117 14:48:09.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.948" endtime="20201117 14:48:09.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.973" endtime="20201117 14:48:09.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.976" endtime="20201117 14:48:09.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.946" endtime="20201117 14:48:09.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.944" endtime="20201117 14:48:09.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.984" endtime="20201117 14:48:10.269"></status>
</kw>
<msg timestamp="20201117 14:48:10.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023555319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023728875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.983" endtime="20201117 14:48:10.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023555319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023728875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.274" endtime="20201117 14:48:10.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.281" endtime="20201117 14:48:10.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.980" endtime="20201117 14:48:10.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.979" endtime="20201117 14:48:10.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.288" level="INFO">${RESULT} = [{'time': 0.023728875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017355599999999832, 'source_diff': 0.00017355599999999832}, {'time': 0.023920194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:10.285" endtime="20201117 14:48:10.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.302" level="INFO">${ACCURACY} = {'diff': [0.00017355599999999832, 0.00017263799999999926, 0.0001733330000000012, 0.00017301400000000258, 0.0001732499999999998, 0.0001727499999999993, 0.00017294500000000074, 0.00017336199999999982, 0...</msg>
<status status="PASS" starttime="20201117 14:48:10.289" endtime="20201117 14:48:10.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.306" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.305" endtime="20201117 14:48:10.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.308" level="INFO">VALUE: [0.00017355599999999832, 0.00017263799999999926, 0.0001733330000000012, 0.00017301400000000258, 0.0001732499999999998, 0.0001727499999999993, 0.00017294500000000074, 0.00017336199999999982, 0.00017273599999999972, 0.00017298599999999997, 0.0001727780000000019, 0.00017281899999999767, 0.00017312499999999967, 0.00017312499999999967, 0.00017350000000000004, 0.00017331899999999817, 0.00017262499999999917, 0.00017258300000000046, 0.0001735139999999996, 0.00017336199999999982, 0.00017277699999999896, 0.00017286099999999985, 0.0001731529999999988, 0.00017316699999999838, 0.0001728330000000007, 0.00017290300000000203, 0.00017288900000000246, 0.00017345799999999786, 0.0001728469999999968, 0.0001725690000000009, 0.00017276399999999886, 0.00017263899999999874, 0.0001731390000000027, 0.00017291599999999865, 0.00017341599999999915, 0.00017322199999999718, 0.0001730139999999991, 0.00017338800000000001, 0.0001731529999999988, 0.0001731940000000015, 0.00017311100000000357, 0.00017352799999999918, 0.00017344400000000176, 0.00017284700000000375, 0.00017270900000000006, 0.00017279100000000547, 0.00017327799999999893, 0.00017258399999999646, 0.0001732499999999998, 0.0001728190000000046]</msg>
<status status="PASS" starttime="20201117 14:48:10.307" endtime="20201117 14:48:10.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.302" endtime="20201117 14:48:10.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.311" endtime="20201117 14:48:10.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.315" endtime="20201117 14:48:10.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.313" endtime="20201117 14:48:10.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.310" endtime="20201117 14:48:10.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.942" endtime="20201117 14:48:10.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.941" endtime="20201117 14:48:10.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.940" endtime="20201117 14:48:10.336"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.338" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.346" endtime="20201117 14:48:10.368"></status>
</kw>
<msg timestamp="20201117 14:48:10.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.345" endtime="20201117 14:48:10.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.370" endtime="20201117 14:48:10.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.372" endtime="20201117 14:48:10.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.342" endtime="20201117 14:48:10.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.340" endtime="20201117 14:48:10.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.381" endtime="20201117 14:48:10.667"></status>
</kw>
<msg timestamp="20201117 14:48:10.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023768111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023942667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.379" endtime="20201117 14:48:10.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023768111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023942667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.671" endtime="20201117 14:48:10.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.679" endtime="20201117 14:48:10.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.377" endtime="20201117 14:48:10.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.375" endtime="20201117 14:48:10.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.686" level="INFO">${RESULT} = [{'time': 0.023942667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017455599999999932, 'source_diff': 0.00017455599999999932}, {'time': 0.024139042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:10.683" endtime="20201117 14:48:10.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.699" level="INFO">${ACCURACY} = {'diff': [0.00017455599999999932, 0.00017426400000000036, 0.00017394400000000226, 0.00017405500000000282, 0.0001740140000000001, 0.0001737500000000003, 0.00017358300000000146, 0.00017398600000000097, ...</msg>
<status status="PASS" starttime="20201117 14:48:10.687" endtime="20201117 14:48:10.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.704" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.703" endtime="20201117 14:48:10.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.706" level="INFO">VALUE: [0.00017455599999999932, 0.00017426400000000036, 0.00017394400000000226, 0.00017405500000000282, 0.0001740140000000001, 0.0001737500000000003, 0.00017358300000000146, 0.00017398600000000097, 0.00017406899999999892, 0.00017441699999999963, 0.00017413900000000024, 0.000174195000000002, 0.0001738330000000017, 0.00017450000000000104, 0.00017362500000000017, 0.0001739590000000013, 0.000173889, 0.00017412500000000067, 0.00017418000000000294, 0.00017437500000000092, 0.00017404099999999978, 0.00017441699999999963, 0.00017423600000000122, 0.00017437499999999745, 0.00017427799999999993, 0.00017408300000000196, 0.00017369399999999854, 0.00017436099999999788, 0.00017400000000000054, 0.00017427799999999993, 0.0001740140000000001, 0.000173791999999999, 0.0001744309999999992, 0.00017444499999999877, 0.0001741529999999998, 0.00017409700000000153, 0.00017418099999999895, 0.0001738200000000016, 0.0001735139999999996, 0.00017384700000000475, 0.00017377799999999943, 0.0001742500000000008, 0.0001740829999999985, 0.00017376399999999986, 0.00017388899999999652, 0.00017448600000000147, 0.00017402799999999968, 0.0001743339999999982, 0.000173582999999998, 0.00017379099999999953]</msg>
<status status="PASS" starttime="20201117 14:48:10.705" endtime="20201117 14:48:10.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.700" endtime="20201117 14:48:10.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.709" endtime="20201117 14:48:10.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.712" endtime="20201117 14:48:10.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.711" endtime="20201117 14:48:10.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.707" endtime="20201117 14:48:10.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.339" endtime="20201117 14:48:10.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.337" endtime="20201117 14:48:10.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.336" endtime="20201117 14:48:10.734"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.736" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.744" endtime="20201117 14:48:10.766"></status>
</kw>
<msg timestamp="20201117 14:48:10.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.742" endtime="20201117 14:48:10.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.767" endtime="20201117 14:48:10.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.770" endtime="20201117 14:48:10.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.740" endtime="20201117 14:48:10.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.738" endtime="20201117 14:48:10.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.779" endtime="20201117 14:48:11.065"></status>
</kw>
<msg timestamp="20201117 14:48:11.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023833458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024008917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.777" endtime="20201117 14:48:11.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023833458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024008917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.069" endtime="20201117 14:48:11.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.077" endtime="20201117 14:48:11.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.775" endtime="20201117 14:48:11.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.773" endtime="20201117 14:48:11.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.084" level="INFO">${RESULT} = [{'time': 0.024008917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001754590000000028, 'source_diff': 0.0001754590000000028}, {'time': 0.024207222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:11.080" endtime="20201117 14:48:11.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.097" level="INFO">${ACCURACY} = {'diff': [0.0001754590000000028, 0.00017497199999999893, 0.00017459700000000203, 0.000174792, 0.000174792, 0.0001750829999999995, 0.00017463899999999727, 0.00017545899999999934, 0.00017490300000000056...</msg>
<status status="PASS" starttime="20201117 14:48:11.085" endtime="20201117 14:48:11.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.101" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.100" endtime="20201117 14:48:11.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.104" level="INFO">VALUE: [0.0001754590000000028, 0.00017497199999999893, 0.00017459700000000203, 0.000174792, 0.000174792, 0.0001750829999999995, 0.00017463899999999727, 0.00017545899999999934, 0.00017490300000000056, 0.00017476400000000086, 0.00017520900000000256, 0.0001750699999999994, 0.00017466699999999988, 0.0001754440000000003, 0.00017481999999999914, 0.00017490200000000108, 0.00017502800000000068, 0.00017533299999999974, 0.00017491600000000065, 0.00017455599999999932, 0.00017502800000000068, 0.00017522200000000265, 0.00017459699999999856, 0.00017459799999999803, 0.0001747089999999986, 0.00017533299999999974, 0.00017459699999999856, 0.00017466699999999988, 0.00017474999999999782, 0.00017534799999999878, 0.0001745270000000007, 0.0001750140000000011, 0.00017509699999999906, 0.00017538899999999802, 0.00017472200000000215, 0.000174792, 0.0001749590000000023, 0.00017504200000000025, 0.0001754590000000028, 0.0001754579999999964, 0.0001747500000000013, 0.00017484799999999828, 0.0001749720000000024, 0.00017529100000000103, 0.00017541599999999768, 0.0001746950000000025, 0.00017477800000000043, 0.00017523600000000222, 0.0001748469999999988, 0.00017454100000000028]</msg>
<status status="PASS" starttime="20201117 14:48:11.102" endtime="20201117 14:48:11.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.098" endtime="20201117 14:48:11.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.107" endtime="20201117 14:48:11.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.110" endtime="20201117 14:48:11.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.108" endtime="20201117 14:48:11.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.105" endtime="20201117 14:48:11.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.737" endtime="20201117 14:48:11.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.735" endtime="20201117 14:48:11.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.734" endtime="20201117 14:48:11.131"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.133" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.141" endtime="20201117 14:48:11.164"></status>
</kw>
<msg timestamp="20201117 14:48:11.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.140" endtime="20201117 14:48:11.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.166" endtime="20201117 14:48:11.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.168" endtime="20201117 14:48:11.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.137" endtime="20201117 14:48:11.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.135" endtime="20201117 14:48:11.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.177" endtime="20201117 14:48:11.463"></status>
</kw>
<msg timestamp="20201117 14:48:11.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024480792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024657014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.176" endtime="20201117 14:48:11.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024480792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024657014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.467" endtime="20201117 14:48:11.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.475" endtime="20201117 14:48:11.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.173" endtime="20201117 14:48:11.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.172" endtime="20201117 14:48:11.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.482" level="INFO">${RESULT} = [{'time': 0.024657014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017622200000000018, 'source_diff': 0.00017622200000000018}, {'time': 0.024850375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:11.478" endtime="20201117 14:48:11.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.496" level="INFO">${ACCURACY} = {'diff': [0.00017622200000000018, 0.00017620800000000061, 0.0001760700000000004, 0.0001763470000000003, 0.00017572299999999916, 0.00017556900000000042, 0.0001763470000000003, 0.00017615299999999834, 0...</msg>
<status status="PASS" starttime="20201117 14:48:11.483" endtime="20201117 14:48:11.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.501" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.500" endtime="20201117 14:48:11.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.503" level="INFO">VALUE: [0.00017622200000000018, 0.00017620800000000061, 0.0001760700000000004, 0.0001763470000000003, 0.00017572299999999916, 0.00017556900000000042, 0.0001763470000000003, 0.00017615299999999834, 0.00017569500000000002, 0.00017609700000000006, 0.0001757089999999996, 0.00017608399999999996, 0.00017588899999999852, 0.00017582000000000014, 0.0001760700000000004, 0.00017624999999999932, 0.00017561099999999913, 0.00017586100000000285, 0.00017622299999999966, 0.00017581900000000067, 0.0001760830000000005, 0.00017576400000000186, 0.00017556900000000042, 0.0001756249999999987, 0.00017587499999999895, 0.00017595800000000036, 0.0001759859999999995, 0.00017558399999999946, 0.00017615299999999834, 0.00017586100000000285, 0.00017651399999999914, 0.00017615299999999834, 0.00017623599999999975, 0.00017609799999999953, 0.00017622200000000365, 0.00017587499999999895, 0.00017568099999999698, 0.0001756249999999987, 0.00017647199999999696, 0.00017574999999999535, 0.00017594399999999732, 0.00017561099999999913, 0.00017626400000000236, 0.00017618099999999748, 0.00017623599999999628, 0.00017561099999999913, 0.00017574999999999535, 0.0001761669999999979, 0.00017577800000000143, 0.00017594399999999732]</msg>
<status status="PASS" starttime="20201117 14:48:11.502" endtime="20201117 14:48:11.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.497" endtime="20201117 14:48:11.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.506" endtime="20201117 14:48:11.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.509" endtime="20201117 14:48:11.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.508" endtime="20201117 14:48:11.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.504" endtime="20201117 14:48:11.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.134" endtime="20201117 14:48:11.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.132" endtime="20201117 14:48:11.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.131" endtime="20201117 14:48:11.530"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.533" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.541" endtime="20201117 14:48:11.563"></status>
</kw>
<msg timestamp="20201117 14:48:11.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.540" endtime="20201117 14:48:11.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.564" endtime="20201117 14:48:11.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.567" endtime="20201117 14:48:11.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.537" endtime="20201117 14:48:11.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.535" endtime="20201117 14:48:11.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.576" endtime="20201117 14:48:11.861"></status>
</kw>
<msg timestamp="20201117 14:48:11.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02402425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024201667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:11.574" endtime="20201117 14:48:11.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02402425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024201667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:11.865" endtime="20201117 14:48:11.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.873" endtime="20201117 14:48:11.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.572" endtime="20201117 14:48:11.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.570" endtime="20201117 14:48:11.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.879" level="INFO">${RESULT} = [{'time': 0.024201667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017741699999999916, 'source_diff': 0.00017741699999999916}, {'time': 0.024393097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:11.876" endtime="20201117 14:48:11.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.892" level="INFO">${ACCURACY} = {'diff': [0.00017741699999999916, 0.0001774029999999996, 0.0001767090000000006, 0.0001768470000000008, 0.00017720799999999814, 0.00017747199999999796, 0.0001772090000000011, 0.00017672200000000068, 0....</msg>
<status status="PASS" starttime="20201117 14:48:11.880" endtime="20201117 14:48:11.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.897" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.896" endtime="20201117 14:48:11.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.899" level="INFO">VALUE: [0.00017741699999999916, 0.0001774029999999996, 0.0001767090000000006, 0.0001768470000000008, 0.00017720799999999814, 0.00017747199999999796, 0.0001772090000000011, 0.00017672200000000068, 0.00017729199999999903, 0.0001765409999999988, 0.00017668099999999798, 0.00017659700000000056, 0.00017673600000000025, 0.00017659700000000056, 0.00017686199999999985, 0.00017715299999999934, 0.0001769860000000005, 0.00017709800000000053, 0.00017682000000000114, 0.00017702800000000268, 0.00017661100000000013, 0.0001769730000000004, 0.00017702799999999921, 0.00017679199999999853, 0.00017686100000000038, 0.0001771380000000003, 0.00017697200000000093, 0.00017745800000000186, 0.000177486000000001, 0.0001774029999999996, 0.00017705599999999835, 0.00017704199999999878, 0.00017743099999999873, 0.00017741699999999916, 0.00017673600000000025, 0.00017661100000000013, 0.00017747199999999796, 0.0001767779999999955, 0.00017668099999999798, 0.00017744400000000576, 0.0001769170000000056, 0.0001770140000000031, 0.00017661100000000013, 0.00017737500000000045, 0.00017658299999999405, 0.00017741699999999916, 0.00017659700000000056, 0.00017745899999999787, 0.0001766379999999998, 0.00017747199999999796]</msg>
<status status="PASS" starttime="20201117 14:48:11.898" endtime="20201117 14:48:11.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.893" endtime="20201117 14:48:11.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.902" endtime="20201117 14:48:11.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.906" endtime="20201117 14:48:11.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.904" endtime="20201117 14:48:11.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.901" endtime="20201117 14:48:11.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.533" endtime="20201117 14:48:11.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.531" endtime="20201117 14:48:11.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.531" endtime="20201117 14:48:11.927"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.930" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.937" endtime="20201117 14:48:11.959"></status>
</kw>
<msg timestamp="20201117 14:48:11.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.936" endtime="20201117 14:48:11.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.961" endtime="20201117 14:48:11.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.963" endtime="20201117 14:48:11.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.934" endtime="20201117 14:48:11.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.931" endtime="20201117 14:48:11.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.972" endtime="20201117 14:48:12.258"></status>
</kw>
<msg timestamp="20201117 14:48:12.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02355125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023729028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:11.971" endtime="20201117 14:48:12.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02355125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023729028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:12.262" endtime="20201117 14:48:12.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.270" endtime="20201117 14:48:12.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.968" endtime="20201117 14:48:12.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.966" endtime="20201117 14:48:12.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.276" level="INFO">${RESULT} = [{'time': 0.023729028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017777799999999996, 'source_diff': 0.00017777799999999996}, {'time': 0.023923389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:12.273" endtime="20201117 14:48:12.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.289" level="INFO">${ACCURACY} = {'diff': [0.00017777799999999996, 0.00017752799999999971, 0.00017851400000000114, 0.0001776799999999995, 0.0001779310000000027, 0.00017761099999999766, 0.00017823600000000175, 0.000177583000000002, 0....</msg>
<status status="PASS" starttime="20201117 14:48:12.277" endtime="20201117 14:48:12.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.294" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.293" endtime="20201117 14:48:12.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.296" level="INFO">VALUE: [0.00017777799999999996, 0.00017752799999999971, 0.00017851400000000114, 0.0001776799999999995, 0.0001779310000000027, 0.00017761099999999766, 0.00017823600000000175, 0.000177583000000002, 0.00017792999999999976, 0.00017802800000000021, 0.00017745900000000134, 0.00017787500000000095, 0.0001785700000000029, 0.0001776250000000007, 0.00017833299999999927, 0.00017756999999999842, 0.00017806899999999945, 0.0001776669999999994, 0.0001776530000000033, 0.0001778609999999979, 0.00017800000000000107, 0.00017845899999999887, 0.00017833299999999927, 0.00017834800000000178, 0.00017820899999999862, 0.00017788799999999758, 0.00017783299999999877, 0.00017822199999999871, 0.00017820799999999914, 0.00017780499999999963, 0.00017752799999999971, 0.00017815300000000034, 0.00017782000000000214, 0.00017797199999999846, 0.00017790200000000062, 0.0001775409999999998, 0.000178486000000002, 0.00017792999999999976, 0.00017793099999999923, 0.00017776399999999692, 0.00017770800000000558, 0.00017772200000000515, 0.00017804200000000325, 0.00017843000000000026, 0.00017844399999999982, 0.00017847199999999896, 0.0001783329999999958, 0.00017756900000000242, 0.00017826400000000436, 0.00017830600000000307]</msg>
<status status="PASS" starttime="20201117 14:48:12.295" endtime="20201117 14:48:12.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.290" endtime="20201117 14:48:12.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.304" endtime="20201117 14:48:12.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.307" endtime="20201117 14:48:12.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.306" endtime="20201117 14:48:12.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.302" endtime="20201117 14:48:12.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.930" endtime="20201117 14:48:12.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.928" endtime="20201117 14:48:12.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.928" endtime="20201117 14:48:12.328"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.331" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.339" endtime="20201117 14:48:12.361"></status>
</kw>
<msg timestamp="20201117 14:48:12.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.337" endtime="20201117 14:48:12.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.362" endtime="20201117 14:48:12.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.365" endtime="20201117 14:48:12.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.335" endtime="20201117 14:48:12.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.332" endtime="20201117 14:48:12.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.373" endtime="20201117 14:48:12.658"></status>
</kw>
<msg timestamp="20201117 14:48:12.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023553153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023732111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.372" endtime="20201117 14:48:12.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023553153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023732111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.662" endtime="20201117 14:48:12.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.670" endtime="20201117 14:48:12.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.369" endtime="20201117 14:48:12.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.368" endtime="20201117 14:48:12.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.677" level="INFO">${RESULT} = [{'time': 0.023732111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001789579999999999, 'source_diff': 0.0001789579999999999}, {'time': 0.023929444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:12.673" endtime="20201117 14:48:12.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.690" level="INFO">${ACCURACY} = {'diff': [0.0001789579999999999, 0.00017891600000000119, 0.00017926399999999842, 0.000179277999999998, 0.00017877800000000096, 0.00017916599999999797, 0.00017893100000000023, 0.00017902699999999827, 0...</msg>
<status status="PASS" starttime="20201117 14:48:12.678" endtime="20201117 14:48:12.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.694" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.693" endtime="20201117 14:48:12.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.697" level="INFO">VALUE: [0.0001789579999999999, 0.00017891600000000119, 0.00017926399999999842, 0.000179277999999998, 0.00017877800000000096, 0.00017916599999999797, 0.00017893100000000023, 0.00017902699999999827, 0.0001785969999999991, 0.0001786389999999978, 0.00017883299999999977, 0.00017906900000000045, 0.000179277999999998, 0.00017951399999999867, 0.00017944400000000083, 0.00017898599999999903, 0.0001790410000000013, 0.00017891700000000066, 0.00017952800000000171, 0.00017895900000000284, 0.00017893100000000023, 0.00017872200000000268, 0.00017924999999999885, 0.00017933300000000027, 0.00017913900000000177, 0.00017940200000000212, 0.00017883299999999977, 0.00017941700000000116, 0.000179277999999998, 0.00017911099999999916, 0.00017937500000000245, 0.0001788609999999989, 0.00017850000000000157, 0.00017934699999999984, 0.00017898599999999903, 0.00017891599999999772, 0.00017947199999999996, 0.0001794030000000016, 0.000178874999999995, 0.0001794030000000016, 0.00017902799999999774, 0.00017891700000000066, 0.0001794030000000016, 0.00017883300000000324, 0.00017934699999999637, 0.0001789030000000011, 0.00017888800000000205, 0.00017870799999999964, 0.00017901399999999817, 0.00017886100000000238]</msg>
<status status="PASS" starttime="20201117 14:48:12.695" endtime="20201117 14:48:12.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.691" endtime="20201117 14:48:12.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.700" endtime="20201117 14:48:12.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.704" endtime="20201117 14:48:12.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.702" endtime="20201117 14:48:12.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.699" endtime="20201117 14:48:12.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.331" endtime="20201117 14:48:12.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.329" endtime="20201117 14:48:12.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.329" endtime="20201117 14:48:12.725"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.727" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.735" endtime="20201117 14:48:12.758"></status>
</kw>
<msg timestamp="20201117 14:48:12.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.734" endtime="20201117 14:48:12.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.759" endtime="20201117 14:48:12.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.762" endtime="20201117 14:48:12.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.731" endtime="20201117 14:48:12.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.729" endtime="20201117 14:48:12.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.771" endtime="20201117 14:48:13.055"></status>
</kw>
<msg timestamp="20201117 14:48:13.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024505236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024685625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.769" endtime="20201117 14:48:13.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024505236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024685625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.060" endtime="20201117 14:48:13.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.068" endtime="20201117 14:48:13.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.767" endtime="20201117 14:48:13.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.765" endtime="20201117 14:48:13.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:13.074" level="INFO">${RESULT} = [{'time': 0.024685625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018038899999999955, 'source_diff': 0.00018038899999999955}, {'time': 0.024897903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:13.071" endtime="20201117 14:48:13.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:13.089" level="INFO">${ACCURACY} = {'diff': [0.00018038899999999955, 0.00017987499999999948, 0.00017965200000000237, 0.00018033300000000127, 0.00017970900000000012, 0.00017958300000000052, 0.00017987500000000295, 0.00017997200000000046...</msg>
<status status="PASS" starttime="20201117 14:48:13.075" endtime="20201117 14:48:13.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.093" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:48:13.092" endtime="20201117 14:48:13.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.096" level="INFO">VALUE: [0.00018038899999999955, 0.00017987499999999948, 0.00017965200000000237, 0.00018033300000000127, 0.00017970900000000012, 0.00017958300000000052, 0.00017987500000000295, 0.00017997200000000046, 0.00018006900000000145, 0.00018004199999999831, 0.00017993000000000176, 0.00018011100000000016, 0.00018034700000000084, 0.00017954200000000128, 0.00018055500000000238, 0.0001805970000000011, 0.00018024999999999985, 0.00017991600000000219, 0.0001798609999999999, 0.0001799450000000008, 0.00018015299999999887, 0.00018019400000000158, 0.00017967999999999804, 0.0001800840000000005, 0.00017979199999999806, 0.00017974999999999935, 0.00017984700000000034, 0.00017993099999999776, 0.00017970800000000065, 0.00018047200000000096, 0.00018002799999999874, 0.00017998600000000003, 0.00018020800000000115, 0.0001799030000000021, 0.0001796670000000014, 0.00017976299999999945, 0.00018051399999999967, 0.00017973599999999978, 0.00017994399999999439, 0.00018002799999999874, 0.00018040199999999618, 0.00018002799999999874, 0.00018033399999999727, 0.00018026400000000636, 0.00018009699999999712, 0.00017972200000000021, 0.00018041699999999522, 0.00017984799999999634, 0.00017984699999999687, 0.00018001399999999917]</msg>
<status status="PASS" starttime="20201117 14:48:13.094" endtime="20201117 14:48:13.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.090" endtime="20201117 14:48:13.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.099" endtime="20201117 14:48:13.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.102" endtime="20201117 14:48:13.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.100" endtime="20201117 14:48:13.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.097" endtime="20201117 14:48:13.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.728" endtime="20201117 14:48:13.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.726" endtime="20201117 14:48:13.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.725" endtime="20201117 14:48:13.123"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.126" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.133" endtime="20201117 14:48:13.156"></status>
</kw>
<msg timestamp="20201117 14:48:13.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.132" endtime="20201117 14:48:13.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.157" endtime="20201117 14:48:13.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.160" endtime="20201117 14:48:13.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.129" endtime="20201117 14:48:13.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.127" endtime="20201117 14:48:13.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.169" endtime="20201117 14:48:13.454"></status>
</kw>
<msg timestamp="20201117 14:48:13.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023751319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0239325, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:13.167" endtime="20201117 14:48:13.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023751319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0239325, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:13.458" endtime="20201117 14:48:13.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.467" endtime="20201117 14:48:13.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.165" endtime="20201117 14:48:13.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.163" endtime="20201117 14:48:13.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:13.474" level="INFO">${RESULT} = [{'time': 0.0239325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000181180999999999, 'source_diff': 0.000181180999999999}, {'time': 0.024138792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0...</msg>
<status status="PASS" starttime="20201117 14:48:13.471" endtime="20201117 14:48:13.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:13.487" level="INFO">${ACCURACY} = {'diff': [0.000181180999999999, 0.00018138900000000055, 0.00018117999999999954, 0.0001806389999999998, 0.00018056999999999795, 0.00018062500000000023, 0.00018106899999999898, 0.00018054199999999881, 0...</msg>
<status status="PASS" starttime="20201117 14:48:13.475" endtime="20201117 14:48:13.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.492" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:48:13.491" endtime="20201117 14:48:13.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.494" level="INFO">VALUE: [0.000181180999999999, 0.00018138900000000055, 0.00018117999999999954, 0.0001806389999999998, 0.00018056999999999795, 0.00018062500000000023, 0.00018106899999999898, 0.00018054199999999881, 0.0001811939999999991, 0.00018083300000000177, 0.00018122200000000172, 0.00018063800000000033, 0.00018145900000000187, 0.00018068100000000198, 0.0001809169999999992, 0.00018076399999999992, 0.0001806389999999998, 0.00018120900000000162, 0.00018072200000000122, 0.00018069500000000155, 0.00018094400000000233, 0.00018090299999999962, 0.00018054199999999881, 0.00018080499999999916, 0.00018119499999999858, 0.0001809589999999979, 0.00018069400000000208, 0.0001806389999999998, 0.00018092999999999929, 0.0001813749999999975, 0.00018067999999999904, 0.00018145799999999893, 0.00018126400000000042, 0.0001808329999999983, 0.00018065299999999937, 0.0001808329999999983, 0.00018133399999999827, 0.00018088800000000405, 0.00018048600000000053, 0.00018101400000000017, 0.00018094499999999486, 0.00018084799999999734, 0.0001811529999999964, 0.00018130499999999966, 0.00018119399999999564, 0.00018059700000000456, 0.00018120800000000215, 0.00018131899999999923, 0.00018126400000000042, 0.0001814580000000024]</msg>
<status status="PASS" starttime="20201117 14:48:13.493" endtime="20201117 14:48:13.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.488" endtime="20201117 14:48:13.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.497" endtime="20201117 14:48:13.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.501" endtime="20201117 14:48:13.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.499" endtime="20201117 14:48:13.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.496" endtime="20201117 14:48:13.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.126" endtime="20201117 14:48:13.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.124" endtime="20201117 14:48:13.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.124" endtime="20201117 14:48:13.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.583" endtime="20201117 14:48:13.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.526" endtime="20201117 14:48:13.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.525" endtime="20201117 14:48:13.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.523" endtime="20201117 14:48:13.547"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:47:33.514" endtime="20201117 14:48:13.547" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:46:52.232" endtime="20201117 14:48:13.551"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201117 14:46:50.151" endtime="20201117 14:48:13.563"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_saml10-xpro</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
