<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:59:42.382" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:42.961" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:42.970" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:59:44.084" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:42.960" endtime="20201115 22:59:44.084"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.087" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:59:44.085" endtime="20201115 22:59:44.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.958" endtime="20201115 22:59:44.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:44.090" endtime="20201115 22:59:44.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.089" endtime="20201115 22:59:44.274"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.288" endtime="20201115 22:59:44.302"></status>
</kw>
<msg timestamp="20201115 22:59:44.303" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.285" endtime="20201115 22:59:44.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.308" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.305" endtime="20201115 22:59:44.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.314" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:44.310" endtime="20201115 22:59:44.315"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.283" endtime="20201115 22:59:44.316"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.281" endtime="20201115 22:59:44.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.280" endtime="20201115 22:59:44.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:44.327" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:44.326" endtime="20201115 22:59:44.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.321" endtime="20201115 22:59:44.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.279" endtime="20201115 22:59:44.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.278" endtime="20201115 22:59:44.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.331" endtime="20201115 22:59:44.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.277" endtime="20201115 22:59:44.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.336" endtime="20201115 22:59:44.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.275" endtime="20201115 22:59:44.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.956" endtime="20201115 22:59:44.341"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:44.354" endtime="20201115 22:59:44.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.351" endtime="20201115 22:59:44.377"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.403" endtime="20201115 22:59:44.415"></status>
</kw>
<msg timestamp="20201115 22:59:44.416" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.401" endtime="20201115 22:59:44.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.418" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.417" endtime="20201115 22:59:44.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.421" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:44.419" endtime="20201115 22:59:44.421"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.396" endtime="20201115 22:59:44.422"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.391" endtime="20201115 22:59:44.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.387" endtime="20201115 22:59:44.423"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:44.426" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:44.426" endtime="20201115 22:59:44.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.424" endtime="20201115 22:59:44.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.385" endtime="20201115 22:59:44.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.384" endtime="20201115 22:59:44.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.428" endtime="20201115 22:59:44.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.381" endtime="20201115 22:59:44.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.378" endtime="20201115 22:59:44.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.348" endtime="20201115 22:59:44.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.438" endtime="20201115 22:59:44.446"></status>
</kw>
<msg timestamp="20201115 22:59:44.447" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.436" endtime="20201115 22:59:44.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.449" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.448" endtime="20201115 22:59:44.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.450" endtime="20201115 22:59:44.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.434" endtime="20201115 22:59:44.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.432" endtime="20201115 22:59:44.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.457" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:59:44.456" endtime="20201115 22:59:44.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.459" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:59:44.458" endtime="20201115 22:59:44.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.453" endtime="20201115 22:59:44.460"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:59:44.342" endtime="20201115 22:59:44.461" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:42.495" endtime="20201115 22:59:44.463"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.516" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:44.525" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:59:45.636" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:44.515" endtime="20201115 22:59:45.636"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.639" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:59:45.637" endtime="20201115 22:59:45.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.514" endtime="20201115 22:59:45.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:45.642" endtime="20201115 22:59:45.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.641" endtime="20201115 22:59:45.892"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.917" endtime="20201115 22:59:45.931"></status>
</kw>
<msg timestamp="20201115 22:59:45.932" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:45.914" endtime="20201115 22:59:45.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.934" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:45.933" endtime="20201115 22:59:45.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.937" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:45.935" endtime="20201115 22:59:45.938"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:45.909" endtime="20201115 22:59:45.938"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:45.904" endtime="20201115 22:59:45.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.902" endtime="20201115 22:59:45.939"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:45.943" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:45.942" endtime="20201115 22:59:45.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.940" endtime="20201115 22:59:45.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.900" endtime="20201115 22:59:45.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.899" endtime="20201115 22:59:45.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.945" endtime="20201115 22:59:45.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.896" endtime="20201115 22:59:45.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.947" endtime="20201115 22:59:45.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.893" endtime="20201115 22:59:45.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.512" endtime="20201115 22:59:45.950"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:45.957" endtime="20201115 22:59:45.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.955" endtime="20201115 22:59:45.977"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.990" endtime="20201115 22:59:46.002"></status>
</kw>
<msg timestamp="20201115 22:59:46.003" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:45.988" endtime="20201115 22:59:46.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.005" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.004" endtime="20201115 22:59:46.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.008" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:46.006" endtime="20201115 22:59:46.009"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:45.986" endtime="20201115 22:59:46.009"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:45.983" endtime="20201115 22:59:46.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.982" endtime="20201115 22:59:46.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:46.014" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:46.013" endtime="20201115 22:59:46.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.011" endtime="20201115 22:59:46.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.981" endtime="20201115 22:59:46.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.981" endtime="20201115 22:59:46.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.015" endtime="20201115 22:59:46.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.980" endtime="20201115 22:59:46.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.978" endtime="20201115 22:59:46.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.953" endtime="20201115 22:59:46.018"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.022" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.031" endtime="20201115 22:59:46.047"></status>
</kw>
<msg timestamp="20201115 22:59:46.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.030" endtime="20201115 22:59:46.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.049" endtime="20201115 22:59:46.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.051" endtime="20201115 22:59:46.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.026" endtime="20201115 22:59:46.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.024" endtime="20201115 22:59:46.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.060" endtime="20201115 22:59:46.350"></status>
</kw>
<msg timestamp="20201115 22:59:46.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065958694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066003042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.059" endtime="20201115 22:59:46.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065958694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066003042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.355" endtime="20201115 22:59:46.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.363" endtime="20201115 22:59:46.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.056" endtime="20201115 22:59:46.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.054" endtime="20201115 22:59:46.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:46.369" level="INFO">${RESULT} = [{'time': 0.066003042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.434799999999961e-05, 'source_diff': 4.434799999999961e-05}, {'time': 0.066096597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:46.366" endtime="20201115 22:59:46.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:46.383" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:46.371" endtime="20201115 22:59:46.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.387" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 22:59:46.386" endtime="20201115 22:59:46.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.390" level="INFO">VALUE: [4.434799999999961e-05, 4.350000000000187e-05, 4.349999999998799e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.347200000000273e-05, 4.348599999999536e-05, 4.350000000000187e-05, 4.348599999999536e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.347200000000273e-05, 4.344400000000359e-05, 4.344400000000359e-05, 4.350000000000187e-05, 4.347200000000273e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.345799999999622e-05, 4.348600000000924e-05, 4.348600000000924e-05, 4.350000000000187e-05, 4.349999999998799e-05, 4.348599999999536e-05, 4.348599999999536e-05, 4.345799999999622e-05, 4.350000000000187e-05, 4.351400000000838e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.35139999999945e-05, 4.350000000000187e-05, 4.348599999999536e-05, 4.350000000000187e-05, 4.352800000000101e-05, 4.3486999999994835e-05, 4.347200000000273e-05, 4.350000000000187e-05, 4.3486999999994835e-05, 4.3458999999995696e-05, 4.347200000000273e-05, 4.345799999999622e-05, 4.348600000000924e-05, 4.348599999999536e-05, 4.347199999998885e-05, 4.348599999999536e-05, 4.347200000000273e-05, 4.348599999999536e-05, 4.347199999998885e-05, 4.348600000000924e-05]</msg>
<status status="PASS" starttime="20201115 22:59:46.389" endtime="20201115 22:59:46.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.384" endtime="20201115 22:59:46.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.393" endtime="20201115 22:59:46.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:46.396" endtime="20201115 22:59:46.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.395" endtime="20201115 22:59:46.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.391" endtime="20201115 22:59:46.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.023" endtime="20201115 22:59:46.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.021" endtime="20201115 22:59:46.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.020" endtime="20201115 22:59:46.418"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.420" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.429" endtime="20201115 22:59:46.445"></status>
</kw>
<msg timestamp="20201115 22:59:46.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.426" endtime="20201115 22:59:46.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.446" endtime="20201115 22:59:46.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.449" endtime="20201115 22:59:46.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.424" endtime="20201115 22:59:46.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.422" endtime="20201115 22:59:46.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.458" endtime="20201115 22:59:46.743"></status>
</kw>
<msg timestamp="20201115 22:59:46.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024333431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024377736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.456" endtime="20201115 22:59:46.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024333431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024377736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.747" endtime="20201115 22:59:46.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.756" endtime="20201115 22:59:46.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.454" endtime="20201115 22:59:46.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.452" endtime="20201115 22:59:46.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:46.762" level="INFO">${RESULT} = [{'time': 0.024377736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4305000000001427e-05, 'source_diff': 4.4305000000001427e-05}, {'time': 0.024469889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:46.759" endtime="20201115 22:59:46.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:46.776" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:46.763" endtime="20201115 22:59:46.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.780" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 22:59:46.779" endtime="20201115 22:59:46.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.783" level="INFO">VALUE: [4.4305000000001427e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.34999999999984e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.351400000000144e-05, 4.3444999999999595e-05, 4.3472999999998735e-05, 4.34860000000023e-05, 4.3444999999999595e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.351400000000144e-05, 4.351400000000144e-05, 4.34860000000023e-05, 4.351400000000144e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.352800000000101e-05, 4.351399999999797e-05, 4.34860000000023e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.351400000000144e-05, 4.348599999999883e-05, 4.345800000000316e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.35129999999985e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.350000000000187e-05]</msg>
<status status="PASS" starttime="20201115 22:59:46.781" endtime="20201115 22:59:46.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.777" endtime="20201115 22:59:46.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.786" endtime="20201115 22:59:46.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:46.789" endtime="20201115 22:59:46.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.788" endtime="20201115 22:59:46.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.784" endtime="20201115 22:59:46.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.421" endtime="20201115 22:59:46.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.419" endtime="20201115 22:59:46.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.418" endtime="20201115 22:59:46.810"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.813" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.821" endtime="20201115 22:59:46.837"></status>
</kw>
<msg timestamp="20201115 22:59:46.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.819" endtime="20201115 22:59:46.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.839" endtime="20201115 22:59:46.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.841" endtime="20201115 22:59:46.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.817" endtime="20201115 22:59:46.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.815" endtime="20201115 22:59:46.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.851" endtime="20201115 22:59:47.136"></status>
</kw>
<msg timestamp="20201115 22:59:47.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024126403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024170694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.849" endtime="20201115 22:59:47.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024126403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024170694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.141" endtime="20201115 22:59:47.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.149" endtime="20201115 22:59:47.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.846" endtime="20201115 22:59:47.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.844" endtime="20201115 22:59:47.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:47.155" level="INFO">${RESULT} = [{'time': 0.024170694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429099999999839e-05, 'source_diff': 4.429099999999839e-05}, {'time': 0.024261917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:47.152" endtime="20201115 22:59:47.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:47.169" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:47.156" endtime="20201115 22:59:47.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.174" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 22:59:47.173" endtime="20201115 22:59:47.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.176" level="INFO">VALUE: [4.429099999999839e-05, 4.34860000000023e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.351400000000144e-05, 4.3569000000000246e-05, 4.347199999999926e-05, 4.3486999999998305e-05, 4.350000000000187e-05, 4.351400000000144e-05, 4.350000000000187e-05, 4.3486999999998305e-05, 4.3444999999999595e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.345799999999969e-05, 4.348599999999883e-05, 4.3431000000000025e-05, 4.347200000000273e-05, 4.350000000000187e-05, 4.345800000000316e-05, 4.347200000000273e-05, 4.352799999999754e-05, 4.3486999999998305e-05, 4.34999999999984e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.347200000000273e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.351400000000144e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.351400000000144e-05, 4.345799999999969e-05, 4.34999999999984e-05, 4.352799999999754e-05, 4.345799999999969e-05, 4.351400000000144e-05, 4.347200000000273e-05, 4.34860000000023e-05, 4.347199999999926e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.34999999999984e-05]</msg>
<status status="PASS" starttime="20201115 22:59:47.175" endtime="20201115 22:59:47.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.170" endtime="20201115 22:59:47.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.180" endtime="20201115 22:59:47.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:47.183" endtime="20201115 22:59:47.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.181" endtime="20201115 22:59:47.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.178" endtime="20201115 22:59:47.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.813" endtime="20201115 22:59:47.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.811" endtime="20201115 22:59:47.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.811" endtime="20201115 22:59:47.204"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.206" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.214" endtime="20201115 22:59:47.230"></status>
</kw>
<msg timestamp="20201115 22:59:47.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.213" endtime="20201115 22:59:47.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.232" endtime="20201115 22:59:47.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.234" endtime="20201115 22:59:47.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.210" endtime="20201115 22:59:47.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.208" endtime="20201115 22:59:47.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.243" endtime="20201115 22:59:47.530"></status>
</kw>
<msg timestamp="20201115 22:59:47.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023247292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023291625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.242" endtime="20201115 22:59:47.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023247292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023291625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.534" endtime="20201115 22:59:47.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.542" endtime="20201115 22:59:47.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.239" endtime="20201115 22:59:47.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.238" endtime="20201115 22:59:47.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:47.549" level="INFO">${RESULT} = [{'time': 0.023291625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4333000000000566e-05, 'source_diff': 4.4333000000000566e-05}, {'time': 0.023379403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:47.545" endtime="20201115 22:59:47.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:47.562" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:47.550" endtime="20201115 22:59:47.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.567" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 22:59:47.566" endtime="20201115 22:59:47.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.570" level="INFO">VALUE: [4.4333000000000566e-05, 4.34999999999984e-05, 4.354200000000058e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.3458999999999165e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.351400000000144e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.3417000000000455e-05, 4.354200000000058e-05, 4.34999999999984e-05, 4.347200000000273e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.34860000000023e-05, 4.347199999999926e-05, 4.3472999999998735e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.3389000000001315e-05, 4.351400000000144e-05, 4.3472999999998735e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.34860000000023e-05, 4.34860000000023e-05, 4.352799999999754e-05, 4.34860000000023e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.356999999999972e-05, 4.34999999999984e-05, 4.3417000000000455e-05, 4.3458999999999165e-05, 4.34999999999984e-05, 4.344400000000012e-05, 4.3472999999998735e-05, 4.34860000000023e-05, 4.351400000000144e-05, 4.34860000000023e-05, 4.343000000000055e-05, 4.34860000000023e-05, 4.347199999999926e-05]</msg>
<status status="PASS" starttime="20201115 22:59:47.568" endtime="20201115 22:59:47.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.563" endtime="20201115 22:59:47.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.573" endtime="20201115 22:59:47.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:47.576" endtime="20201115 22:59:47.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.575" endtime="20201115 22:59:47.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.571" endtime="20201115 22:59:47.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.207" endtime="20201115 22:59:47.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.205" endtime="20201115 22:59:47.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.204" endtime="20201115 22:59:47.597"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.600" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.608" endtime="20201115 22:59:47.624"></status>
</kw>
<msg timestamp="20201115 22:59:47.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.607" endtime="20201115 22:59:47.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.626" endtime="20201115 22:59:47.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.628" endtime="20201115 22:59:47.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.604" endtime="20201115 22:59:47.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.602" endtime="20201115 22:59:47.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.637" endtime="20201115 22:59:47.923"></status>
</kw>
<msg timestamp="20201115 22:59:47.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02406575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024110014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:47.636" endtime="20201115 22:59:47.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02406575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024110014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:47.927" endtime="20201115 22:59:47.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.936" endtime="20201115 22:59:47.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.633" endtime="20201115 22:59:47.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.632" endtime="20201115 22:59:47.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:47.942" level="INFO">${RESULT} = [{'time': 0.024110014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.426399999999872e-05, 'source_diff': 4.426399999999872e-05}, {'time': 0.024192833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:47.939" endtime="20201115 22:59:47.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:47.955" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:47.943" endtime="20201115 22:59:47.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.960" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 22:59:47.959" endtime="20201115 22:59:47.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.962" level="INFO">VALUE: [4.426399999999872e-05, 4.350000000000187e-05, 4.341600000000098e-05, 4.351399999999797e-05, 4.347199999999926e-05, 4.3541000000001107e-05, 4.350000000000187e-05, 4.351400000000144e-05, 4.341600000000098e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.34999999999984e-05, 4.3459000000002634e-05, 4.3472999999998735e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.351400000000144e-05, 4.350000000000187e-05, 4.3444999999999595e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.354199999999711e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.344400000000012e-05, 4.3444999999999595e-05, 4.351400000000144e-05, 4.34999999999984e-05, 4.352800000000101e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.34860000000023e-05, 4.351400000000144e-05, 4.347199999999926e-05, 4.350000000000187e-05, 4.352799999999754e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.351399999999797e-05, 4.350000000000187e-05, 4.354200000000058e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.3445000000003064e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.3541000000001107e-05, 4.351400000000144e-05]</msg>
<status status="PASS" starttime="20201115 22:59:47.961" endtime="20201115 22:59:47.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.956" endtime="20201115 22:59:47.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.965" endtime="20201115 22:59:47.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:47.969" endtime="20201115 22:59:47.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.967" endtime="20201115 22:59:47.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.964" endtime="20201115 22:59:47.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.600" endtime="20201115 22:59:47.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.599" endtime="20201115 22:59:47.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.598" endtime="20201115 22:59:47.990"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.993" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.001" endtime="20201115 22:59:48.017"></status>
</kw>
<msg timestamp="20201115 22:59:48.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.999" endtime="20201115 22:59:48.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.019" endtime="20201115 22:59:48.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.021" endtime="20201115 22:59:48.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.997" endtime="20201115 22:59:48.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.995" endtime="20201115 22:59:48.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.030" endtime="20201115 22:59:48.317"></status>
</kw>
<msg timestamp="20201115 22:59:48.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024734583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024778903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.029" endtime="20201115 22:59:48.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024734583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024778903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.322" endtime="20201115 22:59:48.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.330" endtime="20201115 22:59:48.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.026" endtime="20201115 22:59:48.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.025" endtime="20201115 22:59:48.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:48.337" level="INFO">${RESULT} = [{'time': 0.024778903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.432000000000047e-05, 'source_diff': 4.432000000000047e-05}, {'time': 0.024859194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:48.333" endtime="20201115 22:59:48.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:48.350" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:48.338" endtime="20201115 22:59:48.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.354" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 22:59:48.353" endtime="20201115 22:59:48.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.357" level="INFO">VALUE: [4.432000000000047e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.351400000000144e-05, 4.34999999999984e-05, 4.351400000000144e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.351300000000197e-05, 4.350000000000187e-05, 4.3431000000000025e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.356899999999678e-05, 4.347199999999926e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.3569000000000246e-05, 4.351399999999797e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.343000000000055e-05, 4.350000000000187e-05, 4.351399999999797e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.351400000000144e-05, 4.350000000000187e-05, 4.345799999999969e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.351400000000144e-05, 4.351400000000144e-05]</msg>
<status status="PASS" starttime="20201115 22:59:48.355" endtime="20201115 22:59:48.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.351" endtime="20201115 22:59:48.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.360" endtime="20201115 22:59:48.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:48.364" endtime="20201115 22:59:48.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.362" endtime="20201115 22:59:48.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.359" endtime="20201115 22:59:48.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.993" endtime="20201115 22:59:48.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.992" endtime="20201115 22:59:48.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.991" endtime="20201115 22:59:48.385"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.387" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.395" endtime="20201115 22:59:48.412"></status>
</kw>
<msg timestamp="20201115 22:59:48.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.394" endtime="20201115 22:59:48.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.413" endtime="20201115 22:59:48.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.416" endtime="20201115 22:59:48.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.391" endtime="20201115 22:59:48.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.389" endtime="20201115 22:59:48.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.424" endtime="20201115 22:59:48.710"></status>
</kw>
<msg timestamp="20201115 22:59:48.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024070972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024115278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.423" endtime="20201115 22:59:48.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024070972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024115278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.714" endtime="20201115 22:59:48.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.724" endtime="20201115 22:59:48.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.420" endtime="20201115 22:59:48.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.419" endtime="20201115 22:59:48.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:48.730" level="INFO">${RESULT} = [{'time': 0.024115278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.43060000000009e-05, 'source_diff': 4.43060000000009e-05}, {'time': 0.024212736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:59:48.727" endtime="20201115 22:59:48.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:48.744" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:48.731" endtime="20201115 22:59:48.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.749" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 22:59:48.748" endtime="20201115 22:59:48.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.752" level="INFO">VALUE: [4.43060000000009e-05, 4.34999999999984e-05, 4.344400000000012e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.355600000000015e-05, 4.348599999999883e-05, 4.3486999999998305e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.34999999999984e-05, 4.3444999999999595e-05, 4.34860000000023e-05, 4.347199999999926e-05, 4.350000000000187e-05, 4.352800000000101e-05, 4.350000000000187e-05, 4.3472999999998735e-05, 4.3473000000002204e-05, 4.351300000000197e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.3555000000000677e-05, 4.34999999999984e-05, 4.34860000000023e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.352800000000101e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.351400000000144e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.34860000000023e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.3473000000002204e-05, 4.348599999999883e-05, 4.3541000000001107e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.34860000000023e-05, 4.3444999999999595e-05, 4.34860000000023e-05, 4.34860000000023e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.34999999999984e-05]</msg>
<status status="PASS" starttime="20201115 22:59:48.750" endtime="20201115 22:59:48.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.745" endtime="20201115 22:59:48.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.755" endtime="20201115 22:59:48.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:48.758" endtime="20201115 22:59:48.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.757" endtime="20201115 22:59:48.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.753" endtime="20201115 22:59:48.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.388" endtime="20201115 22:59:48.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.386" endtime="20201115 22:59:48.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.385" endtime="20201115 22:59:48.780"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.782" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.790" endtime="20201115 22:59:48.806"></status>
</kw>
<msg timestamp="20201115 22:59:48.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.788" endtime="20201115 22:59:48.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.807" endtime="20201115 22:59:48.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.810" endtime="20201115 22:59:48.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.786" endtime="20201115 22:59:48.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.784" endtime="20201115 22:59:48.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.819" endtime="20201115 22:59:49.104"></status>
</kw>
<msg timestamp="20201115 22:59:49.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023270069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023314375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.817" endtime="20201115 22:59:49.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023270069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023314375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.108" endtime="20201115 22:59:49.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.116" endtime="20201115 22:59:49.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.814" endtime="20201115 22:59:49.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.813" endtime="20201115 22:59:49.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:49.123" level="INFO">${RESULT} = [{'time': 0.023314375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430599999999743e-05, 'source_diff': 4.430599999999743e-05}, {'time': 0.023399681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:49.119" endtime="20201115 22:59:49.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:49.136" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:49.124" endtime="20201115 22:59:49.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.141" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 22:59:49.140" endtime="20201115 22:59:49.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.143" level="INFO">VALUE: [4.430599999999743e-05, 4.34999999999984e-05, 4.34860000000023e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.347199999999926e-05, 4.34999999999984e-05, 4.34999999999984e-05, 4.3486999999998305e-05, 4.34999999999984e-05, 4.3541000000001107e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.3486999999998305e-05, 4.34860000000023e-05, 4.354200000000058e-05, 4.343000000000055e-05, 4.351400000000144e-05, 4.351399999999797e-05, 4.351400000000144e-05, 4.34999999999984e-05, 4.351400000000144e-05, 4.34999999999984e-05, 4.352699999999807e-05, 4.345799999999969e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.351400000000144e-05, 4.348599999999883e-05, 4.356999999999972e-05, 4.351300000000197e-05, 4.34999999999984e-05, 4.351300000000197e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.352800000000101e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.352800000000101e-05, 4.3416999999996986e-05, 4.352800000000101e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.356999999999972e-05]</msg>
<status status="PASS" starttime="20201115 22:59:49.142" endtime="20201115 22:59:49.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.137" endtime="20201115 22:59:49.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.146" endtime="20201115 22:59:49.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.150" endtime="20201115 22:59:49.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.148" endtime="20201115 22:59:49.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.145" endtime="20201115 22:59:49.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.782" endtime="20201115 22:59:49.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.781" endtime="20201115 22:59:49.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.780" endtime="20201115 22:59:49.171"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.173" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.181" endtime="20201115 22:59:49.197"></status>
</kw>
<msg timestamp="20201115 22:59:49.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.180" endtime="20201115 22:59:49.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.198" endtime="20201115 22:59:49.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.201" endtime="20201115 22:59:49.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.177" endtime="20201115 22:59:49.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.175" endtime="20201115 22:59:49.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.210" endtime="20201115 22:59:49.505"></status>
</kw>
<msg timestamp="20201115 22:59:49.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023309028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023353333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.208" endtime="20201115 22:59:49.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023309028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023353333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.515" endtime="20201115 22:59:49.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.540" endtime="20201115 22:59:49.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.206" endtime="20201115 22:59:49.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.204" endtime="20201115 22:59:49.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:49.554" level="INFO">${RESULT} = [{'time': 0.023353333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4305000000001427e-05, 'source_diff': 4.4305000000001427e-05}, {'time': 0.023431194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:49.547" endtime="20201115 22:59:49.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:49.570" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:49.556" endtime="20201115 22:59:49.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.574" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 22:59:49.573" endtime="20201115 22:59:49.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.577" level="INFO">VALUE: [4.4305000000001427e-05, 4.354099999999764e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.355499999999721e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.3444999999999595e-05, 4.34999999999984e-05, 4.3458999999999165e-05, 4.351400000000144e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.345799999999969e-05, 4.351300000000197e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.347199999999926e-05, 4.347199999999926e-05, 4.343000000000055e-05, 4.3486999999998305e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.358400000000276e-05, 4.351399999999797e-05, 4.3541000000001107e-05, 4.348599999999883e-05, 4.34860000000023e-05, 4.343000000000055e-05, 4.34999999999984e-05, 4.34999999999984e-05, 4.350000000000187e-05, 4.351399999999797e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.3472999999998735e-05, 4.351400000000144e-05, 4.3444999999999595e-05, 4.348599999999883e-05, 4.355600000000015e-05, 4.34999999999984e-05, 4.34999999999984e-05, 4.34999999999984e-05]</msg>
<status status="PASS" starttime="20201115 22:59:49.575" endtime="20201115 22:59:49.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.571" endtime="20201115 22:59:49.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.580" endtime="20201115 22:59:49.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.583" endtime="20201115 22:59:49.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.582" endtime="20201115 22:59:49.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.578" endtime="20201115 22:59:49.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.174" endtime="20201115 22:59:49.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.172" endtime="20201115 22:59:49.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.171" endtime="20201115 22:59:49.604"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.607" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.615" endtime="20201115 22:59:49.631"></status>
</kw>
<msg timestamp="20201115 22:59:49.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.613" endtime="20201115 22:59:49.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.632" endtime="20201115 22:59:49.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.635" endtime="20201115 22:59:49.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.611" endtime="20201115 22:59:49.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.609" endtime="20201115 22:59:49.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.644" endtime="20201115 22:59:49.929"></status>
</kw>
<msg timestamp="20201115 22:59:49.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023590611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023634903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.642" endtime="20201115 22:59:49.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023590611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023634903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.933" endtime="20201115 22:59:49.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.941" endtime="20201115 22:59:49.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.640" endtime="20201115 22:59:49.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.638" endtime="20201115 22:59:49.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:49.947" level="INFO">${RESULT} = [{'time': 0.023634903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429199999999786e-05, 'source_diff': 4.429199999999786e-05}, {'time': 0.023715528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:49.944" endtime="20201115 22:59:49.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:49.961" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:49.948" endtime="20201115 22:59:49.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.965" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 22:59:49.964" endtime="20201115 22:59:49.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.968" level="INFO">VALUE: [4.429199999999786e-05, 4.348599999999883e-05, 4.344400000000012e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.34999999999984e-05, 4.354200000000058e-05, 4.34999999999984e-05, 4.352800000000101e-05, 4.34999999999984e-05, 4.351400000000144e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.354199999999711e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.345799999999969e-05, 4.341600000000098e-05, 4.350000000000187e-05, 4.3473000000002204e-05, 4.3472999999998735e-05, 4.350000000000187e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.351399999999797e-05, 4.3486999999998305e-05, 4.347199999999926e-05, 4.3486999999998305e-05, 4.34999999999984e-05, 4.34860000000023e-05, 4.354200000000058e-05, 4.34860000000023e-05, 4.350000000000187e-05, 4.34860000000023e-05, 4.348599999999883e-05, 4.354200000000058e-05, 4.34999999999984e-05, 4.34860000000023e-05, 4.34999999999984e-05, 4.34860000000023e-05, 4.347199999999926e-05, 4.352800000000101e-05, 4.34860000000023e-05]</msg>
<status status="PASS" starttime="20201115 22:59:49.966" endtime="20201115 22:59:49.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.962" endtime="20201115 22:59:49.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.971" endtime="20201115 22:59:49.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.974" endtime="20201115 22:59:49.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.972" endtime="20201115 22:59:49.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.969" endtime="20201115 22:59:49.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.608" endtime="20201115 22:59:49.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.606" endtime="20201115 22:59:49.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.605" endtime="20201115 22:59:49.995"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.997" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.006" endtime="20201115 22:59:50.022"></status>
</kw>
<msg timestamp="20201115 22:59:50.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.004" endtime="20201115 22:59:50.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.024" endtime="20201115 22:59:50.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.027" endtime="20201115 22:59:50.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.002" endtime="20201115 22:59:50.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.999" endtime="20201115 22:59:50.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.036" endtime="20201115 22:59:50.320"></status>
</kw>
<msg timestamp="20201115 22:59:50.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024435486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024479778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.034" endtime="20201115 22:59:50.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024435486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024479778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.325" endtime="20201115 22:59:50.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.333" endtime="20201115 22:59:50.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.032" endtime="20201115 22:59:50.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.030" endtime="20201115 22:59:50.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:50.339" level="INFO">${RESULT} = [{'time': 0.024479778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429200000000133e-05, 'source_diff': 4.429200000000133e-05}, {'time': 0.024574417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:50.336" endtime="20201115 22:59:50.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:50.354" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:50.340" endtime="20201115 22:59:50.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.358" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 22:59:50.357" endtime="20201115 22:59:50.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.361" level="INFO">VALUE: [4.429200000000133e-05, 4.34860000000023e-05, 4.3860999999999206e-05, 4.34999999999984e-05, 4.34999999999984e-05, 4.351400000000144e-05, 4.3569000000000246e-05, 4.351400000000144e-05, 4.348599999999883e-05, 4.3875000000002246e-05, 4.355600000000015e-05, 4.380499999999746e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.370799999999994e-05, 4.3487000000001774e-05, 4.34860000000023e-05, 4.3874999999998776e-05, 4.351399999999797e-05, 4.347199999999926e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.351399999999797e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.352800000000101e-05, 4.3487000000001774e-05, 4.351400000000144e-05, 4.350000000000187e-05, 4.352700000000154e-05, 4.3846999999999636e-05, 4.348599999999883e-05, 4.3569000000000246e-05, 4.347200000000273e-05, 4.3652999999997666e-05, 4.3486999999998305e-05, 4.372199999999951e-05, 4.348599999999883e-05, 4.3596999999999386e-05, 4.354099999999764e-05, 4.347199999999926e-05, 4.3667000000000705e-05, 4.348599999999883e-05, 4.351399999999797e-05, 4.347199999999926e-05, 4.358399999999929e-05, 4.3610999999998956e-05, 4.373599999999908e-05]</msg>
<status status="PASS" starttime="20201115 22:59:50.359" endtime="20201115 22:59:50.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.355" endtime="20201115 22:59:50.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.364" endtime="20201115 22:59:50.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:50.367" endtime="20201115 22:59:50.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.365" endtime="20201115 22:59:50.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.362" endtime="20201115 22:59:50.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.998" endtime="20201115 22:59:50.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.996" endtime="20201115 22:59:50.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.995" endtime="20201115 22:59:50.388"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.390" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.399" endtime="20201115 22:59:50.415"></status>
</kw>
<msg timestamp="20201115 22:59:50.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.397" endtime="20201115 22:59:50.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.417" endtime="20201115 22:59:50.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.419" endtime="20201115 22:59:50.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.394" endtime="20201115 22:59:50.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.392" endtime="20201115 22:59:50.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.428" endtime="20201115 22:59:50.714"></status>
</kw>
<msg timestamp="20201115 22:59:50.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023924486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023970167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.426" endtime="20201115 22:59:50.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023924486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023970167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.718" endtime="20201115 22:59:50.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.726" endtime="20201115 22:59:50.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.424" endtime="20201115 22:59:50.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.422" endtime="20201115 22:59:50.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:50.733" level="INFO">${RESULT} = [{'time': 0.023970167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5681000000002275e-05, 'source_diff': 4.5681000000002275e-05}, {'time': 0.024060681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:50.730" endtime="20201115 22:59:50.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:50.746" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:50.734" endtime="20201115 22:59:50.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.751" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 22:59:50.750" endtime="20201115 22:59:50.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.753" level="INFO">VALUE: [4.5681000000002275e-05, 4.3917000000000955e-05, 4.4096999999999886e-05, 4.467999999999833e-05, 4.448599999999983e-05, 4.44999999999994e-05, 4.472199999999704e-05, 4.3958999999999665e-05, 4.3917000000000955e-05, 4.451399999999897e-05, 4.3930999999997056e-05, 4.4888999999999346e-05, 4.405600000000065e-05, 4.44999999999994e-05, 4.401300000000247e-05, 4.432000000000047e-05, 4.4610999999999956e-05, 4.3805000000000927e-05, 4.394400000000062e-05, 4.466600000000223e-05, 4.4597000000000386e-05, 4.411199999999893e-05, 4.422200000000001e-05, 4.472200000000051e-05, 4.441600000000198e-05, 4.404200000000108e-05, 4.398599999999933e-05, 4.473600000000008e-05, 4.393000000000105e-05, 4.4459000000000165e-05, 4.404200000000108e-05, 4.405600000000065e-05, 4.423600000000305e-05, 4.404200000000108e-05, 4.391599999999801e-05, 4.38060000000004e-05, 4.4360999999999706e-05, 4.391599999999801e-05, 4.4667000000001705e-05, 4.474999999999965e-05, 4.398599999999933e-05, 4.402800000000151e-05, 4.3875000000002246e-05, 4.448599999999983e-05, 4.409799999999936e-05, 4.4347000000000136e-05, 4.397199999999976e-05, 4.4124999999999026e-05, 4.406899999999728e-05, 4.479099999999889e-05]</msg>
<status status="PASS" starttime="20201115 22:59:50.752" endtime="20201115 22:59:50.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.747" endtime="20201115 22:59:50.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.756" endtime="20201115 22:59:50.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:50.760" endtime="20201115 22:59:50.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.758" endtime="20201115 22:59:50.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.755" endtime="20201115 22:59:50.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.391" endtime="20201115 22:59:50.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.389" endtime="20201115 22:59:50.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.388" endtime="20201115 22:59:50.781"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.783" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.791" endtime="20201115 22:59:50.808"></status>
</kw>
<msg timestamp="20201115 22:59:50.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.790" endtime="20201115 22:59:50.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.809" endtime="20201115 22:59:50.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.812" endtime="20201115 22:59:50.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.787" endtime="20201115 22:59:50.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.785" endtime="20201115 22:59:50.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.820" endtime="20201115 22:59:51.106"></status>
</kw>
<msg timestamp="20201115 22:59:51.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023893139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023939069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.819" endtime="20201115 22:59:51.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023893139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023939069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.110" endtime="20201115 22:59:51.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.119" endtime="20201115 22:59:51.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.816" endtime="20201115 22:59:51.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.815" endtime="20201115 22:59:51.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.125" level="INFO">${RESULT} = [{'time': 0.023939069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.592999999999958e-05, 'source_diff': 4.592999999999958e-05}, {'time': 0.024019653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:51.122" endtime="20201115 22:59:51.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.138" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:51.126" endtime="20201115 22:59:51.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.143" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.142" endtime="20201115 22:59:51.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.145" level="INFO">VALUE: [4.592999999999958e-05, 4.4888999999999346e-05, 4.520799999999797e-05, 4.576400000000022e-05, 4.5111000000000456e-05, 4.498600000000033e-05, 4.56939999999989e-05, 4.548599999999736e-05, 4.575000000000065e-05, 4.5611000000000956e-05, 4.53060000000019e-05, 4.5223000000000485e-05, 4.491599999999901e-05, 4.5667000000002705e-05, 4.522200000000101e-05, 4.555500000000268e-05, 4.516599999999926e-05, 4.5416999999998986e-05, 4.5722999999997516e-05, 4.548599999999736e-05, 4.490199999999944e-05, 4.4874999999999776e-05, 4.498600000000033e-05, 4.529199999999886e-05, 4.551399999999997e-05, 4.491600000000248e-05, 4.53060000000019e-05, 4.5416999999998986e-05, 4.4930999999998056e-05, 4.480599999999793e-05, 4.498599999999686e-05, 4.49999999999999e-05, 4.5569000000002247e-05, 4.554100000000311e-05, 4.5111000000000456e-05, 4.480500000000193e-05, 4.536200000000018e-05, 4.555599999999868e-05, 4.552799999999954e-05, 4.4847000000000636e-05, 4.5445000000001595e-05, 4.516599999999926e-05, 4.573599999999761e-05, 4.5611000000000956e-05, 4.472200000000051e-05, 4.511199999999993e-05, 4.4931000000001525e-05, 4.547200000000126e-05, 4.5722999999997516e-05, 4.4916999999998486e-05]</msg>
<status status="PASS" starttime="20201115 22:59:51.144" endtime="20201115 22:59:51.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.139" endtime="20201115 22:59:51.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.149" endtime="20201115 22:59:51.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.152" endtime="20201115 22:59:51.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.151" endtime="20201115 22:59:51.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.147" endtime="20201115 22:59:51.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.784" endtime="20201115 22:59:51.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.782" endtime="20201115 22:59:51.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.781" endtime="20201115 22:59:51.173"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.176" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.184" endtime="20201115 22:59:51.200"></status>
</kw>
<msg timestamp="20201115 22:59:51.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.182" endtime="20201115 22:59:51.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.201" endtime="20201115 22:59:51.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.204" endtime="20201115 22:59:51.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.180" endtime="20201115 22:59:51.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.178" endtime="20201115 22:59:51.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.213" endtime="20201115 22:59:51.498"></status>
</kw>
<msg timestamp="20201115 22:59:51.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023476, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023522847, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:59:51.211" endtime="20201115 22:59:51.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023476, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023522847, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:59:51.503" endtime="20201115 22:59:51.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.511" endtime="20201115 22:59:51.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.209" endtime="20201115 22:59:51.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.207" endtime="20201115 22:59:51.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.517" level="INFO">${RESULT} = [{'time': 0.023522847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.684699999999917e-05, 'source_diff': 4.684699999999917e-05}, {'time': 0.023617431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:51.514" endtime="20201115 22:59:51.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.531" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:51.518" endtime="20201115 22:59:51.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.535" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.534" endtime="20201115 22:59:51.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.538" level="INFO">VALUE: [4.684699999999917e-05, 4.608400000000179e-05, 4.6667000000000236e-05, 4.580499999999946e-05, 4.654100000000064e-05, 4.648600000000183e-05, 4.6361000000001706e-05, 4.611200000000093e-05, 4.6403000000000416e-05, 4.622199999999854e-05, 4.623599999999811e-05, 4.6166999999999736e-05, 4.592999999999958e-05, 4.611099999999799e-05, 4.6166999999999736e-05, 4.5861000000001206e-05, 4.5875000000000776e-05, 4.580499999999946e-05, 4.579099999999989e-05, 4.61529999999967e-05, 4.634699999999867e-05, 4.623600000000158e-05, 4.6389000000000846e-05, 4.623599999999811e-05, 4.654200000000011e-05, 4.602800000000004e-05, 4.604100000000014e-05, 4.604199999999961e-05, 4.5875000000000776e-05, 4.641600000000051e-05, 4.670799999999947e-05, 4.652700000000107e-05, 4.659800000000186e-05, 4.648599999999836e-05, 4.605499999999971e-05, 4.654200000000011e-05, 4.6097000000001886e-05, 4.6667000000000236e-05, 4.579199999999936e-05, 4.641600000000051e-05, 4.604199999999961e-05, 4.6153000000000166e-05, 4.616600000000026e-05, 4.676400000000122e-05, 4.604199999999961e-05, 4.605599999999918e-05, 4.647200000000226e-05, 4.652800000000054e-05, 4.6473000000001735e-05, 4.634699999999867e-05]</msg>
<status status="PASS" starttime="20201115 22:59:51.536" endtime="20201115 22:59:51.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.531" endtime="20201115 22:59:51.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.541" endtime="20201115 22:59:51.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.544" endtime="20201115 22:59:51.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.543" endtime="20201115 22:59:51.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.539" endtime="20201115 22:59:51.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.176" endtime="20201115 22:59:51.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.174" endtime="20201115 22:59:51.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.174" endtime="20201115 22:59:51.566"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.568" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.576" endtime="20201115 22:59:51.593"></status>
</kw>
<msg timestamp="20201115 22:59:51.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.574" endtime="20201115 22:59:51.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.594" endtime="20201115 22:59:51.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.597" endtime="20201115 22:59:51.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.572" endtime="20201115 22:59:51.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.570" endtime="20201115 22:59:51.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.606" endtime="20201115 22:59:51.892"></status>
</kw>
<msg timestamp="20201115 22:59:51.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024339792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024387778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.604" endtime="20201115 22:59:51.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024339792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024387778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.896" endtime="20201115 22:59:51.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.904" endtime="20201115 22:59:51.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.602" endtime="20201115 22:59:51.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.600" endtime="20201115 22:59:51.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.911" level="INFO">${RESULT} = [{'time': 0.024387778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.798599999999986e-05, 'source_diff': 4.798599999999986e-05}, {'time': 0.024474319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:51.907" endtime="20201115 22:59:51.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.925" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:51.912" endtime="20201115 22:59:51.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.930" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.929" endtime="20201115 22:59:51.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.932" level="INFO">VALUE: [4.798599999999986e-05, 4.759699999999992e-05, 4.722200000000301e-05, 4.759799999999939e-05, 4.718000000000083e-05, 4.737499999999881e-05, 4.7667000000001236e-05, 4.722200000000301e-05, 4.698599999999886e-05, 4.765200000000219e-05, 4.747200000000326e-05, 4.766599999999829e-05, 4.6972999999998766e-05, 4.679199999999689e-05, 4.763899999999863e-05, 4.706900000000028e-05, 4.7222999999999016e-05, 4.7194999999999876e-05, 4.748599999999936e-05, 4.7653000000001666e-05, 4.747199999999979e-05, 4.7403000000001416e-05, 4.7653000000001666e-05, 4.6847000000002637e-05, 4.765200000000219e-05, 4.737499999999881e-05, 4.68329999999996e-05, 4.766599999999829e-05, 4.737499999999881e-05, 4.727800000000129e-05, 4.68329999999996e-05, 4.709799999999889e-05, 4.704199999999714e-05, 4.679099999999742e-05, 4.702800000000104e-05, 4.720799999999997e-05, 4.679100000000089e-05, 4.734699999999967e-05, 4.7389000000001846e-05, 4.729100000000139e-05, 4.747199999999979e-05, 4.7667000000001236e-05, 4.675000000000165e-05, 4.687499999999831e-05, 4.7167000000000736e-05, 4.770800000000047e-05, 4.704200000000061e-05, 4.694400000000015e-05, 4.734699999999967e-05, 4.752799999999807e-05]</msg>
<status status="PASS" starttime="20201115 22:59:51.931" endtime="20201115 22:59:51.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.926" endtime="20201115 22:59:51.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.935" endtime="20201115 22:59:51.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.939" endtime="20201115 22:59:51.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.937" endtime="20201115 22:59:51.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.934" endtime="20201115 22:59:51.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.569" endtime="20201115 22:59:51.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.567" endtime="20201115 22:59:51.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.566" endtime="20201115 22:59:51.960"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.962" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.970" endtime="20201115 22:59:51.986"></status>
</kw>
<msg timestamp="20201115 22:59:51.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.969" endtime="20201115 22:59:51.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.988" endtime="20201115 22:59:51.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.990" endtime="20201115 22:59:51.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.966" endtime="20201115 22:59:51.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.964" endtime="20201115 22:59:51.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.999" endtime="20201115 22:59:52.284"></status>
</kw>
<msg timestamp="20201115 22:59:52.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023466528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023515931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.998" endtime="20201115 22:59:52.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023466528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023515931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.288" endtime="20201115 22:59:52.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.297" endtime="20201115 22:59:52.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.995" endtime="20201115 22:59:52.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.994" endtime="20201115 22:59:52.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:52.303" level="INFO">${RESULT} = [{'time': 0.023515931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.940299999999995e-05, 'source_diff': 4.940299999999995e-05}, {'time': 0.023598514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:52.300" endtime="20201115 22:59:52.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:52.317" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:52.304" endtime="20201115 22:59:52.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.321" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 22:59:52.320" endtime="20201115 22:59:52.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.324" level="INFO">VALUE: [4.940299999999995e-05, 4.78200000000005e-05, 4.8223000000000016e-05, 4.81529999999987e-05, 4.802800000000204e-05, 4.809700000000042e-05, 4.841600000000251e-05, 4.822200000000054e-05, 4.7903000000001916e-05, 4.866699999999877e-05, 4.854200000000211e-05, 4.780500000000146e-05, 4.8013999999999e-05, 4.852799999999907e-05, 4.805600000000118e-05, 4.870800000000147e-05, 4.822200000000054e-05, 4.847200000000079e-05, 4.829200000000186e-05, 4.8708999999997477e-05, 4.802800000000204e-05, 4.779200000000136e-05, 4.824999999999968e-05, 4.801400000000247e-05, 4.858299999999788e-05, 4.849999999999993e-05, 4.822200000000054e-05, 4.790199999999897e-05, 4.809700000000042e-05, 4.805499999999824e-05, 4.861100000000049e-05, 4.8667000000002236e-05, 4.840199999999947e-05, 4.790299999999845e-05, 4.7903000000001916e-05, 4.845800000000122e-05, 4.867999999999886e-05, 4.8417000000001986e-05, 4.847200000000079e-05, 4.797200000000029e-05, 4.826399999999925e-05, 4.85269999999996e-05, 4.798599999999986e-05, 4.78200000000005e-05, 4.809700000000042e-05, 4.840299999999895e-05, 4.83469999999972e-05, 4.840299999999895e-05, 4.795800000000072e-05, 4.773599999999961e-05]</msg>
<status status="PASS" starttime="20201115 22:59:52.322" endtime="20201115 22:59:52.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.318" endtime="20201115 22:59:52.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.327" endtime="20201115 22:59:52.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:52.330" endtime="20201115 22:59:52.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.329" endtime="20201115 22:59:52.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.325" endtime="20201115 22:59:52.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.963" endtime="20201115 22:59:52.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.961" endtime="20201115 22:59:52.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.960" endtime="20201115 22:59:52.351"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.354" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.362" endtime="20201115 22:59:52.378"></status>
</kw>
<msg timestamp="20201115 22:59:52.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.360" endtime="20201115 22:59:52.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.379" endtime="20201115 22:59:52.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.382" endtime="20201115 22:59:52.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.358" endtime="20201115 22:59:52.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.356" endtime="20201115 22:59:52.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.391" endtime="20201115 22:59:52.678"></status>
</kw>
<msg timestamp="20201115 22:59:52.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023533625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023584333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.389" endtime="20201115 22:59:52.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023533625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023584333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.682" endtime="20201115 22:59:52.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.690" endtime="20201115 22:59:52.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.387" endtime="20201115 22:59:52.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.385" endtime="20201115 22:59:52.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:52.697" level="INFO">${RESULT} = [{'time': 0.023584333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0708e-05, 'source_diff': 5.0708e-05}, {'time': 0.023675861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.909699999999795e-...</msg>
<status status="PASS" starttime="20201115 22:59:52.693" endtime="20201115 22:59:52.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:52.710" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:52.698" endtime="20201115 22:59:52.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.715" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 22:59:52.714" endtime="20201115 22:59:52.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.717" level="INFO">VALUE: [5.0708e-05, 4.909699999999795e-05, 4.927799999999982e-05, 4.883299999999813e-05, 4.93469999999982e-05, 4.951399999999703e-05, 4.911100000000099e-05, 4.887500000000031e-05, 4.96530000000002e-05, 4.96530000000002e-05, 4.940200000000047e-05, 4.880599999999846e-05, 4.884700000000117e-05, 4.922200000000154e-05, 4.9014e-05, 4.962500000000106e-05, 4.924999999999721e-05, 4.883299999999813e-05, 4.926400000000025e-05, 4.959799999999792e-05, 4.941699999999952e-05, 4.919399999999893e-05, 4.958299999999888e-05, 4.897199999999782e-05, 4.9723000000001516e-05, 4.902799999999957e-05, 4.886100000000074e-05, 4.973599999999814e-05, 4.952800000000007e-05, 4.88200000000015e-05, 4.952800000000007e-05, 4.93330000000021e-05, 4.916699999999927e-05, 4.947199999999832e-05, 4.944399999999918e-05, 4.93469999999982e-05, 4.913900000000013e-05, 4.926400000000025e-05, 4.926400000000025e-05, 4.972199999999857e-05, 4.8903000000002916e-05, 4.961099999999802e-05, 4.917999999999936e-05, 4.897200000000129e-05, 4.951399999999703e-05, 4.929099999999992e-05, 4.9723000000001516e-05, 4.961100000000149e-05, 4.940299999999995e-05, 4.927799999999982e-05]</msg>
<status status="PASS" starttime="20201115 22:59:52.716" endtime="20201115 22:59:52.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.711" endtime="20201115 22:59:52.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.720" endtime="20201115 22:59:52.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:52.724" endtime="20201115 22:59:52.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.722" endtime="20201115 22:59:52.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.718" endtime="20201115 22:59:52.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.354" endtime="20201115 22:59:52.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.352" endtime="20201115 22:59:52.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.352" endtime="20201115 22:59:52.745"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.747" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.755" endtime="20201115 22:59:52.771"></status>
</kw>
<msg timestamp="20201115 22:59:52.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.754" endtime="20201115 22:59:52.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.773" endtime="20201115 22:59:52.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.776" endtime="20201115 22:59:52.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.751" endtime="20201115 22:59:52.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.749" endtime="20201115 22:59:52.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.785" endtime="20201115 22:59:53.071"></status>
</kw>
<msg timestamp="20201115 22:59:53.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023539778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023591278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.783" endtime="20201115 22:59:53.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023539778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023591278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.075" endtime="20201115 22:59:53.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.083" endtime="20201115 22:59:53.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.781" endtime="20201115 22:59:53.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.779" endtime="20201115 22:59:53.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:53.090" level="INFO">${RESULT} = [{'time': 0.023591278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.149999999999946e-05, 'source_diff': 5.149999999999946e-05}, {'time': 0.023681792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:53.087" endtime="20201115 22:59:53.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.103" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:53.091" endtime="20201115 22:59:53.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.108" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.107" endtime="20201115 22:59:53.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.110" level="INFO">VALUE: [5.149999999999946e-05, 4.984800000000164e-05, 4.990299999999698e-05, 4.995899999999873e-05, 4.977800000000032e-05, 5.026399999999778e-05, 4.983299999999913e-05, 5.050000000000193e-05, 5.008400000000232e-05, 5.066700000000077e-05, 4.981900000000303e-05, 5.013900000000113e-05, 4.984700000000217e-05, 5.0223000000002016e-05, 4.981999999999903e-05, 5.059699999999945e-05, 5.008299999999938e-05, 5.002800000000057e-05, 5.008299999999938e-05, 5.006899999999981e-05, 5.062499999999859e-05, 5.070899999999948e-05, 5.048599999999889e-05, 5.013900000000113e-05, 5.058299999999988e-05, 5.068000000000086e-05, 4.998599999999839e-05, 5.047199999999932e-05, 5.002800000000057e-05, 4.990300000000045e-05, 5.022200000000254e-05, 5.022199999999907e-05, 5.05279999999976e-05, 5.027699999999788e-05, 5.02079999999995e-05, 4.983299999999913e-05, 5.051300000000203e-05, 5.043100000000009e-05, 5.073599999999914e-05, 5.040300000000095e-05, 5.047199999999932e-05, 5.048600000000236e-05, 5.040300000000095e-05, 5.033299999999963e-05, 5.036100000000224e-05, 5.012500000000156e-05, 5.045899999999923e-05, 5.027800000000082e-05, 5.073599999999914e-05, 5.008399999999885e-05]</msg>
<status status="PASS" starttime="20201115 22:59:53.109" endtime="20201115 22:59:53.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.104" endtime="20201115 22:59:53.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.113" endtime="20201115 22:59:53.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.117" endtime="20201115 22:59:53.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.115" endtime="20201115 22:59:53.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.112" endtime="20201115 22:59:53.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.748" endtime="20201115 22:59:53.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.746" endtime="20201115 22:59:53.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.745" endtime="20201115 22:59:53.138"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.140" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.149" endtime="20201115 22:59:53.166"></status>
</kw>
<msg timestamp="20201115 22:59:53.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.147" endtime="20201115 22:59:53.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.168" endtime="20201115 22:59:53.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.170" endtime="20201115 22:59:53.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.144" endtime="20201115 22:59:53.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.142" endtime="20201115 22:59:53.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.179" endtime="20201115 22:59:53.464"></status>
</kw>
<msg timestamp="20201115 22:59:53.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024890333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024942431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.177" endtime="20201115 22:59:53.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024890333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024942431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.468" endtime="20201115 22:59:53.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.476" endtime="20201115 22:59:53.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.175" endtime="20201115 22:59:53.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.173" endtime="20201115 22:59:53.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:53.483" level="INFO">${RESULT} = [{'time': 0.024942431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.209800000000042e-05, 'source_diff': 5.209800000000042e-05}, {'time': 0.025045958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:53.480" endtime="20201115 22:59:53.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.497" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:53.484" endtime="20201115 22:59:53.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.502" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.501" endtime="20201115 22:59:53.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.504" level="INFO">VALUE: [5.209800000000042e-05, 5.102699999999863e-05, 5.161100000000002e-05, 5.16530000000022e-05, 5.076400000000175e-05, 5.115299999999823e-05, 5.116700000000127e-05, 5.163899999999916e-05, 5.163900000000263e-05, 5.076399999999828e-05, 5.112499999999909e-05, 5.15279999999986e-05, 5.107000000000028e-05, 5.1708000000001e-05, 5.126399999999878e-05, 5.144400000000118e-05, 5.172300000000005e-05, 5.168000000000186e-05, 5.10279999999981e-05, 5.102699999999863e-05, 5.1708000000001e-05, 5.113899999999866e-05, 5.129099999999845e-05, 5.159700000000045e-05, 5.165299999999873e-05, 5.148599999999989e-05, 5.1165999999998324e-05, 5.076400000000175e-05, 5.159799999999992e-05, 5.108300000000038e-05, 5.1637999999999684e-05, 5.14729999999998e-05, 5.106900000000081e-05, 5.084800000000264e-05, 5.119400000000093e-05, 5.149999999999946e-05, 5.090299999999798e-05, 5.130600000000096e-05, 5.0902000000001973e-05, 5.140300000000195e-05, 5.162500000000306e-05, 5.108300000000038e-05, 5.1651999999999254e-05, 5.11530000000017e-05, 5.12080000000005e-05, 5.151299999999956e-05, 5.1708000000001e-05, 5.0973000000002766e-05, 5.168099999999787e-05, 5.0901999999998504e-05]</msg>
<status status="PASS" starttime="20201115 22:59:53.503" endtime="20201115 22:59:53.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.498" endtime="20201115 22:59:53.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.507" endtime="20201115 22:59:53.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.511" endtime="20201115 22:59:53.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.509" endtime="20201115 22:59:53.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.506" endtime="20201115 22:59:53.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.141" endtime="20201115 22:59:53.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.139" endtime="20201115 22:59:53.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.138" endtime="20201115 22:59:53.532"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.535" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.543" endtime="20201115 22:59:53.559"></status>
</kw>
<msg timestamp="20201115 22:59:53.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.541" endtime="20201115 22:59:53.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.560" endtime="20201115 22:59:53.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.563" endtime="20201115 22:59:53.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.539" endtime="20201115 22:59:53.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.537" endtime="20201115 22:59:53.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.572" endtime="20201115 22:59:53.862"></status>
</kw>
<msg timestamp="20201115 22:59:53.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023859972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023913278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.570" endtime="20201115 22:59:53.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023859972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023913278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.866" endtime="20201115 22:59:53.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.874" endtime="20201115 22:59:53.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.568" endtime="20201115 22:59:53.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.566" endtime="20201115 22:59:53.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:53.881" level="INFO">${RESULT} = [{'time': 0.023913278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.330599999999949e-05, 'source_diff': 5.330599999999949e-05}, {'time': 0.024011861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:53.877" endtime="20201115 22:59:53.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.894" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:53.882" endtime="20201115 22:59:53.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.898" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.897" endtime="20201115 22:59:53.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.901" level="INFO">VALUE: [5.330599999999949e-05, 5.261099999999755e-05, 5.181899999999809e-05, 5.173600000000014e-05, 5.18340000000006e-05, 5.251400000000003e-05, 5.220899999999751e-05, 5.2249999999996743e-05, 5.236200000000024e-05, 5.188899999999941e-05, 5.183299999999766e-05, 5.22080000000015e-05, 5.269500000000191e-05, 5.256900000000231e-05, 5.193099999999812e-05, 5.269400000000243e-05, 5.20409999999992e-05, 5.220900000000098e-05, 5.248600000000089e-05, 5.197200000000082e-05, 5.212500000000009e-05, 5.212500000000009e-05, 5.25279999999996e-05, 5.179199999999842e-05, 5.220900000000098e-05, 5.183299999999766e-05, 5.199999999999996e-05, 5.201300000000006e-05, 5.212500000000009e-05, 5.258299999999841e-05, 5.226399999999978e-05, 5.183300000000113e-05, 5.215299999999923e-05, 5.2665999999999824e-05, 5.198600000000039e-05, 5.176399999999928e-05, 5.227699999999988e-05, 5.209800000000042e-05, 5.265299999999973e-05, 5.2707999999998534e-05, 5.219400000000193e-05, 5.270900000000148e-05, 5.245800000000175e-05, 5.195900000000073e-05, 5.245800000000175e-05, 5.225000000000021e-05, 5.191699999999855e-05, 5.199999999999996e-05, 5.204199999999867e-05, 5.226399999999978e-05]</msg>
<status status="PASS" starttime="20201115 22:59:53.899" endtime="20201115 22:59:53.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.895" endtime="20201115 22:59:53.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.904" endtime="20201115 22:59:53.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.908" endtime="20201115 22:59:53.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.906" endtime="20201115 22:59:53.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.903" endtime="20201115 22:59:53.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.535" endtime="20201115 22:59:53.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.533" endtime="20201115 22:59:53.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.533" endtime="20201115 22:59:53.929"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.931" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.939" endtime="20201115 22:59:53.956"></status>
</kw>
<msg timestamp="20201115 22:59:53.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.938" endtime="20201115 22:59:53.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.957" endtime="20201115 22:59:53.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.960" endtime="20201115 22:59:53.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.935" endtime="20201115 22:59:53.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.933" endtime="20201115 22:59:53.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.969" endtime="20201115 22:59:54.254"></status>
</kw>
<msg timestamp="20201115 22:59:54.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023493083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0235475, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:59:53.967" endtime="20201115 22:59:54.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023493083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0235475, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:59:54.258" endtime="20201115 22:59:54.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.266" endtime="20201115 22:59:54.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.965" endtime="20201115 22:59:54.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.963" endtime="20201115 22:59:54.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.273" level="INFO">${RESULT} = [{'time': 0.0235475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.441699999999758e-05, 'source_diff': 5.441699999999758e-05}, {'time': 0.023634986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:59:54.270" endtime="20201115 22:59:54.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:54.286" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:54.274" endtime="20201115 22:59:54.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.291" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 22:59:54.290" endtime="20201115 22:59:54.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.294" level="INFO">VALUE: [5.441699999999758e-05, 5.276400000000028e-05, 5.3666000000000824e-05, 5.369499999999944e-05, 5.30280000000001e-05, 5.2943999999999214e-05, 5.315300000000023e-05, 5.355500000000027e-05, 5.363900000000116e-05, 5.344500000000266e-05, 5.345800000000275e-05, 5.315300000000023e-05, 5.306999999999881e-05, 5.287500000000084e-05, 5.275000000000071e-05, 5.320899999999851e-05, 5.281899999999909e-05, 5.33470000000022e-05, 5.3457999999999284e-05, 5.3249999999997744e-05, 5.283300000000213e-05, 5.369499999999944e-05, 5.280499999999952e-05, 5.300000000000096e-05, 5.3193999999999464e-05, 5.345899999999876e-05, 5.294400000000268e-05, 5.309700000000195e-05, 5.3499999999997994e-05, 5.297200000000182e-05, 5.312500000000109e-05, 5.293100000000259e-05, 5.334699999999873e-05, 5.29730000000013e-05, 5.288900000000041e-05, 5.308299999999891e-05, 5.320899999999851e-05, 5.3513999999997564e-05, 5.329199999999992e-05, 5.3235999999998174e-05, 5.311100000000152e-05, 5.283399999999813e-05, 5.340300000000048e-05, 5.313900000000066e-05, 5.30410000000002e-05, 5.309699999999848e-05, 5.3680000000000394e-05, 5.345900000000223e-05, 5.277799999999985e-05, 5.3721999999999104e-05]</msg>
<status status="PASS" starttime="20201115 22:59:54.292" endtime="20201115 22:59:54.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.287" endtime="20201115 22:59:54.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.297" endtime="20201115 22:59:54.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.300" endtime="20201115 22:59:54.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.299" endtime="20201115 22:59:54.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.295" endtime="20201115 22:59:54.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.932" endtime="20201115 22:59:54.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.930" endtime="20201115 22:59:54.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.929" endtime="20201115 22:59:54.322"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.324" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.332" endtime="20201115 22:59:54.348"></status>
</kw>
<msg timestamp="20201115 22:59:54.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.330" endtime="20201115 22:59:54.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.350" endtime="20201115 22:59:54.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.352" endtime="20201115 22:59:54.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.328" endtime="20201115 22:59:54.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.326" endtime="20201115 22:59:54.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.361" endtime="20201115 22:59:54.646"></status>
</kw>
<msg timestamp="20201115 22:59:54.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023482292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023537417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.360" endtime="20201115 22:59:54.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023482292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023537417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.650" endtime="20201115 22:59:54.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.659" endtime="20201115 22:59:54.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.357" endtime="20201115 22:59:54.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.355" endtime="20201115 22:59:54.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.665" level="INFO">${RESULT} = [{'time': 0.023537417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.512500000000309e-05, 'source_diff': 5.512500000000309e-05}, {'time': 0.023639944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:54.662" endtime="20201115 22:59:54.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:54.683" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:54.671" endtime="20201115 22:59:54.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.688" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 22:59:54.687" endtime="20201115 22:59:54.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.690" level="INFO">VALUE: [5.512500000000309e-05, 5.3916000000001074e-05, 5.465300000000173e-05, 5.4221999999999604e-05, 5.384699999999923e-05, 5.3957999999999784e-05, 5.450000000000246e-05, 5.413900000000166e-05, 5.3763999999997814e-05, 5.404200000000067e-05, 5.412499999999862e-05, 5.469500000000044e-05, 5.433399999999963e-05, 5.433300000000016e-05, 5.463900000000216e-05, 5.3721999999999104e-05, 5.4166000000001324e-05, 5.4513999999998564e-05, 5.45280000000016e-05, 5.418100000000037e-05, 5.436200000000224e-05, 5.4513999999998564e-05, 5.3999999999998494e-05, 5.406900000000034e-05, 5.4499999999998994e-05, 5.381999999999956e-05, 5.40280000000011e-05, 5.465300000000173e-05, 5.433399999999963e-05, 5.402700000000163e-05, 5.376400000000128e-05, 5.4763999999998814e-05, 5.384699999999923e-05, 5.391700000000055e-05, 5.452699999999866e-05, 5.412500000000209e-05, 5.4221999999999604e-05, 5.433399999999963e-05, 5.405599999999677e-05, 5.377699999999791e-05, 5.370900000000248e-05, 5.390299999999751e-05, 5.443099999999715e-05, 5.376300000000181e-05, 5.457000000000031e-05, 5.4194000000000464e-05, 5.419499999999994e-05, 5.440299999999801e-05, 5.4458000000000284e-05, 5.408399999999938e-05]</msg>
<status status="PASS" starttime="20201115 22:59:54.689" endtime="20201115 22:59:54.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.684" endtime="20201115 22:59:54.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.693" endtime="20201115 22:59:54.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.697" endtime="20201115 22:59:54.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.695" endtime="20201115 22:59:54.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.692" endtime="20201115 22:59:54.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.324" endtime="20201115 22:59:54.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.323" endtime="20201115 22:59:54.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.322" endtime="20201115 22:59:54.718"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.720" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.729" endtime="20201115 22:59:54.746"></status>
</kw>
<msg timestamp="20201115 22:59:54.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.727" endtime="20201115 22:59:54.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.747" endtime="20201115 22:59:54.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.750" endtime="20201115 22:59:54.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.724" endtime="20201115 22:59:54.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.722" endtime="20201115 22:59:54.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.759" endtime="20201115 22:59:55.043"></status>
</kw>
<msg timestamp="20201115 22:59:55.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02447, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024525889, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:59:54.757" endtime="20201115 22:59:55.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02447, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024525889, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:59:55.047" endtime="20201115 22:59:55.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.056" endtime="20201115 22:59:55.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.755" endtime="20201115 22:59:55.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.753" endtime="20201115 22:59:55.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:55.063" level="INFO">${RESULT} = [{'time': 0.024525889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.588899999999994e-05, 'source_diff': 5.588899999999994e-05}, {'time': 0.024633361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:55.059" endtime="20201115 22:59:55.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.077" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:55.064" endtime="20201115 22:59:55.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.081" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.080" endtime="20201115 22:59:55.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.084" level="INFO">VALUE: [5.588899999999994e-05, 5.4943999999997745e-05, 5.477800000000185e-05, 5.4929999999998175e-05, 5.494499999999722e-05, 5.538899999999944e-05, 5.4999999999999494e-05, 5.513899999999919e-05, 5.513899999999919e-05, 5.559700000000098e-05, 5.520900000000051e-05, 5.508300000000091e-05, 5.554099999999923e-05, 5.5693999999998495e-05, 5.495900000000026e-05, 5.5513999999999564e-05, 5.55280000000026e-05, 5.5263999999999314e-05, 5.5180000000001894e-05, 5.481999999999709e-05, 5.537499999999987e-05, 5.5263999999999314e-05, 5.53610000000003e-05, 5.544500000000119e-05, 5.538900000000291e-05, 5.4735999999999674e-05, 5.5472000000000854e-05, 5.559700000000098e-05, 5.526400000000278e-05, 5.494500000000069e-05, 5.5513999999999564e-05, 5.50280000000021e-05, 5.537499999999987e-05, 5.562500000000012e-05, 5.5707999999998065e-05, 5.55280000000026e-05, 5.5277999999998884e-05, 5.5263999999999314e-05, 5.538900000000291e-05, 5.4958000000000784e-05, 5.487499999999937e-05, 5.533300000000116e-05, 5.5263999999999314e-05, 5.481900000000109e-05, 5.483300000000066e-05, 5.5458000000001284e-05, 5.487499999999937e-05, 5.5194000000001464e-05, 5.569500000000144e-05, 5.534700000000073e-05]</msg>
<status status="PASS" starttime="20201115 22:59:55.083" endtime="20201115 22:59:55.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.078" endtime="20201115 22:59:55.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.087" endtime="20201115 22:59:55.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.090" endtime="20201115 22:59:55.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.089" endtime="20201115 22:59:55.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.085" endtime="20201115 22:59:55.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.721" endtime="20201115 22:59:55.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.719" endtime="20201115 22:59:55.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.718" endtime="20201115 22:59:55.111"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.114" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.122" endtime="20201115 22:59:55.138"></status>
</kw>
<msg timestamp="20201115 22:59:55.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.120" endtime="20201115 22:59:55.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.140" endtime="20201115 22:59:55.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.142" endtime="20201115 22:59:55.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.118" endtime="20201115 22:59:55.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.116" endtime="20201115 22:59:55.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.152" endtime="20201115 22:59:55.437"></status>
</kw>
<msg timestamp="20201115 22:59:55.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023476639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023533875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.150" endtime="20201115 22:59:55.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023476639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023533875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.441" endtime="20201115 22:59:55.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.450" endtime="20201115 22:59:55.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.147" endtime="20201115 22:59:55.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.146" endtime="20201115 22:59:55.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:55.456" level="INFO">${RESULT} = [{'time': 0.023533875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7235999999998705e-05, 'source_diff': 5.7235999999998705e-05}, {'time': 0.023624403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:55.453" endtime="20201115 22:59:55.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.470" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:55.457" endtime="20201115 22:59:55.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.474" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.473" endtime="20201115 22:59:55.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.476" level="INFO">VALUE: [5.7235999999998705e-05, 5.6513999999997094e-05, 5.6193999999998995e-05, 5.669499999999897e-05, 5.5750000000000244e-05, 5.640300000000001e-05, 5.6014000000000064e-05, 5.581899999999862e-05, 5.6138000000000715e-05, 5.6207999999998565e-05, 5.6319999999998593e-05, 5.6707999999999065e-05, 5.633299999999869e-05, 5.6500000000000994e-05, 5.5763999999999814e-05, 5.612500000000062e-05, 5.638900000000044e-05, 5.6402000000000535e-05, 5.6513999999997094e-05, 5.583299999999819e-05, 5.6207999999998565e-05, 5.609700000000148e-05, 5.63749999999974e-05, 5.6027999999999634e-05, 5.6194000000002464e-05, 5.6319999999998593e-05, 5.6179999999999425e-05, 5.6514000000000564e-05, 5.663900000000069e-05, 5.658400000000188e-05, 5.6264000000000314e-05, 5.633400000000163e-05, 5.6514000000000564e-05, 5.606999999999834e-05, 5.5999999999997024e-05, 5.5986000000000924e-05, 5.5986000000000924e-05, 5.593100000000212e-05, 5.6014000000000064e-05, 5.6500000000000994e-05, 5.663899999999722e-05, 5.663900000000069e-05, 5.612499999999715e-05, 5.633299999999869e-05, 5.633300000000216e-05, 5.605600000000224e-05, 5.638900000000044e-05, 5.580600000000199e-05, 5.655600000000274e-05, 5.612500000000062e-05]</msg>
<status status="PASS" starttime="20201115 22:59:55.475" endtime="20201115 22:59:55.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.471" endtime="20201115 22:59:55.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.480" endtime="20201115 22:59:55.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.483" endtime="20201115 22:59:55.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.481" endtime="20201115 22:59:55.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.478" endtime="20201115 22:59:55.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.114" endtime="20201115 22:59:55.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.113" endtime="20201115 22:59:55.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.112" endtime="20201115 22:59:55.504"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.506" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.515" endtime="20201115 22:59:55.531"></status>
</kw>
<msg timestamp="20201115 22:59:55.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.513" endtime="20201115 22:59:55.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.533" endtime="20201115 22:59:55.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.536" endtime="20201115 22:59:55.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.511" endtime="20201115 22:59:55.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.508" endtime="20201115 22:59:55.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.545" endtime="20201115 22:59:55.839"></status>
</kw>
<msg timestamp="20201115 22:59:55.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023522306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023580944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.543" endtime="20201115 22:59:55.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023522306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023580944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.843" endtime="20201115 22:59:55.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.851" endtime="20201115 22:59:55.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.541" endtime="20201115 22:59:55.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.539" endtime="20201115 22:59:55.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:55.858" level="INFO">${RESULT} = [{'time': 0.023580944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8637999999999746e-05, 'source_diff': 5.8637999999999746e-05}, {'time': 0.023678417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:55.854" endtime="20201115 22:59:55.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.871" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:55.859" endtime="20201115 22:59:55.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.875" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.874" endtime="20201115 22:59:55.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.878" level="INFO">VALUE: [5.8637999999999746e-05, 5.712500000000162e-05, 5.6750000000001244e-05, 5.7486000000002424e-05, 5.6943999999999745e-05, 5.693099999999965e-05, 5.682000000000256e-05, 5.71809999999999e-05, 5.677700000000091e-05, 5.693099999999965e-05, 5.7221999999999135e-05, 5.766700000000083e-05, 5.736099999999883e-05, 5.744499999999972e-05, 5.7430000000000675e-05, 5.686099999999833e-05, 5.7416000000001105e-05, 5.712500000000162e-05, 5.6764000000000814e-05, 5.688899999999747e-05, 5.7528000000001134e-05, 5.7179999999996955e-05, 5.6985999999998455e-05, 5.73749999999984e-05, 5.706899999999987e-05, 5.706899999999987e-05, 5.706899999999987e-05, 5.68749999999979e-05, 5.7028000000000634e-05, 5.6971999999998885e-05, 5.7430000000000675e-05, 5.761099999999908e-05, 5.68619999999978e-05, 5.693099999999965e-05, 5.684799999999823e-05, 5.6957999999999315e-05, 5.673699999999768e-05, 5.766700000000083e-05, 5.6735999999998205e-05, 5.7292000000000454e-05, 5.691700000000008e-05, 5.6999999999998024e-05, 5.6985999999998455e-05, 5.6916000000000605e-05, 5.7569999999999844e-05, 5.7429999999997206e-05, 5.6986000000001924e-05, 5.7306000000000024e-05, 5.7249999999998274e-05, 5.7528000000001134e-05]</msg>
<status status="PASS" starttime="20201115 22:59:55.876" endtime="20201115 22:59:55.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.872" endtime="20201115 22:59:55.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.881" endtime="20201115 22:59:55.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.884" endtime="20201115 22:59:55.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.883" endtime="20201115 22:59:55.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.879" endtime="20201115 22:59:55.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.507" endtime="20201115 22:59:55.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.505" endtime="20201115 22:59:55.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.504" endtime="20201115 22:59:55.905"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.908" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.916" endtime="20201115 22:59:55.933"></status>
</kw>
<msg timestamp="20201115 22:59:55.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.915" endtime="20201115 22:59:55.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.935" endtime="20201115 22:59:55.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.937" endtime="20201115 22:59:55.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.912" endtime="20201115 22:59:55.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.910" endtime="20201115 22:59:55.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.946" endtime="20201115 22:59:56.231"></status>
</kw>
<msg timestamp="20201115 22:59:56.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023995208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024054514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.945" endtime="20201115 22:59:56.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023995208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024054514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.236" endtime="20201115 22:59:56.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.244" endtime="20201115 22:59:56.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.942" endtime="20201115 22:59:56.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.940" endtime="20201115 22:59:56.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.250" level="INFO">${RESULT} = [{'time': 0.024054514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9305999999998554e-05, 'source_diff': 5.9305999999998554e-05}, {'time': 0.024161958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:56.247" endtime="20201115 22:59:56.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:56.264" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:56.251" endtime="20201115 22:59:56.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.268" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 22:59:56.267" endtime="20201115 22:59:56.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.271" level="INFO">VALUE: [5.9305999999998554e-05, 5.80550000000013e-05, 5.829100000000198e-05, 5.816699999999786e-05, 5.8584000000000414e-05, 5.812499999999915e-05, 5.790300000000151e-05, 5.841699999999811e-05, 5.8694000000001495e-05, 5.8166000000001855e-05, 5.809700000000001e-05, 5.8541999999998234e-05, 5.8320000000000594e-05, 5.8055999999997304e-05, 5.8180000000001425e-05, 5.78749999999989e-05, 5.793100000000065e-05, 5.798699999999893e-05, 5.784699999999976e-05, 5.8680000000001925e-05, 5.7944000000000745e-05, 5.816699999999786e-05, 5.781900000000062e-05, 5.841700000000158e-05, 5.8680000000001925e-05, 5.8347999999999733e-05, 5.8485999999999955e-05, 5.838900000000244e-05, 5.787500000000237e-05, 5.859700000000051e-05, 5.862499999999965e-05, 5.791700000000108e-05, 5.861100000000008e-05, 5.815299999999829e-05, 5.862499999999965e-05, 5.8679999999998456e-05, 5.8457999999997345e-05, 5.8056000000000774e-05, 5.78619999999988e-05, 5.7735999999999205e-05, 5.78749999999989e-05, 5.86810000000014e-05, 5.8415999999998636e-05, 5.8485999999999955e-05, 5.861100000000008e-05, 5.7791999999997484e-05, 5.7750000000002244e-05, 5.786099999999933e-05, 5.8306000000001024e-05, 5.811099999999958e-05]</msg>
<status status="PASS" starttime="20201115 22:59:56.269" endtime="20201115 22:59:56.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.264" endtime="20201115 22:59:56.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.274" endtime="20201115 22:59:56.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.277" endtime="20201115 22:59:56.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.275" endtime="20201115 22:59:56.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.272" endtime="20201115 22:59:56.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.908" endtime="20201115 22:59:56.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.906" endtime="20201115 22:59:56.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.906" endtime="20201115 22:59:56.299"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.301" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.309" endtime="20201115 22:59:56.326"></status>
</kw>
<msg timestamp="20201115 22:59:56.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.307" endtime="20201115 22:59:56.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.328" endtime="20201115 22:59:56.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.331" endtime="20201115 22:59:56.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.305" endtime="20201115 22:59:56.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.303" endtime="20201115 22:59:56.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.339" endtime="20201115 22:59:56.624"></status>
</kw>
<msg timestamp="20201115 22:59:56.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024367097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024427458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.338" endtime="20201115 22:59:56.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024367097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024427458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.628" endtime="20201115 22:59:56.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.636" endtime="20201115 22:59:56.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.335" endtime="20201115 22:59:56.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.334" endtime="20201115 22:59:56.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.643" level="INFO">${RESULT} = [{'time': 0.024427458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.036099999999836e-05, 'source_diff': 6.036099999999836e-05}, {'time': 0.024520944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:56.640" endtime="20201115 22:59:56.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:56.658" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:56.644" endtime="20201115 22:59:56.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.662" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 22:59:56.661" endtime="20201115 22:59:56.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.664" level="INFO">VALUE: [6.036099999999836e-05, 5.9151999999999816e-05, 5.909700000000101e-05, 5.9193999999998526e-05, 5.962499999999718e-05, 5.8943999999998276e-05, 5.963900000000022e-05, 5.944500000000172e-05, 5.9165999999999386e-05, 5.931900000000212e-05, 5.9250000000000275e-05, 5.9263999999999845e-05, 5.9235999999997235e-05, 5.9250000000000275e-05, 5.9221999999997665e-05, 5.9193999999998526e-05, 5.9500000000000525e-05, 5.9458000000001815e-05, 5.913899999999972e-05, 5.916699999999886e-05, 5.961100000000108e-05, 5.8736000000000205e-05, 5.8708000000001065e-05, 5.963900000000022e-05, 5.905499999999883e-05, 5.9500000000000525e-05, 5.9320000000001594e-05, 5.8943999999998276e-05, 5.88749999999999e-05, 5.9486000000000955e-05, 5.916699999999886e-05, 5.91810000000019e-05, 5.9070000000001344e-05, 5.9305999999998554e-05, 5.9541999999999234e-05, 5.9263999999999845e-05, 5.9027999999999164e-05, 5.962500000000065e-05, 5.894500000000122e-05, 5.93750000000004e-05, 5.8986000000000455e-05, 5.95550000000028e-05, 5.884699999999729e-05, 5.88749999999999e-05, 5.96810000000024e-05, 5.8736000000000205e-05, 5.943100000000215e-05, 5.940299999999954e-05, 5.954099999999976e-05, 5.8736000000000205e-05]</msg>
<status status="PASS" starttime="20201115 22:59:56.663" endtime="20201115 22:59:56.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.658" endtime="20201115 22:59:56.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.668" endtime="20201115 22:59:56.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.671" endtime="20201115 22:59:56.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.670" endtime="20201115 22:59:56.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.666" endtime="20201115 22:59:56.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.302" endtime="20201115 22:59:56.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.300" endtime="20201115 22:59:56.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.299" endtime="20201115 22:59:56.693"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.695" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.704" endtime="20201115 22:59:56.721"></status>
</kw>
<msg timestamp="20201115 22:59:56.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.702" endtime="20201115 22:59:56.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.723" endtime="20201115 22:59:56.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.725" endtime="20201115 22:59:56.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.700" endtime="20201115 22:59:56.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.697" endtime="20201115 22:59:56.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.734" endtime="20201115 22:59:57.019"></status>
</kw>
<msg timestamp="20201115 22:59:57.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024748583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02481, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:59:56.732" endtime="20201115 22:59:57.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024748583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02481, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:59:57.023" endtime="20201115 22:59:57.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.032" endtime="20201115 22:59:57.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.730" endtime="20201115 22:59:57.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.728" endtime="20201115 22:59:57.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.038" level="INFO">${RESULT} = [{'time': 0.02481, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.141699999999764e-05, 'source_diff': 6.141699999999764e-05}, {'time': 0.024905514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201115 22:59:57.035" endtime="20201115 22:59:57.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.051" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:57.039" endtime="20201115 22:59:57.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.056" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.055" endtime="20201115 22:59:57.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.059" level="INFO">VALUE: [6.141699999999764e-05, 6.044499999999925e-05, 6.016699999999986e-05, 6.015300000000029e-05, 6.015300000000029e-05, 5.9916000000000136e-05, 5.98750000000009e-05, 6.0388000000001496e-05, 6.011099999999811e-05, 5.979100000000001e-05, 6.0056000000002774e-05, 5.9722000000001635e-05, 5.98750000000009e-05, 5.980500000000305e-05, 6.0542000000000235e-05, 6.0305999999999554e-05, 5.9999999999997555e-05, 6.061100000000208e-05, 6.005499999999983e-05, 5.984700000000176e-05, 6.030500000000008e-05, 5.979100000000001e-05, 6.011100000000158e-05, 6.041700000000011e-05, 5.981899999999915e-05, 6.065300000000079e-05, 5.993100000000265e-05, 6.062500000000165e-05, 6.0722000000002635e-05, 6.0193999999999526e-05, 6.030500000000008e-05, 6.0250000000001275e-05, 5.986099999999786e-05, 5.986100000000133e-05, 6.0665999999997416e-05, 5.9819999999998624e-05, 6.029100000000051e-05, 6.00689999999994e-05, 6.066700000000036e-05, 6.036099999999836e-05, 5.9792000000002954e-05, 6.004100000000026e-05, 6.0500000000001525e-05, 6.0264000000000845e-05, 6.061099999999861e-05, 6.018099999999943e-05, 6.030500000000008e-05, 5.984699999999829e-05, 6.036100000000183e-05, 6.0014000000000595e-05]</msg>
<status status="PASS" starttime="20201115 22:59:57.057" endtime="20201115 22:59:57.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.052" endtime="20201115 22:59:57.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.062" endtime="20201115 22:59:57.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.065" endtime="20201115 22:59:57.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.064" endtime="20201115 22:59:57.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.060" endtime="20201115 22:59:57.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.696" endtime="20201115 22:59:57.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.694" endtime="20201115 22:59:57.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.693" endtime="20201115 22:59:57.087"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.089" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.097" endtime="20201115 22:59:57.114"></status>
</kw>
<msg timestamp="20201115 22:59:57.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.095" endtime="20201115 22:59:57.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.115" endtime="20201115 22:59:57.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.118" endtime="20201115 22:59:57.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.093" endtime="20201115 22:59:57.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.091" endtime="20201115 22:59:57.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.127" endtime="20201115 22:59:57.411"></status>
</kw>
<msg timestamp="20201115 22:59:57.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023463556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023525653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.125" endtime="20201115 22:59:57.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023463556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023525653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.415" endtime="20201115 22:59:57.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.423" endtime="20201115 22:59:57.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.123" endtime="20201115 22:59:57.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.121" endtime="20201115 22:59:57.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.429" level="INFO">${RESULT} = [{'time': 0.023525653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.209700000000054e-05, 'source_diff': 6.209700000000054e-05}, {'time': 0.023626139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:57.426" endtime="20201115 22:59:57.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.443" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:57.431" endtime="20201115 22:59:57.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.448" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.447" endtime="20201115 22:59:57.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.450" level="INFO">VALUE: [6.209700000000054e-05, 6.132000000000012e-05, 6.0999999999998555e-05, 6.08750000000019e-05, 6.161099999999961e-05, 6.154099999999829e-05, 6.0985999999998985e-05, 6.136099999999936e-05, 6.149999999999906e-05, 6.0721999999999166e-05, 6.127799999999795e-05, 6.119400000000053e-05, 6.169400000000103e-05, 6.130500000000108e-05, 6.123599999999924e-05, 6.086100000000233e-05, 6.148599999999949e-05, 6.142999999999774e-05, 6.0833999999999194e-05, 6.10690000000004e-05, 6.0971999999999416e-05, 6.0735999999998735e-05, 6.143100000000068e-05, 6.111099999999911e-05, 6.066700000000036e-05, 6.130499999999761e-05, 6.0778000000000915e-05, 6.143100000000068e-05, 6.0901999999998097e-05, 6.109699999999954e-05, 6.12499999999988e-05, 6.104100000000126e-05, 6.137499999999893e-05, 6.169400000000103e-05, 6.0999999999998555e-05, 6.0929999999997236e-05, 6.123599999999924e-05, 6.093100000000018e-05, 6.123700000000218e-05, 6.109699999999954e-05, 6.0985999999998985e-05, 6.129200000000098e-05, 6.0930000000000706e-05, 6.13339999999997e-05, 6.129200000000098e-05, 6.129200000000098e-05, 6.134699999999979e-05, 6.094499999999975e-05, 6.0985999999998985e-05, 6.097299999999889e-05]</msg>
<status status="PASS" starttime="20201115 22:59:57.449" endtime="20201115 22:59:57.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.444" endtime="20201115 22:59:57.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.453" endtime="20201115 22:59:57.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.457" endtime="20201115 22:59:57.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.455" endtime="20201115 22:59:57.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.452" endtime="20201115 22:59:57.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.090" endtime="20201115 22:59:57.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.088" endtime="20201115 22:59:57.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.087" endtime="20201115 22:59:57.478"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.480" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.488" endtime="20201115 22:59:57.505"></status>
</kw>
<msg timestamp="20201115 22:59:57.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.487" endtime="20201115 22:59:57.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.506" endtime="20201115 22:59:57.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.509" endtime="20201115 22:59:57.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.484" endtime="20201115 22:59:57.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.482" endtime="20201115 22:59:57.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.518" endtime="20201115 22:59:57.806"></status>
</kw>
<msg timestamp="20201115 22:59:57.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023501014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023564125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.516" endtime="20201115 22:59:57.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023501014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023564125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.810" endtime="20201115 22:59:57.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.819" endtime="20201115 22:59:57.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.514" endtime="20201115 22:59:57.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.512" endtime="20201115 22:59:57.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.825" level="INFO">${RESULT} = [{'time': 0.023564125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.311099999999764e-05, 'source_diff': 6.311099999999764e-05}, {'time': 0.023662653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:57.822" endtime="20201115 22:59:57.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.839" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:57.826" endtime="20201115 22:59:57.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.843" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.842" endtime="20201115 22:59:57.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.845" level="INFO">VALUE: [6.311099999999764e-05, 6.254199999999877e-05, 6.211100000000011e-05, 6.20560000000013e-05, 6.236100000000036e-05, 6.261100000000061e-05, 6.244499999999778e-05, 6.223699999999971e-05, 6.245800000000135e-05, 6.17080000000006e-05, 6.22080000000011e-05, 6.197200000000042e-05, 6.180499999999811e-05, 6.209699999999707e-05, 6.188799999999953e-05, 6.186099999999986e-05, 6.231899999999818e-05, 6.177799999999845e-05, 6.23889999999995e-05, 6.242999999999874e-05, 6.243100000000168e-05, 6.23479999999968e-05, 6.227699999999947e-05, 6.247200000000092e-05, 6.220799999999763e-05, 6.179199999999802e-05, 6.169400000000103e-05, 6.217999999999849e-05, 6.179099999999854e-05, 6.204099999999879e-05, 6.209700000000054e-05, 6.236100000000036e-05, 6.1888999999999e-05, 6.234700000000079e-05, 6.266599999999942e-05, 6.27080000000016e-05, 6.247199999999745e-05, 6.197200000000042e-05, 6.184700000000029e-05, 6.27080000000016e-05, 6.202800000000216e-05, 6.229200000000198e-05, 6.20829999999975e-05, 6.179199999999802e-05, 6.230599999999809e-05, 6.208300000000097e-05, 6.176400000000234e-05, 6.223600000000024e-05, 6.204099999999879e-05, 6.265199999999985e-05]</msg>
<status status="PASS" starttime="20201115 22:59:57.844" endtime="20201115 22:59:57.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.840" endtime="20201115 22:59:57.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.849" endtime="20201115 22:59:57.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.852" endtime="20201115 22:59:57.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.850" endtime="20201115 22:59:57.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.847" endtime="20201115 22:59:57.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.481" endtime="20201115 22:59:57.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.479" endtime="20201115 22:59:57.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.478" endtime="20201115 22:59:57.873"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.875" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.883" endtime="20201115 22:59:57.901"></status>
</kw>
<msg timestamp="20201115 22:59:57.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.882" endtime="20201115 22:59:57.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.903" endtime="20201115 22:59:57.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.905" endtime="20201115 22:59:57.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.879" endtime="20201115 22:59:57.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.877" endtime="20201115 22:59:57.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.914" endtime="20201115 22:59:58.199"></status>
</kw>
<msg timestamp="20201115 22:59:58.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024218375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024283, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:59:57.913" endtime="20201115 22:59:58.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024218375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024283, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:59:58.204" endtime="20201115 22:59:58.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.212" endtime="20201115 22:59:58.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.910" endtime="20201115 22:59:58.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.908" endtime="20201115 22:59:58.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:58.218" level="INFO">${RESULT} = [{'time': 0.024283, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.462499999999871e-05, 'source_diff': 6.462499999999871e-05}, {'time': 0.024386472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:59:58.215" endtime="20201115 22:59:58.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.233" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:58.219" endtime="20201115 22:59:58.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.237" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 22:59:58.236" endtime="20201115 22:59:58.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.240" level="INFO">VALUE: [6.462499999999871e-05, 6.312500000000068e-05, 6.345799999999888e-05, 6.345799999999888e-05, 6.305500000000283e-05, 6.318099999999896e-05, 6.359800000000151e-05, 6.333399999999823e-05, 6.273700000000021e-05, 6.356899999999943e-05, 6.329100000000004e-05, 6.279099999999954e-05, 6.298600000000099e-05, 6.27219999999977e-05, 6.277799999999945e-05, 6.315200000000035e-05, 6.345800000000235e-05, 6.366699999999989e-05, 6.355499999999986e-05, 6.280499999999911e-05, 6.311100000000111e-05, 6.322200000000167e-05, 6.32500000000008e-05, 6.3582999999999e-05, 6.343099999999921e-05, 6.347199999999845e-05, 6.297200000000142e-05, 6.277799999999945e-05, 6.35699999999989e-05, 6.3582999999999e-05, 6.27219999999977e-05, 6.272300000000064e-05, 6.311100000000111e-05, 6.336099999999789e-05, 6.300000000000056e-05, 6.363899999999728e-05, 6.301400000000013e-05, 6.298600000000099e-05, 6.369399999999956e-05, 6.277799999999945e-05, 6.295799999999838e-05, 6.362500000000118e-05, 6.32080000000021e-05, 6.30279999999997e-05, 6.32219999999982e-05, 6.295799999999838e-05, 6.300000000000056e-05, 6.347199999999845e-05, 6.291699999999914e-05, 6.345800000000235e-05]</msg>
<status status="PASS" starttime="20201115 22:59:58.238" endtime="20201115 22:59:58.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.234" endtime="20201115 22:59:58.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.243" endtime="20201115 22:59:58.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.246" endtime="20201115 22:59:58.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.245" endtime="20201115 22:59:58.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.241" endtime="20201115 22:59:58.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.876" endtime="20201115 22:59:58.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.874" endtime="20201115 22:59:58.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.873" endtime="20201115 22:59:58.267"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.270" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.278" endtime="20201115 22:59:58.295"></status>
</kw>
<msg timestamp="20201115 22:59:58.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.276" endtime="20201115 22:59:58.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.296" endtime="20201115 22:59:58.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.299" endtime="20201115 22:59:58.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.273" endtime="20201115 22:59:58.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.271" endtime="20201115 22:59:58.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.308" endtime="20201115 22:59:58.594"></status>
</kw>
<msg timestamp="20201115 22:59:58.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023522792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023587569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.306" endtime="20201115 22:59:58.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023522792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023587569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.598" endtime="20201115 22:59:58.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.606" endtime="20201115 22:59:58.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.304" endtime="20201115 22:59:58.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.302" endtime="20201115 22:59:58.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:58.613" level="INFO">${RESULT} = [{'time': 0.023587569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.47769999999985e-05, 'source_diff': 6.47769999999985e-05}, {'time': 0.023700028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:59:58.609" endtime="20201115 22:59:58.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.626" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:58.614" endtime="20201115 22:59:58.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.630" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 22:59:58.629" endtime="20201115 22:59:58.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.633" level="INFO">VALUE: [6.47769999999985e-05, 6.448600000000249e-05, 6.437500000000193e-05, 6.416599999999745e-05, 6.387499999999796e-05, 6.465300000000132e-05, 6.409700000000254e-05, 6.45699999999999e-05, 6.416600000000092e-05, 6.441700000000064e-05, 6.412500000000168e-05, 6.373599999999827e-05, 6.397200000000242e-05, 6.427700000000147e-05, 6.397199999999895e-05, 6.447199999999945e-05, 6.384800000000176e-05, 6.449999999999859e-05, 6.372300000000164e-05, 6.443100000000021e-05, 6.399999999999809e-05, 6.406899999999993e-05, 6.459699999999957e-05, 6.411100000000211e-05, 6.37219999999987e-05, 6.398600000000199e-05, 6.430500000000061e-05, 6.40280000000007e-05, 6.461099999999914e-05, 6.423600000000224e-05, 6.402700000000122e-05, 6.426299999999843e-05, 6.423599999999877e-05, 6.391700000000014e-05, 6.427700000000147e-05, 6.441700000000064e-05, 6.397199999999895e-05, 6.413900000000125e-05, 6.424999999999834e-05, 6.436099999999889e-05, 6.383299999999925e-05, 6.386100000000186e-05, 6.423599999999877e-05, 6.447200000000292e-05, 6.466599999999795e-05, 6.411099999999864e-05, 6.45699999999999e-05, 6.397199999999895e-05, 6.447299999999892e-05, 6.454100000000129e-05]</msg>
<status status="PASS" starttime="20201115 22:59:58.631" endtime="20201115 22:59:58.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.627" endtime="20201115 22:59:58.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.636" endtime="20201115 22:59:58.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.639" endtime="20201115 22:59:58.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.638" endtime="20201115 22:59:58.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.634" endtime="20201115 22:59:58.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.270" endtime="20201115 22:59:58.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.268" endtime="20201115 22:59:58.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.268" endtime="20201115 22:59:58.660"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.663" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.671" endtime="20201115 22:59:58.688"></status>
</kw>
<msg timestamp="20201115 22:59:58.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.670" endtime="20201115 22:59:58.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.690" endtime="20201115 22:59:58.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.692" endtime="20201115 22:59:58.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.667" endtime="20201115 22:59:58.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.665" endtime="20201115 22:59:58.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.701" endtime="20201115 22:59:58.987"></status>
</kw>
<msg timestamp="20201115 22:59:58.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023935181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024000958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.700" endtime="20201115 22:59:58.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023935181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024000958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.991" endtime="20201115 22:59:58.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.999" endtime="20201115 22:59:59.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.697" endtime="20201115 22:59:59.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.695" endtime="20201115 22:59:59.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.006" level="INFO">${RESULT} = [{'time': 0.024000958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.57769999999995e-05, 'source_diff': 6.57769999999995e-05}, {'time': 0.024102417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:59:59.002" endtime="20201115 22:59:59.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.019" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:59.007" endtime="20201115 22:59:59.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.023" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.022" endtime="20201115 22:59:59.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.026" level="INFO">VALUE: [6.57769999999995e-05, 6.486099999999939e-05, 6.537499999999946e-05, 6.495800000000038e-05, 6.545800000000088e-05, 6.487499999999896e-05, 6.5276999999999e-05, 6.55419999999983e-05, 6.536099999999989e-05, 6.484699999999982e-05, 6.524999999999934e-05, 6.477700000000197e-05, 6.527799999999848e-05, 6.493099999999724e-05, 6.547299999999992e-05, 6.555600000000134e-05, 6.490199999999863e-05, 6.559700000000057e-05, 6.541699999999817e-05, 6.515199999999888e-05, 6.505499999999789e-05, 6.473599999999927e-05, 6.52220000000002e-05, 6.552799999999873e-05, 6.502700000000222e-05, 6.516700000000139e-05, 6.474999999999884e-05, 6.473599999999927e-05, 6.536099999999989e-05, 6.520799999999716e-05, 6.491600000000167e-05, 6.512499999999921e-05, 6.544500000000078e-05, 6.499999999999909e-05, 6.555599999999787e-05, 6.565300000000232e-05, 6.547299999999992e-05, 6.533400000000023e-05, 6.47219999999997e-05, 6.559700000000057e-05, 6.502699999999875e-05, 6.570800000000113e-05, 6.515300000000182e-05, 6.495800000000038e-05, 6.501299999999918e-05, 6.473699999999874e-05, 6.558400000000048e-05, 6.534700000000032e-05, 6.563899999999928e-05, 6.498599999999952e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.024" endtime="20201115 22:59:59.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.020" endtime="20201115 22:59:59.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.029" endtime="20201115 22:59:59.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.032" endtime="20201115 22:59:59.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.031" endtime="20201115 22:59:59.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.027" endtime="20201115 22:59:59.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.663" endtime="20201115 22:59:59.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.661" endtime="20201115 22:59:59.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.661" endtime="20201115 22:59:59.054"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.056" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.064" endtime="20201115 22:59:59.081"></status>
</kw>
<msg timestamp="20201115 22:59:59.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.063" endtime="20201115 22:59:59.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.083" endtime="20201115 22:59:59.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.085" endtime="20201115 22:59:59.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.060" endtime="20201115 22:59:59.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.058" endtime="20201115 22:59:59.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.094" endtime="20201115 22:59:59.380"></status>
</kw>
<msg timestamp="20201115 22:59:59.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023879375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023946306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.093" endtime="20201115 22:59:59.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023879375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023946306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.384" endtime="20201115 22:59:59.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.392" endtime="20201115 22:59:59.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.090" endtime="20201115 22:59:59.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.088" endtime="20201115 22:59:59.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.399" level="INFO">${RESULT} = [{'time': 0.023946306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.693099999999924e-05, 'source_diff': 6.693099999999924e-05}, {'time': 0.024046792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:59.395" endtime="20201115 22:59:59.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.412" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:59.400" endtime="20201115 22:59:59.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.416" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.415" endtime="20201115 22:59:59.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.419" level="INFO">VALUE: [6.693099999999924e-05, 6.647300000000092e-05, 6.577799999999898e-05, 6.659700000000157e-05, 6.584700000000082e-05, 6.609700000000107e-05, 6.64029999999996e-05, 6.654099999999982e-05, 6.648599999999755e-05, 6.605599999999837e-05, 6.633300000000175e-05, 6.606900000000193e-05, 6.586100000000039e-05, 6.576400000000288e-05, 6.652799999999973e-05, 6.577799999999898e-05, 6.579200000000202e-05, 6.584699999999735e-05, 6.65969999999981e-05, 6.604200000000227e-05, 6.636200000000037e-05, 6.64159999999997e-05, 6.641699999999917e-05, 6.605600000000184e-05, 6.634699999999785e-05, 6.64159999999997e-05, 6.631899999999871e-05, 6.629199999999905e-05, 6.652799999999973e-05, 6.6583999999998e-05, 6.584700000000082e-05, 6.577799999999898e-05, 6.586100000000039e-05, 6.594500000000128e-05, 6.64029999999996e-05, 6.65969999999981e-05, 6.648599999999755e-05, 6.629099999999957e-05, 6.620800000000163e-05, 6.597200000000095e-05, 6.597300000000042e-05, 6.654099999999982e-05, 6.620800000000163e-05, 6.636100000000089e-05, 6.618100000000196e-05, 6.65419999999993e-05, 6.655499999999939e-05, 6.595800000000138e-05, 6.60830000000015e-05, 6.62220000000012e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.417" endtime="20201115 22:59:59.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.413" endtime="20201115 22:59:59.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.422" endtime="20201115 22:59:59.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.426" endtime="20201115 22:59:59.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.424" endtime="20201115 22:59:59.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.421" endtime="20201115 22:59:59.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.057" endtime="20201115 22:59:59.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.055" endtime="20201115 22:59:59.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.054" endtime="20201115 22:59:59.447"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.449" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.457" endtime="20201115 22:59:59.475"></status>
</kw>
<msg timestamp="20201115 22:59:59.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.456" endtime="20201115 22:59:59.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.477" endtime="20201115 22:59:59.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.479" endtime="20201115 22:59:59.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.453" endtime="20201115 22:59:59.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.451" endtime="20201115 22:59:59.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.488" endtime="20201115 22:59:59.774"></status>
</kw>
<msg timestamp="20201115 22:59:59.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024411, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024478986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:59:59.487" endtime="20201115 22:59:59.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024411, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024478986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:59:59.778" endtime="20201115 22:59:59.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.787" endtime="20201115 22:59:59.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.484" endtime="20201115 22:59:59.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.482" endtime="20201115 22:59:59.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.794" level="INFO">${RESULT} = [{'time': 0.024478986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.798600000000252e-05, 'source_diff': 6.798600000000252e-05}, {'time': 0.024594458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:59.791" endtime="20201115 22:59:59.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.809" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:59:59.796" endtime="20201115 22:59:59.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.813" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.813" endtime="20201115 22:59:59.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.820" level="INFO">VALUE: [6.798600000000252e-05, 6.730500000000014e-05, 6.67640000000004e-05, 6.715300000000035e-05, 6.67229999999977e-05, 6.684700000000182e-05, 6.69160000000002e-05, 6.690200000000063e-05, 6.725000000000134e-05, 6.688900000000053e-05, 6.699999999999762e-05, 6.706999999999894e-05, 6.745900000000235e-05, 6.697199999999848e-05, 6.67640000000004e-05, 6.670899999999813e-05, 6.730499999999667e-05, 6.673600000000127e-05, 6.752800000000073e-05, 6.694399999999934e-05, 6.716699999999992e-05, 6.75969999999991e-05, 6.749999999999812e-05, 6.723700000000124e-05, 6.752700000000125e-05, 6.69160000000002e-05, 6.73480000000018e-05, 6.72640000000009e-05, 6.672199999999823e-05, 6.683300000000225e-05, 6.702800000000023e-05, 6.693000000000324e-05, 6.679100000000007e-05, 6.72640000000009e-05, 6.713899999999731e-05, 6.675000000000084e-05, 6.745899999999888e-05, 6.672199999999823e-05, 6.755599999999987e-05, 6.677799999999998e-05, 6.713900000000078e-05, 6.704100000000032e-05, 6.683400000000173e-05, 6.741599999999723e-05, 6.761100000000214e-05, 6.758299999999953e-05, 6.756999999999944e-05, 6.702799999999676e-05, 6.720800000000263e-05, 6.67090000000016e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.815" endtime="20201115 22:59:59.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.810" endtime="20201115 22:59:59.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.823" endtime="20201115 22:59:59.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.827" endtime="20201115 22:59:59.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.825" endtime="20201115 22:59:59.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.822" endtime="20201115 22:59:59.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.450" endtime="20201115 22:59:59.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.448" endtime="20201115 22:59:59.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.447" endtime="20201115 22:59:59.848"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.850" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.858" endtime="20201115 22:59:59.875"></status>
</kw>
<msg timestamp="20201115 22:59:59.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.857" endtime="20201115 22:59:59.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.877" endtime="20201115 22:59:59.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.879" endtime="20201115 22:59:59.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.854" endtime="20201115 22:59:59.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.852" endtime="20201115 22:59:59.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.888" endtime="20201115 23:00:00.173"></status>
</kw>
<msg timestamp="20201115 23:00:00.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023464181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023533792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.887" endtime="20201115 23:00:00.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023464181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023533792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.178" endtime="20201115 23:00:00.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.186" endtime="20201115 23:00:00.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.884" endtime="20201115 23:00:00.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.883" endtime="20201115 23:00:00.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.193" level="INFO">${RESULT} = [{'time': 0.023533792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.961100000000067e-05, 'source_diff': 6.961100000000067e-05}, {'time': 0.023643236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:00.189" endtime="20201115 23:00:00.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.206" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:00.194" endtime="20201115 23:00:00.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.211" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.210" endtime="20201115 23:00:00.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.214" level="INFO">VALUE: [6.961100000000067e-05, 6.784700000000282e-05, 6.813900000000178e-05, 6.845800000000041e-05, 6.777699999999803e-05, 6.838900000000203e-05, 6.845800000000041e-05, 6.781900000000021e-05, 6.794499999999981e-05, 6.783299999999978e-05, 6.861099999999967e-05, 6.805500000000089e-05, 6.833399999999976e-05, 6.806900000000046e-05, 6.847200000000345e-05, 6.837500000000246e-05, 6.787499999999849e-05, 6.770799999999966e-05, 6.820800000000016e-05, 6.851400000000216e-05, 6.851399999999869e-05, 6.819400000000059e-05, 6.777800000000098e-05, 6.82640000000019e-05, 6.852800000000173e-05, 6.840199999999866e-05, 6.783299999999978e-05, 6.848599999999955e-05, 6.833300000000028e-05, 6.832000000000019e-05, 6.826399999999844e-05, 6.786099999999892e-05, 6.8584e-05, 6.820800000000016e-05, 6.765300000000085e-05, 6.794400000000034e-05, 6.787500000000196e-05, 6.777799999999751e-05, 6.79030000000011e-05, 6.80420000000008e-05, 6.820899999999963e-05, 6.861100000000314e-05, 6.79030000000011e-05, 6.840299999999813e-05, 6.852799999999826e-05, 6.836100000000289e-05, 6.795799999999991e-05, 6.797199999999948e-05, 6.841599999999823e-05, 6.801399999999819e-05]</msg>
<status status="PASS" starttime="20201115 23:00:00.212" endtime="20201115 23:00:00.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.207" endtime="20201115 23:00:00.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.217" endtime="20201115 23:00:00.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.221" endtime="20201115 23:00:00.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.219" endtime="20201115 23:00:00.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.215" endtime="20201115 23:00:00.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.851" endtime="20201115 23:00:00.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.849" endtime="20201115 23:00:00.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.848" endtime="20201115 23:00:00.242"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.244" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.253" endtime="20201115 23:00:00.270"></status>
</kw>
<msg timestamp="20201115 23:00:00.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.251" endtime="20201115 23:00:00.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.271" endtime="20201115 23:00:00.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.274" endtime="20201115 23:00:00.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.249" endtime="20201115 23:00:00.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.246" endtime="20201115 23:00:00.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.283" endtime="20201115 23:00:00.568"></status>
</kw>
<msg timestamp="20201115 23:00:00.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023870736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0239405, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:00.281" endtime="20201115 23:00:00.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023870736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0239405, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:00.572" endtime="20201115 23:00:00.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.581" endtime="20201115 23:00:00.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.279" endtime="20201115 23:00:00.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.277" endtime="20201115 23:00:00.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.588" level="INFO">${RESULT} = [{'time': 0.0239405, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.976399999999994e-05, 'source_diff': 6.976399999999994e-05}, {'time': 0.024046, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6....</msg>
<status status="PASS" starttime="20201115 23:00:00.584" endtime="20201115 23:00:00.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.601" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:00.589" endtime="20201115 23:00:00.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.605" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.604" endtime="20201115 23:00:00.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.608" level="INFO">VALUE: [6.976399999999994e-05, 6.875000000000284e-05, 6.954199999999883e-05, 6.957000000000144e-05, 6.948600000000055e-05, 6.884700000000035e-05, 6.894399999999787e-05, 6.954099999999935e-05, 6.899999999999962e-05, 6.883400000000026e-05, 6.913899999999931e-05, 6.915300000000235e-05, 6.924999999999987e-05, 6.876399999999894e-05, 6.956899999999849e-05, 6.880599999999765e-05, 6.963899999999981e-05, 6.95559999999984e-05, 6.876399999999894e-05, 6.941599999999923e-05, 6.888900000000253e-05, 6.912499999999974e-05, 6.902799999999876e-05, 6.870800000000066e-05, 6.908300000000103e-05, 6.869400000000109e-05, 6.890299999999863e-05, 6.876399999999894e-05, 6.9277000000003e-05, 6.922200000000073e-05, 6.927799999999901e-05, 6.951399999999969e-05, 6.906900000000146e-05, 6.945900000000088e-05, 6.893100000000124e-05, 6.919500000000106e-05, 6.894499999999734e-05, 6.929100000000257e-05, 6.899999999999962e-05, 6.883300000000078e-05, 6.940299999999913e-05, 6.897200000000048e-05, 6.870900000000013e-05, 6.884700000000035e-05, 6.9584000000001e-05, 6.959800000000058e-05, 6.873699999999927e-05, 6.92640000000029e-05, 6.933400000000076e-05, 6.956900000000196e-05]</msg>
<status status="PASS" starttime="20201115 23:00:00.606" endtime="20201115 23:00:00.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.602" endtime="20201115 23:00:00.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.611" endtime="20201115 23:00:00.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.614" endtime="20201115 23:00:00.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.613" endtime="20201115 23:00:00.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.609" endtime="20201115 23:00:00.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.245" endtime="20201115 23:00:00.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.243" endtime="20201115 23:00:00.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.242" endtime="20201115 23:00:00.635"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.638" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.646" endtime="20201115 23:00:00.663"></status>
</kw>
<msg timestamp="20201115 23:00:00.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.644" endtime="20201115 23:00:00.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.665" endtime="20201115 23:00:00.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.667" endtime="20201115 23:00:00.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.642" endtime="20201115 23:00:00.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.640" endtime="20201115 23:00:00.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.676" endtime="20201115 23:00:00.969"></status>
</kw>
<msg timestamp="20201115 23:00:00.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023474667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023545583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.674" endtime="20201115 23:00:00.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023474667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023545583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.974" endtime="20201115 23:00:00.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.982" endtime="20201115 23:00:00.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.672" endtime="20201115 23:00:00.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.670" endtime="20201115 23:00:00.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.988" level="INFO">${RESULT} = [{'time': 0.023545583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.091599999999726e-05, 'source_diff': 7.091599999999726e-05}, {'time': 0.023657042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:00.985" endtime="20201115 23:00:00.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.002" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:00.989" endtime="20201115 23:00:01.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.006" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.005" endtime="20201115 23:00:01.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.008" level="INFO">VALUE: [7.091599999999726e-05, 7.016699999999945e-05, 7.030499999999967e-05, 7.04299999999998e-05, 7.055499999999992e-05, 7.002799999999976e-05, 6.983299999999831e-05, 7.025000000000087e-05, 7.063900000000081e-05, 7.066699999999995e-05, 7.055600000000287e-05, 7.045899999999841e-05, 7.030499999999967e-05, 6.983299999999831e-05, 7.058299999999906e-05, 7.034699999999838e-05, 7.059699999999863e-05, 7.00970000000016e-05, 6.997200000000148e-05, 7.065300000000038e-05, 7.008300000000203e-05, 7.051400000000069e-05, 6.990299999999963e-05, 6.982000000000169e-05, 7.034799999999786e-05, 7.027700000000053e-05, 7.020899999999816e-05, 7.054100000000035e-05, 6.980600000000212e-05, 6.988900000000006e-05, 7.065300000000038e-05, 7.016699999999945e-05, 7.001400000000019e-05, 7.034700000000185e-05, 7.033300000000228e-05, 7.011100000000117e-05, 7.047200000000198e-05, 7.054199999999983e-05, 6.970899999999766e-05, 7.058299999999906e-05, 6.997199999999801e-05, 6.968099999999852e-05, 6.972200000000123e-05, 7.020899999999816e-05, 6.983300000000178e-05, 7.020899999999816e-05, 6.986099999999745e-05, 7.045799999999894e-05, 7.018000000000302e-05, 6.980599999999865e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.007" endtime="20201115 23:00:01.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.003" endtime="20201115 23:00:01.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.012" endtime="20201115 23:00:01.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.015" endtime="20201115 23:00:01.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.013" endtime="20201115 23:00:01.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.010" endtime="20201115 23:00:01.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.638" endtime="20201115 23:00:01.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.637" endtime="20201115 23:00:01.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.636" endtime="20201115 23:00:01.036"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.038" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.046" endtime="20201115 23:00:01.065"></status>
</kw>
<msg timestamp="20201115 23:00:01.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.045" endtime="20201115 23:00:01.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.066" endtime="20201115 23:00:01.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.069" endtime="20201115 23:00:01.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.042" endtime="20201115 23:00:01.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.040" endtime="20201115 23:00:01.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.078" endtime="20201115 23:00:01.363"></status>
</kw>
<msg timestamp="20201115 23:00:01.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024357125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024429125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.076" endtime="20201115 23:00:01.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024357125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024429125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.367" endtime="20201115 23:00:01.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.375" endtime="20201115 23:00:01.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.074" endtime="20201115 23:00:01.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.072" endtime="20201115 23:00:01.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.382" level="INFO">${RESULT} = [{'time': 0.024429125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.199999999999915e-05, 'source_diff': 7.199999999999915e-05}, {'time': 0.024542597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:01.379" endtime="20201115 23:00:01.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.396" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:01.383" endtime="20201115 23:00:01.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.401" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.400" endtime="20201115 23:00:01.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.403" level="INFO">VALUE: [7.199999999999915e-05, 7.091600000000073e-05, 7.11109999999987e-05, 7.077800000000051e-05, 7.163899999999834e-05, 7.095899999999891e-05, 7.158300000000006e-05, 7.13049999999972e-05, 7.087500000000149e-05, 7.065200000000091e-05, 7.145799999999994e-05, 7.069399999999962e-05, 7.105500000000042e-05, 7.099999999999815e-05, 7.138800000000209e-05, 7.152799999999779e-05, 7.165300000000138e-05, 7.094500000000281e-05, 7.15690000000005e-05, 7.079200000000008e-05, 7.101399999999772e-05, 7.095800000000291e-05, 7.094499999999934e-05, 7.076400000000094e-05, 7.140199999999819e-05, 7.081899999999974e-05, 7.069499999999909e-05, 7.083299999999931e-05, 7.083299999999931e-05, 7.158300000000006e-05, 7.120799999999969e-05, 7.070799999999919e-05, 7.076400000000094e-05, 7.155499999999745e-05, 7.133399999999929e-05, 7.150000000000212e-05, 7.098599999999858e-05, 7.12230000000022e-05, 7.127800000000101e-05, 7.120799999999969e-05, 7.10970000000026e-05, 7.120799999999969e-05, 7.079200000000008e-05, 7.156999999999997e-05, 7.127799999999754e-05, 7.077800000000051e-05, 7.145899999999941e-05, 7.084699999999888e-05, 7.148599999999908e-05, 7.131900000000024e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.402" endtime="20201115 23:00:01.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.397" endtime="20201115 23:00:01.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.406" endtime="20201115 23:00:01.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.410" endtime="20201115 23:00:01.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.408" endtime="20201115 23:00:01.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.405" endtime="20201115 23:00:01.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.039" endtime="20201115 23:00:01.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.037" endtime="20201115 23:00:01.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.036" endtime="20201115 23:00:01.431"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.433" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.442" endtime="20201115 23:00:01.459"></status>
</kw>
<msg timestamp="20201115 23:00:01.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.440" endtime="20201115 23:00:01.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.461" endtime="20201115 23:00:01.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.463" endtime="20201115 23:00:01.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.437" endtime="20201115 23:00:01.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.435" endtime="20201115 23:00:01.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.472" endtime="20201115 23:00:01.758"></status>
</kw>
<msg timestamp="20201115 23:00:01.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023893, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023965903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:01.470" endtime="20201115 23:00:01.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023893, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023965903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:01.762" endtime="20201115 23:00:01.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.770" endtime="20201115 23:00:01.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.468" endtime="20201115 23:00:01.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.466" endtime="20201115 23:00:01.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.777" level="INFO">${RESULT} = [{'time': 0.023965903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290299999999916e-05, 'source_diff': 7.290299999999916e-05}, {'time': 0.024083319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:01.774" endtime="20201115 23:00:01.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.791" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:01.778" endtime="20201115 23:00:01.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.795" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.794" endtime="20201115 23:00:01.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.798" level="INFO">VALUE: [7.290299999999916e-05, 7.22499999999994e-05, 7.215200000000241e-05, 7.25690000000015e-05, 7.2069000000001e-05, 7.25829999999976e-05, 7.263899999999934e-05, 7.237499999999952e-05, 7.231899999999777e-05, 7.25690000000015e-05, 7.213799999999937e-05, 7.237499999999952e-05, 7.20560000000009e-05, 7.22499999999994e-05, 7.176399999999847e-05, 7.194400000000087e-05, 7.213899999999884e-05, 7.218100000000102e-05, 7.226399999999897e-05, 7.201299999999924e-05, 7.238900000000256e-05, 7.177800000000151e-05, 7.198599999999958e-05, 7.166600000000148e-05, 7.216700000000145e-05, 7.184699999999988e-05, 7.258400000000054e-05, 7.183300000000031e-05, 7.245800000000094e-05, 7.197200000000001e-05, 7.226399999999897e-05, 7.219399999999765e-05, 7.258300000000106e-05, 7.177800000000151e-05, 7.165300000000138e-05, 7.168000000000105e-05, 7.241599999999876e-05, 7.194500000000034e-05, 7.184699999999988e-05, 7.194400000000087e-05, 7.252800000000226e-05, 7.208300000000056e-05, 7.202800000000176e-05, 7.177799999999804e-05, 7.176399999999847e-05, 7.197200000000001e-05, 7.188900000000206e-05, 7.236099999999995e-05, 7.215299999999841e-05, 7.263899999999934e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.797" endtime="20201115 23:00:01.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.792" endtime="20201115 23:00:01.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.801" endtime="20201115 23:00:01.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.805" endtime="20201115 23:00:01.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.803" endtime="20201115 23:00:01.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.800" endtime="20201115 23:00:01.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.434" endtime="20201115 23:00:01.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.432" endtime="20201115 23:00:01.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.431" endtime="20201115 23:00:01.826"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.829" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.837" endtime="20201115 23:00:01.854"></status>
</kw>
<msg timestamp="20201115 23:00:01.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.835" endtime="20201115 23:00:01.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.856" endtime="20201115 23:00:01.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.858" endtime="20201115 23:00:01.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.833" endtime="20201115 23:00:01.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.831" endtime="20201115 23:00:01.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.867" endtime="20201115 23:00:02.154"></status>
</kw>
<msg timestamp="20201115 23:00:02.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024209972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024284236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.866" endtime="20201115 23:00:02.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024209972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024284236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.158" endtime="20201115 23:00:02.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.166" endtime="20201115 23:00:02.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.863" endtime="20201115 23:00:02.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.862" endtime="20201115 23:00:02.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.173" level="INFO">${RESULT} = [{'time': 0.024284236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.426400000000097e-05, 'source_diff': 7.426400000000097e-05}, {'time': 0.024407667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:02.169" endtime="20201115 23:00:02.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.186" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:02.174" endtime="20201115 23:00:02.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.191" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.189" endtime="20201115 23:00:02.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.193" level="INFO">VALUE: [7.426400000000097e-05, 7.309800000000061e-05, 7.29170000000022e-05, 7.290199999999969e-05, 7.276399999999947e-05, 7.315299999999941e-05, 7.270800000000119e-05, 7.326399999999997e-05, 7.269400000000162e-05, 7.309699999999766e-05, 7.362500000000077e-05, 7.301399999999972e-05, 7.34439999999989e-05, 7.35690000000025e-05, 7.29439999999984e-05, 7.288899999999959e-05, 7.304099999999938e-05, 7.338900000000009e-05, 7.316599999999951e-05, 7.29439999999984e-05, 7.320799999999822e-05, 7.365299999999991e-05, 7.347200000000151e-05, 7.327799999999954e-05, 7.286100000000045e-05, 7.313900000000331e-05, 7.338900000000009e-05, 7.302799999999929e-05, 7.319399999999865e-05, 7.281900000000174e-05, 7.343100000000227e-05, 7.341699999999923e-05, 7.306899999999852e-05, 7.270800000000119e-05, 7.268099999999805e-05, 7.345800000000194e-05, 7.34439999999989e-05, 7.345800000000194e-05, 7.266599999999901e-05, 7.283399999999732e-05, 7.288899999999959e-05, 7.269500000000109e-05, 7.350000000000065e-05, 7.316699999999898e-05, 7.319500000000159e-05, 7.35699999999985e-05, 7.283400000000079e-05, 7.36110000000012e-05, 7.338900000000009e-05, 7.265200000000291e-05]</msg>
<status status="PASS" starttime="20201115 23:00:02.192" endtime="20201115 23:00:02.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.187" endtime="20201115 23:00:02.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.196" endtime="20201115 23:00:02.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.200" endtime="20201115 23:00:02.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.198" endtime="20201115 23:00:02.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.195" endtime="20201115 23:00:02.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.829" endtime="20201115 23:00:02.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.827" endtime="20201115 23:00:02.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.827" endtime="20201115 23:00:02.221"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.224" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.232" endtime="20201115 23:00:02.249"></status>
</kw>
<msg timestamp="20201115 23:00:02.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.230" endtime="20201115 23:00:02.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.251" endtime="20201115 23:00:02.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.253" endtime="20201115 23:00:02.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.228" endtime="20201115 23:00:02.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.225" endtime="20201115 23:00:02.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.262" endtime="20201115 23:00:02.548"></status>
</kw>
<msg timestamp="20201115 23:00:02.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023666903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.261" endtime="20201115 23:00:02.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023666903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.552" endtime="20201115 23:00:02.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.560" endtime="20201115 23:00:02.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.258" endtime="20201115 23:00:02.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.256" endtime="20201115 23:00:02.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.567" level="INFO">${RESULT} = [{'time': 0.023666903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.474999999999843e-05, 'source_diff': 7.474999999999843e-05}, {'time': 0.023791278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:02.563" endtime="20201115 23:00:02.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.580" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:02.568" endtime="20201115 23:00:02.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.585" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.584" endtime="20201115 23:00:02.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.588" level="INFO">VALUE: [7.474999999999843e-05, 7.422199999999879e-05, 7.380599999999918e-05, 7.383299999999884e-05, 7.444499999999937e-05, 7.387500000000102e-05, 7.462500000000177e-05, 7.462500000000177e-05, 7.386100000000145e-05, 7.376400000000047e-05, 7.451399999999775e-05, 7.462500000000177e-05, 7.37500000000009e-05, 7.46249999999983e-05, 7.367999999999958e-05, 7.450000000000165e-05, 7.465300000000091e-05, 7.404199999999986e-05, 7.368099999999905e-05, 7.454099999999741e-05, 7.41110000000017e-05, 7.450000000000165e-05, 7.409800000000161e-05, 7.438900000000109e-05, 7.437500000000152e-05, 7.436100000000195e-05, 7.437500000000152e-05, 7.42500000000014e-05, 7.387500000000102e-05, 7.438900000000109e-05, 7.39309999999993e-05, 7.366699999999948e-05, 7.420799999999922e-05, 7.400000000000115e-05, 7.448600000000208e-05, 7.418099999999955e-05, 7.411099999999823e-05, 7.392999999999983e-05, 7.370799999999872e-05, 7.39439999999994e-05, 7.399999999999768e-05, 7.394400000000287e-05, 7.388799999999765e-05, 7.438800000000162e-05, 7.394499999999887e-05, 7.416699999999998e-05, 7.413899999999737e-05, 7.406899999999952e-05, 7.418000000000008e-05, 7.412500000000127e-05]</msg>
<status status="PASS" starttime="20201115 23:00:02.586" endtime="20201115 23:00:02.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.581" endtime="20201115 23:00:02.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.591" endtime="20201115 23:00:02.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.594" endtime="20201115 23:00:02.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.593" endtime="20201115 23:00:02.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.589" endtime="20201115 23:00:02.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.224" endtime="20201115 23:00:02.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.222" endtime="20201115 23:00:02.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.222" endtime="20201115 23:00:02.615"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.618" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.626" endtime="20201115 23:00:02.644"></status>
</kw>
<msg timestamp="20201115 23:00:02.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.624" endtime="20201115 23:00:02.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.646" endtime="20201115 23:00:02.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.648" endtime="20201115 23:00:02.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.622" endtime="20201115 23:00:02.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.620" endtime="20201115 23:00:02.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.657" endtime="20201115 23:00:02.942"></status>
</kw>
<msg timestamp="20201115 23:00:02.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024467528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024544097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.656" endtime="20201115 23:00:02.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024467528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024544097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.946" endtime="20201115 23:00:02.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.954" endtime="20201115 23:00:02.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.653" endtime="20201115 23:00:02.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.651" endtime="20201115 23:00:02.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.961" level="INFO">${RESULT} = [{'time': 0.024544097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.656900000000202e-05, 'source_diff': 7.656900000000202e-05}, {'time': 0.024654556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:02.958" endtime="20201115 23:00:02.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.976" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:02.962" endtime="20201115 23:00:02.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.980" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.979" endtime="20201115 23:00:02.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.983" level="INFO">VALUE: [7.656900000000202e-05, 7.488900000000159e-05, 7.541700000000123e-05, 7.505600000000043e-05, 7.486099999999898e-05, 7.498600000000258e-05, 7.47500000000019e-05, 7.531900000000077e-05, 7.526400000000197e-05, 7.536199999999896e-05, 7.538800000000262e-05, 7.555600000000093e-05, 7.530600000000068e-05, 7.518100000000055e-05, 7.519500000000012e-05, 7.554199999999789e-05, 7.524999999999893e-05, 7.524999999999893e-05, 7.493000000000083e-05, 7.469400000000015e-05, 7.549999999999918e-05, 7.555600000000093e-05, 7.523600000000283e-05, 7.513899999999837e-05, 7.468000000000058e-05, 7.544500000000037e-05, 7.494499999999987e-05, 7.518100000000055e-05, 7.494499999999987e-05, 7.518100000000055e-05, 7.468100000000005e-05, 7.494499999999987e-05, 7.469500000000309e-05, 7.523599999999936e-05, 7.474999999999843e-05, 7.565200000000244e-05, 7.533299999999687e-05, 7.519400000000065e-05, 7.516700000000098e-05, 7.537499999999905e-05, 7.506900000000052e-05, 7.548600000000308e-05, 7.531900000000077e-05, 7.543000000000133e-05, 7.469400000000015e-05, 7.544500000000037e-05, 7.552699999999885e-05, 7.551399999999875e-05, 7.547200000000004e-05, 7.537499999999905e-05]</msg>
<status status="PASS" starttime="20201115 23:00:02.981" endtime="20201115 23:00:02.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.977" endtime="20201115 23:00:02.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.986" endtime="20201115 23:00:02.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.989" endtime="20201115 23:00:03.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.988" endtime="20201115 23:00:03.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.984" endtime="20201115 23:00:03.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.618" endtime="20201115 23:00:03.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.616" endtime="20201115 23:00:03.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.616" endtime="20201115 23:00:03.011"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.013" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.021" endtime="20201115 23:00:03.039"></status>
</kw>
<msg timestamp="20201115 23:00:03.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.020" endtime="20201115 23:00:03.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.040" endtime="20201115 23:00:03.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.043" endtime="20201115 23:00:03.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.017" endtime="20201115 23:00:03.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.015" endtime="20201115 23:00:03.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.052" endtime="20201115 23:00:03.338"></status>
</kw>
<msg timestamp="20201115 23:00:03.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023712333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023789764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.050" endtime="20201115 23:00:03.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023712333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023789764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.342" endtime="20201115 23:00:03.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.350" endtime="20201115 23:00:03.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.048" endtime="20201115 23:00:03.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.046" endtime="20201115 23:00:03.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:03.357" level="INFO">${RESULT} = [{'time': 0.023789764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.74310000000028e-05, 'source_diff': 7.74310000000028e-05}, {'time': 0.023904222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:03.354" endtime="20201115 23:00:03.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:03.370" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:03.358" endtime="20201115 23:00:03.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.375" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:00:03.374" endtime="20201115 23:00:03.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.377" level="INFO">VALUE: [7.74310000000028e-05, 7.595800000000097e-05, 7.597200000000054e-05, 7.586099999999998e-05, 7.586199999999946e-05, 7.620800000000122e-05, 7.629100000000263e-05, 7.630600000000168e-05, 7.661100000000073e-05, 7.632000000000125e-05, 7.641699999999876e-05, 7.598600000000011e-05, 7.618099999999808e-05, 7.665300000000291e-05, 7.638899999999962e-05, 7.613899999999937e-05, 7.631900000000177e-05, 7.665299999999944e-05, 7.611100000000023e-05, 7.599999999999968e-05, 7.602799999999882e-05, 7.594399999999793e-05, 7.62229999999968e-05, 7.661100000000073e-05, 7.615199999999947e-05, 7.613899999999937e-05, 7.587499999999955e-05, 7.620799999999775e-05, 7.648600000000061e-05, 7.648600000000061e-05, 7.655600000000193e-05, 7.633399999999735e-05, 7.620800000000122e-05, 7.62639999999995e-05, 7.60830000000011e-05, 7.66250000000003e-05, 7.631900000000177e-05, 7.637500000000005e-05, 7.644399999999843e-05, 7.580599999999771e-05, 7.569400000000115e-05, 7.574999999999943e-05, 7.650000000000018e-05, 7.63189999999983e-05, 7.66250000000003e-05, 7.60830000000011e-05, 7.6070000000001e-05, 7.650000000000018e-05, 7.602800000000229e-05, 7.634700000000091e-05]</msg>
<status status="PASS" starttime="20201115 23:00:03.376" endtime="20201115 23:00:03.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.371" endtime="20201115 23:00:03.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.381" endtime="20201115 23:00:03.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.384" endtime="20201115 23:00:03.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.382" endtime="20201115 23:00:03.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.379" endtime="20201115 23:00:03.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.014" endtime="20201115 23:00:03.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.012" endtime="20201115 23:00:03.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.011" endtime="20201115 23:00:03.405"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.408" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.416" endtime="20201115 23:00:03.433"></status>
</kw>
<msg timestamp="20201115 23:00:03.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.414" endtime="20201115 23:00:03.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.435" endtime="20201115 23:00:03.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.437" endtime="20201115 23:00:03.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.412" endtime="20201115 23:00:03.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.410" endtime="20201115 23:00:03.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.447" endtime="20201115 23:00:03.732"></status>
</kw>
<msg timestamp="20201115 23:00:03.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023563278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023641403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.445" endtime="20201115 23:00:03.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023563278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023641403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.736" endtime="20201115 23:00:03.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.744" endtime="20201115 23:00:03.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.442" endtime="20201115 23:00:03.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.441" endtime="20201115 23:00:03.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:03.751" level="INFO">${RESULT} = [{'time': 0.023641403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.812499999999833e-05, 'source_diff': 7.812499999999833e-05}, {'time': 0.023755903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:03.747" endtime="20201115 23:00:03.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:03.764" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:03.752" endtime="20201115 23:00:03.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.769" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:00:03.768" endtime="20201115 23:00:03.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.771" level="INFO">VALUE: [7.812499999999833e-05, 7.768099999999958e-05, 7.709700000000166e-05, 7.723600000000136e-05, 7.730599999999921e-05, 7.751400000000075e-05, 7.756999999999903e-05, 7.73189999999993e-05, 7.69310000000023e-05, 7.706899999999905e-05, 7.734699999999844e-05, 7.674999999999696e-05, 7.738900000000062e-05, 7.74449999999989e-05, 7.748600000000161e-05, 7.769399999999968e-05, 7.687500000000055e-05, 7.695800000000197e-05, 7.717999999999961e-05, 7.755599999999946e-05, 7.673600000000086e-05, 7.720800000000222e-05, 7.751400000000075e-05, 7.691699999999926e-05, 7.69449999999984e-05, 7.675000000000043e-05, 7.737500000000105e-05, 7.698600000000111e-05, 7.691599999999979e-05, 7.74449999999989e-05, 7.691700000000273e-05, 7.752800000000032e-05, 7.742999999999986e-05, 7.708299999999862e-05, 7.737500000000105e-05, 7.761099999999826e-05, 7.71250000000008e-05, 7.667999999999911e-05, 7.675000000000043e-05, 7.699999999999721e-05, 7.682000000000175e-05, 7.743099999999933e-05, 7.762499999999783e-05, 7.72640000000005e-05, 7.706899999999905e-05, 7.76250000000013e-05, 7.744399999999943e-05, 7.683299999999837e-05, 7.747199999999857e-05, 7.723600000000136e-05]</msg>
<status status="PASS" starttime="20201115 23:00:03.770" endtime="20201115 23:00:03.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.765" endtime="20201115 23:00:03.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.774" endtime="20201115 23:00:03.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.778" endtime="20201115 23:00:03.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.776" endtime="20201115 23:00:03.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.773" endtime="20201115 23:00:03.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.408" endtime="20201115 23:00:03.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.406" endtime="20201115 23:00:03.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.405" endtime="20201115 23:00:03.799"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.801" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.810" endtime="20201115 23:00:03.828"></status>
</kw>
<msg timestamp="20201115 23:00:03.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.808" endtime="20201115 23:00:03.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.829" endtime="20201115 23:00:03.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.832" endtime="20201115 23:00:03.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.805" endtime="20201115 23:00:03.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.803" endtime="20201115 23:00:03.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.841" endtime="20201115 23:00:04.127"></status>
</kw>
<msg timestamp="20201115 23:00:04.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024512167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024591611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.840" endtime="20201115 23:00:04.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024512167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024591611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.131" endtime="20201115 23:00:04.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.139" endtime="20201115 23:00:04.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.837" endtime="20201115 23:00:04.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.836" endtime="20201115 23:00:04.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.146" level="INFO">${RESULT} = [{'time': 0.024591611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.944399999999796e-05, 'source_diff': 7.944399999999796e-05}, {'time': 0.024709056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:04.142" endtime="20201115 23:00:04.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.159" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:04.147" endtime="20201115 23:00:04.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.164" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.163" endtime="20201115 23:00:04.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.166" level="INFO">VALUE: [7.944399999999796e-05, 7.79030000000007e-05, 7.775000000000143e-05, 7.849999999999871e-05, 7.830500000000074e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.831999999999978e-05, 7.805500000000049e-05, 7.843100000000033e-05, 7.801400000000125e-05, 7.830600000000021e-05, 7.838900000000162e-05, 7.806900000000006e-05, 7.855500000000099e-05, 7.843099999999686e-05, 7.81250000000018e-05, 7.806900000000006e-05, 7.775000000000143e-05, 7.800000000000168e-05, 7.793099999999983e-05, 7.840200000000172e-05, 7.808400000000257e-05, 7.849999999999871e-05, 7.825000000000193e-05, 7.83190000000003e-05, 7.80969999999992e-05, 7.848600000000261e-05, 7.811099999999876e-05, 7.769399999999968e-05, 7.838900000000162e-05, 7.812499999999833e-05, 7.843099999999686e-05, 7.850000000000218e-05, 7.794399999999993e-05, 7.79579999999995e-05, 7.786099999999851e-05, 7.830499999999727e-05, 7.83190000000003e-05, 7.820799999999975e-05, 7.801400000000125e-05, 7.833299999999987e-05, 7.823599999999889e-05, 7.820800000000322e-05, 7.787499999999808e-05, 7.837500000000205e-05, 7.793099999999983e-05, 7.837500000000205e-05, 7.858300000000012e-05, 7.824999999999846e-05]</msg>
<status status="PASS" starttime="20201115 23:00:04.165" endtime="20201115 23:00:04.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.160" endtime="20201115 23:00:04.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.169" endtime="20201115 23:00:04.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.173" endtime="20201115 23:00:04.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.171" endtime="20201115 23:00:04.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.168" endtime="20201115 23:00:04.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.802" endtime="20201115 23:00:04.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.800" endtime="20201115 23:00:04.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.799" endtime="20201115 23:00:04.194"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.196" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.205" endtime="20201115 23:00:04.223"></status>
</kw>
<msg timestamp="20201115 23:00:04.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.203" endtime="20201115 23:00:04.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.225" endtime="20201115 23:00:04.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.227" endtime="20201115 23:00:04.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.200" endtime="20201115 23:00:04.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.198" endtime="20201115 23:00:04.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.236" endtime="20201115 23:00:04.522"></status>
</kw>
<msg timestamp="20201115 23:00:04.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024906486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024987028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.235" endtime="20201115 23:00:04.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024906486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024987028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.526" endtime="20201115 23:00:04.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.534" endtime="20201115 23:00:04.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.232" endtime="20201115 23:00:04.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.231" endtime="20201115 23:00:04.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.541" level="INFO">${RESULT} = [{'time': 0.024987028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.054200000000289e-05, 'source_diff': 8.054200000000289e-05}, {'time': 0.025109389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:04.537" endtime="20201115 23:00:04.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.555" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:04.542" endtime="20201115 23:00:04.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.560" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.559" endtime="20201115 23:00:04.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.562" level="INFO">VALUE: [8.054200000000289e-05, 7.890299999999822e-05, 7.943100000000133e-05, 7.911099999999976e-05, 7.874999999999896e-05, 7.907000000000053e-05, 7.875000000000243e-05, 7.919399999999771e-05, 7.924999999999946e-05, 7.873599999999939e-05, 7.87229999999993e-05, 7.955600000000146e-05, 7.922200000000032e-05, 7.880499999999777e-05, 7.937499999999958e-05, 7.869400000000068e-05, 7.937499999999958e-05, 7.94030000000022e-05, 7.938899999999915e-05, 7.8764000000002e-05, 7.93329999999974e-05, 7.880500000000124e-05, 7.912499999999933e-05, 7.912499999999933e-05, 7.91389999999989e-05, 7.949999999999971e-05, 7.912499999999933e-05, 7.936100000000001e-05, 7.874999999999896e-05, 7.901399999999878e-05, 7.899999999999921e-05, 7.95129999999998e-05, 7.868100000000058e-05, 7.938899999999915e-05, 7.947200000000057e-05, 7.943100000000133e-05, 7.869500000000015e-05, 7.938899999999915e-05, 7.93190000000013e-05, 7.948600000000014e-05, 7.96389999999994e-05, 7.879200000000114e-05, 7.945900000000047e-05, 7.922200000000032e-05, 7.865299999999797e-05, 7.893100000000083e-05, 7.904199999999792e-05, 7.936100000000001e-05, 7.92779999999986e-05, 7.873599999999939e-05]</msg>
<status status="PASS" starttime="20201115 23:00:04.561" endtime="20201115 23:00:04.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.556" endtime="20201115 23:00:04.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.565" endtime="20201115 23:00:04.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.569" endtime="20201115 23:00:04.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.567" endtime="20201115 23:00:04.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.564" endtime="20201115 23:00:04.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.197" endtime="20201115 23:00:04.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.195" endtime="20201115 23:00:04.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.194" endtime="20201115 23:00:04.590"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.593" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.601" endtime="20201115 23:00:04.619"></status>
</kw>
<msg timestamp="20201115 23:00:04.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.599" endtime="20201115 23:00:04.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.620" endtime="20201115 23:00:04.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.623" endtime="20201115 23:00:04.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.597" endtime="20201115 23:00:04.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.595" endtime="20201115 23:00:04.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.632" endtime="20201115 23:00:04.917"></status>
</kw>
<msg timestamp="20201115 23:00:04.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024067278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024148639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.630" endtime="20201115 23:00:04.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024067278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024148639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.921" endtime="20201115 23:00:04.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.929" endtime="20201115 23:00:04.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.627" endtime="20201115 23:00:04.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.626" endtime="20201115 23:00:04.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.936" level="INFO">${RESULT} = [{'time': 0.024148639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.136099999999855e-05, 'source_diff': 8.136099999999855e-05}, {'time': 0.024278042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:04.933" endtime="20201115 23:00:04.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.949" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:04.937" endtime="20201115 23:00:04.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.954" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.953" endtime="20201115 23:00:04.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.956" level="INFO">VALUE: [8.136099999999855e-05, 8.000000000000021e-05, 8.043100000000233e-05, 8.006899999999859e-05, 7.986100000000051e-05, 8.048599999999767e-05, 8.004099999999945e-05, 8.062500000000083e-05, 8.054099999999995e-05, 8.023700000000036e-05, 7.986100000000051e-05, 7.986100000000051e-05, 7.986100000000051e-05, 8.026400000000003e-05, 7.998600000000064e-05, 7.993000000000236e-05, 8.024999999999699e-05, 7.968099999999811e-05, 8.055599999999899e-05, 8.036099999999755e-05, 8.038900000000015e-05, 8.03190000000023e-05, 8.04169999999993e-05, 8.02230000000008e-05, 7.986099999999705e-05, 7.991599999999932e-05, 8.005599999999849e-05, 7.99450000000014e-05, 7.98329999999979e-05, 8.016599999999957e-05, 7.973600000000039e-05, 8.004199999999892e-05, 8.019399999999871e-05, 7.974999999999996e-05, 8.011200000000024e-05, 8.043099999999886e-05, 7.974999999999996e-05, 8.019499999999818e-05, 7.973600000000039e-05, 8.048600000000114e-05, 8.025000000000046e-05, 7.974999999999996e-05, 8.040299999999972e-05, 7.993000000000236e-05, 7.998599999999717e-05, 8.033399999999788e-05, 8.000000000000021e-05, 8.047200000000157e-05, 7.974999999999996e-05, 8.047200000000157e-05]</msg>
<status status="PASS" starttime="20201115 23:00:04.955" endtime="20201115 23:00:04.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.950" endtime="20201115 23:00:04.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.968" endtime="20201115 23:00:04.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.971" endtime="20201115 23:00:04.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.970" endtime="20201115 23:00:04.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.966" endtime="20201115 23:00:04.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.593" endtime="20201115 23:00:04.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.591" endtime="20201115 23:00:04.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.591" endtime="20201115 23:00:04.992"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.995" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.003" endtime="20201115 23:00:05.021"></status>
</kw>
<msg timestamp="20201115 23:00:05.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.002" endtime="20201115 23:00:05.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.022" endtime="20201115 23:00:05.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.025" endtime="20201115 23:00:05.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.999" endtime="20201115 23:00:05.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.997" endtime="20201115 23:00:05.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.034" endtime="20201115 23:00:05.320"></status>
</kw>
<msg timestamp="20201115 23:00:05.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023717667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023799708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.033" endtime="20201115 23:00:05.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023717667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023799708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.324" endtime="20201115 23:00:05.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.332" endtime="20201115 23:00:05.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.030" endtime="20201115 23:00:05.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.028" endtime="20201115 23:00:05.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.339" level="INFO">${RESULT} = [{'time': 0.023799708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.204099999999798e-05, 'source_diff': 8.204099999999798e-05}, {'time': 0.023927097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:05.336" endtime="20201115 23:00:05.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.352" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:05.340" endtime="20201115 23:00:05.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.357" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.356" endtime="20201115 23:00:05.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.360" level="INFO">VALUE: [8.204099999999798e-05, 8.140300000000072e-05, 8.14719999999991e-05, 8.090300000000022e-05, 8.105599999999949e-05, 8.14170000000003e-05, 8.086100000000151e-05, 8.086200000000099e-05, 8.116700000000004e-05, 8.09719999999986e-05, 8.086100000000151e-05, 8.154199999999695e-05, 8.123599999999842e-05, 8.162499999999837e-05, 8.120799999999928e-05, 8.161100000000227e-05, 8.122199999999885e-05, 8.093099999999936e-05, 8.092999999999989e-05, 8.073600000000139e-05, 8.075000000000096e-05, 8.102800000000035e-05, 8.09169999999998e-05, 8.079199999999967e-05, 8.134699999999898e-05, 8.134699999999898e-05, 8.129099999999723e-05, 8.090200000000075e-05, 8.129200000000017e-05, 8.155499999999705e-05, 8.087500000000108e-05, 8.154200000000042e-05, 8.130500000000027e-05, 8.079199999999967e-05, 8.092999999999989e-05, 8.129200000000017e-05, 8.073600000000139e-05, 8.162499999999837e-05, 8.141600000000082e-05, 8.161200000000174e-05, 8.136099999999855e-05, 8.143099999999986e-05, 8.151400000000128e-05, 8.111100000000177e-05, 8.113800000000143e-05, 8.11109999999983e-05, 8.086100000000151e-05, 8.111100000000177e-05, 8.09719999999986e-05, 8.16109999999988e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.358" endtime="20201115 23:00:05.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.353" endtime="20201115 23:00:05.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.363" endtime="20201115 23:00:05.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.367" endtime="20201115 23:00:05.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.365" endtime="20201115 23:00:05.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.361" endtime="20201115 23:00:05.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.995" endtime="20201115 23:00:05.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.994" endtime="20201115 23:00:05.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.993" endtime="20201115 23:00:05.388"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.390" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.398" endtime="20201115 23:00:05.416"></status>
</kw>
<msg timestamp="20201115 23:00:05.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.397" endtime="20201115 23:00:05.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.418" endtime="20201115 23:00:05.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.420" endtime="20201115 23:00:05.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.394" endtime="20201115 23:00:05.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.392" endtime="20201115 23:00:05.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.429" endtime="20201115 23:00:05.716"></status>
</kw>
<msg timestamp="20201115 23:00:05.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023726611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023809972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.428" endtime="20201115 23:00:05.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023726611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023809972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.720" endtime="20201115 23:00:05.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.728" endtime="20201115 23:00:05.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.425" endtime="20201115 23:00:05.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.424" endtime="20201115 23:00:05.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.735" level="INFO">${RESULT} = [{'time': 0.023809972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.336099999999708e-05, 'source_diff': 8.336099999999708e-05}, {'time': 0.023943333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:05.732" endtime="20201115 23:00:05.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.749" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:05.736" endtime="20201115 23:00:05.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.753" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.752" endtime="20201115 23:00:05.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.756" level="INFO">VALUE: [8.336099999999708e-05, 8.209699999999973e-05, 8.229200000000117e-05, 8.190300000000122e-05, 8.234699999999998e-05, 8.198600000000264e-05, 8.252800000000185e-05, 8.259700000000023e-05, 8.241699999999783e-05, 8.236099999999955e-05, 8.236099999999955e-05, 8.195800000000003e-05, 8.227799999999813e-05, 8.256900000000109e-05, 8.215199999999853e-05, 8.252700000000238e-05, 8.259700000000023e-05, 8.186099999999905e-05, 8.202800000000135e-05, 8.248599999999967e-05, 8.234699999999998e-05, 8.212499999999887e-05, 8.204200000000092e-05, 8.173599999999892e-05, 8.234699999999998e-05, 8.176399999999806e-05, 8.170799999999978e-05, 8.162499999999837e-05, 8.186200000000199e-05, 8.240299999999826e-05, 8.259700000000023e-05, 8.166700000000054e-05, 8.234699999999998e-05, 8.226399999999856e-05, 8.2152000000002e-05, 8.165199999999803e-05, 8.215300000000147e-05, 8.188899999999819e-05, 8.220800000000028e-05, 8.177699999999816e-05, 8.220800000000028e-05, 8.216600000000157e-05, 8.199999999999874e-05, 8.184799999999895e-05, 8.187500000000208e-05, 8.226400000000203e-05, 8.197300000000254e-05, 8.166700000000054e-05, 8.222199999999985e-05, 8.222199999999985e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.755" endtime="20201115 23:00:05.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.750" endtime="20201115 23:00:05.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.759" endtime="20201115 23:00:05.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.762" endtime="20201115 23:00:05.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.761" endtime="20201115 23:00:05.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.757" endtime="20201115 23:00:05.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.391" endtime="20201115 23:00:05.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.389" endtime="20201115 23:00:05.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.388" endtime="20201115 23:00:05.784"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.786" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.794" endtime="20201115 23:00:05.813"></status>
</kw>
<msg timestamp="20201115 23:00:05.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.793" endtime="20201115 23:00:05.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.814" endtime="20201115 23:00:05.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.817" endtime="20201115 23:00:05.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.790" endtime="20201115 23:00:05.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.788" endtime="20201115 23:00:05.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.826" endtime="20201115 23:00:06.111"></status>
</kw>
<msg timestamp="20201115 23:00:06.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024451153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024534986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.824" endtime="20201115 23:00:06.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024451153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024534986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.116" endtime="20201115 23:00:06.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.124" endtime="20201115 23:00:06.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.822" endtime="20201115 23:00:06.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.820" endtime="20201115 23:00:06.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.131" level="INFO">${RESULT} = [{'time': 0.024534986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.38330000000019e-05, 'source_diff': 8.38330000000019e-05}, {'time': 0.024670389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:06.128" endtime="20201115 23:00:06.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.145" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:06.132" endtime="20201115 23:00:06.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.150" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.149" endtime="20201115 23:00:06.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.152" level="INFO">VALUE: [8.38330000000019e-05, 8.350000000000024e-05, 8.286100000000005e-05, 8.290300000000222e-05, 8.352799999999938e-05, 8.351399999999981e-05, 8.327799999999913e-05, 8.348600000000067e-05, 8.347199999999763e-05, 8.277699999999916e-05, 8.26529999999985e-05, 8.286100000000005e-05, 8.324999999999999e-05, 8.358299999999819e-05, 8.269400000000121e-05, 8.31390000000029e-05, 8.302799999999888e-05, 8.31659999999991e-05, 8.26390000000024e-05, 8.27780000000021e-05, 8.272299999999982e-05, 8.291699999999833e-05, 8.288899999999919e-05, 8.327799999999913e-05, 8.31110000000003e-05, 8.358299999999819e-05, 8.26529999999985e-05, 8.301400000000278e-05, 8.331899999999837e-05, 8.320800000000128e-05, 8.3459000000001e-05, 8.302800000000235e-05, 8.34720000000011e-05, 8.270900000000025e-05, 8.352799999999938e-05, 8.344399999999849e-05, 8.301399999999931e-05, 8.348600000000067e-05, 8.336200000000002e-05, 8.3152999999999e-05, 8.270900000000025e-05, 8.33469999999975e-05, 8.279099999999873e-05, 8.33330000000014e-05, 8.313899999999944e-05, 8.340299999999926e-05, 8.35980000000007e-05, 8.338899999999969e-05, 8.270800000000078e-05, 8.336100000000055e-05]</msg>
<status status="PASS" starttime="20201115 23:00:06.151" endtime="20201115 23:00:06.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.146" endtime="20201115 23:00:06.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.156" endtime="20201115 23:00:06.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.159" endtime="20201115 23:00:06.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.157" endtime="20201115 23:00:06.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.154" endtime="20201115 23:00:06.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.787" endtime="20201115 23:00:06.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.785" endtime="20201115 23:00:06.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.784" endtime="20201115 23:00:06.180"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.183" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.191" endtime="20201115 23:00:06.209"></status>
</kw>
<msg timestamp="20201115 23:00:06.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.189" endtime="20201115 23:00:06.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.210" endtime="20201115 23:00:06.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.213" endtime="20201115 23:00:06.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.186" endtime="20201115 23:00:06.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.184" endtime="20201115 23:00:06.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.222" endtime="20201115 23:00:06.508"></status>
</kw>
<msg timestamp="20201115 23:00:06.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023559542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023644347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.220" endtime="20201115 23:00:06.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023559542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023644347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.512" endtime="20201115 23:00:06.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.520" endtime="20201115 23:00:06.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.218" endtime="20201115 23:00:06.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.216" endtime="20201115 23:00:06.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.527" level="INFO">${RESULT} = [{'time': 0.023644347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.48050000000003e-05, 'source_diff': 8.48050000000003e-05}, {'time': 0.023780708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:06.523" endtime="20201115 23:00:06.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.540" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:06.528" endtime="20201115 23:00:06.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.545" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.544" endtime="20201115 23:00:06.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.547" level="INFO">VALUE: [8.48050000000003e-05, 8.381900000000234e-05, 8.436200000000102e-05, 8.445799999999906e-05, 8.455500000000005e-05, 8.440300000000026e-05, 8.386100000000105e-05, 8.382000000000181e-05, 8.422199999999838e-05, 8.372199999999788e-05, 8.43330000000024e-05, 8.41249999999974e-05, 8.402799999999988e-05, 8.458299999999919e-05, 8.368099999999865e-05, 8.397199999999813e-05, 8.427800000000013e-05, 8.416699999999958e-05, 8.423599999999795e-05, 8.434800000000145e-05, 8.394399999999899e-05, 8.372300000000082e-05, 8.433299999999894e-05, 8.375000000000049e-05, 8.372199999999788e-05, 8.459799999999823e-05, 8.440300000000026e-05, 8.392999999999942e-05, 8.409699999999826e-05, 8.445800000000253e-05, 8.441600000000035e-05, 8.430599999999927e-05, 8.46110000000018e-05, 8.391699999999933e-05, 8.416699999999958e-05, 8.382000000000181e-05, 8.401400000000031e-05, 8.391699999999933e-05, 8.37919999999992e-05, 8.408399999999816e-05, 8.422300000000132e-05, 8.447199999999863e-05, 8.455500000000005e-05, 8.411200000000077e-05, 8.366699999999908e-05, 8.387500000000062e-05, 8.379099999999973e-05, 8.405600000000249e-05, 8.36529999999995e-05, 8.369400000000221e-05]</msg>
<status status="PASS" starttime="20201115 23:00:06.546" endtime="20201115 23:00:06.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.541" endtime="20201115 23:00:06.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.550" endtime="20201115 23:00:06.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.554" endtime="20201115 23:00:06.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.552" endtime="20201115 23:00:06.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.549" endtime="20201115 23:00:06.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.183" endtime="20201115 23:00:06.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.181" endtime="20201115 23:00:06.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.181" endtime="20201115 23:00:06.575"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.577" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.585" endtime="20201115 23:00:06.603"></status>
</kw>
<msg timestamp="20201115 23:00:06.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.584" endtime="20201115 23:00:06.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.605" endtime="20201115 23:00:06.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.608" endtime="20201115 23:00:06.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.581" endtime="20201115 23:00:06.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.579" endtime="20201115 23:00:06.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.617" endtime="20201115 23:00:06.901"></status>
</kw>
<msg timestamp="20201115 23:00:06.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023562528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023648444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.615" endtime="20201115 23:00:06.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023562528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023648444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.905" endtime="20201115 23:00:06.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.913" endtime="20201115 23:00:06.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.613" endtime="20201115 23:00:06.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.611" endtime="20201115 23:00:06.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.920" level="INFO">${RESULT} = [{'time': 0.023648444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.591600000000185e-05, 'source_diff': 8.591600000000185e-05}, {'time': 0.023769875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:06.916" endtime="20201115 23:00:06.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.933" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:06.921" endtime="20201115 23:00:06.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.938" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.937" endtime="20201115 23:00:06.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.940" level="INFO">VALUE: [8.591600000000185e-05, 8.523599999999895e-05, 8.477800000000063e-05, 8.491700000000033e-05, 8.465299999999704e-05, 8.525000000000199e-05, 8.498600000000217e-05, 8.54729999999991e-05, 8.538900000000169e-05, 8.544400000000049e-05, 8.523600000000242e-05, 8.524999999999852e-05, 8.472200000000235e-05, 8.554200000000095e-05, 8.474999999999802e-05, 8.540300000000126e-05, 8.545800000000006e-05, 8.48050000000003e-05, 8.538899999999822e-05, 8.552799999999791e-05, 8.513900000000144e-05, 8.506900000000012e-05, 8.508399999999916e-05, 8.541700000000083e-05, 8.526400000000156e-05, 8.495799999999956e-05, 8.540300000000126e-05, 8.522199999999938e-05, 8.506900000000012e-05, 8.523600000000242e-05, 8.491700000000033e-05, 8.497300000000207e-05, 8.515299999999754e-05, 8.551399999999834e-05, 8.520799999999981e-05, 8.533399999999941e-05, 8.463899999999747e-05, 8.554100000000148e-05, 8.48050000000003e-05, 8.53469999999995e-05, 8.490199999999781e-05, 8.504199999999698e-05, 8.491699999999686e-05, 8.469500000000268e-05, 8.470800000000278e-05, 8.551399999999834e-05, 8.481899999999987e-05, 8.527800000000113e-05, 8.495899999999904e-05, 8.552800000000138e-05]</msg>
<status status="PASS" starttime="20201115 23:00:06.939" endtime="20201115 23:00:06.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.934" endtime="20201115 23:00:06.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.943" endtime="20201115 23:00:06.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.947" endtime="20201115 23:00:06.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.945" endtime="20201115 23:00:06.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.942" endtime="20201115 23:00:06.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.578" endtime="20201115 23:00:06.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.576" endtime="20201115 23:00:06.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.575" endtime="20201115 23:00:06.968"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.970" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.979" endtime="20201115 23:00:06.997"></status>
</kw>
<msg timestamp="20201115 23:00:06.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.977" endtime="20201115 23:00:06.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.999" endtime="20201115 23:00:07.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.001" endtime="20201115 23:00:07.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.974" endtime="20201115 23:00:07.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.972" endtime="20201115 23:00:07.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.010" endtime="20201115 23:00:07.297"></status>
</kw>
<msg timestamp="20201115 23:00:07.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024089306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024176903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.009" endtime="20201115 23:00:07.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024089306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024176903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.301" endtime="20201115 23:00:07.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.309" endtime="20201115 23:00:07.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.006" endtime="20201115 23:00:07.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.004" endtime="20201115 23:00:07.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.316" level="INFO">${RESULT} = [{'time': 0.024176903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.759699999999829e-05, 'source_diff': 8.759699999999829e-05}, {'time': 0.024309264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:07.312" endtime="20201115 23:00:07.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.340" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:07.317" endtime="20201115 23:00:07.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.346" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.344" endtime="20201115 23:00:07.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.348" level="INFO">VALUE: [8.759699999999829e-05, 8.640300000000226e-05, 8.601399999999884e-05, 8.665299999999904e-05, 8.64730000000001e-05, 8.590300000000176e-05, 8.582000000000034e-05, 8.609699999999679e-05, 8.627800000000213e-05, 8.654099999999901e-05, 8.654199999999848e-05, 8.638799999999974e-05, 8.624999999999952e-05, 8.576299999999912e-05, 8.665299999999904e-05, 8.576399999999859e-05, 8.626399999999909e-05, 8.605599999999755e-05, 8.609700000000026e-05, 8.626400000000256e-05, 8.569500000000022e-05, 8.6153000000002e-05, 8.651399999999934e-05, 8.608300000000069e-05, 8.632000000000084e-05, 8.641700000000183e-05, 8.593000000000142e-05, 8.601400000000231e-05, 8.563900000000194e-05, 8.622200000000038e-05, 8.622199999999691e-05, 8.563900000000194e-05, 8.601400000000231e-05, 8.658300000000119e-05, 8.644500000000097e-05, 8.586099999999958e-05, 8.576399999999859e-05, 8.659700000000076e-05, 8.599999999999927e-05, 8.601399999999884e-05, 8.597200000000013e-05, 8.638899999999922e-05, 8.566700000000108e-05, 8.620800000000081e-05, 8.569500000000022e-05, 8.627699999999919e-05, 8.587499999999915e-05, 8.633300000000094e-05, 8.654199999999848e-05, 8.661100000000033e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.347" endtime="20201115 23:00:07.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.342" endtime="20201115 23:00:07.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.352" endtime="20201115 23:00:07.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.355" endtime="20201115 23:00:07.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.354" endtime="20201115 23:00:07.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.350" endtime="20201115 23:00:07.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.971" endtime="20201115 23:00:07.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.969" endtime="20201115 23:00:07.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.968" endtime="20201115 23:00:07.377"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.380" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.388" endtime="20201115 23:00:07.407"></status>
</kw>
<msg timestamp="20201115 23:00:07.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.386" endtime="20201115 23:00:07.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.409" endtime="20201115 23:00:07.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.411" endtime="20201115 23:00:07.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.384" endtime="20201115 23:00:07.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.382" endtime="20201115 23:00:07.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.420" endtime="20201115 23:00:07.706"></status>
</kw>
<msg timestamp="20201115 23:00:07.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025143083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025231278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.419" endtime="20201115 23:00:07.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025143083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025231278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.711" endtime="20201115 23:00:07.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.720" endtime="20201115 23:00:07.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.416" endtime="20201115 23:00:07.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.414" endtime="20201115 23:00:07.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.727" level="INFO">${RESULT} = [{'time': 0.025231278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.819499999999925e-05, 'source_diff': 8.819499999999925e-05}, {'time': 0.025365611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:07.723" endtime="20201115 23:00:07.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.742" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:07.728" endtime="20201115 23:00:07.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.747" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.746" endtime="20201115 23:00:07.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.749" level="INFO">VALUE: [8.819499999999925e-05, 8.66669999999986e-05, 8.688900000000319e-05, 8.677799999999916e-05, 8.756999999999862e-05, 8.66249999999999e-05, 8.720799999999834e-05, 8.677799999999916e-05, 8.729199999999923e-05, 8.741699999999936e-05, 8.750000000000077e-05, 8.686099999999711e-05, 8.665299999999904e-05, 8.740200000000031e-05, 8.747199999999816e-05, 8.729100000000323e-05, 8.726400000000009e-05, 8.761099999999786e-05, 8.716700000000258e-05, 8.720800000000181e-05, 8.665199999999956e-05, 8.677799999999916e-05, 8.719400000000224e-05, 8.669500000000122e-05, 8.670800000000131e-05, 8.733300000000194e-05, 8.688899999999972e-05, 8.74449999999985e-05, 8.713899999999997e-05, 8.693000000000242e-05, 8.727799999999966e-05, 8.694399999999852e-05, 8.738800000000074e-05, 8.708300000000169e-05, 8.71250000000004e-05, 8.73189999999989e-05, 8.690299999999929e-05, 8.759799999999776e-05, 8.690300000000276e-05, 8.663899999999947e-05, 8.690300000000276e-05, 8.665299999999904e-05, 8.747200000000163e-05, 8.676300000000012e-05, 8.708300000000169e-05, 8.723600000000095e-05, 8.713800000000049e-05, 8.751400000000381e-05, 8.709699999999432e-05, 8.690199999999981e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.748" endtime="20201115 23:00:07.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.743" endtime="20201115 23:00:07.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.753" endtime="20201115 23:00:07.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.756" endtime="20201115 23:00:07.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.755" endtime="20201115 23:00:07.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.751" endtime="20201115 23:00:07.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.380" endtime="20201115 23:00:07.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.379" endtime="20201115 23:00:07.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.378" endtime="20201115 23:00:07.777"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.780" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.788" endtime="20201115 23:00:07.806"></status>
</kw>
<msg timestamp="20201115 23:00:07.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.786" endtime="20201115 23:00:07.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.807" endtime="20201115 23:00:07.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.810" endtime="20201115 23:00:07.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.783" endtime="20201115 23:00:07.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.781" endtime="20201115 23:00:07.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.819" endtime="20201115 23:00:08.122"></status>
</kw>
<msg timestamp="20201115 23:00:08.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023500486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023589514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.817" endtime="20201115 23:00:08.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023500486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023589514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.126" endtime="20201115 23:00:08.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.134" endtime="20201115 23:00:08.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.815" endtime="20201115 23:00:08.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.813" endtime="20201115 23:00:08.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:08.141" level="INFO">${RESULT} = [{'time': 0.023589514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.902799999999794e-05, 'source_diff': 8.902799999999794e-05}, {'time': 0.023722889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:08.137" endtime="20201115 23:00:08.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:08.154" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:08.142" endtime="20201115 23:00:08.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.159" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:00:08.157" endtime="20201115 23:00:08.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.161" level="INFO">VALUE: [8.902799999999794e-05, 8.845799999999959e-05, 8.763799999999752e-05, 8.802800000000041e-05, 8.797199999999866e-05, 8.790300000000029e-05, 8.808299999999922e-05, 8.794399999999952e-05, 8.840300000000079e-05, 8.792999999999995e-05, 8.822200000000238e-05, 8.836099999999861e-05, 8.859699999999929e-05, 8.819499999999925e-05, 8.806999999999912e-05, 8.858299999999972e-05, 8.838900000000122e-05, 8.772300000000136e-05, 8.815300000000054e-05, 8.81250000000014e-05, 8.781999999999887e-05, 8.78189999999994e-05, 8.83189999999999e-05, 8.838900000000122e-05, 8.808299999999922e-05, 8.842999999999698e-05, 8.837499999999818e-05, 8.776399999999712e-05, 8.797199999999866e-05, 8.7944999999999e-05, 8.765300000000004e-05, 8.775000000000102e-05, 8.856900000000015e-05, 8.782000000000234e-05, 8.808299999999922e-05, 8.820799999999934e-05, 8.802700000000094e-05, 8.822199999999891e-05, 8.779199999999973e-05, 8.779199999999973e-05, 8.787499999999768e-05, 8.809699999999879e-05, 8.838900000000122e-05, 8.83189999999999e-05, 8.788900000000072e-05, 8.838899999999775e-05, 8.805599999999955e-05, 8.815200000000106e-05, 8.76669999999996e-05, 8.854200000000048e-05]</msg>
<status status="PASS" starttime="20201115 23:00:08.160" endtime="20201115 23:00:08.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.155" endtime="20201115 23:00:08.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.164" endtime="20201115 23:00:08.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:08.168" endtime="20201115 23:00:08.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.166" endtime="20201115 23:00:08.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.163" endtime="20201115 23:00:08.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.780" endtime="20201115 23:00:08.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.778" endtime="20201115 23:00:08.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.778" endtime="20201115 23:00:08.189"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.191" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.200" endtime="20201115 23:00:08.218"></status>
</kw>
<msg timestamp="20201115 23:00:08.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.198" endtime="20201115 23:00:08.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.219" endtime="20201115 23:00:08.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.222" endtime="20201115 23:00:08.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.195" endtime="20201115 23:00:08.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.193" endtime="20201115 23:00:08.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.231" endtime="20201115 23:00:08.516"></status>
</kw>
<msg timestamp="20201115 23:00:08.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023637667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023728111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.229" endtime="20201115 23:00:08.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023637667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023728111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.520" endtime="20201115 23:00:08.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.528" endtime="20201115 23:00:08.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.227" endtime="20201115 23:00:08.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.225" endtime="20201115 23:00:08.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:08.535" level="INFO">${RESULT} = [{'time': 0.023728111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.044399999999855e-05, 'source_diff': 9.044399999999855e-05}, {'time': 0.023870431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:08.531" endtime="20201115 23:00:08.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:08.548" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:08.536" endtime="20201115 23:00:08.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.553" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:00:08.552" endtime="20201115 23:00:08.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.555" level="INFO">VALUE: [9.044399999999855e-05, 8.951400000000234e-05, 8.877800000000116e-05, 8.86939999999968e-05, 8.865299999999757e-05, 8.91389999999985e-05, 8.902799999999794e-05, 8.955499999999811e-05, 8.884699999999954e-05, 8.88190000000004e-05, 8.901400000000184e-05, 8.947200000000016e-05, 8.933300000000047e-05, 8.898599999999923e-05, 8.86250000000019e-05, 8.902799999999794e-05, 8.88060000000003e-05, 8.91800000000012e-05, 8.909699999999979e-05, 8.883399999999944e-05, 8.904199999999751e-05, 8.91250000000024e-05, 8.887500000000215e-05, 8.919400000000077e-05, 8.877799999999769e-05, 8.865200000000156e-05, 8.940299999999832e-05, 8.945900000000007e-05, 8.907000000000012e-05, 8.909699999999979e-05, 8.902800000000141e-05, 8.938899999999875e-05, 8.863900000000147e-05, 8.91250000000024e-05, 8.94999999999993e-05, 8.869499999999975e-05, 8.880500000000083e-05, 8.938899999999875e-05, 8.913799999999902e-05, 8.951400000000234e-05, 8.876400000000159e-05, 8.951400000000234e-05, 8.937499999999918e-05, 8.937499999999918e-05, 8.874999999999855e-05, 8.955599999999758e-05, 8.924999999999905e-05, 8.926400000000209e-05, 8.94450000000005e-05, 8.924999999999905e-05]</msg>
<status status="PASS" starttime="20201115 23:00:08.554" endtime="20201115 23:00:08.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.549" endtime="20201115 23:00:08.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.558" endtime="20201115 23:00:08.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:08.562" endtime="20201115 23:00:08.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.560" endtime="20201115 23:00:08.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.557" endtime="20201115 23:00:08.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.192" endtime="20201115 23:00:08.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.190" endtime="20201115 23:00:08.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.189" endtime="20201115 23:00:08.583"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.585" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.593" endtime="20201115 23:00:08.612"></status>
</kw>
<msg timestamp="20201115 23:00:08.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.592" endtime="20201115 23:00:08.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.613" endtime="20201115 23:00:08.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.616" endtime="20201115 23:00:08.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.589" endtime="20201115 23:00:08.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.587" endtime="20201115 23:00:08.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.624" endtime="20201115 23:00:08.910"></status>
</kw>
<msg timestamp="20201115 23:00:08.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023455583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023546569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.623" endtime="20201115 23:00:08.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023455583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023546569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.914" endtime="20201115 23:00:08.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.923" endtime="20201115 23:00:08.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.621" endtime="20201115 23:00:08.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.619" endtime="20201115 23:00:08.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:08.929" level="INFO">${RESULT} = [{'time': 0.023546569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.098600000000123e-05, 'source_diff': 9.098600000000123e-05}, {'time': 0.023684903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:08.926" endtime="20201115 23:00:08.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:08.943" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:08.930" endtime="20201115 23:00:08.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.947" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:00:08.946" endtime="20201115 23:00:08.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.950" level="INFO">VALUE: [9.098600000000123e-05, 8.987499999999968e-05, 8.96250000000029e-05, 8.998600000000023e-05, 9.03199999999979e-05, 9.052799999999944e-05, 8.976400000000259e-05, 9.005500000000208e-05, 9.05000000000003e-05, 9.043100000000193e-05, 8.988899999999925e-05, 9.005499999999861e-05, 9.034700000000104e-05, 8.970900000000032e-05, 9.006900000000165e-05, 9.040299999999932e-05, 9.006900000000165e-05, 9.044400000000202e-05, 9.037500000000018e-05, 9.05000000000003e-05, 9.044499999999803e-05, 9.037500000000018e-05, 8.990299999999882e-05, 9.008300000000122e-05, 9.01670000000021e-05, 9.040199999999984e-05, 8.987499999999968e-05, 8.994499999999753e-05, 8.99999999999998e-05, 9.029199999999876e-05, 8.983300000000097e-05, 8.995900000000057e-05, 9.01939999999983e-05, 8.988899999999925e-05, 9.020900000000082e-05, 9.002799999999894e-05, 9.047199999999769e-05, 9.044399999999855e-05, 9.001399999999937e-05, 9.045800000000159e-05, 8.98329999999975e-05, 8.972299999999989e-05, 8.994400000000152e-05, 9.038899999999975e-05, 9.038899999999975e-05, 9.03060000000018e-05, 8.988900000000272e-05, 8.988900000000272e-05, 8.977800000000216e-05, 9.006899999999818e-05]</msg>
<status status="PASS" starttime="20201115 23:00:08.948" endtime="20201115 23:00:08.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.943" endtime="20201115 23:00:08.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.953" endtime="20201115 23:00:08.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:08.956" endtime="20201115 23:00:08.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.954" endtime="20201115 23:00:08.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.951" endtime="20201115 23:00:08.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.586" endtime="20201115 23:00:08.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.584" endtime="20201115 23:00:08.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.583" endtime="20201115 23:00:08.977"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.979" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.987" endtime="20201115 23:00:09.007"></status>
</kw>
<msg timestamp="20201115 23:00:09.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.986" endtime="20201115 23:00:09.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.008" endtime="20201115 23:00:09.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.011" endtime="20201115 23:00:09.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.983" endtime="20201115 23:00:09.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.981" endtime="20201115 23:00:09.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.020" endtime="20201115 23:00:09.306"></status>
</kw>
<msg timestamp="20201115 23:00:09.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024272486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024364319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.018" endtime="20201115 23:00:09.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024272486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024364319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.310" endtime="20201115 23:00:09.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.318" endtime="20201115 23:00:09.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.015" endtime="20201115 23:00:09.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.014" endtime="20201115 23:00:09.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.325" level="INFO">${RESULT} = [{'time': 0.024364319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.18329999999995e-05, 'source_diff': 9.18329999999995e-05}, {'time': 0.024495708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:09.321" endtime="20201115 23:00:09.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.339" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:09.325" endtime="20201115 23:00:09.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.343" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.342" endtime="20201115 23:00:09.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.346" level="INFO">VALUE: [9.18329999999995e-05, 9.145800000000259e-05, 9.1332999999999e-05, 9.090200000000034e-05, 9.14450000000025e-05, 9.109700000000179e-05, 9.141600000000041e-05, 9.113899999999703e-05, 9.11939999999993e-05, 9.138899999999728e-05, 9.165300000000057e-05, 9.076399999999665e-05, 9.094400000000252e-05, 9.101400000000037e-05, 9.102799999999994e-05, 9.120900000000182e-05, 9.094399999999905e-05, 9.116600000000016e-05, 9.090200000000034e-05, 9.0639e-05, 9.108299999999875e-05, 9.137500000000118e-05, 9.079099999999979e-05, 9.062500000000043e-05, 9.087500000000068e-05, 9.102799999999994e-05, 9.094499999999853e-05, 9.109700000000179e-05, 9.117999999999973e-05, 9.092999999999948e-05, 9.142999999999998e-05, 9.163899999999753e-05, 9.092999999999948e-05, 9.111099999999789e-05, 9.152700000000097e-05, 9.06520000000001e-05, 9.118100000000268e-05, 9.126400000000062e-05, 9.084699999999807e-05, 9.126400000000062e-05, 9.077799999999969e-05, 9.14719999999987e-05, 9.120799999999887e-05, 9.088900000000025e-05, 9.122199999999844e-05, 9.115300000000007e-05, 9.11939999999993e-05, 9.058300000000172e-05, 9.126400000000062e-05, 9.113899999999703e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.344" endtime="20201115 23:00:09.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.340" endtime="20201115 23:00:09.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.349" endtime="20201115 23:00:09.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.352" endtime="20201115 23:00:09.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.351" endtime="20201115 23:00:09.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.347" endtime="20201115 23:00:09.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.980" endtime="20201115 23:00:09.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.978" endtime="20201115 23:00:09.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.977" endtime="20201115 23:00:09.374"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.376" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.384" endtime="20201115 23:00:09.402"></status>
</kw>
<msg timestamp="20201115 23:00:09.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.382" endtime="20201115 23:00:09.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.404" endtime="20201115 23:00:09.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.407" endtime="20201115 23:00:09.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.380" endtime="20201115 23:00:09.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.378" endtime="20201115 23:00:09.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.416" endtime="20201115 23:00:09.701"></status>
</kw>
<msg timestamp="20201115 23:00:09.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023445819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023539375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.414" endtime="20201115 23:00:09.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023445819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023539375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.705" endtime="20201115 23:00:09.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.713" endtime="20201115 23:00:09.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.412" endtime="20201115 23:00:09.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.410" endtime="20201115 23:00:09.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.720" level="INFO">${RESULT} = [{'time': 0.023539375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.355600000000158e-05, 'source_diff': 9.355600000000158e-05}, {'time': 0.023668778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:09.716" endtime="20201115 23:00:09.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.733" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:09.721" endtime="20201115 23:00:09.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.737" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.736" endtime="20201115 23:00:09.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.740" level="INFO">VALUE: [9.355600000000158e-05, 9.180599999999983e-05, 9.180599999999983e-05, 9.258299999999678e-05, 9.184699999999907e-05, 9.183400000000244e-05, 9.208299999999975e-05, 9.258299999999678e-05, 9.244500000000003e-05, 9.201400000000137e-05, 9.204100000000104e-05, 9.220799999999987e-05, 9.227800000000119e-05, 9.256900000000068e-05, 9.249999999999883e-05, 9.191700000000039e-05, 9.176400000000112e-05, 9.159700000000229e-05, 9.23199999999999e-05, 9.192999999999701e-05, 9.224999999999858e-05, 9.225000000000205e-05, 9.219499999999978e-05, 9.188899999999778e-05, 9.175000000000155e-05, 9.16939999999998e-05, 9.162499999999796e-05, 9.242999999999751e-05, 9.170799999999937e-05, 9.186100000000211e-05, 9.162499999999796e-05, 9.180500000000036e-05, 9.249999999999883e-05, 9.229100000000129e-05, 9.206999999999965e-05, 9.168000000000023e-05, 9.184799999999854e-05, 9.195799999999962e-05, 9.202800000000094e-05, 9.257000000000015e-05, 9.201299999999843e-05, 9.204200000000051e-05, 9.162500000000143e-05, 9.2333e-05, 9.176400000000112e-05, 9.238899999999828e-05, 9.238899999999828e-05, 9.176399999999765e-05, 9.201400000000137e-05, 9.257000000000015e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.738" endtime="20201115 23:00:09.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.734" endtime="20201115 23:00:09.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.743" endtime="20201115 23:00:09.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.746" endtime="20201115 23:00:09.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.745" endtime="20201115 23:00:09.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.741" endtime="20201115 23:00:09.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.376" endtime="20201115 23:00:09.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.375" endtime="20201115 23:00:09.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.374" endtime="20201115 23:00:09.767"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.770" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.778" endtime="20201115 23:00:09.797"></status>
</kw>
<msg timestamp="20201115 23:00:09.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.777" endtime="20201115 23:00:09.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.798" endtime="20201115 23:00:09.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.801" endtime="20201115 23:00:09.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.774" endtime="20201115 23:00:09.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.772" endtime="20201115 23:00:09.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.810" endtime="20201115 23:00:10.095"></status>
</kw>
<msg timestamp="20201115 23:00:10.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023960903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024055014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.808" endtime="20201115 23:00:10.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023960903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024055014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.099" endtime="20201115 23:00:10.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.108" endtime="20201115 23:00:10.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.806" endtime="20201115 23:00:10.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.804" endtime="20201115 23:00:10.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.114" level="INFO">${RESULT} = [{'time': 0.024055014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.411100000000089e-05, 'source_diff': 9.411100000000089e-05}, {'time': 0.024183403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:10.111" endtime="20201115 23:00:10.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.127" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:10.115" endtime="20201115 23:00:10.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.132" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.131" endtime="20201115 23:00:10.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.134" level="INFO">VALUE: [9.411100000000089e-05, 9.268100000000071e-05, 9.274999999999908e-05, 9.324999999999958e-05, 9.327800000000219e-05, 9.281900000000093e-05, 9.29590000000001e-05, 9.35269999999995e-05, 9.272199999999994e-05, 9.28330000000005e-05, 9.26940000000008e-05, 9.268099999999724e-05, 9.337499999999971e-05, 9.31390000000025e-05, 9.26940000000008e-05, 9.312500000000293e-05, 9.358300000000125e-05, 9.299999999999933e-05, 9.343100000000146e-05, 9.311099999999989e-05, 9.349999999999983e-05, 9.295799999999715e-05, 9.268000000000123e-05, 9.262499999999896e-05, 9.299999999999933e-05, 9.28200000000004e-05, 9.262499999999896e-05, 9.288899999999878e-05, 9.349999999999983e-05, 9.26940000000008e-05, 9.348600000000026e-05, 9.35139999999994e-05, 9.294399999999758e-05, 9.348600000000026e-05, 9.273699999999899e-05, 9.291700000000139e-05, 9.281900000000093e-05, 9.358299999999778e-05, 9.324999999999958e-05, 9.344400000000155e-05, 9.304199999999804e-05, 9.340299999999885e-05, 9.30000000000028e-05, 9.354200000000201e-05, 9.286099999999964e-05, 9.330599999999786e-05, 9.356899999999821e-05, 9.274999999999908e-05, 9.294399999999758e-05, 9.26520000000021e-05]</msg>
<status status="PASS" starttime="20201115 23:00:10.133" endtime="20201115 23:00:10.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.128" endtime="20201115 23:00:10.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.137" endtime="20201115 23:00:10.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.141" endtime="20201115 23:00:10.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.139" endtime="20201115 23:00:10.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.136" endtime="20201115 23:00:10.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.770" endtime="20201115 23:00:10.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.769" endtime="20201115 23:00:10.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.768" endtime="20201115 23:00:10.162"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.165" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.173" endtime="20201115 23:00:10.191"></status>
</kw>
<msg timestamp="20201115 23:00:10.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.171" endtime="20201115 23:00:10.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.193" endtime="20201115 23:00:10.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.195" endtime="20201115 23:00:10.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.169" endtime="20201115 23:00:10.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.167" endtime="20201115 23:00:10.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.204" endtime="20201115 23:00:10.491"></status>
</kw>
<msg timestamp="20201115 23:00:10.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023923097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024017778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.203" endtime="20201115 23:00:10.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023923097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024017778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.495" endtime="20201115 23:00:10.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.503" endtime="20201115 23:00:10.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.200" endtime="20201115 23:00:10.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.199" endtime="20201115 23:00:10.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.509" level="INFO">${RESULT} = [{'time': 0.024017778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.468099999999924e-05, 'source_diff': 9.468099999999924e-05}, {'time': 0.024148139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:10.506" endtime="20201115 23:00:10.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.523" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:10.510" endtime="20201115 23:00:10.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.527" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.526" endtime="20201115 23:00:10.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.530" level="INFO">VALUE: [9.468099999999924e-05, 9.393099999999849e-05, 9.380599999999836e-05, 9.380599999999836e-05, 9.425000000000058e-05, 9.384700000000107e-05, 9.358299999999778e-05, 9.438900000000028e-05, 9.398600000000076e-05, 9.425000000000058e-05, 9.441700000000289e-05, 9.436099999999767e-05, 9.379199999999879e-05, 9.454100000000007e-05, 9.400000000000033e-05, 9.409800000000079e-05, 9.423600000000101e-05, 9.437500000000071e-05, 9.429199999999929e-05, 9.4333999999998e-05, 9.438900000000028e-05, 9.406999999999818e-05, 9.424999999999711e-05, 9.450000000000083e-05, 9.36529999999991e-05, 9.445799999999865e-05, 9.418100000000221e-05, 9.368099999999824e-05, 9.367999999999876e-05, 9.37079999999979e-05, 9.444500000000203e-05, 9.388899999999978e-05, 9.456999999999868e-05, 9.376399999999965e-05, 9.409799999999732e-05, 9.359700000000082e-05, 9.394500000000153e-05, 9.395799999999815e-05, 9.438900000000028e-05, 9.393100000000196e-05, 9.381899999999846e-05, 9.372300000000042e-05, 9.386099999999717e-05, 9.426400000000015e-05, 9.388899999999978e-05, 9.379200000000226e-05, 9.405599999999861e-05, 9.406900000000218e-05, 9.380499999999889e-05, 9.383299999999803e-05]</msg>
<status status="PASS" starttime="20201115 23:00:10.528" endtime="20201115 23:00:10.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.524" endtime="20201115 23:00:10.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.533" endtime="20201115 23:00:10.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.536" endtime="20201115 23:00:10.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.535" endtime="20201115 23:00:10.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.531" endtime="20201115 23:00:10.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.165" endtime="20201115 23:00:10.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.164" endtime="20201115 23:00:10.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.163" endtime="20201115 23:00:10.558"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.560" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.568" endtime="20201115 23:00:10.588"></status>
</kw>
<msg timestamp="20201115 23:00:10.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.567" endtime="20201115 23:00:10.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.589" endtime="20201115 23:00:10.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.592" endtime="20201115 23:00:10.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.564" endtime="20201115 23:00:10.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.562" endtime="20201115 23:00:10.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.600" endtime="20201115 23:00:10.887"></status>
</kw>
<msg timestamp="20201115 23:00:10.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024357764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024454042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.599" endtime="20201115 23:00:10.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024357764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024454042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.891" endtime="20201115 23:00:10.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.899" endtime="20201115 23:00:10.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.596" endtime="20201115 23:00:10.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.595" endtime="20201115 23:00:10.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.905" level="INFO">${RESULT} = [{'time': 0.024454042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.627799999999825e-05, 'source_diff': 9.627799999999825e-05}, {'time': 0.024584444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:10.902" endtime="20201115 23:00:10.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.920" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:10.906" endtime="20201115 23:00:10.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.925" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.924" endtime="20201115 23:00:10.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.928" level="INFO">VALUE: [9.627799999999825e-05, 9.550000000000183e-05, 9.48339999999985e-05, 9.499999999999786e-05, 9.48200000000024e-05, 9.469399999999933e-05, 9.558399999999925e-05, 9.556999999999968e-05, 9.506899999999971e-05, 9.525000000000158e-05, 9.463900000000053e-05, 9.52079999999994e-05, 9.551300000000193e-05, 9.524999999999811e-05, 9.495899999999863e-05, 9.52079999999994e-05, 9.53469999999991e-05, 9.522200000000244e-05, 9.467999999999976e-05, 9.500000000000133e-05, 9.518000000000026e-05, 9.498700000000124e-05, 9.506999999999918e-05, 9.556999999999968e-05, 9.529200000000029e-05, 9.462500000000096e-05, 9.519399999999983e-05, 9.463900000000053e-05, 9.48200000000024e-05, 9.486099999999817e-05, 9.55279999999975e-05, 9.49720000000022e-05, 9.55279999999975e-05, 9.536100000000214e-05, 9.470800000000237e-05, 9.547199999999922e-05, 9.488900000000078e-05, 9.556900000000021e-05, 9.500000000000133e-05, 9.513900000000103e-05, 9.494399999999958e-05, 9.507000000000265e-05, 9.531899999999996e-05, 9.552699999999803e-05, 9.526400000000115e-05, 9.508299999999928e-05, 9.481899999999946e-05, 9.506999999999918e-05, 9.477800000000022e-05, 9.469499999999881e-05]</msg>
<status status="PASS" starttime="20201115 23:00:10.926" endtime="20201115 23:00:10.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.921" endtime="20201115 23:00:10.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.931" endtime="20201115 23:00:10.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.935" endtime="20201115 23:00:10.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.933" endtime="20201115 23:00:10.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.930" endtime="20201115 23:00:10.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.561" endtime="20201115 23:00:10.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.559" endtime="20201115 23:00:10.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.558" endtime="20201115 23:00:10.956"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.958" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.966" endtime="20201115 23:00:10.985"></status>
</kw>
<msg timestamp="20201115 23:00:10.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.965" endtime="20201115 23:00:10.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.987" endtime="20201115 23:00:10.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.989" endtime="20201115 23:00:10.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.962" endtime="20201115 23:00:10.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.960" endtime="20201115 23:00:10.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.998" endtime="20201115 23:00:11.284"></status>
</kw>
<msg timestamp="20201115 23:00:11.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023536139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023633389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.996" endtime="20201115 23:00:11.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023536139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023633389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.288" endtime="20201115 23:00:11.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.296" endtime="20201115 23:00:11.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.994" endtime="20201115 23:00:11.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.992" endtime="20201115 23:00:11.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.303" level="INFO">${RESULT} = [{'time': 0.023633389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.725000000000011e-05, 'source_diff': 9.725000000000011e-05}, {'time': 0.02376675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:11.300" endtime="20201115 23:00:11.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.317" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:11.304" endtime="20201115 23:00:11.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.321" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.320" endtime="20201115 23:00:11.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.324" level="INFO">VALUE: [9.725000000000011e-05, 9.644400000000108e-05, 9.580500000000089e-05, 9.580500000000089e-05, 9.644400000000108e-05, 9.583300000000003e-05, 9.626399999999868e-05, 9.599999999999886e-05, 9.590300000000135e-05, 9.624999999999911e-05, 9.563899999999806e-05, 9.600000000000233e-05, 9.649999999999936e-05, 9.569499999999981e-05, 9.581900000000046e-05, 9.588899999999831e-05, 9.581900000000046e-05, 9.599999999999886e-05, 9.575000000000208e-05, 9.616700000000117e-05, 9.569499999999981e-05, 9.622199999999997e-05, 9.590300000000135e-05, 9.637499999999924e-05, 9.608399999999975e-05, 9.562499999999849e-05, 9.56530000000011e-05, 9.631899999999749e-05, 9.563799999999859e-05, 9.6027999999998e-05, 9.599999999999886e-05, 9.608300000000028e-05, 9.591599999999798e-05, 9.591599999999798e-05, 9.60140000000019e-05, 9.611199999999889e-05, 9.649999999999936e-05, 9.650000000000283e-05, 9.575000000000208e-05, 9.56530000000011e-05, 9.619500000000031e-05, 9.563899999999806e-05, 9.579099999999785e-05, 9.611100000000289e-05, 9.593100000000049e-05, 9.625000000000258e-05, 9.630600000000086e-05, 9.657000000000068e-05, 9.618000000000126e-05, 9.599999999999886e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.322" endtime="20201115 23:00:11.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.318" endtime="20201115 23:00:11.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.327" endtime="20201115 23:00:11.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.330" endtime="20201115 23:00:11.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.329" endtime="20201115 23:00:11.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.325" endtime="20201115 23:00:11.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.959" endtime="20201115 23:00:11.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.957" endtime="20201115 23:00:11.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.956" endtime="20201115 23:00:11.351"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.354" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.362" endtime="20201115 23:00:11.380"></status>
</kw>
<msg timestamp="20201115 23:00:11.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.360" endtime="20201115 23:00:11.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.382" endtime="20201115 23:00:11.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.384" endtime="20201115 23:00:11.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.358" endtime="20201115 23:00:11.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.355" endtime="20201115 23:00:11.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.393" endtime="20201115 23:00:11.678"></status>
</kw>
<msg timestamp="20201115 23:00:11.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023402958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023501111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.392" endtime="20201115 23:00:11.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023402958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023501111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.682" endtime="20201115 23:00:11.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.691" endtime="20201115 23:00:11.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.389" endtime="20201115 23:00:11.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.387" endtime="20201115 23:00:11.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.697" level="INFO">${RESULT} = [{'time': 0.023501111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.815300000000013e-05, 'source_diff': 9.815300000000013e-05}, {'time': 0.023642431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:11.694" endtime="20201115 23:00:11.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.710" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:11.698" endtime="20201115 23:00:11.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.715" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.714" endtime="20201115 23:00:11.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.717" level="INFO">VALUE: [9.815300000000013e-05, 9.712499999999999e-05, 9.730600000000186e-05, 9.734800000000057e-05, 9.676399999999918e-05, 9.7027999999999e-05, 9.681899999999799e-05, 9.711100000000042e-05, 9.737500000000024e-05, 9.719399999999837e-05, 9.669500000000081e-05, 9.726399999999968e-05, 9.712499999999999e-05, 9.672200000000047e-05, 9.74860000000008e-05, 9.69730000000002e-05, 9.711100000000042e-05, 9.72920000000023e-05, 9.711099999999695e-05, 9.699999999999986e-05, 9.711100000000042e-05, 9.713800000000009e-05, 9.674999999999961e-05, 9.756899999999874e-05, 9.744500000000156e-05, 9.676299999999971e-05, 9.75279999999995e-05, 9.713800000000009e-05, 9.676400000000265e-05, 9.74860000000008e-05, 9.729099999999935e-05, 9.731899999999849e-05, 9.71669999999987e-05, 9.661099999999992e-05, 9.69860000000003e-05, 9.713800000000009e-05, 9.756900000000221e-05, 9.741700000000242e-05, 9.693099999999802e-05, 9.733299999999806e-05, 9.756999999999821e-05, 9.704199999999857e-05, 9.673600000000004e-05, 9.661199999999939e-05, 9.723600000000054e-05, 9.670900000000038e-05, 9.682000000000093e-05, 9.662500000000296e-05, 9.699999999999986e-05, 9.750000000000036e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.716" endtime="20201115 23:00:11.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.711" endtime="20201115 23:00:11.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.720" endtime="20201115 23:00:11.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.724" endtime="20201115 23:00:11.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.722" endtime="20201115 23:00:11.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.719" endtime="20201115 23:00:11.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.354" endtime="20201115 23:00:11.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.352" endtime="20201115 23:00:11.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.352" endtime="20201115 23:00:11.745"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.747" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.755" endtime="20201115 23:00:11.774"></status>
</kw>
<msg timestamp="20201115 23:00:11.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.754" endtime="20201115 23:00:11.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.776" endtime="20201115 23:00:11.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.778" endtime="20201115 23:00:11.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.751" endtime="20201115 23:00:11.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.749" endtime="20201115 23:00:11.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.788" endtime="20201115 23:00:12.073"></status>
</kw>
<msg timestamp="20201115 23:00:12.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023531653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023630694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.785" endtime="20201115 23:00:12.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023531653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023630694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.077" endtime="20201115 23:00:12.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.085" endtime="20201115 23:00:12.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.783" endtime="20201115 23:00:12.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.781" endtime="20201115 23:00:12.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.092" level="INFO">${RESULT} = [{'time': 0.023630694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.90410000000011e-05, 'source_diff': 9.90410000000011e-05}, {'time': 0.023766042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:12.088" endtime="20201115 23:00:12.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.105" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:12.093" endtime="20201115 23:00:12.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.109" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.108" endtime="20201115 23:00:12.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.112" level="INFO">VALUE: [9.90410000000011e-05, 9.793100000000249e-05, 9.763900000000006e-05, 9.787500000000074e-05, 9.830499999999992e-05, 9.775000000000061e-05, 9.788900000000031e-05, 9.777799999999975e-05, 9.826400000000068e-05, 9.856899999999974e-05, 9.772300000000095e-05, 9.783299999999856e-05, 9.82080000000024e-05, 9.808299999999881e-05, 9.802700000000053e-05, 9.833399999999853e-05, 9.79860000000013e-05, 9.808399999999828e-05, 9.812499999999752e-05, 9.763900000000006e-05, 9.856899999999974e-05, 9.836100000000167e-05, 9.837500000000124e-05, 9.826399999999721e-05, 9.845899999999866e-05, 9.851399999999746e-05, 9.838900000000081e-05, 9.762500000000049e-05, 9.791599999999998e-05, 9.795799999999869e-05, 9.822200000000197e-05, 9.859699999999888e-05, 9.776400000000018e-05, 9.772200000000147e-05, 9.851399999999746e-05, 9.815300000000013e-05, 9.794500000000206e-05, 9.772200000000147e-05, 9.78340000000015e-05, 9.812500000000099e-05, 9.844499999999909e-05, 9.836200000000114e-05, 9.811100000000142e-05, 9.81669999999997e-05, 9.847200000000222e-05, 9.762500000000049e-05, 9.809699999999838e-05, 9.825000000000111e-05, 9.762500000000049e-05, 9.8028e-05]</msg>
<status status="PASS" starttime="20201115 23:00:12.110" endtime="20201115 23:00:12.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.106" endtime="20201115 23:00:12.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.115" endtime="20201115 23:00:12.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.118" endtime="20201115 23:00:12.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.117" endtime="20201115 23:00:12.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.113" endtime="20201115 23:00:12.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.748" endtime="20201115 23:00:12.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.746" endtime="20201115 23:00:12.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.745" endtime="20201115 23:00:12.139"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.142" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.150" endtime="20201115 23:00:12.169"></status>
</kw>
<msg timestamp="20201115 23:00:12.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.148" endtime="20201115 23:00:12.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.171" endtime="20201115 23:00:12.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.174" endtime="20201115 23:00:12.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.146" endtime="20201115 23:00:12.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.144" endtime="20201115 23:00:12.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.183" endtime="20201115 23:00:12.468"></status>
</kw>
<msg timestamp="20201115 23:00:12.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024302056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024402069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.181" endtime="20201115 23:00:12.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024302056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024402069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.472" endtime="20201115 23:00:12.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.481" endtime="20201115 23:00:12.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.179" endtime="20201115 23:00:12.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.177" endtime="20201115 23:00:12.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.487" level="INFO">${RESULT} = [{'time': 0.024402069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010001299999999949, 'source_diff': 0.00010001299999999949}, {'time': 0.024553431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:12.484" endtime="20201115 23:00:12.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.502" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:12.488" endtime="20201115 23:00:12.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.506" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.505" endtime="20201115 23:00:12.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.509" level="INFO">VALUE: [0.00010001299999999949, 9.929200000000082e-05, 9.919400000000037e-05, 9.886199999999817e-05, 9.894400000000012e-05, 9.93609999999992e-05, 9.875000000000161e-05, 9.895900000000263e-05, 9.898599999999882e-05, 9.927800000000125e-05, 9.884699999999913e-05, 9.93609999999992e-05, 9.90549999999972e-05, 9.908299999999981e-05, 9.881999999999946e-05, 9.895799999999969e-05, 9.918100000000027e-05, 9.876400000000118e-05, 9.866600000000073e-05, 9.956900000000074e-05, 9.876400000000118e-05, 9.924999999999864e-05, 9.920799999999994e-05, 9.861099999999845e-05, 9.931999999999996e-05, 9.90549999999972e-05, 9.888899999999784e-05, 9.937499999999877e-05, 9.937500000000224e-05, 9.938899999999834e-05, 9.930499999999745e-05, 9.90549999999972e-05, 9.879200000000032e-05, 9.926300000000221e-05, 9.905600000000014e-05, 9.884699999999913e-05, 9.869499999999934e-05, 9.863900000000106e-05, 9.893000000000055e-05, 9.888900000000131e-05, 9.875000000000161e-05, 9.931999999999996e-05, 9.906899999999677e-05, 9.954200000000107e-05, 9.862499999999802e-05, 9.876400000000118e-05, 9.881899999999999e-05, 9.870799999999944e-05, 9.88340000000025e-05, 9.87080000000029e-05]</msg>
<status status="PASS" starttime="20201115 23:00:12.507" endtime="20201115 23:00:12.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.503" endtime="20201115 23:00:12.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.512" endtime="20201115 23:00:12.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.515" endtime="20201115 23:00:12.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.514" endtime="20201115 23:00:12.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.510" endtime="20201115 23:00:12.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.142" endtime="20201115 23:00:12.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.141" endtime="20201115 23:00:12.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.140" endtime="20201115 23:00:12.536"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.539" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.547" endtime="20201115 23:00:12.566"></status>
</kw>
<msg timestamp="20201115 23:00:12.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.546" endtime="20201115 23:00:12.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.568" endtime="20201115 23:00:12.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.570" endtime="20201115 23:00:12.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.543" endtime="20201115 23:00:12.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.541" endtime="20201115 23:00:12.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.579" endtime="20201115 23:00:12.864"></status>
</kw>
<msg timestamp="20201115 23:00:12.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024058556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024159875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.578" endtime="20201115 23:00:12.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024058556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024159875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.869" endtime="20201115 23:00:12.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.877" endtime="20201115 23:00:12.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.575" endtime="20201115 23:00:12.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.573" endtime="20201115 23:00:12.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.883" level="INFO">${RESULT} = [{'time': 0.024159875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010131900000000249, 'source_diff': 0.00010131900000000249}, {'time': 0.024310236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:12.880" endtime="20201115 23:00:12.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.897" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:12.884" endtime="20201115 23:00:12.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.901" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.900" endtime="20201115 23:00:12.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.903" level="INFO">VALUE: [0.00010131900000000249, 9.96939999999974e-05, 0.00010012499999999952, 0.00010001399999999896, 0.00010025000000000311, 0.00010031899999999802, 9.961099999999945e-05, 9.963900000000206e-05, 9.994400000000112e-05, 0.00010011199999999942, 0.00010024999999999964, 0.00010008300000000081, 0.00010027799999999878, 9.995800000000069e-05, 0.00010002799999999853, 0.00010020900000000041, 0.0001003610000000002, 0.00010015299999999866, 9.988899999999884e-05, 9.977800000000175e-05, 0.00010031900000000149, 0.00010033300000000106, 0.00010044399999999815, 9.974999999999914e-05, 0.00010037499999999977, 0.00010062500000000002, 9.988899999999884e-05, 0.00010031900000000149, 0.00010051299999999999, 0.00010001399999999896, 0.0001000410000000021, 0.00010059800000000035, 0.0001004999999999999, 0.00010055599999999817, 0.00010056999999999774, 0.00010038899999999934, 9.963899999999859e-05, 0.00010012499999999952, 0.00010017999999999833, 9.98060000000009e-05, 9.994500000000059e-05, 9.993000000000155e-05, 9.991700000000145e-05, 9.979200000000132e-05, 0.00010059699999999741, 9.982000000000046e-05, 0.0001003610000000002, 0.00010011099999999995, 0.00010037499999999977, 9.983300000000056e-05]</msg>
<status status="PASS" starttime="20201115 23:00:12.902" endtime="20201115 23:00:12.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.898" endtime="20201115 23:00:12.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.907" endtime="20201115 23:00:12.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.910" endtime="20201115 23:00:12.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.909" endtime="20201115 23:00:12.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.905" endtime="20201115 23:00:12.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.539" endtime="20201115 23:00:12.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.537" endtime="20201115 23:00:12.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.537" endtime="20201115 23:00:12.932"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.934" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.942" endtime="20201115 23:00:12.961"></status>
</kw>
<msg timestamp="20201115 23:00:12.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.941" endtime="20201115 23:00:12.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.963" endtime="20201115 23:00:12.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.965" endtime="20201115 23:00:12.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.938" endtime="20201115 23:00:12.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.936" endtime="20201115 23:00:12.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.974" endtime="20201115 23:00:13.260"></status>
</kw>
<msg timestamp="20201115 23:00:13.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024183333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024285472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.973" endtime="20201115 23:00:13.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024183333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024285472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.264" endtime="20201115 23:00:13.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.272" endtime="20201115 23:00:13.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.970" endtime="20201115 23:00:13.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.968" endtime="20201115 23:00:13.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.278" level="INFO">${RESULT} = [{'time': 0.024285472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010213899999999762, 'source_diff': 0.00010213899999999762}, {'time': 0.024433792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:13.275" endtime="20201115 23:00:13.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.291" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:13.279" endtime="20201115 23:00:13.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.296" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.295" endtime="20201115 23:00:13.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.298" level="INFO">VALUE: [0.00010213899999999762, 0.00010129199999999935, 0.00010066599999999926, 0.0001010549999999992, 0.00010059700000000088, 0.00010091699999999898, 0.00010118100000000227, 0.00010104099999999963, 0.00010127700000000031, 0.00010131899999999902, 0.00010065299999999916, 0.0001012359999999976, 0.0001011670000000027, 0.0001015000000000009, 0.00010102700000000006, 0.00010061100000000045, 0.00010073600000000058, 0.000101416, 0.00010075000000000014, 0.00010097200000000126, 0.00010118100000000227, 0.00010098600000000083, 0.00010134699999999816, 0.0001010419999999991, 0.00010129199999999935, 0.00010091700000000245, 0.00010156899999999927, 0.00010147300000000123, 0.0001015000000000009, 0.00010059700000000088, 0.00010147200000000176, 0.00010111100000000095, 0.00010134700000000163, 0.00010098599999999736, 0.00010072199999999754, 0.00010062500000000002, 0.00010079199999999885, 0.00010095900000000116, 0.00010142999999999958, 0.00010061100000000045, 0.0001013749999999973, 0.00010129199999999935, 0.00010120899999999794, 0.00010081899999999852, 0.0001008610000000007, 0.00010141699999999948, 0.00010063899999999959, 0.00010058300000000131, 0.00010126400000000021, 0.00010117999999999933]</msg>
<status status="PASS" starttime="20201115 23:00:13.297" endtime="20201115 23:00:13.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.292" endtime="20201115 23:00:13.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.302" endtime="20201115 23:00:13.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.305" endtime="20201115 23:00:13.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.303" endtime="20201115 23:00:13.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.300" endtime="20201115 23:00:13.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.935" endtime="20201115 23:00:13.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.933" endtime="20201115 23:00:13.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.932" endtime="20201115 23:00:13.326"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.328" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.336" endtime="20201115 23:00:13.355"></status>
</kw>
<msg timestamp="20201115 23:00:13.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.335" endtime="20201115 23:00:13.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.357" endtime="20201115 23:00:13.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.359" endtime="20201115 23:00:13.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.332" endtime="20201115 23:00:13.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.330" endtime="20201115 23:00:13.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.368" endtime="20201115 23:00:13.654"></status>
</kw>
<msg timestamp="20201115 23:00:13.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023539889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023642792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.367" endtime="20201115 23:00:13.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023539889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023642792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.658" endtime="20201115 23:00:13.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.666" endtime="20201115 23:00:13.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.364" endtime="20201115 23:00:13.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.363" endtime="20201115 23:00:13.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.673" level="INFO">${RESULT} = [{'time': 0.023642792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010290299999999794, 'source_diff': 0.00010290299999999794}, {'time': 0.023788069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:13.669" endtime="20201115 23:00:13.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.686" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:13.674" endtime="20201115 23:00:13.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.690" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.689" endtime="20201115 23:00:13.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.693" level="INFO">VALUE: [0.00010290299999999794, 0.00010216599999999729, 0.00010156900000000274, 0.00010195799999999922, 0.00010205599999999967, 0.0001025550000000007, 0.00010204100000000063, 0.00010244400000000015, 0.00010230599999999992, 0.00010230599999999992, 0.00010247199999999929, 0.00010158299999999884, 0.0001025420000000006, 0.00010202699999999759, 0.00010241700000000048, 0.00010205599999999967, 0.00010198600000000183, 0.00010211100000000195, 0.00010252699999999809, 0.00010234700000000263, 0.00010209699999999891, 0.00010209800000000185, 0.0001023610000000022, 0.00010252800000000103, 0.00010222199999999904, 0.0001020550000000002, 0.00010234699999999916, 0.00010220899999999894, 0.0001024299999999971, 0.00010202800000000053, 0.00010172199999999854, 0.00010206899999999977, 0.00010159699999999841, 0.00010194500000000259, 0.00010161100000000145, 0.00010211100000000195, 0.00010209700000000238, 0.0001015549999999997, 0.00010227799999999732, 0.00010216700000000023, 0.00010252800000000103, 0.0001020420000000001, 0.00010240299999999744, 0.00010162500000000102, 0.00010247199999999929, 0.00010204100000000063, 0.00010184699999999866, 0.00010209699999999891, 0.0001025420000000006, 0.00010159700000000188]</msg>
<status status="PASS" starttime="20201115 23:00:13.691" endtime="20201115 23:00:13.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.686" endtime="20201115 23:00:13.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.696" endtime="20201115 23:00:13.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.700" endtime="20201115 23:00:13.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.698" endtime="20201115 23:00:13.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.694" endtime="20201115 23:00:13.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.329" endtime="20201115 23:00:13.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.327" endtime="20201115 23:00:13.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.326" endtime="20201115 23:00:13.721"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.723" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.731" endtime="20201115 23:00:13.751"></status>
</kw>
<msg timestamp="20201115 23:00:13.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.730" endtime="20201115 23:00:13.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.752" endtime="20201115 23:00:13.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.755" endtime="20201115 23:00:13.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.727" endtime="20201115 23:00:13.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.725" endtime="20201115 23:00:13.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.764" endtime="20201115 23:00:14.050"></status>
</kw>
<msg timestamp="20201115 23:00:14.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024352333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024456806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.762" endtime="20201115 23:00:14.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024352333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024456806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.054" endtime="20201115 23:00:14.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.062" endtime="20201115 23:00:14.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.760" endtime="20201115 23:00:14.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.758" endtime="20201115 23:00:14.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.069" level="INFO">${RESULT} = [{'time': 0.024456806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010447300000000076, 'source_diff': 0.00010447300000000076}, {'time': 0.024600139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:14.066" endtime="20201115 23:00:14.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.083" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:14.070" endtime="20201115 23:00:14.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.088" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.087" endtime="20201115 23:00:14.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.091" level="INFO">VALUE: [0.00010447300000000076, 0.00010322200000000004, 0.00010326400000000222, 0.00010316700000000123, 0.00010279200000000085, 0.00010272199999999954, 0.0001027359999999991, 0.00010261100000000245, 0.00010327799999999832, 0.00010284699999999966, 0.00010343000000000158, 0.00010329099999999841, 0.00010308399999999981, 0.00010279200000000085, 0.00010302800000000154, 0.00010347200000000029, 0.00010306900000000077, 0.00010259699999999941, 0.00010354099999999866, 0.00010273699999999858, 0.00010352799999999857, 0.00010309799999999938, 0.00010354100000000213, 0.00010280500000000095, 0.00010312499999999905, 0.00010329200000000135, 0.00010259699999999941, 0.00010311099999999948, 0.00010269499999999987, 0.00010284699999999966, 0.00010272199999999954, 0.00010279200000000085, 0.0001030139999999985, 0.00010279199999999739, 0.00010329199999999789, 0.00010316700000000123, 0.00010293000000000108, 0.00010301400000000197, 0.00010308300000000034, 0.00010280600000000042, 0.00010274999999999868, 0.00010329199999999789, 0.00010291700000000098, 0.00010272199999999954, 0.0001030139999999985, 0.00010320899999999994, 0.00010316599999999829, 0.000103207999999997, 0.00010352799999999857, 0.00010304099999999816]</msg>
<status status="PASS" starttime="20201115 23:00:14.089" endtime="20201115 23:00:14.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.084" endtime="20201115 23:00:14.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.094" endtime="20201115 23:00:14.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.097" endtime="20201115 23:00:14.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.096" endtime="20201115 23:00:14.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.092" endtime="20201115 23:00:14.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.724" endtime="20201115 23:00:14.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.722" endtime="20201115 23:00:14.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.721" endtime="20201115 23:00:14.118"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.121" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.129" endtime="20201115 23:00:14.148"></status>
</kw>
<msg timestamp="20201115 23:00:14.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.127" endtime="20201115 23:00:14.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.149" endtime="20201115 23:00:14.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.152" endtime="20201115 23:00:14.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.125" endtime="20201115 23:00:14.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.123" endtime="20201115 23:00:14.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.160" endtime="20201115 23:00:14.445"></status>
</kw>
<msg timestamp="20201115 23:00:14.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023464486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023569806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.159" endtime="20201115 23:00:14.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023464486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023569806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.449" endtime="20201115 23:00:14.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.457" endtime="20201115 23:00:14.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.156" endtime="20201115 23:00:14.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.155" endtime="20201115 23:00:14.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.464" level="INFO">${RESULT} = [{'time': 0.023569806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010531999999999903, 'source_diff': 0.00010531999999999903}, {'time': 0.023723139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:14.461" endtime="20201115 23:00:14.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.477" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:14.465" endtime="20201115 23:00:14.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.481" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.480" endtime="20201115 23:00:14.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.484" level="INFO">VALUE: [0.00010531999999999903, 0.000103820000000001, 0.00010413899999999962, 0.0001043620000000002, 0.00010444400000000215, 0.00010447200000000129, 0.00010452799999999957, 0.00010397200000000079, 0.00010420899999999747, 0.00010394400000000165, 0.00010398600000000036, 0.00010413899999999962, 0.00010412500000000005, 0.00010362499999999955, 0.00010448599999999739, 0.00010372300000000001, 0.00010448600000000086, 0.00010361099999999998, 0.00010434800000000063, 0.00010372200000000054, 0.00010383300000000109, 0.00010399999999999993, 0.00010440299999999944, 0.00010448600000000086, 0.00010379199999999839, 0.00010380500000000195, 0.00010366699999999826, 0.00010398699999999983, 0.00010365299999999869, 0.00010447200000000129, 0.00010381900000000152, 0.00010384699999999719, 0.00010408400000000081, 0.00010425000000000018, 0.00010434699999999769, 0.00010430500000000245, 0.00010448600000000086, 0.00010397199999999732, 0.00010397200000000079, 0.00010379199999999839, 0.0001045420000000026, 0.00010429199999999889, 0.00010406900000000177, 0.00010430500000000245, 0.00010399999999999993, 0.0001042360000000006, 0.00010450000000000043, 0.00010436100000000073, 0.00010454099999999966, 0.00010376399999999925]</msg>
<status status="PASS" starttime="20201115 23:00:14.482" endtime="20201115 23:00:14.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.478" endtime="20201115 23:00:14.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.487" endtime="20201115 23:00:14.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.490" endtime="20201115 23:00:14.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.489" endtime="20201115 23:00:14.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.485" endtime="20201115 23:00:14.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.121" endtime="20201115 23:00:14.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.119" endtime="20201115 23:00:14.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.119" endtime="20201115 23:00:14.511"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.514" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.522" endtime="20201115 23:00:14.541"></status>
</kw>
<msg timestamp="20201115 23:00:14.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.520" endtime="20201115 23:00:14.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.542" endtime="20201115 23:00:14.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.545" endtime="20201115 23:00:14.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.518" endtime="20201115 23:00:14.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.516" endtime="20201115 23:00:14.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.554" endtime="20201115 23:00:14.838"></status>
</kw>
<msg timestamp="20201115 23:00:14.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023446528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023552417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.552" endtime="20201115 23:00:14.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023446528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023552417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.843" endtime="20201115 23:00:14.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.851" endtime="20201115 23:00:14.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.550" endtime="20201115 23:00:14.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.548" endtime="20201115 23:00:14.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.857" level="INFO">${RESULT} = [{'time': 0.023552417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001058889999999979, 'source_diff': 0.0001058889999999979}, {'time': 0.02369775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:14.854" endtime="20201115 23:00:14.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.870" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:14.858" endtime="20201115 23:00:14.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.875" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.874" endtime="20201115 23:00:14.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.877" level="INFO">VALUE: [0.0001058889999999979, 0.00010547199999999882, 0.00010522200000000204, 0.00010547200000000229, 0.00010465299999999969, 0.0001051949999999989, 0.00010511100000000148, 0.00010502700000000059, 0.00010516699999999976, 0.00010475000000000068, 0.00010459699999999794, 0.00010552800000000057, 0.00010494500000000212, 0.0001048750000000008, 0.00010508299999999887, 0.00010472199999999807, 0.00010515300000000019, 0.00010504199999999964, 0.00010509700000000191, 0.00010472200000000154, 0.00010536100000000173, 0.00010541700000000001, 0.00010533300000000259, 0.00010534700000000216, 0.00010486100000000123, 0.00010508400000000181, 0.00010494500000000212, 0.00010490299999999994, 0.00010541600000000054, 0.00010469399999999893, 0.00010498599999999789, 0.00010534700000000216, 0.00010513899999999715, 0.00010472199999999807, 0.00010540300000000044, 0.00010511099999999801, 0.00010534700000000216, 0.00010522199999999857, 0.0001050559999999992, 0.00010552800000000057, 0.00010559699999999894, 0.00010484799999999767, 0.00010497199999999832, 0.00010522199999999857, 0.00010461099999999751, 0.00010506999999999878, 0.00010551399999999753, 0.00010466599999999979, 0.0001047079999999985, 0.00010538900000000087]</msg>
<status status="PASS" starttime="20201115 23:00:14.876" endtime="20201115 23:00:14.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.871" endtime="20201115 23:00:14.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.880" endtime="20201115 23:00:14.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.883" endtime="20201115 23:00:14.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.882" endtime="20201115 23:00:14.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.878" endtime="20201115 23:00:14.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.514" endtime="20201115 23:00:14.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.513" endtime="20201115 23:00:14.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.512" endtime="20201115 23:00:14.905"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.907" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.915" endtime="20201115 23:00:14.934"></status>
</kw>
<msg timestamp="20201115 23:00:14.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.913" endtime="20201115 23:00:14.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.935" endtime="20201115 23:00:14.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.938" endtime="20201115 23:00:14.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.911" endtime="20201115 23:00:14.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.909" endtime="20201115 23:00:14.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.947" endtime="20201115 23:00:15.234"></status>
</kw>
<msg timestamp="20201115 23:00:15.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023346486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023454042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.946" endtime="20201115 23:00:15.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023346486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023454042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.238" endtime="20201115 23:00:15.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.246" endtime="20201115 23:00:15.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.943" endtime="20201115 23:00:15.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.942" endtime="20201115 23:00:15.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.252" level="INFO">${RESULT} = [{'time': 0.023454042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001075560000000017, 'source_diff': 0.0001075560000000017}, {'time': 0.023613333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:15.249" endtime="20201115 23:00:15.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.265" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:15.253" endtime="20201115 23:00:15.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.270" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.269" endtime="20201115 23:00:15.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.272" level="INFO">VALUE: [0.0001075560000000017, 0.00010647199999999982, 0.00010609699999999944, 0.00010573599999999864, 0.00010577700000000134, 0.00010649999999999896, 0.00010629099999999794, 0.0001065560000000007, 0.00010576400000000125, 0.00010634799999999917, 0.00010618100000000033, 0.00010573599999999864, 0.00010598599999999889, 0.00010616700000000076, 0.00010568099999999983, 0.00010609799999999892, 0.00010622299999999904, 0.00010572299999999854, 0.00010616599999999782, 0.00010648599999999939, 0.00010641700000000101, 0.00010620899999999947, 0.00010561099999999851, 0.0001063339999999996, 0.00010626400000000175, 0.00010641700000000101, 0.00010566700000000026, 0.00010648599999999939, 0.00010563900000000112, 0.00010559699999999894, 0.00010645800000000025, 0.00010604200000000064, 0.00010590300000000094, 0.00010611100000000248, 0.00010597299999999879, 0.00010601299999999855, 0.00010636099999999926, 0.00010641599999999807, 0.00010641699999999754, 0.00010572200000000254, 0.00010626400000000175, 0.0001058880000000019, 0.00010654099999999819, 0.00010615200000000172, 0.0001065279999999981, 0.00010640299999999797, 0.00010598599999999889, 0.00010608399999999935, 0.00010598600000000236, 0.00010588900000000137]</msg>
<status status="PASS" starttime="20201115 23:00:15.271" endtime="20201115 23:00:15.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.266" endtime="20201115 23:00:15.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.275" endtime="20201115 23:00:15.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.278" endtime="20201115 23:00:15.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.277" endtime="20201115 23:00:15.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.273" endtime="20201115 23:00:15.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.908" endtime="20201115 23:00:15.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.906" endtime="20201115 23:00:15.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.905" endtime="20201115 23:00:15.300"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.302" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.315" endtime="20201115 23:00:15.335"></status>
</kw>
<msg timestamp="20201115 23:00:15.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.314" endtime="20201115 23:00:15.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.337" endtime="20201115 23:00:15.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.339" endtime="20201115 23:00:15.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.311" endtime="20201115 23:00:15.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.304" endtime="20201115 23:00:15.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.348" endtime="20201115 23:00:15.634"></status>
</kw>
<msg timestamp="20201115 23:00:15.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029562347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029670819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.347" endtime="20201115 23:00:15.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029562347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029670819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.638" endtime="20201115 23:00:15.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.646" endtime="20201115 23:00:15.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.344" endtime="20201115 23:00:15.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.342" endtime="20201115 23:00:15.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.652" level="INFO">${RESULT} = [{'time': 0.029670819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010847200000000182, 'source_diff': 0.00010847200000000182}, {'time': 0.029817167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:15.649" endtime="20201115 23:00:15.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.667" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:15.653" endtime="20201115 23:00:15.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.671" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.670" endtime="20201115 23:00:15.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.674" level="INFO">VALUE: [0.00010847200000000182, 0.0001075279999999991, 0.00010736100000000026, 0.00010718100000000133, 0.00010722200000000057, 0.00010686099999999976, 0.0001073340000000006, 0.00010722200000000057, 0.00010677799999999835, 0.00010659699999999994, 0.00010734700000000069, 0.0001068889999999989, 0.00010723599999999667, 0.0001068340000000001, 0.00010709700000000044, 0.00010700000000000293, 0.00010745799999999778, 0.00010715300000000566, 0.0001073889999999994, 0.00010719399999999796, 0.00010724999999999624, 0.00010722200000000404, 0.00010672200000000354, 0.00010669500000000387, 0.0001072360000000036, 0.00010659699999999994, 0.00010699999999999599, 0.00010743100000000505, 0.00010702800000000207, 0.00010722200000000404, 0.0001075419999999952, 0.00010691699999999804, 0.00010734700000000069, 0.00010666699999999779, 0.00010665299999999822, 0.00010733299999999418, 0.00010730600000000146, 0.00010702799999999513, 0.00010752799999999563, 0.00010752800000000257, 0.00010752800000000257, 0.00010716599999999882, 0.00010673599999999617, 0.00010702699999999565, 0.00010697200000000379, 0.00010736099999999332, 0.00010704099999999522, 0.00010713899999999915, 0.00010686099999999976, 0.00010665199999999875]</msg>
<status status="PASS" starttime="20201115 23:00:15.672" endtime="20201115 23:00:15.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.668" endtime="20201115 23:00:15.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.677" endtime="20201115 23:00:15.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.681" endtime="20201115 23:00:15.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.679" endtime="20201115 23:00:15.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.675" endtime="20201115 23:00:15.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.303" endtime="20201115 23:00:15.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.301" endtime="20201115 23:00:15.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.300" endtime="20201115 23:00:15.702"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.704" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.712" endtime="20201115 23:00:15.731"></status>
</kw>
<msg timestamp="20201115 23:00:15.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.711" endtime="20201115 23:00:15.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.733" endtime="20201115 23:00:15.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.735" endtime="20201115 23:00:15.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.708" endtime="20201115 23:00:15.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.706" endtime="20201115 23:00:15.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.744" endtime="20201115 23:00:16.030"></status>
</kw>
<msg timestamp="20201115 23:00:16.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023458083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023567069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.743" endtime="20201115 23:00:16.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023458083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023567069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.034" endtime="20201115 23:00:16.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.042" endtime="20201115 23:00:16.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.740" endtime="20201115 23:00:16.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.739" endtime="20201115 23:00:16.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.048" level="INFO">${RESULT} = [{'time': 0.023567069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010898599999999842, 'source_diff': 0.00010898599999999842}, {'time': 0.023713431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:16.045" endtime="20201115 23:00:16.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.061" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:16.049" endtime="20201115 23:00:16.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.066" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.065" endtime="20201115 23:00:16.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.068" level="INFO">VALUE: [0.00010898599999999842, 0.0001076950000000014, 0.0001078889999999999, 0.00010822200000000157, 0.00010813900000000015, 0.000108208000000002, 0.00010759699999999747, 0.00010784700000000119, 0.00010815299999999972, 0.00010783300000000162, 0.00010765299999999922, 0.00010811099999999754, 0.0001080699999999983, 0.00010779200000000239, 0.00010797200000000132, 0.00010834699999999822, 0.0001077219999999976, 0.00010818099999999886, 0.0001075699999999978, 0.00010822300000000104, 0.0001080690000000023, 0.00010792999999999914, 0.00010786100000000076, 0.00010827700000000037, 0.00010832000000000203, 0.00010791699999999904, 0.00010840299999999997, 0.000108208000000002, 0.00010816599999999982, 0.00010823599999999767, 0.0001080279999999996, 0.00010790299999999947, 0.00010790299999999947, 0.00010819399999999896, 0.00010833299999999865, 0.00010766700000000226, 0.00010762500000000008, 0.00010790299999999947, 0.00010790299999999947, 0.00010845799999999878, 0.00010755599999999824, 0.00010829099999999994, 0.00010852700000000062, 0.00010822200000000157, 0.00010798600000000089, 0.00010758400000000085, 0.00010791599999999957, 0.00010847300000000129, 0.000108208999999998, 0.00010817999999999939]</msg>
<status status="PASS" starttime="20201115 23:00:16.067" endtime="20201115 23:00:16.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.062" endtime="20201115 23:00:16.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.071" endtime="20201115 23:00:16.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.075" endtime="20201115 23:00:16.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.073" endtime="20201115 23:00:16.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.070" endtime="20201115 23:00:16.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.705" endtime="20201115 23:00:16.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.703" endtime="20201115 23:00:16.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.702" endtime="20201115 23:00:16.096"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.098" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.106" endtime="20201115 23:00:16.126"></status>
</kw>
<msg timestamp="20201115 23:00:16.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.105" endtime="20201115 23:00:16.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.127" endtime="20201115 23:00:16.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.130" endtime="20201115 23:00:16.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.102" endtime="20201115 23:00:16.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.100" endtime="20201115 23:00:16.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.139" endtime="20201115 23:00:16.424"></status>
</kw>
<msg timestamp="20201115 23:00:16.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023474486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023584556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.137" endtime="20201115 23:00:16.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023474486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023584556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.428" endtime="20201115 23:00:16.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.436" endtime="20201115 23:00:16.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.134" endtime="20201115 23:00:16.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.133" endtime="20201115 23:00:16.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.443" level="INFO">${RESULT} = [{'time': 0.023584556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001100700000000003, 'source_diff': 0.0001100700000000003}, {'time': 0.023736875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:16.439" endtime="20201115 23:00:16.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.456" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:16.444" endtime="20201115 23:00:16.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.460" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.459" endtime="20201115 23:00:16.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.463" level="INFO">VALUE: [0.0001100700000000003, 0.0001093890000000014, 0.00010933299999999965, 0.00010930599999999999, 0.00010883299999999915, 0.00010859700000000194, 0.00010952700000000162, 0.00010931900000000008, 0.00010938899999999793, 0.000108902000000001, 0.00010927800000000085, 0.00010929100000000094, 0.00010917999999999692, 0.00010895799999999928, 0.00010916600000000082, 0.00010859699999999847, 0.00010869499999999893, 0.00010869499999999893, 0.00010895800000000275, 0.00010947199999999935, 0.00010926400000000128, 0.00010929200000000042, 0.00010867999999999989, 0.00010863900000000065, 0.00010944500000000315, 0.00010904200000000017, 0.00010909700000000244, 0.0001087219999999986, 0.0001094159999999976, 0.00010872200000000207, 0.00010890300000000047, 0.00010911100000000201, 0.00010934699999999922, 0.00010911199999999802, 0.00010867999999999989, 0.00010937500000000183, 0.0001095280000000011, 0.0001090829999999994, 0.00010891700000000004, 0.00010879199999999992, 0.00010876399999999731, 0.00010866600000000032, 0.00010890300000000047, 0.0001092219999999991, 0.00010906899999999983, 0.0001092219999999991, 0.00010929200000000042, 0.00010919499999999943, 0.0001087630000000013, 0.00010951400000000153]</msg>
<status status="PASS" starttime="20201115 23:00:16.461" endtime="20201115 23:00:16.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.457" endtime="20201115 23:00:16.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.466" endtime="20201115 23:00:16.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.470" endtime="20201115 23:00:16.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.468" endtime="20201115 23:00:16.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.464" endtime="20201115 23:00:16.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.099" endtime="20201115 23:00:16.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.097" endtime="20201115 23:00:16.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.096" endtime="20201115 23:00:16.491"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.493" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.501" endtime="20201115 23:00:16.520"></status>
</kw>
<msg timestamp="20201115 23:00:16.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.500" endtime="20201115 23:00:16.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.522" endtime="20201115 23:00:16.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.524" endtime="20201115 23:00:16.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.497" endtime="20201115 23:00:16.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.495" endtime="20201115 23:00:16.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.533" endtime="20201115 23:00:16.819"></status>
</kw>
<msg timestamp="20201115 23:00:16.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023421097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023531722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.532" endtime="20201115 23:00:16.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023421097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023531722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.823" endtime="20201115 23:00:16.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.831" endtime="20201115 23:00:16.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.529" endtime="20201115 23:00:16.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.528" endtime="20201115 23:00:16.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.838" level="INFO">${RESULT} = [{'time': 0.023531722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011062500000000308, 'source_diff': 0.00011062500000000308}, {'time': 0.023688097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:16.834" endtime="20201115 23:00:16.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.851" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:16.839" endtime="20201115 23:00:16.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.855" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.854" endtime="20201115 23:00:16.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.858" level="INFO">VALUE: [0.00011062500000000308, 0.00010975000000000221, 0.00010961099999999904, 0.00011009699999999997, 0.00010970800000000003, 0.00011048599999999992, 0.00011015300000000172, 0.00011044399999999774, 0.00010973600000000264, 0.00011030600000000099, 0.00011002799999999813, 0.00010976399999999831, 0.00011019400000000096, 0.00010959699999999947, 0.00011052799999999863, 0.000110209, 0.00011051400000000253, 0.0001095699999999998, 0.00011015299999999825, 0.00010966700000000079, 0.00010984699999999972, 0.00011009699999999997, 0.00011015200000000225, 0.00010988899999999843, 0.00011032000000000056, 0.00010956900000000033, 0.00010976400000000178, 0.0001102220000000001, 0.00010962499999999861, 0.00010992999999999767, 0.00011054099999999872, 0.00010965199999999828, 0.00011036100000000326, 0.00010997199999999985, 0.00010970800000000003, 0.00010977800000000135, 0.0001102220000000001, 0.00010991700000000104, 0.00010966600000000132, 0.00010968000000000089, 0.0001100280000000016, 0.0001105700000000008, 0.00010977799999999788, 0.00011011099999999954, 0.00011029200000000142, 0.00010979099999999797, 0.00011047299999999982, 0.00011036099999999979, 0.00010965300000000122, 0.00011013900000000215]</msg>
<status status="PASS" starttime="20201115 23:00:16.857" endtime="20201115 23:00:16.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.852" endtime="20201115 23:00:16.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.861" endtime="20201115 23:00:16.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.864" endtime="20201115 23:00:16.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.863" endtime="20201115 23:00:16.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.859" endtime="20201115 23:00:16.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.494" endtime="20201115 23:00:16.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.492" endtime="20201115 23:00:16.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.491" endtime="20201115 23:00:16.885"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.888" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.896" endtime="20201115 23:00:16.916"></status>
</kw>
<msg timestamp="20201115 23:00:16.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.894" endtime="20201115 23:00:16.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.917" endtime="20201115 23:00:16.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.920" endtime="20201115 23:00:16.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.892" endtime="20201115 23:00:16.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.890" endtime="20201115 23:00:16.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.929" endtime="20201115 23:00:17.216"></status>
</kw>
<msg timestamp="20201115 23:00:17.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024371014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024483542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.927" endtime="20201115 23:00:17.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024371014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024483542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.220" endtime="20201115 23:00:17.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.228" endtime="20201115 23:00:17.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.925" endtime="20201115 23:00:17.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.923" endtime="20201115 23:00:17.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.235" level="INFO">${RESULT} = [{'time': 0.024483542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011252800000000063, 'source_diff': 0.00011252800000000063}, {'time': 0.024633889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:17.232" endtime="20201115 23:00:17.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.249" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:17.236" endtime="20201115 23:00:17.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.253" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.252" endtime="20201115 23:00:17.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.256" level="INFO">VALUE: [0.00011252800000000063, 0.00011120799999999806, 0.00011077799999999888, 0.00011087499999999986, 0.00011120899999999753, 0.00011113899999999968, 0.0001114029999999995, 0.00011072199999999713, 0.00011152799999999963, 0.00011059799999999995, 0.00011063900000000265, 0.00011063799999999971, 0.00011070800000000103, 0.00011097200000000085, 0.00011108299999999793, 0.00011076399999999931, 0.00011102799999999913, 0.00011152799999999963, 0.00011143099999999864, 0.00011120799999999806, 0.00011076399999999931, 0.00011061100000000004, 0.00011076399999999931, 0.00011070800000000103, 0.00011061199999999952, 0.0001112229999999971, 0.00011070799999999756, 0.00011063799999999971, 0.00011067999999999842, 0.00011101400000000303, 0.00011059700000000047, 0.00011133300000000165, 0.00011119500000000143, 0.00011115299999999925, 0.00011133300000000165, 0.00011059700000000047, 0.00011106900000000183, 0.00011102799999999913, 0.00011059700000000047, 0.00011097200000000085, 0.00011105599999999827, 0.00011095799999999781, 0.00011063900000000265, 0.00011090300000000247, 0.00011119400000000196, 0.00011097200000000085, 0.0001107090000000005, 0.00011140300000000297, 0.00011107000000000478, 0.00011133399999999766]</msg>
<status status="PASS" starttime="20201115 23:00:17.255" endtime="20201115 23:00:17.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.250" endtime="20201115 23:00:17.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.259" endtime="20201115 23:00:17.260"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.262" endtime="20201115 23:00:17.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.261" endtime="20201115 23:00:17.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.257" endtime="20201115 23:00:17.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.888" endtime="20201115 23:00:17.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.887" endtime="20201115 23:00:17.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.886" endtime="20201115 23:00:17.283"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.286" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.294" endtime="20201115 23:00:17.313"></status>
</kw>
<msg timestamp="20201115 23:00:17.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.293" endtime="20201115 23:00:17.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.315" endtime="20201115 23:00:17.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.318" endtime="20201115 23:00:17.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.290" endtime="20201115 23:00:17.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.288" endtime="20201115 23:00:17.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.327" endtime="20201115 23:00:17.612"></status>
</kw>
<msg timestamp="20201115 23:00:17.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023765917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023878819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.325" endtime="20201115 23:00:17.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023765917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023878819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.616" endtime="20201115 23:00:17.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.624" endtime="20201115 23:00:17.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.322" endtime="20201115 23:00:17.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.321" endtime="20201115 23:00:17.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.630" level="INFO">${RESULT} = [{'time': 0.023878819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011290199999999806, 'source_diff': 0.00011290199999999806}, {'time': 0.024038111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:17.627" endtime="20201115 23:00:17.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.643" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:17.631" endtime="20201115 23:00:17.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.648" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.647" endtime="20201115 23:00:17.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.650" level="INFO">VALUE: [0.00011290199999999806, 0.0001120830000000024, 0.00011177799999999988, 0.0001120969999999985, 0.00011183400000000163, 0.0001120830000000024, 0.00011220800000000253, 0.00011245799999999931, 0.00011172199999999813, 0.00011241700000000007, 0.00011194399999999924, 0.00011227799999999691, 0.00011152799999999963, 0.00011159700000000147, 0.00011163900000000018, 0.0001120549999999998, 0.00011243000000000017, 0.00011256999999999934, 0.0001122220000000021, 0.00011226400000000081, 0.0001115830000000019, 0.00011244399999999974, 0.00011170800000000203, 0.00011217999999999992, 0.00011226300000000133, 0.00011220899999999853, 0.00011213800000000121, 0.00011216699999999982, 0.00011183399999999816, 0.00011215300000000025, 0.00011195799999999881, 0.00011238899999999746, 0.00011162500000000061, 0.00011170899999999803, 0.00011226400000000081, 0.00011236200000000127, 0.00011168099999999889, 0.00011227800000000038, 0.00011227800000000038, 0.00011173600000000117, 0.00011220799999999906, 0.00011194400000000271, 0.000111903, 0.00011215300000000025, 0.00011183300000000215, 0.00011247199999999888, 0.00011213800000000121, 0.00011186100000000129, 0.00011206999999999537, 0.00011163900000000365]</msg>
<status status="PASS" starttime="20201115 23:00:17.649" endtime="20201115 23:00:17.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.644" endtime="20201115 23:00:17.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.653" endtime="20201115 23:00:17.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.657" endtime="20201115 23:00:17.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.655" endtime="20201115 23:00:17.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.652" endtime="20201115 23:00:17.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.286" endtime="20201115 23:00:17.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.285" endtime="20201115 23:00:17.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.284" endtime="20201115 23:00:17.678"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.680" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.688" endtime="20201115 23:00:17.708"></status>
</kw>
<msg timestamp="20201115 23:00:17.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.687" endtime="20201115 23:00:17.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.709" endtime="20201115 23:00:17.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.712" endtime="20201115 23:00:17.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.684" endtime="20201115 23:00:17.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.682" endtime="20201115 23:00:17.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.721" endtime="20201115 23:00:18.006"></status>
</kw>
<msg timestamp="20201115 23:00:18.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023521181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023635125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.720" endtime="20201115 23:00:18.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023521181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023635125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.010" endtime="20201115 23:00:18.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.018" endtime="20201115 23:00:18.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.717" endtime="20201115 23:00:18.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.715" endtime="20201115 23:00:18.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.025" level="INFO">${RESULT} = [{'time': 0.023635125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011394400000000124, 'source_diff': 0.00011394400000000124}, {'time': 0.023791403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:18.021" endtime="20201115 23:00:18.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.038" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:18.026" endtime="20201115 23:00:18.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.043" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.042" endtime="20201115 23:00:18.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.045" level="INFO">VALUE: [0.00011394400000000124, 0.00011324999999999877, 0.00011298599999999895, 0.00011313900000000168, 0.00011269399999999999, 0.00011343100000000064, 0.0001133749999999989, 0.00011298699999999842, 0.00011337500000000236, 0.00011280600000000002, 0.00011312500000000211, 0.00011319400000000049, 0.00011332000000000009, 0.00011280600000000002, 0.00011268000000000042, 0.00011256899999999986, 0.00011316700000000082, 0.00011294400000000024, 0.00011324999999999877, 0.00011341700000000107, 0.00011280600000000002, 0.00011341599999999813, 0.00011293000000000067, 0.00011343099999999717, 0.00011306999999999984, 0.0001127359999999987, 0.0001125550000000003, 0.00011325000000000224, 0.0001125700000000028, 0.00011300000000000199, 0.00011312500000000211, 0.00011304100000000122, 0.00011293000000000067, 0.00011294400000000024, 0.00011343100000000064, 0.00011294499999999971, 0.00011287500000000186, 0.00011299999999999852, 0.00011330600000000052, 0.00011330499999999757, 0.00011337500000000236, 0.00011270899999999903, 0.00011306999999999984, 0.00011287500000000186, 0.00011351400000000206, 0.00011274999999999827, 0.00011341700000000107, 0.00011329200000000095, 0.00011288899999999796, 0.00011280499999999707]</msg>
<status status="PASS" starttime="20201115 23:00:18.044" endtime="20201115 23:00:18.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.039" endtime="20201115 23:00:18.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.048" endtime="20201115 23:00:18.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.052" endtime="20201115 23:00:18.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.050" endtime="20201115 23:00:18.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.047" endtime="20201115 23:00:18.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.681" endtime="20201115 23:00:18.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.679" endtime="20201115 23:00:18.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.678" endtime="20201115 23:00:18.073"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.075" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.084" endtime="20201115 23:00:18.103"></status>
</kw>
<msg timestamp="20201115 23:00:18.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.082" endtime="20201115 23:00:18.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.105" endtime="20201115 23:00:18.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.107" endtime="20201115 23:00:18.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.080" endtime="20201115 23:00:18.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.077" endtime="20201115 23:00:18.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.116" endtime="20201115 23:00:18.403"></status>
</kw>
<msg timestamp="20201115 23:00:18.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023951028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024065764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.115" endtime="20201115 23:00:18.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023951028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024065764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.407" endtime="20201115 23:00:18.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.415" endtime="20201115 23:00:18.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.112" endtime="20201115 23:00:18.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.110" endtime="20201115 23:00:18.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.421" level="INFO">${RESULT} = [{'time': 0.024065764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001147360000000007, 'source_diff': 0.0001147360000000007}, {'time': 0.024228056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:18.418" endtime="20201115 23:00:18.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.434" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:18.422" endtime="20201115 23:00:18.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.439" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.438" endtime="20201115 23:00:18.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.441" level="INFO">VALUE: [0.0001147360000000007, 0.00011380600000000102, 0.00011355600000000077, 0.00011452799999999916, 0.00011361099999999957, 0.00011370900000000003, 0.00011393099999999767, 0.00011415299999999878, 0.00011379200000000145, 0.00011368100000000089, 0.00011399999999999952, 0.00011424999999999977, 0.00011436100000000032, 0.0001139299999999982, 0.00011356900000000086, 0.00011362500000000261, 0.00011366700000000132, 0.000114290999999999, 0.00011438899999999946, 0.00011386099999999982, 0.00011390299999999853, 0.00011423599999999673, 0.00011441700000000207, 0.00011362500000000261, 0.00011376400000000231, 0.00011418100000000139, 0.00011451399999999959, 0.00011432000000000109, 0.00011355600000000077, 0.00011391700000000157, 0.00011434700000000075, 0.00011426399999999934, 0.00011388899999999896, 0.00011374999999999927, 0.00011450000000000002, 0.00011419500000000096, 0.00011404199999999823, 0.00011363899999999871, 0.00011383300000000068, 0.00011424999999999977, 0.00011399999999999952, 0.00011370800000000056, 0.00011366600000000185, 0.00011374999999999927, 0.00011386099999999982, 0.00011427799999999891, 0.0001144160000000026, 0.00011376400000000231, 0.00011412500000000658, 0.00011408300000000093]</msg>
<status status="PASS" starttime="20201115 23:00:18.440" endtime="20201115 23:00:18.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.435" endtime="20201115 23:00:18.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.444" endtime="20201115 23:00:18.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.448" endtime="20201115 23:00:18.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.446" endtime="20201115 23:00:18.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.443" endtime="20201115 23:00:18.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.076" endtime="20201115 23:00:18.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.074" endtime="20201115 23:00:18.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.073" endtime="20201115 23:00:18.470"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.472" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.480" endtime="20201115 23:00:18.500"></status>
</kw>
<msg timestamp="20201115 23:00:18.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.478" endtime="20201115 23:00:18.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.502" endtime="20201115 23:00:18.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.504" endtime="20201115 23:00:18.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.476" endtime="20201115 23:00:18.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.474" endtime="20201115 23:00:18.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.513" endtime="20201115 23:00:18.798"></status>
</kw>
<msg timestamp="20201115 23:00:18.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02439025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024506528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:18.512" endtime="20201115 23:00:18.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02439025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024506528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:18.802" endtime="20201115 23:00:18.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.810" endtime="20201115 23:00:18.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.509" endtime="20201115 23:00:18.813"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.507" endtime="20201115 23:00:18.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.817" level="INFO">${RESULT} = [{'time': 0.024506528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011627800000000091, 'source_diff': 0.00011627800000000091}, {'time': 0.024665792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:18.814" endtime="20201115 23:00:18.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.831" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:18.818" endtime="20201115 23:00:18.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.836" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.835" endtime="20201115 23:00:18.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.838" level="INFO">VALUE: [0.00011627800000000091, 0.00011518099999999892, 0.00011463899999999971, 0.00011538900000000046, 0.00011522200000000163, 0.00011480499999999907, 0.00011497200000000138, 0.00011534699999999828, 0.00011499999999999705, 0.0001148750000000004, 0.00011461200000000005, 0.00011479199999999898, 0.00011466699999999885, 0.00011500000000000052, 0.00011518000000000292, 0.0001153750000000009, 0.00011544399999999927, 0.00011475000000000027, 0.00011533399999999819, 0.00011550000000000102, 0.00011512500000000064, 0.00011479200000000245, 0.00011475000000000027, 0.00011463899999999971, 0.00011511100000000107, 0.00011463900000000318, 0.00011480600000000202, 0.0001148750000000004, 0.00011476399999999984, 0.00011526400000000034, 0.00011533299999999871, 0.00011468000000000242, 0.00011511100000000107, 0.00011523599999999773, 0.00011505600000000227, 0.00011512500000000064, 0.00011488899999999996, 0.00011511100000000107, 0.00011545799999999884, 0.00011555499999999982, 0.00011520900000000153, 0.00011543099999999917, 0.0001147360000000007, 0.00011541700000000307, 0.0001153049999999961, 0.0001150420000000027, 0.00011530600000000252, 0.00011517999999999945, 0.00011511100000000107, 0.0001154169999999996]</msg>
<status status="PASS" starttime="20201115 23:00:18.837" endtime="20201115 23:00:18.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.832" endtime="20201115 23:00:18.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.842" endtime="20201115 23:00:18.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.845" endtime="20201115 23:00:18.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.844" endtime="20201115 23:00:18.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.840" endtime="20201115 23:00:18.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.472" endtime="20201115 23:00:18.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.471" endtime="20201115 23:00:18.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.470" endtime="20201115 23:00:18.866"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.869" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.876" endtime="20201115 23:00:18.896"></status>
</kw>
<msg timestamp="20201115 23:00:18.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.875" endtime="20201115 23:00:18.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.898" endtime="20201115 23:00:18.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.900" endtime="20201115 23:00:18.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.872" endtime="20201115 23:00:18.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.870" endtime="20201115 23:00:18.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.909" endtime="20201115 23:00:19.195"></status>
</kw>
<msg timestamp="20201115 23:00:19.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023477708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023595014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.908" endtime="20201115 23:00:19.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023477708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023595014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.200" endtime="20201115 23:00:19.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.208" endtime="20201115 23:00:19.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.905" endtime="20201115 23:00:19.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.903" endtime="20201115 23:00:19.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.214" level="INFO">${RESULT} = [{'time': 0.023595014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011730600000000105, 'source_diff': 0.00011730600000000105}, {'time': 0.02376225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:19.211" endtime="20201115 23:00:19.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.227" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:19.215" endtime="20201115 23:00:19.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.231" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.230" endtime="20201115 23:00:19.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.234" level="INFO">VALUE: [0.00011730600000000105, 0.00011597199999999891, 0.00011623599999999873, 0.00011561100000000157, 0.00011636099999999885, 0.00011584800000000173, 0.0001155420000000032, 0.00011554100000000025, 0.0001155420000000032, 0.00011595799999999934, 0.00011572200000000213, 0.00011577800000000041, 0.00011600000000000152, 0.00011616700000000035, 0.00011611100000000207, 0.00011570900000000203, 0.00011594499999999924, 0.00011587499999999792, 0.00011569399999999952, 0.0001155689999999994, 0.00011562500000000114, 0.00011645899999999931, 0.00011629200000000048, 0.00011576400000000084, 0.00011613900000000121, 0.00011601299999999815, 0.0001158750000000014, 0.00011573599999999823, 0.0001161109999999986, 0.00011580599999999955, 0.0001156109999999981, 0.00011558299999999896, 0.00011559799999999801, 0.00011616700000000035, 0.00011612500000000164, 0.00011555499999999982, 0.00011579099999999704, 0.00011555499999999982, 0.00011636100000000232, 0.00011554100000000025, 0.00011602800000000066, 0.00011581999999999912, 0.00011648599999999898, 0.00011641600000000113, 0.00011555499999999982, 0.0001162499999999983, 0.00011554199999999973, 0.0001161109999999986, 0.0001162360000000022, 0.0001161249999999947]</msg>
<status status="PASS" starttime="20201115 23:00:19.233" endtime="20201115 23:00:19.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.228" endtime="20201115 23:00:19.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.237" endtime="20201115 23:00:19.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.241" endtime="20201115 23:00:19.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.239" endtime="20201115 23:00:19.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.236" endtime="20201115 23:00:19.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.869" endtime="20201115 23:00:19.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.867" endtime="20201115 23:00:19.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.866" endtime="20201115 23:00:19.262"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.264" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.272" endtime="20201115 23:00:19.292"></status>
</kw>
<msg timestamp="20201115 23:00:19.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.271" endtime="20201115 23:00:19.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.294" endtime="20201115 23:00:19.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.296" endtime="20201115 23:00:19.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.268" endtime="20201115 23:00:19.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.266" endtime="20201115 23:00:19.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.305" endtime="20201115 23:00:19.591"></status>
</kw>
<msg timestamp="20201115 23:00:19.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023483167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0236015, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:19.303" endtime="20201115 23:00:19.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023483167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0236015, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:19.595" endtime="20201115 23:00:19.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.603" endtime="20201115 23:00:19.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.301" endtime="20201115 23:00:19.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.299" endtime="20201115 23:00:19.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.609" level="INFO">${RESULT} = [{'time': 0.0236015, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011833300000000171, 'source_diff': 0.00011833300000000171}, {'time': 0.023768736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:19.606" endtime="20201115 23:00:19.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.623" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:19.611" endtime="20201115 23:00:19.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.627" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.626" endtime="20201115 23:00:19.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.630" level="INFO">VALUE: [0.00011833300000000171, 0.00011677799999999794, 0.00011715199999999884, 0.0001172499999999993, 0.00011715200000000231, 0.00011733300000000071, 0.00011723599999999973, 0.00011684699999999978, 0.00011747299999999988, 0.00011665300000000128, 0.00011684800000000273, 0.00011702799999999819, 0.00011702799999999819, 0.00011734700000000028, 0.00011740299999999856, 0.00011715199999999884, 0.00011670900000000303, 0.00011670800000000009, 0.00011734700000000028, 0.00011736099999999985, 0.00011672199999999966, 0.0001170690000000009, 0.00011699999999999905, 0.00011745800000000084, 0.00011704199999999776, 0.0001173049999999981, 0.00011659699999999953, 0.0001165560000000003, 0.00011695899999999981, 0.0001167360000000027, 0.00011665300000000128, 0.00011738900000000246, 0.00011677800000000141, 0.00011734700000000028, 0.00011659699999999953, 0.00011709700000000003, 0.00011723599999999973, 0.00011715299999999831, 0.00011711100000000307, 0.00011709700000000003, 0.00011709700000000003, 0.00011734699999999681, 0.00011727799999999844, 0.00011732000000000062, 0.00011686099999999935, 0.00011716700000000135, 0.00011734799999999976, 0.00011704200000000123, 0.00011723599999999973, 0.00011666699999999391]</msg>
<status status="PASS" starttime="20201115 23:00:19.628" endtime="20201115 23:00:19.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.624" endtime="20201115 23:00:19.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.633" endtime="20201115 23:00:19.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.636" endtime="20201115 23:00:19.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.635" endtime="20201115 23:00:19.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.631" endtime="20201115 23:00:19.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.265" endtime="20201115 23:00:19.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.263" endtime="20201115 23:00:19.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.262" endtime="20201115 23:00:19.657"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.660" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.668" endtime="20201115 23:00:19.687"></status>
</kw>
<msg timestamp="20201115 23:00:19.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.666" endtime="20201115 23:00:19.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.689" endtime="20201115 23:00:19.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.691" endtime="20201115 23:00:19.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.664" endtime="20201115 23:00:19.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.662" endtime="20201115 23:00:19.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.700" endtime="20201115 23:00:19.985"></status>
</kw>
<msg timestamp="20201115 23:00:19.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023562403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023681333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.699" endtime="20201115 23:00:19.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023562403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023681333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.989" endtime="20201115 23:00:19.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.997" endtime="20201115 23:00:19.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.696" endtime="20201115 23:00:20.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.695" endtime="20201115 23:00:20.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.004" level="INFO">${RESULT} = [{'time': 0.023681333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011892999999999973, 'source_diff': 0.00011892999999999973}, {'time': 0.023844625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:20.001" endtime="20201115 23:00:20.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.017" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:20.005" endtime="20201115 23:00:20.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.022" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.021" endtime="20201115 23:00:20.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.024" level="INFO">VALUE: [0.00011892999999999973, 0.00011773600000000023, 0.0001177499999999998, 0.00011784700000000078, 0.00011781899999999818, 0.00011813899999999974, 0.00011817999999999898, 0.00011801399999999962, 0.00011816700000000235, 0.00011780500000000207, 0.00011850000000000055, 0.0001180560000000018, 0.00011812500000000017, 0.00011800000000000005, 0.00011836100000000085, 0.00011837500000000042, 0.00011770900000000056, 0.00011836099999999738, 0.00011819399999999855, 0.0001179439999999983, 0.0001184309999999987, 0.00011777700000000293, 0.00011808300000000146, 0.0001177499999999998, 0.0001180699999999979, 0.00011833399999999772, 0.00011768100000000142, 0.00011782000000000112, 0.00011844400000000227, 0.00011812500000000017, 0.00011831900000000214, 0.00011848599999999751, 0.00011762499999999967, 0.00011845900000000131, 0.00011780500000000207, 0.00011817999999999898, 0.00011813899999999974, 0.0001178889999999995, 0.00011755499999999836, 0.00011795799999999787, 0.00011763799999999977, 0.0001177499999999998, 0.00011805500000000232, 0.0001181110000000006, 0.0001177499999999998, 0.00011766700000000185, 0.00011763899999999924, 0.00011798600000000048, 0.00011840300000000303, 0.0001182500000000003]</msg>
<status status="PASS" starttime="20201115 23:00:20.023" endtime="20201115 23:00:20.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.018" endtime="20201115 23:00:20.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.027" endtime="20201115 23:00:20.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.030" endtime="20201115 23:00:20.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.029" endtime="20201115 23:00:20.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.025" endtime="20201115 23:00:20.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.660" endtime="20201115 23:00:20.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.659" endtime="20201115 23:00:20.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.658" endtime="20201115 23:00:20.052"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.054" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.063" endtime="20201115 23:00:20.084"></status>
</kw>
<msg timestamp="20201115 23:00:20.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.061" endtime="20201115 23:00:20.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.085" endtime="20201115 23:00:20.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.088" endtime="20201115 23:00:20.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.059" endtime="20201115 23:00:20.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.056" endtime="20201115 23:00:20.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.097" endtime="20201115 23:00:20.383"></status>
</kw>
<msg timestamp="20201115 23:00:20.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025688097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025808361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.095" endtime="20201115 23:00:20.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025688097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025808361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.387" endtime="20201115 23:00:20.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.395" endtime="20201115 23:00:20.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.093" endtime="20201115 23:00:20.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.091" endtime="20201115 23:00:20.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.402" level="INFO">${RESULT} = [{'time': 0.025808361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001202639999999984, 'source_diff': 0.0001202639999999984}, {'time': 0.025965667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:20.398" endtime="20201115 23:00:20.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.416" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:20.403" endtime="20201115 23:00:20.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.420" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.419" endtime="20201115 23:00:20.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.423" level="INFO">VALUE: [0.0001202639999999984, 0.00011932000000000262, 0.00011908399999999847, 0.00011865299999999981, 0.00011876400000000037, 0.00011954200000000026, 0.00011937499999999795, 0.0001191950000000025, 0.00011919399999999955, 0.00011877700000000047, 0.0001194439999999998, 0.00011950000000000155, 0.0001188049999999996, 0.00011872299999999766, 0.00011916699999999988, 0.00011857000000000187, 0.0001187500000000008, 0.0001186249999999972, 0.00011922199999999869, 0.00011908399999999847, 0.000119082999999999, 0.00011868099999999895, 0.00011905599999999933, 0.00011891600000000016, 0.00011904199999999976, 0.00011905599999999933, 0.00011887500000000092, 0.000118695000000002, 0.0001190699999999989, 0.00011951400000000112, 0.0001187500000000008, 0.0001187500000000008, 0.00011893100000000267, 0.00011901399999999715, 0.00011926400000000434, 0.00011866599999999644, 0.00011902800000000019, 0.00011943100000000317, 0.00011870800000000209, 0.0001190699999999989, 0.00011904199999999976, 0.00011868000000000295, 0.00011855499999999936, 0.00011950000000000155, 0.00011911099999999814, 0.0001187500000000008, 0.00011945800000000284, 0.00011884699999999832, 0.00011950000000000155, 0.00011883299999999875]</msg>
<status status="PASS" starttime="20201115 23:00:20.421" endtime="20201115 23:00:20.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.417" endtime="20201115 23:00:20.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.426" endtime="20201115 23:00:20.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.429" endtime="20201115 23:00:20.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.428" endtime="20201115 23:00:20.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.424" endtime="20201115 23:00:20.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.055" endtime="20201115 23:00:20.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.053" endtime="20201115 23:00:20.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.052" endtime="20201115 23:00:20.450"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.453" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.461" endtime="20201115 23:00:20.480"></status>
</kw>
<msg timestamp="20201115 23:00:20.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.459" endtime="20201115 23:00:20.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.482" endtime="20201115 23:00:20.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.490" endtime="20201115 23:00:20.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.457" endtime="20201115 23:00:20.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.455" endtime="20201115 23:00:20.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.499" endtime="20201115 23:00:20.785"></status>
</kw>
<msg timestamp="20201115 23:00:20.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02347925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023600694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:20.498" endtime="20201115 23:00:20.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02347925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023600694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:20.789" endtime="20201115 23:00:20.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.797" endtime="20201115 23:00:20.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.495" endtime="20201115 23:00:20.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.493" endtime="20201115 23:00:20.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.803" level="INFO">${RESULT} = [{'time': 0.023600694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012144399999999833, 'source_diff': 0.00012144399999999833}, {'time': 0.023756014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:20.800" endtime="20201115 23:00:20.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.816" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:20.804" endtime="20201115 23:00:20.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.821" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.820" endtime="20201115 23:00:20.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.823" level="INFO">VALUE: [0.00012144399999999833, 0.0001200699999999999, 0.00012037499999999896, 0.00012029200000000101, 0.00012023599999999926, 0.00012033300000000025, 0.00011998600000000248, 0.00012044399999999733, 0.00011986100000000235, 0.0001196249999999982, 0.000120083, 0.00012032000000000015, 0.00012005600000000033, 0.00012002799999999772, 0.00012036099999999939, 0.00012018000000000098, 0.00011993000000000073, 0.00011986099999999889, 0.00011973599999999876, 0.00011998600000000248, 0.00012016600000000141, 0.00011999999999999858, 0.00012005600000000033, 0.00012018100000000045, 0.00012051399999999865, 0.00012023599999999926, 0.00012033300000000025, 0.000120083, 0.00012048599999999951, 0.00012023599999999926, 0.00012006899999999696, 0.00012029199999999754, 0.00011966700000000038, 0.00011983299999999975, 0.00011998599999999901, 0.0001202500000000023, 0.0001204440000000008, 0.00012005600000000033, 0.00012031900000000068, 0.00012005600000000033, 0.00011955599999999983, 0.00012055500000000136, 0.00011991700000000063, 0.00011954100000000079, 0.00011963899999999777, 0.00012016700000000088, 0.00011995799999999987, 0.000120083999999996, 0.00011999999999999511, 0.00011970900000000256]</msg>
<status status="PASS" starttime="20201115 23:00:20.822" endtime="20201115 23:00:20.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.817" endtime="20201115 23:00:20.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.826" endtime="20201115 23:00:20.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.830" endtime="20201115 23:00:20.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.828" endtime="20201115 23:00:20.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.825" endtime="20201115 23:00:20.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.453" endtime="20201115 23:00:20.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.451" endtime="20201115 23:00:20.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.451" endtime="20201115 23:00:20.851"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.853" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.862" endtime="20201115 23:00:20.882"></status>
</kw>
<msg timestamp="20201115 23:00:20.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.860" endtime="20201115 23:00:20.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.883" endtime="20201115 23:00:20.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.886" endtime="20201115 23:00:20.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.858" endtime="20201115 23:00:20.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.855" endtime="20201115 23:00:20.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.895" endtime="20201115 23:00:21.181"></status>
</kw>
<msg timestamp="20201115 23:00:21.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023956597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024078264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.893" endtime="20201115 23:00:21.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023956597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024078264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.185" endtime="20201115 23:00:21.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.193" endtime="20201115 23:00:21.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.891" endtime="20201115 23:00:21.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.889" endtime="20201115 23:00:21.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.199" level="INFO">${RESULT} = [{'time': 0.024078264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012166699999999891, 'source_diff': 0.00012166699999999891}, {'time': 0.024239528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:21.196" endtime="20201115 23:00:21.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.212" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:21.200" endtime="20201115 23:00:21.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.217" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.216" endtime="20201115 23:00:21.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.219" level="INFO">VALUE: [0.00012166699999999891, 0.00012055600000000083, 0.00012124999999999983, 0.00012134699999999735, 0.00012097299999999991, 0.00012074999999999933, 0.00012136100000000039, 0.0001208890000000025, 0.00012106900000000143, 0.00012105500000000186, 0.0001210969999999971, 0.00012119399999999808, 0.000121083000000001, 0.00012109800000000004, 0.00012066700000000138, 0.00012102799999999872, 0.00012072200000000019, 0.00012079100000000204, 0.00012141699999999866, 0.00012108400000000047, 0.00012111100000000014, 0.00012086099999999989, 0.00012065300000000181, 0.00012104099999999882, 0.00012084799999999979, 0.00012072199999999672, 0.00012101399999999915, 0.00012147300000000041, 0.00012129199999999854, 0.00012068000000000148, 0.00012116699999999841, 0.00012066699999999791, 0.00012083300000000075, 0.00012111100000000014, 0.00012065300000000181, 0.00012052700000000222, 0.00012091699999999816, 0.00012097200000000044, 0.00012127799999999897, 0.00012066700000000138, 0.00012072200000000019, 0.00012054099999999832, 0.00012106899999999796, 0.0001212370000000032, 0.00012059700000000007, 0.00012063899999999877, 0.00012084700000000032, 0.00012072200000000366, 0.00012055600000000083, 0.00012098599999999654]</msg>
<status status="PASS" starttime="20201115 23:00:21.218" endtime="20201115 23:00:21.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.213" endtime="20201115 23:00:21.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.222" endtime="20201115 23:00:21.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.226" endtime="20201115 23:00:21.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.224" endtime="20201115 23:00:21.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.221" endtime="20201115 23:00:21.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.854" endtime="20201115 23:00:21.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.852" endtime="20201115 23:00:21.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.851" endtime="20201115 23:00:21.247"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.250" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.258" endtime="20201115 23:00:21.278"></status>
</kw>
<msg timestamp="20201115 23:00:21.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.256" endtime="20201115 23:00:21.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.279" endtime="20201115 23:00:21.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.282" endtime="20201115 23:00:21.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.254" endtime="20201115 23:00:21.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.252" endtime="20201115 23:00:21.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.291" endtime="20201115 23:00:21.576"></status>
</kw>
<msg timestamp="20201115 23:00:21.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023484222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023607569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.289" endtime="20201115 23:00:21.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023484222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023607569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.581" endtime="20201115 23:00:21.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.589" endtime="20201115 23:00:21.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.286" endtime="20201115 23:00:21.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.285" endtime="20201115 23:00:21.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.595" level="INFO">${RESULT} = [{'time': 0.023607569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012334699999999935, 'source_diff': 0.00012334699999999935}, {'time': 0.023772847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:21.592" endtime="20201115 23:00:21.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.608" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:21.596" endtime="20201115 23:00:21.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.612" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.611" endtime="20201115 23:00:21.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.615" level="INFO">VALUE: [0.00012334699999999935, 0.00012229100000000007, 0.00012152699999999975, 0.00012236200000000086, 0.00012173599999999729, 0.00012159700000000107, 0.00012209700000000157, 0.00012247299999999794, 0.00012204199999999929, 0.00012238899999999706, 0.00012159700000000107, 0.00012177799999999947, 0.00012216699999999941, 0.00012161100000000064, 0.0001220969999999981, 0.0001220969999999981, 0.0001221250000000007, 0.00012179200000000251, 0.0001224160000000002, 0.00012233400000000172, 0.0001224860000000015, 0.00012202799999999972, 0.00012193000000000273, 0.00012204199999999929, 0.00012236099999999792, 0.00012172200000000119, 0.0001219029999999996, 0.00012152699999999975, 0.00012177799999999947, 0.00012166600000000291, 0.00012202799999999972, 0.00012195900000000134, 0.00012188900000000003, 0.00012152799999999922, 0.00012175000000000033, 0.00012195800000000187, 0.0001219579999999984, 0.00012173600000000076, 0.00012161100000000064, 0.00012204199999999929, 0.00012198600000000101, 0.00012198599999999754, 0.00012183399999999775, 0.00012218100000000245, 0.00012192999999999926, 0.00012154199999999879, 0.0001221250000000007, 0.00012198599999999754, 0.00012209700000000157, 0.00012204200000000276]</msg>
<status status="PASS" starttime="20201115 23:00:21.614" endtime="20201115 23:00:21.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.609" endtime="20201115 23:00:21.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.618" endtime="20201115 23:00:21.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.622" endtime="20201115 23:00:21.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.620" endtime="20201115 23:00:21.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.617" endtime="20201115 23:00:21.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.250" endtime="20201115 23:00:21.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.248" endtime="20201115 23:00:21.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.248" endtime="20201115 23:00:21.643"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.645" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.653" endtime="20201115 23:00:21.674"></status>
</kw>
<msg timestamp="20201115 23:00:21.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.652" endtime="20201115 23:00:21.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.676" endtime="20201115 23:00:21.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.678" endtime="20201115 23:00:21.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.649" endtime="20201115 23:00:21.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.647" endtime="20201115 23:00:21.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.687" endtime="20201115 23:00:21.973"></status>
</kw>
<msg timestamp="20201115 23:00:21.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024354486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024478708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.686" endtime="20201115 23:00:21.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024354486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024478708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.977" endtime="20201115 23:00:21.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.985" endtime="20201115 23:00:21.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.683" endtime="20201115 23:00:21.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.681" endtime="20201115 23:00:21.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.992" level="INFO">${RESULT} = [{'time': 0.024478708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012422199999999675, 'source_diff': 0.00012422199999999675}, {'time': 0.024644056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:21.989" endtime="20201115 23:00:21.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.006" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:21.993" endtime="20201115 23:00:22.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.011" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.010" endtime="20201115 23:00:22.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.014" level="INFO">VALUE: [0.00012422199999999675, 0.00012352800000000122, 0.00012266699999999991, 0.00012348599999999904, 0.00012265299999999688, 0.0001228189999999997, 0.00012256899999999946, 0.00012284699999999885, 0.00012337500000000196, 0.00012269500000000252, 0.00012326399999999793, 0.00012283400000000222, 0.00012266699999999991, 0.00012270800000000262, 0.00012258299999999903, 0.00012298599999999854, 0.00012329200000000054, 0.00012265300000000035, 0.00012322300000000216, 0.00012255600000000283, 0.00012261099999999817, 0.0001229030000000006, 0.00012293000000000026, 0.0001225839999999985, 0.0001234449999999998, 0.0001232359999999988, 0.0001234030000000011, 0.00012341700000000067, 0.0001225419999999998, 0.00012311099999999867, 0.0001225969999999986, 0.0001229030000000006, 0.00012266699999999991, 0.00012295899999999887, 0.00012311099999999867, 0.00012261100000000164, 0.00012347199999999947, 0.0001232220000000027, 0.00012297199999999897, 0.00012311099999999867, 0.00012286100000000189, 0.0001234169999999972, 0.00012286100000000189, 0.00012261100000000164, 0.00012334699999999588, 0.0001224999999999976, 0.00012300000000000505, 0.00012274999999999786, 0.0001229579999999994, 0.00012304099999999735]</msg>
<status status="PASS" starttime="20201115 23:00:22.012" endtime="20201115 23:00:22.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.007" endtime="20201115 23:00:22.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.017" endtime="20201115 23:00:22.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.020" endtime="20201115 23:00:22.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.019" endtime="20201115 23:00:22.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.015" endtime="20201115 23:00:22.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.646" endtime="20201115 23:00:22.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.644" endtime="20201115 23:00:22.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.643" endtime="20201115 23:00:22.041"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.044" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.052" endtime="20201115 23:00:22.072"></status>
</kw>
<msg timestamp="20201115 23:00:22.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.050" endtime="20201115 23:00:22.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.073" endtime="20201115 23:00:22.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.076" endtime="20201115 23:00:22.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.048" endtime="20201115 23:00:22.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.046" endtime="20201115 23:00:22.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.085" endtime="20201115 23:00:22.371"></status>
</kw>
<msg timestamp="20201115 23:00:22.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023447139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023572333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.083" endtime="20201115 23:00:22.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023447139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023572333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.375" endtime="20201115 23:00:22.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.383" endtime="20201115 23:00:22.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.081" endtime="20201115 23:00:22.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.079" endtime="20201115 23:00:22.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.390" level="INFO">${RESULT} = [{'time': 0.023572333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012519400000000208, 'source_diff': 0.00012519400000000208}, {'time': 0.023741639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:22.386" endtime="20201115 23:00:22.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.403" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:22.391" endtime="20201115 23:00:22.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.407" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.406" endtime="20201115 23:00:22.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.410" level="INFO">VALUE: [0.00012519400000000208, 0.0001241389999999988, 0.00012359799999999907, 0.00012384699999999985, 0.00012426399999999893, 0.00012405500000000139, 0.00012427800000000197, 0.0001242779999999985, 0.0001238190000000007, 0.00012411099999999967, 0.0001244450000000008, 0.00012408299999999706, 0.0001240970000000001, 0.00012369500000000005, 0.00012361099999999917, 0.0001239299999999978, 0.00012448600000000004, 0.00012384799999999932, 0.00012444499999999734, 0.00012386099999999942, 0.00012384799999999932, 0.00012355600000000036, 0.00012438900000000253, 0.00012415299999999838, 0.00012427699999999903, 0.0001239030000000016, 0.00012404099999999835, 0.00012402699999999878, 0.0001238480000000028, 0.00012422200000000022, 0.0001242779999999985, 0.0001240420000000013, 0.0001241519999999989, 0.00012352800000000122, 0.00012440299999999863, 0.00012447200000000047, 0.00012362499999999874, 0.00012397199999999997, 0.00012388900000000203, 0.00012384799999999932, 0.00012425000000000283, 0.00012384699999999985, 0.00012427699999999903, 0.0001239030000000016, 0.00012402799999999825, 0.0001242359999999998, 0.00012412499999999924, 0.0001237359999999993, 0.00012380599999999714, 0.00012426299999999946]</msg>
<status status="PASS" starttime="20201115 23:00:22.409" endtime="20201115 23:00:22.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.404" endtime="20201115 23:00:22.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.413" endtime="20201115 23:00:22.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.416" endtime="20201115 23:00:22.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.415" endtime="20201115 23:00:22.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.411" endtime="20201115 23:00:22.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.044" endtime="20201115 23:00:22.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.043" endtime="20201115 23:00:22.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.042" endtime="20201115 23:00:22.437"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.440" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.448" endtime="20201115 23:00:22.468"></status>
</kw>
<msg timestamp="20201115 23:00:22.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.446" endtime="20201115 23:00:22.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.469" endtime="20201115 23:00:22.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.472" endtime="20201115 23:00:22.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.444" endtime="20201115 23:00:22.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.442" endtime="20201115 23:00:22.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.481" endtime="20201115 23:00:22.766"></status>
</kw>
<msg timestamp="20201115 23:00:22.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023484708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023611167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.479" endtime="20201115 23:00:22.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023484708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023611167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.771" endtime="20201115 23:00:22.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.779" endtime="20201115 23:00:22.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.477" endtime="20201115 23:00:22.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.475" endtime="20201115 23:00:22.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.785" level="INFO">${RESULT} = [{'time': 0.023611167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001264589999999989, 'source_diff': 0.0001264589999999989}, {'time': 0.023786431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:22.782" endtime="20201115 23:00:22.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.798" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:22.786" endtime="20201115 23:00:22.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.803" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.802" endtime="20201115 23:00:22.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.805" level="INFO">VALUE: [0.0001264589999999989, 0.0001248060000000016, 0.00012534699999999788, 0.00012547200000000147, 0.00012530500000000264, 0.00012507000000000143, 0.0001251389999999998, 0.0001249299999999988, 0.00012534700000000135, 0.00012451399999999918, 0.00012463900000000278, 0.00012502800000000272, 0.00012509699999999763, 0.00012497200000000097, 0.00012545799999999843, 0.00012476399999999943, 0.0001254030000000031, 0.0001249160000000027, 0.0001247230000000002, 0.00012484700000000085, 0.00012534800000000082, 0.00012520799999999818, 0.00012518100000000199, 0.00012452799999999875, 0.00012451399999999918, 0.00012540299999999963, 0.00012494499999999784, 0.00012477699999999953, 0.0001245420000000018, 0.0001251109999999972, 0.00012452799999999875, 0.00012495900000000087, 0.00012470799999999768, 0.0001253329999999983, 0.0001255000000000006, 0.0001246939999999981, 0.00012515299999999938, 0.00012472200000000072, 0.00012515299999999938, 0.00012527800000000297, 0.00012522299999999723, 0.00012497200000000097, 0.00012526399999999993, 0.00012540299999999963, 0.00012522200000000122, 0.00012465300000000235, 0.00012483400000000422, 0.0001247909999999991, 0.0001245129999999997, 0.00012452799999999875]</msg>
<status status="PASS" starttime="20201115 23:00:22.804" endtime="20201115 23:00:22.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.799" endtime="20201115 23:00:22.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.808" endtime="20201115 23:00:22.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.812" endtime="20201115 23:00:22.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.810" endtime="20201115 23:00:22.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.807" endtime="20201115 23:00:22.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.440" endtime="20201115 23:00:22.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.439" endtime="20201115 23:00:22.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.438" endtime="20201115 23:00:22.833"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.835" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.843" endtime="20201115 23:00:22.863"></status>
</kw>
<msg timestamp="20201115 23:00:22.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.842" endtime="20201115 23:00:22.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.865" endtime="20201115 23:00:22.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.868" endtime="20201115 23:00:22.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.839" endtime="20201115 23:00:22.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.837" endtime="20201115 23:00:22.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.877" endtime="20201115 23:00:23.162"></status>
</kw>
<msg timestamp="20201115 23:00:23.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023459042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023585806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.875" endtime="20201115 23:00:23.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023459042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023585806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.167" endtime="20201115 23:00:23.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.175" endtime="20201115 23:00:23.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.872" endtime="20201115 23:00:23.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.871" endtime="20201115 23:00:23.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.181" level="INFO">${RESULT} = [{'time': 0.023585806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012676400000000143, 'source_diff': 0.00012676400000000143}, {'time': 0.023753069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:23.178" endtime="20201115 23:00:23.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.194" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:23.182" endtime="20201115 23:00:23.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.199" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.198" endtime="20201115 23:00:23.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.201" level="INFO">VALUE: [0.00012676400000000143, 0.00012583300000000228, 0.0001259169999999997, 0.00012622200000000222, 0.000125778, 0.00012576400000000043, 0.00012576400000000043, 0.00012629200000000007, 0.0001259450000000023, 0.00012644399999999986, 0.00012636100000000192, 0.00012623599999999832, 0.00012615300000000038, 0.00012609699999999863, 0.00012640300000000063, 0.00012615300000000038, 0.00012648599999999857, 0.0001263329999999993, 0.0001259719999999985, 0.0001265269999999978, 0.00012554099999999985, 0.00012584700000000185, 0.00012641599999999725, 0.0001260970000000021, 0.00012604199999999982, 0.00012640300000000063, 0.0001258329999999988, 0.00012604199999999982, 0.00012588900000000056, 0.0001259580000000024, 0.00012570799999999868, 0.00012558300000000203, 0.0001264170000000002, 0.0001256390000000003, 0.0001257230000000012, 0.0001262780000000005, 0.0001260559999999994, 0.00012565299999999988, 0.00012594399999999936, 0.00012567999999999954, 0.00012604199999999982, 0.0001260559999999994, 0.00012591600000000022, 0.00012602800000000025, 0.00012556999999999846, 0.00012565299999999988, 0.00012616699999999648, 0.00012566700000000292, 0.00012634699999999888, 0.0001262360000000018]</msg>
<status status="PASS" starttime="20201115 23:00:23.200" endtime="20201115 23:00:23.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.195" endtime="20201115 23:00:23.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.204" endtime="20201115 23:00:23.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.207" endtime="20201115 23:00:23.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.206" endtime="20201115 23:00:23.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.202" endtime="20201115 23:00:23.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.836" endtime="20201115 23:00:23.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.834" endtime="20201115 23:00:23.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.833" endtime="20201115 23:00:23.229"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.231" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.239" endtime="20201115 23:00:23.260"></status>
</kw>
<msg timestamp="20201115 23:00:23.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.238" endtime="20201115 23:00:23.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.261" endtime="20201115 23:00:23.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.264" endtime="20201115 23:00:23.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.235" endtime="20201115 23:00:23.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.233" endtime="20201115 23:00:23.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.273" endtime="20201115 23:00:23.559"></status>
</kw>
<msg timestamp="20201115 23:00:23.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024378583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024506417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.272" endtime="20201115 23:00:23.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024378583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024506417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.563" endtime="20201115 23:00:23.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.571" endtime="20201115 23:00:23.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.269" endtime="20201115 23:00:23.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.268" endtime="20201115 23:00:23.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.578" level="INFO">${RESULT} = [{'time': 0.024506417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012783400000000028, 'source_diff': 0.00012783400000000028}, {'time': 0.024680639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:23.575" endtime="20201115 23:00:23.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.592" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:23.579" endtime="20201115 23:00:23.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.597" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.596" endtime="20201115 23:00:23.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.599" level="INFO">VALUE: [0.00012783400000000028, 0.00012669499999999959, 0.00012731900000000074, 0.00012712500000000224, 0.00012688900000000156, 0.00012744500000000034, 0.00012654200000000032, 0.00012677799999999753, 0.0001272230000000027, 0.0001267360000000023, 0.0001269719999999995, 0.000127472, 0.00012679200000000057, 0.00012662499999999827, 0.00012687499999999852, 0.00012666600000000097, 0.00012695799999999993, 0.00012663799999999836, 0.00012720899999999966, 0.00012658299999999956, 0.00012657000000000293, 0.00012709699999999963, 0.00012720800000000018, 0.00012744500000000034, 0.00012744500000000034, 0.00012736099999999945, 0.0001271940000000006, 0.000127262999999999, 0.00012659699999999913, 0.0001271109999999992, 0.00012654200000000032, 0.00012704200000000082, 0.00012676300000000196, 0.0001274589999999999, 0.00012751400000000218, 0.0001266390000000013, 0.00012704100000000135, 0.00012737499999999902, 0.00012687499999999852, 0.00012666700000000045, 0.00012672200000000272, 0.00012699999999999517, 0.0001274030000000051, 0.00012697199999999603, 0.00012666700000000392, 0.00012712499999999877, 0.00012695799999999646, 0.0001267769999999946, 0.0001266529999999974, 0.00012741700000000467]</msg>
<status status="PASS" starttime="20201115 23:00:23.598" endtime="20201115 23:00:23.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.593" endtime="20201115 23:00:23.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.602" endtime="20201115 23:00:23.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.605" endtime="20201115 23:00:23.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.604" endtime="20201115 23:00:23.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.601" endtime="20201115 23:00:23.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.232" endtime="20201115 23:00:23.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.230" endtime="20201115 23:00:23.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.229" endtime="20201115 23:00:23.627"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.629" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.638" endtime="20201115 23:00:23.658"></status>
</kw>
<msg timestamp="20201115 23:00:23.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.636" endtime="20201115 23:00:23.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.659" endtime="20201115 23:00:23.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.662" endtime="20201115 23:00:23.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.633" endtime="20201115 23:00:23.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.631" endtime="20201115 23:00:23.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.674" endtime="20201115 23:00:23.961"></status>
</kw>
<msg timestamp="20201115 23:00:23.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024068722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024197889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.672" endtime="20201115 23:00:23.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024068722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024197889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.965" endtime="20201115 23:00:23.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.974" endtime="20201115 23:00:23.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.668" endtime="20201115 23:00:23.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.666" endtime="20201115 23:00:23.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.982" level="INFO">${RESULT} = [{'time': 0.024197889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012916699999999948, 'source_diff': 0.00012916699999999948}, {'time': 0.024359194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:23.978" endtime="20201115 23:00:23.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.996" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:23.983" endtime="20201115 23:00:23.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.002" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.001" endtime="20201115 23:00:24.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.005" level="INFO">VALUE: [0.00012916699999999948, 0.0001277910000000021, 0.00012763899999999884, 0.00012829099999999913, 0.0001276529999999984, 0.00012779200000000157, 0.00012822200000000075, 0.00012777799999999853, 0.00012755500000000142, 0.00012769399999999764, 0.0001283330000000013, 0.00012770900000000016, 0.0001275560000000009, 0.00012827799999999903, 0.00012805499999999845, 0.00012823600000000032, 0.00012768100000000102, 0.00012758400000000003, 0.00012802799999999878, 0.00012772200000000025, 0.00012766700000000145, 0.00012777700000000253, 0.000128472000000001, 0.0001279300000000018, 0.0001281110000000002, 0.0001278330000000008, 0.00012765300000000188, 0.00012766699999999798, 0.00012783299999999734, 0.00012834800000000035, 0.00012784700000000038, 0.0001279309999999978, 0.00012773599999999982, 0.00012757000000000046, 0.00012822200000000075, 0.00012772200000000025, 0.00012779200000000157, 0.00012840299999999916, 0.00012848600000000057, 0.00012786099999999995, 0.0001281110000000002, 0.00012841599999999925, 0.00012774999999999592, 0.00012759700000000013, 0.00012840199999999968, 0.0001279439999999979, 0.00012818099999999805, 0.0001282079999999977, 0.00012758300000000056, 0.00012786099999999995]</msg>
<status status="PASS" starttime="20201115 23:00:24.003" endtime="20201115 23:00:24.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.997" endtime="20201115 23:00:24.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.009" endtime="20201115 23:00:24.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.013" endtime="20201115 23:00:24.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.011" endtime="20201115 23:00:24.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.007" endtime="20201115 23:00:24.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.630" endtime="20201115 23:00:24.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.628" endtime="20201115 23:00:24.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.627" endtime="20201115 23:00:24.034"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.037" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.045" endtime="20201115 23:00:24.065"></status>
</kw>
<msg timestamp="20201115 23:00:24.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.043" endtime="20201115 23:00:24.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.067" endtime="20201115 23:00:24.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.069" endtime="20201115 23:00:24.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.041" endtime="20201115 23:00:24.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.039" endtime="20201115 23:00:24.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.081" endtime="20201115 23:00:24.368"></status>
</kw>
<msg timestamp="20201115 23:00:24.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023480431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023610514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.079" endtime="20201115 23:00:24.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023480431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023610514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.373" endtime="20201115 23:00:24.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.382" endtime="20201115 23:00:24.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.076" endtime="20201115 23:00:24.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.073" endtime="20201115 23:00:24.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.390" level="INFO">${RESULT} = [{'time': 0.023610514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001300829999999996, 'source_diff': 0.0001300829999999996}, {'time': 0.023787736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:24.386" endtime="20201115 23:00:24.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.404" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:24.391" endtime="20201115 23:00:24.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.409" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.408" endtime="20201115 23:00:24.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.412" level="INFO">VALUE: [0.0001300829999999996, 0.00012876399999999996, 0.00012881999999999824, 0.00012884700000000138, 0.00012877799999999953, 0.0001286529999999994, 0.0001290270000000003, 0.0001290980000000011, 0.0001290140000000002, 0.000128778000000003, 0.0001293890000000006, 0.0001294859999999981, 0.00012872200000000125, 0.00012909699999999816, 0.00012880599999999867, 0.00012876399999999996, 0.00012926400000000046, 0.0001290560000000024, 0.00012905499999999945, 0.0001292500000000009, 0.00012909700000000163, 0.00012947199999999853, 0.00012859700000000113, 0.0001284859999999971, 0.0001288890000000001, 0.00012913900000000034, 0.00012927700000000056, 0.00012866699999999898, 0.00012861099999999723, 0.00012850000000000014, 0.00012886100000000095, 0.00012940200000000068, 0.00012934800000000135, 0.00012865300000000288, 0.00012865300000000288, 0.00012897300000000098, 0.0001288469999999979, 0.0001287919999999991, 0.00012913900000000034, 0.00012872199999999778, 0.000128569000000002, 0.00012872200000000125, 0.00012895800000000193, 0.0001286110000000007, 0.00012870800000000168, 0.00012867999999999907, 0.00012866699999999898, 0.00012941699999999973, 0.00012927700000000403, 0.00012887500000000052]</msg>
<status status="PASS" starttime="20201115 23:00:24.411" endtime="20201115 23:00:24.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.405" endtime="20201115 23:00:24.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.416" endtime="20201115 23:00:24.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.419" endtime="20201115 23:00:24.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.418" endtime="20201115 23:00:24.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.414" endtime="20201115 23:00:24.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.037" endtime="20201115 23:00:24.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.036" endtime="20201115 23:00:24.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.035" endtime="20201115 23:00:24.440"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.443" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.451" endtime="20201115 23:00:24.471"></status>
</kw>
<msg timestamp="20201115 23:00:24.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.449" endtime="20201115 23:00:24.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.473" endtime="20201115 23:00:24.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.475" endtime="20201115 23:00:24.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.447" endtime="20201115 23:00:24.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.445" endtime="20201115 23:00:24.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.487" endtime="20201115 23:00:24.773"></status>
</kw>
<msg timestamp="20201115 23:00:24.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023488292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023619694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.485" endtime="20201115 23:00:24.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023488292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023619694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.778" endtime="20201115 23:00:24.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.787" endtime="20201115 23:00:24.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.482" endtime="20201115 23:00:24.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.479" endtime="20201115 23:00:24.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.795" level="INFO">${RESULT} = [{'time': 0.023619694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013140199999999921, 'source_diff': 0.00013140199999999921}, {'time': 0.023800944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:24.792" endtime="20201115 23:00:24.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.809" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:24.796" endtime="20201115 23:00:24.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.813" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.812" endtime="20201115 23:00:24.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.816" level="INFO">VALUE: [0.00013140199999999921, 0.00013041600000000125, 0.0001299590000000024, 0.00012986100000000195, 0.00013019499999999962, 0.00012952699999999734, 0.00013016700000000048, 0.00013016700000000048, 0.00012972200000000225, 0.00013013899999999787, 0.0001302769999999981, 0.00012991600000000075, 0.00012973600000000182, 0.00012980599999999967, 0.00012973600000000182, 0.0001304859999999991, 0.00012998600000000207, 0.00013011200000000167, 0.00012966699999999998, 0.0001295829999999991, 0.00013045899999999944, 0.00012980599999999967, 0.00012961099999999823, 0.00013027799999999756, 0.0001299309999999998, 0.00012997199999999903, 0.0001299309999999998, 0.00013000000000000164, 0.00012955499999999995, 0.0001302500000000019, 0.00013023599999999885, 0.0001302920000000006, 0.0001298339999999988, 0.0001295829999999991, 0.00012983400000000228, 0.0001296249999999978, 0.00012948600000000157, 0.0001301530000000009, 0.00012968099999999955, 0.00012980599999999967, 0.00012952800000000028, 0.00012969399999999964, 0.00013016700000000048, 0.00012994499999999937, 0.00013016600000000447, 0.00012993000000000032, 0.00013023599999999885, 0.0001300000000000051, 0.0001299859999999986, 0.0001296110000000017]</msg>
<status status="PASS" starttime="20201115 23:00:24.814" endtime="20201115 23:00:24.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.810" endtime="20201115 23:00:24.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.819" endtime="20201115 23:00:24.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.823" endtime="20201115 23:00:24.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.821" endtime="20201115 23:00:24.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.818" endtime="20201115 23:00:24.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.443" endtime="20201115 23:00:24.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.441" endtime="20201115 23:00:24.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.441" endtime="20201115 23:00:24.844"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.846" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.854" endtime="20201115 23:00:24.875"></status>
</kw>
<msg timestamp="20201115 23:00:24.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.853" endtime="20201115 23:00:24.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.877" endtime="20201115 23:00:24.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.879" endtime="20201115 23:00:24.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.850" endtime="20201115 23:00:24.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.848" endtime="20201115 23:00:24.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.888" endtime="20201115 23:00:25.174"></status>
</kw>
<msg timestamp="20201115 23:00:25.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024363792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024495403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.887" endtime="20201115 23:00:25.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024363792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024495403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.178" endtime="20201115 23:00:25.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.186" endtime="20201115 23:00:25.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.884" endtime="20201115 23:00:25.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.883" endtime="20201115 23:00:25.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.193" level="INFO">${RESULT} = [{'time': 0.024495403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013161100000000023, 'source_diff': 0.00013161100000000023}, {'time': 0.024675625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:25.189" endtime="20201115 23:00:25.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.207" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:25.194" endtime="20201115 23:00:25.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.212" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.211" endtime="20201115 23:00:25.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.214" level="INFO">VALUE: [0.00013161100000000023, 0.00013145800000000096, 0.0001306119999999987, 0.00013077799999999806, 0.00013124999999999942, 0.00013123599999999985, 0.00013127799999999856, 0.00013124999999999942, 0.00013082000000000024, 0.00013051399999999824, 0.00013062500000000227, 0.00013094500000000037, 0.00013104200000000135, 0.0001305270000000018, 0.00013101399999999874, 0.00013142999999999835, 0.0001314579999999975, 0.00013095800000000046, 0.00013063899999999837, 0.00013097200000000003, 0.00013057, 0.0001307639999999985, 0.00013091699999999776, 0.0001310279999999983, 0.00013069500000000012, 0.00013090300000000166, 0.00013049999999999867, 0.0001314440000000014, 0.0001308339999999998, 0.00013104200000000135, 0.0001307920000000011, 0.00013108299999999712, 0.000131263999999999, 0.00013069500000000012, 0.00013059700000000313, 0.0001309029999999982, 0.00013062500000000227, 0.00013095800000000046, 0.0001307639999999985, 0.00013109700000000016, 0.00013058400000000303, 0.00013124999999999942, 0.00013133400000000378, 0.00013113900000000234, 0.00013133399999999684, 0.00013051400000000518, 0.00013051399999999824, 0.00013138799999999617, 0.00013072199999999978, 0.000131263999999999]</msg>
<status status="PASS" starttime="20201115 23:00:25.213" endtime="20201115 23:00:25.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.208" endtime="20201115 23:00:25.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.217" endtime="20201115 23:00:25.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.221" endtime="20201115 23:00:25.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.219" endtime="20201115 23:00:25.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.216" endtime="20201115 23:00:25.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.847" endtime="20201115 23:00:25.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.845" endtime="20201115 23:00:25.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.844" endtime="20201115 23:00:25.242"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.244" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.252" endtime="20201115 23:00:25.273"></status>
</kw>
<msg timestamp="20201115 23:00:25.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.251" endtime="20201115 23:00:25.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.274" endtime="20201115 23:00:25.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.277" endtime="20201115 23:00:25.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.248" endtime="20201115 23:00:25.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.246" endtime="20201115 23:00:25.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.285" endtime="20201115 23:00:25.571"></status>
</kw>
<msg timestamp="20201115 23:00:25.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023554403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023687792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.284" endtime="20201115 23:00:25.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023554403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023687792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.575" endtime="20201115 23:00:25.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.588" endtime="20201115 23:00:25.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.282" endtime="20201115 23:00:25.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.280" endtime="20201115 23:00:25.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.595" level="INFO">${RESULT} = [{'time': 0.023687792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013338899999999765, 'source_diff': 0.00013338899999999765}, {'time': 0.023873111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:25.591" endtime="20201115 23:00:25.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.608" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:25.596" endtime="20201115 23:00:25.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.612" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.611" endtime="20201115 23:00:25.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.614" level="INFO">VALUE: [0.00013338899999999765, 0.00013247199999999806, 0.0001319730000000005, 0.00013238900000000012, 0.00013183300000000134, 0.00013241699999999926, 0.00013184800000000038, 0.0001317639999999995, 0.00013154199999999838, 0.00013208400000000106, 0.000132264, 0.0001320830000000016, 0.00013197199999999756, 0.00013172200000000078, 0.00013168100000000155, 0.000132264, 0.00013179199999999863, 0.0001315969999999972, 0.00013190199999999971, 0.0001322080000000017, 0.00013220799999999824, 0.00013172200000000078, 0.0001319029999999992, 0.00013188800000000014, 0.00013180600000000167, 0.00013173600000000035, 0.00013183399999999734, 0.00013234699999999794, 0.00013183299999999787, 0.00013188899999999962, 0.00013241699999999926, 0.00013238800000000064, 0.000132473000000001, 0.00013166700000000198, 0.00013198599999999713, 0.00013154199999999838, 0.00013233299999999837, 0.00013230600000000217, 0.0001323470000000014, 0.000132264, 0.00013223600000000085, 0.00013231900000000227, 0.00013227799999999956, 0.00013198599999999713, 0.00013233300000000184, 0.0001320969999999977, 0.00013197200000000103, 0.00013172200000000078, 0.00013216599999999606, 0.0001316530000000024]</msg>
<status status="PASS" starttime="20201115 23:00:25.613" endtime="20201115 23:00:25.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.609" endtime="20201115 23:00:25.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.618" endtime="20201115 23:00:25.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.621" endtime="20201115 23:00:25.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.619" endtime="20201115 23:00:25.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.616" endtime="20201115 23:00:25.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.245" endtime="20201115 23:00:25.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.243" endtime="20201115 23:00:25.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.242" endtime="20201115 23:00:25.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.019" endtime="20201115 23:00:25.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.647" endtime="20201115 23:00:25.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.645" endtime="20201115 23:00:25.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.644" endtime="20201115 23:00:25.667"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:59:45.950" endtime="20201115 23:00:25.668" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.676" endtime="20201115 23:00:25.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.674" endtime="20201115 23:00:25.696"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.710" endtime="20201115 23:00:25.722"></status>
</kw>
<msg timestamp="20201115 23:00:25.723" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.708" endtime="20201115 23:00:25.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.725" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.724" endtime="20201115 23:00:25.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.728" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:00:25.726" endtime="20201115 23:00:25.728"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:25.705" endtime="20201115 23:00:25.729"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:25.703" endtime="20201115 23:00:25.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.701" endtime="20201115 23:00:25.730"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:00:25.733" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:00:25.733" endtime="20201115 23:00:25.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.731" endtime="20201115 23:00:25.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.700" endtime="20201115 23:00:25.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.700" endtime="20201115 23:00:25.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.735" endtime="20201115 23:00:25.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.698" endtime="20201115 23:00:25.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.696" endtime="20201115 23:00:25.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.673" endtime="20201115 23:00:25.738"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.742" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.750" endtime="20201115 23:00:25.766"></status>
</kw>
<msg timestamp="20201115 23:00:25.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.748" endtime="20201115 23:00:25.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.768" endtime="20201115 23:00:25.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.770" endtime="20201115 23:00:25.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.745" endtime="20201115 23:00:25.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.743" endtime="20201115 23:00:25.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.780" endtime="20201115 23:00:26.066"></status>
</kw>
<msg timestamp="20201115 23:00:26.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065952431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066031069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.779" endtime="20201115 23:00:26.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065952431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066031069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.070" endtime="20201115 23:00:26.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.078" endtime="20201115 23:00:26.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.775" endtime="20201115 23:00:26.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.773" endtime="20201115 23:00:26.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.085" level="INFO">${RESULT} = [{'time': 0.066031069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.863799999999199e-05, 'source_diff': 7.863799999999199e-05}, {'time': 0.066133431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:26.082" endtime="20201115 23:00:26.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.099" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:26.086" endtime="20201115 23:00:26.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.103" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.102" endtime="20201115 23:00:26.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.106" level="INFO">VALUE: [7.863799999999199e-05, 7.770900000000913e-05, 7.769500000000262e-05, 7.775000000000143e-05, 7.777800000000057e-05, 7.772200000000229e-05, 7.776399999999406e-05, 7.775000000000143e-05, 7.776399999999406e-05, 7.775000000000143e-05, 7.776399999999406e-05, 7.775000000000143e-05, 7.773599999999492e-05, 7.775000000000143e-05, 7.776400000000794e-05, 7.777800000000057e-05, 7.772200000000229e-05, 7.776399999999406e-05, 7.77360000000088e-05, 7.77360000000088e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.77360000000088e-05, 7.775000000000143e-05, 7.772200000000229e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.776399999999406e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.776399999999406e-05, 7.773599999999492e-05, 7.769400000000315e-05, 7.775000000000143e-05, 7.776399999999406e-05, 7.775000000000143e-05, 7.77770000000011e-05, 7.77770000000011e-05, 7.77360000000088e-05, 7.776300000000846e-05, 7.783399999999885e-05, 7.776400000000794e-05, 7.77360000000088e-05, 7.777800000000057e-05, 7.776299999999459e-05, 7.773599999999492e-05, 7.777800000000057e-05, 7.775000000000143e-05, 7.776400000000794e-05, 7.776400000000794e-05]</msg>
<status status="PASS" starttime="20201115 23:00:26.104" endtime="20201115 23:00:26.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.100" endtime="20201115 23:00:26.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.109" endtime="20201115 23:00:26.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.112" endtime="20201115 23:00:26.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.111" endtime="20201115 23:00:26.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.107" endtime="20201115 23:00:26.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.742" endtime="20201115 23:00:26.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.740" endtime="20201115 23:00:26.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.739" endtime="20201115 23:00:26.133"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.135" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.144" endtime="20201115 23:00:26.160"></status>
</kw>
<msg timestamp="20201115 23:00:26.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.142" endtime="20201115 23:00:26.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.162" endtime="20201115 23:00:26.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.165" endtime="20201115 23:00:26.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.140" endtime="20201115 23:00:26.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.137" endtime="20201115 23:00:26.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.175" endtime="20201115 23:00:26.460"></status>
</kw>
<msg timestamp="20201115 23:00:26.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023661667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023740292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.172" endtime="20201115 23:00:26.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023661667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023740292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.464" endtime="20201115 23:00:26.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.472" endtime="20201115 23:00:26.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.170" endtime="20201115 23:00:26.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.168" endtime="20201115 23:00:26.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.479" level="INFO">${RESULT} = [{'time': 0.023740292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.862499999999883e-05, 'source_diff': 7.862499999999883e-05}, {'time': 0.023841097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:26.476" endtime="20201115 23:00:26.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.492" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:26.480" endtime="20201115 23:00:26.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.497" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.496" endtime="20201115 23:00:26.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.499" level="INFO">VALUE: [7.862499999999883e-05, 7.774999999999796e-05, 7.777800000000057e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.772199999999882e-05, 7.773600000000186e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.770800000000272e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.77770000000011e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.769499999999915e-05, 7.775000000000143e-05, 7.779200000000014e-05, 7.779200000000014e-05, 7.776399999999753e-05, 7.770799999999925e-05, 7.776399999999753e-05, 7.769399999999968e-05, 7.775000000000143e-05, 7.780599999999971e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.780500000000024e-05, 7.774999999999796e-05, 7.770899999999872e-05, 7.77770000000011e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.777800000000057e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.78189999999998e-05, 7.774999999999796e-05, 7.777800000000057e-05, 7.770899999999872e-05, 7.775000000000143e-05]</msg>
<status status="PASS" starttime="20201115 23:00:26.498" endtime="20201115 23:00:26.499"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.493" endtime="20201115 23:00:26.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.502" endtime="20201115 23:00:26.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.506" endtime="20201115 23:00:26.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.504" endtime="20201115 23:00:26.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.501" endtime="20201115 23:00:26.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.136" endtime="20201115 23:00:26.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.134" endtime="20201115 23:00:26.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.133" endtime="20201115 23:00:26.527"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.529" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.537" endtime="20201115 23:00:26.554"></status>
</kw>
<msg timestamp="20201115 23:00:26.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.536" endtime="20201115 23:00:26.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.555" endtime="20201115 23:00:26.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.558" endtime="20201115 23:00:26.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.533" endtime="20201115 23:00:26.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.531" endtime="20201115 23:00:26.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.568" endtime="20201115 23:00:26.853"></status>
</kw>
<msg timestamp="20201115 23:00:26.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023694278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023772903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.566" endtime="20201115 23:00:26.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023694278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023772903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.857" endtime="20201115 23:00:26.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.865" endtime="20201115 23:00:26.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.563" endtime="20201115 23:00:26.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.561" endtime="20201115 23:00:26.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.872" level="INFO">${RESULT} = [{'time': 0.023772903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.86250000000023e-05, 'source_diff': 7.86250000000023e-05}, {'time': 0.023870306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:26.869" endtime="20201115 23:00:26.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.886" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:26.873" endtime="20201115 23:00:26.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.891" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.890" endtime="20201115 23:00:26.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.893" level="INFO">VALUE: [7.86250000000023e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.777800000000057e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.776399999999753e-05, 7.776300000000153e-05, 7.773599999999839e-05, 7.776399999999753e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.77229999999983e-05, 7.773599999999839e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.773599999999839e-05, 7.774999999999796e-05, 7.777800000000057e-05, 7.774999999999796e-05, 7.773600000000186e-05, 7.77229999999983e-05, 7.781999999999928e-05, 7.77779999999971e-05, 7.769499999999915e-05, 7.779100000000067e-05, 7.772200000000229e-05, 7.775000000000143e-05, 7.780599999999971e-05, 7.779200000000014e-05, 7.766600000000054e-05, 7.7764000000001e-05, 7.77229999999983e-05, 7.770799999999925e-05, 7.772199999999882e-05, 7.781999999999928e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.7764000000001e-05]</msg>
<status status="PASS" starttime="20201115 23:00:26.892" endtime="20201115 23:00:26.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.887" endtime="20201115 23:00:26.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.896" endtime="20201115 23:00:26.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.900" endtime="20201115 23:00:26.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.898" endtime="20201115 23:00:26.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.895" endtime="20201115 23:00:26.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.530" endtime="20201115 23:00:26.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.528" endtime="20201115 23:00:26.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.527" endtime="20201115 23:00:26.921"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.923" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.931" endtime="20201115 23:00:26.948"></status>
</kw>
<msg timestamp="20201115 23:00:26.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.930" endtime="20201115 23:00:26.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.950" endtime="20201115 23:00:26.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.952" endtime="20201115 23:00:26.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.927" endtime="20201115 23:00:26.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.925" endtime="20201115 23:00:26.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.961" endtime="20201115 23:00:27.248"></status>
</kw>
<msg timestamp="20201115 23:00:27.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023493042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023571653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.960" endtime="20201115 23:00:27.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023493042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023571653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.252" endtime="20201115 23:00:27.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.261" endtime="20201115 23:00:27.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.957" endtime="20201115 23:00:27.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.955" endtime="20201115 23:00:27.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.267" level="INFO">${RESULT} = [{'time': 0.023571653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861100000000273e-05, 'source_diff': 7.861100000000273e-05}, {'time': 0.023665931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:27.264" endtime="20201115 23:00:27.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.280" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:27.268" endtime="20201115 23:00:27.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.285" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.284" endtime="20201115 23:00:27.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.287" level="INFO">VALUE: [7.861100000000273e-05, 7.7764000000001e-05, 7.773600000000186e-05, 7.7764000000001e-05, 7.779200000000014e-05, 7.776399999999753e-05, 7.773700000000133e-05, 7.773699999999786e-05, 7.773599999999839e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.772199999999882e-05, 7.773599999999839e-05, 7.772300000000176e-05, 7.774999999999796e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.773700000000133e-05, 7.775000000000143e-05, 7.772200000000229e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.772199999999882e-05, 7.769399999999968e-05, 7.776299999999806e-05, 7.774999999999796e-05, 7.777800000000057e-05, 7.779200000000014e-05, 7.773600000000186e-05, 7.779100000000067e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.780599999999971e-05, 7.773599999999839e-05, 7.774999999999796e-05, 7.780600000000318e-05, 7.774999999999796e-05, 7.776399999999753e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.777800000000057e-05, 7.774999999999796e-05, 7.774999999999796e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.286" endtime="20201115 23:00:27.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.281" endtime="20201115 23:00:27.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.290" endtime="20201115 23:00:27.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.294" endtime="20201115 23:00:27.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.292" endtime="20201115 23:00:27.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.289" endtime="20201115 23:00:27.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.924" endtime="20201115 23:00:27.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.922" endtime="20201115 23:00:27.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.921" endtime="20201115 23:00:27.315"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.317" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.326" endtime="20201115 23:00:27.342"></status>
</kw>
<msg timestamp="20201115 23:00:27.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.324" endtime="20201115 23:00:27.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.344" endtime="20201115 23:00:27.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.346" endtime="20201115 23:00:27.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.322" endtime="20201115 23:00:27.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.320" endtime="20201115 23:00:27.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.355" endtime="20201115 23:00:27.643"></status>
</kw>
<msg timestamp="20201115 23:00:27.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023981431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024060069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.354" endtime="20201115 23:00:27.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023981431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024060069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.647" endtime="20201115 23:00:27.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.655" endtime="20201115 23:00:27.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.351" endtime="20201115 23:00:27.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.349" endtime="20201115 23:00:27.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.662" level="INFO">${RESULT} = [{'time': 0.024060069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.863799999999893e-05, 'source_diff': 7.863799999999893e-05}, {'time': 0.024154639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:27.658" endtime="20201115 23:00:27.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.675" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:27.663" endtime="20201115 23:00:27.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.679" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.678" endtime="20201115 23:00:27.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.682" level="INFO">VALUE: [7.863799999999893e-05, 7.773599999999839e-05, 7.772199999999882e-05, 7.776299999999806e-05, 7.78189999999998e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.776299999999806e-05, 7.776299999999806e-05, 7.78189999999998e-05, 7.772199999999882e-05, 7.780500000000024e-05, 7.779200000000014e-05, 7.774999999999796e-05, 7.7764000000001e-05, 7.776399999999753e-05, 7.776299999999806e-05, 7.772199999999882e-05, 7.7764000000001e-05, 7.774999999999796e-05, 7.782000000000275e-05, 7.776300000000153e-05, 7.770799999999925e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.774999999999796e-05, 7.77779999999971e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.772199999999882e-05, 7.777800000000057e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.773599999999839e-05, 7.777800000000057e-05, 7.774999999999796e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.777800000000057e-05, 7.77229999999983e-05, 7.773599999999839e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.776300000000153e-05, 7.775000000000143e-05, 7.779100000000067e-05, 7.775000000000143e-05, 7.775000000000143e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.680" endtime="20201115 23:00:27.682"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.676" endtime="20201115 23:00:27.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.685" endtime="20201115 23:00:27.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.689" endtime="20201115 23:00:27.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.687" endtime="20201115 23:00:27.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.683" endtime="20201115 23:00:27.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.318" endtime="20201115 23:00:27.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.316" endtime="20201115 23:00:27.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.315" endtime="20201115 23:00:27.710"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.712" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.720" endtime="20201115 23:00:27.737"></status>
</kw>
<msg timestamp="20201115 23:00:27.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.719" endtime="20201115 23:00:27.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.738" endtime="20201115 23:00:27.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.741" endtime="20201115 23:00:27.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.716" endtime="20201115 23:00:27.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.714" endtime="20201115 23:00:27.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.750" endtime="20201115 23:00:28.035"></status>
</kw>
<msg timestamp="20201115 23:00:28.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023533236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023611847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.748" endtime="20201115 23:00:28.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023533236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023611847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.039" endtime="20201115 23:00:28.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.048" endtime="20201115 23:00:28.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.745" endtime="20201115 23:00:28.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.744" endtime="20201115 23:00:28.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.054" level="INFO">${RESULT} = [{'time': 0.023611847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861099999999926e-05, 'source_diff': 7.861099999999926e-05}, {'time': 0.023708292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:28.051" endtime="20201115 23:00:28.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.067" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:28.055" endtime="20201115 23:00:28.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.072" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.071" endtime="20201115 23:00:28.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.074" level="INFO">VALUE: [7.861099999999926e-05, 7.774999999999796e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.779100000000067e-05, 7.774999999999796e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.777800000000057e-05, 7.775000000000143e-05, 7.776399999999753e-05, 7.772200000000229e-05, 7.78189999999998e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.779200000000014e-05, 7.773600000000186e-05, 7.773599999999839e-05, 7.7764000000001e-05, 7.773600000000186e-05, 7.776399999999753e-05, 7.774999999999796e-05, 7.77770000000011e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.776299999999806e-05, 7.773600000000186e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.777800000000057e-05, 7.780499999999677e-05, 7.769399999999968e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.776300000000153e-05, 7.782000000000275e-05, 7.773599999999839e-05, 7.777800000000057e-05, 7.776399999999753e-05, 7.775000000000143e-05, 7.772199999999882e-05, 7.777800000000057e-05, 7.770900000000219e-05, 7.773599999999839e-05, 7.7764000000001e-05, 7.774999999999796e-05, 7.776399999999753e-05, 7.777800000000057e-05]</msg>
<status status="PASS" starttime="20201115 23:00:28.073" endtime="20201115 23:00:28.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.068" endtime="20201115 23:00:28.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.078" endtime="20201115 23:00:28.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.081" endtime="20201115 23:00:28.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.080" endtime="20201115 23:00:28.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.076" endtime="20201115 23:00:28.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.713" endtime="20201115 23:00:28.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.711" endtime="20201115 23:00:28.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.710" endtime="20201115 23:00:28.102"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.105" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.113" endtime="20201115 23:00:28.129"></status>
</kw>
<msg timestamp="20201115 23:00:28.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.111" endtime="20201115 23:00:28.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.131" endtime="20201115 23:00:28.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.133" endtime="20201115 23:00:28.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.109" endtime="20201115 23:00:28.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.107" endtime="20201115 23:00:28.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.142" endtime="20201115 23:00:28.427"></status>
</kw>
<msg timestamp="20201115 23:00:28.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023488972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023567542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.141" endtime="20201115 23:00:28.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023488972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023567542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.432" endtime="20201115 23:00:28.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.440" endtime="20201115 23:00:28.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.138" endtime="20201115 23:00:28.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.136" endtime="20201115 23:00:28.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.446" level="INFO">${RESULT} = [{'time': 0.023567542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.857000000000003e-05, 'source_diff': 7.857000000000003e-05}, {'time': 0.023670542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:28.443" endtime="20201115 23:00:28.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.461" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:28.447" endtime="20201115 23:00:28.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.465" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.464" endtime="20201115 23:00:28.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.468" level="INFO">VALUE: [7.857000000000003e-05, 7.777800000000057e-05, 7.780599999999971e-05, 7.784699999999894e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.776300000000153e-05, 7.776399999999753e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.776399999999753e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.77770000000011e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.777800000000057e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.776300000000153e-05, 7.7764000000001e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.7764000000001e-05, 7.78189999999998e-05, 7.773600000000186e-05, 7.775000000000143e-05, 7.773699999999786e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.766600000000054e-05, 7.772199999999882e-05, 7.772199999999882e-05, 7.773600000000186e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.770799999999925e-05, 7.773600000000186e-05, 7.773600000000186e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.773600000000186e-05, 7.776399999999753e-05, 7.779200000000014e-05]</msg>
<status status="PASS" starttime="20201115 23:00:28.466" endtime="20201115 23:00:28.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.462" endtime="20201115 23:00:28.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.471" endtime="20201115 23:00:28.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.475" endtime="20201115 23:00:28.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.473" endtime="20201115 23:00:28.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.470" endtime="20201115 23:00:28.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.105" endtime="20201115 23:00:28.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.104" endtime="20201115 23:00:28.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.103" endtime="20201115 23:00:28.496"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.498" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.506" endtime="20201115 23:00:28.523"></status>
</kw>
<msg timestamp="20201115 23:00:28.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.505" endtime="20201115 23:00:28.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.524" endtime="20201115 23:00:28.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.527" endtime="20201115 23:00:28.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.502" endtime="20201115 23:00:28.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.500" endtime="20201115 23:00:28.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.535" endtime="20201115 23:00:28.822"></status>
</kw>
<msg timestamp="20201115 23:00:28.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023635194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023713764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.534" endtime="20201115 23:00:28.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023635194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023713764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.826" endtime="20201115 23:00:28.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.834" endtime="20201115 23:00:28.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.532" endtime="20201115 23:00:28.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.530" endtime="20201115 23:00:28.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.841" level="INFO">${RESULT} = [{'time': 0.023713764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.856999999999656e-05, 'source_diff': 7.856999999999656e-05}, {'time': 0.023818653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:28.838" endtime="20201115 23:00:28.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.855" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:28.842" endtime="20201115 23:00:28.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.859" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.858" endtime="20201115 23:00:28.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.861" level="INFO">VALUE: [7.856999999999656e-05, 7.773599999999839e-05, 7.773600000000186e-05, 7.772200000000229e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.7764000000001e-05, 7.773599999999839e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.773600000000186e-05, 7.774999999999796e-05, 7.777800000000057e-05, 7.7764000000001e-05, 7.776299999999806e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.780600000000318e-05, 7.774999999999796e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.776299999999806e-05, 7.773599999999839e-05, 7.777800000000057e-05, 7.774999999999796e-05, 7.783299999999937e-05, 7.774999999999796e-05, 7.774999999999796e-05, 7.774999999999796e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.7764000000001e-05, 7.773599999999839e-05, 7.780500000000024e-05, 7.777800000000057e-05, 7.773600000000186e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.770800000000272e-05, 7.774999999999796e-05, 7.7764000000001e-05, 7.770899999999872e-05, 7.776399999999753e-05, 7.773599999999839e-05]</msg>
<status status="PASS" starttime="20201115 23:00:28.860" endtime="20201115 23:00:28.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.855" endtime="20201115 23:00:28.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.864" endtime="20201115 23:00:28.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.868" endtime="20201115 23:00:28.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.866" endtime="20201115 23:00:28.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.863" endtime="20201115 23:00:28.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.499" endtime="20201115 23:00:28.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.497" endtime="20201115 23:00:28.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.496" endtime="20201115 23:00:28.889"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.891" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.900" endtime="20201115 23:00:28.916"></status>
</kw>
<msg timestamp="20201115 23:00:28.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.898" endtime="20201115 23:00:28.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.918" endtime="20201115 23:00:28.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.920" endtime="20201115 23:00:28.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.895" endtime="20201115 23:00:28.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.893" endtime="20201115 23:00:28.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.929" endtime="20201115 23:00:29.216"></status>
</kw>
<msg timestamp="20201115 23:00:29.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023620056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023698667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.927" endtime="20201115 23:00:29.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023620056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023698667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.220" endtime="20201115 23:00:29.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.228" endtime="20201115 23:00:29.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.925" endtime="20201115 23:00:29.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.923" endtime="20201115 23:00:29.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.235" level="INFO">${RESULT} = [{'time': 0.023698667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861099999999926e-05, 'source_diff': 7.861099999999926e-05}, {'time': 0.023791083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:29.232" endtime="20201115 23:00:29.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.248" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:29.236" endtime="20201115 23:00:29.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.253" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.252" endtime="20201115 23:00:29.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.255" level="INFO">VALUE: [7.861099999999926e-05, 7.77770000000011e-05, 7.772200000000229e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.773600000000186e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.773600000000186e-05, 7.773700000000133e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.776399999999753e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.770899999999872e-05, 7.780500000000024e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.781999999999928e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.776399999999753e-05, 7.7764000000001e-05, 7.776300000000153e-05, 7.773600000000186e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.774999999999796e-05, 7.7764000000001e-05, 7.772200000000229e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.772200000000229e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.77770000000011e-05]</msg>
<status status="PASS" starttime="20201115 23:00:29.254" endtime="20201115 23:00:29.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.249" endtime="20201115 23:00:29.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.258" endtime="20201115 23:00:29.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.262" endtime="20201115 23:00:29.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.260" endtime="20201115 23:00:29.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.256" endtime="20201115 23:00:29.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.892" endtime="20201115 23:00:29.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.890" endtime="20201115 23:00:29.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.889" endtime="20201115 23:00:29.283"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.285" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.295" endtime="20201115 23:00:29.312"></status>
</kw>
<msg timestamp="20201115 23:00:29.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.292" endtime="20201115 23:00:29.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.313" endtime="20201115 23:00:29.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.316" endtime="20201115 23:00:29.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.289" endtime="20201115 23:00:29.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.287" endtime="20201115 23:00:29.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.325" endtime="20201115 23:00:29.612"></status>
</kw>
<msg timestamp="20201115 23:00:29.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025598931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025677625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.323" endtime="20201115 23:00:29.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025598931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025677625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.616" endtime="20201115 23:00:29.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.624" endtime="20201115 23:00:29.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.321" endtime="20201115 23:00:29.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.319" endtime="20201115 23:00:29.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.631" level="INFO">${RESULT} = [{'time': 0.025677625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.869400000000068e-05, 'source_diff': 7.869400000000068e-05}, {'time': 0.025779028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:29.627" endtime="20201115 23:00:29.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.644" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:29.632" endtime="20201115 23:00:29.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.648" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.647" endtime="20201115 23:00:29.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.651" level="INFO">VALUE: [7.869400000000068e-05, 7.779200000000014e-05, 7.777800000000057e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.777800000000057e-05, 7.782000000000275e-05, 7.776399999999753e-05, 7.775000000000143e-05, 7.772199999999882e-05, 7.78189999999998e-05, 7.7764000000001e-05, 7.776399999999753e-05, 7.772199999999882e-05, 7.777800000000057e-05, 7.776299999999806e-05, 7.776399999999753e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.77770000000011e-05, 7.776399999999753e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.779200000000014e-05, 7.7764000000001e-05, 7.779200000000014e-05, 7.779200000000014e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.774999999999796e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.777800000000057e-05, 7.779200000000014e-05, 7.776299999999806e-05, 7.7764000000001e-05, 7.777800000000057e-05, 7.775000000000143e-05, 7.779100000000067e-05, 7.780599999999971e-05, 7.779200000000014e-05, 7.776399999999753e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.776399999999753e-05, 7.7764000000001e-05, 7.776399999999753e-05, 7.774999999999796e-05, 7.7764000000001e-05]</msg>
<status status="PASS" starttime="20201115 23:00:29.649" endtime="20201115 23:00:29.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.645" endtime="20201115 23:00:29.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.654" endtime="20201115 23:00:29.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.657" endtime="20201115 23:00:29.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.656" endtime="20201115 23:00:29.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.652" endtime="20201115 23:00:29.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.286" endtime="20201115 23:00:29.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.284" endtime="20201115 23:00:29.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.283" endtime="20201115 23:00:29.678"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.681" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.689" endtime="20201115 23:00:29.706"></status>
</kw>
<msg timestamp="20201115 23:00:29.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.687" endtime="20201115 23:00:29.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.707" endtime="20201115 23:00:29.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.710" endtime="20201115 23:00:29.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.685" endtime="20201115 23:00:29.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.683" endtime="20201115 23:00:29.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.719" endtime="20201115 23:00:30.004"></status>
</kw>
<msg timestamp="20201115 23:00:30.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023740333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023819014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.717" endtime="20201115 23:00:30.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023740333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023819014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.008" endtime="20201115 23:00:30.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.016" endtime="20201115 23:00:30.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.715" endtime="20201115 23:00:30.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.713" endtime="20201115 23:00:30.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.023" level="INFO">${RESULT} = [{'time': 0.023819014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.868100000000058e-05, 'source_diff': 7.868100000000058e-05}, {'time': 0.023912486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:30.020" endtime="20201115 23:00:30.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.037" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:30.024" endtime="20201115 23:00:30.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.042" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.041" endtime="20201115 23:00:30.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.044" level="INFO">VALUE: [7.868100000000058e-05, 7.820799999999975e-05, 7.7764000000001e-05, 7.788900000000112e-05, 7.780500000000024e-05, 7.776300000000153e-05, 7.776399999999753e-05, 7.776300000000153e-05, 7.775000000000143e-05, 7.825000000000193e-05, 7.786099999999851e-05, 7.774999999999796e-05, 7.77770000000011e-05, 7.773599999999839e-05, 7.777800000000057e-05, 7.776399999999753e-05, 7.812499999999833e-05, 7.775000000000143e-05, 7.793000000000036e-05, 7.774999999999796e-05, 7.774999999999796e-05, 7.773599999999839e-05, 7.774999999999796e-05, 7.800000000000168e-05, 7.773700000000133e-05, 7.77770000000011e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.816700000000051e-05, 7.772200000000229e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.776299999999806e-05, 7.79579999999995e-05, 7.788900000000112e-05, 7.826300000000203e-05, 7.808299999999962e-05, 7.775000000000143e-05, 7.7764000000001e-05, 7.812499999999833e-05, 7.776399999999753e-05, 7.769399999999968e-05, 7.780599999999971e-05, 7.797200000000254e-05, 7.780500000000024e-05, 7.819499999999965e-05, 7.773700000000133e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.043" endtime="20201115 23:00:30.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.038" endtime="20201115 23:00:30.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.047" endtime="20201115 23:00:30.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.051" endtime="20201115 23:00:30.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.049" endtime="20201115 23:00:30.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.046" endtime="20201115 23:00:30.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.681" endtime="20201115 23:00:30.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.680" endtime="20201115 23:00:30.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.679" endtime="20201115 23:00:30.072"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.074" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.083" endtime="20201115 23:00:30.099"></status>
</kw>
<msg timestamp="20201115 23:00:30.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.081" endtime="20201115 23:00:30.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.101" endtime="20201115 23:00:30.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.103" endtime="20201115 23:00:30.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.078" endtime="20201115 23:00:30.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.076" endtime="20201115 23:00:30.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.112" endtime="20201115 23:00:30.399"></status>
</kw>
<msg timestamp="20201115 23:00:30.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024145347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024223847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.111" endtime="20201115 23:00:30.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024145347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024223847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.403" endtime="20201115 23:00:30.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.412" endtime="20201115 23:00:30.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.108" endtime="20201115 23:00:30.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.107" endtime="20201115 23:00:30.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.418" level="INFO">${RESULT} = [{'time': 0.024223847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.849999999999871e-05, 'source_diff': 7.849999999999871e-05}, {'time': 0.024325361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:30.415" endtime="20201115 23:00:30.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.431" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:30.419" endtime="20201115 23:00:30.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.436" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.435" endtime="20201115 23:00:30.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.438" level="INFO">VALUE: [7.849999999999871e-05, 7.752800000000032e-05, 7.742999999999986e-05, 7.74449999999989e-05, 7.76389999999974e-05, 7.761100000000173e-05, 7.761099999999826e-05, 7.749999999999771e-05, 7.769499999999915e-05, 7.748599999999814e-05, 7.756999999999903e-05, 7.766700000000001e-05, 7.761100000000173e-05, 7.749999999999771e-05, 7.762499999999783e-05, 7.762499999999783e-05, 7.755599999999946e-05, 7.752700000000085e-05, 7.763900000000087e-05, 7.756899999999955e-05, 7.76380000000014e-05, 7.765300000000044e-05, 7.751400000000075e-05, 7.76389999999974e-05, 7.76250000000013e-05, 7.752700000000085e-05, 7.749999999999771e-05, 7.748600000000161e-05, 7.747300000000151e-05, 7.744500000000237e-05, 7.74440000000029e-05, 7.749999999999771e-05, 7.748599999999814e-05, 7.751400000000075e-05, 7.756899999999955e-05, 7.751400000000075e-05, 7.76250000000013e-05, 7.769399999999968e-05, 7.748599999999814e-05, 7.768000000000011e-05, 7.750000000000118e-05, 7.75839999999986e-05, 7.748700000000108e-05, 7.763900000000087e-05, 7.751400000000075e-05, 7.752800000000032e-05, 7.748600000000161e-05, 7.76380000000014e-05, 7.76250000000013e-05, 7.748599999999814e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.437" endtime="20201115 23:00:30.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.432" endtime="20201115 23:00:30.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.441" endtime="20201115 23:00:30.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.444" endtime="20201115 23:00:30.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.443" endtime="20201115 23:00:30.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.440" endtime="20201115 23:00:30.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.075" endtime="20201115 23:00:30.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.073" endtime="20201115 23:00:30.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.072" endtime="20201115 23:00:30.466"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.468" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.476" endtime="20201115 23:00:30.494"></status>
</kw>
<msg timestamp="20201115 23:00:30.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.475" endtime="20201115 23:00:30.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.495" endtime="20201115 23:00:30.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.498" endtime="20201115 23:00:30.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.472" endtime="20201115 23:00:30.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.470" endtime="20201115 23:00:30.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.507" endtime="20201115 23:00:30.815"></status>
</kw>
<msg timestamp="20201115 23:00:30.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024283014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.505" endtime="20201115 23:00:30.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024283014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.819" endtime="20201115 23:00:30.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.827" endtime="20201115 23:00:30.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.503" endtime="20201115 23:00:30.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.501" endtime="20201115 23:00:30.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.833" level="INFO">${RESULT} = [{'time': 0.024361667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.865300000000144e-05, 'source_diff': 7.865300000000144e-05}, {'time': 0.024471681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:30.830" endtime="20201115 23:00:30.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.846" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:30.834" endtime="20201115 23:00:30.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.851" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.850" endtime="20201115 23:00:30.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.853" level="INFO">VALUE: [7.865300000000144e-05, 7.755599999999946e-05, 7.76250000000013e-05, 7.78189999999998e-05, 7.756999999999903e-05, 7.763900000000087e-05, 7.756899999999955e-05, 7.780500000000024e-05, 9.93609999999992e-05, 7.854200000000089e-05, 9.901400000000143e-05, 7.850000000000218e-05, 7.756899999999955e-05, 9.900000000000186e-05, 7.862499999999883e-05, 9.900000000000186e-05, 9.981900000000099e-05, 7.84449999999999e-05, 7.75700000000025e-05, 7.756899999999955e-05, 7.761100000000173e-05, 9.898599999999882e-05, 9.980599999999742e-05, 7.850000000000218e-05, 9.901400000000143e-05, 9.98060000000009e-05, 9.980499999999795e-05, 9.98060000000009e-05, 9.976399999999871e-05, 7.843100000000033e-05, 7.776399999999753e-05, 9.900000000000186e-05, 7.855600000000046e-05, 7.76250000000013e-05, 9.901400000000143e-05, 7.843100000000033e-05, 9.898599999999882e-05, 9.980499999999795e-05, 7.855499999999752e-05, 9.893000000000055e-05, 7.836100000000248e-05, 7.763900000000087e-05, 7.780500000000024e-05, 7.756999999999903e-05, 7.765200000000097e-05, 7.76250000000013e-05, 9.895900000000263e-05, 9.982000000000046e-05, 9.976399999999871e-05, 7.858300000000012e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.852" endtime="20201115 23:00:30.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.847" endtime="20201115 23:00:30.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.857" endtime="20201115 23:00:30.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.860" endtime="20201115 23:00:30.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.859" endtime="20201115 23:00:30.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.855" endtime="20201115 23:00:30.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.469" endtime="20201115 23:00:30.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.467" endtime="20201115 23:00:30.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.466" endtime="20201115 23:00:30.881"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.884" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.892" endtime="20201115 23:00:30.910"></status>
</kw>
<msg timestamp="20201115 23:00:30.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.890" endtime="20201115 23:00:30.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.911" endtime="20201115 23:00:30.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.914" endtime="20201115 23:00:30.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.888" endtime="20201115 23:00:30.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.886" endtime="20201115 23:00:30.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.923" endtime="20201115 23:00:31.210"></status>
</kw>
<msg timestamp="20201115 23:00:31.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023752403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023852708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.921" endtime="20201115 23:00:31.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023752403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023852708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.214" endtime="20201115 23:00:31.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.222" endtime="20201115 23:00:31.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.919" endtime="20201115 23:00:31.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.917" endtime="20201115 23:00:31.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.229" level="INFO">${RESULT} = [{'time': 0.023852708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010030500000000192, 'source_diff': 0.00010030500000000192}, {'time': 0.023975861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:31.225" endtime="20201115 23:00:31.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.243" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:31.230" endtime="20201115 23:00:31.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.247" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.246" endtime="20201115 23:00:31.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.250" level="INFO">VALUE: [0.00010030500000000192, 9.980500000000142e-05, 9.981900000000099e-05, 9.975000000000261e-05, 9.982000000000046e-05, 9.98060000000009e-05, 9.980500000000142e-05, 9.979200000000132e-05, 9.987499999999927e-05, 9.980499999999795e-05, 9.983300000000056e-05, 9.984700000000013e-05, 9.974999999999914e-05, 9.987499999999927e-05, 9.981899999999752e-05, 9.982000000000046e-05, 9.98609999999997e-05, 9.98060000000009e-05, 9.979200000000132e-05, 9.98060000000009e-05, 9.980500000000142e-05, 9.973599999999957e-05, 9.982000000000046e-05, 9.983300000000056e-05, 9.98060000000009e-05, 9.980499999999795e-05, 9.98060000000009e-05, 9.980500000000142e-05, 9.981899999999752e-05, 9.981900000000099e-05, 9.981899999999752e-05, 9.980499999999795e-05, 9.98060000000009e-05, 9.976399999999871e-05, 9.979199999999785e-05, 9.980500000000142e-05, 9.98060000000009e-05, 9.979200000000132e-05, 9.980499999999795e-05, 9.979200000000132e-05, 9.980599999999742e-05, 9.977799999999828e-05, 9.981899999999752e-05, 9.98479999999996e-05, 9.977800000000175e-05, 9.981899999999752e-05, 9.983300000000056e-05, 9.980500000000142e-05, 9.98060000000009e-05, 9.980599999999742e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.248" endtime="20201115 23:00:31.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.243" endtime="20201115 23:00:31.251"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.253" endtime="20201115 23:00:31.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.257" endtime="20201115 23:00:31.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.255" endtime="20201115 23:00:31.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.252" endtime="20201115 23:00:31.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.884" endtime="20201115 23:00:31.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.883" endtime="20201115 23:00:31.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.882" endtime="20201115 23:00:31.278"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.280" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.288" endtime="20201115 23:00:31.306"></status>
</kw>
<msg timestamp="20201115 23:00:31.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.286" endtime="20201115 23:00:31.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.308" endtime="20201115 23:00:31.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.310" endtime="20201115 23:00:31.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.284" endtime="20201115 23:00:31.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.282" endtime="20201115 23:00:31.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.319" endtime="20201115 23:00:31.606"></status>
</kw>
<msg timestamp="20201115 23:00:31.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023865667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023966042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.318" endtime="20201115 23:00:31.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023865667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023966042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.610" endtime="20201115 23:00:31.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.618" endtime="20201115 23:00:31.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.315" endtime="20201115 23:00:31.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.313" endtime="20201115 23:00:31.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.625" level="INFO">${RESULT} = [{'time': 0.023966042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010037499999999977, 'source_diff': 0.00010037499999999977}, {'time': 0.024080486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:31.622" endtime="20201115 23:00:31.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.640" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:31.626" endtime="20201115 23:00:31.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.644" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.643" endtime="20201115 23:00:31.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.647" level="INFO">VALUE: [0.00010037499999999977, 9.980500000000142e-05, 9.98060000000009e-05, 9.98060000000009e-05, 9.982000000000046e-05, 9.982000000000046e-05, 9.980500000000142e-05, 9.979200000000132e-05, 9.98060000000009e-05, 9.982000000000046e-05, 9.979200000000132e-05, 9.979100000000185e-05, 9.980500000000142e-05, 9.98060000000009e-05, 9.981899999999752e-05, 9.983400000000003e-05, 9.984700000000013e-05, 9.982000000000046e-05, 9.982000000000046e-05, 9.983300000000056e-05, 9.982000000000046e-05, 9.98060000000009e-05, 9.988899999999884e-05, 9.9819999999997e-05, 9.981900000000099e-05, 9.979199999999785e-05, 9.976400000000218e-05, 9.977699999999881e-05, 9.979100000000185e-05, 9.982000000000046e-05, 9.983400000000003e-05, 9.979199999999785e-05, 9.979199999999785e-05, 9.982000000000046e-05, 9.982000000000046e-05, 9.98060000000009e-05, 9.979200000000132e-05, 9.98060000000009e-05, 9.987499999999927e-05, 9.980499999999795e-05, 9.980500000000142e-05, 9.979200000000132e-05, 9.982000000000046e-05, 9.98060000000009e-05, 9.981900000000099e-05, 9.98060000000009e-05, 9.979200000000132e-05, 9.984699999999666e-05, 9.98060000000009e-05, 9.979100000000185e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.645" endtime="20201115 23:00:31.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.641" endtime="20201115 23:00:31.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.650" endtime="20201115 23:00:31.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.653" endtime="20201115 23:00:31.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.652" endtime="20201115 23:00:31.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.648" endtime="20201115 23:00:31.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.281" endtime="20201115 23:00:31.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.279" endtime="20201115 23:00:31.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.278" endtime="20201115 23:00:31.674"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.677" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.685" endtime="20201115 23:00:31.703"></status>
</kw>
<msg timestamp="20201115 23:00:31.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.683" endtime="20201115 23:00:31.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.704" endtime="20201115 23:00:31.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.706" endtime="20201115 23:00:31.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.681" endtime="20201115 23:00:31.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.679" endtime="20201115 23:00:31.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.715" endtime="20201115 23:00:32.000"></status>
</kw>
<msg timestamp="20201115 23:00:32.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023669611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023769958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.714" endtime="20201115 23:00:32.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023669611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023769958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.004" endtime="20201115 23:00:32.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.013" endtime="20201115 23:00:32.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.711" endtime="20201115 23:00:32.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.710" endtime="20201115 23:00:32.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.019" level="INFO">${RESULT} = [{'time': 0.023769958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010034700000000063, 'source_diff': 0.00010034700000000063}, {'time': 0.023898431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:32.016" endtime="20201115 23:00:32.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.032" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:32.020" endtime="20201115 23:00:32.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.037" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.036" endtime="20201115 23:00:32.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.039" level="INFO">VALUE: [0.00010034700000000063, 9.982000000000046e-05, 9.9819999999997e-05, 9.981900000000099e-05, 9.976399999999871e-05, 9.981900000000099e-05, 9.98479999999996e-05, 9.979200000000132e-05, 9.976399999999871e-05, 9.9819999999997e-05, 9.980599999999742e-05, 9.98060000000009e-05, 9.979199999999785e-05, 9.98060000000009e-05, 9.980500000000142e-05, 9.982000000000046e-05, 9.981900000000099e-05, 9.9722e-05, 9.982000000000046e-05, 9.98060000000009e-05, 9.98060000000009e-05, 9.981900000000099e-05, 9.982000000000046e-05, 9.98060000000009e-05, 9.980500000000142e-05, 9.981900000000099e-05, 9.980500000000142e-05, 9.980499999999795e-05, 9.981900000000099e-05, 9.975000000000261e-05, 9.981900000000099e-05, 9.981900000000099e-05, 9.979099999999838e-05, 9.976400000000218e-05, 9.983400000000003e-05, 9.980599999999742e-05, 9.982000000000046e-05, 9.981899999999752e-05, 9.977800000000175e-05, 9.974999999999914e-05, 9.983400000000003e-05, 9.982000000000046e-05, 9.98060000000009e-05, 9.979099999999838e-05, 9.980599999999742e-05, 9.981900000000099e-05, 9.983300000000056e-05, 9.976399999999871e-05, 9.98060000000009e-05, 9.983400000000003e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.038" endtime="20201115 23:00:32.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.033" endtime="20201115 23:00:32.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.042" endtime="20201115 23:00:32.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.046" endtime="20201115 23:00:32.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.044" endtime="20201115 23:00:32.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.041" endtime="20201115 23:00:32.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.677" endtime="20201115 23:00:32.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.675" endtime="20201115 23:00:32.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.675" endtime="20201115 23:00:32.067"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.069" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.077" endtime="20201115 23:00:32.095"></status>
</kw>
<msg timestamp="20201115 23:00:32.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.076" endtime="20201115 23:00:32.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.097" endtime="20201115 23:00:32.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.099" endtime="20201115 23:00:32.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.073" endtime="20201115 23:00:32.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.071" endtime="20201115 23:00:32.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.108" endtime="20201115 23:00:32.396"></status>
</kw>
<msg timestamp="20201115 23:00:32.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023781014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023881389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.106" endtime="20201115 23:00:32.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023781014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023881389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.400" endtime="20201115 23:00:32.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.408" endtime="20201115 23:00:32.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.104" endtime="20201115 23:00:32.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.102" endtime="20201115 23:00:32.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.415" level="INFO">${RESULT} = [{'time': 0.023881389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010037499999999977, 'source_diff': 0.00010037499999999977}, {'time': 0.024003042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:32.411" endtime="20201115 23:00:32.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.428" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:32.416" endtime="20201115 23:00:32.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.432" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.431" endtime="20201115 23:00:32.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.435" level="INFO">VALUE: [0.00010037499999999977, 9.98609999999997e-05, 9.981900000000099e-05, 9.983400000000003e-05, 9.981900000000099e-05, 9.979200000000132e-05, 9.977800000000175e-05, 9.980499999999795e-05, 9.983299999999709e-05, 9.982000000000046e-05, 9.980599999999742e-05, 9.976399999999871e-05, 9.977700000000228e-05, 9.980499999999795e-05, 9.976300000000271e-05, 9.980599999999742e-05, 9.982000000000046e-05, 9.983400000000003e-05, 9.981900000000099e-05, 9.982000000000046e-05, 9.982000000000046e-05, 9.984700000000013e-05, 9.983299999999709e-05, 9.98060000000009e-05, 9.98479999999996e-05, 9.9819999999997e-05, 9.987499999999927e-05, 9.982000000000046e-05, 9.980500000000142e-05, 9.988899999999884e-05, 9.981899999999752e-05, 9.981900000000099e-05, 9.980500000000142e-05, 9.9819999999997e-05, 9.979100000000185e-05, 9.98060000000009e-05, 9.98060000000009e-05, 9.981900000000099e-05, 9.98060000000009e-05, 9.980599999999742e-05, 9.981900000000099e-05, 9.990199999999894e-05, 9.98060000000009e-05, 9.982000000000046e-05, 9.983300000000056e-05, 9.981900000000099e-05, 9.977799999999828e-05, 9.981899999999752e-05, 9.98479999999996e-05, 9.982000000000046e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.433" endtime="20201115 23:00:32.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.429" endtime="20201115 23:00:32.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.438" endtime="20201115 23:00:32.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.441" endtime="20201115 23:00:32.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.440" endtime="20201115 23:00:32.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.436" endtime="20201115 23:00:32.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.070" endtime="20201115 23:00:32.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.068" endtime="20201115 23:00:32.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.067" endtime="20201115 23:00:32.462"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.465" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.473" endtime="20201115 23:00:32.491"></status>
</kw>
<msg timestamp="20201115 23:00:32.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.471" endtime="20201115 23:00:32.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.492" endtime="20201115 23:00:32.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.495" endtime="20201115 23:00:32.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.469" endtime="20201115 23:00:32.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.466" endtime="20201115 23:00:32.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.504" endtime="20201115 23:00:32.790"></status>
</kw>
<msg timestamp="20201115 23:00:32.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023732292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023832681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.502" endtime="20201115 23:00:32.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023732292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023832681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.795" endtime="20201115 23:00:32.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.803" endtime="20201115 23:00:32.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.500" endtime="20201115 23:00:32.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.498" endtime="20201115 23:00:32.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.810" level="INFO">${RESULT} = [{'time': 0.023832681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010038900000000281, 'source_diff': 0.00010038900000000281}, {'time': 0.023954014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:32.806" endtime="20201115 23:00:32.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.823" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:32.811" endtime="20201115 23:00:32.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.828" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.827" endtime="20201115 23:00:32.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.830" level="INFO">VALUE: [0.00010038900000000281, 9.983300000000056e-05, 9.980599999999742e-05, 9.983300000000056e-05, 9.976399999999871e-05, 9.984800000000307e-05, 9.981900000000099e-05, 9.98060000000009e-05, 9.983300000000056e-05, 9.979100000000185e-05, 9.98060000000009e-05, 9.979099999999838e-05, 9.982000000000046e-05, 9.983300000000056e-05, 9.987499999999927e-05, 9.98479999999996e-05, 9.983300000000056e-05, 9.983300000000056e-05, 9.981900000000099e-05, 9.98060000000009e-05, 9.983300000000056e-05, 9.983300000000056e-05, 9.982000000000046e-05, 9.981900000000099e-05, 9.98609999999997e-05, 9.983300000000056e-05, 9.984700000000013e-05, 9.979199999999785e-05, 9.981900000000099e-05, 9.977700000000228e-05, 9.982000000000046e-05, 9.982000000000046e-05, 9.983300000000056e-05, 9.987499999999927e-05, 9.977799999999828e-05, 9.976400000000218e-05, 9.987499999999927e-05, 9.981900000000099e-05, 9.98060000000009e-05, 9.984700000000013e-05, 9.983300000000056e-05, 9.980599999999742e-05, 9.975000000000261e-05, 9.975000000000261e-05, 9.98060000000009e-05, 9.981899999999752e-05, 9.983300000000056e-05, 9.981900000000099e-05, 9.981899999999752e-05, 9.982000000000046e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.829" endtime="20201115 23:00:32.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.824" endtime="20201115 23:00:32.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.833" endtime="20201115 23:00:32.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.837" endtime="20201115 23:00:32.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.835" endtime="20201115 23:00:32.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.832" endtime="20201115 23:00:32.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.465" endtime="20201115 23:00:32.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.463" endtime="20201115 23:00:32.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.463" endtime="20201115 23:00:32.858"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.861" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.869" endtime="20201115 23:00:32.891"></status>
</kw>
<msg timestamp="20201115 23:00:32.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.868" endtime="20201115 23:00:32.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.895" endtime="20201115 23:00:32.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.900" endtime="20201115 23:00:32.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.864" endtime="20201115 23:00:32.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.862" endtime="20201115 23:00:32.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.919" endtime="20201115 23:00:33.214"></status>
</kw>
<msg timestamp="20201115 23:00:33.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024590583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024690931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.916" endtime="20201115 23:00:33.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024590583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024690931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.218" endtime="20201115 23:00:33.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.227" endtime="20201115 23:00:33.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.911" endtime="20201115 23:00:33.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.907" endtime="20201115 23:00:33.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.233" level="INFO">${RESULT} = [{'time': 0.024690931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001003480000000001, 'source_diff': 0.0001003480000000001}, {'time': 0.024821569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:33.230" endtime="20201115 23:00:33.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.248" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:33.234" endtime="20201115 23:00:33.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.253" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.252" endtime="20201115 23:00:33.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.255" level="INFO">VALUE: [0.0001003480000000001, 9.980500000000142e-05, 9.9819999999997e-05, 9.9722e-05, 9.976399999999871e-05, 9.981900000000099e-05, 9.979200000000132e-05, 9.980500000000142e-05, 9.982000000000046e-05, 9.976399999999871e-05, 9.979199999999785e-05, 9.980599999999742e-05, 9.98060000000009e-05, 9.98060000000009e-05, 9.981900000000099e-05, 9.982000000000046e-05, 9.981900000000099e-05, 9.980499999999795e-05, 9.98060000000009e-05, 9.98060000000009e-05, 9.975000000000261e-05, 9.981899999999752e-05, 9.979200000000132e-05, 9.980500000000142e-05, 9.979200000000132e-05, 9.98060000000009e-05, 9.982000000000046e-05, 9.981900000000099e-05, 9.979200000000132e-05, 9.979200000000132e-05, 9.980499999999795e-05, 9.979200000000132e-05, 9.98060000000009e-05, 9.977799999999828e-05, 9.98060000000009e-05, 9.977800000000175e-05, 9.98060000000009e-05, 9.979200000000132e-05, 9.98060000000009e-05, 9.979199999999785e-05, 9.983400000000003e-05, 9.982000000000046e-05, 9.980499999999795e-05, 9.981900000000099e-05, 9.977699999999881e-05, 9.977799999999828e-05, 9.979200000000132e-05, 9.979200000000132e-05, 9.980499999999795e-05, 9.979200000000132e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.254" endtime="20201115 23:00:33.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.249" endtime="20201115 23:00:33.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.269" endtime="20201115 23:00:33.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.273" endtime="20201115 23:00:33.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.272" endtime="20201115 23:00:33.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.267" endtime="20201115 23:00:33.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.861" endtime="20201115 23:00:33.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.859" endtime="20201115 23:00:33.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.858" endtime="20201115 23:00:33.295"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.297" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.305" endtime="20201115 23:00:33.323"></status>
</kw>
<msg timestamp="20201115 23:00:33.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.304" endtime="20201115 23:00:33.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.325" endtime="20201115 23:00:33.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.327" endtime="20201115 23:00:33.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.301" endtime="20201115 23:00:33.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.299" endtime="20201115 23:00:33.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.336" endtime="20201115 23:00:33.622"></status>
</kw>
<msg timestamp="20201115 23:00:33.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024238972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024339347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.335" endtime="20201115 23:00:33.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024238972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024339347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.626" endtime="20201115 23:00:33.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.635" endtime="20201115 23:00:33.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.332" endtime="20201115 23:00:33.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.330" endtime="20201115 23:00:33.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.641" level="INFO">${RESULT} = [{'time': 0.024339347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010037499999999977, 'source_diff': 0.00010037499999999977}, {'time': 0.024452792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:33.638" endtime="20201115 23:00:33.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.655" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:33.642" endtime="20201115 23:00:33.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.659" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.658" endtime="20201115 23:00:33.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.662" level="INFO">VALUE: [0.00010037499999999977, 9.976400000000218e-05, 9.981900000000099e-05, 9.987500000000274e-05, 9.982000000000046e-05, 9.96939999999974e-05, 9.973599999999957e-05, 9.98060000000009e-05, 9.980500000000142e-05, 9.98609999999997e-05, 9.973599999999957e-05, 9.98060000000009e-05, 9.988899999999884e-05, 9.991700000000145e-05, 9.980599999999742e-05, 9.98479999999996e-05, 9.976399999999871e-05, 9.98060000000009e-05, 9.982000000000046e-05, 9.974999999999914e-05, 9.976399999999871e-05, 9.983300000000056e-05, 9.973600000000304e-05, 9.981900000000099e-05, 9.976399999999871e-05, 9.988899999999884e-05, 9.980499999999795e-05, 9.987499999999927e-05, 9.976399999999871e-05, 9.984700000000013e-05, 9.973599999999957e-05, 9.975000000000261e-05, 9.974999999999914e-05, 9.979199999999785e-05, 9.96800000000013e-05, 9.973599999999957e-05, 9.976399999999871e-05, 9.98060000000009e-05, 9.974999999999914e-05, 9.988799999999937e-05, 9.979100000000185e-05, 9.973599999999957e-05, 9.980499999999795e-05, 9.979200000000132e-05, 9.973699999999905e-05, 9.976400000000218e-05, 9.982000000000046e-05, 9.973599999999957e-05, 9.975000000000261e-05, 9.976399999999871e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.660" endtime="20201115 23:00:33.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.655" endtime="20201115 23:00:33.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.665" endtime="20201115 23:00:33.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.669" endtime="20201115 23:00:33.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.667" endtime="20201115 23:00:33.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.663" endtime="20201115 23:00:33.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.298" endtime="20201115 23:00:33.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.296" endtime="20201115 23:00:33.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.295" endtime="20201115 23:00:33.693"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.698" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.715" endtime="20201115 23:00:33.735"></status>
</kw>
<msg timestamp="20201115 23:00:33.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.712" endtime="20201115 23:00:33.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.738" endtime="20201115 23:00:33.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.743" endtime="20201115 23:00:33.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.706" endtime="20201115 23:00:33.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.702" endtime="20201115 23:00:33.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.762" endtime="20201115 23:00:34.052"></status>
</kw>
<msg timestamp="20201115 23:00:34.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039595375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039694847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.759" endtime="20201115 23:00:34.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039595375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039694847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.056" endtime="20201115 23:00:34.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.064" endtime="20201115 23:00:34.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.753" endtime="20201115 23:00:34.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.750" endtime="20201115 23:00:34.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.071" level="INFO">${RESULT} = [{'time': 0.039694847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.947199999999629e-05, 'source_diff': 9.947199999999629e-05}, {'time': 0.039820819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:34.068" endtime="20201115 23:00:34.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.084" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:34.072" endtime="20201115 23:00:34.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.089" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.087" endtime="20201115 23:00:34.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.091" level="INFO">VALUE: [9.947199999999629e-05, 9.888799999999837e-05, 9.888900000000478e-05, 9.888899999999784e-05, 9.994400000000458e-05, 9.867999999999683e-05, 9.991699999999798e-05, 9.877800000000075e-05, 9.923600000000254e-05, 9.931999999999996e-05, 9.888899999999784e-05, 9.890299999999741e-05, 9.994499999999712e-05, 9.883299999999956e-05, 9.893100000000349e-05, 9.888900000000478e-05, 9.892999999999708e-05, 9.927800000000125e-05, 9.884699999999913e-05, 9.884699999999913e-05, 9.893100000000349e-05, 9.888899999999784e-05, 9.927800000000125e-05, 9.879200000000032e-05, 9.888899999999784e-05, 9.925000000000211e-05, 9.924999999999518e-05, 9.880500000000042e-05, 9.99730000000032e-05, 9.875000000000161e-05, 9.888799999999837e-05, 9.887499999999827e-05, 9.887499999999827e-05, 9.88330000000065e-05, 9.887499999999827e-05, 9.888899999999784e-05, 9.992999999999808e-05, 9.875000000000161e-05, 9.890300000000435e-05, 9.890300000000435e-05, 9.894399999999665e-05, 9.924999999999518e-05, 9.89159999999975e-05, 9.888900000000478e-05, 9.922200000000297e-05, 9.887499999999827e-05, 9.926400000000168e-05, 9.888900000000478e-05, 9.933300000000006e-05, 9.926400000000168e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.090" endtime="20201115 23:00:34.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.085" endtime="20201115 23:00:34.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.095" endtime="20201115 23:00:34.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.098" endtime="20201115 23:00:34.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.097" endtime="20201115 23:00:34.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.093" endtime="20201115 23:00:34.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.699" endtime="20201115 23:00:34.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.695" endtime="20201115 23:00:34.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.694" endtime="20201115 23:00:34.119"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.122" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.130" endtime="20201115 23:00:34.148"></status>
</kw>
<msg timestamp="20201115 23:00:34.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.128" endtime="20201115 23:00:34.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.149" endtime="20201115 23:00:34.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.152" endtime="20201115 23:00:34.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.126" endtime="20201115 23:00:34.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.124" endtime="20201115 23:00:34.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.160" endtime="20201115 23:00:34.447"></status>
</kw>
<msg timestamp="20201115 23:00:34.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023766764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023879167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.159" endtime="20201115 23:00:34.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023766764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023879167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.451" endtime="20201115 23:00:34.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.460" endtime="20201115 23:00:34.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.156" endtime="20201115 23:00:34.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.155" endtime="20201115 23:00:34.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.466" level="INFO">${RESULT} = [{'time': 0.023879167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001124030000000005, 'source_diff': 0.0001124030000000005}, {'time': 0.023997653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:34.463" endtime="20201115 23:00:34.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.480" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:34.468" endtime="20201115 23:00:34.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.484" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.483" endtime="20201115 23:00:34.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.487" level="INFO">VALUE: [0.0001124030000000005, 9.98060000000009e-05, 9.993099999999755e-05, 9.997299999999973e-05, 9.994399999999765e-05, 9.990300000000188e-05, 9.98609999999997e-05, 9.980500000000142e-05, 9.984700000000013e-05, 9.984700000000013e-05, 9.98609999999997e-05, 9.987499999999927e-05, 0.00011170899999999803, 0.00011211099999999807, 9.970800000000044e-05, 9.984700000000013e-05, 9.993000000000155e-05, 9.983300000000056e-05, 0.00011168099999999889, 0.00011206899999999936, 9.974999999999914e-05, 9.990199999999894e-05, 9.991699999999798e-05, 0.00011170799999999856, 9.980500000000142e-05, 0.0001117090000000015, 0.00011206899999999936, 0.00011206900000000283, 0.00010001400000000243, 9.997200000000026e-05, 0.00011170800000000203, 9.981899999999752e-05, 9.987499999999927e-05, 9.98609999999997e-05, 9.98609999999997e-05, 0.00011169500000000193, 9.98479999999996e-05, 9.979099999999838e-05, 9.98609999999997e-05, 9.982000000000046e-05, 0.00011170899999999803, 9.987499999999927e-05, 9.987499999999927e-05, 9.99159999999985e-05, 9.984700000000013e-05, 9.983300000000056e-05, 9.998599999999983e-05, 9.993100000000102e-05, 9.987499999999927e-05, 9.977699999999881e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.485" endtime="20201115 23:00:34.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.481" endtime="20201115 23:00:34.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.490" endtime="20201115 23:00:34.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.493" endtime="20201115 23:00:34.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.492" endtime="20201115 23:00:34.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.488" endtime="20201115 23:00:34.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.122" endtime="20201115 23:00:34.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.120" endtime="20201115 23:00:34.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.120" endtime="20201115 23:00:34.514"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.517" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.525" endtime="20201115 23:00:34.543"></status>
</kw>
<msg timestamp="20201115 23:00:34.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.523" endtime="20201115 23:00:34.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.545" endtime="20201115 23:00:34.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.547" endtime="20201115 23:00:34.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.521" endtime="20201115 23:00:34.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.519" endtime="20201115 23:00:34.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.556" endtime="20201115 23:00:34.842"></status>
</kw>
<msg timestamp="20201115 23:00:34.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023764667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023877125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.554" endtime="20201115 23:00:34.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023764667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023877125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.846" endtime="20201115 23:00:34.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.855" endtime="20201115 23:00:34.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.552" endtime="20201115 23:00:34.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.550" endtime="20201115 23:00:34.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.861" level="INFO">${RESULT} = [{'time': 0.023877125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011245799999999931, 'source_diff': 0.00011245799999999931}, {'time': 0.024004458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:34.858" endtime="20201115 23:00:34.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.876" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:34.862" endtime="20201115 23:00:34.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.880" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.879" endtime="20201115 23:00:34.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.883" level="INFO">VALUE: [0.00011245799999999931, 0.0001120549999999998, 0.0001120549999999998, 0.00011209700000000197, 0.0001120700000000023, 0.00011209799999999798, 0.00011208299999999893, 0.00011209700000000197, 0.00011209700000000197, 0.00011208299999999893, 0.0001120830000000024, 0.0001120969999999985, 0.00011208299999999893, 0.00011202800000000013, 0.0001120969999999985, 0.0001120969999999985, 0.00011209700000000197, 0.00011205599999999927, 0.00011208399999999841, 0.00011211099999999807, 0.00011205600000000274, 0.00011206899999999936, 0.00011208400000000188, 0.00011208399999999841, 0.00011209700000000197, 0.0001120549999999998, 0.00011205599999999927, 0.0001120549999999998, 0.00011198600000000142, 0.00011206900000000283, 0.00011205599999999927, 0.00011213900000000068, 0.00011208299999999893, 0.00011208299999999893, 0.00011209700000000197, 0.00011208400000000188, 0.00011208399999999841, 0.0001120549999999998, 0.00011205599999999927, 0.00011206899999999936, 0.00011211100000000154, 0.00011206899999999936, 0.00011208299999999893, 0.0001120830000000024, 0.0001120549999999998, 0.0001120419999999997, 0.00011208399999999841, 0.00011205599999999927, 0.00011208399999999841, 0.0001120419999999997]</msg>
<status status="PASS" starttime="20201115 23:00:34.881" endtime="20201115 23:00:34.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.877" endtime="20201115 23:00:34.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.886" endtime="20201115 23:00:34.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.889" endtime="20201115 23:00:34.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.888" endtime="20201115 23:00:34.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.884" endtime="20201115 23:00:34.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.517" endtime="20201115 23:00:34.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.515" endtime="20201115 23:00:34.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.515" endtime="20201115 23:00:34.910"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.912" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.921" endtime="20201115 23:00:34.939"></status>
</kw>
<msg timestamp="20201115 23:00:34.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.919" endtime="20201115 23:00:34.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.941" endtime="20201115 23:00:34.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.943" endtime="20201115 23:00:34.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.916" endtime="20201115 23:00:34.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.914" endtime="20201115 23:00:34.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.952" endtime="20201115 23:00:35.239"></status>
</kw>
<msg timestamp="20201115 23:00:35.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023694208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023806639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.950" endtime="20201115 23:00:35.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023694208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023806639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.243" endtime="20201115 23:00:35.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.251" endtime="20201115 23:00:35.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.948" endtime="20201115 23:00:35.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.946" endtime="20201115 23:00:35.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.257" level="INFO">${RESULT} = [{'time': 0.023806639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011243099999999964, 'source_diff': 0.00011243099999999964}, {'time': 0.023933972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:35.254" endtime="20201115 23:00:35.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.270" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:35.258" endtime="20201115 23:00:35.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.275" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.274" endtime="20201115 23:00:35.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.277" level="INFO">VALUE: [0.00011243099999999964, 0.0001120830000000024, 0.00011206999999999884, 0.00011206899999999936, 0.0001120830000000024, 0.00011205599999999927, 0.00011206999999999884, 0.00011206999999999884, 0.0001120549999999998, 0.00011208299999999893, 0.0001120700000000023, 0.00011202800000000013, 0.0001120700000000023, 0.00011213900000000068, 0.0001120969999999985, 0.00011212500000000111, 0.0001120969999999985, 0.00011205599999999927, 0.00011208299999999893, 0.00011208400000000188, 0.0001120969999999985, 0.00011202800000000013, 0.00011213900000000068, 0.00011206999999999884, 0.00011206899999999936, 0.00011202800000000013, 0.0001120969999999985, 0.00011208299999999893, 0.00011211100000000154, 0.0001120969999999985, 0.00011208399999999841, 0.00011208299999999893, 0.00011209700000000197, 0.00011208399999999841, 0.00011206899999999936, 0.00011209800000000145, 0.00011206999999999884, 0.00011208299999999893, 0.0001120969999999985, 0.00011208400000000188, 0.00011208299999999893, 0.00011212500000000111, 0.00011209799999999798, 0.0001120700000000023, 0.0001120700000000023, 0.00011202800000000013, 0.00011209700000000197, 0.00011206899999999936, 0.00011209700000000197, 0.00011208399999999841]</msg>
<status status="PASS" starttime="20201115 23:00:35.276" endtime="20201115 23:00:35.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.271" endtime="20201115 23:00:35.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.280" endtime="20201115 23:00:35.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.284" endtime="20201115 23:00:35.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.282" endtime="20201115 23:00:35.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.279" endtime="20201115 23:00:35.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.913" endtime="20201115 23:00:35.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.911" endtime="20201115 23:00:35.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.911" endtime="20201115 23:00:35.305"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.307" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.315" endtime="20201115 23:00:35.334"></status>
</kw>
<msg timestamp="20201115 23:00:35.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.314" endtime="20201115 23:00:35.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.335" endtime="20201115 23:00:35.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.338" endtime="20201115 23:00:35.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.311" endtime="20201115 23:00:35.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.309" endtime="20201115 23:00:35.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.347" endtime="20201115 23:00:35.634"></status>
</kw>
<msg timestamp="20201115 23:00:35.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023928361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024040833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.346" endtime="20201115 23:00:35.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023928361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024040833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.638" endtime="20201115 23:00:35.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.646" endtime="20201115 23:00:35.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.343" endtime="20201115 23:00:35.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.341" endtime="20201115 23:00:35.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.653" level="INFO">${RESULT} = [{'time': 0.024040833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011247200000000235, 'source_diff': 0.00011247200000000235}, {'time': 0.024185347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:35.650" endtime="20201115 23:00:35.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.666" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:35.654" endtime="20201115 23:00:35.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.670" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.669" endtime="20201115 23:00:35.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.672" level="INFO">VALUE: [0.00011247200000000235, 0.00011211099999999807, 0.00011208299999999893, 0.00011208299999999893, 0.0001120830000000024, 0.0001120419999999997, 0.00011208299999999893, 0.0001120830000000024, 0.00011209700000000197, 0.00011208399999999841, 0.0001120830000000024, 0.00011211099999999807, 0.00011209800000000145, 0.0001120969999999985, 0.00011208399999999841, 0.00011206899999999936, 0.00011206899999999936, 0.00011208400000000188, 0.00011206899999999936, 0.00011208299999999893, 0.00011205600000000274, 0.00011205600000000274, 0.00011204100000000022, 0.0001120419999999997, 0.0001120549999999998, 0.00011200000000000099, 0.00011208400000000188, 0.00011209700000000197, 0.00011209700000000197, 0.0001120969999999985, 0.00011212499999999764, 0.00011208299999999893, 0.00011209799999999798, 0.00011206999999999884, 0.00011211200000000102, 0.00011209700000000197, 0.00011209700000000197, 0.00011208399999999841, 0.00011202800000000013, 0.00011211100000000154, 0.00011209700000000197, 0.00011209700000000197, 0.0001120969999999985, 0.00011208299999999893, 0.00011211100000000154, 0.00011209700000000197, 0.00011208400000000188, 0.0001120549999999998, 0.00011206999999999884, 0.0001120969999999985]</msg>
<status status="PASS" starttime="20201115 23:00:35.671" endtime="20201115 23:00:35.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.666" endtime="20201115 23:00:35.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.676" endtime="20201115 23:00:35.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.679" endtime="20201115 23:00:35.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.677" endtime="20201115 23:00:35.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.674" endtime="20201115 23:00:35.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.308" endtime="20201115 23:00:35.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.306" endtime="20201115 23:00:35.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.305" endtime="20201115 23:00:35.700"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.702" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.715" endtime="20201115 23:00:35.734"></status>
</kw>
<msg timestamp="20201115 23:00:35.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.714" endtime="20201115 23:00:35.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.735" endtime="20201115 23:00:35.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.738" endtime="20201115 23:00:35.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.711" endtime="20201115 23:00:35.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.704" endtime="20201115 23:00:35.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.747" endtime="20201115 23:00:36.033"></status>
</kw>
<msg timestamp="20201115 23:00:36.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028653375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028765861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.745" endtime="20201115 23:00:36.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028653375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028765861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.037" endtime="20201115 23:00:36.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.045" endtime="20201115 23:00:36.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.743" endtime="20201115 23:00:36.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.741" endtime="20201115 23:00:36.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.052" level="INFO">${RESULT} = [{'time': 0.028765861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011248600000000192, 'source_diff': 0.00011248600000000192}, {'time': 0.028909097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:36.049" endtime="20201115 23:00:36.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.065" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:36.053" endtime="20201115 23:00:36.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.069" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.068" endtime="20201115 23:00:36.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.072" level="INFO">VALUE: [0.00011248600000000192, 0.0001120830000000024, 0.0001120969999999985, 0.00011208299999999893, 0.0001120700000000023, 0.00011206899999999936, 0.00011209700000000197, 0.0001120830000000024, 0.0001120830000000024, 0.00011201400000000056, 0.00011212499999999764, 0.00011213899999999721, 0.00011208400000000188, 0.00011208299999999893, 0.00011206999999999884, 0.00011208399999999841, 0.0001120419999999997, 0.00011212500000000111, 0.00011208299999999893, 0.00011206899999999936, 0.00011205599999999927, 0.00011209799999999798, 0.00011206999999999884, 0.00011211099999999807, 0.00011206899999999936, 0.00011209700000000544, 0.00011213900000000415, 0.00011208299999999893, 0.0001120969999999985, 0.00011212499999999764, 0.00011211100000000501, 0.00011208299999999893, 0.00011211100000000501, 0.00011208299999999893, 0.00011202800000000013, 0.0001120969999999985, 0.00011208399999999841, 0.0001120969999999985, 0.00011206999999999884, 0.0001120969999999985, 0.00011206999999999884, 0.00011208299999999893, 0.00011200000000000099, 0.00011205599999999927, 0.00011205599999999927, 0.00011211100000000501, 0.00011208299999999893, 0.00011208300000000587, 0.00011208300000000587, 0.0001120969999999985]</msg>
<status status="PASS" starttime="20201115 23:00:36.070" endtime="20201115 23:00:36.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.066" endtime="20201115 23:00:36.073"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.075" endtime="20201115 23:00:36.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.079" endtime="20201115 23:00:36.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.077" endtime="20201115 23:00:36.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.073" endtime="20201115 23:00:36.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.703" endtime="20201115 23:00:36.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.701" endtime="20201115 23:00:36.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.700" endtime="20201115 23:00:36.100"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.102" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.110" endtime="20201115 23:00:36.129"></status>
</kw>
<msg timestamp="20201115 23:00:36.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.109" endtime="20201115 23:00:36.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.130" endtime="20201115 23:00:36.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.133" endtime="20201115 23:00:36.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.106" endtime="20201115 23:00:36.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.104" endtime="20201115 23:00:36.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.142" endtime="20201115 23:00:36.428"></status>
</kw>
<msg timestamp="20201115 23:00:36.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023806486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023918944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.140" endtime="20201115 23:00:36.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023806486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023918944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.432" endtime="20201115 23:00:36.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.440" endtime="20201115 23:00:36.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.138" endtime="20201115 23:00:36.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.136" endtime="20201115 23:00:36.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.447" level="INFO">${RESULT} = [{'time': 0.023918944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011245799999999931, 'source_diff': 0.00011245799999999931}, {'time': 0.024057153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:36.444" endtime="20201115 23:00:36.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.461" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:36.448" endtime="20201115 23:00:36.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.466" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.465" endtime="20201115 23:00:36.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.468" level="INFO">VALUE: [0.00011245799999999931, 0.00011205600000000274, 0.00011206899999999936, 0.00011206899999999936, 0.00011208299999999893, 0.00011213800000000121, 0.00011202800000000013, 0.0001120700000000023, 0.0001120419999999997, 0.0001120419999999997, 0.00011205599999999927, 0.00011198600000000142, 0.00011208400000000188, 0.0001120549999999998, 0.00011201400000000056, 0.00011208400000000188, 0.0001120549999999998, 0.00011206899999999936, 0.00011206899999999936, 0.00011205599999999927, 0.00011206900000000283, 0.00011206999999999884, 0.00011208400000000188, 0.00011211199999999755, 0.00011208299999999893, 0.00011206899999999936, 0.00011206899999999936, 0.0001120549999999998, 0.0001120969999999985, 0.00011208299999999893, 0.0001120419999999997, 0.00011208399999999841, 0.0001120830000000024, 0.00011206999999999884, 0.00011201400000000056, 0.0001120419999999997, 0.00011202800000000013, 0.00011205599999999927, 0.00011206899999999936, 0.0001120700000000023, 0.00011202700000000065, 0.00011209700000000197, 0.00011205599999999927, 0.00011206899999999936, 0.0001120549999999998, 0.0001120549999999998, 0.00011211100000000154, 0.00011206899999999936, 0.00011208399999999841, 0.0001120419999999997]</msg>
<status status="PASS" starttime="20201115 23:00:36.467" endtime="20201115 23:00:36.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.462" endtime="20201115 23:00:36.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.472" endtime="20201115 23:00:36.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.475" endtime="20201115 23:00:36.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.474" endtime="20201115 23:00:36.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.470" endtime="20201115 23:00:36.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.103" endtime="20201115 23:00:36.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.101" endtime="20201115 23:00:36.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.100" endtime="20201115 23:00:36.496"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.499" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.507" endtime="20201115 23:00:36.525"></status>
</kw>
<msg timestamp="20201115 23:00:36.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.505" endtime="20201115 23:00:36.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.527" endtime="20201115 23:00:36.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.529" endtime="20201115 23:00:36.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.503" endtime="20201115 23:00:36.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.501" endtime="20201115 23:00:36.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.538" endtime="20201115 23:00:36.823"></status>
</kw>
<msg timestamp="20201115 23:00:36.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023821694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023934125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.537" endtime="20201115 23:00:36.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023821694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023934125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.828" endtime="20201115 23:00:36.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.835" endtime="20201115 23:00:36.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.534" endtime="20201115 23:00:36.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.532" endtime="20201115 23:00:36.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.842" level="INFO">${RESULT} = [{'time': 0.023934125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011243099999999964, 'source_diff': 0.00011243099999999964}, {'time': 0.024070181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:36.839" endtime="20201115 23:00:36.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.855" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:36.843" endtime="20201115 23:00:36.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.859" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.858" endtime="20201115 23:00:36.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.862" level="INFO">VALUE: [0.00011243099999999964, 0.00011206999999999884, 0.00011202800000000013, 0.00011208299999999893, 0.00011212500000000111, 0.00011208399999999841, 0.0001120969999999985, 0.00011206899999999936, 0.0001120969999999985, 0.00011206899999999936, 0.00011205500000000326, 0.0001120830000000024, 0.0001120830000000024, 0.00011206999999999884, 0.00011209800000000145, 0.00011206999999999884, 0.00011206899999999936, 0.0001120419999999997, 0.00011206899999999936, 0.00011206899999999936, 0.00011206999999999884, 0.00011209800000000145, 0.00011206899999999936, 0.0001120549999999998, 0.0001120549999999998, 0.0001120969999999985, 0.00011208299999999893, 0.00011200000000000099, 0.00011206999999999884, 0.00011206899999999936, 0.00011206900000000283, 0.0001120549999999998, 0.00011208399999999841, 0.00011206999999999884, 0.00011204100000000022, 0.00011205599999999927, 0.00011202800000000013, 0.00011208399999999841, 0.00011205599999999927, 0.00011206899999999936, 0.0001120549999999998, 0.00011208400000000188, 0.0001120700000000023, 0.00011206899999999936, 0.00011208299999999893, 0.00011205500000000326, 0.0001120700000000023, 0.00011206899999999936, 0.00011208299999999893, 0.00011204100000000022]</msg>
<status status="PASS" starttime="20201115 23:00:36.860" endtime="20201115 23:00:36.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.856" endtime="20201115 23:00:36.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.865" endtime="20201115 23:00:36.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.869" endtime="20201115 23:00:36.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.867" endtime="20201115 23:00:36.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.864" endtime="20201115 23:00:36.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.499" endtime="20201115 23:00:36.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.497" endtime="20201115 23:00:36.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.497" endtime="20201115 23:00:36.890"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.892" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.900" endtime="20201115 23:00:36.919"></status>
</kw>
<msg timestamp="20201115 23:00:36.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.899" endtime="20201115 23:00:36.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.920" endtime="20201115 23:00:36.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.923" endtime="20201115 23:00:36.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.896" endtime="20201115 23:00:36.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.894" endtime="20201115 23:00:36.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.932" endtime="20201115 23:00:37.218"></status>
</kw>
<msg timestamp="20201115 23:00:37.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023782583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023895028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.930" endtime="20201115 23:00:37.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023782583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023895028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.223" endtime="20201115 23:00:37.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.231" endtime="20201115 23:00:37.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.928" endtime="20201115 23:00:37.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.926" endtime="20201115 23:00:37.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.237" level="INFO">${RESULT} = [{'time': 0.023895028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011244499999999921, 'source_diff': 0.00011244499999999921}, {'time': 0.024023306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:37.234" endtime="20201115 23:00:37.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.250" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:37.238" endtime="20201115 23:00:37.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.255" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.254" endtime="20201115 23:00:37.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.257" level="INFO">VALUE: [0.00011244499999999921, 0.0001120700000000023, 0.00011206899999999936, 0.00011206899999999936, 0.00011208299999999893, 0.00011201400000000056, 0.00011206899999999936, 0.00011211099999999807, 0.00011208399999999841, 0.0001120700000000023, 0.00011208299999999893, 0.00011208299999999893, 0.00011206999999999884, 0.00011206900000000283, 0.0001120969999999985, 0.00011205599999999927, 0.00011206999999999884, 0.00011205599999999927, 0.00011208299999999893, 0.00011206899999999936, 0.00011201400000000056, 0.00011206899999999936, 0.00011205599999999927, 0.00011208399999999841, 0.00011215300000000025, 0.00011208299999999893, 0.00011206999999999884, 0.00011211200000000102, 0.0001120969999999985, 0.00011209800000000145, 0.00011208299999999893, 0.00011213900000000068, 0.0001120830000000024, 0.00011209700000000197, 0.00011209800000000145, 0.00011208299999999893, 0.00011206899999999936, 0.00011208299999999893, 0.00011206999999999884, 0.0001120549999999998, 0.00011211099999999807, 0.00011213900000000068, 0.00011206999999999884, 0.00011208299999999893, 0.00011206999999999884, 0.00011208299999999893, 0.0001120700000000023, 0.00011198600000000142, 0.00011206999999999884, 0.00011206899999999936]</msg>
<status status="PASS" starttime="20201115 23:00:37.256" endtime="20201115 23:00:37.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.251" endtime="20201115 23:00:37.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.260" endtime="20201115 23:00:37.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.264" endtime="20201115 23:00:37.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.262" endtime="20201115 23:00:37.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.259" endtime="20201115 23:00:37.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.893" endtime="20201115 23:00:37.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.891" endtime="20201115 23:00:37.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.890" endtime="20201115 23:00:37.285"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.287" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.295" endtime="20201115 23:00:37.314"></status>
</kw>
<msg timestamp="20201115 23:00:37.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.294" endtime="20201115 23:00:37.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.316" endtime="20201115 23:00:37.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.318" endtime="20201115 23:00:37.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.291" endtime="20201115 23:00:37.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.289" endtime="20201115 23:00:37.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.328" endtime="20201115 23:00:37.614"></status>
</kw>
<msg timestamp="20201115 23:00:37.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024001792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024114264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.326" endtime="20201115 23:00:37.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024001792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024114264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.619" endtime="20201115 23:00:37.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.627" endtime="20201115 23:00:37.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.324" endtime="20201115 23:00:37.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.322" endtime="20201115 23:00:37.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.634" level="INFO">${RESULT} = [{'time': 0.024114264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011247199999999888, 'source_diff': 0.00011247199999999888}, {'time': 0.024253097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:37.630" endtime="20201115 23:00:37.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.646" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:37.634" endtime="20201115 23:00:37.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.651" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.650" endtime="20201115 23:00:37.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.653" level="INFO">VALUE: [0.00011247199999999888, 0.00011206900000000283, 0.00011206899999999936, 0.00011201400000000056, 0.00011206899999999936, 0.00011206999999999884, 0.00011205600000000274, 0.00011208400000000188, 0.0001120549999999998, 0.00011206899999999936, 0.00011206999999999884, 0.00011209700000000197, 0.00011208400000000188, 0.00011208299999999893, 0.00011206999999999884, 0.00011206999999999884, 0.00011206899999999936, 0.00011206899999999936, 0.00011206999999999884, 0.00011209800000000145, 0.00011202800000000013, 0.00011208299999999893, 0.0001120549999999998, 0.0001120419999999997, 0.00011209700000000197, 0.00011211100000000154, 0.00011208299999999893, 0.00011213900000000068, 0.00011212500000000111, 0.0001120700000000023, 0.00011208399999999841, 0.00011205599999999927, 0.00011206999999999884, 0.00011209700000000197, 0.00011206999999999884, 0.00011206999999999884, 0.00011205599999999927, 0.0001120830000000024, 0.00011206899999999936, 0.00011206899999999936, 0.00011206900000000283, 0.0001120549999999998, 0.00011206999999999884, 0.00011206899999999936, 0.00011204100000000022, 0.00011211100000000154, 0.00011206899999999936, 0.00011208299999999893, 0.00011211099999999807, 0.00011208299999999893]</msg>
<status status="PASS" starttime="20201115 23:00:37.652" endtime="20201115 23:00:37.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.647" endtime="20201115 23:00:37.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.656" endtime="20201115 23:00:37.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.660" endtime="20201115 23:00:37.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.658" endtime="20201115 23:00:37.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.655" endtime="20201115 23:00:37.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.288" endtime="20201115 23:00:37.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.286" endtime="20201115 23:00:37.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.285" endtime="20201115 23:00:37.681"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.683" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.691" endtime="20201115 23:00:37.710"></status>
</kw>
<msg timestamp="20201115 23:00:37.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.690" endtime="20201115 23:00:37.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.711" endtime="20201115 23:00:37.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.714" endtime="20201115 23:00:37.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.687" endtime="20201115 23:00:37.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.685" endtime="20201115 23:00:37.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.723" endtime="20201115 23:00:38.010"></status>
</kw>
<msg timestamp="20201115 23:00:38.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023739153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023851611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.721" endtime="20201115 23:00:38.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023739153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023851611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.014" endtime="20201115 23:00:38.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.022" endtime="20201115 23:00:38.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.719" endtime="20201115 23:00:38.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.717" endtime="20201115 23:00:38.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.028" level="INFO">${RESULT} = [{'time': 0.023851611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011245800000000278, 'source_diff': 0.00011245800000000278}, {'time': 0.023989514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:38.025" endtime="20201115 23:00:38.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.043" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:38.029" endtime="20201115 23:00:38.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.047" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.046" endtime="20201115 23:00:38.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.050" level="INFO">VALUE: [0.00011245800000000278, 0.00011200000000000099, 0.00011206899999999936, 0.00011209700000000197, 0.0001120830000000024, 0.00011208299999999893, 0.00011208399999999841, 0.00011206899999999936, 0.00011208399999999841, 0.00011208399999999841, 0.00011208299999999893, 0.0001120830000000024, 0.00011206900000000283, 0.00011206900000000283, 0.00011204100000000022, 0.00011206899999999936, 0.00011209700000000197, 0.0001120549999999998, 0.00011209700000000197, 0.0001120700000000023, 0.00011206900000000283, 0.00011208299999999893, 0.0001120549999999998, 0.00011208299999999893, 0.00011209800000000145, 0.00011209700000000197, 0.00011209700000000197, 0.00011199999999999752, 0.00011208400000000188, 0.00011208400000000188, 0.00011211100000000154, 0.00011206899999999936, 0.00011209800000000145, 0.0001120830000000024, 0.00011209800000000145, 0.0001120830000000024, 0.00011208399999999841, 0.00011208400000000188, 0.00011208399999999841, 0.0001120969999999985, 0.00011211100000000154, 0.00011209800000000145, 0.00011206899999999936, 0.00011206899999999936, 0.0001120969999999985, 0.0001120969999999985, 0.00011209700000000197, 0.0001120969999999985, 0.00011205600000000274, 0.00011208299999999893]</msg>
<status status="PASS" starttime="20201115 23:00:38.048" endtime="20201115 23:00:38.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.044" endtime="20201115 23:00:38.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.053" endtime="20201115 23:00:38.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.056" endtime="20201115 23:00:38.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.055" endtime="20201115 23:00:38.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.051" endtime="20201115 23:00:38.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.684" endtime="20201115 23:00:38.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.682" endtime="20201115 23:00:38.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.681" endtime="20201115 23:00:38.077"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.080" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.087" endtime="20201115 23:00:38.106"></status>
</kw>
<msg timestamp="20201115 23:00:38.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.086" endtime="20201115 23:00:38.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.108" endtime="20201115 23:00:38.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.111" endtime="20201115 23:00:38.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.083" endtime="20201115 23:00:38.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.081" endtime="20201115 23:00:38.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.120" endtime="20201115 23:00:38.407"></status>
</kw>
<msg timestamp="20201115 23:00:38.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023734778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023848361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.118" endtime="20201115 23:00:38.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023734778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023848361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.411" endtime="20201115 23:00:38.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.419" endtime="20201115 23:00:38.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.116" endtime="20201115 23:00:38.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.114" endtime="20201115 23:00:38.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.425" level="INFO">${RESULT} = [{'time': 0.023848361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011358299999999696, 'source_diff': 0.00011358299999999696}, {'time': 0.023980875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:38.422" endtime="20201115 23:00:38.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.438" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:38.426" endtime="20201115 23:00:38.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.443" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.442" endtime="20201115 23:00:38.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.445" level="INFO">VALUE: [0.00011358299999999696, 0.00011319399999999702, 0.00011358300000000043, 0.00011361099999999957, 0.00011208299999999893, 0.00011330600000000052, 0.00011365299999999828, 0.00011369399999999752, 0.0001120700000000023, 0.00011218099999999939, 0.0001120969999999985, 0.00011338900000000193, 0.00011219399999999949, 0.00011327799999999791, 0.00011348599999999945, 0.00011365199999999881, 0.000113597, 0.00011208299999999893, 0.00011365299999999828, 0.00011208299999999893, 0.00011318000000000092, 0.0001120969999999985, 0.00011361099999999957, 0.00011379200000000145, 0.00011208299999999893, 0.00011326400000000181, 0.0001137359999999997, 0.00011352800000000163, 0.00011208399999999841, 0.00011331900000000061, 0.00011357000000000034, 0.0001120830000000024, 0.00011362500000000261, 0.00011223700000000114, 0.00011348599999999945, 0.00011336099999999932, 0.00011313899999999821, 0.00011206899999999936, 0.00011362499999999914, 0.00011334699999999975, 0.00011361099999999957, 0.00011326399999999834, 0.00011319400000000049, 0.00011312499999999864, 0.00011345899999999978, 0.00011219399999999949, 0.00011320899999999953, 0.00011333399999999966, 0.00011334699999999975, 0.00011208299999999893]</msg>
<status status="PASS" starttime="20201115 23:00:38.444" endtime="20201115 23:00:38.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.439" endtime="20201115 23:00:38.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.448" endtime="20201115 23:00:38.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.452" endtime="20201115 23:00:38.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.450" endtime="20201115 23:00:38.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.447" endtime="20201115 23:00:38.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.080" endtime="20201115 23:00:38.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.078" endtime="20201115 23:00:38.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.078" endtime="20201115 23:00:38.473"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.475" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.484" endtime="20201115 23:00:38.502"></status>
</kw>
<msg timestamp="20201115 23:00:38.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.482" endtime="20201115 23:00:38.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.504" endtime="20201115 23:00:38.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.506" endtime="20201115 23:00:38.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.480" endtime="20201115 23:00:38.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.477" endtime="20201115 23:00:38.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.515" endtime="20201115 23:00:38.802"></status>
</kw>
<msg timestamp="20201115 23:00:38.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024242319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024356375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.514" endtime="20201115 23:00:38.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024242319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024356375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.806" endtime="20201115 23:00:38.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.814" endtime="20201115 23:00:38.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.511" endtime="20201115 23:00:38.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.509" endtime="20201115 23:00:38.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.820" level="INFO">${RESULT} = [{'time': 0.024356375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011405600000000127, 'source_diff': 0.00011405600000000127}, {'time': 0.024484, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:38.817" endtime="20201115 23:00:38.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.833" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:38.821" endtime="20201115 23:00:38.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.838" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.837" endtime="20201115 23:00:38.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.840" level="INFO">VALUE: [0.00011405600000000127, 0.00011454199999999873, 0.00011405600000000127, 0.00011381899999999764, 0.00011395800000000081, 0.00011424999999999977, 0.00011480499999999907, 0.00011479200000000245, 0.00011386100000000329, 0.00011411200000000302, 0.00011419500000000096, 0.00011433299999999771, 0.00011418099999999792, 0.0001137359999999997, 0.00011419400000000149, 0.00011430599999999805, 0.00011412499999999964, 0.00011443099999999817, 0.00011419500000000096, 0.00011436100000000032, 0.00011443000000000217, 0.00011419399999999802, 0.00011380600000000102, 0.0001138749999999994, 0.00011455499999999882, 0.00011468000000000242, 0.00011393100000000114, 0.0001143749999999999, 0.00011450000000000002, 0.00011411199999999955, 0.00011394499999999724, 0.00011469399999999852, 0.00011450000000000002, 0.00011416699999999835, 0.00011466699999999885, 0.0001140970000000005, 0.00011433300000000118, 0.00011377800000000188, 0.00011388899999999896, 0.00011387500000000286, 0.00011468000000000242, 0.0001140559999999978, 0.00011388899999999896, 0.00011382000000000059, 0.0001145689999999984, 0.00011407000000000084, 0.00011372200000000013, 0.00011475000000000027, 0.00011445799999999784, 0.00011448600000000045]</msg>
<status status="PASS" starttime="20201115 23:00:38.839" endtime="20201115 23:00:38.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.834" endtime="20201115 23:00:38.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.843" endtime="20201115 23:00:38.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.847" endtime="20201115 23:00:38.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.845" endtime="20201115 23:00:38.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.841" endtime="20201115 23:00:38.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.476" endtime="20201115 23:00:38.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.474" endtime="20201115 23:00:38.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.473" endtime="20201115 23:00:38.868"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.871" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.879" endtime="20201115 23:00:38.897"></status>
</kw>
<msg timestamp="20201115 23:00:38.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.877" endtime="20201115 23:00:38.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.899" endtime="20201115 23:00:38.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.901" endtime="20201115 23:00:38.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.874" endtime="20201115 23:00:38.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.872" endtime="20201115 23:00:38.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.910" endtime="20201115 23:00:39.197"></status>
</kw>
<msg timestamp="20201115 23:00:39.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023783944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023899403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.909" endtime="20201115 23:00:39.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023783944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023899403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.201" endtime="20201115 23:00:39.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.209" endtime="20201115 23:00:39.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.906" endtime="20201115 23:00:39.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.904" endtime="20201115 23:00:39.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.215" level="INFO">${RESULT} = [{'time': 0.023899403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011545899999999831, 'source_diff': 0.00011545899999999831}, {'time': 0.024031903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:39.212" endtime="20201115 23:00:39.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.228" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:39.216" endtime="20201115 23:00:39.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.233" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.232" endtime="20201115 23:00:39.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.235" level="INFO">VALUE: [0.00011545899999999831, 0.00011507000000000184, 0.00011480500000000254, 0.00011502799999999966, 0.00011501400000000009, 0.0001149169999999991, 0.00011487499999999692, 0.00011519399999999902, 0.00011494499999999824, 0.00011500000000000052, 0.00011569499999999899, 0.0001152360000000012, 0.00011531900000000261, 0.00011476399999999984, 0.00011541600000000013, 0.0001154299999999997, 0.00011483300000000168, 0.00011569399999999952, 0.00011511100000000107, 0.00011517999999999945, 0.00011516699999999935, 0.00011561100000000157, 0.00011568100000000289, 0.00011480599999999855, 0.00011527700000000043, 0.0001157360000000017, 0.00011543099999999917, 0.00011505600000000227, 0.00011537499999999742, 0.00011506999999999837, 0.00011495800000000181, 0.0001157360000000017, 0.00011480499999999907, 0.00011479199999999898, 0.00011551400000000059, 0.00011520800000000206, 0.0001152499999999973, 0.00011544500000000221, 0.0001157360000000017, 0.00011515299999999978, 0.00011568099999999942, 0.0001150689999999989, 0.0001148750000000004, 0.00011545800000000231, 0.00011520800000000206, 0.00011567999999999995, 0.00011486100000000082, 0.00011549999999999755, 0.00011481899999999864, 0.0001149169999999991]</msg>
<status status="PASS" starttime="20201115 23:00:39.234" endtime="20201115 23:00:39.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.229" endtime="20201115 23:00:39.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.238" endtime="20201115 23:00:39.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.242" endtime="20201115 23:00:39.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.240" endtime="20201115 23:00:39.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.237" endtime="20201115 23:00:39.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.871" endtime="20201115 23:00:39.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.869" endtime="20201115 23:00:39.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.869" endtime="20201115 23:00:39.263"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.265" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.273" endtime="20201115 23:00:39.292"></status>
</kw>
<msg timestamp="20201115 23:00:39.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.272" endtime="20201115 23:00:39.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.294" endtime="20201115 23:00:39.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.296" endtime="20201115 23:00:39.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.269" endtime="20201115 23:00:39.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.267" endtime="20201115 23:00:39.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.305" endtime="20201115 23:00:39.592"></status>
</kw>
<msg timestamp="20201115 23:00:39.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023757931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023874111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.303" endtime="20201115 23:00:39.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023757931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023874111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.596" endtime="20201115 23:00:39.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.605" endtime="20201115 23:00:39.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.301" endtime="20201115 23:00:39.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.299" endtime="20201115 23:00:39.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.611" level="INFO">${RESULT} = [{'time': 0.023874111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011618000000000045, 'source_diff': 0.00011618000000000045}, {'time': 0.024006694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:39.608" endtime="20201115 23:00:39.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.625" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:39.612" endtime="20201115 23:00:39.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.630" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.629" endtime="20201115 23:00:39.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.633" level="INFO">VALUE: [0.00011618000000000045, 0.00011667999999999748, 0.000116291000000001, 0.00011623599999999873, 0.0001161109999999986, 0.00011598599999999848, 0.00011581999999999912, 0.00011655500000000082, 0.00011594499999999924, 0.00011604199999999676, 0.00011625000000000177, 0.0001164439999999968, 0.00011599999999999805, 0.00011650000000000202, 0.00011636099999999885, 0.0001158750000000014, 0.00011602800000000066, 0.00011612500000000164, 0.00011580599999999955, 0.00011647299999999888, 0.00011604099999999729, 0.00011616700000000035, 0.00011662499999999867, 0.0001165560000000003, 0.00011615300000000078, 0.00011611100000000207, 0.00011598600000000195, 0.00011600000000000152, 0.00011672199999999966, 0.00011650000000000202, 0.00011577800000000041, 0.00011630600000000005, 0.00011587499999999792, 0.00011587499999999792, 0.00011580500000000007, 0.00011599999999999805, 0.00011576400000000084, 0.00011644499999999974, 0.00011676399999999837, 0.00011651400000000159, 0.00011591600000000063, 0.00011608399999999894, 0.00011584699999999878, 0.00011587499999999792, 0.00011625000000000177, 0.00011638799999999852, 0.00011668100000000042, 0.00011588900000000096, 0.00011586100000000182, 0.00011634699999999928]</msg>
<status status="PASS" starttime="20201115 23:00:39.631" endtime="20201115 23:00:39.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.626" endtime="20201115 23:00:39.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.636" endtime="20201115 23:00:39.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.639" endtime="20201115 23:00:39.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.638" endtime="20201115 23:00:39.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.634" endtime="20201115 23:00:39.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.266" endtime="20201115 23:00:39.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.264" endtime="20201115 23:00:39.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.263" endtime="20201115 23:00:39.661"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.663" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.671" endtime="20201115 23:00:39.690"></status>
</kw>
<msg timestamp="20201115 23:00:39.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.670" endtime="20201115 23:00:39.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.691" endtime="20201115 23:00:39.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.694" endtime="20201115 23:00:39.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.667" endtime="20201115 23:00:39.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.665" endtime="20201115 23:00:39.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.703" endtime="20201115 23:00:39.988"></status>
</kw>
<msg timestamp="20201115 23:00:39.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023763083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023880583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.701" endtime="20201115 23:00:39.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023763083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023880583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.992" endtime="20201115 23:00:39.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.000" endtime="20201115 23:00:40.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.699" endtime="20201115 23:00:40.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.697" endtime="20201115 23:00:40.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.007" level="INFO">${RESULT} = [{'time': 0.023880583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011749999999999955, 'source_diff': 0.00011749999999999955}, {'time': 0.024028208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:40.004" endtime="20201115 23:00:40.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.020" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:40.008" endtime="20201115 23:00:40.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.025" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.024" endtime="20201115 23:00:40.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.027" level="INFO">VALUE: [0.00011749999999999955, 0.0001171109999999996, 0.00011719500000000049, 0.000117388999999999, 0.00011734799999999976, 0.00011725000000000277, 0.00011754099999999879, 0.00011722200000000016, 0.00011768100000000142, 0.00011765299999999881, 0.00011679199999999751, 0.00011698599999999948, 0.00011688799999999902, 0.00011680500000000107, 0.00011707000000000037, 0.00011769400000000152, 0.0001174170000000016, 0.00011768100000000142, 0.00011759800000000001, 0.00011698699999999895, 0.00011722200000000016, 0.00011704200000000123, 0.0001170690000000009, 0.00011697199999999991, 0.00011768100000000142, 0.00011683300000000021, 0.00011749999999999955, 0.00011684699999999978, 0.00011698599999999948, 0.0001176110000000001, 0.00011736099999999985, 0.00011715299999999831, 0.00011772300000000013, 0.00011749999999999955, 0.00011747200000000041, 0.00011754199999999826, 0.00011757000000000087, 0.00011712500000000264, 0.00011686099999999935, 0.0001175560000000013, 0.00011686099999999935, 0.00011670800000000009, 0.00011744500000000074, 0.00011747299999999988, 0.00011773600000000023, 0.00011768100000000142, 0.0001170690000000009, 0.00011681900000000064, 0.00011692999999999773, 0.00011748599999999998]</msg>
<status status="PASS" starttime="20201115 23:00:40.026" endtime="20201115 23:00:40.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.021" endtime="20201115 23:00:40.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.030" endtime="20201115 23:00:40.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.033" endtime="20201115 23:00:40.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.032" endtime="20201115 23:00:40.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.029" endtime="20201115 23:00:40.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.664" endtime="20201115 23:00:40.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.662" endtime="20201115 23:00:40.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.661" endtime="20201115 23:00:40.055"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.057" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.065" endtime="20201115 23:00:40.084"></status>
</kw>
<msg timestamp="20201115 23:00:40.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.063" endtime="20201115 23:00:40.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.085" endtime="20201115 23:00:40.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.088" endtime="20201115 23:00:40.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.061" endtime="20201115 23:00:40.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.059" endtime="20201115 23:00:40.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.097" endtime="20201115 23:00:40.384"></status>
</kw>
<msg timestamp="20201115 23:00:40.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023756903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023874917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.095" endtime="20201115 23:00:40.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023756903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023874917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.388" endtime="20201115 23:00:40.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.396" endtime="20201115 23:00:40.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.093" endtime="20201115 23:00:40.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.091" endtime="20201115 23:00:40.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.403" level="INFO">${RESULT} = [{'time': 0.023874917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011801399999999962, 'source_diff': 0.00011801399999999962}, {'time': 0.024011486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:40.399" endtime="20201115 23:00:40.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.416" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:40.404" endtime="20201115 23:00:40.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.420" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.419" endtime="20201115 23:00:40.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.422" level="INFO">VALUE: [0.00011801399999999962, 0.00011849999999999708, 0.00011777799999999894, 0.000118389, 0.0001181110000000006, 0.00011804099999999929, 0.00011780599999999808, 0.00011837500000000042, 0.00011793100000000167, 0.00011862500000000067, 0.0001180560000000018, 0.00011851400000000012, 0.00011837500000000042, 0.00011854099999999979, 0.00011807000000000137, 0.00011851400000000012, 0.0001183049999999991, 0.00011823600000000073, 0.00011848700000000045, 0.00011791599999999916, 0.0001179309999999982, 0.00011784800000000026, 0.00011780600000000155, 0.00011792999999999873, 0.00011862500000000067, 0.00011854099999999979, 0.00011816599999999941, 0.00011865299999999981, 0.00011781899999999818, 0.00011868099999999895, 0.0001180560000000018, 0.00011805599999999833, 0.00011772199999999719, 0.00011831899999999868, 0.00011786100000000035, 0.0001186110000000011, 0.0001186110000000011, 0.0001177499999999998, 0.00011820900000000106, 0.00011811200000000008, 0.00011812500000000017, 0.00011834699999999782, 0.00011837500000000042, 0.00011798600000000048, 0.00011820900000000106, 0.00011783300000000121, 0.00011844400000000227, 0.00011817999999999898, 0.00011859699999999807, 0.0001185560000000023]</msg>
<status status="PASS" starttime="20201115 23:00:40.421" endtime="20201115 23:00:40.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.416" endtime="20201115 23:00:40.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.426" endtime="20201115 23:00:40.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.429" endtime="20201115 23:00:40.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.427" endtime="20201115 23:00:40.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.424" endtime="20201115 23:00:40.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.058" endtime="20201115 23:00:40.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.056" endtime="20201115 23:00:40.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.055" endtime="20201115 23:00:40.450"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.452" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.461" endtime="20201115 23:00:40.479"></status>
</kw>
<msg timestamp="20201115 23:00:40.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.459" endtime="20201115 23:00:40.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.481" endtime="20201115 23:00:40.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.483" endtime="20201115 23:00:40.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.456" endtime="20201115 23:00:40.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.454" endtime="20201115 23:00:40.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.493" endtime="20201115 23:00:40.779"></status>
</kw>
<msg timestamp="20201115 23:00:40.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023737667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023856875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.491" endtime="20201115 23:00:40.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023737667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023856875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.783" endtime="20201115 23:00:40.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.791" endtime="20201115 23:00:40.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.488" endtime="20201115 23:00:40.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.486" endtime="20201115 23:00:40.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.797" level="INFO">${RESULT} = [{'time': 0.023856875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011920799999999912, 'source_diff': 0.00011920799999999912}, {'time': 0.023989458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:40.794" endtime="20201115 23:00:40.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.810" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:40.798" endtime="20201115 23:00:40.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.814" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.813" endtime="20201115 23:00:40.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.817" level="INFO">VALUE: [0.00011920799999999912, 0.00011950000000000155, 0.00011911199999999761, 0.00011955500000000036, 0.00011894400000000277, 0.00011945899999999884, 0.00011950000000000155, 0.00011874999999999733, 0.00011881899999999918, 0.00011879199999999951, 0.00011940300000000056, 0.00011929200000000001, 0.00011923600000000173, 0.00011894499999999877, 0.00011941600000000066, 0.00011906899999999943, 0.00011934699999999882, 0.00011954199999999679, 0.00011907000000000237, 0.00011970799999999962, 0.00011895899999999834, 0.0001189309999999992, 0.0001193050000000001, 0.0001192630000000014, 0.0001195690000000034, 0.00011922199999999869, 0.00011886199999999736, 0.00011890300000000006, 0.00011954200000000026, 0.00011951400000000112, 0.00011894499999999877, 0.00011881999999999865, 0.0001197639999999979, 0.00011945800000000284, 0.00011947200000000241, 0.000119389000000001, 0.00011887500000000092, 0.0001196249999999982, 0.00011950000000000155, 0.00011898600000000148, 0.00011916600000000041, 0.00011873600000000123, 0.00011941700000000013, 0.00011938899999999752, 0.00011940300000000056, 0.00011884799999999779, 0.00011929200000000001, 0.00011948599999999851, 0.0001190560000000028, 0.00011934699999999882]</msg>
<status status="PASS" starttime="20201115 23:00:40.816" endtime="20201115 23:00:40.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.811" endtime="20201115 23:00:40.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.820" endtime="20201115 23:00:40.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.823" endtime="20201115 23:00:40.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.822" endtime="20201115 23:00:40.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.818" endtime="20201115 23:00:40.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.453" endtime="20201115 23:00:40.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.451" endtime="20201115 23:00:40.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.451" endtime="20201115 23:00:40.844"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.847" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.855" endtime="20201115 23:00:40.874"></status>
</kw>
<msg timestamp="20201115 23:00:40.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.853" endtime="20201115 23:00:40.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.875" endtime="20201115 23:00:40.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.882" endtime="20201115 23:00:40.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.851" endtime="20201115 23:00:40.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.849" endtime="20201115 23:00:40.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.891" endtime="20201115 23:00:41.176"></status>
</kw>
<msg timestamp="20201115 23:00:41.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023696361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023816778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.889" endtime="20201115 23:00:41.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023696361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023816778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.181" endtime="20201115 23:00:41.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.189" endtime="20201115 23:00:41.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.887" endtime="20201115 23:00:41.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.885" endtime="20201115 23:00:41.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.195" level="INFO">${RESULT} = [{'time': 0.023816778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012041700000000113, 'source_diff': 0.00012041700000000113}, {'time': 0.023967403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:41.192" endtime="20201115 23:00:41.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.210" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:41.196" endtime="20201115 23:00:41.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.214" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.213" endtime="20201115 23:00:41.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.216" level="INFO">VALUE: [0.00012041700000000113, 0.00012065300000000181, 0.00011980600000000008, 0.00012055500000000136, 0.00012022299999999916, 0.00012029200000000101, 0.00012068099999999748, 0.0001204029999999981, 0.00012022199999999969, 0.00012063899999999877, 0.00012051400000000212, 0.00012059700000000007, 0.00012059700000000007, 0.00012024999999999883, 0.00011979200000000051, 0.00012011099999999914, 0.00012036099999999939, 0.00011972300000000213, 0.00011972199999999919, 0.00012022199999999969, 0.00012065300000000181, 0.00012068000000000148, 0.00012013900000000174, 0.00012061199999999911, 0.00011998599999999901, 0.00012065300000000181, 0.0001206249999999992, 0.00011979200000000051, 0.00012047199999999994, 0.00012077800000000194, 0.00012079100000000204, 0.00011990300000000106, 0.00011997199999999944, 0.00012002799999999772, 0.00011997200000000291, 0.0001206379999999993, 0.00012026400000000187, 0.00012001400000000162, 0.00011983299999999975, 0.00012040300000000156, 0.00011973600000000223, 0.0001198050000000006, 0.00011998599999999901, 0.00011994499999999977, 0.00012048599999999951, 0.00012066699999999791, 0.00012023599999999926, 0.00012008399999999947, 0.00012066699999999791, 0.00011977800000000094]</msg>
<status status="PASS" starttime="20201115 23:00:41.215" endtime="20201115 23:00:41.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.210" endtime="20201115 23:00:41.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.220" endtime="20201115 23:00:41.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.223" endtime="20201115 23:00:41.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.221" endtime="20201115 23:00:41.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.218" endtime="20201115 23:00:41.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.847" endtime="20201115 23:00:41.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.846" endtime="20201115 23:00:41.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.845" endtime="20201115 23:00:41.244"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.246" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.255" endtime="20201115 23:00:41.274"></status>
</kw>
<msg timestamp="20201115 23:00:41.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.253" endtime="20201115 23:00:41.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.275" endtime="20201115 23:00:41.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.278" endtime="20201115 23:00:41.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.251" endtime="20201115 23:00:41.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.248" endtime="20201115 23:00:41.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.287" endtime="20201115 23:00:41.573"></status>
</kw>
<msg timestamp="20201115 23:00:41.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024152347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242735, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:41.285" endtime="20201115 23:00:41.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024152347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242735, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:41.577" endtime="20201115 23:00:41.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.585" endtime="20201115 23:00:41.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.283" endtime="20201115 23:00:41.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.281" endtime="20201115 23:00:41.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.591" level="INFO">${RESULT} = [{'time': 0.0242735, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012115299999999884, 'source_diff': 0.00012115299999999884}, {'time': 0.024425917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:41.588" endtime="20201115 23:00:41.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.604" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:41.592" endtime="20201115 23:00:41.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.609" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.608" endtime="20201115 23:00:41.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.611" level="INFO">VALUE: [0.00012115299999999884, 0.0001215839999999975, 0.00012098600000000001, 0.00012136100000000039, 0.0001214029999999991, 0.00012154199999999879, 0.00012159700000000107, 0.00012104100000000229, 0.00012111200000000308, 0.00012113899999999928, 0.00012093099999999773, 0.00012077800000000194, 0.00012134699999999735, 0.00012091700000000163, 0.00012073599999999976, 0.00012079200000000151, 0.00012154099999999932, 0.00012072300000000313, 0.00012116599999999894, 0.00012099999999999958, 0.00012097200000000044, 0.0001208890000000025, 0.00012095899999999687, 0.00012140300000000256, 0.00012098699999999948, 0.0001216250000000002, 0.00012098699999999948, 0.00012127799999999897, 0.00012084799999999979, 0.00012147200000000094, 0.00012092999999999826, 0.00012111100000000014, 0.00012091699999999816, 0.00012104099999999882, 0.0001215969999999976, 0.00012080599999999761, 0.00012152800000000269, 0.00012091700000000163, 0.0001216250000000002, 0.0001209029999999986, 0.00012084699999999685, 0.00012068000000000148, 0.00012154199999999879, 0.00012152799999999922, 0.00012104099999999882, 0.00012173600000000076, 0.00012073599999999976, 0.00012105599999999786, 0.00012147300000000041, 0.00012122300000000016]</msg>
<status status="PASS" starttime="20201115 23:00:41.610" endtime="20201115 23:00:41.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.605" endtime="20201115 23:00:41.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.614" endtime="20201115 23:00:41.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.618" endtime="20201115 23:00:41.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.616" endtime="20201115 23:00:41.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.613" endtime="20201115 23:00:41.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.247" endtime="20201115 23:00:41.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.245" endtime="20201115 23:00:41.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.244" endtime="20201115 23:00:41.639"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.642" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.650" endtime="20201115 23:00:41.669"></status>
</kw>
<msg timestamp="20201115 23:00:41.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.648" endtime="20201115 23:00:41.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.670" endtime="20201115 23:00:41.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.673" endtime="20201115 23:00:41.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.645" endtime="20201115 23:00:41.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.643" endtime="20201115 23:00:41.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.681" endtime="20201115 23:00:41.967"></status>
</kw>
<msg timestamp="20201115 23:00:41.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02367775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023799958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:41.680" endtime="20201115 23:00:41.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02367775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023799958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:41.971" endtime="20201115 23:00:41.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.979" endtime="20201115 23:00:41.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.677" endtime="20201115 23:00:41.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.676" endtime="20201115 23:00:41.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.986" level="INFO">${RESULT} = [{'time': 0.023799958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012220799999999865, 'source_diff': 0.00012220799999999865}, {'time': 0.023952444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:41.983" endtime="20201115 23:00:41.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.999" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:41.987" endtime="20201115 23:00:41.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.003" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.002" endtime="20201115 23:00:42.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.006" level="INFO">VALUE: [0.00012220799999999865, 0.0001219579999999984, 0.00012236100000000139, 0.00012243099999999923, 0.00012179099999999957, 0.00012179199999999904, 0.00012247200000000194, 0.0001219029999999996, 0.00012204199999999929, 0.0001222640000000004, 0.00012197300000000091, 0.0001224030000000001, 0.00012241699999999966, 0.00012259799999999807, 0.00012216699999999941, 0.00012177799999999947, 0.00012188800000000055, 0.000121777, 0.00012195800000000187, 0.0001219029999999996, 0.0001224579999999989, 0.00012206899999999896, 0.00012172199999999772, 0.00012240200000000062, 0.00012213900000000028, 0.00012247300000000141, 0.00012245800000000237, 0.0001220700000000019, 0.00012263900000000078, 0.0001224030000000001, 0.00012212499999999724, 0.00012197199999999797, 0.00012258299999999903, 0.00012208299999999853, 0.00012242999999999976, 0.00012173600000000076, 0.00012180599999999861, 0.0001224449999999988, 0.00012206999999999843, 0.0001217639999999999, 0.00012256999999999893, 0.00012198600000000101, 0.00012186100000000089, 0.00012220799999999865, 0.0001224579999999989, 0.0001223480000000013, 0.00012177799999999947, 0.00012197200000000144, 0.00012268, 0.0001226250000000012]</msg>
<status status="PASS" starttime="20201115 23:00:42.004" endtime="20201115 23:00:42.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.000" endtime="20201115 23:00:42.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.009" endtime="20201115 23:00:42.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.013" endtime="20201115 23:00:42.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.011" endtime="20201115 23:00:42.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.008" endtime="20201115 23:00:42.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.642" endtime="20201115 23:00:42.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.640" endtime="20201115 23:00:42.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.640" endtime="20201115 23:00:42.034"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.036" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.044" endtime="20201115 23:00:42.063"></status>
</kw>
<msg timestamp="20201115 23:00:42.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.043" endtime="20201115 23:00:42.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.065" endtime="20201115 23:00:42.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.067" endtime="20201115 23:00:42.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.040" endtime="20201115 23:00:42.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.038" endtime="20201115 23:00:42.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.076" endtime="20201115 23:00:42.362"></status>
</kw>
<msg timestamp="20201115 23:00:42.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023675153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023798889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.074" endtime="20201115 23:00:42.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023675153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023798889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.366" endtime="20201115 23:00:42.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.374" endtime="20201115 23:00:42.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.072" endtime="20201115 23:00:42.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.070" endtime="20201115 23:00:42.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.381" level="INFO">${RESULT} = [{'time': 0.023798889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001237359999999993, 'source_diff': 0.0001237359999999993}, {'time': 0.023940486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:42.378" endtime="20201115 23:00:42.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.394" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:42.382" endtime="20201115 23:00:42.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.398" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.397" endtime="20201115 23:00:42.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.402" level="INFO">VALUE: [0.0001237359999999993, 0.00012348599999999904, 0.00012341700000000067, 0.0001229160000000007, 0.0001236519999999984, 0.0001235839999999995, 0.00012336099999999892, 0.00012361099999999917, 0.00012351400000000165, 0.00012280499999999667, 0.00012338899999999806, 0.00012301400000000115, 0.00012338900000000153, 0.00012337499999999849, 0.00012358300000000003, 0.00012308299999999953, 0.00012362499999999874, 0.00012270799999999915, 0.00012302699999999778, 0.00012281999999999918, 0.00012308400000000247, 0.00012306899999999996, 0.00012297199999999897, 0.00012286099999999842, 0.0001234030000000011, 0.0001229449999999993, 0.00012298599999999854, 0.00012279200000000004, 0.00012350000000000208, 0.00012365299999999788, 0.00012319400000000008, 0.00012325000000000183, 0.00012333400000000272, 0.00012280500000000014, 0.00012269499999999905, 0.00012319400000000008, 0.00012369500000000005, 0.00012319400000000008, 0.00012347199999999947, 0.00012291700000000017, 0.00012334699999999935, 0.00012359700000000307, 0.0001228480000000018, 0.00012287500000000146, 0.0001233190000000002, 0.0001232779999999975, 0.00012279200000000004, 0.00012355600000000036, 0.0001233480000000023, 0.0001235969999999996]</msg>
<status status="PASS" starttime="20201115 23:00:42.400" endtime="20201115 23:00:42.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.395" endtime="20201115 23:00:42.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.405" endtime="20201115 23:00:42.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.409" endtime="20201115 23:00:42.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.407" endtime="20201115 23:00:42.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.403" endtime="20201115 23:00:42.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.037" endtime="20201115 23:00:42.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.035" endtime="20201115 23:00:42.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.034" endtime="20201115 23:00:42.430"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.433" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.441" endtime="20201115 23:00:42.460"></status>
</kw>
<msg timestamp="20201115 23:00:42.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.439" endtime="20201115 23:00:42.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.462" endtime="20201115 23:00:42.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.464" endtime="20201115 23:00:42.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.437" endtime="20201115 23:00:42.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.435" endtime="20201115 23:00:42.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.473" endtime="20201115 23:00:42.760"></status>
</kw>
<msg timestamp="20201115 23:00:42.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023868806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023993444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.472" endtime="20201115 23:00:42.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023868806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023993444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.764" endtime="20201115 23:00:42.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.772" endtime="20201115 23:00:42.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.469" endtime="20201115 23:00:42.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.467" endtime="20201115 23:00:42.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.779" level="INFO">${RESULT} = [{'time': 0.023993444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012463799999999983, 'source_diff': 0.00012463799999999983}, {'time': 0.024130972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:42.775" endtime="20201115 23:00:42.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.793" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:42.780" endtime="20201115 23:00:42.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.798" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.797" endtime="20201115 23:00:42.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.800" level="INFO">VALUE: [0.00012463799999999983, 0.0001244160000000022, 0.00012455500000000189, 0.00012383300000000028, 0.00012438899999999906, 0.00012427800000000197, 0.00012408300000000053, 0.0001240970000000001, 0.0001237220000000032, 0.00012470900000000062, 0.00012406900000000096, 0.00012447200000000047, 0.00012411099999999967, 0.00012433400000000025, 0.0001246389999999993, 0.00012419499999999709, 0.00012395799999999693, 0.0001245129999999997, 0.00012381899999999724, 0.0001242779999999985, 0.00012405600000000086, 0.00012395899999999987, 0.00012430599999999764, 0.00012438899999999906, 0.00012440299999999863, 0.00012420900000000012, 0.00012459800000000007, 0.00012425000000000283, 0.00012420900000000012, 0.00012375000000000233, 0.00012434700000000035, 0.0001242779999999985, 0.00012433300000000078, 0.00012440299999999863, 0.00012467999999999854, 0.00012415299999999838, 0.00012422200000000022, 0.00012415200000000237, 0.00012411099999999967, 0.00012458300000000103, 0.0001239450000000003, 0.00012433300000000078, 0.00012444399999999786, 0.00012443099999999777, 0.0001243060000000011, 0.00012452699999999928, 0.00012402800000000172, 0.0001242359999999998, 0.00012461100000000017, 0.00012459800000000007]</msg>
<status status="PASS" starttime="20201115 23:00:42.799" endtime="20201115 23:00:42.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.794" endtime="20201115 23:00:42.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.803" endtime="20201115 23:00:42.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.807" endtime="20201115 23:00:42.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.805" endtime="20201115 23:00:42.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.802" endtime="20201115 23:00:42.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.433" endtime="20201115 23:00:42.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.432" endtime="20201115 23:00:42.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.431" endtime="20201115 23:00:42.828"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.830" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.838" endtime="20201115 23:00:42.858"></status>
</kw>
<msg timestamp="20201115 23:00:42.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.837" endtime="20201115 23:00:42.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.859" endtime="20201115 23:00:42.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.862" endtime="20201115 23:00:42.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.834" endtime="20201115 23:00:42.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.832" endtime="20201115 23:00:42.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.871" endtime="20201115 23:00:43.156"></status>
</kw>
<msg timestamp="20201115 23:00:43.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023798972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023924778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.869" endtime="20201115 23:00:43.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023798972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023924778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.160" endtime="20201115 23:00:43.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.168" endtime="20201115 23:00:43.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.866" endtime="20201115 23:00:43.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.865" endtime="20201115 23:00:43.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.175" level="INFO">${RESULT} = [{'time': 0.023924778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012580599999999914, 'source_diff': 0.00012580599999999914}, {'time': 0.024069181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:43.172" endtime="20201115 23:00:43.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.188" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:43.176" endtime="20201115 23:00:43.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.192" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.191" endtime="20201115 23:00:43.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.195" level="INFO">VALUE: [0.00012580599999999914, 0.00012544499999999834, 0.00012507000000000143, 0.00012497300000000044, 0.00012536100000000092, 0.0001250000000000001, 0.00012552799999999975, 0.0001251389999999998, 0.00012519499999999809, 0.00012479200000000204, 0.00012551400000000018, 0.00012481899999999824, 0.00012477800000000247, 0.00012470900000000062, 0.00012562500000000074, 0.00012532000000000168, 0.00012533399999999778, 0.00012566700000000292, 0.00012547200000000147, 0.00012474999999999986, 0.0001255840000000015, 0.00012490199999999965, 0.00012482000000000118, 0.0001255000000000006, 0.00012556999999999846, 0.00012476399999999943, 0.00012479200000000204, 0.0001250559999999984, 0.00012538900000000006, 0.00012526399999999993, 0.0001252779999999995, 0.00012512500000000024, 0.00012536099999999745, 0.0001250559999999984, 0.00012533300000000178, 0.00012547200000000147, 0.00012476299999999996, 0.00012469499999999759, 0.0001247640000000029, 0.00012547299999999748, 0.00012508299999999806, 0.0001252909999999996, 0.00012493099999999827, 0.00012486100000000042, 0.00012520799999999818, 0.00012551400000000018, 0.00012511200000000014, 0.00012520900000000112, 0.0001251939999999986, 0.00012538900000000006]</msg>
<status status="PASS" starttime="20201115 23:00:43.193" endtime="20201115 23:00:43.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.189" endtime="20201115 23:00:43.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.198" endtime="20201115 23:00:43.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.201" endtime="20201115 23:00:43.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.200" endtime="20201115 23:00:43.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.196" endtime="20201115 23:00:43.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.831" endtime="20201115 23:00:43.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.829" endtime="20201115 23:00:43.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.828" endtime="20201115 23:00:43.222"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.225" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.233" endtime="20201115 23:00:43.252"></status>
</kw>
<msg timestamp="20201115 23:00:43.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.231" endtime="20201115 23:00:43.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.253" endtime="20201115 23:00:43.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.256" endtime="20201115 23:00:43.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.229" endtime="20201115 23:00:43.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.226" endtime="20201115 23:00:43.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.265" endtime="20201115 23:00:43.552"></status>
</kw>
<msg timestamp="20201115 23:00:43.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023668208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023794361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.263" endtime="20201115 23:00:43.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023668208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023794361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.556" endtime="20201115 23:00:43.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.564" endtime="20201115 23:00:43.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.261" endtime="20201115 23:00:43.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.259" endtime="20201115 23:00:43.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.571" level="INFO">${RESULT} = [{'time': 0.023794361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012615300000000038, 'source_diff': 0.00012615300000000038}, {'time': 0.023948917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:43.567" endtime="20201115 23:00:43.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.583" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:43.572" endtime="20201115 23:00:43.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.588" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.587" endtime="20201115 23:00:43.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.590" level="INFO">VALUE: [0.00012615300000000038, 0.00012590300000000013, 0.00012616699999999995, 0.0001264170000000002, 0.0001261529999999969, 0.00012670799999999968, 0.00012634799999999835, 0.00012576399999999696, 0.00012670799999999968, 0.00012625000000000136, 0.00012595900000000188, 0.00012651299999999824, 0.00012608399999999853, 0.00012648699999999805, 0.00012662499999999827, 0.0001259719999999985, 0.00012620900000000213, 0.00012644499999999934, 0.0001266109999999987, 0.00012633400000000225, 0.00012581899999999924, 0.00012576300000000096, 0.00012612500000000124, 0.00012636100000000192, 0.00012606999999999896, 0.00012629200000000007, 0.00012637499999999802, 0.00012608299999999906, 0.0001263329999999993, 0.00012665199999999793, 0.00012658299999999956, 0.000126262999999998, 0.00012641600000000072, 0.0001258060000000026, 0.00012584800000000132, 0.00012612500000000124, 0.00012601400000000068, 0.00012584699999999838, 0.00012579199999999957, 0.00012590300000000013, 0.00012605499999999992, 0.00012590300000000013, 0.0001265840000000025, 0.00012652800000000075, 0.00012654200000000032, 0.00012641600000000072, 0.0001260559999999994, 0.00012583400000000175, 0.00012579199999999957, 0.00012572199999999825]</msg>
<status status="PASS" starttime="20201115 23:00:43.589" endtime="20201115 23:00:43.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.584" endtime="20201115 23:00:43.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.593" endtime="20201115 23:00:43.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.597" endtime="20201115 23:00:43.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.595" endtime="20201115 23:00:43.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.592" endtime="20201115 23:00:43.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.225" endtime="20201115 23:00:43.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.223" endtime="20201115 23:00:43.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.223" endtime="20201115 23:00:43.618"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.620" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.628" endtime="20201115 23:00:43.648"></status>
</kw>
<msg timestamp="20201115 23:00:43.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.627" endtime="20201115 23:00:43.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.649" endtime="20201115 23:00:43.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.652" endtime="20201115 23:00:43.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.624" endtime="20201115 23:00:43.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.622" endtime="20201115 23:00:43.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.661" endtime="20201115 23:00:43.946"></status>
</kw>
<msg timestamp="20201115 23:00:43.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023779875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023907083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.659" endtime="20201115 23:00:43.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023779875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023907083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.950" endtime="20201115 23:00:43.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.958" endtime="20201115 23:00:43.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.657" endtime="20201115 23:00:43.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.655" endtime="20201115 23:00:43.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.965" level="INFO">${RESULT} = [{'time': 0.023907083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012720800000000018, 'source_diff': 0.00012720800000000018}, {'time': 0.024060611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:43.962" endtime="20201115 23:00:43.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.978" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:43.966" endtime="20201115 23:00:43.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.982" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.981" endtime="20201115 23:00:43.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.984" level="INFO">VALUE: [0.00012720800000000018, 0.0001276529999999984, 0.00012723599999999932, 0.000126778000000001, 0.00012749999999999914, 0.0001269719999999995, 0.0001270139999999982, 0.00012737499999999902, 0.0001272780000000015, 0.0001276940000000011, 0.00012677799999999753, 0.0001271940000000006, 0.00012720899999999966, 0.0001276940000000011, 0.0001273889999999986, 0.0001272780000000015, 0.00012734699999999988, 0.0001270560000000004, 0.0001272499999999989, 0.00012754100000000185, 0.00012754200000000132, 0.0001267499999999984, 0.00012697200000000297, 0.00012684799999999885, 0.00012702800000000125, 0.0001272780000000015, 0.00012698599999999907, 0.000126778000000001, 0.00012722299999999923, 0.00012702799999999778, 0.0001267360000000023, 0.0001269300000000008, 0.0001272919999999976, 0.00012684699999999938, 0.0001271109999999992, 0.00012712499999999877, 0.0001268199999999997, 0.00012770800000000068, 0.00012726399999999846, 0.00012740199999999868, 0.00012706999999999996, 0.00012708300000000006, 0.00012722199999999975, 0.00012676400000000143, 0.0001275139999999987, 0.0001275000000000026, 0.0001267360000000023, 0.00012751400000000218, 0.0001274589999999999, 0.00012684799999999885]</msg>
<status status="PASS" starttime="20201115 23:00:43.983" endtime="20201115 23:00:43.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.978" endtime="20201115 23:00:43.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.987" endtime="20201115 23:00:43.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.991" endtime="20201115 23:00:44.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.989" endtime="20201115 23:00:44.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.986" endtime="20201115 23:00:44.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.621" endtime="20201115 23:00:44.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.619" endtime="20201115 23:00:44.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.618" endtime="20201115 23:00:44.012"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.014" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.023" endtime="20201115 23:00:44.042"></status>
</kw>
<msg timestamp="20201115 23:00:44.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.021" endtime="20201115 23:00:44.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.044" endtime="20201115 23:00:44.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.046" endtime="20201115 23:00:44.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.019" endtime="20201115 23:00:44.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.016" endtime="20201115 23:00:44.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.055" endtime="20201115 23:00:44.341"></status>
</kw>
<msg timestamp="20201115 23:00:44.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024489083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.054" endtime="20201115 23:00:44.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024489083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.345" endtime="20201115 23:00:44.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.353" endtime="20201115 23:00:44.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.051" endtime="20201115 23:00:44.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.050" endtime="20201115 23:00:44.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.360" level="INFO">${RESULT} = [{'time': 0.024616972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012788900000000256, 'source_diff': 0.00012788900000000256}, {'time': 0.024777403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:44.357" endtime="20201115 23:00:44.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.374" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:44.361" endtime="20201115 23:00:44.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.379" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.378" endtime="20201115 23:00:44.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.381" level="INFO">VALUE: [0.00012788900000000256, 0.00012830600000000164, 0.00012841600000000272, 0.00012840299999999916, 0.00012830600000000164, 0.0001280139999999992, 0.00012813899999999934, 0.00012772200000000025, 0.00012827699999999956, 0.0001281390000000028, 0.00012802799999999878, 0.00012802800000000225, 0.00012866700000000245, 0.0001278330000000008, 0.0001283889999999996, 0.00012784799999999985, 0.0001278889999999991, 0.00012847300000000048, 0.00012806899999999802, 0.0001280000000000031, 0.00012827799999999903, 0.00012837500000000002, 0.00012870899999999769, 0.0001283889999999996, 0.00012772200000000025, 0.00012770800000000068, 0.00012818099999999805, 0.00012852799999999928, 0.000128569999999998, 0.0001279300000000018, 0.00012797299999999998, 0.00012795799999999746, 0.00012844400000000186, 0.0001278889999999991, 0.00012791599999999875, 0.00012788900000000256, 0.00012837500000000002, 0.00012799999999999964, 0.00012833400000000078, 0.00012790199999999918, 0.00012770900000000016, 0.00012799999999999964, 0.00012833299999999784, 0.00012869499999999812, 0.0001283049999999987, 0.00012841699999999526, 0.00012847199999999753, 0.0001278889999999991, 0.00012845799999999796, 0.00012816699999999848]</msg>
<status status="PASS" starttime="20201115 23:00:44.380" endtime="20201115 23:00:44.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.375" endtime="20201115 23:00:44.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.384" endtime="20201115 23:00:44.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.388" endtime="20201115 23:00:44.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.386" endtime="20201115 23:00:44.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.383" endtime="20201115 23:00:44.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.015" endtime="20201115 23:00:44.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.013" endtime="20201115 23:00:44.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.012" endtime="20201115 23:00:44.409"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.412" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.420" endtime="20201115 23:00:44.439"></status>
</kw>
<msg timestamp="20201115 23:00:44.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.418" endtime="20201115 23:00:44.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.441" endtime="20201115 23:00:44.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.443" endtime="20201115 23:00:44.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.416" endtime="20201115 23:00:44.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.414" endtime="20201115 23:00:44.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.453" endtime="20201115 23:00:44.737"></status>
</kw>
<msg timestamp="20201115 23:00:44.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023659944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023789361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.451" endtime="20201115 23:00:44.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023659944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023789361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.741" endtime="20201115 23:00:44.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.750" endtime="20201115 23:00:44.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.449" endtime="20201115 23:00:44.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.447" endtime="20201115 23:00:44.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.756" level="INFO">${RESULT} = [{'time': 0.023789361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012941699999999973, 'source_diff': 0.00012941699999999973}, {'time': 0.023950708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:44.753" endtime="20201115 23:00:44.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.769" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:44.757" endtime="20201115 23:00:44.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.773" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.772" endtime="20201115 23:00:44.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.776" level="INFO">VALUE: [0.00012941699999999973, 0.0001295270000000008, 0.00012934700000000188, 0.00012969499999999912, 0.00012912500000000077, 0.0001291110000000012, 0.00012884700000000138, 0.00012965200000000093, 0.00012927800000000003, 0.0001295829999999991, 0.00012927800000000003, 0.00012902799999999978, 0.000128778000000003, 0.0001287919999999991, 0.0001288880000000006, 0.0001290140000000002, 0.00012918099999999905, 0.00012894400000000236, 0.0001295829999999991, 0.0001295829999999991, 0.0001289590000000014, 0.00012916699999999948, 0.00012891599999999975, 0.0001293890000000006, 0.00012872199999999778, 0.000129569000000003, 0.00012937500000000102, 0.00012927800000000003, 0.00012909699999999816, 0.00012908400000000153, 0.0001292079999999987, 0.0001290699999999985, 0.00012912500000000077, 0.00012884700000000138, 0.00012884700000000138, 0.00012872200000000125, 0.00012927800000000003, 0.00012944499999999887, 0.0001288890000000001, 0.00012963900000000084, 0.0001295829999999991, 0.00012881899999999877, 0.00012922199999999828, 0.000129166, 0.00012890299999999966, 0.00012901299999999727, 0.00012962500000000127, 0.00012911099999999773, 0.0001295829999999991, 0.00012963899999999737]</msg>
<status status="PASS" starttime="20201115 23:00:44.774" endtime="20201115 23:00:44.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.770" endtime="20201115 23:00:44.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.779" endtime="20201115 23:00:44.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.783" endtime="20201115 23:00:44.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.781" endtime="20201115 23:00:44.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.778" endtime="20201115 23:00:44.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.412" endtime="20201115 23:00:44.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.410" endtime="20201115 23:00:44.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.410" endtime="20201115 23:00:44.804"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.806" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.814" endtime="20201115 23:00:44.834"></status>
</kw>
<msg timestamp="20201115 23:00:44.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.813" endtime="20201115 23:00:44.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.835" endtime="20201115 23:00:44.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.838" endtime="20201115 23:00:44.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.810" endtime="20201115 23:00:44.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.808" endtime="20201115 23:00:44.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.846" endtime="20201115 23:00:45.131"></status>
</kw>
<msg timestamp="20201115 23:00:45.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023839167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023969, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:44.845" endtime="20201115 23:00:45.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023839167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023969, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:45.135" endtime="20201115 23:00:45.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.144" endtime="20201115 23:00:45.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.842" endtime="20201115 23:00:45.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.841" endtime="20201115 23:00:45.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.150" level="INFO">${RESULT} = [{'time': 0.023969, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012983299999999934, 'source_diff': 0.00012983299999999934}, {'time': 0.024125556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:45.147" endtime="20201115 23:00:45.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.163" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:45.151" endtime="20201115 23:00:45.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.168" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.166" endtime="20201115 23:00:45.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.170" level="INFO">VALUE: [0.00012983299999999934, 0.0001304029999999977, 0.00013015299999999744, 0.0001305830000000001, 0.0001299720000000025, 0.00013052699999999834, 0.0001298890000000011, 0.00012970900000000216, 0.00012986099999999848, 0.0001299029999999972, 0.0001298890000000011, 0.00012984800000000185, 0.0001301249999999983, 0.00013002800000000078, 0.00013018000000000057, 0.00012981899999999977, 0.00013045899999999944, 0.00013055600000000042, 0.00012998700000000155, 0.00013002800000000078, 0.00013001399999999774, 0.00013002800000000078, 0.00013033299999999984, 0.00012987499999999805, 0.00012970800000000268, 0.00013063900000000184, 0.00013051300000000224, 0.0001300270000000013, 0.0001298880000000016, 0.00013013900000000134, 0.0001298890000000011, 0.00013029100000000113, 0.00013022300000000223, 0.000130472000000003, 0.0001301530000000009, 0.00013058400000000303, 0.0001304859999999991, 0.00012969399999999964, 0.0001299439999999999, 0.00013029199999999713, 0.00013029100000000113, 0.0001303469999999994, 0.0001305980000000026, 0.00013031999999999974, 0.0001305279999999978, 0.00013019499999999962, 0.00013009699999999916, 0.0001300270000000013, 0.00013019399999999667, 0.0001297360000000053]</msg>
<status status="PASS" starttime="20201115 23:00:45.169" endtime="20201115 23:00:45.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.164" endtime="20201115 23:00:45.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.174" endtime="20201115 23:00:45.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.177" endtime="20201115 23:00:45.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.175" endtime="20201115 23:00:45.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.172" endtime="20201115 23:00:45.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.807" endtime="20201115 23:00:45.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.805" endtime="20201115 23:00:45.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.804" endtime="20201115 23:00:45.198"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.200" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.209" endtime="20201115 23:00:45.228"></status>
</kw>
<msg timestamp="20201115 23:00:45.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.207" endtime="20201115 23:00:45.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.230" endtime="20201115 23:00:45.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.232" endtime="20201115 23:00:45.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.204" endtime="20201115 23:00:45.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.202" endtime="20201115 23:00:45.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.241" endtime="20201115 23:00:45.528"></status>
</kw>
<msg timestamp="20201115 23:00:45.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023768681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023900375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.239" endtime="20201115 23:00:45.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023768681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023900375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.532" endtime="20201115 23:00:45.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.540" endtime="20201115 23:00:45.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.237" endtime="20201115 23:00:45.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.235" endtime="20201115 23:00:45.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.546" level="INFO">${RESULT} = [{'time': 0.023900375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013169400000000164, 'source_diff': 0.00013169400000000164}, {'time': 0.024059764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:45.543" endtime="20201115 23:00:45.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.560" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:45.548" endtime="20201115 23:00:45.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.564" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.563" endtime="20201115 23:00:45.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.566" level="INFO">VALUE: [0.00013169400000000164, 0.00013136099999999998, 0.00013086099999999948, 0.00013131900000000127, 0.00013151399999999924, 0.00013109700000000016, 0.0001308890000000021, 0.00013083300000000034, 0.00013074999999999892, 0.00013142999999999835, 0.00013115299999999844, 0.00013119399999999767, 0.00013137499999999955, 0.0001311249999999993, 0.00013092999999999785, 0.00013086099999999948, 0.00013159700000000066, 0.00013142999999999835, 0.00013116700000000148, 0.00013100000000000264, 0.00013158299999999762, 0.00013095800000000046, 0.0001313470000000004, 0.00013087500000000252, 0.00013100000000000264, 0.00013086099999999948, 0.00013108299999999712, 0.0001310700000000005, 0.0001308189999999973, 0.00013072199999999978, 0.00013145899999999697, 0.00013161100000000023, 0.00013124999999999942, 0.000131263000000003, 0.00013119400000000114, 0.00013074999999999892, 0.00013076299999999902, 0.0001312500000000029, 0.0001307639999999985, 0.00013169499999999765, 0.0001308469999999999, 0.00013138899999999912, 0.0001310700000000005, 0.00013138899999999912, 0.0001315140000000027, 0.0001316249999999998, 0.00013155499999999848, 0.00013074999999999892, 0.0001314860000000001, 0.00013163900000000284]</msg>
<status status="PASS" starttime="20201115 23:00:45.565" endtime="20201115 23:00:45.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.560" endtime="20201115 23:00:45.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.570" endtime="20201115 23:00:45.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.573" endtime="20201115 23:00:45.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.571" endtime="20201115 23:00:45.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.568" endtime="20201115 23:00:45.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.201" endtime="20201115 23:00:45.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.199" endtime="20201115 23:00:45.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.199" endtime="20201115 23:00:45.594"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.596" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.604" endtime="20201115 23:00:45.624"></status>
</kw>
<msg timestamp="20201115 23:00:45.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.603" endtime="20201115 23:00:45.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.625" endtime="20201115 23:00:45.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.628" endtime="20201115 23:00:45.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.600" endtime="20201115 23:00:45.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.598" endtime="20201115 23:00:45.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.637" endtime="20201115 23:00:45.924"></status>
</kw>
<msg timestamp="20201115 23:00:45.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023720514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023853097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.635" endtime="20201115 23:00:45.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023720514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023853097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.928" endtime="20201115 23:00:45.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.940" endtime="20201115 23:00:45.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.633" endtime="20201115 23:00:45.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.631" endtime="20201115 23:00:45.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.946" level="INFO">${RESULT} = [{'time': 0.023853097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013258299999999862, 'source_diff': 0.00013258299999999862}, {'time': 0.024006458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:45.943" endtime="20201115 23:00:45.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.961" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:45.947" endtime="20201115 23:00:45.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.965" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.964" endtime="20201115 23:00:45.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.968" level="INFO">VALUE: [0.00013258299999999862, 0.00013193000000000232, 0.0001320700000000015, 0.00013174999999999992, 0.0001320700000000015, 0.00013173699999999983, 0.00013200000000000017, 0.00013237500000000055, 0.00013256900000000252, 0.0001327219999999983, 0.00013244399999999892, 0.0001324449999999984, 0.0001319860000000006, 0.00013163899999999937, 0.00013213899999999987, 0.00013177799999999906, 0.00013233300000000184, 0.0001323189999999988, 0.0001320969999999977, 0.00013270799999999874, 0.00013238900000000012, 0.00013245900000000144, 0.00013206899999999855, 0.0001319449999999979, 0.00013181999999999777, 0.00013204199999999888, 0.00013208400000000106, 0.00013220899999999772, 0.00013261199999999723, 0.00013201399999999974, 0.00013165299999999894, 0.00013213899999999987, 0.00013200000000000017, 0.00013238900000000012, 0.00013200000000000017, 0.00013181900000000177, 0.00013188899999999962, 0.0001323470000000014, 0.00013200000000000017, 0.00013258400000000156, 0.0001318340000000008, 0.00013183299999999787, 0.0001327080000000022, 0.000132264, 0.0001325409999999999, 0.00013202699999999984, 0.00013219499999999815, 0.00013169499999999765, 0.00013245900000000144, 0.00013225000000000042]</msg>
<status status="PASS" starttime="20201115 23:00:45.966" endtime="20201115 23:00:45.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.962" endtime="20201115 23:00:45.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.971" endtime="20201115 23:00:45.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.974" endtime="20201115 23:00:45.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.973" endtime="20201115 23:00:45.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.969" endtime="20201115 23:00:45.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.597" endtime="20201115 23:00:45.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.595" endtime="20201115 23:00:45.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.594" endtime="20201115 23:00:45.995"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.998" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.006" endtime="20201115 23:00:46.025"></status>
</kw>
<msg timestamp="20201115 23:00:46.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.004" endtime="20201115 23:00:46.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.027" endtime="20201115 23:00:46.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.029" endtime="20201115 23:00:46.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.002" endtime="20201115 23:00:46.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.000" endtime="20201115 23:00:46.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.039" endtime="20201115 23:00:46.323"></status>
</kw>
<msg timestamp="20201115 23:00:46.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023852361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023986069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.037" endtime="20201115 23:00:46.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023852361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023986069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.328" endtime="20201115 23:00:46.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.336" endtime="20201115 23:00:46.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.034" endtime="20201115 23:00:46.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.032" endtime="20201115 23:00:46.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.342" level="INFO">${RESULT} = [{'time': 0.023986069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013370799999999974, 'source_diff': 0.00013370799999999974}, {'time': 0.024144653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:46.339" endtime="20201115 23:00:46.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.355" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:46.343" endtime="20201115 23:00:46.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.360" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.359" endtime="20201115 23:00:46.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.362" level="INFO">VALUE: [0.00013370799999999974, 0.00013368100000000008, 0.0001329449999999989, 0.0001333609999999985, 0.0001333059999999997, 0.00013345899999999897, 0.00013325000000000142, 0.00013348599999999863, 0.00013324999999999795, 0.00013355599999999995, 0.00013295899999999847, 0.00013283299999999887, 0.000133264000000001, 0.0001330969999999987, 0.00013297299999999804, 0.0001329860000000016, 0.00013291699999999976, 0.0001334449999999994, 0.00013270799999999874, 0.00013319399999999967, 0.00013311100000000173, 0.00013319399999999967, 0.00013286199999999748, 0.00013275000000000092, 0.00013306999999999902, 0.00013323600000000185, 0.00013305599999999945, 0.00013325000000000142, 0.00013312499999999783, 0.00013308299999999912, 0.00013282000000000224, 0.00013343099999999983, 0.00013352699999999787, 0.00013308299999999912, 0.00013288900000000062, 0.00013309700000000216, 0.0001327640000000005, 0.00013320899999999872, 0.0001327640000000005, 0.00013345800000000296, 0.00013319499999999915, 0.000132957999999999, 0.00013351400000000124, 0.0001329999999999977, 0.00013319499999999915, 0.00013366600000000103, 0.0001330700000000025, 0.00013306899999999608, 0.000132860999999998, 0.00013330500000000023]</msg>
<status status="PASS" starttime="20201115 23:00:46.361" endtime="20201115 23:00:46.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.356" endtime="20201115 23:00:46.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.365" endtime="20201115 23:00:46.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.369" endtime="20201115 23:00:46.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.367" endtime="20201115 23:00:46.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.363" endtime="20201115 23:00:46.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.998" endtime="20201115 23:00:46.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.996" endtime="20201115 23:00:46.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.996" endtime="20201115 23:00:46.390"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.392" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.400" endtime="20201115 23:00:46.420"></status>
</kw>
<msg timestamp="20201115 23:00:46.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.398" endtime="20201115 23:00:46.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.421" endtime="20201115 23:00:46.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.424" endtime="20201115 23:00:46.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.396" endtime="20201115 23:00:46.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.394" endtime="20201115 23:00:46.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.433" endtime="20201115 23:00:46.719"></status>
</kw>
<msg timestamp="20201115 23:00:46.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023698986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023833167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.431" endtime="20201115 23:00:46.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023698986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023833167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.724" endtime="20201115 23:00:46.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.732" endtime="20201115 23:00:46.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.429" endtime="20201115 23:00:46.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.427" endtime="20201115 23:00:46.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.738" level="INFO">${RESULT} = [{'time': 0.023833167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013418100000000058, 'source_diff': 0.00013418100000000058}, {'time': 0.023986597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:46.735" endtime="20201115 23:00:46.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.751" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:46.739" endtime="20201115 23:00:46.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.756" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.754" endtime="20201115 23:00:46.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.758" level="INFO">VALUE: [0.00013418100000000058, 0.00013434699999999994, 0.0001339030000000012, 0.00013429100000000166, 0.0001346250000000028, 0.0001344999999999992, 0.00013429200000000113, 0.00013470900000000022, 0.00013461099999999976, 0.0001341800000000011, 0.0001344450000000004, 0.00013375000000000192, 0.00013458299999999715, 0.00013373600000000235, 0.0001343609999999995, 0.00013387499999999858, 0.0001338060000000002, 0.00013423699999999886, 0.0001344999999999992, 0.00013420799999999677, 0.000134167000000001, 0.00013393100000000033, 0.0001340280000000013, 0.00013369400000000017, 0.00013465299999999847, 0.0001341800000000011, 0.00013401399999999827, 0.0001343190000000008, 0.0001340280000000013, 0.00013432000000000027, 0.000134651999999999, 0.00013448599999999963, 0.00013448599999999963, 0.0001343609999999995, 0.00013420899999999972, 0.00013437499999999908, 0.0001344030000000017, 0.00013375000000000192, 0.00013390299999999772, 0.00013465300000000194, 0.00013451399999999877, 0.00013448599999999963, 0.00013433300000000037, 0.00013402799999999784, 0.00013406900000000055, 0.00013408299999999665, 0.00013440299999999822, 0.00013381999999999977, 0.00013420800000000024, 0.0001340139999999948]</msg>
<status status="PASS" starttime="20201115 23:00:46.757" endtime="20201115 23:00:46.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.752" endtime="20201115 23:00:46.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.761" endtime="20201115 23:00:46.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.764" endtime="20201115 23:00:46.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.763" endtime="20201115 23:00:46.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.759" endtime="20201115 23:00:46.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.393" endtime="20201115 23:00:46.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.391" endtime="20201115 23:00:46.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.390" endtime="20201115 23:00:46.786"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.788" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.796" endtime="20201115 23:00:46.816"></status>
</kw>
<msg timestamp="20201115 23:00:46.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.795" endtime="20201115 23:00:46.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.818" endtime="20201115 23:00:46.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.820" endtime="20201115 23:00:46.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.792" endtime="20201115 23:00:46.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.790" endtime="20201115 23:00:46.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.829" endtime="20201115 23:00:47.115"></status>
</kw>
<msg timestamp="20201115 23:00:47.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024293042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024428667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.828" endtime="20201115 23:00:47.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024293042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024428667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.119" endtime="20201115 23:00:47.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.127" endtime="20201115 23:00:47.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.825" endtime="20201115 23:00:47.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.823" endtime="20201115 23:00:47.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.133" level="INFO">${RESULT} = [{'time': 0.024428667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013562500000000033, 'source_diff': 0.00013562500000000033}, {'time': 0.024591069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:47.130" endtime="20201115 23:00:47.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.146" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:47.134" endtime="20201115 23:00:47.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.151" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.150" endtime="20201115 23:00:47.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.153" level="INFO">VALUE: [0.00013562500000000033, 0.00013562500000000033, 0.00013506899999999808, 0.00013479200000000163, 0.00013505500000000198, 0.0001353060000000017, 0.00013547200000000106, 0.0001346800000000016, 0.000135167000000002, 0.00013469500000000065, 0.00013565299999999947, 0.0001355970000000012, 0.00013487499999999958, 0.00013477800000000206, 0.00013523599999999691, 0.00013483399999999687, 0.00013554099999999944, 0.00013548600000000063, 0.00013472200000000031, 0.00013537500000000008, 0.00013487499999999958, 0.00013509800000000016, 0.00013527699999999962, 0.00013529100000000266, 0.00013526399999999952, 0.00013547200000000106, 0.00013542999999999888, 0.00013548600000000063, 0.00013516599999999906, 0.00013543099999999836, 0.00013473599999999988, 0.00013505600000000145, 0.00013543100000000183, 0.00013473599999999988, 0.00013490199999999924, 0.0001353610000000005, 0.00013487499999999958, 0.00013474999999999945, 0.0001351800000000021, 0.00013479199999999816, 0.00013566699999999904, 0.00013473599999999988, 0.00013479199999999816, 0.00013513900000000287, 0.00013547200000000106, 0.00013477800000000206, 0.00013512499999999983, 0.00013483300000000087, 0.00013562500000000033, 0.00013498599999999666]</msg>
<status status="PASS" starttime="20201115 23:00:47.152" endtime="20201115 23:00:47.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.147" endtime="20201115 23:00:47.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.156" endtime="20201115 23:00:47.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.160" endtime="20201115 23:00:47.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.158" endtime="20201115 23:00:47.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.154" endtime="20201115 23:00:47.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.789" endtime="20201115 23:00:47.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.787" endtime="20201115 23:00:47.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.786" endtime="20201115 23:00:47.181"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.183" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.191" endtime="20201115 23:00:47.211"></status>
</kw>
<msg timestamp="20201115 23:00:47.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.190" endtime="20201115 23:00:47.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.213" endtime="20201115 23:00:47.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.215" endtime="20201115 23:00:47.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.187" endtime="20201115 23:00:47.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.185" endtime="20201115 23:00:47.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.224" endtime="20201115 23:00:47.511"></status>
</kw>
<msg timestamp="20201115 23:00:47.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023719, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023855694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:47.222" endtime="20201115 23:00:47.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023719, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023855694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:47.515" endtime="20201115 23:00:47.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.523" endtime="20201115 23:00:47.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.220" endtime="20201115 23:00:47.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.218" endtime="20201115 23:00:47.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.530" level="INFO">${RESULT} = [{'time': 0.023855694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001366939999999997, 'source_diff': 0.0001366939999999997}, {'time': 0.024023069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:47.527" endtime="20201115 23:00:47.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.544" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:47.531" endtime="20201115 23:00:47.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.549" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.548" endtime="20201115 23:00:47.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.551" level="INFO">VALUE: [0.0001366939999999997, 0.00013623600000000138, 0.00013588900000000015, 0.00013619499999999868, 0.0001360000000000007, 0.00013566599999999956, 0.00013615299999999997, 0.00013569400000000217, 0.00013594499999999843, 0.00013608300000000212, 0.00013648599999999816, 0.0001360549999999995, 0.00013649999999999773, 0.00013632000000000227, 0.00013648600000000163, 0.00013617999999999963, 0.00013625000000000095, 0.0001363610000000015, 0.00013673600000000188, 0.00013590299999999972, 0.00013598599999999766, 0.00013602799999999984, 0.00013567999999999913, 0.0001366109999999983, 0.00013605600000000245, 0.00013629199999999966, 0.00013606899999999908, 0.0001362780000000001, 0.00013575000000000045, 0.00013594399999999895, 0.00013644399999999945, 0.0001361390000000004, 0.00013637500000000108, 0.00013620799999999877, 0.00013601400000000027, 0.00013625000000000095, 0.00013579200000000263, 0.0001360419999999994, 0.0001358329999999984, 0.00013592999999999938, 0.00013612499999999736, 0.00013579200000000263, 0.0001361800000000031, 0.00013620799999999877, 0.00013620799999999877, 0.00013615299999999997, 0.00013595900000000147, 0.00013649999999999773, 0.0001356389999999999, 0.0001365970000000022]</msg>
<status status="PASS" starttime="20201115 23:00:47.550" endtime="20201115 23:00:47.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.545" endtime="20201115 23:00:47.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.555" endtime="20201115 23:00:47.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.558" endtime="20201115 23:00:47.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.557" endtime="20201115 23:00:47.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.553" endtime="20201115 23:00:47.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.184" endtime="20201115 23:00:47.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.182" endtime="20201115 23:00:47.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.181" endtime="20201115 23:00:47.579"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.582" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.590" endtime="20201115 23:00:47.609"></status>
</kw>
<msg timestamp="20201115 23:00:47.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.588" endtime="20201115 23:00:47.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.611" endtime="20201115 23:00:47.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.613" endtime="20201115 23:00:47.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.586" endtime="20201115 23:00:47.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.584" endtime="20201115 23:00:47.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.622" endtime="20201115 23:00:47.908"></status>
</kw>
<msg timestamp="20201115 23:00:47.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023719514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0238565, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:47.621" endtime="20201115 23:00:47.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023719514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0238565, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:47.912" endtime="20201115 23:00:47.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.920" endtime="20201115 23:00:47.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.618" endtime="20201115 23:00:47.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.616" endtime="20201115 23:00:47.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.926" level="INFO">${RESULT} = [{'time': 0.0238565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013698599999999866, 'source_diff': 0.00013698599999999866}, {'time': 0.024025861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:47.923" endtime="20201115 23:00:47.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.939" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:47.927" endtime="20201115 23:00:47.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.944" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.943" endtime="20201115 23:00:47.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.947" level="INFO">VALUE: [0.00013698599999999866, 0.00013695799999999952, 0.00013679200000000016, 0.0001370000000000017, 0.00013761199999999876, 0.00013748600000000263, 0.00013675000000000145, 0.00013734699999999947, 0.00013680599999999973, 0.00013729200000000066, 0.00013736099999999904, 0.00013704100000000094, 0.00013741600000000131, 0.00013673599999999841, 0.00013748699999999864, 0.000136861000000002, 0.00013736099999999904, 0.00013709699999999922, 0.00013743100000000036, 0.00013679099999999722, 0.00013687500000000158, 0.00013729200000000066, 0.0001376109999999993, 0.00013736099999999904, 0.00013759699999999972, 0.00013674999999999798, 0.00013762499999999886, 0.00013670899999999875, 0.00013730500000000076, 0.00013726400000000152, 0.00013674999999999798, 0.0001376109999999993, 0.00013727700000000162, 0.00013759699999999972, 0.0001371810000000001, 0.00013679200000000016, 0.00013687500000000158, 0.00013719500000000315, 0.00013704100000000094, 0.00013715300000000097, 0.00013690200000000124, 0.00013712500000000183, 0.00013680500000000026, 0.00013723599999999891, 0.00013674999999999798, 0.00013766700000000104, 0.00013722200000000281, 0.00013740200000000174, 0.00013716700000000054, 0.00013755600000000395]</msg>
<status status="PASS" starttime="20201115 23:00:47.945" endtime="20201115 23:00:47.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.940" endtime="20201115 23:00:47.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.950" endtime="20201115 23:00:47.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.953" endtime="20201115 23:00:47.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.952" endtime="20201115 23:00:47.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.948" endtime="20201115 23:00:47.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.582" endtime="20201115 23:00:47.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.580" endtime="20201115 23:00:47.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.580" endtime="20201115 23:00:47.974"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.977" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.985" endtime="20201115 23:00:48.005"></status>
</kw>
<msg timestamp="20201115 23:00:48.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.983" endtime="20201115 23:00:48.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.006" endtime="20201115 23:00:48.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.009" endtime="20201115 23:00:48.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.981" endtime="20201115 23:00:48.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.979" endtime="20201115 23:00:48.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.017" endtime="20201115 23:00:48.305"></status>
</kw>
<msg timestamp="20201115 23:00:48.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023731125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023869861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.016" endtime="20201115 23:00:48.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023731125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023869861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.309" endtime="20201115 23:00:48.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.317" endtime="20201115 23:00:48.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.013" endtime="20201115 23:00:48.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.012" endtime="20201115 23:00:48.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.323" level="INFO">${RESULT} = [{'time': 0.023869861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013873600000000041, 'source_diff': 0.00013873600000000041}, {'time': 0.024035181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:48.320" endtime="20201115 23:00:48.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.337" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:48.325" endtime="20201115 23:00:48.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.341" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.340" endtime="20201115 23:00:48.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.344" level="INFO">VALUE: [0.00013873600000000041, 0.00013858400000000062, 0.0001382910000000022, 0.0001381810000000011, 0.00013812499999999936, 0.00013836100000000004, 0.0001380689999999976, 0.00013855599999999801, 0.00013824999999999948, 0.00013766700000000104, 0.00013766700000000104, 0.00013812499999999936, 0.00013822200000000034, 0.00013844500000000093, 0.00013786099999999954, 0.0001376810000000006, 0.00013856900000000158, 0.00013824999999999948, 0.00013812500000000283, 0.00013808299999999718, 0.00013842999999999842, 0.00013816600000000206, 0.0001383200000000008, 0.0001385980000000002, 0.00013816700000000154, 0.0001378200000000003, 0.00013838900000000265, 0.0001383749999999996, 0.00013780600000000073, 0.00013780599999999726, 0.0001380550000000015, 0.0001381810000000011, 0.00013848600000000016, 0.00013852799999999887, 0.00013848600000000016, 0.0001383200000000008, 0.00013786099999999954, 0.00013812499999999936, 0.00013805600000000098, 0.00013830500000000176, 0.00013844400000000145, 0.00013798599999999966, 0.00013824999999999948, 0.0001378749999999991, 0.0001376940000000007, 0.00013798599999999966, 0.00013774999999999898, 0.00013848600000000016, 0.00013842999999999495, 0.00013844399999999452]</msg>
<status status="PASS" starttime="20201115 23:00:48.342" endtime="20201115 23:00:48.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.338" endtime="20201115 23:00:48.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.347" endtime="20201115 23:00:48.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.350" endtime="20201115 23:00:48.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.349" endtime="20201115 23:00:48.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.345" endtime="20201115 23:00:48.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.977" endtime="20201115 23:00:48.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.975" endtime="20201115 23:00:48.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.975" endtime="20201115 23:00:48.371"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.374" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.382" endtime="20201115 23:00:48.402"></status>
</kw>
<msg timestamp="20201115 23:00:48.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.380" endtime="20201115 23:00:48.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.403" endtime="20201115 23:00:48.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.405" endtime="20201115 23:00:48.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.378" endtime="20201115 23:00:48.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.376" endtime="20201115 23:00:48.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.414" endtime="20201115 23:00:48.701"></status>
</kw>
<msg timestamp="20201115 23:00:48.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023757278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023897083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.413" endtime="20201115 23:00:48.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023757278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023897083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.705" endtime="20201115 23:00:48.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.714" endtime="20201115 23:00:48.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.410" endtime="20201115 23:00:48.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.409" endtime="20201115 23:00:48.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.720" level="INFO">${RESULT} = [{'time': 0.023897083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001398049999999998, 'source_diff': 0.0001398049999999998}, {'time': 0.024050528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:48.717" endtime="20201115 23:00:48.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.733" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:48.721" endtime="20201115 23:00:48.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.738" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.737" endtime="20201115 23:00:48.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.740" level="INFO">VALUE: [0.0001398049999999998, 0.00013943100000000236, 0.00013880599999999826, 0.00013966699999999957, 0.00013863899999999943, 0.00013898600000000066, 0.0001391810000000021, 0.00013916600000000307, 0.00013883400000000087, 0.00013873599999999695, 0.00013923600000000091, 0.00013942999999999942, 0.0001393049999999993, 0.00013929099999999972, 0.0001390139999999998, 0.00013924999999999702, 0.00013874999999999998, 0.00013912500000000036, 0.00013870800000000127, 0.00013908299999999818, 0.00013900000000000023, 0.000138652999999999, 0.00013923599999999745, 0.00013947199999999813, 0.00013930599999999876, 0.0001394309999999989, 0.0001393049999999993, 0.00013886099999999707, 0.00013911099999999732, 0.00013902799999999937, 0.0001391810000000021, 0.00013908399999999765, 0.00013874999999999998, 0.0001388049999999988, 0.000139653, 0.00013886099999999707, 0.0001388330000000014, 0.0001394590000000015, 0.00013925000000000048, 0.00013915300000000297, 0.00013911200000000026, 0.00013918000000000263, 0.00013930599999999876, 0.00013904199999999894, 0.00013912500000000036, 0.00013880600000000173, 0.0001393750000000006, 0.00013940299999999628, 0.00013941699999999585, 0.00013923600000000091]</msg>
<status status="PASS" starttime="20201115 23:00:48.739" endtime="20201115 23:00:48.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.734" endtime="20201115 23:00:48.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.743" endtime="20201115 23:00:48.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.746" endtime="20201115 23:00:48.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.745" endtime="20201115 23:00:48.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.742" endtime="20201115 23:00:48.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.374" endtime="20201115 23:00:48.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.372" endtime="20201115 23:00:48.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.372" endtime="20201115 23:00:48.768"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.770" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.778" endtime="20201115 23:00:48.798"></status>
</kw>
<msg timestamp="20201115 23:00:48.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.777" endtime="20201115 23:00:48.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.800" endtime="20201115 23:00:48.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.802" endtime="20201115 23:00:48.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.774" endtime="20201115 23:00:48.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.772" endtime="20201115 23:00:48.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.811" endtime="20201115 23:00:49.097"></status>
</kw>
<msg timestamp="20201115 23:00:49.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023829833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023970403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.809" endtime="20201115 23:00:49.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023829833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023970403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.101" endtime="20201115 23:00:49.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.109" endtime="20201115 23:00:49.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.807" endtime="20201115 23:00:49.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.805" endtime="20201115 23:00:49.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.116" level="INFO">${RESULT} = [{'time': 0.023970403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014056999999999958, 'source_diff': 0.00014056999999999958}, {'time': 0.024128806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:49.113" endtime="20201115 23:00:49.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.173" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:49.117" endtime="20201115 23:00:49.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.177" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.176" endtime="20201115 23:00:49.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.180" level="INFO">VALUE: [0.00014056999999999958, 0.00014004199999999994, 0.00013986100000000154, 0.00014025000000000148, 0.00013984800000000144, 0.0001402370000000014, 0.0001404019999999978, 0.00014002800000000037, 0.000140346999999999, 0.00014036100000000204, 0.0001404309999999999, 0.00013968099999999914, 0.00014059700000000272, 0.00014041700000000032, 0.0001398049999999998, 0.00013987499999999764, 0.00013997199999999863, 0.00014037499999999814, 0.00013991699999999982, 0.00014061099999999882, 0.0001398339999999984, 0.00014045899999999903, 0.00014051399999999784, 0.0001404859999999987, 0.00013973600000000141, 0.0001402920000000002, 0.00014059699999999925, 0.00014027800000000062, 0.0001401949999999992, 0.00014008299999999918, 0.00013977800000000012, 0.00014052800000000087, 0.00013983299999999893, 0.0001399309999999994, 0.00013991699999999982, 0.00013986099999999807, 0.00013986100000000154, 0.00013972300000000132, 0.00014029100000000072, 0.00014054100000000097, 0.00014033299999999943, 0.00014016700000000007, 0.00014045899999999903, 0.00014041700000000032, 0.00014041700000000032, 0.00013973600000000141, 0.00013986099999999807, 0.00013970900000000175, 0.00014004199999999994, 0.00014009699999999875]</msg>
<status status="PASS" starttime="20201115 23:00:49.179" endtime="20201115 23:00:49.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.174" endtime="20201115 23:00:49.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.183" endtime="20201115 23:00:49.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.186" endtime="20201115 23:00:49.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.185" endtime="20201115 23:00:49.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.181" endtime="20201115 23:00:49.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.771" endtime="20201115 23:00:49.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.769" endtime="20201115 23:00:49.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.768" endtime="20201115 23:00:49.207"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.210" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.218" endtime="20201115 23:00:49.238"></status>
</kw>
<msg timestamp="20201115 23:00:49.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.216" endtime="20201115 23:00:49.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.240" endtime="20201115 23:00:49.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.243" endtime="20201115 23:00:49.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.214" endtime="20201115 23:00:49.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.212" endtime="20201115 23:00:49.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.252" endtime="20201115 23:00:49.538"></status>
</kw>
<msg timestamp="20201115 23:00:49.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024294194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024435403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.250" endtime="20201115 23:00:49.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024294194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024435403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.542" endtime="20201115 23:00:49.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.550" endtime="20201115 23:00:49.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.248" endtime="20201115 23:00:49.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.246" endtime="20201115 23:00:49.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.556" level="INFO">${RESULT} = [{'time': 0.024435403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014120899999999978, 'source_diff': 0.00014120899999999978}, {'time': 0.024603764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:49.553" endtime="20201115 23:00:49.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.569" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:49.557" endtime="20201115 23:00:49.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.574" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.573" endtime="20201115 23:00:49.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.576" level="INFO">VALUE: [0.00014120899999999978, 0.00014158300000000068, 0.00014122199999999988, 0.00014076300000000208, 0.00014126399999999859, 0.00014102800000000137, 0.0001411249999999989, 0.0001415829999999972, 0.00014099999999999877, 0.00014165199999999906, 0.0001412080000000003, 0.00014127800000000162, 0.00014095899999999953, 0.0001408469999999995, 0.00014108300000000018, 0.00014149999999999927, 0.00014126400000000205, 0.000141347, 0.00014083299999999993, 0.00014086099999999907, 0.00014145800000000056, 0.0001413189999999974, 0.00014122199999999988, 0.000140653000000001, 0.00014065200000000153, 0.00014080600000000026, 0.00014163899999999896, 0.0001411530000000015, 0.00014102800000000137, 0.0001407079999999998, 0.00014075000000000198, 0.0001406949999999997, 0.00014095800000000006, 0.00014140300000000175, 0.00014094400000000049, 0.0001411530000000015, 0.00014099999999999877, 0.00014159799999999972, 0.00014133300000000043, 0.00014104100000000147, 0.00014070899999999928, 0.0001408889999999982, 0.00014104200000000094, 0.00014108300000000018, 0.0001416249999999994, 0.0001412219999999964, 0.0001408889999999982, 0.0001408469999999995, 0.00014079099999999428, 0.00014161099999999982]</msg>
<status status="PASS" starttime="20201115 23:00:49.575" endtime="20201115 23:00:49.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.570" endtime="20201115 23:00:49.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.579" endtime="20201115 23:00:49.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.583" endtime="20201115 23:00:49.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.581" endtime="20201115 23:00:49.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.578" endtime="20201115 23:00:49.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.210" endtime="20201115 23:00:49.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.209" endtime="20201115 23:00:49.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.208" endtime="20201115 23:00:49.604"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.606" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.615" endtime="20201115 23:00:49.635"></status>
</kw>
<msg timestamp="20201115 23:00:49.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.614" endtime="20201115 23:00:49.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.637" endtime="20201115 23:00:49.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.639" endtime="20201115 23:00:49.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.611" endtime="20201115 23:00:49.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.608" endtime="20201115 23:00:49.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.648" endtime="20201115 23:00:49.934"></status>
</kw>
<msg timestamp="20201115 23:00:49.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025080194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025222792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.647" endtime="20201115 23:00:49.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025080194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025222792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.938" endtime="20201115 23:00:49.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.946" endtime="20201115 23:00:49.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.644" endtime="20201115 23:00:49.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.643" endtime="20201115 23:00:49.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.953" level="INFO">${RESULT} = [{'time': 0.025222792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014259800000000072, 'source_diff': 0.00014259800000000072}, {'time': 0.025382194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:49.950" endtime="20201115 23:00:49.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.966" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:49.954" endtime="20201115 23:00:49.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.970" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.969" endtime="20201115 23:00:49.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.973" level="INFO">VALUE: [0.00014259800000000072, 0.0001422630000000001, 0.00014216599999999913, 0.00014172200000000038, 0.00014259700000000125, 0.00014201399999999934, 0.00014199999999999977, 0.00014179199999999823, 0.0001424860000000007, 0.0001418889999999992, 0.0001419730000000001, 0.00014205600000000151, 0.0001416669999999981, 0.00014251399999999984, 0.00014258400000000115, 0.00014215299999999903, 0.0001425279999999994, 0.00014191700000000182, 0.00014204200000000194, 0.0001419860000000002, 0.00014257000000000158, 0.00014181900000000136, 0.00014263899999999996, 0.00014165199999999906, 0.0001424860000000007, 0.00014258300000000168, 0.00014186100000000007, 0.00014219399999999827, 0.00014174999999999952, 0.0001421950000000012, 0.00014261100000000082, 0.00014191700000000182, 0.00014259700000000125, 0.00014254200000000244, 0.00014184799999999997, 0.00014227699999999968, 0.00014230499999999882, 0.00014258400000000115, 0.00014254100000000297, 0.00014169399999999777, 0.00014215300000000597, 0.00014202799999999544, 0.00014165299999999853, 0.00014181900000000136, 0.00014234799999999354, 0.00014209700000000075, 0.00014204100000000247, 0.00014186100000000007, 0.00014268099999999867, 0.00014227799999999569]</msg>
<status status="PASS" starttime="20201115 23:00:49.972" endtime="20201115 23:00:49.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.967" endtime="20201115 23:00:49.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.976" endtime="20201115 23:00:49.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.980" endtime="20201115 23:00:49.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.978" endtime="20201115 23:00:50.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.974" endtime="20201115 23:00:50.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.607" endtime="20201115 23:00:50.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.605" endtime="20201115 23:00:50.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.604" endtime="20201115 23:00:50.001"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.003" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.012" endtime="20201115 23:00:50.032"></status>
</kw>
<msg timestamp="20201115 23:00:50.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.011" endtime="20201115 23:00:50.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.034" endtime="20201115 23:00:50.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.036" endtime="20201115 23:00:50.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.008" endtime="20201115 23:00:50.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.005" endtime="20201115 23:00:50.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.045" endtime="20201115 23:00:50.330"></status>
</kw>
<msg timestamp="20201115 23:00:50.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024956292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025099597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.044" endtime="20201115 23:00:50.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024956292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025099597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.334" endtime="20201115 23:00:50.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.343" endtime="20201115 23:00:50.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.041" endtime="20201115 23:00:50.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.040" endtime="20201115 23:00:50.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.349" level="INFO">${RESULT} = [{'time': 0.025099597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014330499999999982, 'source_diff': 0.00014330499999999982}, {'time': 0.025256139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:50.346" endtime="20201115 23:00:50.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.362" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:50.350" endtime="20201115 23:00:50.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.366" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.365" endtime="20201115 23:00:50.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.369" level="INFO">VALUE: [0.00014330499999999982, 0.00014279199999999923, 0.0001426669999999991, 0.00014291699999999935, 0.00014354199999999998, 0.0001434999999999978, 0.0001433059999999993, 0.00014272200000000138, 0.0001434020000000008, 0.00014300000000000077, 0.00014265299999999953, 0.00014286100000000107, 0.0001428890000000002, 0.0001435280000000004, 0.00014301300000000086, 0.00014355600000000301, 0.00014352700000000093, 0.00014345899999999856, 0.0001435829999999992, 0.0001432219999999984, 0.0001433890000000007, 0.00014341600000000038, 0.0001428470000000015, 0.00014356999999999911, 0.00014281900000000236, 0.00014356899999999964, 0.00014276400000000009, 0.0001435280000000004, 0.00014361099999999835, 0.00014327700000000068, 0.00014306899999999914, 0.0001434159999999969, 0.00014322200000000188, 0.00014333299999999896, 0.0001433609999999981, 0.000143138000000001, 0.00014292999999999945, 0.0001428890000000002, 0.00014293099999999892, 0.00014322300000000482, 0.00014340300000000028, 0.00014291699999999935, 0.0001430969999999948, 0.00014308399999999472, 0.00014277799999999619, 0.00014308400000000165, 0.00014333300000000243, 0.0001431250000000009, 0.00014313900000000046, 0.0001433340000000019]</msg>
<status status="PASS" starttime="20201115 23:00:50.368" endtime="20201115 23:00:50.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.363" endtime="20201115 23:00:50.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.372" endtime="20201115 23:00:50.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.376" endtime="20201115 23:00:50.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.374" endtime="20201115 23:00:50.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.371" endtime="20201115 23:00:50.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.004" endtime="20201115 23:00:50.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.002" endtime="20201115 23:00:50.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.001" endtime="20201115 23:00:50.397"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.399" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.407" endtime="20201115 23:00:50.428"></status>
</kw>
<msg timestamp="20201115 23:00:50.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.406" endtime="20201115 23:00:50.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.430" endtime="20201115 23:00:50.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.432" endtime="20201115 23:00:50.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.403" endtime="20201115 23:00:50.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.401" endtime="20201115 23:00:50.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.441" endtime="20201115 23:00:50.727"></status>
</kw>
<msg timestamp="20201115 23:00:50.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024673569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024818389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.440" endtime="20201115 23:00:50.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024673569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024818389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.731" endtime="20201115 23:00:50.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.739" endtime="20201115 23:00:50.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.437" endtime="20201115 23:00:50.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.435" endtime="20201115 23:00:50.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.746" level="INFO">${RESULT} = [{'time': 0.024818389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014482000000000037, 'source_diff': 0.00014482000000000037}, {'time': 0.024978806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:50.742" endtime="20201115 23:00:50.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.760" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:50.747" endtime="20201115 23:00:50.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.764" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.763" endtime="20201115 23:00:50.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.767" level="INFO">VALUE: [0.00014482000000000037, 0.0001445419999999975, 0.00014457000000000012, 0.00014380500000000032, 0.00014406999999999962, 0.00014390300000000078, 0.00014375000000000152, 0.0001437089999999988, 0.00014434800000000247, 0.00014454099999999803, 0.00014369400000000324, 0.0001439029999999973, 0.00014461099999999935, 0.00014454099999999803, 0.00014372200000000238, 0.00014397199999999916, 0.00014404099999999753, 0.00014365300000000053, 0.00014373600000000195, 0.00014393099999999992, 0.00014370799999999934, 0.00014388799999999827, 0.0001439159999999974, 0.0001442219999999994, 0.00014441699999999738, 0.00014390300000000078, 0.00014395799999999959, 0.0001445280000000014, 0.00014394400000000002, 0.00014455500000000107, 0.00014406999999999962, 0.0001442219999999994, 0.00014377800000000066, 0.0001442630000000021, 0.00014419400000000027, 0.00014395799999999959, 0.00014456900000000064, 0.0001444860000000027, 0.00014409699999999928, 0.00014427800000000116, 0.00014427800000000462, 0.00014401399999999787, 0.00014376399999999762, 0.00014418100000000017, 0.00014429199999999726, 0.00014390300000000078, 0.00014429100000000472, 0.00014445800000000009, 0.000144347000000003, 0.00014397299999999863]</msg>
<status status="PASS" starttime="20201115 23:00:50.765" endtime="20201115 23:00:50.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.761" endtime="20201115 23:00:50.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.770" endtime="20201115 23:00:50.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.773" endtime="20201115 23:00:50.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.772" endtime="20201115 23:00:50.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.769" endtime="20201115 23:00:50.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.400" endtime="20201115 23:00:50.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.398" endtime="20201115 23:00:50.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.397" endtime="20201115 23:00:50.795"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.797" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.805" endtime="20201115 23:00:50.826"></status>
</kw>
<msg timestamp="20201115 23:00:50.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.803" endtime="20201115 23:00:50.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.827" endtime="20201115 23:00:50.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.830" endtime="20201115 23:00:50.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.801" endtime="20201115 23:00:50.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.799" endtime="20201115 23:00:50.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.839" endtime="20201115 23:00:51.125"></status>
</kw>
<msg timestamp="20201115 23:00:51.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024494625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024639667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.837" endtime="20201115 23:00:51.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024494625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024639667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.129" endtime="20201115 23:00:51.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.137" endtime="20201115 23:00:51.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.835" endtime="20201115 23:00:51.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.833" endtime="20201115 23:00:51.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.143" level="INFO">${RESULT} = [{'time': 0.024639667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014504200000000148, 'source_diff': 0.00014504200000000148}, {'time': 0.024805069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:51.140" endtime="20201115 23:00:51.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.157" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:51.145" endtime="20201115 23:00:51.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.161" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.160" endtime="20201115 23:00:51.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.164" level="INFO">VALUE: [0.00014504200000000148, 0.00014516599999999866, 0.00014545900000000056, 0.00014515299999999856, 0.00014520800000000084, 0.00014512499999999942, 0.000145041999999998, 0.0001452090000000003, 0.00014515300000000203, 0.00014501399999999887, 0.00014502699999999896, 0.00014527800000000216, 0.00014491699999999788, 0.00014515299999999856, 0.00014494400000000102, 0.0001448060000000008, 0.00014494399999999755, 0.00014559700000000078, 0.000145041000000002, 0.00014552699999999946, 0.0001452220000000004, 0.0001454029999999988, 0.00014544399999999805, 0.00014568100000000167, 0.0001455129999999999, 0.0001447769999999987, 0.00014552799999999894, 0.00014466600000000163, 0.00014531899999999792, 0.00014474999999999905, 0.00014545799999999762, 0.00014527799999999869, 0.0001448609999999996, 0.00014515300000000203, 0.00014509799999999975, 0.00014523599999999998, 0.0001450280000000019, 0.00014552799999999894, 0.00014534700000000053, 0.0001449020000000023, 0.00014544499999999752, 0.00014497200000000016, 0.00014488899999999527, 0.0001447219999999999, 0.00014479099999999828, 0.00014534699999999706, 0.00014484699999999656, 0.00014552799999999894, 0.0001447219999999999, 0.0001452220000000004]</msg>
<status status="PASS" starttime="20201115 23:00:51.162" endtime="20201115 23:00:51.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.158" endtime="20201115 23:00:51.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.167" endtime="20201115 23:00:51.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.170" endtime="20201115 23:00:51.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.169" endtime="20201115 23:00:51.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.165" endtime="20201115 23:00:51.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.798" endtime="20201115 23:00:51.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.796" endtime="20201115 23:00:51.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.795" endtime="20201115 23:00:51.191"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.194" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.202" endtime="20201115 23:00:51.222"></status>
</kw>
<msg timestamp="20201115 23:00:51.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.200" endtime="20201115 23:00:51.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.223" endtime="20201115 23:00:51.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.226" endtime="20201115 23:00:51.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.198" endtime="20201115 23:00:51.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.196" endtime="20201115 23:00:51.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.235" endtime="20201115 23:00:51.520"></status>
</kw>
<msg timestamp="20201115 23:00:51.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023702194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023848667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.233" endtime="20201115 23:00:51.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023702194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023848667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.524" endtime="20201115 23:00:51.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.533" endtime="20201115 23:00:51.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.231" endtime="20201115 23:00:51.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.229" endtime="20201115 23:00:51.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.539" level="INFO">${RESULT} = [{'time': 0.023848667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014647300000000113, 'source_diff': 0.00014647300000000113}, {'time': 0.024016097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:51.536" endtime="20201115 23:00:51.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.553" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:51.541" endtime="20201115 23:00:51.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.557" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.556" endtime="20201115 23:00:51.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.560" level="INFO">VALUE: [0.00014647300000000113, 0.00014588899999999974, 0.0001464029999999998, 0.0001463329999999985, 0.0001458610000000006, 0.00014570799999999787, 0.0001463610000000011, 0.00014573600000000048, 0.0001461520000000001, 0.0001465000000000008, 0.00014620799999999837, 0.0001466670000000031, 0.00014594499999999802, 0.00014648600000000123, 0.00014604099999999953, 0.00014598600000000073, 0.00014583300000000146, 0.0001458610000000006, 0.00014595799999999812, 0.00014608400000000119, 0.00014565299999999906, 0.000146139, 0.00014608399999999772, 0.0001462090000000013, 0.00014579200000000223, 0.00014593100000000192, 0.00014583300000000146, 0.00014652799999999994, 0.00014647200000000166, 0.00014579199999999876, 0.00014634700000000153, 0.00014609700000000128, 0.00014647200000000166, 0.00014649999999999733, 0.00014627799999999969, 0.00014637500000000067, 0.00014595900000000106, 0.0001461520000000001, 0.00014598600000000073, 0.00014633300000000196, 0.00014669499999999877, 0.00014652799999999994, 0.0001465419999999995, 0.0001465419999999995, 0.00014634700000000153, 0.00014623600000000098, 0.0001460000000000003, 0.00014623700000000045, 0.00014634699999999806, 0.00014613799999999705]</msg>
<status status="PASS" starttime="20201115 23:00:51.559" endtime="20201115 23:00:51.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.554" endtime="20201115 23:00:51.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.563" endtime="20201115 23:00:51.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.566" endtime="20201115 23:00:51.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.565" endtime="20201115 23:00:51.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.561" endtime="20201115 23:00:51.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.194" endtime="20201115 23:00:51.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.192" endtime="20201115 23:00:51.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.192" endtime="20201115 23:00:51.588"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.590" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.598" endtime="20201115 23:00:51.619"></status>
</kw>
<msg timestamp="20201115 23:00:51.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.596" endtime="20201115 23:00:51.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.621" endtime="20201115 23:00:51.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.623" endtime="20201115 23:00:51.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.594" endtime="20201115 23:00:51.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.592" endtime="20201115 23:00:51.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.632" endtime="20201115 23:00:51.918"></status>
</kw>
<msg timestamp="20201115 23:00:51.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024764319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024911569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.631" endtime="20201115 23:00:51.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024764319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024911569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.922" endtime="20201115 23:00:51.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.930" endtime="20201115 23:00:51.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.628" endtime="20201115 23:00:51.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.626" endtime="20201115 23:00:51.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.937" level="INFO">${RESULT} = [{'time': 0.024911569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014725000000000155, 'source_diff': 0.00014725000000000155}, {'time': 0.025090028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:51.934" endtime="20201115 23:00:51.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.950" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:51.938" endtime="20201115 23:00:51.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.954" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.953" endtime="20201115 23:00:51.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.957" level="INFO">VALUE: [0.00014725000000000155, 0.00014702800000000044, 0.0001475969999999993, 0.000147042, 0.00014752800000000094, 0.0001466809999999992, 0.000147042, 0.00014765300000000106, 0.0001466939999999993, 0.0001475550000000006, 0.0001475969999999993, 0.00014718100000000317, 0.00014691699999999988, 0.00014698599999999826, 0.0001470969999999988, 0.00014701400000000087, 0.00014720799999999937, 0.0001469870000000012, 0.0001471809999999997, 0.00014741700000000038, 0.00014693099999999945, 0.0001467220000000019, 0.0001466390000000005, 0.00014736099999999863, 0.0001475969999999993, 0.00014730500000000035, 0.00014716700000000013, 0.00014722199999999894, 0.00014748600000000223, 0.00014747299999999866, 0.00014715300000000056, 0.00014672199999999844, 0.00014754099999999756, 0.00014754100000000103, 0.0001469160000000004, 0.00014665300000000006, 0.00014670799999999887, 0.00014672300000000138, 0.000146735999999998, 0.00014679199999999976, 0.00014697300000000163, 0.00014743100000000342, 0.00014693000000000345, 0.00014697199999999522, 0.00014679199999999976, 0.0001474169999999969, 0.00014762499999999845, 0.00014670800000000234, 0.0001467079999999954, 0.00014733300000000643]</msg>
<status status="PASS" starttime="20201115 23:00:51.955" endtime="20201115 23:00:51.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.951" endtime="20201115 23:00:51.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.960" endtime="20201115 23:00:51.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.963" endtime="20201115 23:00:51.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.962" endtime="20201115 23:00:51.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.958" endtime="20201115 23:00:51.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.591" endtime="20201115 23:00:51.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.589" endtime="20201115 23:00:51.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.588" endtime="20201115 23:00:51.984"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.987" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.995" endtime="20201115 23:00:52.016"></status>
</kw>
<msg timestamp="20201115 23:00:52.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.993" endtime="20201115 23:00:52.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.018" endtime="20201115 23:00:52.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.021" endtime="20201115 23:00:52.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.991" endtime="20201115 23:00:52.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.989" endtime="20201115 23:00:52.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.030" endtime="20201115 23:00:52.315"></status>
</kw>
<msg timestamp="20201115 23:00:52.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024575847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024723833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.028" endtime="20201115 23:00:52.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024575847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024723833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.319" endtime="20201115 23:00:52.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.327" endtime="20201115 23:00:52.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.025" endtime="20201115 23:00:52.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.024" endtime="20201115 23:00:52.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.334" level="INFO">${RESULT} = [{'time': 0.024723833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014798599999999926, 'source_diff': 0.00014798599999999926}, {'time': 0.024898361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:52.331" endtime="20201115 23:00:52.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.348" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:52.335" endtime="20201115 23:00:52.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.353" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.352" endtime="20201115 23:00:52.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.355" level="INFO">VALUE: [0.00014798599999999926, 0.00014868000000000173, 0.00014830500000000135, 0.00014784699999999956, 0.00014847299999999966, 0.000147833, 0.00014848599999999976, 0.00014816699999999766, 0.00014858400000000022, 0.00014784699999999956, 0.0001478749999999987, 0.00014855499999999813, 0.00014793000000000098, 0.00014840299999999834, 0.00014826399999999865, 0.00014836099999999963, 0.0001477229999999989, 0.00014772199999999944, 0.0001482359999999995, 0.00014822199999999994, 0.00014795800000000012, 0.0001483330000000005, 0.0001479589999999996, 0.0001480139999999984, 0.00014773600000000248, 0.0001479589999999996, 0.0001479160000000014, 0.00014837500000000267, 0.00014788899999999827, 0.000148139000000002, 0.00014770799999999987, 0.00014827799999999822, 0.0001479719999999997, 0.00014816700000000113, 0.00014827699999999874, 0.00014834700000000006, 0.00014822199999999994, 0.0001484720000000002, 0.00014827799999999822, 0.0001480969999999998, 0.00014762499999999845, 0.00014838899999999877, 0.00014851400000000237, 0.00014816600000000513, 0.00014777800000000119, 0.00014799999999999536, 0.00014766699999999716, 0.00014777799999999425, 0.0001486659999999987, 0.00014809799999999929]</msg>
<status status="PASS" starttime="20201115 23:00:52.354" endtime="20201115 23:00:52.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.349" endtime="20201115 23:00:52.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.358" endtime="20201115 23:00:52.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.361" endtime="20201115 23:00:52.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.360" endtime="20201115 23:00:52.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.356" endtime="20201115 23:00:52.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.987" endtime="20201115 23:00:52.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.986" endtime="20201115 23:00:52.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.985" endtime="20201115 23:00:52.382"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.385" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.393" endtime="20201115 23:00:52.414"></status>
</kw>
<msg timestamp="20201115 23:00:52.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.392" endtime="20201115 23:00:52.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.415" endtime="20201115 23:00:52.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.418" endtime="20201115 23:00:52.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.389" endtime="20201115 23:00:52.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.387" endtime="20201115 23:00:52.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.427" endtime="20201115 23:00:52.712"></status>
</kw>
<msg timestamp="20201115 23:00:52.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024220903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024369944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.425" endtime="20201115 23:00:52.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024220903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024369944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.717" endtime="20201115 23:00:52.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.725" endtime="20201115 23:00:52.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.423" endtime="20201115 23:00:52.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.421" endtime="20201115 23:00:52.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.731" level="INFO">${RESULT} = [{'time': 0.024369944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014904100000000253, 'source_diff': 0.00014904100000000253}, {'time': 0.024546444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:52.728" endtime="20201115 23:00:52.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.744" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:52.732" endtime="20201115 23:00:52.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.749" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.748" endtime="20201115 23:00:52.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.751" level="INFO">VALUE: [0.00014904100000000253, 0.0001490970000000008, 0.0001494160000000029, 0.00014961100000000088, 0.00014902799999999897, 0.00014909800000000029, 0.00014909800000000029, 0.00014891599999999894, 0.00014869500000000077, 0.00014902799999999897, 0.0001495559999999986, 0.0001491659999999992, 0.0001492909999999993, 0.0001489720000000007, 0.00014898600000000026, 0.00014909800000000029, 0.0001493880000000003, 0.000148833000000001, 0.0001493200000000014, 0.00014963900000000002, 0.00014877800000000219, 0.00014894400000000155, 0.00014869500000000077, 0.00014943000000000248, 0.00014868000000000173, 0.00014895800000000112, 0.00014940299999999934, 0.0001490970000000008, 0.00014909699999999734, 0.0001491529999999991, 0.00014925000000000008, 0.00014931999999999793, 0.00014884700000000056, 0.0001486940000000013, 0.00014904199999999854, 0.00014872200000000044, 0.00014888900000000274, 0.00014920800000000137, 0.00014929200000000226, 0.0001487919999999983, 0.00014962500000000045, 0.00014948600000000423, 0.00014912499999999995, 0.00014879200000000176, 0.0001496529999999996, 0.0001494729999999972, 0.00014934800000000054, 0.00014866600000000563, 0.00014869500000000424, 0.00014952700000000346]</msg>
<status status="PASS" starttime="20201115 23:00:52.750" endtime="20201115 23:00:52.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.745" endtime="20201115 23:00:52.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.754" endtime="20201115 23:00:52.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.758" endtime="20201115 23:00:52.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.756" endtime="20201115 23:00:52.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.752" endtime="20201115 23:00:52.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.385" endtime="20201115 23:00:52.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.384" endtime="20201115 23:00:52.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.383" endtime="20201115 23:00:52.779"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.781" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.789" endtime="20201115 23:00:52.810"></status>
</kw>
<msg timestamp="20201115 23:00:52.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.788" endtime="20201115 23:00:52.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.812" endtime="20201115 23:00:52.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.815" endtime="20201115 23:00:52.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.785" endtime="20201115 23:00:52.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.783" endtime="20201115 23:00:52.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.824" endtime="20201115 23:00:53.110"></status>
</kw>
<msg timestamp="20201115 23:00:53.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023843458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023994028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.822" endtime="20201115 23:00:53.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023843458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023994028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.114" endtime="20201115 23:00:53.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.122" endtime="20201115 23:00:53.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.820" endtime="20201115 23:00:53.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.818" endtime="20201115 23:00:53.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.128" level="INFO">${RESULT} = [{'time': 0.023994028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015056999999999918, 'source_diff': 0.00015056999999999918}, {'time': 0.024174444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:53.125" endtime="20201115 23:00:53.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.142" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:53.129" endtime="20201115 23:00:53.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.147" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.146" endtime="20201115 23:00:53.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.149" level="INFO">VALUE: [0.00015056999999999918, 0.00014990200000000037, 0.00015055499999999666, 0.00014980599999999886, 0.00014965200000000012, 0.00015004199999999954, 0.0001496659999999997, 0.00015020899999999837, 0.00015022200000000194, 0.00014977799999999972, 0.00014976400000000015, 0.00015013900000000052, 0.00015054200000000004, 0.00014999999999999736, 0.00015043099999999948, 0.00015055500000000013, 0.00015052800000000047, 0.00014990299999999984, 0.00015020900000000184, 0.00015038900000000077, 0.00015027800000000022, 0.0001504720000000022, 0.00014995899999999812, 0.0001501949999999988, 0.0001505970000000023, 0.0001503469999999986, 0.00015044399999999958, 0.00014970899999999787, 0.0001496940000000023, 0.00015005499999999963, 0.0001500689999999992, 0.00014980599999999886, 0.0001498750000000007, 0.00015013900000000052, 0.00015043099999999948, 0.00015058299999999927, 0.0001500689999999992, 0.00014993100000000245, 0.0001498750000000007, 0.00015049999999999786, 0.00015068099999999973, 0.00015034799999999807, 0.0001503200000000024, 0.00015043, 0.0001503059999999959, 0.00014993099999999898, 0.00015023600000000498, 0.00015049999999999786, 0.00014969400000000577, 0.0001503880000000013]</msg>
<status status="PASS" starttime="20201115 23:00:53.148" endtime="20201115 23:00:53.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.143" endtime="20201115 23:00:53.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.153" endtime="20201115 23:00:53.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.156" endtime="20201115 23:00:53.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.155" endtime="20201115 23:00:53.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.151" endtime="20201115 23:00:53.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.782" endtime="20201115 23:00:53.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.780" endtime="20201115 23:00:53.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.779" endtime="20201115 23:00:53.178"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.180" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.188" endtime="20201115 23:00:53.209"></status>
</kw>
<msg timestamp="20201115 23:00:53.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.186" endtime="20201115 23:00:53.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.210" endtime="20201115 23:00:53.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.213" endtime="20201115 23:00:53.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.184" endtime="20201115 23:00:53.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.182" endtime="20201115 23:00:53.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.222" endtime="20201115 23:00:53.507"></status>
</kw>
<msg timestamp="20201115 23:00:53.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023825597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023976403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.220" endtime="20201115 23:00:53.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023825597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023976403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.511" endtime="20201115 23:00:53.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.519" endtime="20201115 23:00:53.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.218" endtime="20201115 23:00:53.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.216" endtime="20201115 23:00:53.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.526" level="INFO">${RESULT} = [{'time': 0.023976403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015080599999999986, 'source_diff': 0.00015080599999999986}, {'time': 0.024159861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:53.523" endtime="20201115 23:00:53.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.539" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:53.527" endtime="20201115 23:00:53.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.544" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.543" endtime="20201115 23:00:53.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.547" level="INFO">VALUE: [0.00015080599999999986, 0.0001510690000000002, 0.0001510690000000002, 0.00015127800000000122, 0.00015068000000000026, 0.00015101399999999793, 0.00015077800000000072, 0.00015144400000000058, 0.00015062499999999798, 0.00015122199999999947, 0.00015148600000000276, 0.00015141600000000144, 0.00015127800000000122, 0.00015087499999999823, 0.00015157000000000018, 0.0001510279999999975, 0.00015127800000000122, 0.00015138900000000177, 0.00015137499999999873, 0.0001515690000000007, 0.00015115299999999762, 0.00015083299999999952, 0.00015144400000000058, 0.0001515690000000007, 0.00015100000000000183, 0.0001509859999999988, 0.00015080499999999691, 0.00015150000000000233, 0.0001515140000000019, 0.0001509859999999988, 0.00015075000000000158, 0.0001512499999999986, 0.00015095799999999965, 0.0001509170000000004, 0.0001513750000000022, 0.0001515560000000006, 0.0001512079999999999, 0.00015145800000000015, 0.00015145800000000015, 0.00015108299999999977, 0.00015076400000000115, 0.00015122199999999947, 0.0001511530000000011, 0.00015163900000000202, 0.00015155599999999714, 0.00015130499999999741, 0.00015133400000000297, 0.0001509029999999939, 0.00015076400000000462, 0.00015072199999999897]</msg>
<status status="PASS" starttime="20201115 23:00:53.545" endtime="20201115 23:00:53.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.540" endtime="20201115 23:00:53.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.550" endtime="20201115 23:00:53.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.554" endtime="20201115 23:00:53.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.552" endtime="20201115 23:00:53.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.548" endtime="20201115 23:00:53.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.180" endtime="20201115 23:00:53.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.179" endtime="20201115 23:00:53.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.178" endtime="20201115 23:00:53.578"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.583" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.602" endtime="20201115 23:00:53.628"></status>
</kw>
<msg timestamp="20201115 23:00:53.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.598" endtime="20201115 23:00:53.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.631" endtime="20201115 23:00:53.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.637" endtime="20201115 23:00:53.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.592" endtime="20201115 23:00:53.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.588" endtime="20201115 23:00:53.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.655" endtime="20201115 23:00:53.943"></status>
</kw>
<msg timestamp="20201115 23:00:53.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043091417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043243403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.652" endtime="20201115 23:00:53.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043091417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043243403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.948" endtime="20201115 23:00:53.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.956" endtime="20201115 23:00:53.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.647" endtime="20201115 23:00:53.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.643" endtime="20201115 23:00:53.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.962" level="INFO">${RESULT} = [{'time': 0.043243403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001519859999999998, 'source_diff': 0.0001519859999999998}, {'time': 0.043415764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:53.959" endtime="20201115 23:00:53.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.977" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:53.963" endtime="20201115 23:00:53.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.981" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.980" endtime="20201115 23:00:53.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.984" level="INFO">VALUE: [0.0001519859999999998, 0.00015211100000000338, 0.00015193100000000098, 0.00015199999999999936, 0.00015205599999999764, 0.0001520699999999972, 0.00015181999999999696, 0.00015206899999999773, 0.0001524860000000003, 0.0001517499999999991, 0.00015243099999999454, 0.0001519859999999998, 0.00015220900000000037, 0.00015230600000000483, 0.00015204199999999807, 0.00015256899999999823, 0.00015215200000000262, 0.00015181999999999696, 0.0001515550000000046, 0.00015231899999999798, 0.00015168000000000126, 0.00015216599999999525, 0.00015245899999999368, 0.0001526249999999965, 0.00015188900000000227, 0.00015206899999999773, 0.00015243100000000148, 0.0001524029999999954, 0.00015176399999999868, 0.00015169400000000083, 0.0001522499999999996, 0.00015226399999999918, 0.00015247200000000072, 0.00015255499999999866, 0.0001524860000000003, 0.0001521950000000008, 0.00015172199999999997, 0.00015205499999999816, 0.00015234700000000406, 0.00015193100000000098, 0.00015186100000000313, 0.00015199999999999936, 0.00015219400000000133, 0.0001520279999999985, 0.00015201299999999945, 0.0001518750000000027, 0.00015220900000000037, 0.00015218000000000176, 0.00015183400000000347, 0.00015238900000000277]</msg>
<status status="PASS" starttime="20201115 23:00:53.982" endtime="20201115 23:00:53.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.978" endtime="20201115 23:00:53.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.987" endtime="20201115 23:00:53.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.990" endtime="20201115 23:00:54.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.989" endtime="20201115 23:00:54.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.985" endtime="20201115 23:00:54.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.585" endtime="20201115 23:00:54.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.581" endtime="20201115 23:00:54.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.579" endtime="20201115 23:00:54.011"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.014" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.022" endtime="20201115 23:00:54.042"></status>
</kw>
<msg timestamp="20201115 23:00:54.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.020" endtime="20201115 23:00:54.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.044" endtime="20201115 23:00:54.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.046" endtime="20201115 23:00:54.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.018" endtime="20201115 23:00:54.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.016" endtime="20201115 23:00:54.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.055" endtime="20201115 23:00:54.342"></status>
</kw>
<msg timestamp="20201115 23:00:54.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023807903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023961389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.054" endtime="20201115 23:00:54.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023807903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023961389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.346" endtime="20201115 23:00:54.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.354" endtime="20201115 23:00:54.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.051" endtime="20201115 23:00:54.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.050" endtime="20201115 23:00:54.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.361" level="INFO">${RESULT} = [{'time': 0.023961389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001534860000000013, 'source_diff': 0.0001534860000000013}, {'time': 0.024146764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:54.358" endtime="20201115 23:00:54.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:54.374" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:54.362" endtime="20201115 23:00:54.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.380" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:00:54.378" endtime="20201115 23:00:54.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.385" level="INFO">VALUE: [0.0001534860000000013, 0.0001529860000000008, 0.0001528609999999972, 0.0001534730000000012, 0.00015284699999999762, 0.00015295899999999765, 0.00015291699999999894, 0.0001527920000000023, 0.0001529860000000008, 0.00015313900000000005, 0.0001535699999999987, 0.00015305499999999916, 0.00015312500000000048, 0.0001534020000000004, 0.00015336100000000116, 0.00015323600000000104, 0.00015306899999999873, 0.00015341699999999944, 0.0001527089999999974, 0.00015316599999999972, 0.0001526799999999988, 0.0001526950000000013, 0.00015347200000000172, 0.0001533890000000003, 0.00015309700000000134, 0.0001527500000000001, 0.00015348700000000076, 0.00015295799999999818, 0.00015312500000000048, 0.00015294500000000155, 0.00015315299999999962, 0.00015350000000000086, 0.00015305499999999916, 0.00015301399999999993, 0.0001530690000000022, 0.0001533059999999989, 0.0001536669999999997, 0.00015318099999999876, 0.00015312500000000048, 0.0001525829999999978, 0.0001531110000000009, 0.0001526110000000004, 0.0001531110000000009, 0.00015334699999999812, 0.00015305599999999864, 0.00015326400000000018, 0.0001532500000000006, 0.00015281899999999848, 0.00015362500000000445, 0.00015300000000000036]</msg>
<status status="PASS" starttime="20201115 23:00:54.382" endtime="20201115 23:00:54.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.375" endtime="20201115 23:00:54.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.392" endtime="20201115 23:00:54.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.399" endtime="20201115 23:00:54.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.396" endtime="20201115 23:00:54.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.388" endtime="20201115 23:00:54.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.014" endtime="20201115 23:00:54.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.012" endtime="20201115 23:00:54.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.012" endtime="20201115 23:00:54.425"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.430" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.448" endtime="20201115 23:00:54.474"></status>
</kw>
<msg timestamp="20201115 23:00:54.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.444" endtime="20201115 23:00:54.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.477" endtime="20201115 23:00:54.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.481" endtime="20201115 23:00:54.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.439" endtime="20201115 23:00:54.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.434" endtime="20201115 23:00:54.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.490" endtime="20201115 23:00:54.777"></status>
</kw>
<msg timestamp="20201115 23:00:54.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041259847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041413903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.488" endtime="20201115 23:00:54.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041259847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041413903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.781" endtime="20201115 23:00:54.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.789" endtime="20201115 23:00:54.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.486" endtime="20201115 23:00:54.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.484" endtime="20201115 23:00:54.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.795" level="INFO">${RESULT} = [{'time': 0.041413903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015405599999999964, 'source_diff': 0.00015405599999999964}, {'time': 0.041591403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:54.792" endtime="20201115 23:00:54.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:54.808" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:54.796" endtime="20201115 23:00:54.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.813" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:00:54.812" endtime="20201115 23:00:54.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.815" level="INFO">VALUE: [0.00015405599999999964, 0.00015445899999999568, 0.00015438900000000477, 0.00015412499999999801, 0.0001543059999999999, 0.00015411199999999792, 0.0001543059999999999, 0.00015395900000000212, 0.0001543059999999999, 0.0001544860000000023, 0.00015401400000000093, 0.00015394399999999614, 0.0001543609999999987, 0.00015383400000000547, 0.00015447200000000272, 0.0001545139999999945, 0.00015451400000000143, 0.00015369499999999536, 0.0001540410000000006, 0.0001538750000000047, 0.00015405599999999964, 0.0001541809999999963, 0.00015413899999999758, 0.00015367999999999632, 0.0001543609999999987, 0.00015442999999999707, 0.00015437499999999826, 0.00015377800000000025, 0.0001541950000000028, 0.00015433399999999903, 0.0001544449999999961, 0.00015450000000000186, 0.0001537500000000011, 0.0001544170000000039, 0.00015391600000000394, 0.00015401400000000093, 0.00015401400000000093, 0.00015442999999999707, 0.00015444399999999664, 0.00015462499999999851, 0.00015437499999999826, 0.00015415199999999768, 0.00015390300000000384, 0.00015377800000000025, 0.00015363900000000402, 0.00015436100000000563, 0.00015401400000000093, 0.00015390199999999743, 0.0001545699999999997, 0.00015454099999999416]</msg>
<status status="PASS" starttime="20201115 23:00:54.814" endtime="20201115 23:00:54.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.809" endtime="20201115 23:00:54.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.818" endtime="20201115 23:00:54.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.822" endtime="20201115 23:00:54.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.820" endtime="20201115 23:00:54.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.817" endtime="20201115 23:00:54.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.431" endtime="20201115 23:00:54.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.428" endtime="20201115 23:00:54.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.426" endtime="20201115 23:00:54.843"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.845" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.853" endtime="20201115 23:00:54.874"></status>
</kw>
<msg timestamp="20201115 23:00:54.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.852" endtime="20201115 23:00:54.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.875" endtime="20201115 23:00:54.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.879" endtime="20201115 23:00:54.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.849" endtime="20201115 23:00:54.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.847" endtime="20201115 23:00:54.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.887" endtime="20201115 23:00:55.173"></status>
</kw>
<msg timestamp="20201115 23:00:55.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023787458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023943125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.886" endtime="20201115 23:00:55.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023787458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023943125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.177" endtime="20201115 23:00:55.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.185" endtime="20201115 23:00:55.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.883" endtime="20201115 23:00:55.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.882" endtime="20201115 23:00:55.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:55.195" level="INFO">${RESULT} = [{'time': 0.023943125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015566699999999822, 'source_diff': 0.00015566699999999822}, {'time': 0.024120458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:55.188" endtime="20201115 23:00:55.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.224" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:55.197" endtime="20201115 23:00:55.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.234" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.232" endtime="20201115 23:00:55.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.239" level="INFO">VALUE: [0.00015566699999999822, 0.00015459699999999937, 0.0001554159999999985, 0.00015462500000000198, 0.00015474999999999864, 0.00015554200000000157, 0.00015508399999999978, 0.000155222, 0.0001553609999999997, 0.00015488899999999833, 0.00015473599999999907, 0.00015468100000000026, 0.00015532000000000046, 0.00015479100000000134, 0.00015523699999999904, 0.00015541699999999797, 0.00015501399999999846, 0.00015529099999999837, 0.00015537499999999926, 0.0001548890000000018, 0.00015486200000000214, 0.00015559700000000037, 0.0001553890000000023, 0.00015512499999999901, 0.00015523599999999957, 0.00015494399999999714, 0.00015493000000000104, 0.00015487499999999876, 0.0001549999999999989, 0.00015467999999999732, 0.0001554999999999994, 0.00015533400000000003, 0.0001548060000000004, 0.00015512499999999901, 0.0001551800000000013, 0.000155222, 0.0001549440000000006, 0.0001551800000000013, 0.00015479100000000134, 0.00015473599999999907, 0.0001549999999999989, 0.00015474999999999864, 0.00015541700000000144, 0.0001550830000000003, 0.0001554029999999984, 0.00015559700000000037, 0.0001551809999999973, 0.00015481999999999996, 0.00015495800000000365, 0.00015511199999999892]</msg>
<status status="PASS" starttime="20201115 23:00:55.236" endtime="20201115 23:00:55.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.226" endtime="20201115 23:00:55.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.245" endtime="20201115 23:00:55.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.252" endtime="20201115 23:00:55.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.249" endtime="20201115 23:00:55.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.242" endtime="20201115 23:00:55.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.846" endtime="20201115 23:00:55.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.844" endtime="20201115 23:00:55.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.843" endtime="20201115 23:00:55.278"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.282" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.295" endtime="20201115 23:00:55.316"></status>
</kw>
<msg timestamp="20201115 23:00:55.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.293" endtime="20201115 23:00:55.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.318" endtime="20201115 23:00:55.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.320" endtime="20201115 23:00:55.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.290" endtime="20201115 23:00:55.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.286" endtime="20201115 23:00:55.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.329" endtime="20201115 23:00:55.629"></status>
</kw>
<msg timestamp="20201115 23:00:55.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034725667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034881611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.328" endtime="20201115 23:00:55.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034725667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034881611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.633" endtime="20201115 23:00:55.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.644" endtime="20201115 23:00:55.645"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.325" endtime="20201115 23:00:55.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.323" endtime="20201115 23:00:55.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:55.650" level="INFO">${RESULT} = [{'time': 0.034881611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015594399999999814, 'source_diff': 0.00015594399999999814}, {'time': 0.035052986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:55.647" endtime="20201115 23:00:55.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.665" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:55.651" endtime="20201115 23:00:55.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.670" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.669" endtime="20201115 23:00:55.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.672" level="INFO">VALUE: [0.00015594399999999814, 0.00015579200000000182, 0.00015570799999999746, 0.00015605500000000216, 0.0001556809999999978, 0.0001556809999999978, 0.00015555600000000114, 0.0001556809999999978, 0.0001563610000000007, 0.0001559860000000038, 0.0001563610000000007, 0.00015562499999999951, 0.0001562359999999971, 0.00015656999999999477, 0.00015597199999999728, 0.00015655499999999573, 0.0001558060000000014, 0.00015574999999999617, 0.00015600000000000336, 0.00015604200000000207, 0.00015616699999999872, 0.00015633400000000103, 0.00015617999999999882, 0.00015611100000000044, 0.0001560559999999947, 0.00015561099999999994, 0.00015573600000000354, 0.00015587499999999976, 0.00015552699999999559, 0.00015616699999999872, 0.00015597299999999675, 0.0001564029999999994, 0.0001564730000000042, 0.00015643099999999854, 0.0001563610000000007, 0.00015569499999999736, 0.0001562500000000036, 0.00015633400000000103, 0.00015584700000000062, 0.00015644400000000558, 0.0001563610000000007, 0.0001557359999999966, 0.00015565299999999865, 0.00015558400000000028, 0.0001560410000000026, 0.00015566699999999822, 0.00015626399999999624, 0.00015627800000000275, 0.00015630500000000241, 0.00015580500000000191]</msg>
<status status="PASS" starttime="20201115 23:00:55.671" endtime="20201115 23:00:55.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.666" endtime="20201115 23:00:55.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.675" endtime="20201115 23:00:55.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.679" endtime="20201115 23:00:55.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.677" endtime="20201115 23:00:55.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.674" endtime="20201115 23:00:55.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.284" endtime="20201115 23:00:55.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.280" endtime="20201115 23:00:55.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.278" endtime="20201115 23:00:55.700"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.703" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.711" endtime="20201115 23:00:55.732"></status>
</kw>
<msg timestamp="20201115 23:00:55.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.709" endtime="20201115 23:00:55.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.734" endtime="20201115 23:00:55.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.736" endtime="20201115 23:00:55.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.707" endtime="20201115 23:00:55.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.705" endtime="20201115 23:00:55.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.745" endtime="20201115 23:00:56.032"></status>
</kw>
<msg timestamp="20201115 23:00:56.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024015444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024172514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.744" endtime="20201115 23:00:56.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024015444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024172514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.036" endtime="20201115 23:00:56.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.044" endtime="20201115 23:00:56.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.741" endtime="20201115 23:00:56.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.739" endtime="20201115 23:00:56.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.051" level="INFO">${RESULT} = [{'time': 0.024172514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015706999999999874, 'source_diff': 0.00015706999999999874}, {'time': 0.024346889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:56.048" endtime="20201115 23:00:56.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.064" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:56.052" endtime="20201115 23:00:56.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.069" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.068" endtime="20201115 23:00:56.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.071" level="INFO">VALUE: [0.00015706999999999874, 0.00015662500000000051, 0.00015712500000000101, 0.00015697200000000175, 0.0001566670000000027, 0.00015711100000000144, 0.0001566670000000027, 0.00015759700000000237, 0.00015715300000000015, 0.00015717999999999982, 0.00015762499999999804, 0.0001566809999999988, 0.00015662500000000051, 0.000157222000000002, 0.00015697200000000175, 0.00015736200000000117, 0.00015694500000000208, 0.00015698600000000132, 0.0001570549999999997, 0.0001570830000000023, 0.00015737500000000126, 0.00015756899999999976, 0.00015694399999999914, 0.0001570549999999997, 0.0001568060000000024, 0.00015755599999999967, 0.00015684700000000162, 0.00015745899999999868, 0.00015716699999999972, 0.00015743000000000007, 0.00015692999999999957, 0.0001574030000000004, 0.00015743099999999954, 0.00015672199999999803, 0.00015697199999999828, 0.00015748599999999835, 0.00015725000000000114, 0.0001573749999999978, 0.0001570419999999996, 0.0001569029999999999, 0.0001572640000000007, 0.0001569579999999987, 0.00015716600000000025, 0.00015751400000000443, 0.00015691699999999947, 0.00015715300000000015, 0.00015698599999999785, 0.00015740200000000093, 0.00015655499999999573, 0.00015730500000000341]</msg>
<status status="PASS" starttime="20201115 23:00:56.070" endtime="20201115 23:00:56.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.065" endtime="20201115 23:00:56.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.075" endtime="20201115 23:00:56.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.078" endtime="20201115 23:00:56.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.076" endtime="20201115 23:00:56.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.073" endtime="20201115 23:00:56.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.703" endtime="20201115 23:00:56.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.702" endtime="20201115 23:00:56.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.701" endtime="20201115 23:00:56.099"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.102" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.110" endtime="20201115 23:00:56.131"></status>
</kw>
<msg timestamp="20201115 23:00:56.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.109" endtime="20201115 23:00:56.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.133" endtime="20201115 23:00:56.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.135" endtime="20201115 23:00:56.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.106" endtime="20201115 23:00:56.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.104" endtime="20201115 23:00:56.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.144" endtime="20201115 23:00:56.430"></status>
</kw>
<msg timestamp="20201115 23:00:56.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024090889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024248764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.143" endtime="20201115 23:00:56.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024090889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024248764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.434" endtime="20201115 23:00:56.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.442" endtime="20201115 23:00:56.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.140" endtime="20201115 23:00:56.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.138" endtime="20201115 23:00:56.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.449" level="INFO">${RESULT} = [{'time': 0.024248764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001578749999999983, 'source_diff': 0.0001578749999999983}, {'time': 0.024430111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:56.445" endtime="20201115 23:00:56.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.462" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:56.450" endtime="20201115 23:00:56.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.466" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.465" endtime="20201115 23:00:56.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.474" level="INFO">VALUE: [0.0001578749999999983, 0.00015798600000000232, 0.0001576809999999998, 0.00015843000000000107, 0.00015798599999999885, 0.00015819499999999986, 0.00015805600000000017, 0.0001585000000000024, 0.00015841700000000097, 0.00015811100000000244, 0.00015775000000000164, 0.00015790199999999796, 0.0001578610000000022, 0.00015815200000000168, 0.0001577359999999986, 0.00015802800000000103, 0.00015798600000000232, 0.00015829100000000138, 0.00015833300000000008, 0.00015797299999999875, 0.00015781900000000001, 0.00015780599999999992, 0.00015822199999999953, 0.00015773600000000207, 0.00015761100000000194, 0.00015799999999999842, 0.00015830600000000042, 0.00015805600000000017, 0.00015763900000000108, 0.00015772199999999903, 0.0001585000000000024, 0.0001579579999999997, 0.00015812499999999854, 0.00015769499999999936, 0.00015830600000000042, 0.00015761100000000194, 0.00015806900000000026, 0.00015786099999999872, 0.00015805600000000017, 0.00015851299999999555, 0.00015809800000000235, 0.0001585830000000038, 0.00015793100000000004, 0.0001584030000000014, 0.00015794400000000014, 0.00015815200000000168, 0.00015768000000000032, 0.0001578610000000022, 0.0001583610000000027, 0.00015855499999999773]</msg>
<status status="PASS" starttime="20201115 23:00:56.468" endtime="20201115 23:00:56.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.463" endtime="20201115 23:00:56.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.477" endtime="20201115 23:00:56.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.481" endtime="20201115 23:00:56.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.479" endtime="20201115 23:00:56.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.476" endtime="20201115 23:00:56.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.103" endtime="20201115 23:00:56.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.101" endtime="20201115 23:00:56.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.100" endtime="20201115 23:00:56.502"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.505" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.513" endtime="20201115 23:00:56.534"></status>
</kw>
<msg timestamp="20201115 23:00:56.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.511" endtime="20201115 23:00:56.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.535" endtime="20201115 23:00:56.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.538" endtime="20201115 23:00:56.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.509" endtime="20201115 23:00:56.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.506" endtime="20201115 23:00:56.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.547" endtime="20201115 23:00:56.832"></status>
</kw>
<msg timestamp="20201115 23:00:56.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024056069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024215681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.546" endtime="20201115 23:00:56.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024056069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024215681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.836" endtime="20201115 23:00:56.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.844" endtime="20201115 23:00:56.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.543" endtime="20201115 23:00:56.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.541" endtime="20201115 23:00:56.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.850" level="INFO">${RESULT} = [{'time': 0.024215681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015961199999999995, 'source_diff': 0.00015961199999999995}, {'time': 0.024392028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:56.847" endtime="20201115 23:00:56.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.864" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:56.852" endtime="20201115 23:00:56.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.868" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.867" endtime="20201115 23:00:56.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.871" level="INFO">VALUE: [0.00015961199999999995, 0.00015954199999999863, 0.00015865299999999818, 0.0001595420000000021, 0.0001595420000000021, 0.000158916999999998, 0.0001589030000000019, 0.00015948600000000035, 0.00015934700000000065, 0.00015941700000000197, 0.00015897200000000028, 0.0001594030000000024, 0.00015899999999999942, 0.00015941700000000197, 0.00015883300000000058, 0.00015874999999999917, 0.00015881900000000101, 0.0001587359999999996, 0.0001594160000000025, 0.00015890200000000243, 0.00015952800000000253, 0.00015880599999999745, 0.00015874999999999917, 0.00015881999999999702, 0.00015874999999999917, 0.0001590840000000003, 0.0001592779999999988, 0.00015949999999999992, 0.00015907000000000074, 0.000159610999999997, 0.00015897299999999975, 0.0001586940000000009, 0.00015933300000000108, 0.00015893099999999757, 0.00015951300000000002, 0.00015955499999999873, 0.0001594030000000024, 0.0001595420000000021, 0.00015880600000000092, 0.00015898600000000332, 0.00015861100000000294, 0.00015922200000000053, 0.00015948600000000035, 0.00015858399999999634, 0.00015934699999999719, 0.00015858400000000328, 0.00015941700000000197, 0.000158610999999996, 0.0001592360000000001, 0.00015944500000000111]</msg>
<status status="PASS" starttime="20201115 23:00:56.869" endtime="20201115 23:00:56.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.865" endtime="20201115 23:00:56.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.874" endtime="20201115 23:00:56.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.877" endtime="20201115 23:00:56.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.875" endtime="20201115 23:00:56.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.872" endtime="20201115 23:00:56.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.505" endtime="20201115 23:00:56.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.503" endtime="20201115 23:00:56.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.503" endtime="20201115 23:00:56.898"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.901" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.909" endtime="20201115 23:00:56.930"></status>
</kw>
<msg timestamp="20201115 23:00:56.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.907" endtime="20201115 23:00:56.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.932" endtime="20201115 23:00:56.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.934" endtime="20201115 23:00:56.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.905" endtime="20201115 23:00:56.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.903" endtime="20201115 23:00:56.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.943" endtime="20201115 23:00:57.230"></status>
</kw>
<msg timestamp="20201115 23:00:57.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024642444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024802403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.942" endtime="20201115 23:00:57.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024642444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024802403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.234" endtime="20201115 23:00:57.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.242" endtime="20201115 23:00:57.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.939" endtime="20201115 23:00:57.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.938" endtime="20201115 23:00:57.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.249" level="INFO">${RESULT} = [{'time': 0.024802403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015995900000000118, 'source_diff': 0.00015995900000000118}, {'time': 0.024994778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:57.245" endtime="20201115 23:00:57.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.263" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:57.250" endtime="20201115 23:00:57.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.267" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.266" endtime="20201115 23:00:57.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.270" level="INFO">VALUE: [0.00015995900000000118, 0.000160610999999998, 0.00015970800000000146, 0.00015986100000000072, 0.00016054199999999963, 0.0001605140000000005, 0.00016012500000000054, 0.00015988899999999986, 0.00016022199999999806, 0.00016059800000000138, 0.0001601940000000024, 0.0001597779999999993, 0.0001602909999999999, 0.00016022299999999753, 0.00015994499999999814, 0.00016013900000000011, 0.0001601520000000002, 0.0001597230000000005, 0.00015966699999999875, 0.00015977800000000278, 0.00016029199999999938, 0.0001597779999999993, 0.000159916999999999, 0.00016054199999999963, 0.00015979199999999888, 0.0001597230000000005, 0.0001598750000000003, 0.00016034700000000165, 0.00015984700000000115, 0.00015988899999999986, 0.00015986100000000072, 0.000159916999999999, 0.0001605559999999992, 0.00016044400000000264, 0.00015966599999999928, 0.00016015299999999968, 0.00016041599999999656, 0.0001600559999999987, 0.00015991700000000247, 0.00015966700000000222, 0.00016012499999999708, 0.00016009699999999794, 0.0001600830000000053, 0.00016006999999999827, 0.0001598610000000042, 0.0001596810000000018, 0.00015979199999999888, 0.00015980599999999845, 0.00016020800000000196, 0.00016020799999999502]</msg>
<status status="PASS" starttime="20201115 23:00:57.268" endtime="20201115 23:00:57.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.264" endtime="20201115 23:00:57.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.273" endtime="20201115 23:00:57.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.276" endtime="20201115 23:00:57.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.275" endtime="20201115 23:00:57.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.271" endtime="20201115 23:00:57.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.901" endtime="20201115 23:00:57.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.899" endtime="20201115 23:00:57.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.899" endtime="20201115 23:00:57.297"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.300" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.308" endtime="20201115 23:00:57.329"></status>
</kw>
<msg timestamp="20201115 23:00:57.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.306" endtime="20201115 23:00:57.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.330" endtime="20201115 23:00:57.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.333" endtime="20201115 23:00:57.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.304" endtime="20201115 23:00:57.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.302" endtime="20201115 23:00:57.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.342" endtime="20201115 23:00:57.626"></status>
</kw>
<msg timestamp="20201115 23:00:57.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023854889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024016194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.340" endtime="20201115 23:00:57.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023854889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024016194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.630" endtime="20201115 23:00:57.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.638" endtime="20201115 23:00:57.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.338" endtime="20201115 23:00:57.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.336" endtime="20201115 23:00:57.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.645" level="INFO">${RESULT} = [{'time': 0.024016194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016130500000000048, 'source_diff': 0.00016130500000000048}, {'time': 0.024209556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:57.642" endtime="20201115 23:00:57.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.658" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:57.646" endtime="20201115 23:00:57.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.663" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.662" endtime="20201115 23:00:57.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.665" level="INFO">VALUE: [0.00016130500000000048, 0.00016129200000000038, 0.00016130599999999995, 0.0001607499999999977, 0.00016084700000000215, 0.0001608750000000013, 0.0001607780000000003, 0.00016067999999999985, 0.00016152700000000159, 0.0001614300000000006, 0.00016136199999999823, 0.00016134699999999919, 0.00016109699999999894, 0.00016120899999999896, 0.0001608889999999974, 0.0001611109999999985, 0.00016066699999999975, 0.0001614719999999993, 0.00016129200000000038, 0.0001611949999999994, 0.00016086099999999826, 0.00016073599999999813, 0.0001610979999999984, 0.0001612360000000021, 0.00016131900000000005, 0.00016102800000000056, 0.00016108300000000284, 0.0001605970000000019, 0.00016108299999999937, 0.0001614170000000005, 0.00016152800000000106, 0.00016097200000000228, 0.00016090300000000043, 0.00016116699999999679, 0.00016095799999999924, 0.000160917, 0.000160707999999999, 0.0001614300000000006, 0.00016105500000000023, 0.00016065300000000018, 0.00016116600000000078, 0.00016147200000000278, 0.00016134699999999919, 0.00016079199999999988, 0.00016097199999999534, 0.0001610559999999997, 0.00016084700000000562, 0.00016065299999999672, 0.00016130500000000048, 0.00016066700000000322]</msg>
<status status="PASS" starttime="20201115 23:00:57.664" endtime="20201115 23:00:57.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.659" endtime="20201115 23:00:57.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.669" endtime="20201115 23:00:57.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.673" endtime="20201115 23:00:57.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.671" endtime="20201115 23:00:57.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.667" endtime="20201115 23:00:57.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.300" endtime="20201115 23:00:57.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.299" endtime="20201115 23:00:57.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.298" endtime="20201115 23:00:57.694"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.696" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.704" endtime="20201115 23:00:57.725"></status>
</kw>
<msg timestamp="20201115 23:00:57.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.703" endtime="20201115 23:00:57.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.727" endtime="20201115 23:00:57.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.730" endtime="20201115 23:00:57.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.700" endtime="20201115 23:00:57.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.698" endtime="20201115 23:00:57.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.739" endtime="20201115 23:00:58.024"></status>
</kw>
<msg timestamp="20201115 23:00:58.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023837111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023999486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.737" endtime="20201115 23:00:58.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023837111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023999486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.028" endtime="20201115 23:00:58.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.036" endtime="20201115 23:00:58.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.735" endtime="20201115 23:00:58.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.733" endtime="20201115 23:00:58.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.043" level="INFO">${RESULT} = [{'time': 0.023999486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016237499999999933, 'source_diff': 0.00016237499999999933}, {'time': 0.024182958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:58.040" endtime="20201115 23:00:58.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.056" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:58.044" endtime="20201115 23:00:58.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.060" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.059" endtime="20201115 23:00:58.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.062" level="INFO">VALUE: [0.00016237499999999933, 0.000162611, 0.0001620979999999994, 0.00016195800000000024, 0.00016186099999999926, 0.000162401999999999, 0.00016172199999999956, 0.00016190300000000143, 0.00016184699999999969, 0.0001619300000000011, 0.00016166699999999729, 0.0001617780000000013, 0.00016200000000000242, 0.00016238900000000236, 0.00016166700000000075, 0.0001622919999999979, 0.00016195800000000024, 0.00016191599999999806, 0.0001623889999999989, 0.00016163900000000161, 0.00016208300000000037, 0.00016193100000000057, 0.00016186100000000272, 0.00016237499999999933, 0.00016249999999999945, 0.00016254200000000163, 0.00016209699999999994, 0.00016172199999999956, 0.00016177700000000184, 0.00016198599999999938, 0.00016173599999999913, 0.00016167999999999738, 0.0001624170000000015, 0.00016204200000000113, 0.00016158299999999987, 0.00016216700000000125, 0.0001622499999999992, 0.00016223599999999963, 0.00016166700000000075, 0.00016175000000000217, 0.000161917000000001, 0.00016254200000000163, 0.00016176300000000227, 0.00016197200000000328, 0.00016195799999999677, 0.00016240299999999847, 0.00016234799999999966, 0.0001620560000000007, 0.00016162499999999858, 0.00016215299999999822]</msg>
<status status="PASS" starttime="20201115 23:00:58.061" endtime="20201115 23:00:58.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.057" endtime="20201115 23:00:58.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.066" endtime="20201115 23:00:58.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.069" endtime="20201115 23:00:58.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.067" endtime="20201115 23:00:58.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.064" endtime="20201115 23:00:58.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.697" endtime="20201115 23:00:58.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.695" endtime="20201115 23:00:58.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.694" endtime="20201115 23:00:58.090"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.092" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.101" endtime="20201115 23:00:58.122"></status>
</kw>
<msg timestamp="20201115 23:00:58.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.100" endtime="20201115 23:00:58.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.124" endtime="20201115 23:00:58.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.126" endtime="20201115 23:00:58.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.097" endtime="20201115 23:00:58.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.094" endtime="20201115 23:00:58.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.135" endtime="20201115 23:00:58.420"></status>
</kw>
<msg timestamp="20201115 23:00:58.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024286611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024450194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.134" endtime="20201115 23:00:58.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024286611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024450194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.425" endtime="20201115 23:00:58.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.433" endtime="20201115 23:00:58.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.131" endtime="20201115 23:00:58.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.129" endtime="20201115 23:00:58.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.439" level="INFO">${RESULT} = [{'time': 0.024450194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016358300000000187, 'source_diff': 0.00016358300000000187}, {'time': 0.024638639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:58.436" endtime="20201115 23:00:58.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.452" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:58.440" endtime="20201115 23:00:58.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.457" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.456" endtime="20201115 23:00:58.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.459" level="INFO">VALUE: [0.00016358300000000187, 0.00016354199999999916, 0.00016286099999999679, 0.00016317999999999888, 0.00016313899999999965, 0.00016294400000000167, 0.00016327699999999987, 0.00016291699999999854, 0.00016298600000000038, 0.00016347300000000078, 0.0001635279999999996, 0.00016304199999999866, 0.0001632500000000002, 0.00016322300000000053, 0.00016273600000000013, 0.0001630279999999991, 0.00016334699999999772, 0.0001631110000000005, 0.00016273600000000013, 0.00016337500000000033, 0.00016323600000000063, 0.0001629720000000008, 0.00016282000000000102, 0.00016350000000000045, 0.00016302800000000256, 0.00016283300000000112, 0.00016348700000000035, 0.0001630279999999991, 0.0001627499999999997, 0.000162917000000002, 0.00016322200000000106, 0.00016322300000000053, 0.00016316700000000225, 0.00016254199999999816, 0.00016254199999999816, 0.00016313899999999965, 0.00016304200000000213, 0.0001634720000000013, 0.00016304200000000213, 0.000163402, 0.00016340299999999947, 0.00016277700000000284, 0.0001632219999999976, 0.00016352699999999665, 0.0001635419999999957, 0.00016298699999999638, 0.00016330500000000248, 0.00016345799999999827, 0.00016259700000000044, 0.00016263899999999915]</msg>
<status status="PASS" starttime="20201115 23:00:58.458" endtime="20201115 23:00:58.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.453" endtime="20201115 23:00:58.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.462" endtime="20201115 23:00:58.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.466" endtime="20201115 23:00:58.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.464" endtime="20201115 23:00:58.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.460" endtime="20201115 23:00:58.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.093" endtime="20201115 23:00:58.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.091" endtime="20201115 23:00:58.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.090" endtime="20201115 23:00:58.487"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.489" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.497" endtime="20201115 23:00:58.519"></status>
</kw>
<msg timestamp="20201115 23:00:58.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.496" endtime="20201115 23:00:58.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.521" endtime="20201115 23:00:58.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.523" endtime="20201115 23:00:58.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.493" endtime="20201115 23:00:58.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.491" endtime="20201115 23:00:58.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.532" endtime="20201115 23:00:58.818"></status>
</kw>
<msg timestamp="20201115 23:00:58.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024593931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024758347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.531" endtime="20201115 23:00:58.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024593931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024758347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.822" endtime="20201115 23:00:58.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.830" endtime="20201115 23:00:58.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.528" endtime="20201115 23:00:58.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.526" endtime="20201115 23:00:58.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.837" level="INFO">${RESULT} = [{'time': 0.024758347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016441600000000056, 'source_diff': 0.00016441600000000056}, {'time': 0.024939722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:58.833" endtime="20201115 23:00:58.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.851" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:58.838" endtime="20201115 23:00:58.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.855" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.854" endtime="20201115 23:00:58.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.858" level="INFO">VALUE: [0.00016441600000000056, 0.00016392999999999963, 0.00016363800000000067, 0.0001640699999999988, 0.00016447299999999831, 0.00016355599999999873, 0.00016386099999999779, 0.0001642080000000025, 0.00016394500000000214, 0.00016383299999999865, 0.0001639720000000018, 0.00016387500000000083, 0.0001636950000000019, 0.00016454200000000016, 0.00016365200000000024, 0.00016417999999999988, 0.00016463899999999768, 0.00016390299999999997, 0.0001642219999999986, 0.00016397199999999834, 0.00016411099999999804, 0.00016412500000000108, 0.00016365200000000024, 0.00016426400000000077, 0.0001642500000000012, 0.00016380599999999898, 0.00016415300000000022, 0.0001637500000000007, 0.00016390299999999997, 0.000164402999999997, 0.00016441600000000056, 0.0001640410000000002, 0.00016409700000000194, 0.000163708000000002, 0.0001640280000000001, 0.00016415299999999675, 0.00016402800000000356, 0.00016379200000000288, 0.00016397199999999834, 0.00016430499999999654, 0.00016391699999999954, 0.00016433300000000262, 0.00016452799999999712, 0.00016391600000000006, 0.00016432000000000252, 0.00016408400000000184, 0.0001639309999999991, 0.00016358400000000134, 0.0001638749999999939, 0.00016372200000000503]</msg>
<status status="PASS" starttime="20201115 23:00:58.856" endtime="20201115 23:00:58.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.852" endtime="20201115 23:00:58.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.861" endtime="20201115 23:00:58.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.865" endtime="20201115 23:00:58.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.863" endtime="20201115 23:00:58.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.860" endtime="20201115 23:00:58.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.490" endtime="20201115 23:00:58.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.488" endtime="20201115 23:00:58.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.487" endtime="20201115 23:00:58.886"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.888" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.896" endtime="20201115 23:00:58.917"></status>
</kw>
<msg timestamp="20201115 23:00:58.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.895" endtime="20201115 23:00:58.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.919" endtime="20201115 23:00:58.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.922" endtime="20201115 23:00:58.923"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.892" endtime="20201115 23:00:58.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.890" endtime="20201115 23:00:58.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.930" endtime="20201115 23:00:59.215"></status>
</kw>
<msg timestamp="20201115 23:00:59.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023695111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023860708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.929" endtime="20201115 23:00:59.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023695111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023860708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.219" endtime="20201115 23:00:59.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.227" endtime="20201115 23:00:59.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.926" endtime="20201115 23:00:59.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.925" endtime="20201115 23:00:59.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.234" level="INFO">${RESULT} = [{'time': 0.023860708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016559699999999997, 'source_diff': 0.00016559699999999997}, {'time': 0.024048042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:59.231" endtime="20201115 23:00:59.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.247" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:59.235" endtime="20201115 23:00:59.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.251" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.250" endtime="20201115 23:00:59.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.254" level="INFO">VALUE: [0.00016559699999999997, 0.00016522299999999907, 0.00016470799999999952, 0.00016533300000000015, 0.00016497199999999934, 0.00016516700000000079, 0.00016534699999999972, 0.00016480499999999704, 0.00016483299999999965, 0.0001654440000000007, 0.00016481999999999955, 0.00016490300000000097, 0.00016537499999999886, 0.0001652219999999996, 0.0001652219999999996, 0.00016541700000000104, 0.0001652920000000009, 0.00016538899999999843, 0.00016497199999999934, 0.00016465299999999725, 0.0001645829999999994, 0.0001654440000000007, 0.00016501400000000152, 0.00016551399999999855, 0.0001650549999999973, 0.00016469499999999943, 0.00016465300000000072, 0.00016477799999999737, 0.00016486099999999879, 0.0001650699999999998, 0.00016463900000000115, 0.00016505500000000076, 0.00016497199999999934, 0.00016466700000000029, 0.00016526400000000177, 0.00016501400000000152, 0.00016465200000000124, 0.000164611000000002, 0.00016533399999999962, 0.00016470799999999952, 0.00016518000000000088, 0.00016540300000000147, 0.00016529199999999744, 0.00016497199999999934, 0.000164708999999999, 0.00016462500000000158, 0.00016515300000000122, 0.00016549999999999898, 0.00016519499999999993, 0.00016533300000000362]</msg>
<status status="PASS" starttime="20201115 23:00:59.253" endtime="20201115 23:00:59.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.248" endtime="20201115 23:00:59.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.258" endtime="20201115 23:00:59.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.261" endtime="20201115 23:00:59.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.259" endtime="20201115 23:00:59.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.256" endtime="20201115 23:00:59.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.889" endtime="20201115 23:00:59.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.887" endtime="20201115 23:00:59.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.886" endtime="20201115 23:00:59.282"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.284" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.293" endtime="20201115 23:00:59.314"></status>
</kw>
<msg timestamp="20201115 23:00:59.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.291" endtime="20201115 23:00:59.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.316" endtime="20201115 23:00:59.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.318" endtime="20201115 23:00:59.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.288" endtime="20201115 23:00:59.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.286" endtime="20201115 23:00:59.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.327" endtime="20201115 23:00:59.612"></status>
</kw>
<msg timestamp="20201115 23:00:59.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024018639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024184986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.325" endtime="20201115 23:00:59.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024018639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024184986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.616" endtime="20201115 23:00:59.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.624" endtime="20201115 23:00:59.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.323" endtime="20201115 23:00:59.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.321" endtime="20201115 23:00:59.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.631" level="INFO">${RESULT} = [{'time': 0.024184986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016634699999999725, 'source_diff': 0.00016634699999999725}, {'time': 0.024371361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:59.627" endtime="20201115 23:00:59.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.644" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:00:59.632" endtime="20201115 23:00:59.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.648" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.647" endtime="20201115 23:00:59.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.651" level="INFO">VALUE: [0.00016634699999999725, 0.0001658050000000015, 0.00016627800000000234, 0.0001659859999999999, 0.00016620800000000102, 0.0001662090000000005, 0.00016579100000000194, 0.00016599999999999948, 0.00016647299999999685, 0.00016645900000000075, 0.00016602799999999862, 0.000166402999999999, 0.00016587499999999936, 0.00016583300000000065, 0.00016624999999999973, 0.0001664860000000004, 0.00016622199999999712, 0.0001656660000000018, 0.00016626299999999983, 0.00016590300000000197, 0.0001657639999999988, 0.00016599999999999948, 0.00016608299999999743, 0.00016576400000000227, 0.00016565300000000172, 0.00016590199999999902, 0.00016574999999999923, 0.00016652799999999912, 0.00016593099999999764, 0.00016563899999999868, 0.00016556999999999683, 0.00016601299999999958, 0.0001661379999999997, 0.00016561099999999954, 0.00016643099999999814, 0.00016597199999999687, 0.00016602799999999862, 0.0001659159999999986, 0.00016661099999999707, 0.00016615300000000222, 0.00016655599999999826, 0.0001655969999999965, 0.0001659859999999999, 0.00016647200000000084, 0.00016637500000000333, 0.00016558300000000387, 0.00016563900000000215, 0.0001663189999999981, 0.0001663189999999981, 0.0001660419999999982]</msg>
<status status="PASS" starttime="20201115 23:00:59.650" endtime="20201115 23:00:59.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.645" endtime="20201115 23:00:59.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.654" endtime="20201115 23:00:59.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.657" endtime="20201115 23:00:59.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.656" endtime="20201115 23:00:59.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.652" endtime="20201115 23:00:59.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.285" endtime="20201115 23:00:59.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.283" endtime="20201115 23:00:59.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.282" endtime="20201115 23:00:59.679"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.681" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.689" endtime="20201115 23:00:59.711"></status>
</kw>
<msg timestamp="20201115 23:00:59.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.688" endtime="20201115 23:00:59.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.713" endtime="20201115 23:00:59.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.715" endtime="20201115 23:00:59.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.685" endtime="20201115 23:00:59.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.683" endtime="20201115 23:00:59.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.724" endtime="20201115 23:01:00.010"></status>
</kw>
<msg timestamp="20201115 23:01:00.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024391431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024558208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.722" endtime="20201115 23:01:00.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024391431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024558208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.014" endtime="20201115 23:01:00.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.023" endtime="20201115 23:01:00.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.720" endtime="20201115 23:01:00.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.718" endtime="20201115 23:01:00.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.029" level="INFO">${RESULT} = [{'time': 0.024558208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001667769999999999, 'source_diff': 0.0001667769999999999}, {'time': 0.024753542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:00.026" endtime="20201115 23:01:00.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.042" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:00.030" endtime="20201115 23:01:00.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.047" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.046" endtime="20201115 23:01:00.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.049" level="INFO">VALUE: [0.0001667769999999999, 0.00016669500000000143, 0.0001666250000000001, 0.0001666380000000002, 0.000167305000000003, 0.00016751400000000055, 0.00016715299999999975, 0.00016725000000000073, 0.00016719500000000193, 0.00016733400000000162, 0.0001670830000000019, 0.00016686099999999732, 0.00016658400000000087, 0.00016681999999999808, 0.00016743000000000313, 0.00016680600000000198, 0.0001671799999999994, 0.00016716699999999932, 0.00016727799999999987, 0.00016709800000000094, 0.00016684700000000122, 0.000167305999999999, 0.00016661100000000054, 0.00016688899999999993, 0.0001668480000000007, 0.00016733399999999815, 0.0001672090000000015, 0.00016670800000000152, 0.00016663899999999968, 0.00016670899999999753, 0.0001665700000000013, 0.0001666250000000001, 0.0001672090000000015, 0.0001669310000000021, 0.00016708299999999843, 0.00016668000000000238, 0.0001668890000000034, 0.00016697200000000134, 0.00016740300000000347, 0.00016700000000000048, 0.0001673890000000039, 0.000167096999999998, 0.00016708299999999843, 0.00016662499999999664, 0.00016734799999999772, 0.00016734799999999772, 0.00016733399999999815, 0.00016701400000000005, 0.00016693099999999517, 0.00016706999999999833]</msg>
<status status="PASS" starttime="20201115 23:01:00.048" endtime="20201115 23:01:00.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.043" endtime="20201115 23:01:00.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.052" endtime="20201115 23:01:00.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.056" endtime="20201115 23:01:00.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.054" endtime="20201115 23:01:00.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.051" endtime="20201115 23:01:00.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.682" endtime="20201115 23:01:00.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.680" endtime="20201115 23:01:00.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.679" endtime="20201115 23:01:00.077"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.079" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.087" endtime="20201115 23:01:00.110"></status>
</kw>
<msg timestamp="20201115 23:01:00.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.086" endtime="20201115 23:01:00.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.111" endtime="20201115 23:01:00.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.114" endtime="20201115 23:01:00.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.083" endtime="20201115 23:01:00.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.081" endtime="20201115 23:01:00.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.123" endtime="20201115 23:01:00.409"></status>
</kw>
<msg timestamp="20201115 23:01:00.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024614319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024782667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.121" endtime="20201115 23:01:00.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024614319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024782667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.413" endtime="20201115 23:01:00.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.421" endtime="20201115 23:01:00.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.118" endtime="20201115 23:01:00.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.117" endtime="20201115 23:01:00.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.427" level="INFO">${RESULT} = [{'time': 0.024782667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001683480000000022, 'source_diff': 0.0001683480000000022}, {'time': 0.024972083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:00.424" endtime="20201115 23:01:00.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.442" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:00.428" endtime="20201115 23:01:00.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.446" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.445" endtime="20201115 23:01:00.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.449" level="INFO">VALUE: [0.0001683480000000022, 0.00016794399999999973, 0.00016829100000000097, 0.00016781999999999908, 0.00016786099999999832, 0.0001683190000000001, 0.00016825000000000173, 0.00016806899999999986, 0.00016770799999999905, 0.0001681250000000016, 0.0001680420000000002, 0.00016783299999999918, 0.0001683610000000023, 0.00016779199999999994, 0.00016784699999999875, 0.00016831999999999958, 0.00016787500000000136, 0.00016800000000000148, 0.000168403000000001, 0.00016852800000000112, 0.0001677359999999982, 0.00016788900000000093, 0.00016769399999999948, 0.00016770800000000252, 0.0001676389999999972, 0.0001683749999999984, 0.00016775000000000123, 0.00016822199999999912, 0.00016788799999999798, 0.0001682359999999987, 0.00016786099999999832, 0.00016797200000000234, 0.00016794399999999973, 0.00016795900000000225, 0.00016815300000000075, 0.00016850000000000198, 0.0001676660000000038, 0.00016784799999999822, 0.00016783299999999918, 0.00016770799999999558, 0.0001681389999999977, 0.00016779199999999994, 0.0001678749999999979, 0.00016759700000000544, 0.00016852800000000112, 0.00016788899999999746, 0.0001677220000000021, 0.000168194999999996, 0.00016759799999999797, 0.0001676519999999973]</msg>
<status status="PASS" starttime="20201115 23:01:00.447" endtime="20201115 23:01:00.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.443" endtime="20201115 23:01:00.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.452" endtime="20201115 23:01:00.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.455" endtime="20201115 23:01:00.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.454" endtime="20201115 23:01:00.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.450" endtime="20201115 23:01:00.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.080" endtime="20201115 23:01:00.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.078" endtime="20201115 23:01:00.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.077" endtime="20201115 23:01:00.476"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.479" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.487" endtime="20201115 23:01:00.508"></status>
</kw>
<msg timestamp="20201115 23:01:00.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.485" endtime="20201115 23:01:00.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.510" endtime="20201115 23:01:00.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.513" endtime="20201115 23:01:00.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.483" endtime="20201115 23:01:00.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.481" endtime="20201115 23:01:00.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.522" endtime="20201115 23:01:00.807"></status>
</kw>
<msg timestamp="20201115 23:01:00.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023853347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024022389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.520" endtime="20201115 23:01:00.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023853347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024022389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.811" endtime="20201115 23:01:00.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.820" endtime="20201115 23:01:00.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.517" endtime="20201115 23:01:00.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.516" endtime="20201115 23:01:00.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.826" level="INFO">${RESULT} = [{'time': 0.024022389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001690420000000012, 'source_diff': 0.0001690420000000012}, {'time': 0.024206708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:00.823" endtime="20201115 23:01:00.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.839" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:00.827" endtime="20201115 23:01:00.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.843" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.842" endtime="20201115 23:01:00.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.846" level="INFO">VALUE: [0.0001690420000000012, 0.00016938899999999896, 0.00016907000000000033, 0.00016938899999999896, 0.00016952800000000212, 0.0001685969999999995, 0.0001685969999999995, 0.00016916599999999837, 0.0001692359999999997, 0.00016958299999999746, 0.00016851400000000155, 0.00016897199999999987, 0.0001689580000000003, 0.0001690839999999999, 0.00016883300000000018, 0.00016883300000000018, 0.00016901399999999858, 0.0001687359999999992, 0.00016893100000000064, 0.00016890299999999803, 0.00016867999999999744, 0.00016952799999999865, 0.00016873600000000266, 0.0001688749999999989, 0.00016916700000000132, 0.0001688190000000006, 0.00016943100000000114, 0.0001693190000000011, 0.00016943099999999767, 0.00016879200000000094, 0.0001687779999999979, 0.00016943099999999767, 0.00016865300000000125, 0.0001692359999999997, 0.0001689580000000003, 0.00016943100000000114, 0.00016856999999999983, 0.0001694999999999995, 0.00016918099999999742, 0.00016870800000000352, 0.00016880500000000104, 0.00016958300000000093, 0.00016949999999999604, 0.00016856999999999983, 0.00016870899999999606, 0.0001693749999999994, 0.00016906900000000086, 0.00016915300000000522, 0.00016950000000000298, 0.00016905600000000076]</msg>
<status status="PASS" starttime="20201115 23:01:00.844" endtime="20201115 23:01:00.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.840" endtime="20201115 23:01:00.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.849" endtime="20201115 23:01:00.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.852" endtime="20201115 23:01:00.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.851" endtime="20201115 23:01:00.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.847" endtime="20201115 23:01:00.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.479" endtime="20201115 23:01:00.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.477" endtime="20201115 23:01:00.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.476" endtime="20201115 23:01:00.873"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.876" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.884" endtime="20201115 23:01:00.906"></status>
</kw>
<msg timestamp="20201115 23:01:00.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.883" endtime="20201115 23:01:00.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.907" endtime="20201115 23:01:00.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.910" endtime="20201115 23:01:00.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.880" endtime="20201115 23:01:00.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.878" endtime="20201115 23:01:00.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.919" endtime="20201115 23:01:01.204"></status>
</kw>
<msg timestamp="20201115 23:01:01.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024125875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024296333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.917" endtime="20201115 23:01:01.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024125875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024296333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.208" endtime="20201115 23:01:01.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.216" endtime="20201115 23:01:01.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.915" endtime="20201115 23:01:01.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.913" endtime="20201115 23:01:01.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.223" level="INFO">${RESULT} = [{'time': 0.024296333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017045799999999833, 'source_diff': 0.00017045799999999833}, {'time': 0.024489708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:01.220" endtime="20201115 23:01:01.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.236" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:01.224" endtime="20201115 23:01:01.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.240" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.239" endtime="20201115 23:01:01.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.243" level="INFO">VALUE: [0.00017045799999999833, 0.00016966599999999887, 0.00017026399999999983, 0.00017044400000000223, 0.0001695970000000005, 0.00017026399999999983, 0.00017025000000000026, 0.00016969500000000096, 0.00016994499999999774, 0.00017058300000000193, 0.00017012500000000014, 0.00016994499999999774, 0.00016983300000000118, 0.00016973699999999967, 0.00017006900000000186, 0.0001700550000000023, 0.0001703750000000004, 0.000169790999999999, 0.00016961100000000007, 0.00016968100000000139, 0.00017004100000000272, 0.00017036100000000082, 0.0001696389999999992, 0.00017016700000000232, 0.00016957000000000083, 0.00016994400000000173, 0.00016988799999999998, 0.00017, 0.00016975000000000323, 0.000170097000000001, 0.0001703750000000004, 0.00016990200000000302, 0.0001704450000000017, 0.00017020800000000155, 0.00016998600000000044, 0.00016993099999999817, 0.0001704580000000018, 0.00017008399999999396, 0.00016993099999999817, 0.00016977800000000237, 0.00016998599999999697, 0.00016994399999999826, 0.00016995799999999783, 0.00016966699999999835, 0.0001698749999999999, 0.00017033400000000115, 0.00017051400000000355, 0.0001701389999999997, 0.00016994500000000468, 0.00016965299999999878]</msg>
<status status="PASS" starttime="20201115 23:01:01.241" endtime="20201115 23:01:01.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.237" endtime="20201115 23:01:01.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.246" endtime="20201115 23:01:01.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.250" endtime="20201115 23:01:01.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.248" endtime="20201115 23:01:01.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.244" endtime="20201115 23:01:01.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.876" endtime="20201115 23:01:01.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.875" endtime="20201115 23:01:01.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.874" endtime="20201115 23:01:01.271"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.273" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.281" endtime="20201115 23:01:01.303"></status>
</kw>
<msg timestamp="20201115 23:01:01.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.280" endtime="20201115 23:01:01.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.304" endtime="20201115 23:01:01.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.307" endtime="20201115 23:01:01.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.277" endtime="20201115 23:01:01.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.275" endtime="20201115 23:01:01.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.316" endtime="20201115 23:01:01.599"></status>
</kw>
<msg timestamp="20201115 23:01:01.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023774667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023946042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.314" endtime="20201115 23:01:01.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023774667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023946042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.603" endtime="20201115 23:01:01.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.611" endtime="20201115 23:01:01.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.312" endtime="20201115 23:01:01.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.310" endtime="20201115 23:01:01.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.618" level="INFO">${RESULT} = [{'time': 0.023946042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001713750000000014, 'source_diff': 0.0001713750000000014}, {'time': 0.024136542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:01.614" endtime="20201115 23:01:01.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.631" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:01.619" endtime="20201115 23:01:01.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.635" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.634" endtime="20201115 23:01:01.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.637" level="INFO">VALUE: [0.0001713750000000014, 0.00017086100000000132, 0.00017119500000000246, 0.00017120900000000203, 0.00017136100000000182, 0.00017094399999999926, 0.00017093099999999917, 0.00017077700000000043, 0.0001711390000000007, 0.00017079199999999947, 0.000171097000000002, 0.00017072199999999815, 0.00017080599999999904, 0.00017144399999999976, 0.00017065299999999978, 0.00017116699999999985, 0.000170791, 0.0001707779999999999, 0.00017056900000000236, 0.00017126300000000136, 0.00017120899999999856, 0.00017120799999999908, 0.00017070800000000205, 0.0001713329999999992, 0.00017090200000000055, 0.00017086100000000132, 0.00017090199999999708, 0.00017076399999999686, 0.00017065299999999978, 0.00017077700000000043, 0.00017126400000000083, 0.0001706390000000002, 0.0001712780000000004, 0.00017061100000000107, 0.0001712780000000004, 0.00017061100000000107, 0.00017108300000000243, 0.0001710689999999994, 0.00017107000000000233, 0.00017066699999999935, 0.00017098599999999797, 0.00017140300000000053, 0.00017157000000000283, 0.00017086100000000132, 0.00017145800000000627, 0.00017154100000000422, 0.00017097200000000534, 0.00017097299999999788, 0.00017115300000000028, 0.00017133299999999574]</msg>
<status status="PASS" starttime="20201115 23:01:01.636" endtime="20201115 23:01:01.645"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.631" endtime="20201115 23:01:01.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.648" endtime="20201115 23:01:01.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.652" endtime="20201115 23:01:01.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.650" endtime="20201115 23:01:01.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.647" endtime="20201115 23:01:01.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.274" endtime="20201115 23:01:01.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.272" endtime="20201115 23:01:01.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.271" endtime="20201115 23:01:01.676"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.679" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.693" endtime="20201115 23:01:01.717"></status>
</kw>
<msg timestamp="20201115 23:01:01.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.691" endtime="20201115 23:01:01.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.718" endtime="20201115 23:01:01.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.722" endtime="20201115 23:01:01.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.686" endtime="20201115 23:01:01.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.681" endtime="20201115 23:01:01.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.732" endtime="20201115 23:01:02.017"></status>
</kw>
<msg timestamp="20201115 23:01:02.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035089542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035261597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.730" endtime="20201115 23:01:02.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035089542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035261597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.021" endtime="20201115 23:01:02.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.029" endtime="20201115 23:01:02.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.727" endtime="20201115 23:01:02.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.725" endtime="20201115 23:01:02.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.036" level="INFO">${RESULT} = [{'time': 0.035261597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017205499999999735, 'source_diff': 0.00017205499999999735}, {'time': 0.035449069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:02.033" endtime="20201115 23:01:02.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.050" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:02.037" endtime="20201115 23:01:02.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.055" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.054" endtime="20201115 23:01:02.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.058" level="INFO">VALUE: [0.00017205499999999735, 0.0001724719999999999, 0.0001724589999999998, 0.00017226399999999836, 0.00017159699999999556, 0.00017177699999999796, 0.00017206900000000386, 0.00017172199999999915, 0.00017177799999999743, 0.00017188899999999452, 0.000172097000000003, 0.00017249999999999904, 0.00017226399999999836, 0.00017238799999999554, 0.00017215300000000128, 0.00017245800000000033, 0.00017205499999999735, 0.00017188800000000198, 0.00017220800000000008, 0.0001717640000000048, 0.00017233400000000315, 0.00017220800000000008, 0.00017209699999999606, 0.0001719719999999994, 0.0001721390000000017, 0.00017232000000000358, 0.00017226399999999836, 0.00017245800000000033, 0.00017183300000000318, 0.00017216700000000085, 0.00017190300000000103, 0.00017231899999999717, 0.0001721390000000017, 0.0001717640000000048, 0.00017176399999999786, 0.00017195799999999983, 0.00017245800000000033, 0.00017245800000000033, 0.00017238900000000196, 0.00017244500000000024, 0.0001720699999999964, 0.0001722220000000066, 0.00017212500000000214, 0.00017170899999999906, 0.0001718190000000036, 0.00017220899999999956, 0.00017202800000000462, 0.00017193100000000017, 0.00017172199999999915, 0.00017172199999999915]</msg>
<status status="PASS" starttime="20201115 23:01:02.056" endtime="20201115 23:01:02.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.051" endtime="20201115 23:01:02.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.061" endtime="20201115 23:01:02.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.064" endtime="20201115 23:01:02.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.062" endtime="20201115 23:01:02.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.059" endtime="20201115 23:01:02.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.680" endtime="20201115 23:01:02.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.677" endtime="20201115 23:01:02.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.676" endtime="20201115 23:01:02.085"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.088" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.095" endtime="20201115 23:01:02.117"></status>
</kw>
<msg timestamp="20201115 23:01:02.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.094" endtime="20201115 23:01:02.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.119" endtime="20201115 23:01:02.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.121" endtime="20201115 23:01:02.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.092" endtime="20201115 23:01:02.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.090" endtime="20201115 23:01:02.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.130" endtime="20201115 23:01:02.415"></status>
</kw>
<msg timestamp="20201115 23:01:02.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023719389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023892278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.129" endtime="20201115 23:01:02.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023719389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023892278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.419" endtime="20201115 23:01:02.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.427" endtime="20201115 23:01:02.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.126" endtime="20201115 23:01:02.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.124" endtime="20201115 23:01:02.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.433" level="INFO">${RESULT} = [{'time': 0.023892278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000172888999999999, 'source_diff': 0.000172888999999999}, {'time': 0.024083722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:02.430" endtime="20201115 23:01:02.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.447" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:02.435" endtime="20201115 23:01:02.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.451" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.450" endtime="20201115 23:01:02.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.454" level="INFO">VALUE: [0.000172888999999999, 0.00017276399999999886, 0.00017333400000000068, 0.00017308399999999696, 0.0001733330000000012, 0.00017280500000000157, 0.00017299999999999954, 0.00017345800000000133, 0.00017280600000000104, 0.00017308300000000096, 0.00017280600000000104, 0.00017286099999999985, 0.00017320800000000108, 0.00017316699999999838, 0.00017354099999999928, 0.00017334700000000078, 0.0001726109999999996, 0.0001726109999999996, 0.00017341699999999863, 0.00017348600000000047, 0.00017280600000000104, 0.00017291599999999865, 0.00017313899999999924, 0.0001731110000000001, 0.0001729300000000017, 0.0001730829999999975, 0.00017281900000000114, 0.00017254199999999775, 0.00017298699999999945, 0.00017347300000000038, 0.000172791999999998, 0.00017273599999999972, 0.00017298599999999997, 0.0001730139999999991, 0.00017355499999999885, 0.0001732499999999998, 0.00017294500000000074, 0.0001726529999999983, 0.00017311199999999957, 0.0001732499999999998, 0.0001731390000000027, 0.00017355600000000526, 0.00017359799999999703, 0.00017283299999999724, 0.00017283299999999724, 0.00017270800000000058, 0.00017337499999999645, 0.00017258300000000393, 0.00017336199999999635, 0.00017286099999999638]</msg>
<status status="PASS" starttime="20201115 23:01:02.452" endtime="20201115 23:01:02.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.448" endtime="20201115 23:01:02.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.457" endtime="20201115 23:01:02.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.460" endtime="20201115 23:01:02.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.459" endtime="20201115 23:01:02.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.455" endtime="20201115 23:01:02.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.088" endtime="20201115 23:01:02.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.086" endtime="20201115 23:01:02.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.085" endtime="20201115 23:01:02.481"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.484" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.492" endtime="20201115 23:01:02.514"></status>
</kw>
<msg timestamp="20201115 23:01:02.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.491" endtime="20201115 23:01:02.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.515" endtime="20201115 23:01:02.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.518" endtime="20201115 23:01:02.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.488" endtime="20201115 23:01:02.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.486" endtime="20201115 23:01:02.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.527" endtime="20201115 23:01:02.813"></status>
</kw>
<msg timestamp="20201115 23:01:02.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023940444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024114153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.525" endtime="20201115 23:01:02.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023940444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024114153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.817" endtime="20201115 23:01:02.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.825" endtime="20201115 23:01:02.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.523" endtime="20201115 23:01:02.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.521" endtime="20201115 23:01:02.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.832" level="INFO">${RESULT} = [{'time': 0.024114153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001737089999999976, 'source_diff': 0.0001737089999999976}, {'time': 0.024310528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:02.829" endtime="20201115 23:01:02.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.845" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:02.833" endtime="20201115 23:01:02.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.850" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.848" endtime="20201115 23:01:02.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.852" level="INFO">VALUE: [0.0001737089999999976, 0.0001742500000000008, 0.00017404099999999978, 0.0001741529999999998, 0.00017411099999999763, 0.00017380599999999857, 0.00017377799999999943, 0.00017398600000000097, 0.00017408300000000196, 0.0001745140000000006, 0.00017436100000000135, 0.00017440200000000058, 0.00017380599999999857, 0.00017448600000000147, 0.0001738469999999978, 0.00017391699999999913, 0.00017391599999999965, 0.0001743890000000005, 0.00017420799999999861, 0.00017444499999999877, 0.0001740140000000001, 0.000174485999999998, 0.0001742500000000008, 0.00017441600000000015, 0.00017409700000000153, 0.0001742919999999995, 0.0001737500000000003, 0.00017445799999999886, 0.0001740560000000023, 0.00017431999999999864, 0.00017398700000000045, 0.000173889, 0.00017454199999999975, 0.00017452800000000018, 0.00017413900000000024, 0.00017412500000000067, 0.00017422200000000165, 0.00017395800000000183, 0.00017359699999999756, 0.00017386099999999738, 0.0001737500000000003, 0.00017431999999999864, 0.00017415299999999634, 0.00017381899999999867, 0.0001739579999999949, 0.00017450000000000104, 0.00017411099999999763, 0.00017441599999999668, 0.00017358300000000493, 0.00017383400000000465]</msg>
<status status="PASS" starttime="20201115 23:01:02.851" endtime="20201115 23:01:02.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.846" endtime="20201115 23:01:02.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.855" endtime="20201115 23:01:02.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.858" endtime="20201115 23:01:02.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.857" endtime="20201115 23:01:02.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.853" endtime="20201115 23:01:02.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.484" endtime="20201115 23:01:02.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.483" endtime="20201115 23:01:02.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.482" endtime="20201115 23:01:02.880"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.882" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.890" endtime="20201115 23:01:02.912"></status>
</kw>
<msg timestamp="20201115 23:01:02.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.889" endtime="20201115 23:01:02.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.913" endtime="20201115 23:01:02.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.916" endtime="20201115 23:01:02.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.886" endtime="20201115 23:01:02.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.884" endtime="20201115 23:01:02.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.925" endtime="20201115 23:01:03.211"></status>
</kw>
<msg timestamp="20201115 23:01:03.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023763, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023938417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:02.923" endtime="20201115 23:01:03.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023763, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023938417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:03.215" endtime="20201115 23:01:03.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.223" endtime="20201115 23:01:03.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.921" endtime="20201115 23:01:03.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.919" endtime="20201115 23:01:03.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.229" level="INFO">${RESULT} = [{'time': 0.023938417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017541700000000063, 'source_diff': 0.00017541700000000063}, {'time': 0.024136611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:03.226" endtime="20201115 23:01:03.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.242" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:03.230" endtime="20201115 23:01:03.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.247" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.246" endtime="20201115 23:01:03.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.249" level="INFO">VALUE: [0.00017541700000000063, 0.00017487499999999795, 0.00017463800000000126, 0.00017486100000000185, 0.00017491700000000013, 0.00017505599999999982, 0.0001746110000000016, 0.00017551399999999814, 0.00017486100000000185, 0.0001749309999999997, 0.00017519499999999952, 0.0001750699999999994, 0.0001747639999999974, 0.00017555500000000085, 0.00017487499999999795, 0.00017484799999999828, 0.0001750829999999995, 0.0001753890000000015, 0.0001750140000000011, 0.00017549999999999857, 0.00017506899999999992, 0.0001752920000000005, 0.00017468099999999945, 0.00017468099999999945, 0.000174694000000003, 0.00017537499999999845, 0.00017474999999999782, 0.0001747500000000013, 0.00017463900000000074, 0.00017544499999999977, 0.00017455599999999932, 0.00017506899999999992, 0.0001752500000000018, 0.0001754310000000002, 0.00017474999999999782, 0.00017474999999999782, 0.00017506899999999992, 0.00017502800000000068, 0.0001755140000000016, 0.00017550000000000204, 0.0001748060000000065, 0.00017486099999999838, 0.00017504200000000025, 0.00017527700000000146, 0.00017544399999999682, 0.00017472200000000215, 0.000174792, 0.00017516600000000437, 0.00017488899999999752, 0.00017461100000000507]</msg>
<status status="PASS" starttime="20201115 23:01:03.248" endtime="20201115 23:01:03.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.243" endtime="20201115 23:01:03.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.252" endtime="20201115 23:01:03.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.256" endtime="20201115 23:01:03.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.254" endtime="20201115 23:01:03.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.251" endtime="20201115 23:01:03.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.883" endtime="20201115 23:01:03.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.881" endtime="20201115 23:01:03.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.880" endtime="20201115 23:01:03.277"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.279" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.287" endtime="20201115 23:01:03.310"></status>
</kw>
<msg timestamp="20201115 23:01:03.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.286" endtime="20201115 23:01:03.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.311" endtime="20201115 23:01:03.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.314" endtime="20201115 23:01:03.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.283" endtime="20201115 23:01:03.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.281" endtime="20201115 23:01:03.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.323" endtime="20201115 23:01:03.608"></status>
</kw>
<msg timestamp="20201115 23:01:03.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024602375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024778875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.322" endtime="20201115 23:01:03.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024602375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024778875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.612" endtime="20201115 23:01:03.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.620" endtime="20201115 23:01:03.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.319" endtime="20201115 23:01:03.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.318" endtime="20201115 23:01:03.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.626" level="INFO">${RESULT} = [{'time': 0.024778875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017649999999999957, 'source_diff': 0.00017649999999999957}, {'time': 0.024972097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:03.623" endtime="20201115 23:01:03.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.641" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:03.627" endtime="20201115 23:01:03.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.645" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.644" endtime="20201115 23:01:03.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.648" level="INFO">VALUE: [0.00017649999999999957, 0.00017611099999999963, 0.00017622200000000018, 0.000176486, 0.00017580600000000057, 0.00017561099999999913, 0.00017629100000000203, 0.0001760830000000005, 0.000175889000000002, 0.00017618099999999748, 0.00017572199999999968, 0.00017609700000000006, 0.00017593000000000122, 0.00017587499999999895, 0.00017602799999999821, 0.0001763470000000003, 0.0001756379999999988, 0.00017597199999999993, 0.00017611099999999963, 0.00017577800000000143, 0.00017608399999999996, 0.00017586099999999938, 0.00017554200000000075, 0.00017573599999999925, 0.00017588899999999852, 0.00017588899999999852, 0.0001760270000000022, 0.00017563899999999827, 0.0001761119999999991, 0.0001758050000000011, 0.00017555600000000032, 0.00017618100000000095, 0.00017629099999999856, 0.00017608299999999702, 0.00017622200000000365, 0.00017587499999999895, 0.00017573600000000272, 0.0001756249999999987, 0.000176486999999996, 0.0001758050000000011, 0.00017587499999999895, 0.00017563899999999827, 0.00017633300000000074, 0.00017604100000000178, 0.0001762920000000015, 0.00017569400000000401, 0.00017555600000000032, 0.00017620800000000408, 0.00017583300000000024, 0.00017588899999999852]</msg>
<status status="PASS" starttime="20201115 23:01:03.646" endtime="20201115 23:01:03.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.642" endtime="20201115 23:01:03.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.651" endtime="20201115 23:01:03.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.654" endtime="20201115 23:01:03.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.652" endtime="20201115 23:01:03.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.649" endtime="20201115 23:01:03.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.280" endtime="20201115 23:01:03.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.278" endtime="20201115 23:01:03.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.277" endtime="20201115 23:01:03.675"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.678" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.686" endtime="20201115 23:01:03.708"></status>
</kw>
<msg timestamp="20201115 23:01:03.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.685" endtime="20201115 23:01:03.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.710" endtime="20201115 23:01:03.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.712" endtime="20201115 23:01:03.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.682" endtime="20201115 23:01:03.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.680" endtime="20201115 23:01:03.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.721" endtime="20201115 23:01:04.007"></status>
</kw>
<msg timestamp="20201115 23:01:04.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024278792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024455653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.719" endtime="20201115 23:01:04.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024278792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024455653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.011" endtime="20201115 23:01:04.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.019" endtime="20201115 23:01:04.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.717" endtime="20201115 23:01:04.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.715" endtime="20201115 23:01:04.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.026" level="INFO">${RESULT} = [{'time': 0.024455653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017686100000000038, 'source_diff': 0.00017686100000000038}, {'time': 0.024647167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:04.023" endtime="20201115 23:01:04.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.039" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:04.027" endtime="20201115 23:01:04.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.043" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.042" endtime="20201115 23:01:04.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.046" level="INFO">VALUE: [0.00017686100000000038, 0.000177486000000001, 0.00017663900000000274, 0.00017695900000000084, 0.00017720799999999814, 0.00017748700000000048, 0.00017738900000000002, 0.0001766249999999997, 0.00017737500000000045, 0.00017652799999999871, 0.00017674999999999982, 0.00017655499999999838, 0.0001768470000000008, 0.0001765700000000009, 0.00017694399999999832, 0.00017719499999999805, 0.00017684699999999734, 0.00017715299999999934, 0.0001768470000000008, 0.00017697199999999746, 0.00017659700000000056, 0.00017700000000000007, 0.00017702800000000268, 0.00017683299999999777, 0.00017688800000000005, 0.00017716700000000238, 0.00017698699999999998, 0.0001765140000000026, 0.0001765700000000009, 0.0001774029999999996, 0.0001772090000000011, 0.00017691699999999866, 0.00017750000000000057, 0.00017745899999999787, 0.000176583000000001, 0.00017663899999999927, 0.00017747300000000438, 0.00017681900000000167, 0.0001767500000000033, 0.00017741699999999916, 0.00017692999999999875, 0.0001770700000000014, 0.00017659700000000056, 0.00017737500000000045, 0.00017655600000000132, 0.00017744399999999882, 0.00017663899999999927, 0.00017747199999999796, 0.00017668099999999798, 0.0001774999999999971]</msg>
<status status="PASS" starttime="20201115 23:01:04.044" endtime="20201115 23:01:04.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.040" endtime="20201115 23:01:04.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.049" endtime="20201115 23:01:04.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.053" endtime="20201115 23:01:04.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.051" endtime="20201115 23:01:04.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.047" endtime="20201115 23:01:04.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.678" endtime="20201115 23:01:04.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.676" endtime="20201115 23:01:04.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.676" endtime="20201115 23:01:04.074"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.076" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.084" endtime="20201115 23:01:04.106"></status>
</kw>
<msg timestamp="20201115 23:01:04.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.083" endtime="20201115 23:01:04.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.108" endtime="20201115 23:01:04.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.110" endtime="20201115 23:01:04.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.080" endtime="20201115 23:01:04.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.078" endtime="20201115 23:01:04.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.119" endtime="20201115 23:01:04.404"></status>
</kw>
<msg timestamp="20201115 23:01:04.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023716028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023894042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.118" endtime="20201115 23:01:04.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023716028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023894042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.408" endtime="20201115 23:01:04.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.416" endtime="20201115 23:01:04.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.115" endtime="20201115 23:01:04.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.113" endtime="20201115 23:01:04.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.423" level="INFO">${RESULT} = [{'time': 0.023894042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017801400000000064, 'source_diff': 0.00017801400000000064}, {'time': 0.024088389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:04.420" endtime="20201115 23:01:04.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.436" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:04.424" endtime="20201115 23:01:04.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.440" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.439" endtime="20201115 23:01:04.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.443" level="INFO">VALUE: [0.00017801400000000064, 0.00017754200000000275, 0.00017856899999999995, 0.00017772199999999821, 0.00017798599999999803, 0.00017768000000000297, 0.000178277999999997, 0.0001775700000000019, 0.0001779579999999989, 0.0001779999999999976, 0.00017751400000000014, 0.00017791699999999966, 0.00017854200000000028, 0.00017765299999999984, 0.00017838900000000102, 0.00017762499999999723, 0.0001781250000000012, 0.00017770799999999864, 0.0001776669999999994, 0.00017791699999999966, 0.00017800000000000107, 0.0001784999999999981, 0.00017823599999999828, 0.00017841700000000016, 0.00017820799999999914, 0.00017797200000000193, 0.0001779030000000001, 0.00017818099999999948, 0.00017822199999999871, 0.0001778470000000018, 0.00017755499999999938, 0.00017825000000000132, 0.00017787500000000095, 0.0001781250000000012, 0.00017773600000000125, 0.00017761099999999766, 0.00017855500000000038, 0.00017797199999999846, 0.00017791600000000019, 0.00017774999999999735, 0.00017773599999999778, 0.0001777500000000043, 0.00017811100000000163, 0.00017841700000000016, 0.0001784999999999981, 0.00017844399999999982, 0.00017844399999999982, 0.00017765200000000037, 0.00017819499999999905, 0.000178486999999998]</msg>
<status status="PASS" starttime="20201115 23:01:04.441" endtime="20201115 23:01:04.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.437" endtime="20201115 23:01:04.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.446" endtime="20201115 23:01:04.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.450" endtime="20201115 23:01:04.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.448" endtime="20201115 23:01:04.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.445" endtime="20201115 23:01:04.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.077" endtime="20201115 23:01:04.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.075" endtime="20201115 23:01:04.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.074" endtime="20201115 23:01:04.471"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.473" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.481" endtime="20201115 23:01:04.503"></status>
</kw>
<msg timestamp="20201115 23:01:04.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.480" endtime="20201115 23:01:04.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.505" endtime="20201115 23:01:04.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.507" endtime="20201115 23:01:04.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.477" endtime="20201115 23:01:04.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.475" endtime="20201115 23:01:04.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.516" endtime="20201115 23:01:04.801"></status>
</kw>
<msg timestamp="20201115 23:01:04.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023883903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024063458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.515" endtime="20201115 23:01:04.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023883903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024063458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.805" endtime="20201115 23:01:04.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.813" endtime="20201115 23:01:04.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.512" endtime="20201115 23:01:04.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.511" endtime="20201115 23:01:04.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.820" level="INFO">${RESULT} = [{'time': 0.024063458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001795549999999979, 'source_diff': 0.0001795549999999979}, {'time': 0.024260847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:04.817" endtime="20201115 23:01:04.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.833" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:04.821" endtime="20201115 23:01:04.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.837" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.836" endtime="20201115 23:01:04.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.840" level="INFO">VALUE: [0.0001795549999999979, 0.00017898599999999903, 0.00017941599999999822, 0.00017926399999999842, 0.0001788060000000001, 0.0001790410000000013, 0.0001790410000000013, 0.00017906900000000045, 0.00017863900000000127, 0.0001788190000000002, 0.0001788609999999989, 0.0001789860000000025, 0.00017936199999999888, 0.00017854200000000028, 0.00017856899999999995, 0.00017893100000000023, 0.00017890299999999762, 0.00017901400000000164, 0.0001786250000000017, 0.0001790549999999974, 0.00017900000000000207, 0.00017870899999999912, 0.00017923599999999928, 0.00017937499999999898, 0.00017916699999999744, 0.00017958299999999705, 0.00017873599999999878, 0.00017943000000000126, 0.00017934699999999984, 0.0001790549999999974, 0.00017931899999999723, 0.00017879199999999706, 0.0001786670000000004, 0.00017938899999999855, 0.00017898599999999903, 0.00017892999999999729, 0.00017948599999999953, 0.00017933300000000374, 0.0001789869999999985, 0.00017944400000000083, 0.0001790549999999974, 0.00017870799999999964, 0.0001794999999999991, 0.0001789030000000011, 0.00017915300000000134, 0.00017904199999999731, 0.00017891700000000066, 0.00017872199999999921, 0.00017906899999999698, 0.0001789030000000011]</msg>
<status status="PASS" starttime="20201115 23:01:04.838" endtime="20201115 23:01:04.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.834" endtime="20201115 23:01:04.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.843" endtime="20201115 23:01:04.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.847" endtime="20201115 23:01:04.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.845" endtime="20201115 23:01:04.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.842" endtime="20201115 23:01:04.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.474" endtime="20201115 23:01:04.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.472" endtime="20201115 23:01:04.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.471" endtime="20201115 23:01:04.868"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.870" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.878" endtime="20201115 23:01:04.901"></status>
</kw>
<msg timestamp="20201115 23:01:04.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.877" endtime="20201115 23:01:04.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.903" endtime="20201115 23:01:04.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.905" endtime="20201115 23:01:04.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.874" endtime="20201115 23:01:04.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.872" endtime="20201115 23:01:04.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.914" endtime="20201115 23:01:05.200"></status>
</kw>
<msg timestamp="20201115 23:01:05.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024631153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024811083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.913" endtime="20201115 23:01:05.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024631153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024811083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.204" endtime="20201115 23:01:05.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.212" endtime="20201115 23:01:05.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.910" endtime="20201115 23:01:05.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.908" endtime="20201115 23:01:05.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:05.218" level="INFO">${RESULT} = [{'time': 0.024811083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017993000000000176, 'source_diff': 0.00017993000000000176}, {'time': 0.025023417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:05.215" endtime="20201115 23:01:05.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:05.233" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:05.220" endtime="20201115 23:01:05.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.238" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:01:05.236" endtime="20201115 23:01:05.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.240" level="INFO">VALUE: [0.00017993000000000176, 0.0001799169999999982, 0.0001797229999999997, 0.00018033400000000074, 0.00017973599999999978, 0.00017948599999999953, 0.0001799580000000009, 0.0001799999999999996, 0.0001800549999999984, 0.00018009699999999712, 0.00017987499999999948, 0.0001801389999999993, 0.00018030599999999813, 0.0001795410000000018, 0.00018059800000000056, 0.0001805410000000028, 0.00018023600000000028, 0.00017991700000000166, 0.0001798609999999999, 0.0001799999999999996, 0.0001800970000000006, 0.00018029200000000203, 0.00017965299999999837, 0.00018011100000000016, 0.00017980500000000163, 0.00017969500000000055, 0.0001798609999999999, 0.00017993100000000123, 0.00017979100000000206, 0.0001805000000000001, 0.0001799030000000021, 0.00018006900000000145, 0.00018022200000000071, 0.00017991599999999525, 0.00017976400000000586, 0.00017952699999999877, 0.00017959700000000356, 0.00017972200000000021, 0.00018006899999999798, 0.00017995900000000037, 0.00018047200000000096, 0.00017988900000000252, 0.00018034799999999684, 0.00018040200000000312, 0.0001802079999999942, 0.00017967999999999457, 0.00018033399999999727, 0.00017997200000000046, 0.00017986099999999644, 0.00017991700000000166]</msg>
<status status="PASS" starttime="20201115 23:01:05.239" endtime="20201115 23:01:05.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.234" endtime="20201115 23:01:05.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.243" endtime="20201115 23:01:05.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:05.246" endtime="20201115 23:01:05.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.245" endtime="20201115 23:01:05.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.241" endtime="20201115 23:01:05.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.871" endtime="20201115 23:01:05.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.869" endtime="20201115 23:01:05.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.868" endtime="20201115 23:01:05.268"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.270" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.278" endtime="20201115 23:01:05.300"></status>
</kw>
<msg timestamp="20201115 23:01:05.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.276" endtime="20201115 23:01:05.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.302" endtime="20201115 23:01:05.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.304" endtime="20201115 23:01:05.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.274" endtime="20201115 23:01:05.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.272" endtime="20201115 23:01:05.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.313" endtime="20201115 23:01:05.597"></status>
</kw>
<msg timestamp="20201115 23:01:05.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023941125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024122431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.312" endtime="20201115 23:01:05.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023941125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024122431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.602" endtime="20201115 23:01:05.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.610" endtime="20201115 23:01:05.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.309" endtime="20201115 23:01:05.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.307" endtime="20201115 23:01:05.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:05.617" level="INFO">${RESULT} = [{'time': 0.024122431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018130599999999913, 'source_diff': 0.00018130599999999913}, {'time': 0.024328792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:05.613" endtime="20201115 23:01:05.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:05.630" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 23:01:05.618" endtime="20201115 23:01:05.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.634" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:01:05.633" endtime="20201115 23:01:05.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.636" level="INFO">VALUE: [0.00018130599999999913, 0.00018143099999999926, 0.00018126400000000042, 0.00018068100000000198, 0.00018057000000000142, 0.00018069500000000155, 0.0001811109999999977, 0.00018055500000000238, 0.00018125000000000085, 0.00018086099999999744, 0.00018125000000000085, 0.0001806939999999986, 0.00018155599999999938, 0.0001806809999999985, 0.0001809580000000019, 0.0001806800000000025, 0.00018073700000000026, 0.00018120799999999868, 0.00018081899999999873, 0.00018061100000000066, 0.00018084699999999787, 0.000180971999999998, 0.00018051400000000314, 0.00018086199999999691, 0.0001811109999999977, 0.00018106899999999898, 0.00018076300000000045, 0.00018069499999999808, 0.0001809870000000005, 0.00018130599999999913, 0.00018072200000000122, 0.00018054200000000228, 0.0001813329999999988, 0.00018073600000000078, 0.00018066699999999894, 0.00018083300000000177, 0.0001813199999999987, 0.00018095900000000137, 0.00018142999999999632, 0.00018095900000000137, 0.00018111100000000463, 0.00018084699999999787, 0.00018119500000000205, 0.0001812230000000012, 0.00018123600000000128, 0.00018055599999999838, 0.00018120900000000162, 0.0001813749999999975, 0.00018136099999999794, 0.00018143100000000273]</msg>
<status status="PASS" starttime="20201115 23:01:05.635" endtime="20201115 23:01:05.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.631" endtime="20201115 23:01:05.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.640" endtime="20201115 23:01:05.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:05.643" endtime="20201115 23:01:05.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.641" endtime="20201115 23:01:05.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.638" endtime="20201115 23:01:05.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.271" endtime="20201115 23:01:05.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.269" endtime="20201115 23:01:05.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.268" endtime="20201115 23:01:05.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.739" endtime="20201115 23:01:05.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:05.672" endtime="20201115 23:01:05.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.670" endtime="20201115 23:01:05.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.669" endtime="20201115 23:01:05.693"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:00:25.670" endtime="20201115 23:01:05.693" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:44.468" endtime="20201115 23:01:05.698"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:59:42.385" endtime="20201115 23:01:05.714"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_saml10-xpro</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
