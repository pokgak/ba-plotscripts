<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:59:42.177" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:42.739" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:42.748" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:59:43.842" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:42.738" endtime="20201115 22:59:43.843"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:59:43.845" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:59:43.844" endtime="20201115 22:59:43.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.737" endtime="20201115 22:59:43.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:43.849" endtime="20201115 22:59:44.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:43.847" endtime="20201115 22:59:44.033"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.045" endtime="20201115 22:59:44.064"></status>
</kw>
<msg timestamp="20201115 22:59:44.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['me to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.044" endtime="20201115 22:59:44.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.067" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['me to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.066" endtime="20201115 22:59:44.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.072" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:44.068" endtime="20201115 22:59:44.072"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.041" endtime="20201115 22:59:44.073"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.039" endtime="20201115 22:59:44.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.038" endtime="20201115 22:59:44.073"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:44.077" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:44.076" endtime="20201115 22:59:44.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.074" endtime="20201115 22:59:44.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.037" endtime="20201115 22:59:44.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.036" endtime="20201115 22:59:44.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.079" endtime="20201115 22:59:44.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.035" endtime="20201115 22:59:44.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.082" endtime="20201115 22:59:44.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.033" endtime="20201115 22:59:44.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:42.735" endtime="20201115 22:59:44.084"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:44.090" endtime="20201115 22:59:44.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.089" endtime="20201115 22:59:44.110"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.137" endtime="20201115 22:59:44.159"></status>
</kw>
<msg timestamp="20201115 22:59:44.160" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.134" endtime="20201115 22:59:44.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.162" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.161" endtime="20201115 22:59:44.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.165" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:44.163" endtime="20201115 22:59:44.165"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.132" endtime="20201115 22:59:44.166"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:44.129" endtime="20201115 22:59:44.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.116" endtime="20201115 22:59:44.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:44.171" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:44.170" endtime="20201115 22:59:44.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.168" endtime="20201115 22:59:44.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.115" endtime="20201115 22:59:44.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.114" endtime="20201115 22:59:44.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.172" endtime="20201115 22:59:44.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.113" endtime="20201115 22:59:44.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.111" endtime="20201115 22:59:44.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.087" endtime="20201115 22:59:44.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.182" endtime="20201115 22:59:44.198"></status>
</kw>
<msg timestamp="20201115 22:59:44.199" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.181" endtime="20201115 22:59:44.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.201" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:44.200" endtime="20201115 22:59:44.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:44.202" endtime="20201115 22:59:44.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.178" endtime="20201115 22:59:44.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.176" endtime="20201115 22:59:44.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.209" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:59:44.208" endtime="20201115 22:59:44.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.211" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:59:44.210" endtime="20201115 22:59:44.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.206" endtime="20201115 22:59:44.212"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:59:44.084" endtime="20201115 22:59:44.213" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:42.292" endtime="20201115 22:59:44.215"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.267" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:44.275" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:59:45.471" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:44.265" endtime="20201115 22:59:45.472"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.475" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:59:45.473" endtime="20201115 22:59:45.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.264" endtime="20201115 22:59:45.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:45.478" endtime="20201115 22:59:45.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.476" endtime="20201115 22:59:45.699"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.711" endtime="20201115 22:59:45.728"></status>
</kw>
<msg timestamp="20201115 22:59:45.728" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:45.710" endtime="20201115 22:59:45.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.731" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:45.730" endtime="20201115 22:59:45.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.734" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:45.732" endtime="20201115 22:59:45.734"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:45.707" endtime="20201115 22:59:45.735"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:45.705" endtime="20201115 22:59:45.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.704" endtime="20201115 22:59:45.736"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:45.740" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:45.739" endtime="20201115 22:59:45.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.737" endtime="20201115 22:59:45.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.703" endtime="20201115 22:59:45.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.702" endtime="20201115 22:59:45.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.741" endtime="20201115 22:59:45.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.701" endtime="20201115 22:59:45.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.744" endtime="20201115 22:59:45.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.700" endtime="20201115 22:59:45.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.263" endtime="20201115 22:59:45.746"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:45.752" endtime="20201115 22:59:45.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.751" endtime="20201115 22:59:45.774"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.786" endtime="20201115 22:59:45.805"></status>
</kw>
<msg timestamp="20201115 22:59:45.806" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:45.785" endtime="20201115 22:59:45.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.809" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:45.807" endtime="20201115 22:59:45.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.812" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:45.810" endtime="20201115 22:59:45.812"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:45.782" endtime="20201115 22:59:45.813"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:45.780" endtime="20201115 22:59:45.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.779" endtime="20201115 22:59:45.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:45.817" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:45.817" endtime="20201115 22:59:45.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.815" endtime="20201115 22:59:45.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.778" endtime="20201115 22:59:45.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.777" endtime="20201115 22:59:45.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.819" endtime="20201115 22:59:45.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.776" endtime="20201115 22:59:45.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.774" endtime="20201115 22:59:45.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.749" endtime="20201115 22:59:45.822"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.825" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.835" endtime="20201115 22:59:45.873"></status>
</kw>
<msg timestamp="20201115 22:59:45.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:45.832" endtime="20201115 22:59:45.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:45.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:45.874" endtime="20201115 22:59:45.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.877" endtime="20201115 22:59:45.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.829" endtime="20201115 22:59:45.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.827" endtime="20201115 22:59:45.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:45.886" endtime="20201115 22:59:46.178"></status>
</kw>
<msg timestamp="20201115 22:59:46.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075613903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075970389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:45.884" endtime="20201115 22:59:46.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075613903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075970389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.182" endtime="20201115 22:59:46.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.190" endtime="20201115 22:59:46.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.882" endtime="20201115 22:59:46.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.880" endtime="20201115 22:59:46.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:46.197" level="INFO">${RESULT} = [{'time': 0.075970389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003564860000000031, 'source_diff': 0.0003564860000000031}, {'time': 0.076335694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:46.193" endtime="20201115 22:59:46.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:46.210" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:46.198" endtime="20201115 22:59:46.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.215" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 22:59:46.214" endtime="20201115 22:59:46.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.217" level="INFO">VALUE: [0.0003564860000000031, 0.00033966600000000235, 0.0003417639999999944, 0.000341917000000011, 0.0003427079999999971, 0.00034334699999999385, 0.00033862500000000906, 0.00033998600000000045, 0.0003446250000000012, 0.0003383880000000089, 0.00034087500000000437, 0.00034029199999999205, 0.0003388049999999976, 0.0003435140000000031, 0.0003422920000000079, 0.0003385689999999969, 0.00033930500000001196, 0.0003443190000000096, 0.00034323599999999677, 0.00033873599999999227, 0.00034166700000000383, 0.00034077700000000044, 0.000344583999999995, 0.000340209000000008, 0.0003407779999999999, 0.0003438330000000017, 0.0003447079999999991, 0.00034200000000000896, 0.0003415279999999937, 0.000338209000000006, 0.0003400280000000061, 0.00034384699999999435, 0.0003389720000000068, 0.0003444439999999993, 0.0003389580000000003, 0.0003397499999999998, 0.00033866600000000135, 0.0003428050000000016, 0.00033912500000000956, 0.00034373600000001114, 0.00033969500000000097, 0.0003421529999999978, 0.00034286099999999986, 0.00034043100000000215, 0.00033837500000000187, 0.0003391799999999945, 0.000340708000000009, 0.0003422640000000088, 0.0003418890000000119, 0.0003415140000000011]</msg>
<status status="PASS" starttime="20201115 22:59:46.216" endtime="20201115 22:59:46.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.211" endtime="20201115 22:59:46.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.220" endtime="20201115 22:59:46.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:46.224" endtime="20201115 22:59:46.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.222" endtime="20201115 22:59:46.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.219" endtime="20201115 22:59:46.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.826" endtime="20201115 22:59:46.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.824" endtime="20201115 22:59:46.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.823" endtime="20201115 22:59:46.245"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.247" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.255" endtime="20201115 22:59:46.299"></status>
</kw>
<msg timestamp="20201115 22:59:46.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.254" endtime="20201115 22:59:46.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.300" endtime="20201115 22:59:46.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.303" endtime="20201115 22:59:46.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.251" endtime="20201115 22:59:46.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.249" endtime="20201115 22:59:46.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.312" endtime="20201115 22:59:46.599"></status>
</kw>
<msg timestamp="20201115 22:59:46.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027611722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027946097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.311" endtime="20201115 22:59:46.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027611722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027946097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:46.603" endtime="20201115 22:59:46.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.611" endtime="20201115 22:59:46.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.308" endtime="20201115 22:59:46.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.306" endtime="20201115 22:59:46.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:46.618" level="INFO">${RESULT} = [{'time': 0.027946097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033437500000000134, 'source_diff': 0.00033437500000000134}, {'time': 0.028311278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:46.615" endtime="20201115 22:59:46.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:46.631" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:46.619" endtime="20201115 22:59:46.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.636" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 22:59:46.635" endtime="20201115 22:59:46.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.638" level="INFO">VALUE: [0.00033437500000000134, 0.00033980599999999805, 0.0003390420000000012, 0.00034440300000000007, 0.0003395970000000005, 0.0003434300000000022, 0.0003446110000000016, 0.00034195799999999985, 0.0003441120000000006, 0.00034258399999999994, 0.00033834700000000273, 0.00034354200000000223, 0.00034093100000000265, 0.0003398610000000038, 0.0003389580000000003, 0.00033955500000000527, 0.0003433889999999995, 0.0003400139999999996, 0.0003424999999999956, 0.0003433889999999995, 0.00034104100000000026, 0.00033970800000000106, 0.0003443059999999956, 0.00033916600000000185, 0.0003445560000000028, 0.000338194, 0.0003399170000000021, 0.000344485999999998, 0.00034409700000000154, 0.0003382359999999987, 0.00034431900000000265, 0.0003427639999999954, 0.0003391520000000023, 0.0003410140000000006, 0.0003448609999999949, 0.000339597000000004, 0.0003440140000000036, 0.0003402360000000007, 0.0003383469999999958, 0.00033870800000000006, 0.00034043100000000215, 0.0003420270000000017, 0.0003442639999999969, 0.00034029100000000645, 0.0003406249999999972, 0.0003397919999999985, 0.0003441250000000007, 0.0003385979999999955, 0.0003439580000000053, 0.00033872199999999963]</msg>
<status status="PASS" starttime="20201115 22:59:46.637" endtime="20201115 22:59:46.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.632" endtime="20201115 22:59:46.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.642" endtime="20201115 22:59:46.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:46.645" endtime="20201115 22:59:46.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.644" endtime="20201115 22:59:46.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.640" endtime="20201115 22:59:46.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.248" endtime="20201115 22:59:46.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.246" endtime="20201115 22:59:46.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.245" endtime="20201115 22:59:46.669"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.674" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.691" endtime="20201115 22:59:46.732"></status>
</kw>
<msg timestamp="20201115 22:59:46.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.688" endtime="20201115 22:59:46.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:46.736" endtime="20201115 22:59:46.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.741" endtime="20201115 22:59:46.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.683" endtime="20201115 22:59:46.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.678" endtime="20201115 22:59:46.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:46.761" endtime="20201115 22:59:47.049"></status>
</kw>
<msg timestamp="20201115 22:59:47.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04323725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043593861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:46.758" endtime="20201115 22:59:47.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04323725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043593861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:47.053" endtime="20201115 22:59:47.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.061" endtime="20201115 22:59:47.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.752" endtime="20201115 22:59:47.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.748" endtime="20201115 22:59:47.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:47.068" level="INFO">${RESULT} = [{'time': 0.043593861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035661099999999973, 'source_diff': 0.00035661099999999973}, {'time': 0.043959181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:47.064" endtime="20201115 22:59:47.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:47.082" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:47.069" endtime="20201115 22:59:47.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.086" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 22:59:47.085" endtime="20201115 22:59:47.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.089" level="INFO">VALUE: [0.00035661099999999973, 0.00034037499999999693, 0.0003420560000000003, 0.0003416109999999986, 0.0003408469999999983, 0.00033970900000000054, 0.0003429859999999965, 0.0003397499999999998, 0.00034484699999999535, 0.00033848599999999895, 0.00034354200000000223, 0.0003420279999999942, 0.00033916700000000133, 0.0003417920000000005, 0.00034318099999999796, 0.00033961100000000355, 0.00034336199999999983, 0.00034026399999999984, 0.0003439579999999984, 0.00034022200000000113, 0.0003399580000000013, 0.0003403610000000043, 0.00034137499999999793, 0.0003399160000000026, 0.00033916700000000133, 0.00033854199999999723, 0.00034113899999999725, 0.0003387499999999988, 0.00034236099999999936, 0.0003408049999999996, 0.0003424170000000046, 0.0003389030000000015, 0.00034088900000000394, 0.0003443330000000022, 0.0003444579999999989, 0.00034279199999999455, 0.00034081899999999915, 0.0003382920000000039, 0.000339679999999995, 0.00034176400000000134, 0.0003407779999999999, 0.0003407219999999947, 0.00034170900000000254, 0.0003388469999999963, 0.000341387999999998, 0.0003433470000000008, 0.00034277700000000244, 0.0003441529999999998, 0.00033837500000000187, 0.00034187499999999843]</msg>
<status status="PASS" starttime="20201115 22:59:47.087" endtime="20201115 22:59:47.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.083" endtime="20201115 22:59:47.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.092" endtime="20201115 22:59:47.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:47.095" endtime="20201115 22:59:47.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.094" endtime="20201115 22:59:47.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.090" endtime="20201115 22:59:47.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.675" endtime="20201115 22:59:47.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.671" endtime="20201115 22:59:47.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.670" endtime="20201115 22:59:47.116"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.119" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.127" endtime="20201115 22:59:47.163"></status>
</kw>
<msg timestamp="20201115 22:59:47.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.125" endtime="20201115 22:59:47.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.165" endtime="20201115 22:59:47.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.167" endtime="20201115 22:59:47.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.123" endtime="20201115 22:59:47.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.121" endtime="20201115 22:59:47.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.176" endtime="20201115 22:59:47.462"></status>
</kw>
<msg timestamp="20201115 22:59:47.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025146153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025504278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.175" endtime="20201115 22:59:47.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025146153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025504278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.466" endtime="20201115 22:59:47.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.474" endtime="20201115 22:59:47.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.172" endtime="20201115 22:59:47.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.170" endtime="20201115 22:59:47.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:47.481" level="INFO">${RESULT} = [{'time': 0.025504278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035812499999999733, 'source_diff': 0.00035812499999999733}, {'time': 0.025869486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:47.478" endtime="20201115 22:59:47.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:47.494" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:47.482" endtime="20201115 22:59:47.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.499" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 22:59:47.498" endtime="20201115 22:59:47.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.501" level="INFO">VALUE: [0.00035812499999999733, 0.00034140300000000054, 0.00034323600000000024, 0.0003384719999999994, 0.00034281900000000115, 0.0003393749999999994, 0.0003386519999999983, 0.0003414439999999998, 0.000338403000000001, 0.0003432080000000011, 0.0003412360000000017, 0.0003439310000000022, 0.0003381390000000012, 0.0003406110000000011, 0.0003438189999999987, 0.0003403750000000004, 0.0003437360000000042, 0.0003396810000000014, 0.0003382500000000052, 0.00034054199999999923, 0.0003434579999999979, 0.00033866700000000083, 0.0003402500000000003, 0.00033883300000000366, 0.000339679999999995, 0.0003415559999999998, 0.0003441250000000007, 0.00034441699999999964, 0.0003420129999999952, 0.00034245899999999635, 0.00034270900000000354, 0.0003384579999999998, 0.0003405000000000005, 0.00034451399999999716, 0.00034358300000000147, 0.0003435000000000035, 0.00033920900000000004, 0.0003386940000000005, 0.0003414019999999976, 0.00034386100000000086, 0.0003402500000000003, 0.0003409579999999954, 0.0003395420000000052, 0.00034355599999999487, 0.00034173599999999527, 0.0003393190000000046, 0.0003437219999999977, 0.0003395420000000052, 0.00034102800000000016, 0.0003444449999999988]</msg>
<status status="PASS" starttime="20201115 22:59:47.500" endtime="20201115 22:59:47.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.495" endtime="20201115 22:59:47.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.504" endtime="20201115 22:59:47.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:47.508" endtime="20201115 22:59:47.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.506" endtime="20201115 22:59:47.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.503" endtime="20201115 22:59:47.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.119" endtime="20201115 22:59:47.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.118" endtime="20201115 22:59:47.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.117" endtime="20201115 22:59:47.529"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.532" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.540" endtime="20201115 22:59:47.576"></status>
</kw>
<msg timestamp="20201115 22:59:47.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.539" endtime="20201115 22:59:47.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.577" endtime="20201115 22:59:47.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.580" endtime="20201115 22:59:47.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.536" endtime="20201115 22:59:47.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.534" endtime="20201115 22:59:47.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.590" endtime="20201115 22:59:47.875"></status>
</kw>
<msg timestamp="20201115 22:59:47.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024402014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024741986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.588" endtime="20201115 22:59:47.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024402014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024741986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.880" endtime="20201115 22:59:47.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.888" endtime="20201115 22:59:47.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.586" endtime="20201115 22:59:47.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.584" endtime="20201115 22:59:47.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:47.894" level="INFO">${RESULT} = [{'time': 0.024741986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003399720000000009, 'source_diff': 0.0003399720000000009}, {'time': 0.025107236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:47.891" endtime="20201115 22:59:47.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:47.907" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:47.895" endtime="20201115 22:59:47.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.912" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 22:59:47.911" endtime="20201115 22:59:47.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.914" level="INFO">VALUE: [0.0003399720000000009, 0.0003430690000000014, 0.0003419300000000007, 0.00034017999999999896, 0.0003418750000000019, 0.00033866700000000083, 0.0003405689999999989, 0.0003435690000000019, 0.0003446110000000016, 0.0003395560000000013, 0.00034415200000000035, 0.0003397360000000002, 0.0003402360000000007, 0.00033984700000000076, 0.0003423469999999998, 0.0003424439999999973, 0.0003428750000000029, 0.00034084700000000176, 0.0003412369999999977, 0.0003392499999999993, 0.0003436110000000006, 0.00034004199999999873, 0.00034323599999999677, 0.00034244400000000424, 0.0003429720000000039, 0.0003443470000000018, 0.0003395139999999991, 0.00034155500000000033, 0.0003417920000000005, 0.0003394450000000007, 0.0003431529999999988, 0.00033915300000000176, 0.00034120800000000256, 0.00034308300000000097, 0.0003406109999999976, 0.0003391250000000026, 0.00033831899999999665, 0.0003427920000000015, 0.00034076299999999393, 0.0003442089999999981, 0.00034374999999999684, 0.00034351399999999616, 0.0003419720000000029, 0.0003391250000000026, 0.0003425270000000022, 0.00033902799999999816, 0.0003405689999999989, 0.0003441669999999994, 0.00034126400000000084, 0.00034086099999999786]</msg>
<status status="PASS" starttime="20201115 22:59:47.913" endtime="20201115 22:59:47.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.908" endtime="20201115 22:59:47.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.917" endtime="20201115 22:59:47.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:47.921" endtime="20201115 22:59:47.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.920" endtime="20201115 22:59:47.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.916" endtime="20201115 22:59:47.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.533" endtime="20201115 22:59:47.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.530" endtime="20201115 22:59:47.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.529" endtime="20201115 22:59:47.943"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.945" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.953" endtime="20201115 22:59:47.987"></status>
</kw>
<msg timestamp="20201115 22:59:47.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.952" endtime="20201115 22:59:47.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.989" endtime="20201115 22:59:47.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.991" endtime="20201115 22:59:47.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.949" endtime="20201115 22:59:47.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.947" endtime="20201115 22:59:47.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.001" endtime="20201115 22:59:48.286"></status>
</kw>
<msg timestamp="20201115 22:59:48.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022885375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023227958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:47.999" endtime="20201115 22:59:48.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022885375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023227958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.290" endtime="20201115 22:59:48.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.298" endtime="20201115 22:59:48.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.996" endtime="20201115 22:59:48.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.995" endtime="20201115 22:59:48.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:48.305" level="INFO">${RESULT} = [{'time': 0.023227958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034258300000000047, 'source_diff': 0.00034258300000000047}, {'time': 0.023593153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:48.302" endtime="20201115 22:59:48.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:48.318" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:48.306" endtime="20201115 22:59:48.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.322" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 22:59:48.321" endtime="20201115 22:59:48.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.325" level="INFO">VALUE: [0.00034258300000000047, 0.0003438339999999977, 0.0003427499999999993, 0.00034081899999999915, 0.0003439310000000022, 0.00034070800000000206, 0.00034366700000000236, 0.00034437500000000093, 0.0003438189999999987, 0.0003415559999999998, 0.0003404589999999978, 0.00034436200000000083, 0.0003416390000000012, 0.00034018099999999843, 0.0003400139999999996, 0.00034090200000000057, 0.0003418199999999996, 0.0003396659999999989, 0.00033894400000000074, 0.00034291699999999814, 0.00034281900000000115, 0.00033902799999999816, 0.00033866699999999736, 0.0003386390000000017, 0.0003382359999999987, 0.0003418469999999993, 0.00034387500000000043, 0.00034163899999999775, 0.0003398190000000051, 0.0003444720000000054, 0.00033983400000000413, 0.00034186099999999886, 0.0003396800000000019, 0.00033854099999999776, 0.00034288900000000594, 0.00034320800000000456, 0.00034222299999999567, 0.00033851400000000503, 0.0003411659999999969, 0.00034279099999999507, 0.00033880599999999705, 0.0003446380000000013, 0.00034254200000000123, 0.0003415979999999985, 0.0003444720000000054, 0.00034394400000000575, 0.00034126400000000084, 0.00034072200000000163, 0.0003441529999999998, 0.0003431810000000049]</msg>
<status status="PASS" starttime="20201115 22:59:48.324" endtime="20201115 22:59:48.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.319" endtime="20201115 22:59:48.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.329" endtime="20201115 22:59:48.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:48.332" endtime="20201115 22:59:48.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.330" endtime="20201115 22:59:48.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.327" endtime="20201115 22:59:48.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.946" endtime="20201115 22:59:48.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.944" endtime="20201115 22:59:48.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.943" endtime="20201115 22:59:48.353"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.356" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.365" endtime="20201115 22:59:48.404"></status>
</kw>
<msg timestamp="20201115 22:59:48.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.363" endtime="20201115 22:59:48.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.405" endtime="20201115 22:59:48.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.408" endtime="20201115 22:59:48.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.361" endtime="20201115 22:59:48.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.358" endtime="20201115 22:59:48.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.417" endtime="20201115 22:59:48.703"></status>
</kw>
<msg timestamp="20201115 22:59:48.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029213347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029553097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.416" endtime="20201115 22:59:48.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029213347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029553097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.707" endtime="20201115 22:59:48.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.715" endtime="20201115 22:59:48.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.413" endtime="20201115 22:59:48.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.411" endtime="20201115 22:59:48.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:48.721" level="INFO">${RESULT} = [{'time': 0.029553097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003397499999999998, 'source_diff': 0.0003397499999999998}, {'time': 0.029918431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:48.718" endtime="20201115 22:59:48.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:48.736" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:48.722" endtime="20201115 22:59:48.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.740" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 22:59:48.739" endtime="20201115 22:59:48.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.743" level="INFO">VALUE: [0.0003397499999999998, 0.00033829200000000045, 0.0003419310000000002, 0.00034272200000000017, 0.0003401529999999993, 0.00034465299999999685, 0.0003399030000000025, 0.00034118099999999596, 0.0003402500000000003, 0.0003409720000000019, 0.000342888999999999, 0.0003445560000000028, 0.0003433889999999995, 0.0003423889999999985, 0.00034152800000000066, 0.000341000000000001, 0.0003441250000000007, 0.00033988900000000294, 0.00033980599999999805, 0.0003432360000000037, 0.0003381529999999938, 0.0003388480000000027, 0.00034080599999999905, 0.00033920800000000056, 0.0003409579999999954, 0.00034041699999999564, 0.0003385830000000034, 0.00034170800000000306, 0.00034104199999999973, 0.00034376400000000334, 0.0003416109999999986, 0.0003413329999999992, 0.000339679999999995, 0.00034463900000000075, 0.0003447079999999991, 0.0003411249999999977, 0.0003423330000000002, 0.0003421390000000052, 0.0003421669999999974, 0.00034009800000000395, 0.00034158299999999947, 0.00034009699999999754, 0.00034152800000000066, 0.00034148600000000195, 0.0003409309999999957, 0.00034455599999999587, 0.00034143100000000315, 0.0003385559999999968, 0.0003413050000000001, 0.00033966700000000183]</msg>
<status status="PASS" starttime="20201115 22:59:48.741" endtime="20201115 22:59:48.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.737" endtime="20201115 22:59:48.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.746" endtime="20201115 22:59:48.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:48.750" endtime="20201115 22:59:48.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.748" endtime="20201115 22:59:48.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.745" endtime="20201115 22:59:48.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.357" endtime="20201115 22:59:48.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.355" endtime="20201115 22:59:48.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.354" endtime="20201115 22:59:48.771"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.773" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.782" endtime="20201115 22:59:48.817"></status>
</kw>
<msg timestamp="20201115 22:59:48.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.780" endtime="20201115 22:59:48.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.819" endtime="20201115 22:59:48.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.822" endtime="20201115 22:59:48.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.778" endtime="20201115 22:59:48.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.775" endtime="20201115 22:59:48.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.831" endtime="20201115 22:59:49.117"></status>
</kw>
<msg timestamp="20201115 22:59:49.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023397319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023735944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:48.829" endtime="20201115 22:59:49.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023397319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023735944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.121" endtime="20201115 22:59:49.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.129" endtime="20201115 22:59:49.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.826" endtime="20201115 22:59:49.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.825" endtime="20201115 22:59:49.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:49.135" level="INFO">${RESULT} = [{'time': 0.023735944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033862499999999865, 'source_diff': 0.00033862499999999865}, {'time': 0.024101236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:49.132" endtime="20201115 22:59:49.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:49.156" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:49.144" endtime="20201115 22:59:49.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.161" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 22:59:49.160" endtime="20201115 22:59:49.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.163" level="INFO">VALUE: [0.00033862499999999865, 0.00034231900000000065, 0.0003414589999999988, 0.0003382779999999974, 0.00034238900000000197, 0.0003421119999999986, 0.0003443469999999983, 0.00034076400000000034, 0.00033848599999999895, 0.0003401249999999967, 0.00034166700000000036, 0.0003400139999999996, 0.00034266700000000136, 0.000338291000000001, 0.00034345800000000135, 0.0003440140000000001, 0.00034387500000000043, 0.00034363899999999975, 0.00034322300000000014, 0.0003426659999999984, 0.00034187499999999843, 0.00033859699999999604, 0.0003444309999999992, 0.0003419590000000028, 0.0003388610000000028, 0.00034020800000000156, 0.0003396940000000015, 0.0003427360000000032, 0.00034437500000000093, 0.0003386249999999952, 0.0003387359999999992, 0.0003409160000000036, 0.00034298600000000345, 0.0003436250000000002, 0.00034372200000000463, 0.0003407919999999995, 0.00033890200000000203, 0.0003439859999999975, 0.0003396250000000031, 0.00033880599999999705, 0.00033926399999999884, 0.0003409720000000019, 0.0003400830000000049, 0.0003432500000000033, 0.00034133300000000616, 0.0003385559999999968, 0.0003421249999999987, 0.0003404449999999948, 0.00034430499999999614, 0.00033854199999999723]</msg>
<status status="PASS" starttime="20201115 22:59:49.162" endtime="20201115 22:59:49.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.157" endtime="20201115 22:59:49.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.166" endtime="20201115 22:59:49.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.170" endtime="20201115 22:59:49.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.168" endtime="20201115 22:59:49.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.165" endtime="20201115 22:59:49.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.774" endtime="20201115 22:59:49.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.772" endtime="20201115 22:59:49.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.771" endtime="20201115 22:59:49.191"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.194" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.202" endtime="20201115 22:59:49.238"></status>
</kw>
<msg timestamp="20201115 22:59:49.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.200" endtime="20201115 22:59:49.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.240" endtime="20201115 22:59:49.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.242" endtime="20201115 22:59:49.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.198" endtime="20201115 22:59:49.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.196" endtime="20201115 22:59:49.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.252" endtime="20201115 22:59:49.538"></status>
</kw>
<msg timestamp="20201115 22:59:49.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025222528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025563861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.250" endtime="20201115 22:59:49.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025222528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025563861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.542" endtime="20201115 22:59:49.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.551" endtime="20201115 22:59:49.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.247" endtime="20201115 22:59:49.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.246" endtime="20201115 22:59:49.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:49.558" level="INFO">${RESULT} = [{'time': 0.025563861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003413329999999992, 'source_diff': 0.0003413329999999992}, {'time': 0.025929278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:49.554" endtime="20201115 22:59:49.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:49.571" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:49.559" endtime="20201115 22:59:49.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.575" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 22:59:49.574" endtime="20201115 22:59:49.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.578" level="INFO">VALUE: [0.0003413329999999992, 0.00034490300000000057, 0.00033838900000000144, 0.0003431660000000024, 0.0003400139999999996, 0.0003413050000000001, 0.00034205500000000083, 0.00033934700000000026, 0.0003388190000000006, 0.0003390979999999995, 0.00034418099999999896, 0.0003436529999999993, 0.00034148600000000195, 0.00034390299999999957, 0.00033984700000000076, 0.0003429590000000003, 0.00033979200000000195, 0.000339888999999996, 0.00034479199999999655, 0.0003406249999999972, 0.0003401669999999954, 0.00034376400000000334, 0.00034402699999999675, 0.0003439309999999987, 0.0003424720000000034, 0.0003423469999999998, 0.00034308300000000097, 0.00034487500000000143, 0.0003396250000000031, 0.00034423599999999777, 0.0003389170000000011, 0.00033944400000000124, 0.00033820899999999904, 0.00033922300000000655, 0.0003385689999999969, 0.00034404200000000273, 0.0003441669999999994, 0.00034098600000000145, 0.00034422200000000513, 0.0003442079999999986, 0.00034347199999999745, 0.00034168099999999646, 0.0003390420000000047, 0.000342403000000005, 0.0003439859999999975, 0.0003417920000000005, 0.00034288900000000594, 0.00034052799999999966, 0.00034148600000000195, 0.000342986999999996]</msg>
<status status="PASS" starttime="20201115 22:59:49.576" endtime="20201115 22:59:49.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.572" endtime="20201115 22:59:49.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.581" endtime="20201115 22:59:49.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.584" endtime="20201115 22:59:49.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.583" endtime="20201115 22:59:49.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.579" endtime="20201115 22:59:49.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.194" endtime="20201115 22:59:49.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.192" endtime="20201115 22:59:49.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.192" endtime="20201115 22:59:49.606"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.608" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.616" endtime="20201115 22:59:49.650"></status>
</kw>
<msg timestamp="20201115 22:59:49.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.615" endtime="20201115 22:59:49.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.652" endtime="20201115 22:59:49.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.654" endtime="20201115 22:59:49.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.612" endtime="20201115 22:59:49.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.610" endtime="20201115 22:59:49.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.664" endtime="20201115 22:59:49.950"></status>
</kw>
<msg timestamp="20201115 22:59:49.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022798639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023157736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.662" endtime="20201115 22:59:49.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022798639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023157736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:49.954" endtime="20201115 22:59:49.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.962" endtime="20201115 22:59:49.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.659" endtime="20201115 22:59:49.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.657" endtime="20201115 22:59:49.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:49.968" level="INFO">${RESULT} = [{'time': 0.023157736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035909700000000266, 'source_diff': 0.00035909700000000266}, {'time': 0.023522847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:49.965" endtime="20201115 22:59:49.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:49.981" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:49.969" endtime="20201115 22:59:49.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.986" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 22:59:49.985" endtime="20201115 22:59:49.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.989" level="INFO">VALUE: [0.00035909700000000266, 0.0003436659999999994, 0.000342000000000002, 0.0003423200000000001, 0.00034187499999999843, 0.000343889, 0.00034006900000000187, 0.0003427080000000006, 0.0003412780000000004, 0.0003410140000000006, 0.0003379719999999989, 0.00034413900000000025, 0.0003409720000000019, 0.00034400000000000056, 0.00034120800000000256, 0.00034476299999999793, 0.0003426390000000022, 0.00034320900000000057, 0.0003420699999999999, 0.00034144499999999925, 0.00033990199999999957, 0.00033880500000000105, 0.0003442500000000008, 0.0003391659999999984, 0.0003407919999999995, 0.00033955600000000474, 0.0003437500000000038, 0.0003432219999999972, 0.00034341699999999864, 0.0003443470000000018, 0.0003419030000000045, 0.0003386390000000017, 0.00034305599999999437, 0.0003433340000000007, 0.000340097999999997, 0.0003395689999999979, 0.000342888999999999, 0.00034237499999999893, 0.00034265199999999885, 0.00033834700000000273, 0.0003393469999999968, 0.0003404019999999966, 0.0003446669999999999, 0.0003446110000000016, 0.00034026399999999984, 0.0003389719999999999, 0.0003391250000000026, 0.0003406249999999972, 0.000343403000000006, 0.00034115300000000376]</msg>
<status status="PASS" starttime="20201115 22:59:49.987" endtime="20201115 22:59:49.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.982" endtime="20201115 22:59:49.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.992" endtime="20201115 22:59:49.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.995" endtime="20201115 22:59:50.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.994" endtime="20201115 22:59:50.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.990" endtime="20201115 22:59:50.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.609" endtime="20201115 22:59:50.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.607" endtime="20201115 22:59:50.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.606" endtime="20201115 22:59:50.016"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.019" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.027" endtime="20201115 22:59:50.063"></status>
</kw>
<msg timestamp="20201115 22:59:50.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.026" endtime="20201115 22:59:50.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.064" endtime="20201115 22:59:50.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.068" endtime="20201115 22:59:50.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.023" endtime="20201115 22:59:50.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.021" endtime="20201115 22:59:50.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.077" endtime="20201115 22:59:50.363"></status>
</kw>
<msg timestamp="20201115 22:59:50.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02407075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024403764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:50.075" endtime="20201115 22:59:50.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02407075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024403764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:50.367" endtime="20201115 22:59:50.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.375" endtime="20201115 22:59:50.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.073" endtime="20201115 22:59:50.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.071" endtime="20201115 22:59:50.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:50.382" level="INFO">${RESULT} = [{'time': 0.024403764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000333014000000003, 'source_diff': 0.000333014000000003}, {'time': 0.024769056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:59:50.378" endtime="20201115 22:59:50.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:50.396" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:50.383" endtime="20201115 22:59:50.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.401" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 22:59:50.400" endtime="20201115 22:59:50.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.404" level="INFO">VALUE: [0.000333014000000003, 0.0003391120000000025, 0.00034068099999999893, 0.0003434439999999983, 0.00034387500000000043, 0.00034252800000000166, 0.00034263899999999875, 0.000339097, 0.0003390000000000025, 0.0003438470000000013, 0.00034286099999999986, 0.00034112500000000115, 0.0003419720000000029, 0.0003427080000000006, 0.000344582999999999, 0.00034387499999999696, 0.00034287499999999943, 0.0003399299999999987, 0.00033954100000000223, 0.00033948599999999995, 0.0003436250000000002, 0.00034286099999999986, 0.00034374999999999684, 0.0003426659999999984, 0.0003407779999999999, 0.00034248600000000295, 0.00033915300000000176, 0.00034412499999999374, 0.00033831899999999665, 0.00033916600000000185, 0.0003426119999999991, 0.0003423889999999985, 0.00033969500000000097, 0.00034476400000000434, 0.00034268099999999746, 0.0003424309999999972, 0.00034486100000000186, 0.0003396810000000014, 0.0003402779999999994, 0.00034406899999999546, 0.0003400700000000048, 0.0003394160000000021, 0.0003406940000000025, 0.00034452800000000366, 0.00034081899999999915, 0.000340485999999994, 0.00033861100000000255, 0.0003419580000000033, 0.0003425979999999995, 0.00034187500000000537]</msg>
<status status="PASS" starttime="20201115 22:59:50.402" endtime="20201115 22:59:50.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.397" endtime="20201115 22:59:50.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.407" endtime="20201115 22:59:50.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:50.411" endtime="20201115 22:59:50.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.409" endtime="20201115 22:59:50.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.405" endtime="20201115 22:59:50.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.020" endtime="20201115 22:59:50.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.018" endtime="20201115 22:59:50.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.017" endtime="20201115 22:59:50.432"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.434" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.443" endtime="20201115 22:59:50.480"></status>
</kw>
<msg timestamp="20201115 22:59:50.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.441" endtime="20201115 22:59:50.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.481" endtime="20201115 22:59:50.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.484" endtime="20201115 22:59:50.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.439" endtime="20201115 22:59:50.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.436" endtime="20201115 22:59:50.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.493" endtime="20201115 22:59:50.779"></status>
</kw>
<msg timestamp="20201115 22:59:50.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025705375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026060736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.491" endtime="20201115 22:59:50.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025705375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026060736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.783" endtime="20201115 22:59:50.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.791" endtime="20201115 22:59:50.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.489" endtime="20201115 22:59:50.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.487" endtime="20201115 22:59:50.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:50.797" level="INFO">${RESULT} = [{'time': 0.026060736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035536100000000195, 'source_diff': 0.00035536100000000195}, {'time': 0.026425931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:50.794" endtime="20201115 22:59:50.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:50.810" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:50.798" endtime="20201115 22:59:50.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.815" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 22:59:50.814" endtime="20201115 22:59:50.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.817" level="INFO">VALUE: [0.00035536100000000195, 0.0003403199999999981, 0.000340306000000002, 0.00033988899999999947, 0.0003401519999999998, 0.00034288900000000247, 0.00033822199999999913, 0.0003417500000000018, 0.00034306899999999793, 0.00033986100000000033, 0.00034155500000000033, 0.00034123599999999824, 0.0003431110000000001, 0.0003385969999999995, 0.000338790999999998, 0.00033948699999999943, 0.0003429170000000051, 0.00034202800000000116, 0.00034423699999999724, 0.00034422200000000513, 0.0003423330000000002, 0.00033865300000000126, 0.0003437219999999977, 0.00034058299999999847, 0.00034279099999999507, 0.00034298600000000345, 0.0003409579999999954, 0.00034040200000000354, 0.00034326400000000284, 0.00034172200000000263, 0.00034159699999999904, 0.0003423889999999985, 0.0003429449999999973, 0.000343777999999996, 0.0003429300000000052, 0.0003400830000000049, 0.00034026399999999984, 0.00034120900000000204, 0.0003425690000000009, 0.0003386940000000005, 0.0003416380000000052, 0.00034226400000000184, 0.0003415000000000015, 0.0003429720000000039, 0.0003382640000000048, 0.0003383610000000023, 0.00034252800000000166, 0.0003402360000000007, 0.00034459700000000204, 0.00034366600000000636]</msg>
<status status="PASS" starttime="20201115 22:59:50.816" endtime="20201115 22:59:50.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.811" endtime="20201115 22:59:50.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.821" endtime="20201115 22:59:50.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:50.824" endtime="20201115 22:59:50.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.822" endtime="20201115 22:59:50.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.819" endtime="20201115 22:59:50.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.435" endtime="20201115 22:59:50.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.433" endtime="20201115 22:59:50.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.432" endtime="20201115 22:59:50.846"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.848" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.856" endtime="20201115 22:59:50.891"></status>
</kw>
<msg timestamp="20201115 22:59:50.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.855" endtime="20201115 22:59:50.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.893" endtime="20201115 22:59:50.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.895" endtime="20201115 22:59:50.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.852" endtime="20201115 22:59:50.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.850" endtime="20201115 22:59:50.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.904" endtime="20201115 22:59:51.189"></status>
</kw>
<msg timestamp="20201115 22:59:51.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023866903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024200889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.903" endtime="20201115 22:59:51.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023866903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024200889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.193" endtime="20201115 22:59:51.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.201" endtime="20201115 22:59:51.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.900" endtime="20201115 22:59:51.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.899" endtime="20201115 22:59:51.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.208" level="INFO">${RESULT} = [{'time': 0.024200889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003339860000000014, 'source_diff': 0.0003339860000000014}, {'time': 0.024566292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:51.204" endtime="20201115 22:59:51.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.221" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:51.209" endtime="20201115 22:59:51.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.225" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.224" endtime="20201115 22:59:51.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.228" level="INFO">VALUE: [0.0003339860000000014, 0.0003441529999999998, 0.00034131899999999965, 0.000343986999999997, 0.0003413750000000014, 0.00033870899999999954, 0.0003425279999999982, 0.0003442919999999995, 0.0003440140000000001, 0.00034236099999999936, 0.00034118099999999943, 0.0003384449999999997, 0.0003413329999999992, 0.00034423600000000124, 0.0003404580000000018, 0.0003399300000000022, 0.00034168000000000046, 0.0003387780000000014, 0.0003403329999999982, 0.0003410269999999972, 0.00034291699999999814, 0.00034180600000000005, 0.0003426249999999992, 0.00034130599999999955, 0.00034176300000000187, 0.00034468099999999946, 0.00034120800000000256, 0.0003437920000000025, 0.0003438189999999952, 0.0003419030000000045, 0.0003437079999999981, 0.0003406520000000038, 0.00034191699999999714, 0.0003431669999999984, 0.00033865199999999485, 0.0003396940000000015, 0.00034180600000000005, 0.0003389170000000011, 0.00034115300000000376, 0.00034, 0.00033893100000000065, 0.00034247199999999645, 0.00033888900000000194, 0.00034386200000000033, 0.000340194000000002, 0.00033983300000000466, 0.0003439579999999984, 0.00034011100000000405, 0.0003388199999999966, 0.0003424309999999972]</msg>
<status status="PASS" starttime="20201115 22:59:51.226" endtime="20201115 22:59:51.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.222" endtime="20201115 22:59:51.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.231" endtime="20201115 22:59:51.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.235" endtime="20201115 22:59:51.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.233" endtime="20201115 22:59:51.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.230" endtime="20201115 22:59:51.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.849" endtime="20201115 22:59:51.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.847" endtime="20201115 22:59:51.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.846" endtime="20201115 22:59:51.256"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.258" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.267" endtime="20201115 22:59:51.303"></status>
</kw>
<msg timestamp="20201115 22:59:51.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.265" endtime="20201115 22:59:51.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.304" endtime="20201115 22:59:51.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.307" endtime="20201115 22:59:51.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.263" endtime="20201115 22:59:51.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.261" endtime="20201115 22:59:51.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.316" endtime="20201115 22:59:51.601"></status>
</kw>
<msg timestamp="20201115 22:59:51.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025371875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025724194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.315" endtime="20201115 22:59:51.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025371875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025724194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.605" endtime="20201115 22:59:51.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.613" endtime="20201115 22:59:51.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.312" endtime="20201115 22:59:51.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.310" endtime="20201115 22:59:51.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.620" level="INFO">${RESULT} = [{'time': 0.025724194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035231900000000024, 'source_diff': 0.00035231900000000024}, {'time': 0.026089458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:51.616" endtime="20201115 22:59:51.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.633" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:51.621" endtime="20201115 22:59:51.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.638" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.636" endtime="20201115 22:59:51.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.640" level="INFO">VALUE: [0.00035231900000000024, 0.000339790999999999, 0.0003421530000000013, 0.0003409719999999984, 0.0003430829999999975, 0.00033851400000000156, 0.000340403000000003, 0.00034008300000000144, 0.00034380600000000205, 0.0003429579999999974, 0.0003396389999999992, 0.00034302800000000216, 0.0003445280000000002, 0.0003385969999999995, 0.00034312500000000315, 0.0003381809999999999, 0.00033825000000000174, 0.0003402500000000003, 0.0003417920000000005, 0.0003383190000000036, 0.0003389580000000003, 0.0003422780000000014, 0.00034380499999999564, 0.00034305500000000183, 0.0003447219999999987, 0.0003422780000000014, 0.0003445409999999968, 0.0003405699999999984, 0.00034091599999999667, 0.00034037500000000387, 0.0003389449999999933, 0.00034137500000000487, 0.0003427219999999967, 0.0003408199999999986, 0.0003389450000000002, 0.000342387999999999, 0.000339888999999996, 0.0003409450000000022, 0.0003395559999999978, 0.0003421249999999987, 0.00034058399999999794, 0.0003392909999999985, 0.000338194, 0.0003422780000000014, 0.0003423200000000001, 0.000338291999999997, 0.000339387999999996, 0.0003431529999999988, 0.0003418050000000006, 0.0003391529999999948]</msg>
<status status="PASS" starttime="20201115 22:59:51.639" endtime="20201115 22:59:51.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.634" endtime="20201115 22:59:51.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.644" endtime="20201115 22:59:51.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.647" endtime="20201115 22:59:51.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.646" endtime="20201115 22:59:51.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.642" endtime="20201115 22:59:51.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.259" endtime="20201115 22:59:51.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.257" endtime="20201115 22:59:51.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.256" endtime="20201115 22:59:51.668"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.671" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.679" endtime="20201115 22:59:51.716"></status>
</kw>
<msg timestamp="20201115 22:59:51.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.678" endtime="20201115 22:59:51.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.717" endtime="20201115 22:59:51.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.720" endtime="20201115 22:59:51.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.675" endtime="20201115 22:59:51.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.673" endtime="20201115 22:59:51.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.729" endtime="20201115 22:59:52.015"></status>
</kw>
<msg timestamp="20201115 22:59:52.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02504575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025403181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:51.727" endtime="20201115 22:59:52.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02504575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025403181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:52.019" endtime="20201115 22:59:52.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.027" endtime="20201115 22:59:52.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.725" endtime="20201115 22:59:52.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.723" endtime="20201115 22:59:52.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:52.034" level="INFO">${RESULT} = [{'time': 0.025403181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003574310000000018, 'source_diff': 0.0003574310000000018}, {'time': 0.025768347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:52.030" endtime="20201115 22:59:52.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:52.048" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:52.035" endtime="20201115 22:59:52.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.053" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 22:59:52.052" endtime="20201115 22:59:52.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.055" level="INFO">VALUE: [0.0003574310000000018, 0.00034291600000000214, 0.0003406110000000011, 0.0003421109999999991, 0.0003438880000000005, 0.00034355500000000233, 0.00034254100000000176, 0.00034118099999999943, 0.0003382780000000009, 0.0003435279999999992, 0.0003383749999999984, 0.00034080599999999905, 0.0003408190000000026, 0.00034116699999999986, 0.00034076400000000034, 0.0003417500000000018, 0.00034136099999999836, 0.0003389719999999999, 0.0003401250000000036, 0.00034092999999999624, 0.00033870899999999954, 0.00034204200000000073, 0.0003441120000000006, 0.00033809800000000195, 0.00034408300000000197, 0.0003389589999999998, 0.0003414170000000036, 0.00034413900000000025, 0.00034402800000000316, 0.00033937500000000287, 0.0003425560000000008, 0.000340194000000002, 0.00033890200000000203, 0.0003383610000000023, 0.0003387499999999988, 0.00034459700000000204, 0.0003425000000000025, 0.0003405420000000062, 0.00034241599999999817, 0.0003409590000000018, 0.0003395139999999991, 0.00033884700000000323, 0.0003384449999999997, 0.0003433340000000007, 0.00034323599999999677, 0.0003407919999999995, 0.0003405689999999989, 0.0003445969999999951, 0.00034136099999999836, 0.00033970800000000106]</msg>
<status status="PASS" starttime="20201115 22:59:52.054" endtime="20201115 22:59:52.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.049" endtime="20201115 22:59:52.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.059" endtime="20201115 22:59:52.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:52.062" endtime="20201115 22:59:52.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.060" endtime="20201115 22:59:52.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.057" endtime="20201115 22:59:52.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.672" endtime="20201115 22:59:52.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.670" endtime="20201115 22:59:52.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.669" endtime="20201115 22:59:52.083"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.086" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.094" endtime="20201115 22:59:52.132"></status>
</kw>
<msg timestamp="20201115 22:59:52.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.092" endtime="20201115 22:59:52.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.134" endtime="20201115 22:59:52.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.137" endtime="20201115 22:59:52.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.090" endtime="20201115 22:59:52.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.088" endtime="20201115 22:59:52.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.146" endtime="20201115 22:59:52.432"></status>
</kw>
<msg timestamp="20201115 22:59:52.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027227542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027566778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.144" endtime="20201115 22:59:52.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027227542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027566778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.436" endtime="20201115 22:59:52.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.444" endtime="20201115 22:59:52.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.142" endtime="20201115 22:59:52.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.140" endtime="20201115 22:59:52.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:52.451" level="INFO">${RESULT} = [{'time': 0.027566778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003392359999999997, 'source_diff': 0.0003392359999999997}, {'time': 0.027931889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:52.448" endtime="20201115 22:59:52.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:52.464" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:52.452" endtime="20201115 22:59:52.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.469" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 22:59:52.468" endtime="20201115 22:59:52.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.472" level="INFO">VALUE: [0.0003392359999999997, 0.0003442640000000004, 0.0003412499999999978, 0.00033934700000000026, 0.00033958299999999747, 0.00034187499999999843, 0.00034038899999999997, 0.00034122200000000213, 0.00034052799999999966, 0.0003384169999999971, 0.000343000000000003, 0.0003410559999999993, 0.00034394400000000575, 0.00034308300000000097, 0.000341597000000006, 0.00034376400000000334, 0.000344485999999998, 0.0003429729999999964, 0.00034252800000000166, 0.00034247199999999645, 0.00034230600000000055, 0.00034170800000000306, 0.000343000000000003, 0.0003381800000000004, 0.0003446250000000012, 0.0003409999999999941, 0.0003386119999999951, 0.00034061100000000455, 0.000339597000000004, 0.0003418199999999996, 0.00034269399999999756, 0.0003441380000000008, 0.0003387359999999992, 0.0003428330000000007, 0.00034054199999999923, 0.0003411800000000034, 0.00034152800000000066, 0.0003420140000000016, 0.00034006900000000534, 0.00034016700000000233, 0.0003422639999999949, 0.0003424590000000033, 0.0003418480000000057, 0.00034347199999999745, 0.00033861100000000255, 0.0003402500000000003, 0.0003389160000000016, 0.00034208299999999997, 0.00034259700000000004, 0.00034015300000000276]</msg>
<status status="PASS" starttime="20201115 22:59:52.470" endtime="20201115 22:59:52.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.465" endtime="20201115 22:59:52.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.475" endtime="20201115 22:59:52.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:52.478" endtime="20201115 22:59:52.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.477" endtime="20201115 22:59:52.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.473" endtime="20201115 22:59:52.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.086" endtime="20201115 22:59:52.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.084" endtime="20201115 22:59:52.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.084" endtime="20201115 22:59:52.500"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.502" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.510" endtime="20201115 22:59:52.544"></status>
</kw>
<msg timestamp="20201115 22:59:52.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.509" endtime="20201115 22:59:52.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.546" endtime="20201115 22:59:52.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.548" endtime="20201115 22:59:52.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.506" endtime="20201115 22:59:52.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.504" endtime="20201115 22:59:52.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.558" endtime="20201115 22:59:52.844"></status>
</kw>
<msg timestamp="20201115 22:59:52.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022851083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023182056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.556" endtime="20201115 22:59:52.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022851083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023182056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.848" endtime="20201115 22:59:52.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.856" endtime="20201115 22:59:52.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.553" endtime="20201115 22:59:52.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.552" endtime="20201115 22:59:52.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:52.863" level="INFO">${RESULT} = [{'time': 0.023182056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003309729999999983, 'source_diff': 0.0003309729999999983}, {'time': 0.023547111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:52.860" endtime="20201115 22:59:52.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:52.876" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:52.864" endtime="20201115 22:59:52.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.881" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 22:59:52.880" endtime="20201115 22:59:52.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.883" level="INFO">VALUE: [0.0003309729999999983, 0.00034172199999999917, 0.0003384449999999997, 0.0003415000000000015, 0.00034170899999999907, 0.00033976399999999934, 0.0003436250000000002, 0.0003401800000000024, 0.00034240299999999807, 0.00034424999999999734, 0.00034208399999999944, 0.0003391659999999984, 0.0003404450000000017, 0.000342000000000002, 0.00034213899999999825, 0.0003420560000000003, 0.00033875000000000224, 0.0003418469999999993, 0.00033834799999999873, 0.000340985999999998, 0.00034040299999999954, 0.0003389580000000003, 0.00034377799999999945, 0.0003424310000000007, 0.0003387359999999992, 0.0003429580000000043, 0.00034462499999999424, 0.00034036099999999736, 0.0003404450000000017, 0.0003414449999999958, 0.00034080599999999905, 0.0003425560000000008, 0.000339888999999996, 0.0003427500000000028, 0.00034440300000000007, 0.00034037500000000387, 0.0003398480000000037, 0.000340403000000003, 0.0003409720000000019, 0.0003420560000000003, 0.00034354200000000223, 0.00034447199999999845, 0.00033955499999999833, 0.0003409160000000036, 0.00034304200000000173, 0.0003426249999999992, 0.00034376400000000334, 0.0003384589999999993, 0.0003401109999999971, 0.0003437230000000041]</msg>
<status status="PASS" starttime="20201115 22:59:52.882" endtime="20201115 22:59:52.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.877" endtime="20201115 22:59:52.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.887" endtime="20201115 22:59:52.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:52.890" endtime="20201115 22:59:52.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.889" endtime="20201115 22:59:52.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.885" endtime="20201115 22:59:52.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.503" endtime="20201115 22:59:52.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.501" endtime="20201115 22:59:52.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.500" endtime="20201115 22:59:52.911"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.914" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.922" endtime="20201115 22:59:52.956"></status>
</kw>
<msg timestamp="20201115 22:59:52.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.921" endtime="20201115 22:59:52.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.957" endtime="20201115 22:59:52.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.960" endtime="20201115 22:59:52.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.918" endtime="20201115 22:59:52.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.916" endtime="20201115 22:59:52.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.970" endtime="20201115 22:59:53.255"></status>
</kw>
<msg timestamp="20201115 22:59:53.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022896486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023248847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.968" endtime="20201115 22:59:53.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022896486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023248847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.259" endtime="20201115 22:59:53.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.267" endtime="20201115 22:59:53.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.965" endtime="20201115 22:59:53.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.964" endtime="20201115 22:59:53.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:53.274" level="INFO">${RESULT} = [{'time': 0.023248847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035236099999999895, 'source_diff': 0.00035236099999999895}, {'time': 0.023614208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:53.271" endtime="20201115 22:59:53.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.287" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:53.275" endtime="20201115 22:59:53.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.292" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.291" endtime="20201115 22:59:53.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.294" level="INFO">VALUE: [0.00035236099999999895, 0.00034245800000000035, 0.00034126400000000084, 0.00033938899999999897, 0.0003419170000000006, 0.0003389439999999973, 0.0003416660000000009, 0.0003417079999999996, 0.00034368000000000246, 0.0003420699999999999, 0.00034080599999999905, 0.00034340300000000254, 0.0003416390000000012, 0.0003415140000000011, 0.0003433330000000012, 0.00034102800000000016, 0.00034441600000000017, 0.0003418199999999996, 0.0003394299999999982, 0.0003397919999999985, 0.00034033400000000116, 0.0003416110000000021, 0.0003393749999999994, 0.00034173599999999527, 0.0003432910000000025, 0.00034258300000000047, 0.0003434019999999996, 0.000340194000000002, 0.00034241599999999817, 0.0003437500000000038, 0.0003447500000000048, 0.00034008299999999797, 0.00034152800000000066, 0.00033952799999999866, 0.00034009699999999754, 0.00034176400000000134, 0.00034452800000000366, 0.00034226400000000184, 0.0003382499999999983, 0.0003431669999999984, 0.00034463900000000075, 0.00034493000000000024, 0.0003421250000000056, 0.0003401799999999955, 0.0003412089999999951, 0.00034474999999999784, 0.000344485999999998, 0.0003395269999999992, 0.00034387500000000043, 0.0003398469999999973]</msg>
<status status="PASS" starttime="20201115 22:59:53.293" endtime="20201115 22:59:53.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.288" endtime="20201115 22:59:53.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.298" endtime="20201115 22:59:53.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.301" endtime="20201115 22:59:53.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.299" endtime="20201115 22:59:53.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.296" endtime="20201115 22:59:53.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.914" endtime="20201115 22:59:53.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.913" endtime="20201115 22:59:53.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.912" endtime="20201115 22:59:53.322"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.325" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.333" endtime="20201115 22:59:53.372"></status>
</kw>
<msg timestamp="20201115 22:59:53.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.332" endtime="20201115 22:59:53.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.374" endtime="20201115 22:59:53.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.376" endtime="20201115 22:59:53.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.329" endtime="20201115 22:59:53.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.327" endtime="20201115 22:59:53.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.386" endtime="20201115 22:59:53.671"></status>
</kw>
<msg timestamp="20201115 22:59:53.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024159403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024515681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.384" endtime="20201115 22:59:53.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024159403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024515681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.676" endtime="20201115 22:59:53.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.684" endtime="20201115 22:59:53.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.381" endtime="20201115 22:59:53.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.380" endtime="20201115 22:59:53.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:53.690" level="INFO">${RESULT} = [{'time': 0.024515681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035627800000000154, 'source_diff': 0.00035627800000000154}, {'time': 0.024880903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:53.687" endtime="20201115 22:59:53.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.705" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:53.691" endtime="20201115 22:59:53.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.709" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.708" endtime="20201115 22:59:53.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.712" level="INFO">VALUE: [0.00035627800000000154, 0.00033834699999999926, 0.000339985999999997, 0.000338194, 0.00034120900000000204, 0.0003416529999999973, 0.00033826399999999784, 0.0003411520000000008, 0.00034318100000000143, 0.00034463900000000075, 0.00034168099999999993, 0.0003414300000000002, 0.0003435699999999979, 0.0003403880000000005, 0.00033934799999999973, 0.0003441669999999994, 0.0003404309999999987, 0.00034222199999999967, 0.0003389030000000015, 0.00033829200000000045, 0.00033815300000000076, 0.00033834700000000273, 0.00033923600000000664, 0.00034176400000000134, 0.0003418050000000006, 0.0003390970000000035, 0.0003396250000000031, 0.00034026399999999984, 0.0003392229999999996, 0.00034143100000000315, 0.0003424720000000034, 0.0003429309999999977, 0.00034037499999999693, 0.00034159699999999904, 0.00034137499999999793, 0.00034491600000000067, 0.0003446530000000003, 0.0003442910000000035, 0.0003435140000000031, 0.00033869499999999997, 0.0003424300000000047, 0.00034459700000000204, 0.00033915300000000176, 0.00034105600000000624, 0.0003446380000000013, 0.0003448189999999962, 0.00033883300000000366, 0.0003393329999999972, 0.0003416669999999969, 0.00034240299999999807]</msg>
<status status="PASS" starttime="20201115 22:59:53.710" endtime="20201115 22:59:53.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.705" endtime="20201115 22:59:53.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.715" endtime="20201115 22:59:53.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.718" endtime="20201115 22:59:53.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.717" endtime="20201115 22:59:53.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.713" endtime="20201115 22:59:53.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.325" endtime="20201115 22:59:53.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.323" endtime="20201115 22:59:53.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.322" endtime="20201115 22:59:53.740"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.742" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.751" endtime="20201115 22:59:53.785"></status>
</kw>
<msg timestamp="20201115 22:59:53.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.749" endtime="20201115 22:59:53.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.787" endtime="20201115 22:59:53.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.790" endtime="20201115 22:59:53.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.746" endtime="20201115 22:59:53.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.744" endtime="20201115 22:59:53.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.799" endtime="20201115 22:59:54.085"></status>
</kw>
<msg timestamp="20201115 22:59:54.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023364486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023696958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.797" endtime="20201115 22:59:54.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023364486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023696958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.089" endtime="20201115 22:59:54.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.097" endtime="20201115 22:59:54.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.795" endtime="20201115 22:59:54.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.793" endtime="20201115 22:59:54.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.103" level="INFO">${RESULT} = [{'time': 0.023696958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003324720000000003, 'source_diff': 0.0003324720000000003}, {'time': 0.02406225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:59:54.100" endtime="20201115 22:59:54.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:54.117" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:54.104" endtime="20201115 22:59:54.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.121" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 22:59:54.120" endtime="20201115 22:59:54.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.124" level="INFO">VALUE: [0.0003324720000000003, 0.00034068099999999893, 0.0003391109999999996, 0.00034030500000000255, 0.0003417079999999996, 0.0003432639999999994, 0.0003388480000000027, 0.0003385839999999994, 0.0003435279999999992, 0.00034458400000000194, 0.0003437500000000003, 0.00033866700000000083, 0.00034286099999999986, 0.00033952800000000213, 0.0003420560000000003, 0.00034337499999999993, 0.0003437500000000003, 0.00034477800000000045, 0.00034229099999999804, 0.00034176400000000134, 0.00034280600000000105, 0.0003384589999999993, 0.0003447219999999987, 0.0003407500000000008, 0.0003446669999999999, 0.0003390559999999973, 0.0003443470000000018, 0.0003400830000000049, 0.0003434300000000057, 0.0003445549999999964, 0.00033887499999999543, 0.00034448600000000495, 0.00034173699999999474, 0.0003406109999999976, 0.0003443890000000005, 0.0003443470000000018, 0.00033938900000000244, 0.00034448600000000495, 0.00034091599999999667, 0.00033893100000000065, 0.00034305500000000183, 0.0003413339999999987, 0.00034181900000000015, 0.00034266700000000483, 0.00034247199999999645, 0.0003418469999999993, 0.0003423330000000002, 0.0003397499999999998, 0.0003423330000000002, 0.00034309700000000054]</msg>
<status status="PASS" starttime="20201115 22:59:54.122" endtime="20201115 22:59:54.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.118" endtime="20201115 22:59:54.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.127" endtime="20201115 22:59:54.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.131" endtime="20201115 22:59:54.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.129" endtime="20201115 22:59:54.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.126" endtime="20201115 22:59:54.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.743" endtime="20201115 22:59:54.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.741" endtime="20201115 22:59:54.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.740" endtime="20201115 22:59:54.152"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.154" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.163" endtime="20201115 22:59:54.197"></status>
</kw>
<msg timestamp="20201115 22:59:54.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.161" endtime="20201115 22:59:54.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.199" endtime="20201115 22:59:54.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.201" endtime="20201115 22:59:54.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.159" endtime="20201115 22:59:54.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.156" endtime="20201115 22:59:54.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.210" endtime="20201115 22:59:54.496"></status>
</kw>
<msg timestamp="20201115 22:59:54.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023194556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023532111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.209" endtime="20201115 22:59:54.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023194556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023532111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.501" endtime="20201115 22:59:54.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.509" endtime="20201115 22:59:54.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.206" endtime="20201115 22:59:54.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.204" endtime="20201115 22:59:54.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.515" level="INFO">${RESULT} = [{'time': 0.023532111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003375549999999998, 'source_diff': 0.0003375549999999998}, {'time': 0.023897389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:54.512" endtime="20201115 22:59:54.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:54.528" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:54.516" endtime="20201115 22:59:54.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.533" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 22:59:54.532" endtime="20201115 22:59:54.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.541" level="INFO">VALUE: [0.0003375549999999998, 0.0003443890000000005, 0.0003439309999999987, 0.00034222199999999967, 0.00034387499999999696, 0.0003413750000000014, 0.00034431999999999865, 0.00033884699999999976, 0.0003403049999999991, 0.0003385550000000008, 0.0003408750000000009, 0.0003424449999999968, 0.0003394720000000004, 0.00034294500000000075, 0.00034295800000000085, 0.0003446950000000025, 0.00034095799999999885, 0.0003412910000000005, 0.0003434439999999983, 0.00034016600000000285, 0.0003433049999999986, 0.000341292, 0.00034156900000000337, 0.00034140299999999707, 0.0003397360000000002, 0.00034454200000000323, 0.00033866600000000135, 0.0003416940000000035, 0.0003398339999999972, 0.00033870800000000006, 0.0003419309999999967, 0.00034263899999999875, 0.0003423200000000001, 0.00034429099999999657, 0.00033955499999999833, 0.0003447639999999974, 0.0003400689999999984, 0.00034223599999999577, 0.00034054099999999976, 0.0003444449999999988, 0.0003420140000000016, 0.0003382499999999983, 0.00033963899999999575, 0.00034, 0.0003397499999999998, 0.0003386250000000021, 0.0003406940000000025, 0.0003417360000000022, 0.000342791000000002, 0.00034218099999999696]</msg>
<status status="PASS" starttime="20201115 22:59:54.534" endtime="20201115 22:59:54.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.529" endtime="20201115 22:59:54.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.545" endtime="20201115 22:59:54.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.548" endtime="20201115 22:59:54.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.547" endtime="20201115 22:59:54.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.543" endtime="20201115 22:59:54.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.155" endtime="20201115 22:59:54.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.153" endtime="20201115 22:59:54.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.152" endtime="20201115 22:59:54.569"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.572" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.580" endtime="20201115 22:59:54.614"></status>
</kw>
<msg timestamp="20201115 22:59:54.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.579" endtime="20201115 22:59:54.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.616" endtime="20201115 22:59:54.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.618" endtime="20201115 22:59:54.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.576" endtime="20201115 22:59:54.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.574" endtime="20201115 22:59:54.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.628" endtime="20201115 22:59:54.913"></status>
</kw>
<msg timestamp="20201115 22:59:54.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023151083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:59:54.626" endtime="20201115 22:59:54.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023151083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:59:54.917" endtime="20201115 22:59:54.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.925" endtime="20201115 22:59:54.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.623" endtime="20201115 22:59:54.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.622" endtime="20201115 22:59:54.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.931" level="INFO">${RESULT} = [{'time': 0.023151083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034058299999999847, 'source_diff': 0.00034058299999999847}, {'time': 0.02351625, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:59:54.928" endtime="20201115 22:59:54.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:54.945" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:54.933" endtime="20201115 22:59:54.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.950" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 22:59:54.949" endtime="20201115 22:59:54.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.952" level="INFO">VALUE: [0.00034058299999999847, 0.000339693999999998, 0.0003441250000000007, 0.00034456899999999943, 0.00033983400000000066, 0.0003403200000000016, 0.00033972200000000063, 0.00034002799999999916, 0.00034458400000000194, 0.00034455599999999934, 0.0003384170000000006, 0.00034181900000000015, 0.0003407500000000008, 0.0003407079999999986, 0.00034236099999999936, 0.0003401659999999994, 0.00034058399999999794, 0.0003424440000000008, 0.00034140300000000054, 0.00033998600000000045, 0.0003429720000000004, 0.0003421109999999991, 0.000343986000000001, 0.0003435839999999975, 0.0003387499999999988, 0.0003399030000000025, 0.0003415549999999934, 0.0003422079999999966, 0.0003446669999999999, 0.0003404160000000031, 0.0003418469999999993, 0.0003444439999999993, 0.0003405140000000001, 0.000342292000000001, 0.00034144400000000324, 0.0003398610000000038, 0.0003422910000000015, 0.00034230600000000055, 0.00034381900000000215, 0.00034187499999999843, 0.0003425140000000021, 0.00034016700000000233, 0.0003399720000000009, 0.00034115300000000376, 0.00034180600000000005, 0.00033955499999999833, 0.00034476400000000434, 0.0003402920000000059, 0.0003441250000000007, 0.0003429859999999965]</msg>
<status status="PASS" starttime="20201115 22:59:54.951" endtime="20201115 22:59:54.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.946" endtime="20201115 22:59:54.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.955" endtime="20201115 22:59:54.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.959" endtime="20201115 22:59:54.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.957" endtime="20201115 22:59:54.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.953" endtime="20201115 22:59:54.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.572" endtime="20201115 22:59:54.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.571" endtime="20201115 22:59:54.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.570" endtime="20201115 22:59:54.980"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.982" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.991" endtime="20201115 22:59:55.027"></status>
</kw>
<msg timestamp="20201115 22:59:55.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.989" endtime="20201115 22:59:55.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.028" endtime="20201115 22:59:55.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.031" endtime="20201115 22:59:55.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.986" endtime="20201115 22:59:55.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.984" endtime="20201115 22:59:55.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.040" endtime="20201115 22:59:55.325"></status>
</kw>
<msg timestamp="20201115 22:59:55.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0244065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024753792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:59:55.038" endtime="20201115 22:59:55.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0244065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024753792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:59:55.330" endtime="20201115 22:59:55.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.338" endtime="20201115 22:59:55.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.036" endtime="20201115 22:59:55.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.034" endtime="20201115 22:59:55.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:55.345" level="INFO">${RESULT} = [{'time': 0.024753792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034729199999999905, 'source_diff': 0.00034729199999999905}, {'time': 0.025119236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:55.341" endtime="20201115 22:59:55.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.359" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:55.346" endtime="20201115 22:59:55.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.363" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.362" endtime="20201115 22:59:55.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.366" level="INFO">VALUE: [0.00034729199999999905, 0.0003385550000000008, 0.0003386659999999979, 0.00034209699999999954, 0.0003443609999999979, 0.0003438330000000017, 0.00034008299999999797, 0.00033904100000000173, 0.00034, 0.00034441699999999964, 0.00034118099999999943, 0.0003436110000000006, 0.00034249999999999906, 0.0003405140000000001, 0.00034148600000000195, 0.0003437639999999999, 0.0003393749999999994, 0.00034263899999999875, 0.00034162500000000165, 0.00034163899999999775, 0.0003447780000000039, 0.0003437639999999964, 0.0003419579999999964, 0.0003443200000000021, 0.0003384170000000006, 0.0003435140000000031, 0.000344388000000001, 0.00033943100000000115, 0.0003443199999999952, 0.00033920800000000056, 0.00033976399999999934, 0.0003404580000000018, 0.0003411529999999968, 0.0003417639999999944, 0.0003381109999999951, 0.0003422500000000023, 0.000342679999999998, 0.00034452699999999725, 0.00033884700000000323, 0.00033856900000000384, 0.00034122200000000213, 0.00034387500000000043, 0.00033837500000000187, 0.00034144400000000324, 0.000339597000000004, 0.0003433329999999943, 0.0003427639999999954, 0.0003396940000000015, 0.00034366700000000583, 0.00034324999999999634]</msg>
<status status="PASS" starttime="20201115 22:59:55.364" endtime="20201115 22:59:55.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.360" endtime="20201115 22:59:55.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.369" endtime="20201115 22:59:55.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.372" endtime="20201115 22:59:55.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.371" endtime="20201115 22:59:55.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.367" endtime="20201115 22:59:55.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.983" endtime="20201115 22:59:55.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.981" endtime="20201115 22:59:55.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.980" endtime="20201115 22:59:55.394"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.396" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.404" endtime="20201115 22:59:55.438"></status>
</kw>
<msg timestamp="20201115 22:59:55.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.403" endtime="20201115 22:59:55.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.440" endtime="20201115 22:59:55.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.442" endtime="20201115 22:59:55.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.400" endtime="20201115 22:59:55.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.398" endtime="20201115 22:59:55.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.452" endtime="20201115 22:59:55.738"></status>
</kw>
<msg timestamp="20201115 22:59:55.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022859597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.450" endtime="20201115 22:59:55.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022859597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.743" endtime="20201115 22:59:55.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.751" endtime="20201115 22:59:55.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.447" endtime="20201115 22:59:55.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.446" endtime="20201115 22:59:55.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:55.757" level="INFO">${RESULT} = [{'time': 0.022859597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003334579999999983, 'source_diff': 0.0003334579999999983}, {'time': 0.023224806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:55.754" endtime="20201115 22:59:55.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.770" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:55.758" endtime="20201115 22:59:55.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.775" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.774" endtime="20201115 22:59:55.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.777" level="INFO">VALUE: [0.0003334579999999983, 0.0003446120000000011, 0.00034469399999999956, 0.0003405559999999988, 0.00034194499999999975, 0.0003403469999999978, 0.0003439170000000026, 0.00033934799999999973, 0.0003416110000000021, 0.00033944400000000124, 0.0003398749999999999, 0.0003417079999999996, 0.0003405970000000015, 0.0003441529999999998, 0.0003385139999999981, 0.00034158299999999947, 0.0003420139999999981, 0.000342195, 0.0003397780000000024, 0.00034322200000000067, 0.0003397499999999998, 0.0003387359999999992, 0.0003405000000000005, 0.00034372200000000117, 0.00033966600000000235, 0.0003390129999999991, 0.00034376400000000334, 0.00034218099999999696, 0.0003407370000000007, 0.0003438340000000012, 0.00034186099999999886, 0.00034270800000000406, 0.0003431249999999997, 0.0003420690000000004, 0.0003389450000000002, 0.0003384449999999997, 0.00033837500000000187, 0.00034059699999999804, 0.0003430700000000009, 0.0003442079999999986, 0.00034102800000000016, 0.0003386249999999952, 0.00034113899999999725, 0.00034087499999999743, 0.0003419309999999967, 0.00033976399999999934, 0.00034387500000000043, 0.0003416669999999969, 0.0003430279999999952, 0.0003391520000000023]</msg>
<status status="PASS" starttime="20201115 22:59:55.776" endtime="20201115 22:59:55.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.771" endtime="20201115 22:59:55.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.781" endtime="20201115 22:59:55.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.784" endtime="20201115 22:59:55.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.783" endtime="20201115 22:59:55.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.779" endtime="20201115 22:59:55.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.397" endtime="20201115 22:59:55.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.395" endtime="20201115 22:59:55.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.394" endtime="20201115 22:59:55.805"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.808" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.816" endtime="20201115 22:59:55.851"></status>
</kw>
<msg timestamp="20201115 22:59:55.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.814" endtime="20201115 22:59:55.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.853" endtime="20201115 22:59:55.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.856" endtime="20201115 22:59:55.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.812" endtime="20201115 22:59:55.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.810" endtime="20201115 22:59:55.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.865" endtime="20201115 22:59:56.151"></status>
</kw>
<msg timestamp="20201115 22:59:56.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022975792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023331139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.863" endtime="20201115 22:59:56.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022975792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023331139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.155" endtime="20201115 22:59:56.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.163" endtime="20201115 22:59:56.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.861" endtime="20201115 22:59:56.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.859" endtime="20201115 22:59:56.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.169" level="INFO">${RESULT} = [{'time': 0.023331139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003553470000000024, 'source_diff': 0.0003553470000000024}, {'time': 0.023696486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:56.166" endtime="20201115 22:59:56.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:56.183" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:56.170" endtime="20201115 22:59:56.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.187" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 22:59:56.186" endtime="20201115 22:59:56.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.190" level="INFO">VALUE: [0.0003553470000000024, 0.00034259700000000004, 0.0003385969999999995, 0.00033967999999999846, 0.00033844400000000024, 0.0003387359999999992, 0.00034270900000000007, 0.0003447639999999974, 0.0003393330000000007, 0.00033934799999999973, 0.0003404719999999979, 0.0003383190000000001, 0.00034062500000000065, 0.0003418329999999997, 0.0003435139999999996, 0.0003412780000000004, 0.000341292, 0.0003434730000000004, 0.0003420140000000016, 0.0003396519999999993, 0.00034031899999999865, 0.0003424859999999995, 0.0003396800000000019, 0.000342194000000004, 0.00034037499999999693, 0.0003404720000000014, 0.0003404300000000027, 0.00034304200000000173, 0.00033941599999999517, 0.0003389300000000012, 0.00034015199999999635, 0.0003442639999999969, 0.000344777999999997, 0.0003384300000000007, 0.0003407919999999995, 0.00034005499999999883, 0.00033936099999999636, 0.0003439729999999974, 0.0003403329999999982, 0.00034201399999999466, 0.00034088900000000394, 0.0003420140000000016, 0.00034462499999999424, 0.00034420900000000504, 0.00034381900000000215, 0.00034119500000000247, 0.0003421799999999975, 0.0003422779999999945, 0.0003392779999999984, 0.0003425000000000025]</msg>
<status status="PASS" starttime="20201115 22:59:56.188" endtime="20201115 22:59:56.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.184" endtime="20201115 22:59:56.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.193" endtime="20201115 22:59:56.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.196" endtime="20201115 22:59:56.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.195" endtime="20201115 22:59:56.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.191" endtime="20201115 22:59:56.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.808" endtime="20201115 22:59:56.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.806" endtime="20201115 22:59:56.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.806" endtime="20201115 22:59:56.218"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.220" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.229" endtime="20201115 22:59:56.266"></status>
</kw>
<msg timestamp="20201115 22:59:56.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.227" endtime="20201115 22:59:56.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.268" endtime="20201115 22:59:56.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.271" endtime="20201115 22:59:56.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.224" endtime="20201115 22:59:56.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.222" endtime="20201115 22:59:56.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.280" endtime="20201115 22:59:56.566"></status>
</kw>
<msg timestamp="20201115 22:59:56.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027664847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028024222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.278" endtime="20201115 22:59:56.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027664847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028024222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.570" endtime="20201115 22:59:56.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.578" endtime="20201115 22:59:56.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.276" endtime="20201115 22:59:56.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.274" endtime="20201115 22:59:56.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.585" level="INFO">${RESULT} = [{'time': 0.028024222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035937500000000205, 'source_diff': 0.00035937500000000205}, {'time': 0.028389556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:56.582" endtime="20201115 22:59:56.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:56.598" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:56.586" endtime="20201115 22:59:56.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.603" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 22:59:56.602" endtime="20201115 22:59:56.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.605" level="INFO">VALUE: [0.00035937500000000205, 0.0003394999999999995, 0.00033920800000000056, 0.0003413469999999988, 0.00034350000000000006, 0.0003415000000000015, 0.0003403329999999982, 0.0003386109999999991, 0.0003412780000000004, 0.000339709000000004, 0.0003410699999999989, 0.0003402360000000007, 0.00033916700000000133, 0.00034211100000000605, 0.00034486100000000186, 0.0003441110000000011, 0.0003421390000000052, 0.00033911100000000305, 0.0003412780000000004, 0.0003384719999999994, 0.00033940299999999507, 0.0003431529999999988, 0.00034441699999999964, 0.00034281900000000115, 0.00033893100000000065, 0.00034254200000000123, 0.0003415140000000011, 0.0003448749999999945, 0.000341292, 0.00034358300000000147, 0.0003426529999999983, 0.00034104199999999973, 0.00033920900000000004, 0.0003431659999999989, 0.00033856900000000384, 0.00034072200000000163, 0.00034318099999999796, 0.0003431799999999985, 0.000338403000000001, 0.0003393329999999972, 0.00034134799999999826, 0.0003383889999999945, 0.00034358299999999453, 0.00034238900000000544, 0.00034370800000000507, 0.0003400700000000048, 0.0003394170000000016, 0.0003429579999999974, 0.00034323599999999677, 0.00033998600000000045]</msg>
<status status="PASS" starttime="20201115 22:59:56.604" endtime="20201115 22:59:56.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.599" endtime="20201115 22:59:56.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.608" endtime="20201115 22:59:56.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.612" endtime="20201115 22:59:56.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.610" endtime="20201115 22:59:56.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.607" endtime="20201115 22:59:56.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.221" endtime="20201115 22:59:56.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.219" endtime="20201115 22:59:56.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.218" endtime="20201115 22:59:56.633"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.636" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.644" endtime="20201115 22:59:56.679"></status>
</kw>
<msg timestamp="20201115 22:59:56.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.642" endtime="20201115 22:59:56.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.681" endtime="20201115 22:59:56.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.683" endtime="20201115 22:59:56.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.640" endtime="20201115 22:59:56.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.638" endtime="20201115 22:59:56.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.692" endtime="20201115 22:59:56.979"></status>
</kw>
<msg timestamp="20201115 22:59:56.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024270694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024625458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.691" endtime="20201115 22:59:56.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024270694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024625458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.983" endtime="20201115 22:59:56.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.991" endtime="20201115 22:59:56.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.688" endtime="20201115 22:59:56.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.686" endtime="20201115 22:59:56.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.997" level="INFO">${RESULT} = [{'time': 0.024625458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035476400000000047, 'source_diff': 0.00035476400000000047}, {'time': 0.024990778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:56.994" endtime="20201115 22:59:56.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.012" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:56.998" endtime="20201115 22:59:57.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.016" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.015" endtime="20201115 22:59:57.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.019" level="INFO">VALUE: [0.00035476400000000047, 0.00034459700000000204, 0.0003383199999999996, 0.00034072199999999817, 0.0003441389999999968, 0.00034255599999999733, 0.000339291999999998, 0.0003434730000000004, 0.0003441529999999998, 0.0003387229999999991, 0.00033848599999999895, 0.0003410840000000019, 0.0003411110000000016, 0.00034440300000000007, 0.0003447219999999987, 0.0003397770000000029, 0.00034154100000000076, 0.0003419170000000006, 0.0003410559999999993, 0.00034422299999999767, 0.00034426299999999743, 0.0003420140000000016, 0.0003394999999999995, 0.0003432500000000033, 0.00033872199999999963, 0.0003436110000000006, 0.000339194000000001, 0.00033932000000000406, 0.0003396669999999949, 0.00034159699999999904, 0.0003397499999999998, 0.000341403000000004, 0.00033870800000000006, 0.0003415559999999998, 0.00033955499999999833, 0.00034120900000000204, 0.0003424579999999969, 0.00034093100000000265, 0.0003423889999999985, 0.00034063899999999675, 0.0003397360000000002, 0.0003413199999999991, 0.0003397779999999989, 0.00034308400000000044, 0.0003439579999999984, 0.00034434800000000126, 0.00034259700000000004, 0.0003396390000000027, 0.0003440140000000036, 0.00033866600000000135]</msg>
<status status="PASS" starttime="20201115 22:59:57.017" endtime="20201115 22:59:57.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.013" endtime="20201115 22:59:57.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.022" endtime="20201115 22:59:57.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.026" endtime="20201115 22:59:57.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.024" endtime="20201115 22:59:57.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.021" endtime="20201115 22:59:57.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.636" endtime="20201115 22:59:57.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.635" endtime="20201115 22:59:57.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.634" endtime="20201115 22:59:57.047"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.050" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.058" endtime="20201115 22:59:57.096"></status>
</kw>
<msg timestamp="20201115 22:59:57.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.056" endtime="20201115 22:59:57.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.098" endtime="20201115 22:59:57.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.100" endtime="20201115 22:59:57.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.054" endtime="20201115 22:59:57.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.052" endtime="20201115 22:59:57.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.109" endtime="20201115 22:59:57.402"></status>
</kw>
<msg timestamp="20201115 22:59:57.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026989792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027327736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.108" endtime="20201115 22:59:57.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026989792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027327736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.411" endtime="20201115 22:59:57.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.429" endtime="20201115 22:59:57.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.105" endtime="20201115 22:59:57.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.103" endtime="20201115 22:59:57.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.443" level="INFO">${RESULT} = [{'time': 0.027327736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033794399999999974, 'source_diff': 0.00033794399999999974}, {'time': 0.027692903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:57.436" endtime="20201115 22:59:57.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.473" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:57.445" endtime="20201115 22:59:57.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.477" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.476" endtime="20201115 22:59:57.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.480" level="INFO">VALUE: [0.00033794399999999974, 0.000344195000000002, 0.0003412910000000005, 0.0003399169999999986, 0.00033812499999999815, 0.0003407500000000008, 0.00034108399999999844, 0.00034341699999999864, 0.0003415689999999999, 0.00034336199999999983, 0.000342986, 0.0003428050000000016, 0.00034391699999999914, 0.00033952799999999866, 0.0003444439999999993, 0.00033865300000000126, 0.0003415279999999937, 0.0003416109999999986, 0.0003409170000000031, 0.00034058399999999794, 0.00034397199999999795, 0.00033887500000000237, 0.0003431110000000001, 0.0003433470000000008, 0.00034315199999999935, 0.00034208299999999997, 0.000340194000000002, 0.00033902799999999816, 0.0003428200000000006, 0.00033897299999999936, 0.0003405840000000049, 0.000338403000000001, 0.0003395139999999991, 0.0003412079999999956, 0.0003387630000000058, 0.0003439439999999988, 0.00034391599999999967, 0.00034105499999999983, 0.00034141699999999664, 0.00033972200000000063, 0.00034070900000000154, 0.0003383469999999958, 0.0003431669999999984, 0.0003423339999999997, 0.00033972200000000063, 0.0003386520000000018, 0.0003405000000000005, 0.0003389030000000015, 0.00033998600000000045, 0.0003421249999999987]</msg>
<status status="PASS" starttime="20201115 22:59:57.478" endtime="20201115 22:59:57.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.474" endtime="20201115 22:59:57.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.483" endtime="20201115 22:59:57.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.487" endtime="20201115 22:59:57.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.485" endtime="20201115 22:59:57.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.482" endtime="20201115 22:59:57.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.050" endtime="20201115 22:59:57.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.048" endtime="20201115 22:59:57.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.048" endtime="20201115 22:59:57.509"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.511" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.520" endtime="20201115 22:59:57.558"></status>
</kw>
<msg timestamp="20201115 22:59:57.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.518" endtime="20201115 22:59:57.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.559" endtime="20201115 22:59:57.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.562" endtime="20201115 22:59:57.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.516" endtime="20201115 22:59:57.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.514" endtime="20201115 22:59:57.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.571" endtime="20201115 22:59:57.856"></status>
</kw>
<msg timestamp="20201115 22:59:57.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028233514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028568333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.569" endtime="20201115 22:59:57.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028233514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028568333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.860" endtime="20201115 22:59:57.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.868" endtime="20201115 22:59:57.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.567" endtime="20201115 22:59:57.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.565" endtime="20201115 22:59:57.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.875" level="INFO">${RESULT} = [{'time': 0.028568333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003348190000000001, 'source_diff': 0.0003348190000000001}, {'time': 0.028933556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:57.871" endtime="20201115 22:59:57.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.888" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:57.876" endtime="20201115 22:59:57.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.893" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.892" endtime="20201115 22:59:57.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.895" level="INFO">VALUE: [0.0003348190000000001, 0.000342888999999999, 0.00034208299999999997, 0.00034227700000000194, 0.0003423750000000024, 0.0003438189999999987, 0.00034120900000000204, 0.00034133400000000216, 0.00034144499999999925, 0.0003417500000000018, 0.00034076400000000034, 0.0003404170000000026, 0.0003444450000000057, 0.0003437360000000042, 0.0003410140000000006, 0.00034032000000000506, 0.0003414720000000024, 0.000341679999999997, 0.0003444309999999992, 0.0003418199999999996, 0.00033861100000000255, 0.0003417780000000009, 0.00034337499999999993, 0.00034163899999999775, 0.0003417360000000022, 0.00034401399999999666, 0.000340791, 0.0003432910000000025, 0.00034258399999999994, 0.0003439309999999987, 0.00034287499999999943, 0.00034019500000000147, 0.00034034700000000473, 0.0003405559999999988, 0.00033881899999999715, 0.0003388190000000041, 0.0003392359999999997, 0.00033831899999999665, 0.00034174999999999484, 0.00034098600000000145, 0.00034209699999999954, 0.00034305500000000183, 0.0003441250000000007, 0.000342791000000002, 0.00033902700000000563, 0.0003399439999999948, 0.0003447500000000048, 0.00034423599999999777, 0.0003395699999999974, 0.00034322200000000413]</msg>
<status status="PASS" starttime="20201115 22:59:57.894" endtime="20201115 22:59:57.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.889" endtime="20201115 22:59:57.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.898" endtime="20201115 22:59:57.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.902" endtime="20201115 22:59:57.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.900" endtime="20201115 22:59:57.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.897" endtime="20201115 22:59:57.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.512" endtime="20201115 22:59:57.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.510" endtime="20201115 22:59:57.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.509" endtime="20201115 22:59:57.923"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.925" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.934" endtime="20201115 22:59:57.971"></status>
</kw>
<msg timestamp="20201115 22:59:57.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.932" endtime="20201115 22:59:57.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.972" endtime="20201115 22:59:57.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.975" endtime="20201115 22:59:57.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.930" endtime="20201115 22:59:57.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.928" endtime="20201115 22:59:57.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.984" endtime="20201115 22:59:58.269"></status>
</kw>
<msg timestamp="20201115 22:59:58.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025324542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0256605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:59:57.982" endtime="20201115 22:59:58.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025324542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0256605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:59:58.273" endtime="20201115 22:59:58.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.281" endtime="20201115 22:59:58.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.980" endtime="20201115 22:59:58.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.978" endtime="20201115 22:59:58.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:58.288" level="INFO">${RESULT} = [{'time': 0.0256605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003359580000000008, 'source_diff': 0.0003359580000000008}, {'time': 0.026025694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:59:58.285" endtime="20201115 22:59:58.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.301" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:58.289" endtime="20201115 22:59:58.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.306" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 22:59:58.305" endtime="20201115 22:59:58.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.308" level="INFO">VALUE: [0.0003359580000000008, 0.0003438469999999978, 0.00034052799999999966, 0.0003415689999999999, 0.00034363899999999975, 0.00033917999999999796, 0.000339693999999998, 0.00034341599999999917, 0.00034400000000000056, 0.000340985999999998, 0.0003390129999999991, 0.0003404590000000013, 0.0003399300000000022, 0.00033998600000000045, 0.00033917999999999796, 0.0003426249999999992, 0.000338693999999997, 0.00034320800000000456, 0.00034376299999999693, 0.0003416659999999974, 0.0003433189999999947, 0.0003438330000000017, 0.0003423330000000002, 0.00034474999999999784, 0.0003401249999999967, 0.00034265199999999885, 0.0003435419999999953, 0.00034127700000000094, 0.000338999999999999, 0.0003403339999999977, 0.00033992999999999524, 0.000342000000000002, 0.0003445000000000045, 0.0003394999999999995, 0.0003404439999999953, 0.0003388610000000028, 0.000341403000000004, 0.00034468, 0.00034115199999999735, 0.0003445700000000024, 0.00034326400000000284, 0.0003422780000000014, 0.0003382229999999986, 0.00034152800000000066, 0.0003423050000000011, 0.00034161100000000555, 0.00034329199999999505, 0.0003442079999999986, 0.00034126300000000137, 0.0003404590000000013]</msg>
<status status="PASS" starttime="20201115 22:59:58.307" endtime="20201115 22:59:58.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.302" endtime="20201115 22:59:58.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.311" endtime="20201115 22:59:58.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.315" endtime="20201115 22:59:58.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.313" endtime="20201115 22:59:58.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.310" endtime="20201115 22:59:58.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.926" endtime="20201115 22:59:58.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.924" endtime="20201115 22:59:58.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.923" endtime="20201115 22:59:58.336"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.338" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.347" endtime="20201115 22:59:58.382"></status>
</kw>
<msg timestamp="20201115 22:59:58.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.345" endtime="20201115 22:59:58.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.384" endtime="20201115 22:59:58.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.386" endtime="20201115 22:59:58.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.343" endtime="20201115 22:59:58.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.340" endtime="20201115 22:59:58.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.396" endtime="20201115 22:59:58.683"></status>
</kw>
<msg timestamp="20201115 22:59:58.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024324861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024681417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.394" endtime="20201115 22:59:58.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024324861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024681417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.687" endtime="20201115 22:59:58.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.695" endtime="20201115 22:59:58.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.391" endtime="20201115 22:59:58.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.389" endtime="20201115 22:59:58.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:58.702" level="INFO">${RESULT} = [{'time': 0.024681417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035655600000000093, 'source_diff': 0.00035655600000000093}, {'time': 0.025046569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:58.699" endtime="20201115 22:59:58.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.716" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:58.703" endtime="20201115 22:59:58.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.721" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 22:59:58.720" endtime="20201115 22:59:58.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.723" level="INFO">VALUE: [0.00035655600000000093, 0.00034240200000000207, 0.0003389169999999976, 0.0003390560000000008, 0.0003412780000000004, 0.0003446120000000011, 0.0003417920000000005, 0.0003404719999999979, 0.00034026300000000037, 0.000339403000000002, 0.0003441110000000011, 0.00033997300000000036, 0.00034006900000000187, 0.00033862499999999865, 0.0003416390000000012, 0.0003387910000000015, 0.0003442080000000021, 0.00034323600000000024, 0.00034281900000000115, 0.00034154100000000076, 0.00034415200000000035, 0.0003384579999999998, 0.0003394720000000004, 0.0003425000000000025, 0.00034359700000000104, 0.0003439999999999971, 0.0003416940000000035, 0.00033998600000000045, 0.00034181900000000015, 0.00034076300000000087, 0.0003384999999999985, 0.00034347199999999745, 0.0003384170000000006, 0.00033947299999999986, 0.000343889, 0.0003404170000000026, 0.0003386669999999939, 0.0003439439999999988, 0.00034034700000000473, 0.00033819499999999947, 0.0003411669999999964, 0.00034409700000000154, 0.00034430600000000255, 0.00034190200000000504, 0.00034436100000000136, 0.0003426249999999992, 0.0003387359999999992, 0.0003431669999999984, 0.00033861100000000255, 0.0003397360000000002]</msg>
<status status="PASS" starttime="20201115 22:59:58.722" endtime="20201115 22:59:58.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.717" endtime="20201115 22:59:58.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.726" endtime="20201115 22:59:58.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.730" endtime="20201115 22:59:58.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.728" endtime="20201115 22:59:58.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.725" endtime="20201115 22:59:58.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.339" endtime="20201115 22:59:58.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.337" endtime="20201115 22:59:58.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.336" endtime="20201115 22:59:58.751"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.753" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.762" endtime="20201115 22:59:58.799"></status>
</kw>
<msg timestamp="20201115 22:59:58.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.760" endtime="20201115 22:59:58.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.800" endtime="20201115 22:59:58.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.803" endtime="20201115 22:59:58.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.758" endtime="20201115 22:59:58.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.755" endtime="20201115 22:59:58.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.812" endtime="20201115 22:59:59.098"></status>
</kw>
<msg timestamp="20201115 22:59:59.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026184028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026537722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.811" endtime="20201115 22:59:59.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026184028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026537722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.102" endtime="20201115 22:59:59.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.110" endtime="20201115 22:59:59.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.808" endtime="20201115 22:59:59.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.806" endtime="20201115 22:59:59.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.117" level="INFO">${RESULT} = [{'time': 0.026537722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035369399999999815, 'source_diff': 0.00035369399999999815}, {'time': 0.026903125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:59.113" endtime="20201115 22:59:59.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.130" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:59.118" endtime="20201115 22:59:59.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.134" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.133" endtime="20201115 22:59:59.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.137" level="INFO">VALUE: [0.00035369399999999815, 0.00034004199999999873, 0.0003405000000000005, 0.0003421530000000013, 0.0003395970000000005, 0.00034390299999999957, 0.00033912499999999915, 0.0003419310000000002, 0.00033979200000000195, 0.0003435279999999992, 0.0003391800000000014, 0.00034350000000000006, 0.00033976399999999934, 0.00034248699999999896, 0.0003407500000000008, 0.00034154200000000023, 0.0003413190000000066, 0.00034161100000000555, 0.00034038900000000344, 0.00033933300000000416, 0.00034180600000000005, 0.00034216700000000433, 0.0003417360000000022, 0.00033983300000000466, 0.00034355500000000233, 0.00034308300000000097, 0.00034080599999999905, 0.00034209699999999954, 0.0003433889999999995, 0.00034458400000000194, 0.0003404580000000018, 0.00033984700000000423, 0.00034088800000000447, 0.0003428330000000007, 0.0003428470000000003, 0.00033848599999999895, 0.0003384170000000006, 0.00034305500000000183, 0.00034243100000000415, 0.00034384800000000076, 0.00034413900000000025, 0.0003407779999999999, 0.000342679999999998, 0.00034490300000000057, 0.000342403000000005, 0.0003440700000000019, 0.00034202800000000116, 0.00033898599999999945, 0.0003415000000000015, 0.00034287499999999943]</msg>
<status status="PASS" starttime="20201115 22:59:59.135" endtime="20201115 22:59:59.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.131" endtime="20201115 22:59:59.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.140" endtime="20201115 22:59:59.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.143" endtime="20201115 22:59:59.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.142" endtime="20201115 22:59:59.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.138" endtime="20201115 22:59:59.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.754" endtime="20201115 22:59:59.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.752" endtime="20201115 22:59:59.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.751" endtime="20201115 22:59:59.165"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.167" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.176" endtime="20201115 22:59:59.215"></status>
</kw>
<msg timestamp="20201115 22:59:59.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.174" endtime="20201115 22:59:59.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.217" endtime="20201115 22:59:59.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.220" endtime="20201115 22:59:59.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.171" endtime="20201115 22:59:59.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.169" endtime="20201115 22:59:59.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.229" endtime="20201115 22:59:59.515"></status>
</kw>
<msg timestamp="20201115 22:59:59.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024639361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024990972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.227" endtime="20201115 22:59:59.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024639361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024990972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.519" endtime="20201115 22:59:59.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.527" endtime="20201115 22:59:59.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.225" endtime="20201115 22:59:59.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.223" endtime="20201115 22:59:59.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.535" level="INFO">${RESULT} = [{'time': 0.024990972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035161100000000167, 'source_diff': 0.00035161100000000167}, {'time': 0.025356264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:59.531" endtime="20201115 22:59:59.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.548" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:59.536" endtime="20201115 22:59:59.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.553" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.552" endtime="20201115 22:59:59.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.555" level="INFO">VALUE: [0.00035161100000000167, 0.0003437500000000003, 0.00034212500000000215, 0.00034127700000000094, 0.00034404199999999927, 0.0003444449999999988, 0.0003409299999999997, 0.0003412230000000016, 0.0003386519999999983, 0.00034390299999999957, 0.0003406529999999998, 0.0003405420000000027, 0.0003390839999999999, 0.00033829200000000045, 0.00034134700000000226, 0.0003445140000000006, 0.0003408190000000026, 0.0003441669999999994, 0.0003425700000000004, 0.0003447219999999987, 0.00034041599999999617, 0.0003397360000000002, 0.00034386100000000086, 0.00033952799999999866, 0.0003408049999999996, 0.00033893100000000065, 0.0003419580000000033, 0.0003429720000000039, 0.0003384449999999997, 0.00033863899999999475, 0.0003442780000000034, 0.00034016700000000233, 0.000343485999999997, 0.0003403889999999965, 0.0003439579999999984, 0.0003424580000000038, 0.0003392499999999993, 0.0003388190000000041, 0.0003429579999999974, 0.00034036099999999736, 0.0003411529999999968, 0.00033836099999999536, 0.00034423699999999724, 0.0003408190000000061, 0.0003446660000000004, 0.00034273599999999627, 0.0003385700000000033, 0.0003395840000000039, 0.0003433330000000012, 0.000338806000000004]</msg>
<status status="PASS" starttime="20201115 22:59:59.554" endtime="20201115 22:59:59.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.549" endtime="20201115 22:59:59.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.559" endtime="20201115 22:59:59.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.563" endtime="20201115 22:59:59.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.561" endtime="20201115 22:59:59.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.557" endtime="20201115 22:59:59.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.168" endtime="20201115 22:59:59.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.166" endtime="20201115 22:59:59.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.165" endtime="20201115 22:59:59.585"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.587" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.596" endtime="20201115 22:59:59.634"></status>
</kw>
<msg timestamp="20201115 22:59:59.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.594" endtime="20201115 22:59:59.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.635" endtime="20201115 22:59:59.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.638" endtime="20201115 22:59:59.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.591" endtime="20201115 22:59:59.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.589" endtime="20201115 22:59:59.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.647" endtime="20201115 22:59:59.932"></status>
</kw>
<msg timestamp="20201115 22:59:59.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027291, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027649333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:59:59.645" endtime="20201115 22:59:59.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027291, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027649333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:59:59.936" endtime="20201115 22:59:59.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.945" endtime="20201115 22:59:59.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.643" endtime="20201115 22:59:59.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.641" endtime="20201115 22:59:59.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.951" level="INFO">${RESULT} = [{'time': 0.027649333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035833300000000234, 'source_diff': 0.00035833300000000234}, {'time': 0.028014514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:59.948" endtime="20201115 22:59:59.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.964" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:59:59.952" endtime="20201115 22:59:59.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.969" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.968" endtime="20201115 22:59:59.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.971" level="INFO">VALUE: [0.00035833300000000234, 0.00034459700000000204, 0.0003431110000000001, 0.0003392359999999997, 0.000338999999999999, 0.0003416249999999982, 0.00034173599999999874, 0.0003444439999999993, 0.0003421529999999978, 0.0003436669999999989, 0.0003437080000000016, 0.0003402500000000003, 0.0003396250000000031, 0.0003393889999999955, 0.0003445140000000041, 0.0003405559999999988, 0.0003381800000000004, 0.0003412079999999956, 0.0003441110000000011, 0.0003382920000000039, 0.000344889000000001, 0.00034172200000000263, 0.00034341699999999864, 0.0003399720000000009, 0.00034358300000000147, 0.00034315199999999935, 0.0003402779999999994, 0.000344000000000004, 0.00033881899999999715, 0.00034013899999999625, 0.0003387499999999988, 0.0003382499999999983, 0.00034247199999999645, 0.00034133400000000563, 0.0003411799999999965, 0.000340806000000006, 0.000342403000000005, 0.00034076400000000034, 0.0003419859999999955, 0.00034122200000000213, 0.00033998600000000045, 0.0003437079999999981, 0.00034180600000000005, 0.0003393480000000032, 0.0003443470000000018, 0.00034384699999999435, 0.00034115300000000376, 0.0003416529999999973, 0.00033936099999999636, 0.000342679999999998]</msg>
<status status="PASS" starttime="20201115 22:59:59.970" endtime="20201115 22:59:59.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.965" endtime="20201115 22:59:59.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.975" endtime="20201115 22:59:59.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.978" endtime="20201115 22:59:59.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.977" endtime="20201115 22:59:59.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.973" endtime="20201115 22:59:59.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.588" endtime="20201115 22:59:59.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.586" endtime="20201115 23:00:00.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.585" endtime="20201115 23:00:00.000"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.002" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.010" endtime="20201115 23:00:00.045"></status>
</kw>
<msg timestamp="20201115 23:00:00.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.009" endtime="20201115 23:00:00.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.046" endtime="20201115 23:00:00.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.049" endtime="20201115 23:00:00.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.006" endtime="20201115 23:00:00.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.004" endtime="20201115 23:00:00.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.058" endtime="20201115 23:00:00.355"></status>
</kw>
<msg timestamp="20201115 23:00:00.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023580111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023933958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.057" endtime="20201115 23:00:00.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023580111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023933958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.364" endtime="20201115 23:00:00.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.382" endtime="20201115 23:00:00.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.054" endtime="20201115 23:00:00.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.052" endtime="20201115 23:00:00.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.396" level="INFO">${RESULT} = [{'time': 0.023933958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003538470000000009, 'source_diff': 0.0003538470000000009}, {'time': 0.024299208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:00.390" endtime="20201115 23:00:00.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.413" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:00.399" endtime="20201115 23:00:00.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.417" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.416" endtime="20201115 23:00:00.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.420" level="INFO">VALUE: [0.0003538470000000009, 0.00033995799999999785, 0.0003432079999999976, 0.0003414589999999988, 0.0003392499999999993, 0.0003430139999999991, 0.00034008300000000144, 0.0003421659999999979, 0.0003386800000000009, 0.00033938900000000244, 0.00034016700000000233, 0.0003434019999999996, 0.0003399299999999987, 0.00033993100000000165, 0.000339598, 0.0003427080000000006, 0.0003424859999999995, 0.00034368100000000193, 0.00034295800000000085, 0.00034168099999999993, 0.0003449310000000032, 0.0003383190000000036, 0.000344485999999998, 0.00033884700000000323, 0.0003439579999999984, 0.0003387630000000058, 0.0003399300000000022, 0.00034254200000000123, 0.00033870800000000006, 0.0003414590000000023, 0.00034448600000000495, 0.0003390840000000034, 0.0003383339999999957, 0.0003442500000000043, 0.00033976399999999934, 0.00034401399999999666, 0.000344889000000001, 0.00034113899999999725, 0.0003450279999999972, 0.0003423200000000001, 0.0003415559999999998, 0.0003397919999999985, 0.0003446669999999999, 0.0003443200000000021, 0.0003425979999999995, 0.0003442910000000035, 0.0003442780000000034, 0.00033883400000000313, 0.0003393469999999968, 0.00034308400000000044]</msg>
<status status="PASS" starttime="20201115 23:00:00.418" endtime="20201115 23:00:00.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.413" endtime="20201115 23:00:00.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.423" endtime="20201115 23:00:00.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.427" endtime="20201115 23:00:00.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.425" endtime="20201115 23:00:00.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.422" endtime="20201115 23:00:00.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.003" endtime="20201115 23:00:00.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.001" endtime="20201115 23:00:00.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.000" endtime="20201115 23:00:00.448"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.451" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.459" endtime="20201115 23:00:00.497"></status>
</kw>
<msg timestamp="20201115 23:00:00.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.457" endtime="20201115 23:00:00.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.499" endtime="20201115 23:00:00.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.502" endtime="20201115 23:00:00.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.455" endtime="20201115 23:00:00.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.453" endtime="20201115 23:00:00.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.511" endtime="20201115 23:00:00.796"></status>
</kw>
<msg timestamp="20201115 23:00:00.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027682708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028021931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.509" endtime="20201115 23:00:00.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027682708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028021931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.800" endtime="20201115 23:00:00.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.808" endtime="20201115 23:00:00.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.507" endtime="20201115 23:00:00.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.505" endtime="20201115 23:00:00.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.815" level="INFO">${RESULT} = [{'time': 0.028021931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003392229999999996, 'source_diff': 0.0003392229999999996}, {'time': 0.028387, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:00.811" endtime="20201115 23:00:00.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.828" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:00.816" endtime="20201115 23:00:00.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.833" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.832" endtime="20201115 23:00:00.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.835" level="INFO">VALUE: [0.0003392229999999996, 0.00034187499999999843, 0.0003406659999999999, 0.0003441380000000008, 0.00034440300000000007, 0.0003417079999999996, 0.00033872199999999963, 0.00033920800000000056, 0.000341292, 0.0003445560000000028, 0.00034306899999999446, 0.0003433050000000021, 0.0003397499999999998, 0.0003431249999999997, 0.0003440549999999959, 0.0003423889999999985, 0.0003399300000000022, 0.00034022200000000113, 0.0003426659999999984, 0.00034102800000000016, 0.00034109699999999854, 0.0003410140000000006, 0.000341485999999995, 0.0003396529999999953, 0.00034109699999999854, 0.0003399450000000012, 0.00033895900000000673, 0.0003386940000000005, 0.00033961100000000355, 0.000343679999999999, 0.00034241699999999764, 0.0003412079999999956, 0.0003433330000000012, 0.0003392779999999984, 0.00034358300000000147, 0.0003405000000000005, 0.00034419499999999853, 0.0003397920000000054, 0.00033998699999999993, 0.00034186099999999886, 0.0003425000000000025, 0.0003405140000000001, 0.00034086099999999786, 0.0003417780000000009, 0.00034342999999999874, 0.00034209699999999954, 0.00033893100000000065, 0.00034186099999999886, 0.0003432360000000037, 0.0003443890000000005]</msg>
<status status="PASS" starttime="20201115 23:00:00.834" endtime="20201115 23:00:00.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.829" endtime="20201115 23:00:00.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.838" endtime="20201115 23:00:00.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.842" endtime="20201115 23:00:00.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.840" endtime="20201115 23:00:00.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.837" endtime="20201115 23:00:00.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.451" endtime="20201115 23:00:00.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.449" endtime="20201115 23:00:00.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.448" endtime="20201115 23:00:00.863"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.865" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.874" endtime="20201115 23:00:00.910"></status>
</kw>
<msg timestamp="20201115 23:00:00.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.872" endtime="20201115 23:00:00.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.911" endtime="20201115 23:00:00.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.914" endtime="20201115 23:00:00.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.870" endtime="20201115 23:00:00.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.868" endtime="20201115 23:00:00.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.923" endtime="20201115 23:00:01.209"></status>
</kw>
<msg timestamp="20201115 23:00:01.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024373625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024714306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.921" endtime="20201115 23:00:01.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024373625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024714306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.213" endtime="20201115 23:00:01.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.221" endtime="20201115 23:00:01.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.919" endtime="20201115 23:00:01.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.917" endtime="20201115 23:00:01.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.228" level="INFO">${RESULT} = [{'time': 0.024714306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034068099999999893, 'source_diff': 0.00034068099999999893}, {'time': 0.025079486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:01.225" endtime="20201115 23:00:01.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.241" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:01.229" endtime="20201115 23:00:01.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.246" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.245" endtime="20201115 23:00:01.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.248" level="INFO">VALUE: [0.00034068099999999893, 0.00034368000000000246, 0.00034337499999999993, 0.0003441529999999998, 0.0003396390000000027, 0.0003395689999999979, 0.0003405140000000001, 0.0003411249999999977, 0.00034186099999999886, 0.00033852800000000113, 0.00033969500000000097, 0.0003397360000000002, 0.00034227799999999795, 0.00034009699999999754, 0.00034309700000000054, 0.0003394999999999995, 0.0003421249999999987, 0.0003431529999999988, 0.00034148600000000195, 0.00034423599999999777, 0.00033933400000000363, 0.00033961100000000355, 0.00034031899999999865, 0.0003424579999999969, 0.0003389580000000003, 0.00034454200000000323, 0.0003432500000000033, 0.0003416390000000047, 0.00034348600000000395, 0.0003442079999999986, 0.00034073599999999427, 0.0003427500000000028, 0.0003399450000000012, 0.0003390970000000035, 0.00034390299999999957, 0.0003393329999999972, 0.0003434999999999966, 0.0003429859999999965, 0.00034016700000000233, 0.0003418469999999993, 0.00033838900000000144, 0.00033836099999999536, 0.0003434449999999978, 0.0003438470000000013, 0.0003400689999999984, 0.00033913899999999525, 0.0003401109999999971, 0.0003396529999999953, 0.0003437360000000042, 0.0003382229999999986]</msg>
<status status="PASS" starttime="20201115 23:00:01.247" endtime="20201115 23:00:01.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.242" endtime="20201115 23:00:01.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.251" endtime="20201115 23:00:01.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.255" endtime="20201115 23:00:01.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.253" endtime="20201115 23:00:01.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.250" endtime="20201115 23:00:01.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.866" endtime="20201115 23:00:01.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.864" endtime="20201115 23:00:01.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.863" endtime="20201115 23:00:01.276"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.278" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.287" endtime="20201115 23:00:01.321"></status>
</kw>
<msg timestamp="20201115 23:00:01.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.285" endtime="20201115 23:00:01.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.323" endtime="20201115 23:00:01.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.325" endtime="20201115 23:00:01.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.283" endtime="20201115 23:00:01.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.280" endtime="20201115 23:00:01.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.335" endtime="20201115 23:00:01.623"></status>
</kw>
<msg timestamp="20201115 23:00:01.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02337675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023709708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:01.333" endtime="20201115 23:00:01.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02337675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023709708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:01.627" endtime="20201115 23:00:01.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.635" endtime="20201115 23:00:01.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.330" endtime="20201115 23:00:01.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.329" endtime="20201115 23:00:01.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.642" level="INFO">${RESULT} = [{'time': 0.023709708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003329579999999978, 'source_diff': 0.0003329579999999978}, {'time': 0.024075208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:01.638" endtime="20201115 23:00:01.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.655" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:01.643" endtime="20201115 23:00:01.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.659" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.658" endtime="20201115 23:00:01.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.662" level="INFO">VALUE: [0.0003329579999999978, 0.00034240200000000207, 0.0003409309999999992, 0.0003392779999999984, 0.00034290299999999857, 0.0003387359999999992, 0.00034069500000000197, 0.0003394719999999969, 0.0003440409999999998, 0.0003383190000000001, 0.00034408300000000197, 0.0003398199999999976, 0.00034244500000000025, 0.0003386940000000005, 0.00034422200000000167, 0.0003416390000000012, 0.0003382499999999983, 0.00033888899999999847, 0.00033908300000000044, 0.0003429729999999999, 0.0003444860000000015, 0.0003446389999999973, 0.00034273699999999574, 0.000339806000000005, 0.0003404309999999952, 0.00034202800000000116, 0.000338597000000003, 0.0003395830000000044, 0.0003432079999999976, 0.00033966600000000235, 0.000344000000000004, 0.0003425000000000025, 0.00033865300000000126, 0.00033976399999999934, 0.00034319499999999753, 0.00034440300000000007, 0.0003398199999999976, 0.0003429019999999991, 0.00033861100000000255, 0.0003435969999999941, 0.0003431110000000001, 0.000342777999999995, 0.0003413329999999992, 0.0003388050000000045, 0.0003413339999999987, 0.000342777999999995, 0.00034302699999999575, 0.0003432779999999955, 0.00034309700000000054, 0.0003382920000000039]</msg>
<status status="PASS" starttime="20201115 23:00:01.660" endtime="20201115 23:00:01.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.656" endtime="20201115 23:00:01.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.665" endtime="20201115 23:00:01.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.669" endtime="20201115 23:00:01.688"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.667" endtime="20201115 23:00:01.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.663" endtime="20201115 23:00:01.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.279" endtime="20201115 23:00:01.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.277" endtime="20201115 23:00:01.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.276" endtime="20201115 23:00:01.690"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.692" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.700" endtime="20201115 23:00:01.739"></status>
</kw>
<msg timestamp="20201115 23:00:01.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.699" endtime="20201115 23:00:01.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.741" endtime="20201115 23:00:01.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.744" endtime="20201115 23:00:01.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.696" endtime="20201115 23:00:01.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.694" endtime="20201115 23:00:01.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.753" endtime="20201115 23:00:02.040"></status>
</kw>
<msg timestamp="20201115 23:00:02.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026628736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026980556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.751" endtime="20201115 23:00:02.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026628736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026980556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.044" endtime="20201115 23:00:02.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.052" endtime="20201115 23:00:02.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.749" endtime="20201115 23:00:02.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.747" endtime="20201115 23:00:02.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.059" level="INFO">${RESULT} = [{'time': 0.026980556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003518199999999992, 'source_diff': 0.0003518199999999992}, {'time': 0.027346014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:02.056" endtime="20201115 23:00:02.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.073" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:02.060" endtime="20201115 23:00:02.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.078" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.077" endtime="20201115 23:00:02.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.081" level="INFO">VALUE: [0.0003518199999999992, 0.00034194499999999975, 0.00034391599999999967, 0.00034199999999999856, 0.0003407779999999999, 0.0003424019999999986, 0.00033838900000000144, 0.0003387780000000014, 0.00034102800000000016, 0.0003428330000000007, 0.00034340299999999907, 0.000341985999999999, 0.0003418199999999996, 0.00034043100000000215, 0.0003436250000000002, 0.00034291699999999814, 0.000341387999999998, 0.0003427360000000032, 0.00034001400000000653, 0.0003411249999999977, 0.0003405699999999984, 0.0003407230000000011, 0.0003438880000000005, 0.0003406390000000037, 0.00033851400000000503, 0.0003397499999999998, 0.0003388339999999962, 0.0003383610000000023, 0.0003397230000000001, 0.00033942999999999474, 0.0003405559999999988, 0.00034440300000000007, 0.0003432079999999976, 0.0003430690000000014, 0.00034459700000000204, 0.00033954099999999876, 0.00034313899999999925, 0.00034059699999999804, 0.0003448200000000026, 0.0003388480000000027, 0.00034086099999999786, 0.00034123599999999477, 0.00033888900000000194, 0.0003393610000000033, 0.0003435560000000018, 0.00033937500000000287, 0.00033987499999999643, 0.0003447639999999974, 0.0003444999999999976, 0.00034323599999999677]</msg>
<status status="PASS" starttime="20201115 23:00:02.079" endtime="20201115 23:00:02.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.074" endtime="20201115 23:00:02.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.084" endtime="20201115 23:00:02.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.087" endtime="20201115 23:00:02.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.086" endtime="20201115 23:00:02.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.082" endtime="20201115 23:00:02.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.693" endtime="20201115 23:00:02.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.691" endtime="20201115 23:00:02.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.690" endtime="20201115 23:00:02.109"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.111" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.120" endtime="20201115 23:00:02.156"></status>
</kw>
<msg timestamp="20201115 23:00:02.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.118" endtime="20201115 23:00:02.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.157" endtime="20201115 23:00:02.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.160" endtime="20201115 23:00:02.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.116" endtime="20201115 23:00:02.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.113" endtime="20201115 23:00:02.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.169" endtime="20201115 23:00:02.455"></status>
</kw>
<msg timestamp="20201115 23:00:02.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024907375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025240389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.167" endtime="20201115 23:00:02.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024907375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025240389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.459" endtime="20201115 23:00:02.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.467" endtime="20201115 23:00:02.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.165" endtime="20201115 23:00:02.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.163" endtime="20201115 23:00:02.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.474" level="INFO">${RESULT} = [{'time': 0.025240389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033301399999999953, 'source_diff': 0.00033301399999999953}, {'time': 0.025605472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:02.471" endtime="20201115 23:00:02.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.487" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:02.475" endtime="20201115 23:00:02.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.492" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.491" endtime="20201115 23:00:02.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.494" level="INFO">VALUE: [0.00033301399999999953, 0.0003407779999999999, 0.0003429170000000016, 0.000343195000000001, 0.00033966700000000183, 0.0003416109999999986, 0.00033876399999999834, 0.0003437080000000016, 0.0003437500000000003, 0.0003423330000000002, 0.0003429720000000004, 0.0003441110000000011, 0.0003384170000000006, 0.00033888900000000194, 0.000343195000000001, 0.0003421940000000005, 0.00033972200000000063, 0.0003385839999999994, 0.00034308300000000097, 0.00034198600000000245, 0.00034176400000000134, 0.0003414590000000023, 0.0003406250000000041, 0.00034177700000000144, 0.00034116600000000386, 0.00034191699999999714, 0.00034009800000000395, 0.0003405689999999989, 0.0003387779999999979, 0.0003429999999999961, 0.00034390299999999957, 0.00034098600000000145, 0.0003434999999999966, 0.0003415559999999998, 0.000340194000000002, 0.0003385689999999969, 0.0003399170000000021, 0.0003441799999999995, 0.00034223599999999577, 0.00034463900000000075, 0.00033911100000000305, 0.0003433200000000011, 0.0003436390000000067, 0.0003398480000000037, 0.00033815300000000076, 0.00033883300000000366, 0.0003441669999999994, 0.0003444439999999993, 0.0003394999999999995, 0.00034119399999999606]</msg>
<status status="PASS" starttime="20201115 23:00:02.493" endtime="20201115 23:00:02.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.488" endtime="20201115 23:00:02.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.497" endtime="20201115 23:00:02.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.501" endtime="20201115 23:00:02.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.499" endtime="20201115 23:00:02.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.496" endtime="20201115 23:00:02.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.112" endtime="20201115 23:00:02.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.110" endtime="20201115 23:00:02.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.109" endtime="20201115 23:00:02.523"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.525" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.533" endtime="20201115 23:00:02.567"></status>
</kw>
<msg timestamp="20201115 23:00:02.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.532" endtime="20201115 23:00:02.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.569" endtime="20201115 23:00:02.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.571" endtime="20201115 23:00:02.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.529" endtime="20201115 23:00:02.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.527" endtime="20201115 23:00:02.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.581" endtime="20201115 23:00:02.868"></status>
</kw>
<msg timestamp="20201115 23:00:02.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022819778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023175694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.579" endtime="20201115 23:00:02.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022819778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023175694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.872" endtime="20201115 23:00:02.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.880" endtime="20201115 23:00:02.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.576" endtime="20201115 23:00:02.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.575" endtime="20201115 23:00:02.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.886" level="INFO">${RESULT} = [{'time': 0.023175694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035591600000000126, 'source_diff': 0.00035591600000000126}, {'time': 0.023540986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:02.883" endtime="20201115 23:00:02.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.900" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:02.887" endtime="20201115 23:00:02.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.904" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.903" endtime="20201115 23:00:02.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.907" level="INFO">VALUE: [0.00035591600000000126, 0.000339194000000001, 0.00034166700000000036, 0.0003442640000000004, 0.0003398330000000012, 0.0003387499999999988, 0.00034272200000000017, 0.00034406899999999893, 0.00033847300000000233, 0.00033820899999999904, 0.00034286099999999986, 0.0003385839999999994, 0.0003447500000000013, 0.0003418469999999993, 0.00034218100000000043, 0.00034090300000000004, 0.0003436660000000029, 0.00033865300000000126, 0.0003400139999999996, 0.00033979200000000195, 0.00034437499999999746, 0.0003403750000000004, 0.0003430279999999987, 0.00033847200000000285, 0.0003425690000000009, 0.00034337499999999993, 0.000344098000000001, 0.0003423330000000002, 0.00033838900000000144, 0.0003392079999999936, 0.0003431669999999984, 0.00034448600000000495, 0.00034413900000000025, 0.00034437500000000093, 0.00033854099999999776, 0.0003447370000000047, 0.00033911100000000305, 0.0003439590000000048, 0.00034019500000000147, 0.00034136099999999836, 0.0003402779999999994, 0.0003434579999999979, 0.0003395559999999978, 0.00034444400000000625, 0.0003409580000000023, 0.00034244400000000424, 0.0003425690000000009, 0.00034259700000000004, 0.00033851400000000503, 0.0003393329999999972]</msg>
<status status="PASS" starttime="20201115 23:00:02.905" endtime="20201115 23:00:02.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.901" endtime="20201115 23:00:02.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.910" endtime="20201115 23:00:02.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.914" endtime="20201115 23:00:02.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.912" endtime="20201115 23:00:02.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.909" endtime="20201115 23:00:02.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.526" endtime="20201115 23:00:02.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.524" endtime="20201115 23:00:02.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.523" endtime="20201115 23:00:02.935"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.937" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.946" endtime="20201115 23:00:02.984"></status>
</kw>
<msg timestamp="20201115 23:00:02.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.944" endtime="20201115 23:00:02.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.986" endtime="20201115 23:00:02.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.988" endtime="20201115 23:00:02.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.942" endtime="20201115 23:00:02.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.939" endtime="20201115 23:00:02.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.997" endtime="20201115 23:00:03.282"></status>
</kw>
<msg timestamp="20201115 23:00:03.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027314764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027656875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.996" endtime="20201115 23:00:03.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027314764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027656875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.286" endtime="20201115 23:00:03.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.294" endtime="20201115 23:00:03.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.993" endtime="20201115 23:00:03.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.992" endtime="20201115 23:00:03.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:03.301" level="INFO">${RESULT} = [{'time': 0.027656875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003421110000000026, 'source_diff': 0.0003421110000000026}, {'time': 0.028022222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:03.298" endtime="20201115 23:00:03.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:03.314" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:03.302" endtime="20201115 23:00:03.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.319" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:00:03.318" endtime="20201115 23:00:03.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.322" level="INFO">VALUE: [0.0003421110000000026, 0.0003393190000000011, 0.00034295800000000085, 0.00034472200000000217, 0.00034154100000000076, 0.0003393749999999994, 0.00034395800000000185, 0.00033972199999999717, 0.0003384719999999994, 0.0003417500000000018, 0.0003405840000000014, 0.0003422360000000027, 0.0003406669999999959, 0.00033998600000000045, 0.0003426379999999993, 0.00033861100000000255, 0.0003405140000000001, 0.0003406669999999959, 0.00034447199999999845, 0.0003399170000000021, 0.0003428470000000003, 0.0003411800000000034, 0.0003382499999999983, 0.0003394450000000007, 0.0003394300000000017, 0.0003431249999999997, 0.00033915300000000176, 0.0003433200000000011, 0.00034076400000000034, 0.0003446110000000016, 0.00033887499999999543, 0.00034336100000000036, 0.00034015300000000276, 0.00034190299999999757, 0.00034363899999999975, 0.000339305000000005, 0.00033948599999999995, 0.0003423330000000002, 0.0003435549999999954, 0.0003446529999999934, 0.00034387500000000043, 0.00034222200000000313, 0.00034087500000000437, 0.00034170900000000254, 0.0003432780000000024, 0.00034098600000000145, 0.00034305500000000183, 0.00034336100000000036, 0.0003387499999999988, 0.0003447079999999991]</msg>
<status status="PASS" starttime="20201115 23:00:03.320" endtime="20201115 23:00:03.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.315" endtime="20201115 23:00:03.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.325" endtime="20201115 23:00:03.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.329" endtime="20201115 23:00:03.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.327" endtime="20201115 23:00:03.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.324" endtime="20201115 23:00:03.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.938" endtime="20201115 23:00:03.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.936" endtime="20201115 23:00:03.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.935" endtime="20201115 23:00:03.350"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.352" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.360" endtime="20201115 23:00:03.396"></status>
</kw>
<msg timestamp="20201115 23:00:03.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.359" endtime="20201115 23:00:03.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.397" endtime="20201115 23:00:03.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.400" endtime="20201115 23:00:03.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.356" endtime="20201115 23:00:03.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.354" endtime="20201115 23:00:03.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.409" endtime="20201115 23:00:03.694"></status>
</kw>
<msg timestamp="20201115 23:00:03.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024455958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024808167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.407" endtime="20201115 23:00:03.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024455958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024808167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.698" endtime="20201115 23:00:03.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.706" endtime="20201115 23:00:03.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.405" endtime="20201115 23:00:03.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.403" endtime="20201115 23:00:03.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:03.713" level="INFO">${RESULT} = [{'time': 0.024808167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035220899999999916, 'source_diff': 0.00035220899999999916}, {'time': 0.025173389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:03.709" endtime="20201115 23:00:03.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:03.728" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:03.714" endtime="20201115 23:00:03.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.732" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:00:03.731" endtime="20201115 23:00:03.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.735" level="INFO">VALUE: [0.00035220899999999916, 0.0003441529999999998, 0.0003433330000000012, 0.0003433889999999995, 0.0003409169999999996, 0.00034213800000000225, 0.000341097000000002, 0.0003385129999999986, 0.00034408400000000144, 0.0003393200000000006, 0.00034342999999999874, 0.0003425279999999982, 0.0003429170000000016, 0.00034380600000000205, 0.00034441699999999964, 0.00034413900000000025, 0.0003415970000000025, 0.00034184799999999876, 0.00034077699999999697, 0.00034273599999999627, 0.000342194000000004, 0.0003442500000000043, 0.000341485999999995, 0.00034223599999999577, 0.00033869499999999997, 0.00034097199999999495, 0.0003440560000000023, 0.0003386390000000017, 0.0003440549999999959, 0.00033844400000000024, 0.00034374999999999684, 0.00034170800000000306, 0.00034272200000000363, 0.0003419030000000045, 0.0003425140000000021, 0.0003442370000000042, 0.00034123599999999477, 0.0003438470000000013, 0.00033934700000000373, 0.00033986099999999686, 0.00034341699999999864, 0.00034469399999999956, 0.0003438330000000017, 0.0003442079999999986, 0.0003416800000000039, 0.00033987500000000337, 0.0003445279999999967, 0.00034486100000000186, 0.00034284799999999976, 0.0003434579999999979]</msg>
<status status="PASS" starttime="20201115 23:00:03.733" endtime="20201115 23:00:03.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.728" endtime="20201115 23:00:03.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.738" endtime="20201115 23:00:03.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.741" endtime="20201115 23:00:03.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.740" endtime="20201115 23:00:03.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.736" endtime="20201115 23:00:03.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.353" endtime="20201115 23:00:03.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.351" endtime="20201115 23:00:03.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.350" endtime="20201115 23:00:03.762"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.765" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.773" endtime="20201115 23:00:03.813"></status>
</kw>
<msg timestamp="20201115 23:00:03.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.772" endtime="20201115 23:00:03.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.814" endtime="20201115 23:00:03.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.817" endtime="20201115 23:00:03.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.769" endtime="20201115 23:00:03.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.767" endtime="20201115 23:00:03.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.826" endtime="20201115 23:00:04.111"></status>
</kw>
<msg timestamp="20201115 23:00:04.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023838639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024170639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.825" endtime="20201115 23:00:04.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023838639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024170639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.115" endtime="20201115 23:00:04.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.124" endtime="20201115 23:00:04.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.822" endtime="20201115 23:00:04.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.820" endtime="20201115 23:00:04.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.131" level="INFO">${RESULT} = [{'time': 0.024170639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033200000000000243, 'source_diff': 0.00033200000000000243}, {'time': 0.024535972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:04.127" endtime="20201115 23:00:04.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.144" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:04.132" endtime="20201115 23:00:04.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.149" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.147" endtime="20201115 23:00:04.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.151" level="INFO">VALUE: [0.00033200000000000243, 0.0003431249999999997, 0.0003416660000000009, 0.0003441110000000011, 0.0003409720000000019, 0.00034177799999999744, 0.00033981899999999815, 0.0003414719999999989, 0.00034230600000000055, 0.0003404589999999978, 0.0003416109999999986, 0.00033869499999999997, 0.00034472200000000217, 0.0003388749999999989, 0.0003434310000000017, 0.00033972200000000063, 0.00034213899999999825, 0.00033888900000000194, 0.0003414170000000001, 0.00034198699999999846, 0.0003388190000000006, 0.00034236199999999883, 0.0003388199999999966, 0.00033827800000000435, 0.000338790999999998, 0.0003404720000000014, 0.000341000000000001, 0.00034347199999999745, 0.0003402360000000007, 0.0003403480000000042, 0.0003433609999999934, 0.00034019500000000147, 0.0003421669999999974, 0.00034158399999999894, 0.0003445130000000046, 0.00034231900000000065, 0.00033872199999999963, 0.0003434450000000047, 0.0003447639999999974, 0.0003396800000000019, 0.00034363899999999975, 0.00034347199999999745, 0.0003430140000000026, 0.00034287499999999943, 0.00034066700000000283, 0.00034198600000000245, 0.0003417780000000009, 0.00034116700000000333, 0.00034401399999999666, 0.00033879100000000495]</msg>
<status status="PASS" starttime="20201115 23:00:04.150" endtime="20201115 23:00:04.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.145" endtime="20201115 23:00:04.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.154" endtime="20201115 23:00:04.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.158" endtime="20201115 23:00:04.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.156" endtime="20201115 23:00:04.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.152" endtime="20201115 23:00:04.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.765" endtime="20201115 23:00:04.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.764" endtime="20201115 23:00:04.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.763" endtime="20201115 23:00:04.179"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.181" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.190" endtime="20201115 23:00:04.225"></status>
</kw>
<msg timestamp="20201115 23:00:04.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.188" endtime="20201115 23:00:04.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.227" endtime="20201115 23:00:04.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.229" endtime="20201115 23:00:04.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.185" endtime="20201115 23:00:04.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.183" endtime="20201115 23:00:04.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.239" endtime="20201115 23:00:04.525"></status>
</kw>
<msg timestamp="20201115 23:00:04.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024432097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024778639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.237" endtime="20201115 23:00:04.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024432097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024778639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.529" endtime="20201115 23:00:04.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.537" endtime="20201115 23:00:04.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.234" endtime="20201115 23:00:04.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.233" endtime="20201115 23:00:04.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.544" level="INFO">${RESULT} = [{'time': 0.024778639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034654200000000177, 'source_diff': 0.00034654200000000177}, {'time': 0.025143875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:04.541" endtime="20201115 23:00:04.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.557" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:04.545" endtime="20201115 23:00:04.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.562" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.561" endtime="20201115 23:00:04.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.564" level="INFO">VALUE: [0.00034654200000000177, 0.0003436669999999989, 0.00033834699999999926, 0.00034394500000000175, 0.0003420699999999999, 0.000339403000000002, 0.00034337499999999993, 0.00034066699999999936, 0.0003422639999999984, 0.0003382780000000009, 0.0003437500000000003, 0.00033826399999999784, 0.00034012500000000015, 0.0003396940000000015, 0.0003383199999999996, 0.0003387360000000027, 0.000339194000000001, 0.00033998600000000045, 0.00034422300000000114, 0.0003384300000000007, 0.0003399580000000013, 0.0003442639999999969, 0.0003405559999999988, 0.0003415689999999999, 0.00033888900000000194, 0.00034154200000000023, 0.0003432500000000033, 0.0003404300000000027, 0.0003406109999999976, 0.0003395840000000039, 0.0003429579999999974, 0.0003393889999999955, 0.00034070800000000206, 0.0003441250000000007, 0.0003399030000000025, 0.0003423200000000001, 0.000342888999999999, 0.00034258300000000047, 0.00034309700000000054, 0.0003402079999999946, 0.0003445690000000029, 0.0003388469999999963, 0.0003446110000000016, 0.0003406390000000037, 0.00033972200000000063, 0.00034290299999999857, 0.0003429859999999965, 0.00033858299999999647, 0.00033837500000000187, 0.0003382920000000039]</msg>
<status status="PASS" starttime="20201115 23:00:04.563" endtime="20201115 23:00:04.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.558" endtime="20201115 23:00:04.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.567" endtime="20201115 23:00:04.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.571" endtime="20201115 23:00:04.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.569" endtime="20201115 23:00:04.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.566" endtime="20201115 23:00:04.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.182" endtime="20201115 23:00:04.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.180" endtime="20201115 23:00:04.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.179" endtime="20201115 23:00:04.592"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.594" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.603" endtime="20201115 23:00:04.637"></status>
</kw>
<msg timestamp="20201115 23:00:04.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.601" endtime="20201115 23:00:04.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.639" endtime="20201115 23:00:04.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.649" endtime="20201115 23:00:04.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.599" endtime="20201115 23:00:04.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.596" endtime="20201115 23:00:04.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.659" endtime="20201115 23:00:04.945"></status>
</kw>
<msg timestamp="20201115 23:00:04.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023147319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0234955, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:04.657" endtime="20201115 23:00:04.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023147319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0234955, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:04.949" endtime="20201115 23:00:04.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.957" endtime="20201115 23:00:04.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.654" endtime="20201115 23:00:04.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.653" endtime="20201115 23:00:04.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.963" level="INFO">${RESULT} = [{'time': 0.0234955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003481809999999995, 'source_diff': 0.0003481809999999995}, {'time': 0.023860583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:04.960" endtime="20201115 23:00:04.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.977" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:04.964" endtime="20201115 23:00:04.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.981" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.980" endtime="20201115 23:00:04.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.984" level="INFO">VALUE: [0.0003481809999999995, 0.00034272200000000017, 0.0003414719999999989, 0.00034184799999999876, 0.0003417079999999996, 0.00034387500000000043, 0.0003391519999999988, 0.00034208399999999944, 0.00034329099999999904, 0.0003404439999999988, 0.0003413750000000014, 0.0003433340000000007, 0.0003441529999999998, 0.00033904199999999773, 0.00033852800000000113, 0.00034136100000000183, 0.0003389300000000012, 0.0003392909999999985, 0.00034383299999999825, 0.00034094499999999875, 0.00034054100000000323, 0.0003434309999999982, 0.0003390139999999986, 0.00034192999999999724, 0.0003439859999999975, 0.0003404720000000014, 0.0003417360000000022, 0.0003384719999999994, 0.00034287499999999943, 0.00034456899999999596, 0.00034337499999999993, 0.0003386250000000021, 0.0003440969999999946, 0.0003387779999999979, 0.0003389719999999999, 0.0003421800000000044, 0.0003426109999999996, 0.00034198600000000245, 0.00034202800000000116, 0.00034098600000000145, 0.0003402500000000003, 0.0003386250000000021, 0.0003423050000000011, 0.0003426810000000044, 0.00034245899999999635, 0.00033830599999999655, 0.0003412079999999956, 0.0003400830000000049, 0.00034455500000000333, 0.0003424579999999969]</msg>
<status status="PASS" starttime="20201115 23:00:04.982" endtime="20201115 23:00:04.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.978" endtime="20201115 23:00:04.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.987" endtime="20201115 23:00:04.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.990" endtime="20201115 23:00:05.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.989" endtime="20201115 23:00:05.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.985" endtime="20201115 23:00:05.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.595" endtime="20201115 23:00:05.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.593" endtime="20201115 23:00:05.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.592" endtime="20201115 23:00:05.012"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.014" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.023" endtime="20201115 23:00:05.059"></status>
</kw>
<msg timestamp="20201115 23:00:05.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.021" endtime="20201115 23:00:05.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.060" endtime="20201115 23:00:05.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.063" endtime="20201115 23:00:05.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.019" endtime="20201115 23:00:05.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.016" endtime="20201115 23:00:05.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.072" endtime="20201115 23:00:05.358"></status>
</kw>
<msg timestamp="20201115 23:00:05.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025787389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026135986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.070" endtime="20201115 23:00:05.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025787389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026135986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.362" endtime="20201115 23:00:05.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.370" endtime="20201115 23:00:05.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.068" endtime="20201115 23:00:05.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.066" endtime="20201115 23:00:05.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.377" level="INFO">${RESULT} = [{'time': 0.026135986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003485969999999991, 'source_diff': 0.0003485969999999991}, {'time': 0.026501139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:05.373" endtime="20201115 23:00:05.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.391" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:05.378" endtime="20201115 23:00:05.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.396" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.395" endtime="20201115 23:00:05.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.398" level="INFO">VALUE: [0.0003485969999999991, 0.0003413329999999992, 0.00034470900000000207, 0.00034286099999999986, 0.000343195000000001, 0.0003394309999999977, 0.00034413900000000025, 0.000338403000000001, 0.0003437079999999981, 0.00034040299999999954, 0.0003392359999999997, 0.0003433889999999995, 0.00034436100000000136, 0.00034155500000000033, 0.00034108299999999897, 0.0003394999999999995, 0.0003407920000000064, 0.0003410130000000011, 0.00034268099999999746, 0.00034081899999999915, 0.0003446669999999999, 0.00034361099999999367, 0.00033966700000000183, 0.00034136199999999783, 0.0003396249999999962, 0.0003410140000000006, 0.00034292999999999824, 0.0003383339999999957, 0.00033916700000000133, 0.00034298600000000345, 0.0003424439999999973, 0.00034009699999999754, 0.000338403000000001, 0.00034236099999999936, 0.000338790999999998, 0.0003396520000000028, 0.00034177700000000144, 0.00034419399999999906, 0.000344777999999997, 0.0003401109999999971, 0.00034374999999999684, 0.0003432089999999971, 0.00034137499999999793, 0.0003389449999999933, 0.0003434720000000044, 0.0003413329999999992, 0.00034316700000000533, 0.00034270900000000354, 0.0003401250000000036, 0.000343098]</msg>
<status status="PASS" starttime="20201115 23:00:05.397" endtime="20201115 23:00:05.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.392" endtime="20201115 23:00:05.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.401" endtime="20201115 23:00:05.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.405" endtime="20201115 23:00:05.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.403" endtime="20201115 23:00:05.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.400" endtime="20201115 23:00:05.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.015" endtime="20201115 23:00:05.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.013" endtime="20201115 23:00:05.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.012" endtime="20201115 23:00:05.426"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.429" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.437" endtime="20201115 23:00:05.471"></status>
</kw>
<msg timestamp="20201115 23:00:05.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.435" endtime="20201115 23:00:05.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.473" endtime="20201115 23:00:05.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.476" endtime="20201115 23:00:05.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.433" endtime="20201115 23:00:05.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.431" endtime="20201115 23:00:05.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.485" endtime="20201115 23:00:05.769"></status>
</kw>
<msg timestamp="20201115 23:00:05.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023297278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023647153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.483" endtime="20201115 23:00:05.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023297278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023647153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.773" endtime="20201115 23:00:05.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.781" endtime="20201115 23:00:05.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.481" endtime="20201115 23:00:05.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.479" endtime="20201115 23:00:05.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.788" level="INFO">${RESULT} = [{'time': 0.023647153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003498749999999995, 'source_diff': 0.0003498749999999995}, {'time': 0.024012472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:05.785" endtime="20201115 23:00:05.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.801" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:05.789" endtime="20201115 23:00:05.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.806" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.805" endtime="20201115 23:00:05.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.808" level="INFO">VALUE: [0.0003498749999999995, 0.00033948599999999995, 0.00033954199999999823, 0.0003414170000000001, 0.0003430279999999987, 0.00033958300000000094, 0.00034002799999999916, 0.000343889, 0.00034195799999999985, 0.00034320900000000057, 0.00033997300000000036, 0.00033933400000000016, 0.0003396529999999988, 0.00034413900000000025, 0.0003410840000000019, 0.0003432919999999985, 0.0003435139999999996, 0.0003418620000000018, 0.00034023599999999724, 0.00034244500000000025, 0.0003430829999999975, 0.00034379099999999607, 0.0003408469999999983, 0.000341097999999998, 0.0003442360000000047, 0.00034059699999999804, 0.0003405000000000005, 0.00034069499999999503, 0.00034368099999999846, 0.00034437500000000093, 0.00033826399999999784, 0.0003400139999999996, 0.000339403000000002, 0.000341679999999997, 0.00034468, 0.000341597000000006, 0.00033994400000000174, 0.0003394170000000016, 0.0003445969999999951, 0.0003411380000000047, 0.00034241699999999764, 0.00033904099999999826, 0.0003398329999999977, 0.0003423200000000001, 0.0003391810000000009, 0.00034226400000000184, 0.00034486100000000186, 0.00034058299999999847, 0.0003399720000000009, 0.00034287499999999943]</msg>
<status status="PASS" starttime="20201115 23:00:05.807" endtime="20201115 23:00:05.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.802" endtime="20201115 23:00:05.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.812" endtime="20201115 23:00:05.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.815" endtime="20201115 23:00:05.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.814" endtime="20201115 23:00:05.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.810" endtime="20201115 23:00:05.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.429" endtime="20201115 23:00:05.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.428" endtime="20201115 23:00:05.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.427" endtime="20201115 23:00:05.836"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.839" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.847" endtime="20201115 23:00:05.883"></status>
</kw>
<msg timestamp="20201115 23:00:05.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.846" endtime="20201115 23:00:05.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.885" endtime="20201115 23:00:05.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.887" endtime="20201115 23:00:05.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.843" endtime="20201115 23:00:05.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.841" endtime="20201115 23:00:05.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.896" endtime="20201115 23:00:06.182"></status>
</kw>
<msg timestamp="20201115 23:00:06.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024714292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025071931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.895" endtime="20201115 23:00:06.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024714292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025071931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.186" endtime="20201115 23:00:06.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.194" endtime="20201115 23:00:06.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.892" endtime="20201115 23:00:06.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.890" endtime="20201115 23:00:06.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.201" level="INFO">${RESULT} = [{'time': 0.025071931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003576389999999999, 'source_diff': 0.0003576389999999999}, {'time': 0.025437056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:06.198" endtime="20201115 23:00:06.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.214" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:06.202" endtime="20201115 23:00:06.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.219" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.218" endtime="20201115 23:00:06.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.222" level="INFO">VALUE: [0.0003576389999999999, 0.0003404169999999991, 0.00034440300000000007, 0.00034159699999999904, 0.000340291000000003, 0.00034138900000000097, 0.0003407779999999999, 0.00034154200000000023, 0.00034323600000000024, 0.0003409589999999983, 0.00034419499999999853, 0.00034315199999999935, 0.00033827699999999794, 0.00034148600000000195, 0.0003423330000000002, 0.0003397360000000002, 0.0003405140000000001, 0.0003401529999999993, 0.0003413339999999987, 0.00033919500000000047, 0.0003381809999999999, 0.0003398329999999977, 0.000343889, 0.0003438340000000012, 0.0003386250000000021, 0.0003382359999999987, 0.0003419160000000046, 0.00033919399999999406, 0.00033930599999999755, 0.00034069499999999503, 0.00034187499999999843, 0.00034147199999999545, 0.00034291699999999814, 0.0003394170000000016, 0.0003437780000000029, 0.0003415000000000015, 0.0003380280000000041, 0.0003419859999999955, 0.00034137500000000487, 0.00034224999999999534, 0.0003416529999999973, 0.0003395699999999974, 0.000344374999999994, 0.0003437360000000042, 0.0003425690000000009, 0.00033859699999999604, 0.00033893100000000065, 0.000340597000000005, 0.00034351399999999616, 0.00034365199999999985]</msg>
<status status="PASS" starttime="20201115 23:00:06.220" endtime="20201115 23:00:06.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.215" endtime="20201115 23:00:06.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.225" endtime="20201115 23:00:06.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.229" endtime="20201115 23:00:06.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.227" endtime="20201115 23:00:06.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.223" endtime="20201115 23:00:06.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.840" endtime="20201115 23:00:06.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.838" endtime="20201115 23:00:06.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.837" endtime="20201115 23:00:06.250"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.252" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.260" endtime="20201115 23:00:06.296"></status>
</kw>
<msg timestamp="20201115 23:00:06.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.259" endtime="20201115 23:00:06.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.297" endtime="20201115 23:00:06.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.300" endtime="20201115 23:00:06.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.256" endtime="20201115 23:00:06.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.254" endtime="20201115 23:00:06.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.309" endtime="20201115 23:00:06.595"></status>
</kw>
<msg timestamp="20201115 23:00:06.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023417611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023767319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.307" endtime="20201115 23:00:06.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023417611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023767319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.600" endtime="20201115 23:00:06.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.608" endtime="20201115 23:00:06.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.305" endtime="20201115 23:00:06.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.303" endtime="20201115 23:00:06.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.614" level="INFO">${RESULT} = [{'time': 0.023767319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003497079999999972, 'source_diff': 0.0003497079999999972}, {'time': 0.024132556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:06.611" endtime="20201115 23:00:06.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.628" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:06.615" endtime="20201115 23:00:06.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.632" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.631" endtime="20201115 23:00:06.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.635" level="INFO">VALUE: [0.0003497079999999972, 0.0003388619999999988, 0.00034098600000000145, 0.00034390299999999957, 0.00034165199999999785, 0.0003419440000000003, 0.0003424859999999995, 0.00034377799999999945, 0.0003396810000000014, 0.00034409699999999807, 0.0003432639999999994, 0.00033858299999999994, 0.00034040200000000007, 0.00033906900000000087, 0.0003412079999999991, 0.0003398749999999999, 0.0003404580000000018, 0.0003409309999999992, 0.0003394450000000007, 0.0003409720000000019, 0.0003409719999999984, 0.00034294500000000075, 0.00034054099999999976, 0.0003415000000000015, 0.00034169500000000297, 0.0003415140000000011, 0.00033994400000000174, 0.0003418329999999997, 0.0003407779999999999, 0.0003407500000000008, 0.0003430419999999948, 0.00034193100000000365, 0.00033850000000000546, 0.00034226299999999543, 0.00034086099999999786, 0.0003445279999999967, 0.0003393049999999981, 0.0003416940000000035, 0.00034063899999999675, 0.0003412500000000013, 0.0003397919999999985, 0.0003426249999999992, 0.0003409720000000019, 0.0003445129999999977, 0.00034130599999999955, 0.0003386800000000009, 0.0003385420000000042, 0.00034009800000000395, 0.00034226400000000184, 0.00034258399999999994]</msg>
<status status="PASS" starttime="20201115 23:00:06.633" endtime="20201115 23:00:06.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.629" endtime="20201115 23:00:06.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.638" endtime="20201115 23:00:06.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.642" endtime="20201115 23:00:06.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.640" endtime="20201115 23:00:06.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.636" endtime="20201115 23:00:06.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.253" endtime="20201115 23:00:06.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.251" endtime="20201115 23:00:06.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.250" endtime="20201115 23:00:06.663"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.666" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.674" endtime="20201115 23:00:06.712"></status>
</kw>
<msg timestamp="20201115 23:00:06.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.673" endtime="20201115 23:00:06.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.714" endtime="20201115 23:00:06.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.717" endtime="20201115 23:00:06.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.670" endtime="20201115 23:00:06.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.668" endtime="20201115 23:00:06.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.726" endtime="20201115 23:00:07.012"></status>
</kw>
<msg timestamp="20201115 23:00:07.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027185264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027520194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.724" endtime="20201115 23:00:07.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027185264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027520194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.016" endtime="20201115 23:00:07.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.024" endtime="20201115 23:00:07.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.722" endtime="20201115 23:00:07.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.720" endtime="20201115 23:00:07.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.031" level="INFO">${RESULT} = [{'time': 0.027520194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033493000000000064, 'source_diff': 0.00033493000000000064}, {'time': 0.027885333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:07.028" endtime="20201115 23:00:07.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.045" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:07.032" endtime="20201115 23:00:07.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.050" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.049" endtime="20201115 23:00:07.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.052" level="INFO">VALUE: [0.00033493000000000064, 0.000338500000000002, 0.00034093100000000265, 0.00034048700000000043, 0.000339097, 0.0003424859999999995, 0.00033881899999999715, 0.0003428470000000003, 0.0003393610000000033, 0.0003411390000000007, 0.0003412079999999991, 0.0003439859999999975, 0.0003423469999999998, 0.0003437780000000029, 0.0003385689999999969, 0.0003444999999999976, 0.00033997199999999395, 0.00033837500000000187, 0.00034348600000000395, 0.00034116600000000386, 0.00033916700000000133, 0.0003430690000000014, 0.00034229199999999405, 0.00034186199999999833, 0.00034284799999999976, 0.0003431529999999988, 0.0003400970000000045, 0.0003402500000000003, 0.0003420270000000017, 0.00033908399999999644, 0.0003426109999999996, 0.00033994400000000174, 0.00033847299999999886, 0.00033815300000000076, 0.0003431249999999997, 0.0003445279999999967, 0.0003382499999999983, 0.00034191699999999714, 0.00034002799999999916, 0.0003434579999999979, 0.0003445690000000029, 0.00034284699999999335, 0.00034041699999999564, 0.0003394170000000016, 0.0003385139999999981, 0.0003415000000000015, 0.0003415000000000015, 0.00034130599999999955, 0.00034286099999999986, 0.0003416940000000035]</msg>
<status status="PASS" starttime="20201115 23:00:07.051" endtime="20201115 23:00:07.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.046" endtime="20201115 23:00:07.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.055" endtime="20201115 23:00:07.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.059" endtime="20201115 23:00:07.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.057" endtime="20201115 23:00:07.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.054" endtime="20201115 23:00:07.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.666" endtime="20201115 23:00:07.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.664" endtime="20201115 23:00:07.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.664" endtime="20201115 23:00:07.080"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.082" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.091" endtime="20201115 23:00:07.129"></status>
</kw>
<msg timestamp="20201115 23:00:07.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.089" endtime="20201115 23:00:07.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.131" endtime="20201115 23:00:07.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.133" endtime="20201115 23:00:07.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.087" endtime="20201115 23:00:07.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.084" endtime="20201115 23:00:07.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.143" endtime="20201115 23:00:07.429"></status>
</kw>
<msg timestamp="20201115 23:00:07.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026999514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027342861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.141" endtime="20201115 23:00:07.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026999514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027342861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.433" endtime="20201115 23:00:07.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.441" endtime="20201115 23:00:07.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.138" endtime="20201115 23:00:07.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.136" endtime="20201115 23:00:07.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.448" level="INFO">${RESULT} = [{'time': 0.027342861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003433470000000008, 'source_diff': 0.0003433470000000008}, {'time': 0.027708014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:07.445" endtime="20201115 23:00:07.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.461" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:07.449" endtime="20201115 23:00:07.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.466" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.465" endtime="20201115 23:00:07.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.468" level="INFO">VALUE: [0.0003433470000000008, 0.0003382780000000009, 0.0003416530000000008, 0.0003385560000000003, 0.00034391699999999914, 0.0003401939999999985, 0.00034186099999999886, 0.00034272200000000017, 0.00033898599999999945, 0.00033825000000000174, 0.00034136100000000183, 0.00034033400000000116, 0.00034323599999999677, 0.000338194, 0.00034240299999999807, 0.0003426249999999992, 0.000341000000000001, 0.0003433200000000011, 0.0003441110000000011, 0.00033993100000000165, 0.000338194, 0.0003398329999999977, 0.0003409590000000018, 0.0003405270000000002, 0.0003414720000000024, 0.00033804199999999673, 0.0003421250000000056, 0.00034055600000000574, 0.0003397499999999998, 0.0003443200000000021, 0.0003413889999999975, 0.00033861100000000255, 0.0003444439999999993, 0.0003395830000000044, 0.0003423200000000001, 0.00034440300000000007, 0.00034337499999999993, 0.00034020800000000156, 0.00034293100000000465, 0.0003447079999999991, 0.00034408400000000144, 0.00034122200000000213, 0.0003425690000000009, 0.00033976399999999934, 0.00034031899999999865, 0.00033843100000000015, 0.0003446669999999999, 0.00034337499999999993, 0.0003411799999999965, 0.0003440140000000036]</msg>
<status status="PASS" starttime="20201115 23:00:07.467" endtime="20201115 23:00:07.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.462" endtime="20201115 23:00:07.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.471" endtime="20201115 23:00:07.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.475" endtime="20201115 23:00:07.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.473" endtime="20201115 23:00:07.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.470" endtime="20201115 23:00:07.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.083" endtime="20201115 23:00:07.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.081" endtime="20201115 23:00:07.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.080" endtime="20201115 23:00:07.496"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.499" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.507" endtime="20201115 23:00:07.543"></status>
</kw>
<msg timestamp="20201115 23:00:07.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.505" endtime="20201115 23:00:07.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.544" endtime="20201115 23:00:07.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.548" endtime="20201115 23:00:07.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.503" endtime="20201115 23:00:07.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.501" endtime="20201115 23:00:07.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.559" endtime="20201115 23:00:07.848"></status>
</kw>
<msg timestamp="20201115 23:00:07.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022950153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023297583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.558" endtime="20201115 23:00:07.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022950153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023297583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.852" endtime="20201115 23:00:07.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.860" endtime="20201115 23:00:07.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.555" endtime="20201115 23:00:07.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.553" endtime="20201115 23:00:07.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.867" level="INFO">${RESULT} = [{'time': 0.023297583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034742999999999927, 'source_diff': 0.00034742999999999927}, {'time': 0.023662944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:07.864" endtime="20201115 23:00:07.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.880" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:07.868" endtime="20201115 23:00:07.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.885" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.884" endtime="20201115 23:00:07.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.887" level="INFO">VALUE: [0.00034742999999999927, 0.00034400000000000056, 0.00034040200000000007, 0.0003405559999999988, 0.0003394309999999977, 0.0003402230000000006, 0.00034273599999999974, 0.0003406110000000011, 0.00034495899999999885, 0.00034290300000000204, 0.00034086100000000133, 0.00034313899999999925, 0.0003407360000000012, 0.00033933400000000016, 0.0003439720000000014, 0.0003448339999999987, 0.00034433299999999875, 0.00034368099999999846, 0.0003428470000000003, 0.0003408329999999987, 0.00034354199999999877, 0.0003432079999999976, 0.0003397780000000024, 0.000343194000000005, 0.0003421529999999978, 0.00034298600000000345, 0.0003392499999999993, 0.0003407230000000011, 0.000342485999999996, 0.0003441250000000007, 0.0003413889999999975, 0.0003411810000000029, 0.0003439309999999987, 0.0003442500000000043, 0.00034166700000000383, 0.0003425279999999947, 0.00034195899999999585, 0.0003437079999999981, 0.0003402779999999994, 0.0003419030000000045, 0.0003440419999999958, 0.00034086099999999786, 0.00034213899999999825, 0.0003447089999999986, 0.0003410689999999994, 0.00034113899999999725, 0.0003442500000000043, 0.000342485999999996, 0.00034266700000000483, 0.00034022200000000113]</msg>
<status status="PASS" starttime="20201115 23:00:07.886" endtime="20201115 23:00:07.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.881" endtime="20201115 23:00:07.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.890" endtime="20201115 23:00:07.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.894" endtime="20201115 23:00:07.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.892" endtime="20201115 23:00:07.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.889" endtime="20201115 23:00:07.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.499" endtime="20201115 23:00:07.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.497" endtime="20201115 23:00:07.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.496" endtime="20201115 23:00:07.915"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.917" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.926" endtime="20201115 23:00:07.962"></status>
</kw>
<msg timestamp="20201115 23:00:07.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.925" endtime="20201115 23:00:07.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.964" endtime="20201115 23:00:07.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.966" endtime="20201115 23:00:07.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.922" endtime="20201115 23:00:07.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.919" endtime="20201115 23:00:07.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.976" endtime="20201115 23:00:08.262"></status>
</kw>
<msg timestamp="20201115 23:00:08.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026139931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026476708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.974" endtime="20201115 23:00:08.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026139931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026476708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.266" endtime="20201115 23:00:08.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.274" endtime="20201115 23:00:08.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.972" endtime="20201115 23:00:08.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.970" endtime="20201115 23:00:08.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:08.281" level="INFO">${RESULT} = [{'time': 0.026476708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003367769999999999, 'source_diff': 0.0003367769999999999}, {'time': 0.026841625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:08.277" endtime="20201115 23:00:08.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:08.294" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:08.282" endtime="20201115 23:00:08.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.298" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:00:08.297" endtime="20201115 23:00:08.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.301" level="INFO">VALUE: [0.0003367769999999999, 0.0003403190000000021, 0.0003382220000000026, 0.0003385969999999995, 0.00034429100000000004, 0.0003413469999999988, 0.00033851400000000156, 0.0003419719999999994, 0.0003436110000000006, 0.00034034800000000073, 0.000339097, 0.00033913799999999925, 0.0003435279999999992, 0.00034115199999999735, 0.0003436669999999989, 0.00034284799999999976, 0.0003402360000000007, 0.000341194000000003, 0.00034258300000000047, 0.00034454200000000323, 0.00034408299999999503, 0.0003408469999999983, 0.00034143100000000315, 0.00033904099999999826, 0.00034330600000000155, 0.0003409030000000035, 0.000339194000000001, 0.00033984700000000423, 0.00034341599999999917, 0.0003402500000000003, 0.0003406669999999959, 0.0003411109999999981, 0.0003398469999999973, 0.00034033400000000463, 0.0003393329999999972, 0.00034305500000000183, 0.00034026300000000037, 0.0003420560000000003, 0.0003384860000000059, 0.0003380840000000024, 0.0003438200000000016, 0.0003406529999999963, 0.0003401520000000033, 0.0003422500000000023, 0.0003391249999999957, 0.00034038900000000344, 0.00034076400000000034, 0.00034401399999999666, 0.0003407500000000008, 0.00033981899999999815]</msg>
<status status="PASS" starttime="20201115 23:00:08.300" endtime="20201115 23:00:08.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.295" endtime="20201115 23:00:08.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.304" endtime="20201115 23:00:08.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:08.308" endtime="20201115 23:00:08.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.306" endtime="20201115 23:00:08.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.302" endtime="20201115 23:00:08.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.918" endtime="20201115 23:00:08.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.916" endtime="20201115 23:00:08.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.915" endtime="20201115 23:00:08.329"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.332" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.340" endtime="20201115 23:00:08.375"></status>
</kw>
<msg timestamp="20201115 23:00:08.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.338" endtime="20201115 23:00:08.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.377" endtime="20201115 23:00:08.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.379" endtime="20201115 23:00:08.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.336" endtime="20201115 23:00:08.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.334" endtime="20201115 23:00:08.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.388" endtime="20201115 23:00:08.675"></status>
</kw>
<msg timestamp="20201115 23:00:08.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024292347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024628278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.387" endtime="20201115 23:00:08.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024292347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024628278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.679" endtime="20201115 23:00:08.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.688" endtime="20201115 23:00:08.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.384" endtime="20201115 23:00:08.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.383" endtime="20201115 23:00:08.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:08.694" level="INFO">${RESULT} = [{'time': 0.024628278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003359310000000011, 'source_diff': 0.0003359310000000011}, {'time': 0.024993486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:08.691" endtime="20201115 23:00:08.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:08.709" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:08.695" endtime="20201115 23:00:08.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.713" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:00:08.712" endtime="20201115 23:00:08.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.716" level="INFO">VALUE: [0.0003359310000000011, 0.00034, 0.0003421249999999987, 0.0003431530000000023, 0.000343791999999999, 0.00033856900000000037, 0.00034231900000000065, 0.00034112500000000115, 0.00033941599999999864, 0.00034140300000000054, 0.00033976399999999934, 0.00034386100000000086, 0.00034177699999999797, 0.0003447079999999991, 0.00034368100000000193, 0.0003410269999999972, 0.0003386519999999983, 0.0003421390000000017, 0.00034062500000000065, 0.00034223599999999924, 0.00034340299999999907, 0.00033944400000000124, 0.0003431110000000001, 0.0003427230000000031, 0.0003439439999999988, 0.00034176400000000134, 0.0003388339999999962, 0.0003427500000000028, 0.00034369399999999856, 0.00033819499999999947, 0.00034030599999999855, 0.00034345899999999735, 0.0003415689999999999, 0.0003445140000000041, 0.0003436529999999993, 0.00033902799999999816, 0.0003389160000000016, 0.00033880599999999705, 0.00034048700000000043, 0.00033834700000000273, 0.0003389170000000011, 0.000341791000000001, 0.00034436100000000136, 0.0003438050000000026, 0.0003386250000000021, 0.0003409579999999954, 0.00033888900000000194, 0.00033904199999999773, 0.00033956900000000484, 0.00034126300000000137]</msg>
<status status="PASS" starttime="20201115 23:00:08.714" endtime="20201115 23:00:08.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.710" endtime="20201115 23:00:08.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.719" endtime="20201115 23:00:08.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:08.723" endtime="20201115 23:00:08.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.721" endtime="20201115 23:00:08.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.718" endtime="20201115 23:00:08.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.332" endtime="20201115 23:00:08.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.330" endtime="20201115 23:00:08.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.330" endtime="20201115 23:00:08.744"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.746" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.755" endtime="20201115 23:00:08.792"></status>
</kw>
<msg timestamp="20201115 23:00:08.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.753" endtime="20201115 23:00:08.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.794" endtime="20201115 23:00:08.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.796" endtime="20201115 23:00:08.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.751" endtime="20201115 23:00:08.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.749" endtime="20201115 23:00:08.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.805" endtime="20201115 23:00:09.090"></status>
</kw>
<msg timestamp="20201115 23:00:09.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026041625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026396931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.804" endtime="20201115 23:00:09.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026041625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026396931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.094" endtime="20201115 23:00:09.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.102" endtime="20201115 23:00:09.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.801" endtime="20201115 23:00:09.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.799" endtime="20201115 23:00:09.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.109" level="INFO">${RESULT} = [{'time': 0.026396931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003553059999999997, 'source_diff': 0.0003553059999999997}, {'time': 0.02676225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:09.106" endtime="20201115 23:00:09.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.122" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:09.110" endtime="20201115 23:00:09.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.127" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.126" endtime="20201115 23:00:09.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.130" level="INFO">VALUE: [0.0003553059999999997, 0.000341097000000002, 0.00034011200000000005, 0.00033994499999999775, 0.00034427799999999995, 0.00034226400000000184, 0.00034116699999999986, 0.00034327700000000294, 0.00034138900000000097, 0.00034131899999999965, 0.0003389719999999999, 0.0003432639999999994, 0.00033958300000000094, 0.00033898699999999893, 0.0003445140000000006, 0.0003399439999999948, 0.0003382499999999983, 0.0003405979999999975, 0.0003399590000000008, 0.00034252800000000166, 0.0003442079999999986, 0.00034252800000000166, 0.00033830599999999655, 0.0003389030000000015, 0.00034352800000000266, 0.000342777999999995, 0.00034136099999999836, 0.0003389030000000015, 0.0003445690000000029, 0.0003403889999999965, 0.00033855600000000374, 0.00034276300000000287, 0.0003398469999999973, 0.00034251399999999516, 0.00034287499999999943, 0.00033854199999999723, 0.00034322200000000413, 0.0003411659999999969, 0.00034090200000000404, 0.00033936200000000277, 0.0003399580000000013, 0.00033936099999999636, 0.0003447360000000052, 0.0003443890000000005, 0.0003430409999999953, 0.0003442779999999965, 0.0003396109999999966, 0.0003417360000000022, 0.0003417500000000018, 0.000340403000000003]</msg>
<status status="PASS" starttime="20201115 23:00:09.128" endtime="20201115 23:00:09.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.123" endtime="20201115 23:00:09.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.133" endtime="20201115 23:00:09.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.136" endtime="20201115 23:00:09.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.135" endtime="20201115 23:00:09.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.131" endtime="20201115 23:00:09.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.747" endtime="20201115 23:00:09.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.745" endtime="20201115 23:00:09.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.744" endtime="20201115 23:00:09.158"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.160" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.168" endtime="20201115 23:00:09.204"></status>
</kw>
<msg timestamp="20201115 23:00:09.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.167" endtime="20201115 23:00:09.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.205" endtime="20201115 23:00:09.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.208" endtime="20201115 23:00:09.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.164" endtime="20201115 23:00:09.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.162" endtime="20201115 23:00:09.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.217" endtime="20201115 23:00:09.501"></status>
</kw>
<msg timestamp="20201115 23:00:09.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024563028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024912875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.215" endtime="20201115 23:00:09.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024563028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024912875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.505" endtime="20201115 23:00:09.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.514" endtime="20201115 23:00:09.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.213" endtime="20201115 23:00:09.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.211" endtime="20201115 23:00:09.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.520" level="INFO">${RESULT} = [{'time': 0.024912875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034984700000000035, 'source_diff': 0.00034984700000000035}, {'time': 0.025278042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:09.517" endtime="20201115 23:00:09.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.534" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:09.521" endtime="20201115 23:00:09.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.538" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.537" endtime="20201115 23:00:09.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.541" level="INFO">VALUE: [0.00034984700000000035, 0.00033816700000000033, 0.0003427499999999993, 0.00034318099999999796, 0.0003396390000000027, 0.00034002799999999916, 0.0003432919999999985, 0.0003381659999999974, 0.00033834700000000273, 0.0003441529999999998, 0.0003432499999999998, 0.00033879200000000095, 0.0003417920000000005, 0.0003430140000000026, 0.0003409309999999992, 0.00034204200000000073, 0.00034098600000000145, 0.0003407779999999999, 0.00033962499999999965, 0.00033922200000000013, 0.0003382359999999987, 0.000343679999999999, 0.0003390689999999974, 0.00033905500000000477, 0.00033954199999999823, 0.00034002799999999916, 0.00034048600000000095, 0.0003427360000000032, 0.0003429859999999965, 0.0003395979999999965, 0.00033826399999999784, 0.0003440560000000023, 0.0003418469999999993, 0.0003418469999999993, 0.00034072299999999417, 0.00034159699999999904, 0.0003422089999999961, 0.00034469399999999956, 0.00034461099999999467, 0.00034040299999999607, 0.00033852799999999766, 0.00033908299999999697, 0.00034302800000000216, 0.0003397360000000002, 0.00033961100000000355, 0.00034202800000000116, 0.0003443330000000022, 0.00034274999999999584, 0.00033858399999999594, 0.000343791000000003]</msg>
<status status="PASS" starttime="20201115 23:00:09.539" endtime="20201115 23:00:09.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.535" endtime="20201115 23:00:09.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.544" endtime="20201115 23:00:09.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.547" endtime="20201115 23:00:09.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.546" endtime="20201115 23:00:09.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.542" endtime="20201115 23:00:09.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.161" endtime="20201115 23:00:09.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.159" endtime="20201115 23:00:09.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.158" endtime="20201115 23:00:09.569"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.571" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.579" endtime="20201115 23:00:09.620"></status>
</kw>
<msg timestamp="20201115 23:00:09.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.578" endtime="20201115 23:00:09.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.621" endtime="20201115 23:00:09.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.624" endtime="20201115 23:00:09.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.575" endtime="20201115 23:00:09.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.573" endtime="20201115 23:00:09.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.633" endtime="20201115 23:00:09.919"></status>
</kw>
<msg timestamp="20201115 23:00:09.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025440125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025800056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.632" endtime="20201115 23:00:09.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025440125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025800056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.923" endtime="20201115 23:00:09.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.936" endtime="20201115 23:00:09.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.629" endtime="20201115 23:00:09.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.627" endtime="20201115 23:00:09.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.942" level="INFO">${RESULT} = [{'time': 0.025800056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035993099999999736, 'source_diff': 0.00035993099999999736}, {'time': 0.026165153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:09.939" endtime="20201115 23:00:09.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.956" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:09.943" endtime="20201115 23:00:09.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.960" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.959" endtime="20201115 23:00:09.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.963" level="INFO">VALUE: [0.00035993099999999736, 0.00033969500000000097, 0.00034433299999999875, 0.00034094499999999875, 0.00034179099999999754, 0.00034084800000000123, 0.0003401389999999997, 0.00034468099999999946, 0.00034413900000000025, 0.00033894400000000074, 0.0003423050000000011, 0.0003434440000000018, 0.0003397640000000028, 0.0003381529999999973, 0.0003413329999999992, 0.00034297199999999695, 0.0003398049999999986, 0.00034280499999999464, 0.00034306899999999446, 0.00034422299999999767, 0.00034013899999999625, 0.0003413050000000001, 0.00033888900000000194, 0.00034202800000000116, 0.00033934700000000373, 0.0003447219999999987, 0.00034058399999999794, 0.00034102800000000016, 0.00034081899999999915, 0.0003434579999999979, 0.0003441110000000011, 0.0003435140000000031, 0.00034004199999999873, 0.00034136199999999783, 0.00034140299999999707, 0.00033894400000000074, 0.0003428340000000002, 0.000339403000000002, 0.00034172299999999517, 0.0003407500000000008, 0.0003399450000000012, 0.00034148600000000195, 0.0003436669999999989, 0.0003407919999999995, 0.0003415000000000015, 0.00034336100000000036, 0.000338888999999995, 0.00034463900000000075, 0.0003382770000000049, 0.0003411109999999981]</msg>
<status status="PASS" starttime="20201115 23:00:09.961" endtime="20201115 23:00:09.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.956" endtime="20201115 23:00:09.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.966" endtime="20201115 23:00:09.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.969" endtime="20201115 23:00:09.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.968" endtime="20201115 23:00:09.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.964" endtime="20201115 23:00:09.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.572" endtime="20201115 23:00:09.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.570" endtime="20201115 23:00:09.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.569" endtime="20201115 23:00:09.990"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.993" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.001" endtime="20201115 23:00:10.038"></status>
</kw>
<msg timestamp="20201115 23:00:10.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.000" endtime="20201115 23:00:10.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.040" endtime="20201115 23:00:10.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.042" endtime="20201115 23:00:10.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.997" endtime="20201115 23:00:10.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.995" endtime="20201115 23:00:10.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.052" endtime="20201115 23:00:10.349"></status>
</kw>
<msg timestamp="20201115 23:00:10.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025635889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025986958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.050" endtime="20201115 23:00:10.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025635889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025986958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.358" endtime="20201115 23:00:10.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.376" endtime="20201115 23:00:10.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.047" endtime="20201115 23:00:10.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.045" endtime="20201115 23:00:10.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.390" level="INFO">${RESULT} = [{'time': 0.025986958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035106900000000246, 'source_diff': 0.00035106900000000246}, {'time': 0.026352153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:10.384" endtime="20201115 23:00:10.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.404" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:10.391" endtime="20201115 23:00:10.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.409" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.408" endtime="20201115 23:00:10.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.411" level="INFO">VALUE: [0.00035106900000000246, 0.0003426109999999996, 0.00033934700000000026, 0.0003405140000000001, 0.000338999999999999, 0.00034123599999999824, 0.0003447639999999974, 0.0003441250000000007, 0.00034126400000000084, 0.0003440279999999997, 0.0003387779999999979, 0.0003445410000000003, 0.0003417499999999983, 0.0003382499999999983, 0.0003415970000000025, 0.0003439859999999975, 0.00034126400000000084, 0.00034441699999999964, 0.0003395559999999978, 0.00033952799999999866, 0.0003444720000000054, 0.0003397499999999998, 0.0003408199999999986, 0.00033922200000000013, 0.00034381900000000215, 0.00034098600000000145, 0.00034358300000000147, 0.0003429309999999977, 0.0003443189999999957, 0.000338999999999999, 0.00033942999999999474, 0.00034287499999999943, 0.0003402360000000007, 0.0003393329999999972, 0.0003415140000000011, 0.00033955499999999833, 0.0003389450000000002, 0.0003431529999999988, 0.00034263899999999875, 0.0003443200000000021, 0.000341194000000003, 0.00033940200000000253, 0.0003397499999999998, 0.00034015300000000276, 0.00034123599999999477, 0.0003436110000000006, 0.00033955600000000474, 0.000341292, 0.00034202800000000116, 0.0003442079999999986]</msg>
<status status="PASS" starttime="20201115 23:00:10.410" endtime="20201115 23:00:10.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.405" endtime="20201115 23:00:10.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.415" endtime="20201115 23:00:10.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.418" endtime="20201115 23:00:10.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.417" endtime="20201115 23:00:10.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.413" endtime="20201115 23:00:10.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.993" endtime="20201115 23:00:10.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.992" endtime="20201115 23:00:10.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.991" endtime="20201115 23:00:10.439"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.442" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.450" endtime="20201115 23:00:10.485"></status>
</kw>
<msg timestamp="20201115 23:00:10.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.448" endtime="20201115 23:00:10.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.486" endtime="20201115 23:00:10.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.489" endtime="20201115 23:00:10.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.446" endtime="20201115 23:00:10.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.444" endtime="20201115 23:00:10.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.499" endtime="20201115 23:00:10.784"></status>
</kw>
<msg timestamp="20201115 23:00:10.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023882917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024232236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.497" endtime="20201115 23:00:10.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023882917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024232236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.788" endtime="20201115 23:00:10.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.796" endtime="20201115 23:00:10.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.494" endtime="20201115 23:00:10.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.493" endtime="20201115 23:00:10.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.803" level="INFO">${RESULT} = [{'time': 0.024232236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003493190000000007, 'source_diff': 0.0003493190000000007}, {'time': 0.024597681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:10.800" endtime="20201115 23:00:10.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.816" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:10.804" endtime="20201115 23:00:10.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.821" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.820" endtime="20201115 23:00:10.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.823" level="INFO">VALUE: [0.0003493190000000007, 0.0003436250000000002, 0.00033869499999999997, 0.00034327700000000294, 0.0003394590000000003, 0.00034373600000000074, 0.0003391390000000022, 0.0003396529999999988, 0.0003448189999999997, 0.0003440829999999985, 0.0003397360000000002, 0.0003448189999999997, 0.0003434439999999983, 0.00034223599999999924, 0.00034118099999999943, 0.00034331999999999765, 0.0003396390000000027, 0.0003426530000000018, 0.00034013800000000025, 0.0003436669999999989, 0.00034409700000000154, 0.0003404999999999936, 0.00034245899999999635, 0.00034237499999999893, 0.00034469499999999903, 0.000342403000000005, 0.0003402779999999994, 0.00034272200000000363, 0.0003396940000000015, 0.00033976399999999934, 0.000340387999999997, 0.0003426249999999992, 0.0003435980000000005, 0.0003401529999999958, 0.00034474999999999784, 0.0003441110000000011, 0.00033937500000000287, 0.0003414019999999976, 0.0003401810000000019, 0.0003440130000000041, 0.000341791000000001, 0.00034169500000000297, 0.0003385699999999964, 0.00033848599999999895, 0.000341292, 0.0003439309999999987, 0.00033906900000000434, 0.0003386800000000009, 0.000340888999999997, 0.0003441810000000059]</msg>
<status status="PASS" starttime="20201115 23:00:10.822" endtime="20201115 23:00:10.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.817" endtime="20201115 23:00:10.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.826" endtime="20201115 23:00:10.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.830" endtime="20201115 23:00:10.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.828" endtime="20201115 23:00:10.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.825" endtime="20201115 23:00:10.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.442" endtime="20201115 23:00:10.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.441" endtime="20201115 23:00:10.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.440" endtime="20201115 23:00:10.851"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.853" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.862" endtime="20201115 23:00:10.897"></status>
</kw>
<msg timestamp="20201115 23:00:10.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.861" endtime="20201115 23:00:10.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.898" endtime="20201115 23:00:10.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.901" endtime="20201115 23:00:10.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.858" endtime="20201115 23:00:10.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.855" endtime="20201115 23:00:10.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.910" endtime="20201115 23:00:11.197"></status>
</kw>
<msg timestamp="20201115 23:00:11.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023933181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024277931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.908" endtime="20201115 23:00:11.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023933181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024277931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.201" endtime="20201115 23:00:11.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.209" endtime="20201115 23:00:11.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.906" endtime="20201115 23:00:11.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.904" endtime="20201115 23:00:11.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.215" level="INFO">${RESULT} = [{'time': 0.024277931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034474999999999784, 'source_diff': 0.00034474999999999784}, {'time': 0.024642986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:11.212" endtime="20201115 23:00:11.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.229" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:11.216" endtime="20201115 23:00:11.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.233" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.232" endtime="20201115 23:00:11.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.236" level="INFO">VALUE: [0.00034474999999999784, 0.00034383299999999825, 0.0003417500000000018, 0.00034120900000000204, 0.00033869499999999997, 0.0003440829999999985, 0.0003419170000000006, 0.0003421940000000005, 0.0003380420000000002, 0.0003431529999999988, 0.0003394999999999995, 0.00033920800000000056, 0.0003416949999999995, 0.00033894400000000074, 0.0003381800000000004, 0.0003399719999999974, 0.00034040200000000007, 0.00033825000000000174, 0.00034350000000000006, 0.0003426109999999996, 0.00034205500000000083, 0.00034173599999999527, 0.0003380830000000029, 0.00034248600000000295, 0.00034320800000000456, 0.00033987500000000337, 0.0003433329999999943, 0.00034208399999999944, 0.00034080599999999905, 0.0003397360000000002, 0.00034151399999999416, 0.0003423330000000002, 0.0003385139999999981, 0.0003407919999999995, 0.0003411659999999969, 0.00034463900000000075, 0.00034409700000000154, 0.0003387640000000053, 0.0003389580000000003, 0.0003444729999999979, 0.0003381390000000012, 0.0003420699999999999, 0.0003442910000000035, 0.00034102800000000016, 0.0003438749999999935, 0.00034161100000000555, 0.0003445140000000041, 0.0003429439999999978, 0.0003429449999999973, 0.00034345899999999735]</msg>
<status status="PASS" starttime="20201115 23:00:11.234" endtime="20201115 23:00:11.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.229" endtime="20201115 23:00:11.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.239" endtime="20201115 23:00:11.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.242" endtime="20201115 23:00:11.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.241" endtime="20201115 23:00:11.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.237" endtime="20201115 23:00:11.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.854" endtime="20201115 23:00:11.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.852" endtime="20201115 23:00:11.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.851" endtime="20201115 23:00:11.264"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.266" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.275" endtime="20201115 23:00:11.309"></status>
</kw>
<msg timestamp="20201115 23:00:11.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.273" endtime="20201115 23:00:11.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.311" endtime="20201115 23:00:11.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.313" endtime="20201115 23:00:11.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.270" endtime="20201115 23:00:11.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.268" endtime="20201115 23:00:11.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.323" endtime="20201115 23:00:11.609"></status>
</kw>
<msg timestamp="20201115 23:00:11.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023762264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024108875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.321" endtime="20201115 23:00:11.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023762264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024108875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.613" endtime="20201115 23:00:11.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.621" endtime="20201115 23:00:11.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.318" endtime="20201115 23:00:11.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.317" endtime="20201115 23:00:11.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.628" level="INFO">${RESULT} = [{'time': 0.024108875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034661099999999667, 'source_diff': 0.00034661099999999667}, {'time': 0.024474333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:11.624" endtime="20201115 23:00:11.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.641" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:11.629" endtime="20201115 23:00:11.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.645" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.644" endtime="20201115 23:00:11.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.648" level="INFO">VALUE: [0.00034661099999999667, 0.000343986000000001, 0.0003400130000000001, 0.000339306000000001, 0.0003404720000000014, 0.0003401389999999997, 0.00033862499999999865, 0.00034226400000000184, 0.00034008300000000144, 0.00034350000000000006, 0.00034286099999999986, 0.0003449859999999985, 0.00033938900000000244, 0.00033895799999999685, 0.0003424719999999999, 0.0003421530000000013, 0.00034218100000000043, 0.0003389719999999999, 0.00033852800000000113, 0.00033967999999999846, 0.00033931899999999765, 0.0003444020000000006, 0.0003421249999999987, 0.0003399300000000022, 0.0003382920000000039, 0.000338597000000003, 0.00034248600000000295, 0.00034319399999999806, 0.000339291999999998, 0.00034379199999999555, 0.00033902799999999816, 0.00034229199999999405, 0.00034374999999999684, 0.00033854199999999723, 0.00033965199999999585, 0.00033983400000000413, 0.00034127700000000094, 0.0003442219999999982, 0.00034205500000000083, 0.00034152800000000066, 0.0003433050000000021, 0.00033820799999999956, 0.0003400269999999997, 0.0003432780000000024, 0.00033998600000000045, 0.0003442219999999982, 0.00034140299999999707, 0.0003412639999999939, 0.00034452800000000366, 0.00034248600000000295]</msg>
<status status="PASS" starttime="20201115 23:00:11.646" endtime="20201115 23:00:11.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.642" endtime="20201115 23:00:11.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.651" endtime="20201115 23:00:11.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.655" endtime="20201115 23:00:11.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.653" endtime="20201115 23:00:11.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.650" endtime="20201115 23:00:11.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.267" endtime="20201115 23:00:11.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.265" endtime="20201115 23:00:11.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.264" endtime="20201115 23:00:11.676"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.679" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.687" endtime="20201115 23:00:11.726"></status>
</kw>
<msg timestamp="20201115 23:00:11.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.685" endtime="20201115 23:00:11.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.728" endtime="20201115 23:00:11.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.731" endtime="20201115 23:00:11.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.683" endtime="20201115 23:00:11.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.681" endtime="20201115 23:00:11.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.741" endtime="20201115 23:00:12.026"></status>
</kw>
<msg timestamp="20201115 23:00:12.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028048583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028391375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.739" endtime="20201115 23:00:12.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028048583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028391375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.030" endtime="20201115 23:00:12.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.039" endtime="20201115 23:00:12.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.736" endtime="20201115 23:00:12.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.734" endtime="20201115 23:00:12.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.045" level="INFO">${RESULT} = [{'time': 0.028391375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003427920000000015, 'source_diff': 0.0003427920000000015}, {'time': 0.028756667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:12.042" endtime="20201115 23:00:12.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.060" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:12.046" endtime="20201115 23:00:12.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.064" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.063" endtime="20201115 23:00:12.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.067" level="INFO">VALUE: [0.0003427920000000015, 0.00034440300000000007, 0.0003431110000000001, 0.0003383480000000022, 0.00034427799999999995, 0.0003415139999999976, 0.00034048600000000095, 0.00033976399999999934, 0.00034233299999999675, 0.00034020800000000156, 0.0003401529999999958, 0.000338403000000001, 0.00034330499999999514, 0.00034444400000000625, 0.0003397919999999985, 0.00034170900000000254, 0.00034080599999999905, 0.0003390559999999973, 0.00033922200000000013, 0.0003393060000000045, 0.0003424999999999956, 0.00034401399999999666, 0.0003447219999999987, 0.00033887500000000237, 0.0003446250000000012, 0.0003402909999999995, 0.00033852799999999766, 0.0003395139999999991, 0.00034036099999999736, 0.00034231900000000065, 0.0003383480000000022, 0.0003412370000000012, 0.000338597000000003, 0.0003442219999999982, 0.0003399720000000009, 0.00034131899999999965, 0.00034072200000000163, 0.0003446530000000003, 0.00034108399999999844, 0.0003444309999999992, 0.00034368099999999846, 0.0003424720000000034, 0.0003401109999999971, 0.00034258399999999994, 0.0003446389999999938, 0.0003408049999999996, 0.00034442999999999974, 0.00034480499999999664, 0.0003414439999999963, 0.00033838900000000144]</msg>
<status status="PASS" starttime="20201115 23:00:12.065" endtime="20201115 23:00:12.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.061" endtime="20201115 23:00:12.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.070" endtime="20201115 23:00:12.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.074" endtime="20201115 23:00:12.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.072" endtime="20201115 23:00:12.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.069" endtime="20201115 23:00:12.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.679" endtime="20201115 23:00:12.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.677" endtime="20201115 23:00:12.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.676" endtime="20201115 23:00:12.095"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.098" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.106" endtime="20201115 23:00:12.144"></status>
</kw>
<msg timestamp="20201115 23:00:12.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.104" endtime="20201115 23:00:12.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.145" endtime="20201115 23:00:12.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.148" endtime="20201115 23:00:12.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.102" endtime="20201115 23:00:12.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.100" endtime="20201115 23:00:12.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.157" endtime="20201115 23:00:12.443"></status>
</kw>
<msg timestamp="20201115 23:00:12.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026054125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026408194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.155" endtime="20201115 23:00:12.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026054125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026408194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.447" endtime="20201115 23:00:12.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.455" endtime="20201115 23:00:12.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.153" endtime="20201115 23:00:12.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.151" endtime="20201115 23:00:12.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.461" level="INFO">${RESULT} = [{'time': 0.026408194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003540689999999985, 'source_diff': 0.0003540689999999985}, {'time': 0.026773431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:12.458" endtime="20201115 23:00:12.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.475" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:12.463" endtime="20201115 23:00:12.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.480" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.479" endtime="20201115 23:00:12.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.482" level="INFO">VALUE: [0.0003540689999999985, 0.0003436950000000015, 0.0003403750000000004, 0.0003394439999999978, 0.0003419589999999993, 0.00034336100000000036, 0.00034461099999999814, 0.00034352800000000266, 0.0003406659999999999, 0.00034173599999999874, 0.0003435700000000014, 0.00033852800000000113, 0.0003425979999999995, 0.0003393879999999995, 0.0003427089999999966, 0.000339888999999996, 0.0003403889999999965, 0.00034091699999999614, 0.00034308300000000097, 0.00034076300000000087, 0.00034105499999999983, 0.0003392909999999985, 0.0003448189999999962, 0.000344889000000001, 0.0003398049999999986, 0.0003437089999999976, 0.00033854099999999776, 0.00033854099999999776, 0.00034198700000000193, 0.0003401520000000033, 0.00033998600000000045, 0.0003447920000000035, 0.0003439729999999974, 0.00033972200000000063, 0.00034020900000000104, 0.0003427219999999967, 0.0003417360000000022, 0.000338612000000002, 0.00034241599999999817, 0.0003402219999999942, 0.00033909699999999654, 0.0003396940000000015, 0.00034440300000000007, 0.0003418469999999993, 0.0003395269999999992, 0.0003420140000000016, 0.00034190299999999757, 0.0003406669999999959, 0.00034423599999999777, 0.0003414160000000041]</msg>
<status status="PASS" starttime="20201115 23:00:12.481" endtime="20201115 23:00:12.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.476" endtime="20201115 23:00:12.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.485" endtime="20201115 23:00:12.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.489" endtime="20201115 23:00:12.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.487" endtime="20201115 23:00:12.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.484" endtime="20201115 23:00:12.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.098" endtime="20201115 23:00:12.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.096" endtime="20201115 23:00:12.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.095" endtime="20201115 23:00:12.510"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.512" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.521" endtime="20201115 23:00:12.555"></status>
</kw>
<msg timestamp="20201115 23:00:12.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.519" endtime="20201115 23:00:12.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.557" endtime="20201115 23:00:12.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.560" endtime="20201115 23:00:12.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.517" endtime="20201115 23:00:12.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.514" endtime="20201115 23:00:12.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.569" endtime="20201115 23:00:12.855"></status>
</kw>
<msg timestamp="20201115 23:00:12.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023045556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023390653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.567" endtime="20201115 23:00:12.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023045556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023390653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.859" endtime="20201115 23:00:12.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.868" endtime="20201115 23:00:12.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.565" endtime="20201115 23:00:12.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.563" endtime="20201115 23:00:12.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.874" level="INFO">${RESULT} = [{'time': 0.023390653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034509700000000254, 'source_diff': 0.00034509700000000254}, {'time': 0.023755806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:12.871" endtime="20201115 23:00:12.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.888" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:12.875" endtime="20201115 23:00:12.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.892" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.891" endtime="20201115 23:00:12.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.895" level="INFO">VALUE: [0.00034509700000000254, 0.00034119500000000247, 0.0003441379999999973, 0.00034204200000000073, 0.0003399299999999987, 0.0003427080000000006, 0.00034086100000000133, 0.0003386529999999978, 0.0003427639999999989, 0.00034392999999999924, 0.0003431110000000001, 0.0003437219999999977, 0.00034255499999999786, 0.0003422500000000023, 0.0003414719999999989, 0.000338597999999999, 0.0003407499999999973, 0.0003399160000000026, 0.000339306000000001, 0.0003392369999999992, 0.0003393610000000033, 0.00034369499999999803, 0.00034391699999999567, 0.00034441699999999964, 0.00034440300000000007, 0.00034054099999999976, 0.0003432089999999971, 0.0003443200000000021, 0.00034069500000000197, 0.0003417500000000018, 0.0003414019999999976, 0.0003401109999999971, 0.0003439449999999983, 0.0003401669999999954, 0.0003419720000000029, 0.0003424999999999956, 0.00033805500000000377, 0.0003426810000000044, 0.00034137499999999793, 0.0003413329999999992, 0.0003428329999999938, 0.00034326299999999643, 0.0003394999999999995, 0.00034430499999999614, 0.00034358300000000147, 0.0003382500000000052, 0.0003409720000000019, 0.0003410970000000055, 0.0003399030000000025, 0.00033902799999999816]</msg>
<status status="PASS" starttime="20201115 23:00:12.893" endtime="20201115 23:00:12.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.889" endtime="20201115 23:00:12.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.898" endtime="20201115 23:00:12.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.901" endtime="20201115 23:00:12.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.900" endtime="20201115 23:00:12.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.896" endtime="20201115 23:00:12.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.513" endtime="20201115 23:00:12.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.511" endtime="20201115 23:00:12.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.510" endtime="20201115 23:00:12.923"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.925" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.934" endtime="20201115 23:00:12.972"></status>
</kw>
<msg timestamp="20201115 23:00:12.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.932" endtime="20201115 23:00:12.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.974" endtime="20201115 23:00:12.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.976" endtime="20201115 23:00:12.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.929" endtime="20201115 23:00:12.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.927" endtime="20201115 23:00:12.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.986" endtime="20201115 23:00:13.272"></status>
</kw>
<msg timestamp="20201115 23:00:13.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027579903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027939903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.984" endtime="20201115 23:00:13.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027579903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027939903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.276" endtime="20201115 23:00:13.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.285" endtime="20201115 23:00:13.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.981" endtime="20201115 23:00:13.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.980" endtime="20201115 23:00:13.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.291" level="INFO">${RESULT} = [{'time': 0.027939903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003599999999999992, 'source_diff': 0.0003599999999999992}, {'time': 0.02830525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:13.288" endtime="20201115 23:00:13.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.304" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:13.292" endtime="20201115 23:00:13.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.309" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.308" endtime="20201115 23:00:13.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.312" level="INFO">VALUE: [0.0003599999999999992, 0.00034359700000000104, 0.0003387359999999992, 0.0003424300000000012, 0.0003434309999999982, 0.0003405140000000001, 0.0003384860000000024, 0.0003427499999999993, 0.0003422499999999988, 0.0003423620000000023, 0.0003417360000000022, 0.0003433340000000007, 0.0003408339999999982, 0.00034141699999999664, 0.0003425000000000025, 0.0003443470000000018, 0.00034113899999999725, 0.0003405689999999989, 0.0003422360000000027, 0.0003437780000000029, 0.0003439309999999987, 0.00033990299999999557, 0.0003409309999999957, 0.0003432500000000033, 0.0003396520000000028, 0.00034105499999999983, 0.0003448330000000027, 0.0003413329999999992, 0.0003389300000000012, 0.00034048600000000095, 0.0003390559999999973, 0.0003389719999999999, 0.00034298600000000345, 0.00034090299999999657, 0.00033826399999999784, 0.00034122200000000213, 0.0003437500000000038, 0.0003396249999999962, 0.00034213899999999825, 0.00034108399999999844, 0.00034286099999999986, 0.00033987500000000337, 0.00034380499999999564, 0.0003407779999999999, 0.0003426109999999996, 0.0003420270000000017, 0.0003443470000000018, 0.0003405140000000001, 0.00033870800000000006, 0.00034004199999999873]</msg>
<status status="PASS" starttime="20201115 23:00:13.310" endtime="20201115 23:00:13.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.305" endtime="20201115 23:00:13.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.315" endtime="20201115 23:00:13.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.318" endtime="20201115 23:00:13.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.317" endtime="20201115 23:00:13.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.313" endtime="20201115 23:00:13.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.926" endtime="20201115 23:00:13.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.924" endtime="20201115 23:00:13.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.923" endtime="20201115 23:00:13.339"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.342" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.350" endtime="20201115 23:00:13.389"></status>
</kw>
<msg timestamp="20201115 23:00:13.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.349" endtime="20201115 23:00:13.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.390" endtime="20201115 23:00:13.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.393" endtime="20201115 23:00:13.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.346" endtime="20201115 23:00:13.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.344" endtime="20201115 23:00:13.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.402" endtime="20201115 23:00:13.688"></status>
</kw>
<msg timestamp="20201115 23:00:13.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027662486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028015889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.401" endtime="20201115 23:00:13.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027662486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028015889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.692" endtime="20201115 23:00:13.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.700" endtime="20201115 23:00:13.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.398" endtime="20201115 23:00:13.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.397" endtime="20201115 23:00:13.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.706" level="INFO">${RESULT} = [{'time': 0.028015889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035340299999999866, 'source_diff': 0.00035340299999999866}, {'time': 0.028381306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:13.703" endtime="20201115 23:00:13.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.721" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:13.707" endtime="20201115 23:00:13.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.725" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.724" endtime="20201115 23:00:13.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.728" level="INFO">VALUE: [0.00035340299999999866, 0.0003387499999999988, 0.00034184700000000276, 0.0003406810000000024, 0.000340194000000002, 0.00034094400000000274, 0.00033972200000000063, 0.0003438470000000013, 0.0003408750000000009, 0.00033983300000000466, 0.0003449309999999997, 0.00034319399999999806, 0.0003431249999999997, 0.0003410559999999993, 0.00033948599999999995, 0.00033876399999999834, 0.0003447639999999974, 0.0003447079999999991, 0.00034180600000000005, 0.0003431249999999997, 0.0003387500000000057, 0.00033890299999999457, 0.00033987500000000337, 0.00034194400000000374, 0.00034426400000000384, 0.0003409030000000035, 0.00034390299999999957, 0.00034122200000000213, 0.0003448879999999946, 0.00033987499999999643, 0.0003401250000000036, 0.0003391659999999949, 0.0003390700000000038, 0.0003419720000000029, 0.0003436250000000002, 0.000340679999999996, 0.00033845800000000675, 0.0003426249999999992, 0.0003393049999999981, 0.00034259700000000004, 0.00034181900000000015, 0.0003413050000000001, 0.0003412500000000013, 0.0003408049999999996, 0.0003418469999999993, 0.0003418879999999985, 0.00034086099999999786, 0.000341485999999995, 0.0003382499999999983, 0.0003397919999999985]</msg>
<status status="PASS" starttime="20201115 23:00:13.727" endtime="20201115 23:00:13.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.722" endtime="20201115 23:00:13.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.731" endtime="20201115 23:00:13.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.735" endtime="20201115 23:00:13.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.733" endtime="20201115 23:00:13.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.729" endtime="20201115 23:00:13.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.342" endtime="20201115 23:00:13.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.341" endtime="20201115 23:00:13.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.340" endtime="20201115 23:00:13.756"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.759" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.769" endtime="20201115 23:00:13.805"></status>
</kw>
<msg timestamp="20201115 23:00:13.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.767" endtime="20201115 23:00:13.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.807" endtime="20201115 23:00:13.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.810" endtime="20201115 23:00:13.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.763" endtime="20201115 23:00:13.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.761" endtime="20201115 23:00:13.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.819" endtime="20201115 23:00:14.105"></status>
</kw>
<msg timestamp="20201115 23:00:14.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028248875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028598014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.817" endtime="20201115 23:00:14.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028248875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028598014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.109" endtime="20201115 23:00:14.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.117" endtime="20201115 23:00:14.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.815" endtime="20201115 23:00:14.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.813" endtime="20201115 23:00:14.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.124" level="INFO">${RESULT} = [{'time': 0.028598014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003491390000000018, 'source_diff': 0.0003491390000000018}, {'time': 0.028963181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:14.121" endtime="20201115 23:00:14.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.137" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:14.125" endtime="20201115 23:00:14.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.142" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.141" endtime="20201115 23:00:14.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.144" level="INFO">VALUE: [0.0003491390000000018, 0.00033901400000000206, 0.0003443059999999991, 0.0003432079999999976, 0.00034373600000000074, 0.0003411390000000007, 0.0003417920000000005, 0.00034294500000000075, 0.0003446250000000012, 0.00034208299999999997, 0.0003440700000000019, 0.00034373599999999727, 0.0003420699999999999, 0.0003395689999999979, 0.00033938900000000244, 0.0003390559999999973, 0.00033876299999999887, 0.00034097199999999495, 0.00034055499999999933, 0.00034197199999999595, 0.0003435000000000035, 0.00033837500000000187, 0.0003432360000000037, 0.0003445700000000024, 0.0003396810000000014, 0.00033870899999999954, 0.00034316700000000533, 0.00034091599999999667, 0.00034230600000000055, 0.00033898599999999945, 0.00034170800000000306, 0.0003437500000000038, 0.00034177700000000144, 0.00033963899999999575, 0.0003416109999999986, 0.0003440690000000024, 0.0003385699999999964, 0.00034202800000000116, 0.0003407360000000012, 0.0003399580000000013, 0.0003386250000000021, 0.00034474999999999784, 0.0003395689999999979, 0.0003403339999999977, 0.00034036099999999736, 0.00034204200000000073, 0.00034004199999999873, 0.00034429099999999657, 0.00034, 0.00033887499999999543]</msg>
<status status="PASS" starttime="20201115 23:00:14.143" endtime="20201115 23:00:14.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.138" endtime="20201115 23:00:14.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.147" endtime="20201115 23:00:14.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.151" endtime="20201115 23:00:14.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.149" endtime="20201115 23:00:14.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.145" endtime="20201115 23:00:14.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.760" endtime="20201115 23:00:14.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.757" endtime="20201115 23:00:14.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.756" endtime="20201115 23:00:14.172"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.175" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.183" endtime="20201115 23:00:14.218"></status>
</kw>
<msg timestamp="20201115 23:00:14.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.181" endtime="20201115 23:00:14.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.220" endtime="20201115 23:00:14.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.222" endtime="20201115 23:00:14.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.179" endtime="20201115 23:00:14.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.177" endtime="20201115 23:00:14.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.231" endtime="20201115 23:00:14.518"></status>
</kw>
<msg timestamp="20201115 23:00:14.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024150514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024497556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.230" endtime="20201115 23:00:14.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024150514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024497556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.522" endtime="20201115 23:00:14.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.530" endtime="20201115 23:00:14.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.227" endtime="20201115 23:00:14.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.226" endtime="20201115 23:00:14.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.536" level="INFO">${RESULT} = [{'time': 0.024497556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003470419999999988, 'source_diff': 0.0003470419999999988}, {'time': 0.02486275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:14.533" endtime="20201115 23:00:14.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.550" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:14.537" endtime="20201115 23:00:14.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.554" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.553" endtime="20201115 23:00:14.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.557" level="INFO">VALUE: [0.0003470419999999988, 0.00034026399999999984, 0.0003414859999999985, 0.00034252800000000166, 0.00034084800000000123, 0.00033858299999999994, 0.00034236100000000283, 0.00034227699999999847, 0.0003383329999999997, 0.0003430279999999987, 0.00034318000000000196, 0.00033867999999999746, 0.000338999999999999, 0.0003418469999999993, 0.0003439300000000027, 0.00034336100000000036, 0.00034277799999999845, 0.00034447199999999845, 0.0003403329999999982, 0.00034154100000000076, 0.00034059699999999804, 0.00034272200000000363, 0.0003398329999999977, 0.00034474999999999784, 0.00033998600000000045, 0.00034198600000000245, 0.00034386100000000086, 0.00034052799999999966, 0.0003408049999999996, 0.00034286199999999933, 0.0003391529999999948, 0.00033872199999999963, 0.00033887499999999543, 0.00034, 0.0003395699999999974, 0.0003382640000000048, 0.000341000000000001, 0.0003406249999999972, 0.00033934799999999626, 0.0003442219999999982, 0.0003398199999999976, 0.00033834700000000273, 0.00033865300000000126, 0.0003392640000000058, 0.0003413050000000001, 0.00034373599999999727, 0.00034380600000000205, 0.0003385559999999968, 0.00033863899999999475, 0.000342403000000005]</msg>
<status status="PASS" starttime="20201115 23:00:14.555" endtime="20201115 23:00:14.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.551" endtime="20201115 23:00:14.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.560" endtime="20201115 23:00:14.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.564" endtime="20201115 23:00:14.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.562" endtime="20201115 23:00:14.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.559" endtime="20201115 23:00:14.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.175" endtime="20201115 23:00:14.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.173" endtime="20201115 23:00:14.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.173" endtime="20201115 23:00:14.585"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.587" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.596" endtime="20201115 23:00:14.630"></status>
</kw>
<msg timestamp="20201115 23:00:14.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.594" endtime="20201115 23:00:14.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.632" endtime="20201115 23:00:14.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.634" endtime="20201115 23:00:14.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.591" endtime="20201115 23:00:14.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.589" endtime="20201115 23:00:14.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.643" endtime="20201115 23:00:14.929"></status>
</kw>
<msg timestamp="20201115 23:00:14.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023158694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023492833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.642" endtime="20201115 23:00:14.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023158694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023492833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.933" endtime="20201115 23:00:14.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.941" endtime="20201115 23:00:14.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.639" endtime="20201115 23:00:14.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.637" endtime="20201115 23:00:14.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.948" level="INFO">${RESULT} = [{'time': 0.023492833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033413900000000066, 'source_diff': 0.00033413900000000066}, {'time': 0.023858222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:14.945" endtime="20201115 23:00:14.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.961" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:14.949" endtime="20201115 23:00:14.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.966" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.965" endtime="20201115 23:00:14.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.972" level="INFO">VALUE: [0.00033413900000000066, 0.0003417079999999996, 0.00034016700000000233, 0.00034340299999999907, 0.0003414019999999976, 0.0003446250000000012, 0.0003431940000000015, 0.00034162500000000165, 0.0003435279999999992, 0.0003401810000000019, 0.00034422200000000167, 0.00034358300000000147, 0.00034387500000000043, 0.0003383610000000023, 0.00034122299999999814, 0.000339097, 0.0003440829999999985, 0.00033938899999999897, 0.0003400130000000001, 0.00034479100000000054, 0.00034180600000000005, 0.0003438470000000013, 0.0003425699999999969, 0.0003396390000000027, 0.00034043100000000215, 0.0003431799999999985, 0.0003422360000000027, 0.00034458300000000247, 0.0003429720000000039, 0.00033937500000000287, 0.0003430140000000026, 0.0003418329999999997, 0.0003412910000000005, 0.0003403469999999978, 0.0003386810000000004, 0.0003443199999999952, 0.0003420560000000003, 0.00033969499999999403, 0.000343485999999997, 0.00034081899999999915, 0.0003421799999999975, 0.0003414580000000028, 0.00033852799999999766, 0.00034104199999999973, 0.0003441669999999994, 0.0003393889999999955, 0.00034005600000000524, 0.00034116600000000386, 0.00034324999999999634, 0.0003436669999999989]</msg>
<status status="PASS" starttime="20201115 23:00:14.967" endtime="20201115 23:00:14.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.962" endtime="20201115 23:00:14.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.975" endtime="20201115 23:00:14.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.979" endtime="20201115 23:00:14.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.977" endtime="20201115 23:00:14.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.974" endtime="20201115 23:00:15.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.588" endtime="20201115 23:00:15.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.586" endtime="20201115 23:00:15.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.585" endtime="20201115 23:00:15.000"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.003" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.011" endtime="20201115 23:00:15.047"></status>
</kw>
<msg timestamp="20201115 23:00:15.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.010" endtime="20201115 23:00:15.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.048" endtime="20201115 23:00:15.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.051" endtime="20201115 23:00:15.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.007" endtime="20201115 23:00:15.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.005" endtime="20201115 23:00:15.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.060" endtime="20201115 23:00:15.345"></status>
</kw>
<msg timestamp="20201115 23:00:15.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024730278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025090486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.058" endtime="20201115 23:00:15.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024730278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025090486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.349" endtime="20201115 23:00:15.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.357" endtime="20201115 23:00:15.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.056" endtime="20201115 23:00:15.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.054" endtime="20201115 23:00:15.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.364" level="INFO">${RESULT} = [{'time': 0.025090486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003602079999999973, 'source_diff': 0.0003602079999999973}, {'time': 0.025455847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:15.361" endtime="20201115 23:00:15.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.379" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:15.365" endtime="20201115 23:00:15.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.383" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.382" endtime="20201115 23:00:15.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.386" level="INFO">VALUE: [0.0003602079999999973, 0.000342694000000001, 0.00033933400000000016, 0.0003400269999999997, 0.00034437500000000093, 0.0003445699999999989, 0.0003440700000000019, 0.00033972200000000063, 0.0003435699999999979, 0.0003396659999999989, 0.0003443890000000005, 0.0003403199999999981, 0.0003402500000000003, 0.00033936099999999983, 0.0003402500000000003, 0.0003434579999999979, 0.00034290200000000257, 0.0003436660000000029, 0.000339403000000002, 0.0003430140000000026, 0.0003383060000000035, 0.00034126400000000084, 0.0003406250000000041, 0.0003394590000000003, 0.00034458300000000247, 0.0003436110000000006, 0.0003441110000000011, 0.00034190299999999757, 0.0003434019999999996, 0.00034147199999999545, 0.0003430130000000031, 0.0003421669999999974, 0.0003397499999999998, 0.0003439309999999987, 0.0003384999999999985, 0.0003432639999999959, 0.00033876399999999834, 0.00034313899999999925, 0.00034047300000000086, 0.00033937500000000287, 0.000342791000000002, 0.000341888999999998, 0.00034116700000000333, 0.0003431249999999997, 0.0003441799999999995, 0.0003416249999999982, 0.0003442089999999981, 0.00033887500000000237, 0.00033891699999999414, 0.0003432360000000037]</msg>
<status status="PASS" starttime="20201115 23:00:15.385" endtime="20201115 23:00:15.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.380" endtime="20201115 23:00:15.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.389" endtime="20201115 23:00:15.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.393" endtime="20201115 23:00:15.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.391" endtime="20201115 23:00:15.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.387" endtime="20201115 23:00:15.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.003" endtime="20201115 23:00:15.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.002" endtime="20201115 23:00:15.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.001" endtime="20201115 23:00:15.414"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.416" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.424" endtime="20201115 23:00:15.463"></status>
</kw>
<msg timestamp="20201115 23:00:15.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.423" endtime="20201115 23:00:15.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.464" endtime="20201115 23:00:15.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.467" endtime="20201115 23:00:15.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.420" endtime="20201115 23:00:15.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.418" endtime="20201115 23:00:15.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.476" endtime="20201115 23:00:15.762"></status>
</kw>
<msg timestamp="20201115 23:00:15.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023282042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023624639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.475" endtime="20201115 23:00:15.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023282042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023624639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.766" endtime="20201115 23:00:15.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.774" endtime="20201115 23:00:15.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.472" endtime="20201115 23:00:15.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.470" endtime="20201115 23:00:15.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.781" level="INFO">${RESULT} = [{'time': 0.023624639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034259700000000004, 'source_diff': 0.00034259700000000004}, {'time': 0.023989875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:15.778" endtime="20201115 23:00:15.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.795" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:15.782" endtime="20201115 23:00:15.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.800" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.799" endtime="20201115 23:00:15.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.802" level="INFO">VALUE: [0.00034259700000000004, 0.0003394580000000008, 0.00034098600000000145, 0.00033972200000000063, 0.000341097000000002, 0.0003407919999999995, 0.0003406390000000002, 0.00033990299999999904, 0.0003431110000000001, 0.00034394500000000175, 0.00034248699999999896, 0.00034336100000000036, 0.0003409589999999983, 0.0003401109999999971, 0.0003431529999999988, 0.0003429449999999973, 0.000343986000000001, 0.00034356899999999843, 0.0003403330000000017, 0.0003428750000000029, 0.0003386810000000004, 0.00034154199999999676, 0.000338806000000004, 0.00034038900000000344, 0.00034152800000000066, 0.00034424999999999734, 0.0003431249999999997, 0.00034105499999999983, 0.00034094400000000274, 0.0003437639999999964, 0.0003409590000000018, 0.00034086099999999786, 0.00034302800000000216, 0.00034359700000000104, 0.00033883300000000366, 0.0003417219999999957, 0.0003384719999999994, 0.00033833300000000316, 0.00034272299999999617, 0.0003386249999999952, 0.0003420690000000004, 0.00033904099999999826, 0.00034223599999999577, 0.0003417920000000005, 0.00034436100000000136, 0.0003414450000000027, 0.0003431799999999985, 0.0003413469999999988, 0.000338888999999995, 0.0003432639999999959]</msg>
<status status="PASS" starttime="20201115 23:00:15.801" endtime="20201115 23:00:15.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.796" endtime="20201115 23:00:15.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.805" endtime="20201115 23:00:15.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.809" endtime="20201115 23:00:15.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.807" endtime="20201115 23:00:15.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.804" endtime="20201115 23:00:15.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.417" endtime="20201115 23:00:15.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.415" endtime="20201115 23:00:15.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.414" endtime="20201115 23:00:15.830"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.833" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.841" endtime="20201115 23:00:15.876"></status>
</kw>
<msg timestamp="20201115 23:00:15.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.839" endtime="20201115 23:00:15.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.878" endtime="20201115 23:00:15.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.880" endtime="20201115 23:00:15.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.837" endtime="20201115 23:00:15.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.835" endtime="20201115 23:00:15.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.890" endtime="20201115 23:00:16.176"></status>
</kw>
<msg timestamp="20201115 23:00:16.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023759347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024114, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:15.888" endtime="20201115 23:00:16.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023759347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024114, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:16.180" endtime="20201115 23:00:16.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.188" endtime="20201115 23:00:16.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.885" endtime="20201115 23:00:16.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.884" endtime="20201115 23:00:16.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.195" level="INFO">${RESULT} = [{'time': 0.024114, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003546529999999999, 'source_diff': 0.0003546529999999999}, {'time': 0.024479181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:16.192" endtime="20201115 23:00:16.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.208" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:16.196" endtime="20201115 23:00:16.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.213" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.212" endtime="20201115 23:00:16.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.215" level="INFO">VALUE: [0.0003546529999999999, 0.0003425700000000004, 0.00034279099999999854, 0.00034355499999999886, 0.0003406249999999972, 0.0003387779999999979, 0.000341985999999999, 0.0003412910000000005, 0.00033901400000000206, 0.0003415979999999985, 0.0003434579999999979, 0.0003401109999999971, 0.0003409439999999993, 0.00034158399999999894, 0.00034008300000000144, 0.0003447079999999991, 0.000342292000000001, 0.0003386520000000018, 0.0003427499999999993, 0.0003446389999999973, 0.0003398339999999972, 0.0003409859999999945, 0.0003435000000000035, 0.00034468099999999946, 0.0003439449999999983, 0.00034004099999999926, 0.0003399590000000008, 0.0003402779999999994, 0.0003420690000000004, 0.0003399309999999947, 0.0003412219999999952, 0.0003414720000000024, 0.0003440700000000019, 0.0003419449999999963, 0.0003427920000000015, 0.00034431900000000265, 0.0003414309999999962, 0.0003387499999999988, 0.000342097999999999, 0.0003404720000000014, 0.00034319399999999806, 0.0003383469999999958, 0.0003392779999999984, 0.0003446669999999999, 0.00034286099999999986, 0.00033909699999999654, 0.0003440700000000019, 0.0003437639999999964, 0.00034447199999999845, 0.0003410140000000006]</msg>
<status status="PASS" starttime="20201115 23:00:16.214" endtime="20201115 23:00:16.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.209" endtime="20201115 23:00:16.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.218" endtime="20201115 23:00:16.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.222" endtime="20201115 23:00:16.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.220" endtime="20201115 23:00:16.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.217" endtime="20201115 23:00:16.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.833" endtime="20201115 23:00:16.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.831" endtime="20201115 23:00:16.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.831" endtime="20201115 23:00:16.243"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.245" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.254" endtime="20201115 23:00:16.288"></status>
</kw>
<msg timestamp="20201115 23:00:16.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.252" endtime="20201115 23:00:16.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.289" endtime="20201115 23:00:16.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.292" endtime="20201115 23:00:16.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.250" endtime="20201115 23:00:16.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.247" endtime="20201115 23:00:16.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.302" endtime="20201115 23:00:16.586"></status>
</kw>
<msg timestamp="20201115 23:00:16.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023037597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023373208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.300" endtime="20201115 23:00:16.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023037597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023373208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.591" endtime="20201115 23:00:16.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.599" endtime="20201115 23:00:16.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.297" endtime="20201115 23:00:16.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.296" endtime="20201115 23:00:16.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.605" level="INFO">${RESULT} = [{'time': 0.023373208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033561099999999955, 'source_diff': 0.00033561099999999955}, {'time': 0.023738375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:16.602" endtime="20201115 23:00:16.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.619" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:16.606" endtime="20201115 23:00:16.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.623" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.622" endtime="20201115 23:00:16.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.626" level="INFO">VALUE: [0.00033561099999999955, 0.00033822199999999913, 0.00034373600000000074, 0.0003398749999999999, 0.0003431659999999989, 0.0003444309999999992, 0.00033838900000000144, 0.0003407499999999973, 0.0003388749999999989, 0.0003447079999999991, 0.00033888900000000194, 0.0003404719999999979, 0.0003419310000000002, 0.00034386100000000086, 0.00034409799999999754, 0.00034090300000000004, 0.00033948699999999943, 0.00033956900000000137, 0.00034216700000000086, 0.0003434440000000018, 0.0003437219999999977, 0.00033936099999999983, 0.00034340300000000254, 0.0003397779999999989, 0.00034174999999999484, 0.0003410140000000006, 0.00034386100000000086, 0.00034411099999999417, 0.00033919500000000047, 0.0003418469999999993, 0.00034418099999999896, 0.0003406119999999971, 0.0003419590000000028, 0.00034436100000000136, 0.00034387500000000043, 0.0003430279999999952, 0.00034308400000000044, 0.00034109699999999854, 0.0003435140000000031, 0.0003436250000000002, 0.0003416520000000048, 0.00034359700000000104, 0.0003404160000000031, 0.00034236099999999936, 0.0003430700000000009, 0.000342777999999995, 0.0003406940000000025, 0.0003413050000000001, 0.0003432500000000033, 0.000338597000000003]</msg>
<status status="PASS" starttime="20201115 23:00:16.624" endtime="20201115 23:00:16.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.620" endtime="20201115 23:00:16.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.629" endtime="20201115 23:00:16.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.632" endtime="20201115 23:00:16.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.631" endtime="20201115 23:00:16.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.627" endtime="20201115 23:00:16.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.246" endtime="20201115 23:00:16.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.244" endtime="20201115 23:00:16.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.243" endtime="20201115 23:00:16.654"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.656" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.665" endtime="20201115 23:00:16.700"></status>
</kw>
<msg timestamp="20201115 23:00:16.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.663" endtime="20201115 23:00:16.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.701" endtime="20201115 23:00:16.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.704" endtime="20201115 23:00:16.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.661" endtime="20201115 23:00:16.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.658" endtime="20201115 23:00:16.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.713" endtime="20201115 23:00:17.000"></status>
</kw>
<msg timestamp="20201115 23:00:17.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024335625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024677819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.712" endtime="20201115 23:00:17.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024335625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024677819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.004" endtime="20201115 23:00:17.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.012" endtime="20201115 23:00:17.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.709" endtime="20201115 23:00:17.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.707" endtime="20201115 23:00:17.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.019" level="INFO">${RESULT} = [{'time': 0.024677819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003421940000000005, 'source_diff': 0.0003421940000000005}, {'time': 0.025043167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:17.016" endtime="20201115 23:00:17.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.034" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:17.020" endtime="20201115 23:00:17.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.038" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.037" endtime="20201115 23:00:17.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.041" level="INFO">VALUE: [0.0003421940000000005, 0.000343000000000003, 0.00034149999999999806, 0.00034316700000000186, 0.00034227700000000194, 0.00034442999999999974, 0.000339306000000001, 0.0003444860000000015, 0.0003396389999999992, 0.00034108299999999897, 0.00034180600000000005, 0.0003407779999999999, 0.00034372300000000064, 0.00034277799999999845, 0.0003404439999999988, 0.0003425139999999986, 0.0003384579999999998, 0.00034236099999999936, 0.00034118099999999943, 0.0003417920000000005, 0.0003384589999999993, 0.00034381900000000215, 0.0003430700000000009, 0.00034037499999999693, 0.0003428330000000007, 0.000343583999999994, 0.00034304200000000173, 0.00034191699999999714, 0.0003392359999999997, 0.0003444579999999989, 0.00034401399999999666, 0.0003386529999999943, 0.00034323599999999677, 0.00034398600000000445, 0.0003432639999999959, 0.00034498700000000493, 0.0003425270000000022, 0.0003414580000000028, 0.0003446530000000003, 0.00034390299999999957, 0.00034061100000000455, 0.0003391109999999961, 0.00033965300000000226, 0.00033882000000000356, 0.0003406659999999964, 0.0003448200000000026, 0.0003384589999999993, 0.0003418050000000006, 0.0003407779999999999, 0.00033819499999999947]</msg>
<status status="PASS" starttime="20201115 23:00:17.039" endtime="20201115 23:00:17.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.035" endtime="20201115 23:00:17.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.044" endtime="20201115 23:00:17.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.047" endtime="20201115 23:00:17.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.046" endtime="20201115 23:00:17.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.042" endtime="20201115 23:00:17.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.657" endtime="20201115 23:00:17.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.655" endtime="20201115 23:00:17.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.654" endtime="20201115 23:00:17.069"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.071" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.080" endtime="20201115 23:00:17.116"></status>
</kw>
<msg timestamp="20201115 23:00:17.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.078" endtime="20201115 23:00:17.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.118" endtime="20201115 23:00:17.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.120" endtime="20201115 23:00:17.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.075" endtime="20201115 23:00:17.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.073" endtime="20201115 23:00:17.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.129" endtime="20201115 23:00:17.416"></status>
</kw>
<msg timestamp="20201115 23:00:17.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025958361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026288458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.128" endtime="20201115 23:00:17.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025958361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026288458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.420" endtime="20201115 23:00:17.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.428" endtime="20201115 23:00:17.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.125" endtime="20201115 23:00:17.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.123" endtime="20201115 23:00:17.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.435" level="INFO">${RESULT} = [{'time': 0.026288458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003300970000000014, 'source_diff': 0.0003300970000000014}, {'time': 0.026653722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:17.432" endtime="20201115 23:00:17.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.448" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:17.436" endtime="20201115 23:00:17.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.453" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.452" endtime="20201115 23:00:17.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.455" level="INFO">VALUE: [0.0003300970000000014, 0.0003431249999999997, 0.00034090200000000057, 0.0003389580000000003, 0.0003389160000000016, 0.00034199999999999856, 0.00034355599999999833, 0.0003422499999999988, 0.00033902800000000163, 0.0003386250000000021, 0.0003430829999999975, 0.00034340300000000254, 0.0003409720000000019, 0.00034216700000000086, 0.00033988899999999947, 0.00034218099999999696, 0.0003388329999999967, 0.000344777999999997, 0.0003401810000000019, 0.00034193100000000365, 0.00034436100000000136, 0.00034323699999999624, 0.00033954199999999823, 0.0003384579999999998, 0.00034047300000000086, 0.00033920800000000056, 0.0003384589999999993, 0.00033870800000000006, 0.0003394580000000008, 0.00033876399999999834, 0.0003382359999999987, 0.00034086200000000427, 0.00034351399999999616, 0.00034386100000000086, 0.0003430560000000013, 0.0003408610000000048, 0.000338999999999999, 0.0003443330000000022, 0.00034020800000000156, 0.0003407500000000008, 0.00034188800000000547, 0.00034337499999999993, 0.0003411249999999977, 0.00033872199999999963, 0.00034154100000000076, 0.00034255500000000133, 0.0003402500000000003, 0.0003392359999999997, 0.0003388469999999963, 0.00034237499999999893]</msg>
<status status="PASS" starttime="20201115 23:00:17.454" endtime="20201115 23:00:17.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.449" endtime="20201115 23:00:17.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.459" endtime="20201115 23:00:17.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.462" endtime="20201115 23:00:17.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.461" endtime="20201115 23:00:17.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.457" endtime="20201115 23:00:17.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.072" endtime="20201115 23:00:17.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.070" endtime="20201115 23:00:17.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.069" endtime="20201115 23:00:17.484"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.486" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.494" endtime="20201115 23:00:17.529"></status>
</kw>
<msg timestamp="20201115 23:00:17.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.493" endtime="20201115 23:00:17.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.531" endtime="20201115 23:00:17.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.533" endtime="20201115 23:00:17.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.490" endtime="20201115 23:00:17.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.488" endtime="20201115 23:00:17.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.542" endtime="20201115 23:00:17.829"></status>
</kw>
<msg timestamp="20201115 23:00:17.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023393389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023744319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.541" endtime="20201115 23:00:17.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023393389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023744319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.834" endtime="20201115 23:00:17.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.842" endtime="20201115 23:00:17.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.538" endtime="20201115 23:00:17.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.536" endtime="20201115 23:00:17.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.848" level="INFO">${RESULT} = [{'time': 0.023744319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003509299999999993, 'source_diff': 0.0003509299999999993}, {'time': 0.024109694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:17.845" endtime="20201115 23:00:17.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.862" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:17.849" endtime="20201115 23:00:17.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.866" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.865" endtime="20201115 23:00:17.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.869" level="INFO">VALUE: [0.0003509299999999993, 0.00034172200000000263, 0.0003432500000000033, 0.00034320900000000057, 0.0003440270000000002, 0.0003402360000000007, 0.0003397499999999998, 0.000340985999999998, 0.0003390139999999986, 0.00033862499999999865, 0.0003396389999999992, 0.00034086100000000133, 0.0003398330000000012, 0.0003423469999999998, 0.00033859800000000245, 0.0003420269999999982, 0.0003440140000000001, 0.0003410689999999994, 0.00034447199999999845, 0.00034361099999999714, 0.00033851400000000156, 0.00034452800000000366, 0.000341000000000001, 0.00034297199999999695, 0.0003402779999999994, 0.00034465200000000085, 0.000339403000000002, 0.000339679999999995, 0.0003444020000000006, 0.0003447079999999991, 0.0003389719999999999, 0.00034116700000000333, 0.0003399170000000021, 0.0003410559999999993, 0.0003433340000000007, 0.00034263899999999875, 0.000343791000000003, 0.00034176400000000134, 0.0003437360000000042, 0.0003414720000000024, 0.00033936099999999636, 0.00034331900000000165, 0.0003431529999999988, 0.0003445560000000028, 0.0003402360000000007, 0.00034218099999999696, 0.0003408199999999986, 0.00033976399999999934, 0.0003435279999999957, 0.00034269499999999703]</msg>
<status status="PASS" starttime="20201115 23:00:17.867" endtime="20201115 23:00:17.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.863" endtime="20201115 23:00:17.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.872" endtime="20201115 23:00:17.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.876" endtime="20201115 23:00:17.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.874" endtime="20201115 23:00:17.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.871" endtime="20201115 23:00:17.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.487" endtime="20201115 23:00:17.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.485" endtime="20201115 23:00:17.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.484" endtime="20201115 23:00:17.897"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.900" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.908" endtime="20201115 23:00:17.947"></status>
</kw>
<msg timestamp="20201115 23:00:17.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.906" endtime="20201115 23:00:17.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.948" endtime="20201115 23:00:17.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.951" endtime="20201115 23:00:17.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.904" endtime="20201115 23:00:17.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.902" endtime="20201115 23:00:17.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.960" endtime="20201115 23:00:18.245"></status>
</kw>
<msg timestamp="20201115 23:00:18.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026763986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027095028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.959" endtime="20201115 23:00:18.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026763986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027095028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.249" endtime="20201115 23:00:18.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.257" endtime="20201115 23:00:18.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.956" endtime="20201115 23:00:18.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.954" endtime="20201115 23:00:18.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.264" level="INFO">${RESULT} = [{'time': 0.027095028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033104200000000014, 'source_diff': 0.00033104200000000014}, {'time': 0.027460208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:18.260" endtime="20201115 23:00:18.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.277" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:18.265" endtime="20201115 23:00:18.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.282" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.281" endtime="20201115 23:00:18.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.284" level="INFO">VALUE: [0.00033104200000000014, 0.00034034700000000126, 0.00034350000000000006, 0.00033876299999999887, 0.000341194999999999, 0.0003391800000000014, 0.00033977699999999944, 0.00033815300000000076, 0.0003402079999999981, 0.00033970900000000054, 0.00034094400000000274, 0.0003389860000000029, 0.00034098600000000145, 0.0003411390000000042, 0.0003415559999999998, 0.0003447639999999974, 0.00033820799999999956, 0.00034287499999999943, 0.0003416250000000051, 0.00033866700000000083, 0.00034392999999999924, 0.00034011100000000405, 0.0003407360000000012, 0.00034429199999999605, 0.0003409580000000023, 0.00033852799999999766, 0.00034186099999999886, 0.00034168099999999646, 0.0003385139999999981, 0.00034461099999999467, 0.0003382359999999987, 0.0003391810000000009, 0.0003398049999999986, 0.0003400139999999996, 0.0003394999999999995, 0.00034258399999999994, 0.00034208299999999997, 0.0003409580000000023, 0.0003399030000000025, 0.0003382499999999983, 0.0003445969999999951, 0.0003404449999999948, 0.0003385129999999986, 0.0003409859999999945, 0.0003400420000000057, 0.000344194000000006, 0.00033944400000000124, 0.0003412780000000004, 0.00033826399999999784, 0.0003442779999999965]</msg>
<status status="PASS" starttime="20201115 23:00:18.283" endtime="20201115 23:00:18.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.278" endtime="20201115 23:00:18.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.288" endtime="20201115 23:00:18.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.291" endtime="20201115 23:00:18.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.290" endtime="20201115 23:00:18.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.286" endtime="20201115 23:00:18.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.900" endtime="20201115 23:00:18.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.898" endtime="20201115 23:00:18.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.898" endtime="20201115 23:00:18.312"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.315" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.323" endtime="20201115 23:00:18.357"></status>
</kw>
<msg timestamp="20201115 23:00:18.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.321" endtime="20201115 23:00:18.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.359" endtime="20201115 23:00:18.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.361" endtime="20201115 23:00:18.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.319" endtime="20201115 23:00:18.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.317" endtime="20201115 23:00:18.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.370" endtime="20201115 23:00:18.656"></status>
</kw>
<msg timestamp="20201115 23:00:18.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023549167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023892681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.369" endtime="20201115 23:00:18.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023549167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023892681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.660" endtime="20201115 23:00:18.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.668" endtime="20201115 23:00:18.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.366" endtime="20201115 23:00:18.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.364" endtime="20201115 23:00:18.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.675" level="INFO">${RESULT} = [{'time': 0.023892681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003435139999999996, 'source_diff': 0.0003435139999999996}, {'time': 0.024257875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:18.672" endtime="20201115 23:00:18.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.689" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:18.676" endtime="20201115 23:00:18.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.694" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.693" endtime="20201115 23:00:18.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.696" level="INFO">VALUE: [0.0003435139999999996, 0.00034288900000000247, 0.0003425140000000021, 0.0003410140000000006, 0.0003385969999999995, 0.0003440140000000001, 0.0003436659999999994, 0.00034190299999999757, 0.00034044400000000224, 0.0003434860000000005, 0.00034152800000000066, 0.00034322300000000014, 0.0003428470000000003, 0.00034331900000000165, 0.0003427080000000006, 0.0003416390000000012, 0.0003385969999999995, 0.0003405140000000001, 0.0003441250000000007, 0.000342986, 0.0003408750000000009, 0.00034219500000000347, 0.0003408329999999987, 0.00034358400000000094, 0.0003434999999999966, 0.0003420699999999999, 0.00034286099999999986, 0.00033987499999999643, 0.00034454200000000323, 0.0003412780000000004, 0.0003418329999999997, 0.00034313899999999925, 0.0003436669999999989, 0.0003423469999999998, 0.0003441799999999995, 0.0003418050000000006, 0.0003443199999999952, 0.00034205500000000083, 0.0003401520000000033, 0.0003383199999999961, 0.0003442639999999969, 0.00033911100000000305, 0.0003399450000000012, 0.0003385840000000029, 0.00034208399999999944, 0.00034165199999999785, 0.0003445690000000029, 0.000339387999999996, 0.0003432910000000025, 0.0003438609999999939]</msg>
<status status="PASS" starttime="20201115 23:00:18.695" endtime="20201115 23:00:18.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.690" endtime="20201115 23:00:18.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.700" endtime="20201115 23:00:18.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.703" endtime="20201115 23:00:18.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.702" endtime="20201115 23:00:18.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.698" endtime="20201115 23:00:18.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.315" endtime="20201115 23:00:18.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.314" endtime="20201115 23:00:18.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.313" endtime="20201115 23:00:18.724"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.727" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.735" endtime="20201115 23:00:18.770"></status>
</kw>
<msg timestamp="20201115 23:00:18.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.733" endtime="20201115 23:00:18.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.772" endtime="20201115 23:00:18.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.774" endtime="20201115 23:00:18.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.731" endtime="20201115 23:00:18.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.729" endtime="20201115 23:00:18.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.784" endtime="20201115 23:00:19.070"></status>
</kw>
<msg timestamp="20201115 23:00:19.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02346875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023801875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:18.782" endtime="20201115 23:00:19.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02346875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023801875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:19.074" endtime="20201115 23:00:19.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.082" endtime="20201115 23:00:19.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.779" endtime="20201115 23:00:19.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.777" endtime="20201115 23:00:19.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.088" level="INFO">${RESULT} = [{'time': 0.023801875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003331250000000001, 'source_diff': 0.0003331250000000001}, {'time': 0.024167236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:19.085" endtime="20201115 23:00:19.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.102" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:19.089" endtime="20201115 23:00:19.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.106" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.105" endtime="20201115 23:00:19.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.109" level="INFO">VALUE: [0.0003331250000000001, 0.00034030500000000255, 0.0003438049999999991, 0.00034363899999999975, 0.00034400000000000056, 0.0003394170000000016, 0.0003432080000000011, 0.0003410269999999972, 0.00034465200000000085, 0.00034331900000000165, 0.0003417499999999983, 0.00034355499999999886, 0.00034026300000000037, 0.0003403330000000017, 0.0003403469999999978, 0.0003427499999999993, 0.0003402500000000003, 0.00034400000000000056, 0.0003417499999999983, 0.00034036100000000083, 0.0003435140000000031, 0.00034277799999999845, 0.0003397499999999998, 0.00033980599999999805, 0.0003417920000000005, 0.00034043100000000215, 0.0003441250000000007, 0.0003442089999999981, 0.00034259700000000004, 0.00034191699999999714, 0.0003434309999999982, 0.0003446250000000012, 0.00034286099999999986, 0.00033959699999999704, 0.0003442639999999969, 0.00034004199999999873, 0.0003421109999999991, 0.00033937500000000287, 0.0003384170000000006, 0.0003427780000000019, 0.00034158299999999947, 0.00033858399999999594, 0.000342097999999999, 0.00034069500000000197, 0.00034237499999999893, 0.0003410140000000006, 0.0003408469999999983, 0.0003392359999999997, 0.000339597000000004, 0.00034104199999999973]</msg>
<status status="PASS" starttime="20201115 23:00:19.107" endtime="20201115 23:00:19.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.103" endtime="20201115 23:00:19.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.112" endtime="20201115 23:00:19.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.115" endtime="20201115 23:00:19.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.114" endtime="20201115 23:00:19.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.110" endtime="20201115 23:00:19.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.727" endtime="20201115 23:00:19.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.726" endtime="20201115 23:00:19.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.725" endtime="20201115 23:00:19.137"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.139" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.147" endtime="20201115 23:00:19.182"></status>
</kw>
<msg timestamp="20201115 23:00:19.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.146" endtime="20201115 23:00:19.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.183" endtime="20201115 23:00:19.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.186" endtime="20201115 23:00:19.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.143" endtime="20201115 23:00:19.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.141" endtime="20201115 23:00:19.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.196" endtime="20201115 23:00:19.482"></status>
</kw>
<msg timestamp="20201115 23:00:19.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023275222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023607917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.194" endtime="20201115 23:00:19.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023275222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023607917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.486" endtime="20201115 23:00:19.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.494" endtime="20201115 23:00:19.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.191" endtime="20201115 23:00:19.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.190" endtime="20201115 23:00:19.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.500" level="INFO">${RESULT} = [{'time': 0.023607917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033269499999999744, 'source_diff': 0.00033269499999999744}, {'time': 0.023973111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:19.497" endtime="20201115 23:00:19.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.514" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:19.501" endtime="20201115 23:00:19.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.518" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.517" endtime="20201115 23:00:19.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.521" level="INFO">VALUE: [0.00033269499999999744, 0.0003416109999999986, 0.00034372200000000117, 0.00034004199999999873, 0.0003444999999999976, 0.0003434590000000008, 0.0003428340000000002, 0.0003395699999999974, 0.0003403880000000005, 0.00034227700000000194, 0.0003389580000000003, 0.0003421660000000014, 0.0003431249999999997, 0.0003382779999999974, 0.00033958300000000094, 0.000342791999999998, 0.00033877699999999844, 0.0003384170000000006, 0.0003407779999999999, 0.00034149999999999806, 0.00033888900000000194, 0.00034083400000000166, 0.00034159699999999904, 0.0003398199999999976, 0.00034423599999999777, 0.00034132000000000606, 0.0003395129999999996, 0.0003384999999999985, 0.0003393060000000045, 0.0003395830000000044, 0.0003418339999999992, 0.00034431900000000265, 0.00034168099999999646, 0.0003423469999999998, 0.00034159699999999904, 0.00034, 0.00034434699999999485, 0.00034287499999999943, 0.0003407500000000008, 0.0003406940000000025, 0.0003387779999999979, 0.00033955499999999833, 0.00034372299999999717, 0.0003437219999999977, 0.000338790999999998, 0.0003392499999999993, 0.0003424580000000038, 0.0003447079999999991, 0.0003429449999999973, 0.0003389030000000015]</msg>
<status status="PASS" starttime="20201115 23:00:19.519" endtime="20201115 23:00:19.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.515" endtime="20201115 23:00:19.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.524" endtime="20201115 23:00:19.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.528" endtime="20201115 23:00:19.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.526" endtime="20201115 23:00:19.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.522" endtime="20201115 23:00:19.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.140" endtime="20201115 23:00:19.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.138" endtime="20201115 23:00:19.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.137" endtime="20201115 23:00:19.549"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.552" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.560" endtime="20201115 23:00:19.599"></status>
</kw>
<msg timestamp="20201115 23:00:19.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.559" endtime="20201115 23:00:19.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.600" endtime="20201115 23:00:19.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.603" endtime="20201115 23:00:19.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.556" endtime="20201115 23:00:19.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.554" endtime="20201115 23:00:19.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.612" endtime="20201115 23:00:19.898"></status>
</kw>
<msg timestamp="20201115 23:00:19.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027783806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028128486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.610" endtime="20201115 23:00:19.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027783806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028128486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.902" endtime="20201115 23:00:19.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.910" endtime="20201115 23:00:19.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.608" endtime="20201115 23:00:19.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.606" endtime="20201115 23:00:19.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.917" level="INFO">${RESULT} = [{'time': 0.028128486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034468, 'source_diff': 0.00034468}, {'time': 0.028493708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033972200000000...</msg>
<status status="PASS" starttime="20201115 23:00:19.914" endtime="20201115 23:00:19.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.930" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:19.918" endtime="20201115 23:00:19.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.935" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.934" endtime="20201115 23:00:19.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.937" level="INFO">VALUE: [0.00034468, 0.00033972200000000063, 0.0003418050000000006, 0.0003444999999999976, 0.00034216700000000086, 0.0003438470000000013, 0.00033986100000000033, 0.00033836099999999883, 0.00034054199999999923, 0.00034123599999999824, 0.00034138900000000444, 0.00033994400000000174, 0.0003388469999999963, 0.00033815300000000076, 0.0003441659999999999, 0.0003442639999999969, 0.0003421249999999987, 0.00034147199999999545, 0.0003443329999999953, 0.000343485999999997, 0.00034230600000000055, 0.00034436100000000136, 0.0003402230000000006, 0.0003414580000000028, 0.00034186099999999886, 0.0003385269999999982, 0.0003428329999999938, 0.0003404449999999948, 0.0003384719999999994, 0.00033898599999999945, 0.00034041699999999564, 0.00034469499999999903, 0.00033861100000000255, 0.0003381809999999999, 0.0003404579999999949, 0.0003411250000000046, 0.00034176400000000134, 0.0003381250000000016, 0.00033826399999999784, 0.0003401379999999968, 0.00033943100000000115, 0.0003405689999999989, 0.0003412230000000016, 0.0003392359999999997, 0.0003385840000000029, 0.0003437500000000038, 0.0003444449999999988, 0.0003421810000000039, 0.00033893100000000065, 0.00034090299999999657]</msg>
<status status="PASS" starttime="20201115 23:00:19.936" endtime="20201115 23:00:19.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.931" endtime="20201115 23:00:19.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.941" endtime="20201115 23:00:19.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.944" endtime="20201115 23:00:19.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.942" endtime="20201115 23:00:19.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.939" endtime="20201115 23:00:19.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.552" endtime="20201115 23:00:19.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.550" endtime="20201115 23:00:19.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.549" endtime="20201115 23:00:19.970"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.972" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.980" endtime="20201115 23:00:20.015"></status>
</kw>
<msg timestamp="20201115 23:00:20.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.979" endtime="20201115 23:00:20.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.017" endtime="20201115 23:00:20.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.019" endtime="20201115 23:00:20.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.976" endtime="20201115 23:00:20.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.974" endtime="20201115 23:00:20.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.028" endtime="20201115 23:00:20.324"></status>
</kw>
<msg timestamp="20201115 23:00:20.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028734333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029065431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.027" endtime="20201115 23:00:20.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028734333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029065431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.334" endtime="20201115 23:00:20.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.352" endtime="20201115 23:00:20.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.024" endtime="20201115 23:00:20.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.023" endtime="20201115 23:00:20.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.366" level="INFO">${RESULT} = [{'time': 0.029065431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003310979999999984, 'source_diff': 0.0003310979999999984}, {'time': 0.029430833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:20.359" endtime="20201115 23:00:20.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.388" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:20.368" endtime="20201115 23:00:20.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.392" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.391" endtime="20201115 23:00:20.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.395" level="INFO">VALUE: [0.0003310979999999984, 0.0003413750000000014, 0.0003424859999999995, 0.0003413750000000014, 0.0003389300000000012, 0.0003385550000000008, 0.0003388610000000028, 0.00034287499999999943, 0.000344889000000001, 0.0003437219999999977, 0.0003426669999999979, 0.00034242999999999774, 0.00034209699999999954, 0.00034474999999999784, 0.0003405140000000001, 0.0003406249999999972, 0.00034458300000000247, 0.0003441669999999994, 0.0003422780000000014, 0.0003389580000000003, 0.0003435279999999957, 0.00034131899999999965, 0.00034343100000000515, 0.0003382779999999974, 0.00034213899999999825, 0.0003409999999999941, 0.00034369399999999856, 0.000341403000000004, 0.00034370900000000454, 0.00034159699999999904, 0.00033955499999999833, 0.0003429999999999961, 0.00034113899999999725, 0.0003435690000000019, 0.0003394590000000003, 0.0003392499999999993, 0.0003394439999999943, 0.00034347199999999745, 0.00034472299999999817, 0.00034172200000000263, 0.0003445140000000041, 0.0003426810000000044, 0.0003401800000000024, 0.0003392359999999997, 0.00033866600000000135, 0.00033988900000000294, 0.00034319499999999753, 0.0003406249999999972, 0.00033854199999999723, 0.00034337499999999993]</msg>
<status status="PASS" starttime="20201115 23:00:20.394" endtime="20201115 23:00:20.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.389" endtime="20201115 23:00:20.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.399" endtime="20201115 23:00:20.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.402" endtime="20201115 23:00:20.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.401" endtime="20201115 23:00:20.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.397" endtime="20201115 23:00:20.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.973" endtime="20201115 23:00:20.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.971" endtime="20201115 23:00:20.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.970" endtime="20201115 23:00:20.423"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.426" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.434" endtime="20201115 23:00:20.468"></status>
</kw>
<msg timestamp="20201115 23:00:20.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.432" endtime="20201115 23:00:20.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.470" endtime="20201115 23:00:20.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.472" endtime="20201115 23:00:20.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.430" endtime="20201115 23:00:20.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.428" endtime="20201115 23:00:20.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.481" endtime="20201115 23:00:20.767"></status>
</kw>
<msg timestamp="20201115 23:00:20.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022739292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023094875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.480" endtime="20201115 23:00:20.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022739292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023094875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.771" endtime="20201115 23:00:20.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.779" endtime="20201115 23:00:20.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.477" endtime="20201115 23:00:20.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.475" endtime="20201115 23:00:20.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.786" level="INFO">${RESULT} = [{'time': 0.023094875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003555829999999996, 'source_diff': 0.0003555829999999996}, {'time': 0.023460153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:20.783" endtime="20201115 23:00:20.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.799" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:20.787" endtime="20201115 23:00:20.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.804" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.803" endtime="20201115 23:00:20.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.807" level="INFO">VALUE: [0.0003555829999999996, 0.00033886099999999933, 0.0003385969999999995, 0.0003416659999999974, 0.00034134700000000226, 0.00033959699999999704, 0.000343679999999999, 0.0003387359999999992, 0.0003437089999999976, 0.00033990199999999957, 0.00034281900000000115, 0.0003398190000000016, 0.0003422500000000023, 0.00034130599999999955, 0.00034086099999999786, 0.00034386100000000086, 0.0003424300000000012, 0.00034044400000000224, 0.00034463900000000075, 0.0003402500000000003, 0.0003384169999999971, 0.0003442640000000004, 0.00034440300000000007, 0.00034259700000000004, 0.0003399170000000021, 0.0003408469999999983, 0.000338679999999994, 0.000344292000000003, 0.0003415979999999985, 0.00034347199999999745, 0.00034098600000000145, 0.00034345899999999735, 0.0003416800000000039, 0.00033881899999999715, 0.00034080599999999905, 0.00034298600000000345, 0.0003441250000000007, 0.0003430690000000014, 0.0003445409999999968, 0.0003423339999999997, 0.00034458299999999553, 0.0003430690000000014, 0.0003399580000000013, 0.0003409449999999953, 0.0003446110000000016, 0.0003385830000000034, 0.00034358300000000147, 0.0003391659999999949, 0.000344485999999998, 0.0003407360000000012]</msg>
<status status="PASS" starttime="20201115 23:00:20.805" endtime="20201115 23:00:20.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.800" endtime="20201115 23:00:20.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.810" endtime="20201115 23:00:20.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.813" endtime="20201115 23:00:20.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.812" endtime="20201115 23:00:20.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.808" endtime="20201115 23:00:20.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.426" endtime="20201115 23:00:20.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.424" endtime="20201115 23:00:20.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.424" endtime="20201115 23:00:20.835"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.837" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.845" endtime="20201115 23:00:20.880"></status>
</kw>
<msg timestamp="20201115 23:00:20.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.844" endtime="20201115 23:00:20.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.881" endtime="20201115 23:00:20.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.884" endtime="20201115 23:00:20.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.841" endtime="20201115 23:00:20.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.839" endtime="20201115 23:00:20.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.893" endtime="20201115 23:00:21.178"></status>
</kw>
<msg timestamp="20201115 23:00:21.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023272861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023625639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.892" endtime="20201115 23:00:21.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023272861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023625639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.182" endtime="20201115 23:00:21.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.191" endtime="20201115 23:00:21.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.889" endtime="20201115 23:00:21.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.887" endtime="20201115 23:00:21.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.197" level="INFO">${RESULT} = [{'time': 0.023625639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003527780000000015, 'source_diff': 0.0003527780000000015}, {'time': 0.023991083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:21.194" endtime="20201115 23:00:21.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.211" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:21.199" endtime="20201115 23:00:21.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.215" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.214" endtime="20201115 23:00:21.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.218" level="INFO">VALUE: [0.0003527780000000015, 0.00033927699999999894, 0.00034044499999999825, 0.0003435279999999992, 0.00034218100000000043, 0.00034122200000000213, 0.00034122200000000213, 0.00034038899999999997, 0.0003389450000000002, 0.0003396390000000027, 0.00034442999999999974, 0.00034108299999999897, 0.00034216700000000086, 0.0003389030000000015, 0.00034020800000000156, 0.00033875000000000224, 0.00034254200000000123, 0.00034181900000000015, 0.00034386100000000086, 0.00033888899999999847, 0.00034022200000000113, 0.00034305599999999783, 0.00034436100000000136, 0.00033970800000000106, 0.0003410140000000006, 0.00033913899999999525, 0.00034052799999999966, 0.0003384719999999994, 0.000344583999999995, 0.00034324999999999634, 0.000338999999999999, 0.0003381390000000012, 0.00034229199999999405, 0.0003445279999999967, 0.0003443200000000021, 0.0003389719999999999, 0.00034336100000000036, 0.0003439309999999987, 0.0003407779999999999, 0.0003406390000000037, 0.0003438880000000005, 0.00034447199999999845, 0.0003387779999999979, 0.00034372200000000463, 0.0003430140000000026, 0.0003389719999999999, 0.0003409300000000032, 0.0003437639999999964, 0.00034115300000000376, 0.0003445279999999967]</msg>
<status status="PASS" starttime="20201115 23:00:21.217" endtime="20201115 23:00:21.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.212" endtime="20201115 23:00:21.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.221" endtime="20201115 23:00:21.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.225" endtime="20201115 23:00:21.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.223" endtime="20201115 23:00:21.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.220" endtime="20201115 23:00:21.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.838" endtime="20201115 23:00:21.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.836" endtime="20201115 23:00:21.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.835" endtime="20201115 23:00:21.246"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.248" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.257" endtime="20201115 23:00:21.296"></status>
</kw>
<msg timestamp="20201115 23:00:21.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.255" endtime="20201115 23:00:21.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.298" endtime="20201115 23:00:21.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.300" endtime="20201115 23:00:21.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.253" endtime="20201115 23:00:21.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.250" endtime="20201115 23:00:21.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.309" endtime="20201115 23:00:21.595"></status>
</kw>
<msg timestamp="20201115 23:00:21.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023962833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024297764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.308" endtime="20201115 23:00:21.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023962833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024297764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.599" endtime="20201115 23:00:21.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.608" endtime="20201115 23:00:21.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.305" endtime="20201115 23:00:21.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.304" endtime="20201115 23:00:21.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.614" level="INFO">${RESULT} = [{'time': 0.024297764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003349310000000001, 'source_diff': 0.0003349310000000001}, {'time': 0.024663069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:21.611" endtime="20201115 23:00:21.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.628" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:21.615" endtime="20201115 23:00:21.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.632" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.631" endtime="20201115 23:00:21.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.635" level="INFO">VALUE: [0.0003349310000000001, 0.00034090200000000057, 0.00034268100000000093, 0.000343791999999999, 0.000340693999999999, 0.0003441250000000007, 0.0003421669999999974, 0.00034309700000000054, 0.00034481999999999915, 0.00033897299999999936, 0.00033888900000000194, 0.0003394590000000003, 0.00034070800000000206, 0.00033980500000000205, 0.00034386100000000086, 0.0003409720000000019, 0.0003396389999999992, 0.00033904099999999826, 0.00034218000000000096, 0.00034140300000000054, 0.0003436529999999993, 0.0003411249999999977, 0.0003445279999999967, 0.00033951400000000603, 0.0003445140000000041, 0.00034323599999999677, 0.00034408300000000197, 0.0003417500000000018, 0.0003442780000000034, 0.00034240299999999807, 0.0003431249999999997, 0.0003436669999999989, 0.0003416669999999969, 0.00034355500000000233, 0.0003439859999999975, 0.0003404590000000013, 0.00034088900000000394, 0.00033883300000000366, 0.00034032000000000506, 0.0003400280000000061, 0.0003406520000000038, 0.0003418050000000006, 0.00033954199999999823, 0.0003424300000000047, 0.0003394450000000007, 0.00034463900000000075, 0.00033941699999999464, 0.0003423200000000001, 0.0003436110000000006, 0.00034484800000000176]</msg>
<status status="PASS" starttime="20201115 23:00:21.633" endtime="20201115 23:00:21.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.629" endtime="20201115 23:00:21.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.638" endtime="20201115 23:00:21.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.641" endtime="20201115 23:00:21.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.640" endtime="20201115 23:00:21.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.636" endtime="20201115 23:00:21.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.249" endtime="20201115 23:00:21.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.247" endtime="20201115 23:00:21.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.246" endtime="20201115 23:00:21.662"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.665" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.673" endtime="20201115 23:00:21.708"></status>
</kw>
<msg timestamp="20201115 23:00:21.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.672" endtime="20201115 23:00:21.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.710" endtime="20201115 23:00:21.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.712" endtime="20201115 23:00:21.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.669" endtime="20201115 23:00:21.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.667" endtime="20201115 23:00:21.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.722" endtime="20201115 23:00:22.007"></status>
</kw>
<msg timestamp="20201115 23:00:22.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024382944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02474125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:21.720" endtime="20201115 23:00:22.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024382944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02474125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:22.011" endtime="20201115 23:00:22.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.020" endtime="20201115 23:00:22.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.717" endtime="20201115 23:00:22.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.715" endtime="20201115 23:00:22.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.026" level="INFO">${RESULT} = [{'time': 0.02474125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003583059999999992, 'source_diff': 0.0003583059999999992}, {'time': 0.025106333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:22.023" endtime="20201115 23:00:22.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.041" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:22.027" endtime="20201115 23:00:22.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.045" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.044" endtime="20201115 23:00:22.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.048" level="INFO">VALUE: [0.0003583059999999992, 0.0003431390000000027, 0.0003426109999999996, 0.00033988899999999947, 0.0003385969999999995, 0.00033884699999999976, 0.0003419170000000006, 0.0003420270000000017, 0.00034122299999999814, 0.00034319499999999753, 0.0003407919999999995, 0.00034047300000000086, 0.00034134799999999826, 0.00034419399999999906, 0.00034372200000000117, 0.0003424859999999995, 0.00034126400000000084, 0.0003433059999999981, 0.0003430699999999974, 0.00033844400000000024, 0.00034247199999999645, 0.000344485999999998, 0.00034437500000000093, 0.0003416529999999973, 0.000338679999999994, 0.00033933400000000363, 0.00034191699999999714, 0.0003436110000000006, 0.0003426669999999979, 0.0003403329999999982, 0.00033991599999999567, 0.00033922200000000013, 0.0003432910000000025, 0.0003390129999999991, 0.00034019500000000147, 0.00034391699999999914, 0.000341292, 0.00034076400000000034, 0.0003445270000000042, 0.0003441250000000007, 0.00034087499999999743, 0.00034119399999999606, 0.00034169399999999656, 0.00034113899999999725, 0.0003400699999999979, 0.0003440560000000023, 0.00034080599999999905, 0.0003386250000000021, 0.00033954099999999876, 0.0003396250000000031]</msg>
<status status="PASS" starttime="20201115 23:00:22.046" endtime="20201115 23:00:22.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.042" endtime="20201115 23:00:22.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.051" endtime="20201115 23:00:22.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.054" endtime="20201115 23:00:22.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.053" endtime="20201115 23:00:22.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.049" endtime="20201115 23:00:22.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.665" endtime="20201115 23:00:22.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.664" endtime="20201115 23:00:22.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.663" endtime="20201115 23:00:22.076"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.078" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.086" endtime="20201115 23:00:22.121"></status>
</kw>
<msg timestamp="20201115 23:00:22.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.085" endtime="20201115 23:00:22.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.123" endtime="20201115 23:00:22.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.126" endtime="20201115 23:00:22.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.082" endtime="20201115 23:00:22.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.080" endtime="20201115 23:00:22.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.135" endtime="20201115 23:00:22.421"></status>
</kw>
<msg timestamp="20201115 23:00:22.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023362417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023717708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.133" endtime="20201115 23:00:22.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023362417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023717708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.425" endtime="20201115 23:00:22.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.433" endtime="20201115 23:00:22.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.131" endtime="20201115 23:00:22.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.129" endtime="20201115 23:00:22.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.440" level="INFO">${RESULT} = [{'time': 0.023717708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035529100000000063, 'source_diff': 0.00035529100000000063}, {'time': 0.024082778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:22.436" endtime="20201115 23:00:22.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.453" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:22.441" endtime="20201115 23:00:22.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.458" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.456" endtime="20201115 23:00:22.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.460" level="INFO">VALUE: [0.00035529100000000063, 0.00034404199999999927, 0.0003426249999999992, 0.0003413750000000014, 0.0003400689999999984, 0.00033944400000000124, 0.00034123599999999824, 0.0003391390000000022, 0.00034436100000000136, 0.0003441940000000025, 0.00034400000000000056, 0.0003386940000000005, 0.0003393200000000006, 0.00033934700000000026, 0.00034437500000000093, 0.0003436250000000002, 0.0003410140000000006, 0.0003385139999999981, 0.00034350000000000006, 0.00033951400000000256, 0.00034208299999999997, 0.0003422780000000014, 0.00034080599999999905, 0.00034187499999999843, 0.00034347199999999745, 0.0003392499999999993, 0.00034269500000000397, 0.00033920800000000056, 0.0003421249999999987, 0.0003394170000000016, 0.00034111100000000505, 0.00034461099999999467, 0.0003445000000000045, 0.0003405000000000005, 0.0003403610000000043, 0.0003432639999999959, 0.0003407919999999995, 0.0003383610000000023, 0.00033980599999999805, 0.0003395269999999992, 0.0003400830000000049, 0.00033986200000000327, 0.0003441669999999994, 0.0003397779999999989, 0.000339790999999999, 0.0003419720000000029, 0.00034261100000000655, 0.000339194000000001, 0.0003445969999999951, 0.00033955500000000527]</msg>
<status status="PASS" starttime="20201115 23:00:22.459" endtime="20201115 23:00:22.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.454" endtime="20201115 23:00:22.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.463" endtime="20201115 23:00:22.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.467" endtime="20201115 23:00:22.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.465" endtime="20201115 23:00:22.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.462" endtime="20201115 23:00:22.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.079" endtime="20201115 23:00:22.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.077" endtime="20201115 23:00:22.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.076" endtime="20201115 23:00:22.488"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.490" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.499" endtime="20201115 23:00:22.538"></status>
</kw>
<msg timestamp="20201115 23:00:22.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.498" endtime="20201115 23:00:22.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.540" endtime="20201115 23:00:22.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.542" endtime="20201115 23:00:22.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.495" endtime="20201115 23:00:22.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.492" endtime="20201115 23:00:22.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.551" endtime="20201115 23:00:22.837"></status>
</kw>
<msg timestamp="20201115 23:00:22.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027983556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028321125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.550" endtime="20201115 23:00:22.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027983556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028321125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.841" endtime="20201115 23:00:22.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.849" endtime="20201115 23:00:22.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.547" endtime="20201115 23:00:22.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.545" endtime="20201115 23:00:22.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.856" level="INFO">${RESULT} = [{'time': 0.028321125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033756899999999937, 'source_diff': 0.00033756899999999937}, {'time': 0.028686347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:22.853" endtime="20201115 23:00:22.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.869" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:22.857" endtime="20201115 23:00:22.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.874" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.873" endtime="20201115 23:00:22.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.876" level="INFO">VALUE: [0.00033756899999999937, 0.0003423330000000002, 0.0003398749999999999, 0.0003443470000000018, 0.0003386529999999978, 0.00034409700000000154, 0.00034017999999999896, 0.0003443200000000021, 0.00034268000000000146, 0.0003431669999999984, 0.00034169399999999656, 0.00034109699999999854, 0.0003442079999999986, 0.00034131899999999965, 0.0003389030000000015, 0.0003396529999999953, 0.000340888999999997, 0.0003412079999999956, 0.00033843100000000015, 0.0003447089999999986, 0.0003441110000000011, 0.0003396249999999962, 0.0003394450000000007, 0.00033937500000000287, 0.00034104100000000026, 0.00033920800000000056, 0.00034359700000000104, 0.00034224999999999534, 0.00033968099999999446, 0.0003410970000000055, 0.00034040200000000354, 0.00034109699999999854, 0.0003405559999999988, 0.00034179099999999407, 0.0003389030000000015, 0.000341888999999998, 0.00033816600000000085, 0.00033958299999999747, 0.0003413610000000053, 0.00034291699999999814, 0.00034086099999999786, 0.000344292000000003, 0.00034418099999999896, 0.0003425000000000025, 0.0003399300000000022, 0.00034451399999999716, 0.00034347199999999745, 0.00034254200000000123, 0.00034415200000000035, 0.0003445000000000045]</msg>
<status status="PASS" starttime="20201115 23:00:22.875" endtime="20201115 23:00:22.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.870" endtime="20201115 23:00:22.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.880" endtime="20201115 23:00:22.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.883" endtime="20201115 23:00:22.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.881" endtime="20201115 23:00:22.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.878" endtime="20201115 23:00:22.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.491" endtime="20201115 23:00:22.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.489" endtime="20201115 23:00:22.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.488" endtime="20201115 23:00:22.905"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.908" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.916" endtime="20201115 23:00:22.954"></status>
</kw>
<msg timestamp="20201115 23:00:22.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.915" endtime="20201115 23:00:22.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.956" endtime="20201115 23:00:22.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.958" endtime="20201115 23:00:22.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.912" endtime="20201115 23:00:22.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.910" endtime="20201115 23:00:22.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.967" endtime="20201115 23:00:23.264"></status>
</kw>
<msg timestamp="20201115 23:00:23.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028310597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028643153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.966" endtime="20201115 23:00:23.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028310597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028643153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.273" endtime="20201115 23:00:23.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.291" endtime="20201115 23:00:23.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.963" endtime="20201115 23:00:23.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.962" endtime="20201115 23:00:23.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.305" level="INFO">${RESULT} = [{'time': 0.028643153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003325560000000012, 'source_diff': 0.0003325560000000012}, {'time': 0.029008375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:23.298" endtime="20201115 23:00:23.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.318" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:23.306" endtime="20201115 23:00:23.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.323" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.322" endtime="20201115 23:00:23.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.325" level="INFO">VALUE: [0.0003325560000000012, 0.0003415689999999999, 0.00034383299999999825, 0.00034286199999999933, 0.0003385560000000003, 0.00034427799999999995, 0.00034229099999999804, 0.0003436950000000015, 0.0003409450000000022, 0.0003418339999999992, 0.0003398329999999977, 0.0003390269999999987, 0.0003407360000000012, 0.00033826399999999784, 0.00034395899999999785, 0.00034069399999999556, 0.0003389719999999999, 0.000343889, 0.00034091599999999667, 0.0003411249999999977, 0.00033970900000000054, 0.0003443050000000031, 0.0003442780000000034, 0.0003427219999999967, 0.0003405000000000005, 0.0003403469999999978, 0.0003427500000000028, 0.0003385699999999964, 0.000343889, 0.0003414869999999945, 0.0003442779999999965, 0.00034048600000000095, 0.00034104100000000026, 0.0003434019999999996, 0.0003393199999999971, 0.00033930599999999755, 0.000341292, 0.000343292000000002, 0.00034255500000000133, 0.00034424999999999734, 0.00033916700000000133, 0.00033865300000000126, 0.0003441810000000059, 0.0003420699999999999, 0.00033826399999999784, 0.00034187499999999843, 0.00034236099999999936, 0.0003413199999999991, 0.000344889000000001, 0.0003392779999999984]</msg>
<status status="PASS" starttime="20201115 23:00:23.324" endtime="20201115 23:00:23.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.319" endtime="20201115 23:00:23.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.329" endtime="20201115 23:00:23.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.332" endtime="20201115 23:00:23.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.331" endtime="20201115 23:00:23.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.327" endtime="20201115 23:00:23.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.908" endtime="20201115 23:00:23.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.906" endtime="20201115 23:00:23.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.905" endtime="20201115 23:00:23.354"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.356" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.364" endtime="20201115 23:00:23.402"></status>
</kw>
<msg timestamp="20201115 23:00:23.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.363" endtime="20201115 23:00:23.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.404" endtime="20201115 23:00:23.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.406" endtime="20201115 23:00:23.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.360" endtime="20201115 23:00:23.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.358" endtime="20201115 23:00:23.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.415" endtime="20201115 23:00:23.701"></status>
</kw>
<msg timestamp="20201115 23:00:23.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026484431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026816764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.414" endtime="20201115 23:00:23.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026484431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026816764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.706" endtime="20201115 23:00:23.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.714" endtime="20201115 23:00:23.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.411" endtime="20201115 23:00:23.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.409" endtime="20201115 23:00:23.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.720" level="INFO">${RESULT} = [{'time': 0.026816764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033233300000000063, 'source_diff': 0.00033233300000000063}, {'time': 0.027182097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:23.717" endtime="20201115 23:00:23.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.735" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:23.721" endtime="20201115 23:00:23.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.739" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.738" endtime="20201115 23:00:23.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.742" level="INFO">VALUE: [0.00033233300000000063, 0.00034209699999999954, 0.00034473599999999827, 0.0003432080000000011, 0.0003428469999999968, 0.0003413050000000001, 0.0003417920000000005, 0.00033890299999999804, 0.0003407360000000012, 0.00033927699999999894, 0.00034005499999999883, 0.00034268000000000146, 0.0003445140000000006, 0.0003385969999999995, 0.0003414160000000041, 0.00034034799999999726, 0.0003425279999999947, 0.00034043100000000215, 0.0003393610000000033, 0.0003424720000000034, 0.00034308300000000097, 0.000344000000000004, 0.00034066700000000283, 0.0003439020000000001, 0.0003431110000000001, 0.00034036099999999736, 0.0003441110000000011, 0.0003440700000000019, 0.0003417500000000018, 0.0003389170000000011, 0.0003398469999999973, 0.00034429099999999657, 0.00033965300000000226, 0.00033911100000000305, 0.0003418329999999997, 0.0003416659999999974, 0.000344777999999997, 0.00034352800000000266, 0.00033888900000000194, 0.0003400689999999984, 0.00033872199999999963, 0.00034072200000000163, 0.000340291999999999, 0.00034308299999999403, 0.0003434019999999996, 0.0003383610000000023, 0.00034459700000000204, 0.00034347300000000386, 0.0003429019999999991, 0.0003436669999999989]</msg>
<status status="PASS" starttime="20201115 23:00:23.740" endtime="20201115 23:00:23.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.736" endtime="20201115 23:00:23.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.745" endtime="20201115 23:00:23.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.749" endtime="20201115 23:00:23.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.747" endtime="20201115 23:00:23.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.744" endtime="20201115 23:00:23.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.357" endtime="20201115 23:00:23.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.355" endtime="20201115 23:00:23.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.354" endtime="20201115 23:00:23.770"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.773" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.781" endtime="20201115 23:00:23.820"></status>
</kw>
<msg timestamp="20201115 23:00:23.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.779" endtime="20201115 23:00:23.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.822" endtime="20201115 23:00:23.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.824" endtime="20201115 23:00:23.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.777" endtime="20201115 23:00:23.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.775" endtime="20201115 23:00:23.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.833" endtime="20201115 23:00:24.120"></status>
</kw>
<msg timestamp="20201115 23:00:24.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026874722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027208958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.832" endtime="20201115 23:00:24.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026874722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027208958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.124" endtime="20201115 23:00:24.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.132" endtime="20201115 23:00:24.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.829" endtime="20201115 23:00:24.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.827" endtime="20201115 23:00:24.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.139" level="INFO">${RESULT} = [{'time': 0.027208958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003342359999999982, 'source_diff': 0.0003342359999999982}, {'time': 0.027574167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:24.135" endtime="20201115 23:00:24.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.152" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:24.140" endtime="20201115 23:00:24.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.157" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.156" endtime="20201115 23:00:24.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.159" level="INFO">VALUE: [0.0003342359999999982, 0.0003408750000000009, 0.00033981899999999815, 0.0003413329999999992, 0.0003392779999999984, 0.00034, 0.0003397910000000025, 0.0003448050000000001, 0.00034188900000000147, 0.0003426249999999992, 0.0003431529999999988, 0.0003390979999999995, 0.0003422639999999984, 0.0003394580000000008, 0.00034151399999999416, 0.0003426249999999992, 0.0003413339999999987, 0.00033926399999999884, 0.00034280600000000105, 0.00034058399999999794, 0.0003414300000000037, 0.000344194000000006, 0.00034308299999999403, 0.0003436110000000006, 0.00034030599999999855, 0.00033826399999999784, 0.0003439309999999987, 0.00034087499999999743, 0.00034192999999999724, 0.00033898699999999893, 0.0003407919999999995, 0.0003442639999999969, 0.0003400130000000001, 0.00034119499999999553, 0.00034152800000000066, 0.0003387630000000058, 0.0003432780000000024, 0.0003411659999999969, 0.0003382499999999983, 0.00034458299999999553, 0.00033844400000000024, 0.0003402219999999942, 0.0003437219999999977, 0.00034159699999999904, 0.00034030599999999855, 0.00034165199999999785, 0.00034, 0.00034252800000000166, 0.00034390299999999957, 0.0003396940000000015]</msg>
<status status="PASS" starttime="20201115 23:00:24.158" endtime="20201115 23:00:24.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.153" endtime="20201115 23:00:24.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.163" endtime="20201115 23:00:24.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.166" endtime="20201115 23:00:24.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.164" endtime="20201115 23:00:24.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.161" endtime="20201115 23:00:24.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.773" endtime="20201115 23:00:24.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.771" endtime="20201115 23:00:24.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.770" endtime="20201115 23:00:24.187"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.190" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.198" endtime="20201115 23:00:24.235"></status>
</kw>
<msg timestamp="20201115 23:00:24.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.196" endtime="20201115 23:00:24.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.237" endtime="20201115 23:00:24.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.240" endtime="20201115 23:00:24.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.194" endtime="20201115 23:00:24.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.192" endtime="20201115 23:00:24.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.249" endtime="20201115 23:00:24.534"></status>
</kw>
<msg timestamp="20201115 23:00:24.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0268235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027177139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:24.247" endtime="20201115 23:00:24.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0268235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027177139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:24.539" endtime="20201115 23:00:24.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.547" endtime="20201115 23:00:24.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.244" endtime="20201115 23:00:24.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.243" endtime="20201115 23:00:24.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.554" level="INFO">${RESULT} = [{'time': 0.027177139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035363899999999934, 'source_diff': 0.00035363899999999934}, {'time': 0.02754225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:24.551" endtime="20201115 23:00:24.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.567" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:24.555" endtime="20201115 23:00:24.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.572" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.571" endtime="20201115 23:00:24.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.574" level="INFO">VALUE: [0.00035363899999999934, 0.00033893100000000065, 0.00034187499999999843, 0.0003424310000000007, 0.0003438059999999986, 0.000344098000000001, 0.00033986100000000033, 0.000343986000000001, 0.00034073599999999774, 0.0003409169999999996, 0.0003439310000000022, 0.00033934700000000026, 0.00034401399999999666, 0.0003390280000000051, 0.0003404580000000018, 0.0003432779999999955, 0.0003397230000000001, 0.0003423200000000001, 0.0003425000000000025, 0.00034011100000000405, 0.00033877800000000485, 0.00034004099999999926, 0.0003402920000000059, 0.0003428340000000002, 0.00034452800000000366, 0.00033843100000000015, 0.00034415300000000676, 0.0003421799999999975, 0.00034222299999999567, 0.0003419859999999955, 0.00034126400000000084, 0.00033897299999999936, 0.0003404590000000013, 0.00034355599999999487, 0.00034205500000000083, 0.00034190299999999757, 0.0003404450000000017, 0.00034358300000000147, 0.0003437920000000025, 0.00033911100000000305, 0.00033998600000000045, 0.00033952799999999866, 0.0003397079999999941, 0.00034240299999999807, 0.00034063899999999675, 0.00034105499999999983, 0.0003422219999999962, 0.00034469499999999903, 0.0003440969999999946, 0.00034105499999999983]</msg>
<status status="PASS" starttime="20201115 23:00:24.573" endtime="20201115 23:00:24.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.568" endtime="20201115 23:00:24.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.577" endtime="20201115 23:00:24.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.581" endtime="20201115 23:00:24.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.579" endtime="20201115 23:00:24.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.576" endtime="20201115 23:00:24.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.190" endtime="20201115 23:00:24.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.188" endtime="20201115 23:00:24.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.188" endtime="20201115 23:00:24.602"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.605" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.613" endtime="20201115 23:00:24.648"></status>
</kw>
<msg timestamp="20201115 23:00:24.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.611" endtime="20201115 23:00:24.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.650" endtime="20201115 23:00:24.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.652" endtime="20201115 23:00:24.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.609" endtime="20201115 23:00:24.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.607" endtime="20201115 23:00:24.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.662" endtime="20201115 23:00:24.948"></status>
</kw>
<msg timestamp="20201115 23:00:24.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023905653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024250153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.660" endtime="20201115 23:00:24.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023905653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024250153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.952" endtime="20201115 23:00:24.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.961" endtime="20201115 23:00:24.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.657" endtime="20201115 23:00:24.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.656" endtime="20201115 23:00:24.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.967" level="INFO">${RESULT} = [{'time': 0.024250153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034450000000000106, 'source_diff': 0.00034450000000000106}, {'time': 0.024615278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:24.964" endtime="20201115 23:00:24.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.980" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:24.968" endtime="20201115 23:00:24.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.985" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.984" endtime="20201115 23:00:24.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.988" level="INFO">VALUE: [0.00034450000000000106, 0.000342000000000002, 0.0003382359999999987, 0.00034172200000000263, 0.0003405689999999989, 0.0003385969999999995, 0.00034472200000000217, 0.00034409799999999754, 0.0003393330000000007, 0.0003395970000000005, 0.0003428189999999977, 0.00033908300000000044, 0.00034036100000000083, 0.00034390299999999957, 0.0003435139999999996, 0.0003398190000000016, 0.0003420279999999977, 0.000342791000000002, 0.0003437500000000003, 0.000342195, 0.00033820800000000303, 0.0003402500000000003, 0.0003407919999999995, 0.0003417360000000022, 0.00034048600000000095, 0.0003382359999999987, 0.0003430690000000014, 0.00034434800000000126, 0.00034231900000000065, 0.00034477700000000444, 0.0003425000000000025, 0.0003440279999999962, 0.00034104100000000026, 0.0003381800000000004, 0.0003433329999999943, 0.00034376400000000334, 0.00034424999999999734, 0.0003403329999999982, 0.00034130599999999955, 0.0003395559999999978, 0.00034431900000000265, 0.00034308300000000097, 0.00034277700000000244, 0.0003426109999999996, 0.0003392909999999985, 0.0003432780000000024, 0.0003386940000000005, 0.000339888999999996, 0.0003395139999999991, 0.00033916600000000185]</msg>
<status status="PASS" starttime="20201115 23:00:24.986" endtime="20201115 23:00:24.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.981" endtime="20201115 23:00:24.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.991" endtime="20201115 23:00:24.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.994" endtime="20201115 23:00:25.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.993" endtime="20201115 23:00:25.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.989" endtime="20201115 23:00:25.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.605" endtime="20201115 23:00:25.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.603" endtime="20201115 23:00:25.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.602" endtime="20201115 23:00:25.015"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.018" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.026" endtime="20201115 23:00:25.065"></status>
</kw>
<msg timestamp="20201115 23:00:25.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.025" endtime="20201115 23:00:25.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.066" endtime="20201115 23:00:25.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.073" endtime="20201115 23:00:25.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.022" endtime="20201115 23:00:25.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.020" endtime="20201115 23:00:25.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.082" endtime="20201115 23:00:25.368"></status>
</kw>
<msg timestamp="20201115 23:00:25.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027599833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027929708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.081" endtime="20201115 23:00:25.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027599833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027929708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.372" endtime="20201115 23:00:25.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.380" endtime="20201115 23:00:25.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.078" endtime="20201115 23:00:25.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.076" endtime="20201115 23:00:25.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.387" level="INFO">${RESULT} = [{'time': 0.027929708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003298750000000003, 'source_diff': 0.0003298750000000003}, {'time': 0.028294944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:25.384" endtime="20201115 23:00:25.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.401" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:25.388" endtime="20201115 23:00:25.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.406" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.405" endtime="20201115 23:00:25.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.408" level="INFO">VALUE: [0.0003298750000000003, 0.0003400130000000001, 0.0003404580000000018, 0.0003448050000000001, 0.00034166700000000036, 0.0003438200000000016, 0.0003434860000000005, 0.0003406810000000024, 0.0003400559999999983, 0.00034387500000000043, 0.00034473600000000174, 0.0003428470000000003, 0.00034087499999999743, 0.0003439999999999971, 0.00034413900000000025, 0.0003395559999999978, 0.00034041699999999564, 0.0003436250000000002, 0.00033947299999999986, 0.0003416249999999982, 0.0003400420000000057, 0.0003390970000000035, 0.00034166700000000383, 0.0003404450000000017, 0.00034379199999999555, 0.00034108299999999897, 0.00034120900000000204, 0.0003415000000000015, 0.00034234799999999926, 0.0003386940000000005, 0.0003418879999999985, 0.00034437500000000093, 0.0003433200000000011, 0.0003437920000000025, 0.00033892999999999424, 0.0003445140000000041, 0.0003400559999999983, 0.0003387779999999979, 0.00033947299999999986, 0.00034451399999999716, 0.0003433050000000021, 0.0003404300000000027, 0.0003435140000000031, 0.00034463900000000075, 0.0003419580000000033, 0.0003428050000000016, 0.0003396529999999953, 0.00034136099999999836, 0.00034441600000000017, 0.0003414580000000028]</msg>
<status status="PASS" starttime="20201115 23:00:25.407" endtime="20201115 23:00:25.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.402" endtime="20201115 23:00:25.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.412" endtime="20201115 23:00:25.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.415" endtime="20201115 23:00:25.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.414" endtime="20201115 23:00:25.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.410" endtime="20201115 23:00:25.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.019" endtime="20201115 23:00:25.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.017" endtime="20201115 23:00:25.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.016" endtime="20201115 23:00:25.436"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.439" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.447" endtime="20201115 23:00:25.482"></status>
</kw>
<msg timestamp="20201115 23:00:25.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.446" endtime="20201115 23:00:25.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.483" endtime="20201115 23:00:25.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.486" endtime="20201115 23:00:25.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.443" endtime="20201115 23:00:25.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.441" endtime="20201115 23:00:25.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.495" endtime="20201115 23:00:25.780"></status>
</kw>
<msg timestamp="20201115 23:00:25.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023672639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024016472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.493" endtime="20201115 23:00:25.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023672639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024016472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.784" endtime="20201115 23:00:25.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.792" endtime="20201115 23:00:25.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.491" endtime="20201115 23:00:25.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.489" endtime="20201115 23:00:25.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.799" level="INFO">${RESULT} = [{'time': 0.024016472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003438330000000017, 'source_diff': 0.0003438330000000017}, {'time': 0.024381694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:25.795" endtime="20201115 23:00:25.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.812" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:25.800" endtime="20201115 23:00:25.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.816" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.815" endtime="20201115 23:00:25.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.819" level="INFO">VALUE: [0.0003438330000000017, 0.0003447079999999991, 0.0003398749999999999, 0.0003388480000000027, 0.00034059699999999804, 0.0003434310000000017, 0.0003417360000000022, 0.00034463900000000075, 0.00034354200000000223, 0.00034120800000000256, 0.0003421109999999991, 0.000341000000000001, 0.0003386659999999979, 0.0003414859999999985, 0.0003387499999999988, 0.00034187499999999843, 0.0003386250000000021, 0.00033922200000000013, 0.00034173599999999874, 0.0003442640000000004, 0.0003395139999999991, 0.00034368099999999846, 0.0003404300000000027, 0.0003433050000000021, 0.00034141699999999664, 0.0003436810000000054, 0.00033952799999999866, 0.00034061100000000455, 0.00034287499999999943, 0.00033927800000000535, 0.000340291999999999, 0.0003433059999999946, 0.00034152800000000066, 0.00033855600000000374, 0.00033998600000000045, 0.00034166700000000383, 0.0003423330000000002, 0.0003391250000000026, 0.0003422079999999966, 0.00034370900000000454, 0.0003422219999999962, 0.0003440549999999959, 0.00034434800000000126, 0.0003397499999999998, 0.00034158299999999947, 0.0003418050000000006, 0.00033934700000000373, 0.00034202800000000116, 0.0003398329999999977, 0.00034141599999999717]</msg>
<status status="PASS" starttime="20201115 23:00:25.817" endtime="20201115 23:00:25.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.813" endtime="20201115 23:00:25.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.822" endtime="20201115 23:00:25.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.825" endtime="20201115 23:00:25.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.824" endtime="20201115 23:00:25.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.820" endtime="20201115 23:00:25.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.439" endtime="20201115 23:00:25.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.438" endtime="20201115 23:00:25.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.437" endtime="20201115 23:00:25.847"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.849" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.858" endtime="20201115 23:00:25.893"></status>
</kw>
<msg timestamp="20201115 23:00:25.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.856" endtime="20201115 23:00:25.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.895" endtime="20201115 23:00:25.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.897" endtime="20201115 23:00:25.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.854" endtime="20201115 23:00:25.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.851" endtime="20201115 23:00:25.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.906" endtime="20201115 23:00:26.192"></status>
</kw>
<msg timestamp="20201115 23:00:26.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024905347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025243833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.905" endtime="20201115 23:00:26.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024905347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025243833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.197" endtime="20201115 23:00:26.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.205" endtime="20201115 23:00:26.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.902" endtime="20201115 23:00:26.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.901" endtime="20201115 23:00:26.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.211" level="INFO">${RESULT} = [{'time': 0.025243833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00033848599999999895, 'source_diff': 0.00033848599999999895}, {'time': 0.025609056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:26.208" endtime="20201115 23:00:26.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.225" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:26.212" endtime="20201115 23:00:26.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.229" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.228" endtime="20201115 23:00:26.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.232" level="INFO">VALUE: [0.00033848599999999895, 0.0003397780000000024, 0.00034202800000000116, 0.00034280600000000105, 0.00034318000000000196, 0.00034463900000000075, 0.000341194999999999, 0.0003424440000000008, 0.0003444449999999988, 0.0003409590000000018, 0.0003425139999999986, 0.0003423469999999998, 0.00034166700000000036, 0.00034254199999999776, 0.0003437639999999999, 0.000344792, 0.00033990299999999904, 0.00034241699999999764, 0.00034472200000000564, 0.00034009699999999754, 0.0003417780000000009, 0.0003389019999999951, 0.00034398600000000445, 0.00034304200000000173, 0.00033908299999999697, 0.00034309700000000054, 0.00034055499999999933, 0.0003426390000000057, 0.0003415559999999998, 0.00033965300000000226, 0.00034304200000000173, 0.00034436100000000136, 0.00034120800000000256, 0.00034131899999999965, 0.00034131899999999965, 0.0003414170000000036, 0.0003401520000000033, 0.00034337499999999993, 0.0003404580000000018, 0.00033838900000000144, 0.0003416109999999986, 0.00034037499999999693, 0.00034137499999999793, 0.00034158299999999947, 0.00034033400000000463, 0.000339612000000003, 0.0003413329999999992, 0.00034087499999999743, 0.00034148600000000195, 0.0003436659999999994]</msg>
<status status="PASS" starttime="20201115 23:00:26.230" endtime="20201115 23:00:26.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.226" endtime="20201115 23:00:26.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.235" endtime="20201115 23:00:26.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.239" endtime="20201115 23:00:26.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.237" endtime="20201115 23:00:26.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.234" endtime="20201115 23:00:26.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.850" endtime="20201115 23:00:26.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.848" endtime="20201115 23:00:26.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.847" endtime="20201115 23:00:26.260"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.262" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.271" endtime="20201115 23:00:26.306"></status>
</kw>
<msg timestamp="20201115 23:00:26.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.269" endtime="20201115 23:00:26.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.308" endtime="20201115 23:00:26.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.310" endtime="20201115 23:00:26.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.266" endtime="20201115 23:00:26.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.264" endtime="20201115 23:00:26.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.320" endtime="20201115 23:00:26.606"></status>
</kw>
<msg timestamp="20201115 23:00:26.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023912875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024263458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.318" endtime="20201115 23:00:26.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023912875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024263458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.610" endtime="20201115 23:00:26.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.618" endtime="20201115 23:00:26.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.315" endtime="20201115 23:00:26.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.314" endtime="20201115 23:00:26.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.625" level="INFO">${RESULT} = [{'time': 0.024263458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035058300000000153, 'source_diff': 0.00035058300000000153}, {'time': 0.024628792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:26.622" endtime="20201115 23:00:26.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.638" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:26.626" endtime="20201115 23:00:26.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.643" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.642" endtime="20201115 23:00:26.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.646" level="INFO">VALUE: [0.00035058300000000153, 0.0003390839999999999, 0.00034040299999999954, 0.00034369399999999856, 0.0003444439999999993, 0.00033852700000000166, 0.00033975000000000324, 0.0003414729999999984, 0.000342000000000002, 0.0003403750000000004, 0.0003411660000000004, 0.0003383049999999971, 0.00033920800000000056, 0.0003406390000000002, 0.00033834699999999926, 0.0003387779999999979, 0.00034043100000000215, 0.0003408049999999996, 0.0003402499999999968, 0.0003415270000000012, 0.0003405279999999962, 0.0003416800000000039, 0.000340806000000006, 0.0003392359999999997, 0.00034165199999999785, 0.00034294400000000475, 0.00034319499999999753, 0.0003397499999999998, 0.00034181900000000015, 0.00034458300000000247, 0.0003400139999999996, 0.0003447219999999987, 0.00034368099999999846, 0.00034126400000000084, 0.0003431249999999997, 0.00034087500000000437, 0.00034019499999999453, 0.0003415000000000015, 0.00034230600000000055, 0.00034398600000000445, 0.0003441529999999998, 0.0003436120000000001, 0.00034370900000000454, 0.00034236099999999936, 0.0003387919999999975, 0.000341000000000001, 0.0003421669999999974, 0.00034397199999999795, 0.00034461199999999415, 0.000341485999999995]</msg>
<status status="PASS" starttime="20201115 23:00:26.644" endtime="20201115 23:00:26.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.639" endtime="20201115 23:00:26.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.649" endtime="20201115 23:00:26.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.652" endtime="20201115 23:00:26.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.651" endtime="20201115 23:00:26.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.647" endtime="20201115 23:00:26.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.263" endtime="20201115 23:00:26.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.261" endtime="20201115 23:00:26.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.260" endtime="20201115 23:00:26.673"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.676" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.684" endtime="20201115 23:00:26.723"></status>
</kw>
<msg timestamp="20201115 23:00:26.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.683" endtime="20201115 23:00:26.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.724" endtime="20201115 23:00:26.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.727" endtime="20201115 23:00:26.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.680" endtime="20201115 23:00:26.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.678" endtime="20201115 23:00:26.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.736" endtime="20201115 23:00:27.022"></status>
</kw>
<msg timestamp="20201115 23:00:27.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027414389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027762542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.734" endtime="20201115 23:00:27.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027414389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027762542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.026" endtime="20201115 23:00:27.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.035" endtime="20201115 23:00:27.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.732" endtime="20201115 23:00:27.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.730" endtime="20201115 23:00:27.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.041" level="INFO">${RESULT} = [{'time': 0.027762542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034815300000000035, 'source_diff': 0.00034815300000000035}, {'time': 0.028127861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:27.038" endtime="20201115 23:00:27.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.056" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:27.043" endtime="20201115 23:00:27.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.061" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.060" endtime="20201115 23:00:27.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.063" level="INFO">VALUE: [0.00034815300000000035, 0.00033980500000000205, 0.0003414309999999997, 0.0003439579999999984, 0.00033933400000000016, 0.0003422639999999984, 0.0003416529999999973, 0.0003399580000000013, 0.00033867999999999746, 0.00033870899999999954, 0.00034340299999999907, 0.0003398339999999972, 0.00034108299999999897, 0.00034455599999999587, 0.00034287499999999943, 0.0003396390000000027, 0.0003423200000000001, 0.0003447079999999991, 0.00033972200000000063, 0.00034484699999999535, 0.00034005600000000524, 0.00034406999999999494, 0.0003425409999999948, 0.0003411669999999964, 0.0003401529999999958, 0.00034409700000000154, 0.0003437089999999976, 0.00033897299999999936, 0.00034208399999999944, 0.0003427089999999966, 0.00034148700000000143, 0.0003419439999999968, 0.00034437500000000093, 0.00034401399999999666, 0.000339403000000002, 0.0003384719999999994, 0.0003432219999999972, 0.0003448059999999961, 0.000344000000000004, 0.0003398339999999972, 0.00034159699999999904, 0.00034330600000000155, 0.00034130599999999955, 0.0003412910000000005, 0.00034292999999999824, 0.0003427639999999954, 0.00033866700000000083, 0.000339291999999998, 0.00034204200000000073, 0.0003410689999999994]</msg>
<status status="PASS" starttime="20201115 23:00:27.062" endtime="20201115 23:00:27.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.057" endtime="20201115 23:00:27.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.067" endtime="20201115 23:00:27.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.070" endtime="20201115 23:00:27.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.069" endtime="20201115 23:00:27.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.065" endtime="20201115 23:00:27.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.677" endtime="20201115 23:00:27.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.675" endtime="20201115 23:00:27.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.674" endtime="20201115 23:00:27.091"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.094" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.102" endtime="20201115 23:00:27.144"></status>
</kw>
<msg timestamp="20201115 23:00:27.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.101" endtime="20201115 23:00:27.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.146" endtime="20201115 23:00:27.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.149" endtime="20201115 23:00:27.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.098" endtime="20201115 23:00:27.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.096" endtime="20201115 23:00:27.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.158" endtime="20201115 23:00:27.443"></status>
</kw>
<msg timestamp="20201115 23:00:27.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026734347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027079556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.156" endtime="20201115 23:00:27.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026734347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027079556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.448" endtime="20201115 23:00:27.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.456" endtime="20201115 23:00:27.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.154" endtime="20201115 23:00:27.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.152" endtime="20201115 23:00:27.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.463" level="INFO">${RESULT} = [{'time': 0.027079556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00034520900000000257, 'source_diff': 0.00034520900000000257}, {'time': 0.027444736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:27.460" endtime="20201115 23:00:27.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.476" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:27.464" endtime="20201115 23:00:27.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.481" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.480" endtime="20201115 23:00:27.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.483" level="INFO">VALUE: [0.00034520900000000257, 0.0003382640000000013, 0.0003413190000000031, 0.0003431379999999998, 0.0003435699999999979, 0.00034404199999999927, 0.00033858299999999994, 0.0003438340000000012, 0.00034018099999999843, 0.0003405689999999989, 0.00034130599999999955, 0.0003447500000000013, 0.00034305599999999783, 0.00034342999999999874, 0.0003447219999999987, 0.0003413199999999991, 0.0003396109999999966, 0.00034442999999999974, 0.0003389170000000011, 0.00034004199999999873, 0.0003402370000000002, 0.00034086099999999786, 0.0003426249999999992, 0.0003432910000000025, 0.00034054099999999976, 0.00034084799999999776, 0.00033937499999999593, 0.00034109699999999854, 0.000341292, 0.0003436529999999993, 0.00033913899999999525, 0.00034430600000000255, 0.0003431799999999985, 0.0003444449999999988, 0.0003422219999999962, 0.0003434449999999978, 0.00033940299999999507, 0.00034241699999999764, 0.00034152800000000066, 0.0003397369999999997, 0.00034409700000000154, 0.00033984799999999676, 0.00034241599999999817, 0.000344485999999998, 0.00034163899999999775, 0.00034469399999999956, 0.00034476299999999793, 0.00034323599999999677, 0.00033970800000000106, 0.00033909800000000295]</msg>
<status status="PASS" starttime="20201115 23:00:27.482" endtime="20201115 23:00:27.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.477" endtime="20201115 23:00:27.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.486" endtime="20201115 23:00:27.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.490" endtime="20201115 23:00:27.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.488" endtime="20201115 23:00:27.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.485" endtime="20201115 23:00:27.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.094" endtime="20201115 23:00:27.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.092" endtime="20201115 23:00:27.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.092" endtime="20201115 23:00:27.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:45.822" endtime="20201115 23:00:27.511"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.516" endtime="20201115 23:00:27.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.514" endtime="20201115 23:00:27.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.513" endtime="20201115 23:00:27.536"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:59:45.747" endtime="20201115 23:00:27.537" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.544" endtime="20201115 23:00:27.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.542" endtime="20201115 23:00:27.564"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.578" endtime="20201115 23:00:27.598"></status>
</kw>
<msg timestamp="20201115 23:00:27.599" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.577" endtime="20201115 23:00:27.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.602" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.600" endtime="20201115 23:00:27.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.605" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:00:27.603" endtime="20201115 23:00:27.605"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:27.574" endtime="20201115 23:00:27.606"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:27.572" endtime="20201115 23:00:27.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.569" endtime="20201115 23:00:27.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:00:27.610" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:00:27.610" endtime="20201115 23:00:27.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.607" endtime="20201115 23:00:27.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.569" endtime="20201115 23:00:27.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.568" endtime="20201115 23:00:27.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.612" endtime="20201115 23:00:27.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.566" endtime="20201115 23:00:27.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.565" endtime="20201115 23:00:27.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.541" endtime="20201115 23:00:27.615"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.618" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.627" endtime="20201115 23:00:27.663"></status>
</kw>
<msg timestamp="20201115 23:00:27.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.625" endtime="20201115 23:00:27.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.664" endtime="20201115 23:00:27.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.667" endtime="20201115 23:00:27.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.623" endtime="20201115 23:00:27.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.620" endtime="20201115 23:00:27.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.677" endtime="20201115 23:00:27.964"></status>
</kw>
<msg timestamp="20201115 23:00:27.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075293792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075670167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.675" endtime="20201115 23:00:27.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075293792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075670167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.968" endtime="20201115 23:00:27.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.977" endtime="20201115 23:00:27.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.672" endtime="20201115 23:00:27.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.670" endtime="20201115 23:00:27.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.984" level="INFO">${RESULT} = [{'time': 0.075670167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037637499999999824, 'source_diff': 0.00037637499999999824}, {'time': 0.076035528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:27.981" endtime="20201115 23:00:27.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.998" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:27.986" endtime="20201115 23:00:27.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.003" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.002" endtime="20201115 23:00:28.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.005" level="INFO">VALUE: [0.00037637499999999824, 0.0003574590000000044, 0.00035579199999999367, 0.0003598749999999956, 0.00035502700000000775, 0.00035584700000000635, 0.0003585280000000107, 0.00035790299999999275, 0.00036051399999999234, 0.0003595700000000035, 0.00035933300000000334, 0.0003562219999999894, 0.0003566809999999976, 0.0003576799999999991, 0.00035972200000000676, 0.00035983299999998997, 0.00035916700000000745, 0.0003593890000000016, 0.0003604859999999932, 0.0003581390000000073, 0.0003607500000000069, 0.00035854200000000336, 0.000355054999999993, 0.0003550840000000055, 0.0003605419999999915, 0.0003592499999999915, 0.000361346999999998, 0.00035858300000000953, 0.0003603059999999908, 0.0003552219999999884, 0.00035755600000000887, 0.0003602769999999922, 0.00035608300000000703, 0.0003593060000000037, 0.0003578890000000001, 0.0003555280000000077, 0.0003559300000000043, 0.000359375000000009, 0.00035494399999999593, 0.00036081899999999834, 0.00035570799999999625, 0.00035847199999999857, 0.0003570140000000027, 0.0003608609999999901, 0.00035691699999999826, 0.0003574300000000058, 0.0003579449999999984, 0.0003611800000000026, 0.0003586809999999996, 0.0003568469999999935]</msg>
<status status="PASS" starttime="20201115 23:00:28.004" endtime="20201115 23:00:28.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.999" endtime="20201115 23:00:28.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.008" endtime="20201115 23:00:28.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.012" endtime="20201115 23:00:28.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.010" endtime="20201115 23:00:28.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.007" endtime="20201115 23:00:28.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.619" endtime="20201115 23:00:28.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.617" endtime="20201115 23:00:28.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.616" endtime="20201115 23:00:28.033"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.035" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.044" endtime="20201115 23:00:28.080"></status>
</kw>
<msg timestamp="20201115 23:00:28.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.042" endtime="20201115 23:00:28.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.082" endtime="20201115 23:00:28.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.084" endtime="20201115 23:00:28.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.040" endtime="20201115 23:00:28.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.037" endtime="20201115 23:00:28.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.094" endtime="20201115 23:00:28.380"></status>
</kw>
<msg timestamp="20201115 23:00:28.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024439097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024810069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.092" endtime="20201115 23:00:28.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024439097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024810069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.384" endtime="20201115 23:00:28.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.392" endtime="20201115 23:00:28.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.089" endtime="20201115 23:00:28.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.087" endtime="20201115 23:00:28.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.399" level="INFO">${RESULT} = [{'time': 0.024810069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037097200000000066, 'source_diff': 0.00037097200000000066}, {'time': 0.025175278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:28.396" endtime="20201115 23:00:28.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.412" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:28.400" endtime="20201115 23:00:28.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.417" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.416" endtime="20201115 23:00:28.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.419" level="INFO">VALUE: [0.00037097200000000066, 0.0003578890000000001, 0.00035558399999999907, 0.00036095799999999803, 0.00035590300000000116, 0.0003610420000000024, 0.00035906999999999953, 0.00036108299999999816, 0.00035980500000000123, 0.00036093000000000236, 0.0003610419999999989, 0.00036098600000000064, 0.00035701399999999925, 0.00035919499999999965, 0.00036066699999999854, 0.0003588470000000024, 0.0003566670000000015, 0.0003556250000000018, 0.0003579449999999984, 0.0003585410000000039, 0.0003609450000000014, 0.0003598889999999952, 0.0003550970000000056, 0.00035722300000000373, 0.0003604999999999997, 0.00035930499999999727, 0.0003592920000000041, 0.0003592769999999981, 0.0003610559999999985, 0.00035741699999999876, 0.000361054999999999, 0.00035788800000000065, 0.00035792999999999936, 0.000359861000000003, 0.00035729100000000263, 0.00036144400000000243, 0.0003580689999999956, 0.00035716599999999904, 0.00036065300000000244, 0.00035520900000000216, 0.00035793099999999883, 0.0003578190000000023, 0.00035897199999999907, 0.00036125000000000046, 0.0003601109999999963, 0.000355457999999996, 0.0003555269999999944, 0.0003564999999999957, 0.0003596250000000023, 0.0003549860000000016]</msg>
<status status="PASS" starttime="20201115 23:00:28.418" endtime="20201115 23:00:28.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.413" endtime="20201115 23:00:28.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.423" endtime="20201115 23:00:28.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.426" endtime="20201115 23:00:28.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.424" endtime="20201115 23:00:28.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.421" endtime="20201115 23:00:28.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.036" endtime="20201115 23:00:28.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.034" endtime="20201115 23:00:28.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.033" endtime="20201115 23:00:28.447"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.450" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.458" endtime="20201115 23:00:28.496"></status>
</kw>
<msg timestamp="20201115 23:00:28.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.456" endtime="20201115 23:00:28.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.498" endtime="20201115 23:00:28.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.500" endtime="20201115 23:00:28.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.454" endtime="20201115 23:00:28.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.452" endtime="20201115 23:00:28.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.511" endtime="20201115 23:00:28.796"></status>
</kw>
<msg timestamp="20201115 23:00:28.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027260042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027643167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.508" endtime="20201115 23:00:28.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027260042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027643167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.800" endtime="20201115 23:00:28.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.808" endtime="20201115 23:00:28.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.505" endtime="20201115 23:00:28.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.503" endtime="20201115 23:00:28.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.815" level="INFO">${RESULT} = [{'time': 0.027643167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038312499999999805, 'source_diff': 0.00038312499999999805}, {'time': 0.028008444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:28.812" endtime="20201115 23:00:28.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.829" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:28.816" endtime="20201115 23:00:28.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.834" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.833" endtime="20201115 23:00:28.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.836" level="INFO">VALUE: [0.00038312499999999805, 0.0003590130000000018, 0.0003572220000000008, 0.0003580409999999999, 0.00035477800000000004, 0.0003565410000000019, 0.0003548059999999992, 0.0003562920000000011, 0.0003589860000000021, 0.0003546389999999969, 0.00035719400000000165, 0.00035570799999999625, 0.0003546389999999969, 0.00036126400000000003, 0.00035473600000000133, 0.000357070000000001, 0.00035793099999999883, 0.0003580830000000021, 0.00035611100000000617, 0.0003598190000000043, 0.00035472200000000176, 0.0003571389999999994, 0.00035537499999999805, 0.00035477800000000004, 0.00035477800000000004, 0.0003594589999999995, 0.0003566389999999989, 0.0003592359999999989, 0.00036111100000000423, 0.0003554170000000037, 0.00035730499999999527, 0.0003583339999999949, 0.0003578890000000001, 0.0003545829999999986, 0.00035852799999999685, 0.000358346999999995, 0.0003577779999999961, 0.00036009700000000366, 0.00035773600000000433, 0.00035754200000000236, 0.0003563050000000012, 0.0003596810000000006, 0.00035677800000000204, 0.0003553050000000002, 0.000356473000000003, 0.0003594999999999987, 0.00035673600000000333, 0.0003554300000000038, 0.00035732000000000125, 0.00036079199999999867]</msg>
<status status="PASS" starttime="20201115 23:00:28.835" endtime="20201115 23:00:28.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.830" endtime="20201115 23:00:28.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.839" endtime="20201115 23:00:28.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.843" endtime="20201115 23:00:28.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.841" endtime="20201115 23:00:28.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.838" endtime="20201115 23:00:28.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.450" endtime="20201115 23:00:28.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.448" endtime="20201115 23:00:28.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.448" endtime="20201115 23:00:28.864"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.866" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.875" endtime="20201115 23:00:28.913"></status>
</kw>
<msg timestamp="20201115 23:00:28.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.873" endtime="20201115 23:00:28.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.914" endtime="20201115 23:00:28.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.917" endtime="20201115 23:00:28.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.871" endtime="20201115 23:00:28.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.868" endtime="20201115 23:00:28.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.926" endtime="20201115 23:00:29.213"></status>
</kw>
<msg timestamp="20201115 23:00:29.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027375653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027739139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.925" endtime="20201115 23:00:29.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027375653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027739139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.217" endtime="20201115 23:00:29.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.225" endtime="20201115 23:00:29.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.922" endtime="20201115 23:00:29.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.920" endtime="20201115 23:00:29.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.231" level="INFO">${RESULT} = [{'time': 0.027739139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036348599999999967, 'source_diff': 0.00036348599999999967}, {'time': 0.028104375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:29.228" endtime="20201115 23:00:29.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.244" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:29.232" endtime="20201115 23:00:29.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.249" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.248" endtime="20201115 23:00:29.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.251" level="INFO">VALUE: [0.00036348599999999967, 0.0003600280000000018, 0.00035724999999999993, 0.00035987500000000255, 0.00036106999999999806, 0.0003588749999999981, 0.00035940199999999825, 0.0003582770000000006, 0.0003610000000000002, 0.00036093099999999836, 0.00035686100000000345, 0.0003601390000000024, 0.00035829199999999617, 0.0003575979999999937, 0.00035740300000000613, 0.00035604099999999445, 0.0003583480000000014, 0.0003599450000000004, 0.000357861000000001, 0.00035759700000000116, 0.0003570419999999949, 0.00035658400000000007, 0.0003605269999999994, 0.00035980599999999724, 0.0003558469999999994, 0.0003605139999999993, 0.0003606250000000033, 0.000354972000000002, 0.00035829100000000363, 0.00035969500000000015, 0.0003604999999999997, 0.00035683300000000084, 0.0003609030000000027, 0.0003592219999999993, 0.0003607079999999943, 0.00036076399999999953, 0.0003554860000000021, 0.00036058399999999713, 0.0003560980000000061, 0.00035937500000000205, 0.00035604200000000086, 0.000355666999999997, 0.00036008299999999716, 0.0003550689999999995, 0.00035626400000000197, 0.0003606109999999968, 0.00035661099999999973, 0.0003580140000000037, 0.0003573889999999996, 0.00035583299999999984]</msg>
<status status="PASS" starttime="20201115 23:00:29.250" endtime="20201115 23:00:29.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.245" endtime="20201115 23:00:29.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.255" endtime="20201115 23:00:29.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.258" endtime="20201115 23:00:29.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.256" endtime="20201115 23:00:29.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.253" endtime="20201115 23:00:29.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.867" endtime="20201115 23:00:29.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.865" endtime="20201115 23:00:29.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.864" endtime="20201115 23:00:29.279"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.282" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.290" endtime="20201115 23:00:29.327"></status>
</kw>
<msg timestamp="20201115 23:00:29.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.289" endtime="20201115 23:00:29.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.329" endtime="20201115 23:00:29.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.331" endtime="20201115 23:00:29.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.286" endtime="20201115 23:00:29.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.284" endtime="20201115 23:00:29.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.340" endtime="20201115 23:00:29.627"></status>
</kw>
<msg timestamp="20201115 23:00:29.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024157361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024513972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.339" endtime="20201115 23:00:29.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024157361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024513972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.632" endtime="20201115 23:00:29.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.640" endtime="20201115 23:00:29.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.336" endtime="20201115 23:00:29.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.334" endtime="20201115 23:00:29.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.646" level="INFO">${RESULT} = [{'time': 0.024513972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035661099999999973, 'source_diff': 0.00035661099999999973}, {'time': 0.02487925, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:29.643" endtime="20201115 23:00:29.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.659" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:29.647" endtime="20201115 23:00:29.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.664" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.663" endtime="20201115 23:00:29.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.666" level="INFO">VALUE: [0.00035661099999999973, 0.0003599999999999992, 0.00036024999999999946, 0.0003562769999999986, 0.00035993100000000083, 0.00036117999999999914, 0.0003564440000000009, 0.00035687499999999955, 0.000358958999999999, 0.00035690300000000216, 0.000357554999999999, 0.00035988899999999865, 0.00035808400000000157, 0.0003598479999999994, 0.0003595410000000014, 0.0003612779999999996, 0.0003578189999999988, 0.0003611529999999995, 0.000360555999999998, 0.00035659700000000016, 0.0003570690000000015, 0.00035659700000000016, 0.00035843100000000627, 0.0003548189999999993, 0.0003600280000000053, 0.00035683300000000084, 0.00035543099999999633, 0.00035565199999999797, 0.000360861000000004, 0.00035952799999999785, 0.0003582500000000044, 0.00035702799999999535, 0.0003551389999999974, 0.00035568000000000405, 0.0003550280000000003, 0.0003560690000000005, 0.0003564029999999982, 0.0003555699999999995, 0.0003572500000000034, 0.0003588469999999955, 0.0003598060000000042, 0.00035737500000000005, 0.0003571389999999994, 0.000359555999999997, 0.0003586390000000009, 0.0003599450000000004, 0.0003546940000000026, 0.0003594589999999995, 0.0003584030000000002, 0.00036026399999999903]</msg>
<status status="PASS" starttime="20201115 23:00:29.665" endtime="20201115 23:00:29.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.660" endtime="20201115 23:00:29.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.670" endtime="20201115 23:00:29.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.674" endtime="20201115 23:00:29.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.672" endtime="20201115 23:00:29.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.668" endtime="20201115 23:00:29.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.283" endtime="20201115 23:00:29.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.280" endtime="20201115 23:00:29.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.280" endtime="20201115 23:00:29.695"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.697" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.705" endtime="20201115 23:00:29.742"></status>
</kw>
<msg timestamp="20201115 23:00:29.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.704" endtime="20201115 23:00:29.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.744" endtime="20201115 23:00:29.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.746" endtime="20201115 23:00:29.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.701" endtime="20201115 23:00:29.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.699" endtime="20201115 23:00:29.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.755" endtime="20201115 23:00:30.043"></status>
</kw>
<msg timestamp="20201115 23:00:30.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025596653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025956403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.754" endtime="20201115 23:00:30.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025596653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025956403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.047" endtime="20201115 23:00:30.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.055" endtime="20201115 23:00:30.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.751" endtime="20201115 23:00:30.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.749" endtime="20201115 23:00:30.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.062" level="INFO">${RESULT} = [{'time': 0.025956403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035974999999999896, 'source_diff': 0.00035974999999999896}, {'time': 0.026321583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:30.058" endtime="20201115 23:00:30.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.075" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:30.063" endtime="20201115 23:00:30.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.079" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.078" endtime="20201115 23:00:30.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.082" level="INFO">VALUE: [0.00035974999999999896, 0.00035924999999999846, 0.0003554859999999986, 0.00035795800000000197, 0.00036112500000000033, 0.00035923600000000236, 0.0003576389999999999, 0.00035891700000000026, 0.0003597909999999982, 0.00036062499999999983, 0.00035851400000000075, 0.0003595419999999974, 0.00035961099999999926, 0.00035661099999999973, 0.00035747199999999757, 0.0003593749999999986, 0.00035541699999999676, 0.00035709700000000066, 0.00035715299999999894, 0.0003595549999999975, 0.0003567779999999951, 0.0003608890000000031, 0.0003555970000000061, 0.0003594999999999987, 0.000355069999999999, 0.000356375000000006, 0.00035554200000000036, 0.0003553059999999997, 0.0003570830000000011, 0.0003587359999999984, 0.00035700000000000315, 0.00035880599999999624, 0.0003610969999999977, 0.0003592769999999981, 0.00035815299999999994, 0.00035561099999999873, 0.000361346999999998, 0.0003565700000000005, 0.0003576809999999986, 0.00035909700000000266, 0.0003573610000000005, 0.0003590689999999966, 0.00035824999999999746, 0.0003587219999999988, 0.0003554029999999972, 0.0003574159999999993, 0.0003566389999999989, 0.00035747199999999757, 0.00035647199999999657, 0.0003555829999999996]</msg>
<status status="PASS" starttime="20201115 23:00:30.081" endtime="20201115 23:00:30.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.076" endtime="20201115 23:00:30.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.090" endtime="20201115 23:00:30.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.093" endtime="20201115 23:00:30.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.092" endtime="20201115 23:00:30.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.088" endtime="20201115 23:00:30.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.698" endtime="20201115 23:00:30.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.696" endtime="20201115 23:00:30.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.695" endtime="20201115 23:00:30.114"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.117" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.125" endtime="20201115 23:00:30.159"></status>
</kw>
<msg timestamp="20201115 23:00:30.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.124" endtime="20201115 23:00:30.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.160" endtime="20201115 23:00:30.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.163" endtime="20201115 23:00:30.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.121" endtime="20201115 23:00:30.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.119" endtime="20201115 23:00:30.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.172" endtime="20201115 23:00:30.474"></status>
</kw>
<msg timestamp="20201115 23:00:30.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023325944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.170" endtime="20201115 23:00:30.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023325944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.483" endtime="20201115 23:00:30.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.495" endtime="20201115 23:00:30.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.168" endtime="20201115 23:00:30.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.166" endtime="20201115 23:00:30.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.501" level="INFO">${RESULT} = [{'time': 0.023325944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037873600000000104, 'source_diff': 0.00037873600000000104}, {'time': 0.023691111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:30.498" endtime="20201115 23:00:30.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.516" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:30.502" endtime="20201115 23:00:30.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.520" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.519" endtime="20201115 23:00:30.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.523" level="INFO">VALUE: [0.00037873600000000104, 0.00035705500000000195, 0.00036061100000000026, 0.0003565280000000018, 0.00036112500000000033, 0.0003591389999999979, 0.0003546799999999996, 0.0003578199999999983, 0.000361249999999997, 0.0003558889999999981, 0.00035768100000000205, 0.00035473599999999786, 0.000355569, 0.0003566249999999993, 0.00035937500000000205, 0.0003556530000000009, 0.0003606940000000017, 0.0003560140000000017, 0.0003555270000000013, 0.00036029199999999817, 0.00035632000000000025, 0.0003568050000000017, 0.00036105600000000196, 0.00035590300000000463, 0.00035490300000000363, 0.0003563469999999999, 0.0003583890000000006, 0.00035843099999999933, 0.00035466700000000295, 0.00035920799999999975, 0.00035959700000000316, 0.0003589449999999994, 0.0003562920000000011, 0.0003549300000000033, 0.0003610419999999989, 0.00035637499999999905, 0.00035940299999999425, 0.0003583060000000027, 0.0003577909999999962, 0.00035526400000000097, 0.00035492999999999636, 0.00035927800000000454, 0.0003601669999999946, 0.00036119399999999524, 0.00035726299999999656, 0.0003569170000000052, 0.000359569000000004, 0.00035881899999999634, 0.00035808299999999516, 0.00035976399999999853]</msg>
<status status="PASS" starttime="20201115 23:00:30.522" endtime="20201115 23:00:30.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.517" endtime="20201115 23:00:30.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.527" endtime="20201115 23:00:30.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.530" endtime="20201115 23:00:30.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.529" endtime="20201115 23:00:30.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.525" endtime="20201115 23:00:30.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.118" endtime="20201115 23:00:30.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.116" endtime="20201115 23:00:30.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.115" endtime="20201115 23:00:30.551"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.554" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.562" endtime="20201115 23:00:30.597"></status>
</kw>
<msg timestamp="20201115 23:00:30.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.560" endtime="20201115 23:00:30.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.598" endtime="20201115 23:00:30.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.601" endtime="20201115 23:00:30.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.558" endtime="20201115 23:00:30.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.556" endtime="20201115 23:00:30.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.610" endtime="20201115 23:00:30.898"></status>
</kw>
<msg timestamp="20201115 23:00:30.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023278028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023632028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.608" endtime="20201115 23:00:30.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023278028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023632028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.902" endtime="20201115 23:00:30.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.910" endtime="20201115 23:00:30.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.606" endtime="20201115 23:00:30.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.604" endtime="20201115 23:00:30.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.916" level="INFO">${RESULT} = [{'time': 0.023632028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035400000000000015, 'source_diff': 0.00035400000000000015}, {'time': 0.023997236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:30.913" endtime="20201115 23:00:30.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.930" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:30.918" endtime="20201115 23:00:30.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.934" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.933" endtime="20201115 23:00:30.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.937" level="INFO">VALUE: [0.00035400000000000015, 0.0003565280000000018, 0.0003567080000000007, 0.0003563339999999998, 0.000360361, 0.0003585000000000012, 0.0003552500000000014, 0.0003579860000000011, 0.0003583610000000015, 0.00035988899999999865, 0.0003597219999999998, 0.00035965300000000144, 0.00035581999999999975, 0.00035523599999999836, 0.0003547919999999996, 0.0003592640000000015, 0.00035906999999999953, 0.0003547500000000009, 0.00035561099999999873, 0.00036076399999999953, 0.0003562639999999985, 0.00035522200000000226, 0.0003579029999999997, 0.0003595830000000036, 0.0003605969999999972, 0.00035766700000000595, 0.0003601109999999963, 0.00035798599999999764, 0.0003552080000000027, 0.00036062499999999637, 0.00035494500000000234, 0.00036055600000000493, 0.0003559449999999964, 0.0003575700000000015, 0.000358861000000002, 0.00035780599999999524, 0.00035541699999999676, 0.000359070000000003, 0.00035716599999999904, 0.0003588470000000024, 0.00035716700000000545, 0.0003556249999999983, 0.0003553059999999997, 0.00035842999999999986, 0.00036008299999999716, 0.0003556249999999983, 0.0003583190000000028, 0.0003576939999999987, 0.00035967999999999417, 0.0003570830000000011]</msg>
<status status="PASS" starttime="20201115 23:00:30.935" endtime="20201115 23:00:30.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.931" endtime="20201115 23:00:30.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.940" endtime="20201115 23:00:30.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.943" endtime="20201115 23:00:30.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.942" endtime="20201115 23:00:30.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.938" endtime="20201115 23:00:30.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.554" endtime="20201115 23:00:30.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.552" endtime="20201115 23:00:30.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.552" endtime="20201115 23:00:30.965"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.967" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.975" endtime="20201115 23:00:31.013"></status>
</kw>
<msg timestamp="20201115 23:00:31.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.974" endtime="20201115 23:00:31.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.015" endtime="20201115 23:00:31.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.017" endtime="20201115 23:00:31.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.971" endtime="20201115 23:00:31.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.969" endtime="20201115 23:00:31.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.027" endtime="20201115 23:00:31.314"></status>
</kw>
<msg timestamp="20201115 23:00:31.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026933542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027288833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.025" endtime="20201115 23:00:31.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026933542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027288833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.318" endtime="20201115 23:00:31.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.327" endtime="20201115 23:00:31.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.023" endtime="20201115 23:00:31.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.021" endtime="20201115 23:00:31.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.333" level="INFO">${RESULT} = [{'time': 0.027288833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035529099999999716, 'source_diff': 0.00035529099999999716}, {'time': 0.027654139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:31.330" endtime="20201115 23:00:31.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.346" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:31.334" endtime="20201115 23:00:31.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.351" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.350" endtime="20201115 23:00:31.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.353" level="INFO">VALUE: [0.00035529099999999716, 0.00036074999999999996, 0.00035734699999999744, 0.00035883399999999885, 0.00035933399999999935, 0.00035640300000000166, 0.00035793099999999883, 0.00035711099999999676, 0.0003571379999999999, 0.0003599030000000017, 0.00036079200000000214, 0.0003573060000000017, 0.00035982000000000375, 0.0003591250000000018, 0.00035536199999999796, 0.00036130599999999874, 0.00036068099999999464, 0.0003593470000000029, 0.00035804200000000286, 0.0003555140000000012, 0.00036011100000000323, 0.00035732000000000125, 0.0003552500000000014, 0.0003567080000000042, 0.00035961100000000273, 0.000360667000000002, 0.00036104200000000586, 0.0003599580000000005, 0.0003598889999999952, 0.00035865300000000044, 0.0003561249999999988, 0.00035722200000000426, 0.0003600690000000045, 0.0003548189999999993, 0.0003606940000000017, 0.00035743099999999833, 0.00035505599999999943, 0.0003596109999999958, 0.0003594030000000012, 0.0003575140000000032, 0.00035481999999999875, 0.0003603190000000048, 0.0003578339999999944, 0.00035961199999999527, 0.0003610130000000003, 0.0003611109999999973, 0.00035891599999999385, 0.00036130599999999874, 0.000357958999999998, 0.0003607230000000003]</msg>
<status status="PASS" starttime="20201115 23:00:31.352" endtime="20201115 23:00:31.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.347" endtime="20201115 23:00:31.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.357" endtime="20201115 23:00:31.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.360" endtime="20201115 23:00:31.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.359" endtime="20201115 23:00:31.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.355" endtime="20201115 23:00:31.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.968" endtime="20201115 23:00:31.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.966" endtime="20201115 23:00:31.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.965" endtime="20201115 23:00:31.381"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.384" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.392" endtime="20201115 23:00:31.434"></status>
</kw>
<msg timestamp="20201115 23:00:31.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.390" endtime="20201115 23:00:31.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.436" endtime="20201115 23:00:31.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.438" endtime="20201115 23:00:31.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.388" endtime="20201115 23:00:31.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.386" endtime="20201115 23:00:31.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.448" endtime="20201115 23:00:31.736"></status>
</kw>
<msg timestamp="20201115 23:00:31.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027344556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027713361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.446" endtime="20201115 23:00:31.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027344556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027713361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.740" endtime="20201115 23:00:31.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.748" endtime="20201115 23:00:31.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.443" endtime="20201115 23:00:31.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.442" endtime="20201115 23:00:31.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.754" level="INFO">${RESULT} = [{'time': 0.027713361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036880499999999983, 'source_diff': 0.00036880499999999983}, {'time': 0.028078528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:31.751" endtime="20201115 23:00:31.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.768" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:31.755" endtime="20201115 23:00:31.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.772" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.771" endtime="20201115 23:00:31.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.775" level="INFO">VALUE: [0.00036880499999999983, 0.00035756999999999803, 0.00035577800000000104, 0.00035979200000000114, 0.00035729099999999916, 0.0003561249999999988, 0.0003553890000000011, 0.0003606939999999982, 0.000360555000000002, 0.00035865300000000044, 0.0003552639999999975, 0.00035572200000000276, 0.0003593470000000029, 0.0003589999999999982, 0.00035962499999999537, 0.0003612220000000013, 0.00035534700000000585, 0.00035641699999999776, 0.0003554590000000024, 0.0003602779999999986, 0.0003589579999999995, 0.00035615299999999794, 0.00036019500000000065, 0.00035572200000000276, 0.00035848599999999814, 0.0003576250000000003, 0.0003582089999999982, 0.0003567920000000016, 0.00035930599999999674, 0.000356861, 0.0003613470000000049, 0.00035761100000000073, 0.0003607360000000004, 0.0003553609999999985, 0.00035568000000000405, 0.00035683300000000084, 0.00036104099999999945, 0.000359667000000001, 0.00035912499999999486, 0.00035808400000000157, 0.0003573199999999943, 0.00035511100000000517, 0.0003576940000000056, 0.00035792999999999936, 0.0003588050000000037, 0.00035632000000000025, 0.00036024999999999946, 0.0003610689999999986, 0.0003554029999999972, 0.00035980499999999777]</msg>
<status status="PASS" starttime="20201115 23:00:31.773" endtime="20201115 23:00:31.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.768" endtime="20201115 23:00:31.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.778" endtime="20201115 23:00:31.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.781" endtime="20201115 23:00:31.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.780" endtime="20201115 23:00:31.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.776" endtime="20201115 23:00:31.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.384" endtime="20201115 23:00:31.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.382" endtime="20201115 23:00:31.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.382" endtime="20201115 23:00:31.802"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.805" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.813" endtime="20201115 23:00:31.847"></status>
</kw>
<msg timestamp="20201115 23:00:31.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.812" endtime="20201115 23:00:31.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.848" endtime="20201115 23:00:31.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.851" endtime="20201115 23:00:31.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.809" endtime="20201115 23:00:31.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.807" endtime="20201115 23:00:31.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.860" endtime="20201115 23:00:32.148"></status>
</kw>
<msg timestamp="20201115 23:00:32.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023157792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023511903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.859" endtime="20201115 23:00:32.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023157792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023511903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.152" endtime="20201115 23:00:32.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.160" endtime="20201115 23:00:32.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.856" endtime="20201115 23:00:32.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.855" endtime="20201115 23:00:32.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.166" level="INFO">${RESULT} = [{'time': 0.023511903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003541110000000007, 'source_diff': 0.0003541110000000007}, {'time': 0.023877319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:32.163" endtime="20201115 23:00:32.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.181" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:32.168" endtime="20201115 23:00:32.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.186" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.185" endtime="20201115 23:00:32.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.188" level="INFO">VALUE: [0.0003541110000000007, 0.00036063799999999993, 0.00035816600000000004, 0.00035583299999999984, 0.0003605969999999972, 0.00035897199999999907, 0.00036011199999999924, 0.00035568100000000005, 0.0003601389999999989, 0.00035970800000000025, 0.0003553339999999988, 0.00036061100000000026, 0.0003592640000000015, 0.0003583470000000019, 0.00035941700000000076, 0.0003610139999999998, 0.0003569860000000001, 0.0003610269999999999, 0.0003593890000000016, 0.00036088899999999965, 0.00035792999999999936, 0.00035734699999999744, 0.00035557000000000297, 0.0003570140000000027, 0.00035880499999999677, 0.00035908400000000257, 0.00036125000000000046, 0.0003575139999999963, 0.000354972000000002, 0.00035632000000000025, 0.00035495800000000244, 0.00035740300000000613, 0.0003560139999999948, 0.0003603749999999961, 0.00035627700000000206, 0.0003584030000000002, 0.00035637499999999905, 0.0003564300000000048, 0.00035655500000000145, 0.00035572200000000276, 0.00035665299999999844, 0.0003613890000000036, 0.0003569170000000052, 0.0003578469999999945, 0.0003577089999999977, 0.00036105500000000595, 0.0003610559999999985, 0.0003553609999999985, 0.0003568050000000017, 0.0003605549999999985]</msg>
<status status="PASS" starttime="20201115 23:00:32.187" endtime="20201115 23:00:32.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.182" endtime="20201115 23:00:32.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.191" endtime="20201115 23:00:32.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.195" endtime="20201115 23:00:32.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.193" endtime="20201115 23:00:32.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.190" endtime="20201115 23:00:32.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.805" endtime="20201115 23:00:32.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.804" endtime="20201115 23:00:32.216"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.803" endtime="20201115 23:00:32.216"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.218" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.227" endtime="20201115 23:00:32.265"></status>
</kw>
<msg timestamp="20201115 23:00:32.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.225" endtime="20201115 23:00:32.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.266" endtime="20201115 23:00:32.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.269" endtime="20201115 23:00:32.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.223" endtime="20201115 23:00:32.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.220" endtime="20201115 23:00:32.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.278" endtime="20201115 23:00:32.565"></status>
</kw>
<msg timestamp="20201115 23:00:32.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026712097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027067125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.276" endtime="20201115 23:00:32.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026712097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027067125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.569" endtime="20201115 23:00:32.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.577" endtime="20201115 23:00:32.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.274" endtime="20201115 23:00:32.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.272" endtime="20201115 23:00:32.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.584" level="INFO">${RESULT} = [{'time': 0.027067125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003550280000000003, 'source_diff': 0.0003550280000000003}, {'time': 0.027432514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:32.580" endtime="20201115 23:00:32.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.597" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:32.585" endtime="20201115 23:00:32.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.601" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.600" endtime="20201115 23:00:32.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.604" level="INFO">VALUE: [0.0003550280000000003, 0.0003576950000000016, 0.00035594499999999987, 0.000360652999999999, 0.0003580419999999994, 0.00035779199999999914, 0.00036062499999999983, 0.00035911099999999876, 0.00036126400000000003, 0.000359458, 0.00035759700000000116, 0.0003606519999999995, 0.0003570129999999998, 0.0003584160000000003, 0.00035797199999999807, 0.0003585139999999973, 0.0003546249999999973, 0.0003550140000000007, 0.0003558889999999981, 0.0003606109999999968, 0.00035837500000000105, 0.0003591390000000014, 0.0003576120000000002, 0.0003570690000000015, 0.00035476400000000047, 0.0003576389999999999, 0.0003579999999999972, 0.00035841699999999976, 0.00036115199999999653, 0.0003553469999999989, 0.00036030499999999827, 0.0003597779999999981, 0.0003598060000000042, 0.0003585280000000038, 0.0003587080000000062, 0.00036080499999999877, 0.00035909700000000266, 0.0003550970000000056, 0.00036052799999999885, 0.00035844399999999943, 0.0003557359999999954, 0.0003592779999999976, 0.0003578469999999945, 0.00035500000000000115, 0.00035831899999999584, 0.00035555500000000045, 0.00035594399999999693, 0.00035627700000000206, 0.0003555280000000008, 0.00036011199999999577]</msg>
<status status="PASS" starttime="20201115 23:00:32.602" endtime="20201115 23:00:32.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.598" endtime="20201115 23:00:32.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.607" endtime="20201115 23:00:32.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.610" endtime="20201115 23:00:32.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.609" endtime="20201115 23:00:32.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.605" endtime="20201115 23:00:32.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.219" endtime="20201115 23:00:32.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.217" endtime="20201115 23:00:32.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.216" endtime="20201115 23:00:32.632"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.634" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.643" endtime="20201115 23:00:32.682"></status>
</kw>
<msg timestamp="20201115 23:00:32.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.641" endtime="20201115 23:00:32.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.683" endtime="20201115 23:00:32.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.686" endtime="20201115 23:00:32.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.639" endtime="20201115 23:00:32.688"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.636" endtime="20201115 23:00:32.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.695" endtime="20201115 23:00:32.981"></status>
</kw>
<msg timestamp="20201115 23:00:32.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027560361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027937667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.693" endtime="20201115 23:00:32.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027560361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027937667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.985" endtime="20201115 23:00:32.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.993" endtime="20201115 23:00:32.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.691" endtime="20201115 23:00:32.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.689" endtime="20201115 23:00:32.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.000" level="INFO">${RESULT} = [{'time': 0.027937667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037730600000000086, 'source_diff': 0.00037730600000000086}, {'time': 0.028302944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:32.997" endtime="20201115 23:00:33.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.013" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:33.001" endtime="20201115 23:00:33.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.018" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.017" endtime="20201115 23:00:33.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.021" level="INFO">VALUE: [0.00037730600000000086, 0.00035477700000000056, 0.00035476400000000047, 0.0003547629999999975, 0.00036017999999999814, 0.000359458, 0.0003577359999999974, 0.00035554200000000036, 0.00035711100000000023, 0.00035577700000000156, 0.0003598060000000007, 0.0003592359999999989, 0.00035541699999999676, 0.0003580139999999968, 0.0003598329999999969, 0.00035705500000000195, 0.0003560140000000017, 0.0003546950000000021, 0.0003588749999999946, 0.0003565280000000018, 0.000358555999999996, 0.0003555280000000008, 0.00036087500000000355, 0.0003564029999999982, 0.0003559860000000026, 0.0003598469999999965, 0.0003588470000000024, 0.00035773600000000433, 0.0003610000000000002, 0.00035538799999999815, 0.00035958399999999613, 0.000358555999999996, 0.00035483299999999884, 0.00035550000000000165, 0.0003565280000000018, 0.00035993100000000083, 0.00035527800000000054, 0.0003606800000000021, 0.0003581250000000008, 0.0003588060000000032, 0.0003576939999999987, 0.0003549029999999967, 0.00035698599999999664, 0.00035665299999999844, 0.0003574300000000058, 0.0003583749999999941, 0.00035969500000000015, 0.00035887500000000155, 0.00035947199999999957, 0.0003560140000000017]</msg>
<status status="PASS" starttime="20201115 23:00:33.019" endtime="20201115 23:00:33.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.014" endtime="20201115 23:00:33.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.024" endtime="20201115 23:00:33.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.028" endtime="20201115 23:00:33.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.026" endtime="20201115 23:00:33.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.023" endtime="20201115 23:00:33.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.635" endtime="20201115 23:00:33.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.633" endtime="20201115 23:00:33.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.632" endtime="20201115 23:00:33.049"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.051" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.061" endtime="20201115 23:00:33.098"></status>
</kw>
<msg timestamp="20201115 23:00:33.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.059" endtime="20201115 23:00:33.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.099" endtime="20201115 23:00:33.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.102" endtime="20201115 23:00:33.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.056" endtime="20201115 23:00:33.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.054" endtime="20201115 23:00:33.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.111" endtime="20201115 23:00:33.416"></status>
</kw>
<msg timestamp="20201115 23:00:33.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027632903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02799375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:33.110" endtime="20201115 23:00:33.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027632903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02799375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:33.422" endtime="20201115 23:00:33.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.430" endtime="20201115 23:00:33.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.107" endtime="20201115 23:00:33.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.105" endtime="20201115 23:00:33.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.437" level="INFO">${RESULT} = [{'time': 0.02799375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036084700000000094, 'source_diff': 0.00036084700000000094}, {'time': 0.028359042, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:33.433" endtime="20201115 23:00:33.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.450" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:33.438" endtime="20201115 23:00:33.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.454" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.453" endtime="20201115 23:00:33.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.457" level="INFO">VALUE: [0.00036084700000000094, 0.0003577920000000026, 0.000358764000000001, 0.0003569869999999996, 0.000356861, 0.0003603330000000009, 0.0003559310000000003, 0.00035943100000000033, 0.0003567220000000003, 0.00035791699999999926, 0.00035569499999999615, 0.00035709700000000066, 0.0003613190000000058, 0.00035983300000000384, 0.0003573610000000005, 0.00035743099999999833, 0.0003607779999999991, 0.00035587499999999855, 0.00036029199999999817, 0.0003578890000000001, 0.0003589730000000055, 0.0003606810000000016, 0.00035709700000000066, 0.0003605689999999981, 0.0003551940000000031, 0.00035874999999999796, 0.00035566700000000395, 0.00035798599999999764, 0.0003563060000000007, 0.00035531999999999925, 0.0003564029999999982, 0.00035732000000000125, 0.0003610979999999972, 0.0003574999999999967, 0.00035658400000000007, 0.0003597219999999998, 0.00035505499999999995, 0.00036076300000000006, 0.0003581809999999991, 0.00035637499999999905, 0.0003605139999999993, 0.00035505599999999943, 0.000358958999999999, 0.00036119399999999524, 0.00035792999999999936, 0.0003607909999999992, 0.0003557080000000032, 0.00035893000000000036, 0.00035674999999999596, 0.0003590269999999979]</msg>
<status status="PASS" starttime="20201115 23:00:33.455" endtime="20201115 23:00:33.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.451" endtime="20201115 23:00:33.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.460" endtime="20201115 23:00:33.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.464" endtime="20201115 23:00:33.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.462" endtime="20201115 23:00:33.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.459" endtime="20201115 23:00:33.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.052" endtime="20201115 23:00:33.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.050" endtime="20201115 23:00:33.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.049" endtime="20201115 23:00:33.485"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.487" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.496" endtime="20201115 23:00:33.531"></status>
</kw>
<msg timestamp="20201115 23:00:33.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.494" endtime="20201115 23:00:33.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.532" endtime="20201115 23:00:33.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.535" endtime="20201115 23:00:33.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.492" endtime="20201115 23:00:33.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.489" endtime="20201115 23:00:33.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.544" endtime="20201115 23:00:33.830"></status>
</kw>
<msg timestamp="20201115 23:00:33.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023657139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024027903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.542" endtime="20201115 23:00:33.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023657139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024027903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.834" endtime="20201115 23:00:33.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.842" endtime="20201115 23:00:33.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.540" endtime="20201115 23:00:33.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.538" endtime="20201115 23:00:33.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.849" level="INFO">${RESULT} = [{'time': 0.024027903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003707639999999991, 'source_diff': 0.0003707639999999991}, {'time': 0.024393361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:33.846" endtime="20201115 23:00:33.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.864" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:33.850" endtime="20201115 23:00:33.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.869" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.868" endtime="20201115 23:00:33.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.871" level="INFO">VALUE: [0.0003707639999999991, 0.0003608469999999975, 0.0003576799999999991, 0.0003604590000000005, 0.0003569999999999997, 0.00035984699999999994, 0.0003594160000000013, 0.0003615140000000003, 0.0003570279999999988, 0.0003553469999999989, 0.0003571249999999998, 0.00035805599999999896, 0.00035523599999999836, 0.00035951400000000175, 0.00035829199999999964, 0.00035856899999999955, 0.00035974999999999896, 0.0003594449999999999, 0.0003566250000000028, 0.0003567090000000002, 0.00035647199999999657, 0.0003549029999999967, 0.00035723600000000383, 0.00035780599999999524, 0.0003607909999999992, 0.00035716700000000545, 0.0003597229999999993, 0.0003558339999999993, 0.0003591669999999936, 0.00035741699999999876, 0.00035715299999999894, 0.00035815299999999994, 0.00035861100000000173, 0.00035808400000000157, 0.00035782000000000175, 0.0003611250000000038, 0.00035727800000000254, 0.0003571249999999998, 0.0003576389999999999, 0.0003570280000000023, 0.00035516700000000345, 0.00035687499999999955, 0.0003565140000000022, 0.0003574999999999967, 0.0003611250000000038, 0.00036026399999999903, 0.0003570419999999949, 0.00035876399999999753, 0.0003581250000000008, 0.00035611099999999923]</msg>
<status status="PASS" starttime="20201115 23:00:33.870" endtime="20201115 23:00:33.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.865" endtime="20201115 23:00:33.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.874" endtime="20201115 23:00:33.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.878" endtime="20201115 23:00:33.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.876" endtime="20201115 23:00:33.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.873" endtime="20201115 23:00:33.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.488" endtime="20201115 23:00:33.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.486" endtime="20201115 23:00:33.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.485" endtime="20201115 23:00:33.899"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.902" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.910" endtime="20201115 23:00:33.949"></status>
</kw>
<msg timestamp="20201115 23:00:33.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.908" endtime="20201115 23:00:33.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.950" endtime="20201115 23:00:33.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.953" endtime="20201115 23:00:33.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.906" endtime="20201115 23:00:33.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.904" endtime="20201115 23:00:33.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.962" endtime="20201115 23:00:34.249"></status>
</kw>
<msg timestamp="20201115 23:00:34.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026531542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026891306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.960" endtime="20201115 23:00:34.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026531542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026891306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.253" endtime="20201115 23:00:34.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.262" endtime="20201115 23:00:34.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.958" endtime="20201115 23:00:34.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.956" endtime="20201115 23:00:34.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.269" level="INFO">${RESULT} = [{'time': 0.026891306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035976399999999853, 'source_diff': 0.00035976399999999853}, {'time': 0.027256486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:34.265" endtime="20201115 23:00:34.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.282" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:34.270" endtime="20201115 23:00:34.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.286" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.285" endtime="20201115 23:00:34.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.289" level="INFO">VALUE: [0.00035976399999999853, 0.00035591700000000073, 0.000359667000000001, 0.0003597219999999998, 0.00036130599999999874, 0.00036026399999999903, 0.0003590829999999996, 0.000358667, 0.00035543000000000033, 0.0003581390000000004, 0.00035741700000000223, 0.00035977800000000157, 0.0003590420000000004, 0.0003587219999999988, 0.0003560830000000001, 0.0003608469999999975, 0.0003554590000000024, 0.0003580830000000021, 0.00035659700000000016, 0.0003591109999999953, 0.00035568000000000405, 0.00036065200000000297, 0.00035823600000000483, 0.00035952799999999785, 0.0003553200000000062, 0.0003559860000000026, 0.0003605419999999984, 0.0003557779999999941, 0.00035544400000000337, 0.00035720799999999775, 0.00036054200000000536, 0.00035702799999999535, 0.0003606800000000021, 0.0003571939999999982, 0.0003585689999999961, 0.0003585280000000038, 0.0003601390000000024, 0.0003583050000000032, 0.0003548049999999997, 0.0003568470000000004, 0.0003579999999999972, 0.00035702799999999535, 0.00036024999999999946, 0.00036047200000000057, 0.0003564159999999983, 0.0003606659999999956, 0.0003572359999999969, 0.00035755500000000245, 0.00035674999999999596, 0.00035473600000000133]</msg>
<status status="PASS" starttime="20201115 23:00:34.287" endtime="20201115 23:00:34.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.283" endtime="20201115 23:00:34.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.292" endtime="20201115 23:00:34.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.295" endtime="20201115 23:00:34.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.294" endtime="20201115 23:00:34.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.290" endtime="20201115 23:00:34.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.902" endtime="20201115 23:00:34.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.900" endtime="20201115 23:00:34.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.899" endtime="20201115 23:00:34.317"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.319" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.327" endtime="20201115 23:00:34.364"></status>
</kw>
<msg timestamp="20201115 23:00:34.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.326" endtime="20201115 23:00:34.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.366" endtime="20201115 23:00:34.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.368" endtime="20201115 23:00:34.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.323" endtime="20201115 23:00:34.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.321" endtime="20201115 23:00:34.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.378" endtime="20201115 23:00:34.664"></status>
</kw>
<msg timestamp="20201115 23:00:34.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026017625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026388028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.376" endtime="20201115 23:00:34.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026017625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026388028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.668" endtime="20201115 23:00:34.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.677" endtime="20201115 23:00:34.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.373" endtime="20201115 23:00:34.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.371" endtime="20201115 23:00:34.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.683" level="INFO">${RESULT} = [{'time': 0.026388028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003704030000000018, 'source_diff': 0.0003704030000000018}, {'time': 0.0267535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:34.680" endtime="20201115 23:00:34.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.696" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:34.684" endtime="20201115 23:00:34.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.701" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.700" endtime="20201115 23:00:34.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.703" level="INFO">VALUE: [0.0003704030000000018, 0.00035848599999999814, 0.0003585839999999986, 0.00036094400000000193, 0.000355875000000002, 0.0003595280000000013, 0.00035718100000000155, 0.00035843099999999933, 0.00035969500000000015, 0.0003580829999999986, 0.0003585410000000004, 0.0003610139999999998, 0.00035581999999999975, 0.0003591529999999975, 0.00035788899999999665, 0.0003608199999999978, 0.0003588469999999955, 0.00035726400000000297, 0.0003596800000000011, 0.0003596109999999958, 0.00035583400000000626, 0.0003560690000000005, 0.00036020800000000075, 0.00035765199999999997, 0.0003609160000000028, 0.0003612230000000008, 0.0003580690000000025, 0.0003599580000000005, 0.00036011100000000323, 0.0003612360000000009, 0.00035969500000000015, 0.0003592909999999977, 0.00035797299999999754, 0.000356569000000001, 0.0003585830000000026, 0.0003600689999999976, 0.00035879199999999667, 0.00035752799999999585, 0.0003584720000000055, 0.0003549590000000019, 0.00035787500000000055, 0.00035542999999999686, 0.00035915300000000094, 0.0003556810000000035, 0.00035743100000000527, 0.0003611670000000025, 0.00035720799999999775, 0.0003569590000000039, 0.0003592219999999993, 0.00035844399999999943]</msg>
<status status="PASS" starttime="20201115 23:00:34.702" endtime="20201115 23:00:34.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.697" endtime="20201115 23:00:34.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.707" endtime="20201115 23:00:34.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.710" endtime="20201115 23:00:34.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.709" endtime="20201115 23:00:34.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.705" endtime="20201115 23:00:34.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.320" endtime="20201115 23:00:34.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.318" endtime="20201115 23:00:34.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.317" endtime="20201115 23:00:34.731"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.734" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.742" endtime="20201115 23:00:34.777"></status>
</kw>
<msg timestamp="20201115 23:00:34.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.740" endtime="20201115 23:00:34.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.778" endtime="20201115 23:00:34.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.781" endtime="20201115 23:00:34.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.738" endtime="20201115 23:00:34.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.736" endtime="20201115 23:00:34.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.791" endtime="20201115 23:00:35.078"></status>
</kw>
<msg timestamp="20201115 23:00:35.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023348097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02371175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:34.789" endtime="20201115 23:00:35.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023348097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02371175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:35.082" endtime="20201115 23:00:35.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.091" endtime="20201115 23:00:35.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.786" endtime="20201115 23:00:35.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.785" endtime="20201115 23:00:35.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.098" level="INFO">${RESULT} = [{'time': 0.02371175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003636529999999985, 'source_diff': 0.0003636529999999985}, {'time': 0.024076944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:35.095" endtime="20201115 23:00:35.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.111" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:35.099" endtime="20201115 23:00:35.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.116" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.115" endtime="20201115 23:00:35.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.118" level="INFO">VALUE: [0.0003636529999999985, 0.0003583189999999993, 0.0003547919999999996, 0.0003605689999999981, 0.0003558050000000007, 0.0003586800000000001, 0.00035555500000000045, 0.00035829199999999964, 0.0003548339999999983, 0.000358070000000002, 0.0003551250000000013, 0.0003586250000000013, 0.0003612360000000009, 0.00036038899999999915, 0.00035494400000000287, 0.00036066600000000254, 0.0003608750000000001, 0.00035997200000000007, 0.0003571809999999981, 0.00036109800000000067, 0.0003584860000000016, 0.00036055600000000146, 0.000354860999999998, 0.0003558339999999993, 0.0003546389999999969, 0.00035883300000000284, 0.00035861100000000173, 0.0003596390000000019, 0.0003588060000000032, 0.0003596250000000023, 0.00035974999999999896, 0.0003582219999999983, 0.000358361999999994, 0.00035908399999999563, 0.0003603749999999961, 0.00035520799999999575, 0.000357473000000004, 0.00035607, 0.0003555699999999995, 0.00035997299999999954, 0.000356972000000004, 0.00035587499999999855, 0.00035476400000000047, 0.00035852799999999685, 0.00035493100000000277, 0.00035870799999999925, 0.00035505499999999995, 0.0003568470000000004, 0.0003565410000000019, 0.00035755600000000193]</msg>
<status status="PASS" starttime="20201115 23:00:35.117" endtime="20201115 23:00:35.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.112" endtime="20201115 23:00:35.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.122" endtime="20201115 23:00:35.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.125" endtime="20201115 23:00:35.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.123" endtime="20201115 23:00:35.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.120" endtime="20201115 23:00:35.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.734" endtime="20201115 23:00:35.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.732" endtime="20201115 23:00:35.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.732" endtime="20201115 23:00:35.146"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.149" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.162" endtime="20201115 23:00:35.199"></status>
</kw>
<msg timestamp="20201115 23:00:35.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.161" endtime="20201115 23:00:35.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.200" endtime="20201115 23:00:35.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.203" endtime="20201115 23:00:35.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.158" endtime="20201115 23:00:35.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.151" endtime="20201115 23:00:35.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.212" endtime="20201115 23:00:35.498"></status>
</kw>
<msg timestamp="20201115 23:00:35.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030427361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030784444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.210" endtime="20201115 23:00:35.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030427361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030784444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.502" endtime="20201115 23:00:35.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.510" endtime="20201115 23:00:35.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.208" endtime="20201115 23:00:35.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.206" endtime="20201115 23:00:35.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.517" level="INFO">${RESULT} = [{'time': 0.030784444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003570830000000011, 'source_diff': 0.0003570830000000011}, {'time': 0.031149736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:35.514" endtime="20201115 23:00:35.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.531" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:35.518" endtime="20201115 23:00:35.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.536" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.535" endtime="20201115 23:00:35.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.539" level="INFO">VALUE: [0.0003570830000000011, 0.0003553189999999998, 0.00036093100000000183, 0.00035877800000000404, 0.0003563609999999995, 0.000356569000000001, 0.0003595139999999983, 0.00035487499999999755, 0.00036043000000000186, 0.0003555829999999996, 0.0003566389999999989, 0.00035642999999999786, 0.0003575549999999955, 0.0003553059999999997, 0.00035627700000000206, 0.00035716599999999904, 0.0003584589999999985, 0.0003563060000000007, 0.0003561809999999971, 0.00035708400000000057, 0.0003559999999999952, 0.000359861000000003, 0.0003563060000000007, 0.00035893099999999983, 0.000355569, 0.00035977800000000504, 0.0003594020000000017, 0.0003557500000000019, 0.00035797199999999807, 0.00036015200000000247, 0.00035592999999999736, 0.0003609019999999963, 0.0003579579999999985, 0.00035959700000000316, 0.0003601800000000016, 0.00035876399999999753, 0.00035562500000000524, 0.00035627800000000154, 0.0003572219999999973, 0.00035526400000000097, 0.0003589579999999995, 0.000357457999999998, 0.0003584999999999977, 0.00035605500000000095, 0.0003573470000000009, 0.00036047200000000057, 0.0003606390000000029, 0.0003548469999999984, 0.0003555410000000009, 0.00036056999999999756]</msg>
<status status="PASS" starttime="20201115 23:00:35.537" endtime="20201115 23:00:35.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.532" endtime="20201115 23:00:35.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.542" endtime="20201115 23:00:35.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.545" endtime="20201115 23:00:35.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.544" endtime="20201115 23:00:35.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.540" endtime="20201115 23:00:35.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.149" endtime="20201115 23:00:35.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.147" endtime="20201115 23:00:35.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.147" endtime="20201115 23:00:35.567"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.569" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.578" endtime="20201115 23:00:35.615"></status>
</kw>
<msg timestamp="20201115 23:00:35.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.576" endtime="20201115 23:00:35.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.617" endtime="20201115 23:00:35.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.619" endtime="20201115 23:00:35.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.573" endtime="20201115 23:00:35.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.571" endtime="20201115 23:00:35.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.628" endtime="20201115 23:00:35.915"></status>
</kw>
<msg timestamp="20201115 23:00:35.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026762042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027138292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.627" endtime="20201115 23:00:35.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026762042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027138292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.919" endtime="20201115 23:00:35.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.927" endtime="20201115 23:00:35.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.624" endtime="20201115 23:00:35.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.623" endtime="20201115 23:00:35.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.933" level="INFO">${RESULT} = [{'time': 0.027138292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003762500000000016, 'source_diff': 0.0003762500000000016}, {'time': 0.027503847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:35.930" endtime="20201115 23:00:35.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.947" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:35.934" endtime="20201115 23:00:35.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.951" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.950" endtime="20201115 23:00:35.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.954" level="INFO">VALUE: [0.0003762500000000016, 0.0003612909999999997, 0.0003604590000000005, 0.0003593329999999999, 0.0003592769999999981, 0.0003579440000000024, 0.0003559310000000003, 0.00036136099999999755, 0.0003583890000000006, 0.00035680499999999823, 0.00035683300000000084, 0.00035861099999999826, 0.0003594020000000017, 0.0003569029999999987, 0.00035859700000000216, 0.00035970800000000025, 0.0003567909999999952, 0.00035948599999999914, 0.0003578339999999944, 0.0003570830000000011, 0.0003604030000000022, 0.0003569300000000053, 0.00035627700000000206, 0.0003585419999999964, 0.00036043100000000133, 0.00035941700000000076, 0.0003557920000000006, 0.0003611670000000025, 0.000357569000000002, 0.0003573060000000017, 0.00035643099999999733, 0.00036020800000000075, 0.00036062499999999637, 0.00036136099999999755, 0.00035554200000000036, 0.00035720799999999775, 0.0003592920000000041, 0.0003595139999999983, 0.00035648599999999614, 0.00035965300000000144, 0.00035765299999999944, 0.0003564019999999987, 0.0003579579999999985, 0.00035697299999999654, 0.00036119500000000165, 0.00035594399999999693, 0.00035698599999999664, 0.00035643099999999733, 0.00035842999999999986, 0.0003591659999999941]</msg>
<status status="PASS" starttime="20201115 23:00:35.952" endtime="20201115 23:00:35.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.948" endtime="20201115 23:00:35.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.957" endtime="20201115 23:00:35.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.961" endtime="20201115 23:00:35.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.959" endtime="20201115 23:00:35.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.956" endtime="20201115 23:00:35.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.570" endtime="20201115 23:00:35.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.568" endtime="20201115 23:00:35.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.567" endtime="20201115 23:00:35.982"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.984" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.993" endtime="20201115 23:00:36.032"></status>
</kw>
<msg timestamp="20201115 23:00:36.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.991" endtime="20201115 23:00:36.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.033" endtime="20201115 23:00:36.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.036" endtime="20201115 23:00:36.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.989" endtime="20201115 23:00:36.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.986" endtime="20201115 23:00:36.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.045" endtime="20201115 23:00:36.349"></status>
</kw>
<msg timestamp="20201115 23:00:36.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023977153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.043" endtime="20201115 23:00:36.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023977153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.354" endtime="20201115 23:00:36.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.362" endtime="20201115 23:00:36.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.041" endtime="20201115 23:00:36.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.039" endtime="20201115 23:00:36.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.368" level="INFO">${RESULT} = [{'time': 0.023977153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003808890000000023, 'source_diff': 0.0003808890000000023}, {'time': 0.024342528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:36.365" endtime="20201115 23:00:36.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.382" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:36.369" endtime="20201115 23:00:36.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.386" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.385" endtime="20201115 23:00:36.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.389" level="INFO">VALUE: [0.0003808890000000023, 0.0003566249999999993, 0.0003604299999999984, 0.0003574159999999993, 0.0003583329999999989, 0.0003610419999999989, 0.00035897199999999907, 0.00035843099999999933, 0.00035561099999999873, 0.00035956900000000055, 0.00036097200000000107, 0.0003577770000000001, 0.0003592359999999989, 0.0003562219999999998, 0.0003610550000000025, 0.00036066699999999854, 0.00035574999999999843, 0.00035880500000000023, 0.0003609719999999976, 0.00035687499999999955, 0.0003565280000000018, 0.0003590280000000043, 0.0003548469999999984, 0.00035794399999999893, 0.00036041700000000176, 0.0003606800000000021, 0.0003558889999999981, 0.0003552219999999953, 0.0003606810000000016, 0.00035654099999999495, 0.00035665199999999897, 0.0003606800000000021, 0.0003606940000000017, 0.00035909700000000266, 0.00035841699999999976, 0.0003557500000000019, 0.0003581799999999996, 0.0003572500000000034, 0.00035670799999999725, 0.0003605969999999972, 0.00035622200000000326, 0.00035877800000000404, 0.0003551669999999965, 0.00036136099999999755, 0.0003591250000000018, 0.0003599869999999991, 0.000355860999999999, 0.00035970800000000025, 0.0003555970000000061, 0.0003568060000000012]</msg>
<status status="PASS" starttime="20201115 23:00:36.387" endtime="20201115 23:00:36.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.382" endtime="20201115 23:00:36.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.392" endtime="20201115 23:00:36.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.396" endtime="20201115 23:00:36.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.394" endtime="20201115 23:00:36.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.391" endtime="20201115 23:00:36.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.985" endtime="20201115 23:00:36.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.983" endtime="20201115 23:00:36.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.982" endtime="20201115 23:00:36.417"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.419" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.428" endtime="20201115 23:00:36.465"></status>
</kw>
<msg timestamp="20201115 23:00:36.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.426" endtime="20201115 23:00:36.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.466" endtime="20201115 23:00:36.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.469" endtime="20201115 23:00:36.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.423" endtime="20201115 23:00:36.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.421" endtime="20201115 23:00:36.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.478" endtime="20201115 23:00:36.764"></status>
</kw>
<msg timestamp="20201115 23:00:36.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025820444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026190514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.477" endtime="20201115 23:00:36.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025820444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026190514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.768" endtime="20201115 23:00:36.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.776" endtime="20201115 23:00:36.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.474" endtime="20201115 23:00:36.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.472" endtime="20201115 23:00:36.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.783" level="INFO">${RESULT} = [{'time': 0.026190514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003700700000000001, 'source_diff': 0.0003700700000000001}, {'time': 0.026556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:36.780" endtime="20201115 23:00:36.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.796" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:36.784" endtime="20201115 23:00:36.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.801" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.800" endtime="20201115 23:00:36.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.804" level="INFO">VALUE: [0.0003700700000000001, 0.00035955600000000046, 0.0003583879999999977, 0.00035879200000000014, 0.0003590280000000008, 0.00036034700000000044, 0.00035540300000000066, 0.0003574730000000005, 0.0003603879999999997, 0.0003553189999999998, 0.0003596390000000019, 0.000359458, 0.00035929200000000064, 0.00035812499999999733, 0.0003586389999999974, 0.0003588060000000032, 0.0003603610000000035, 0.0003587779999999971, 0.0003581669999999995, 0.0003585830000000026, 0.00035497199999999507, 0.0003547500000000009, 0.0003549860000000016, 0.0003596810000000006, 0.0003575700000000015, 0.0003591380000000019, 0.00035894399999999993, 0.0003551799999999966, 0.00036144499999999496, 0.0003596390000000019, 0.000357972000000005, 0.00035543099999999633, 0.00036087500000000355, 0.0003597769999999986, 0.0003560419999999939, 0.0003571249999999998, 0.0003610139999999998, 0.0003548889999999971, 0.00035744399999999843, 0.00035843100000000627, 0.0003572080000000047, 0.0003601250000000028, 0.0003585140000000042, 0.0003562219999999963, 0.00036015300000000194, 0.0003596250000000023, 0.0003611940000000022, 0.00035672300000000323, 0.00035865300000000044, 0.00035604200000000086]</msg>
<status status="PASS" starttime="20201115 23:00:36.802" endtime="20201115 23:00:36.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.797" endtime="20201115 23:00:36.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.807" endtime="20201115 23:00:36.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.810" endtime="20201115 23:00:36.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.809" endtime="20201115 23:00:36.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.805" endtime="20201115 23:00:36.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.420" endtime="20201115 23:00:36.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.418" endtime="20201115 23:00:36.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.417" endtime="20201115 23:00:36.831"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.834" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.842" endtime="20201115 23:00:36.876"></status>
</kw>
<msg timestamp="20201115 23:00:36.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.841" endtime="20201115 23:00:36.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.878" endtime="20201115 23:00:36.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.881" endtime="20201115 23:00:36.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.838" endtime="20201115 23:00:36.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.836" endtime="20201115 23:00:36.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.890" endtime="20201115 23:00:37.177"></status>
</kw>
<msg timestamp="20201115 23:00:37.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023276153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023638319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.888" endtime="20201115 23:00:37.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023276153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023638319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.181" endtime="20201115 23:00:37.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.189" endtime="20201115 23:00:37.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.885" endtime="20201115 23:00:37.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.884" endtime="20201115 23:00:37.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.196" level="INFO">${RESULT} = [{'time': 0.023638319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036216600000000057, 'source_diff': 0.00036216600000000057}, {'time': 0.024003694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:37.193" endtime="20201115 23:00:37.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.210" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:37.197" endtime="20201115 23:00:37.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.215" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.214" endtime="20201115 23:00:37.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.217" level="INFO">VALUE: [0.00036216600000000057, 0.00036058299999999766, 0.00035523599999999836, 0.0003551249999999978, 0.0003605549999999985, 0.0003611949999999982, 0.00035952799999999785, 0.0003571249999999998, 0.00035587499999999855, 0.0003557089999999992, 0.00036002799999999835, 0.0003565280000000018, 0.00035709800000000014, 0.00035505499999999995, 0.0003601389999999989, 0.0003559310000000003, 0.0003576670000000025, 0.0003581250000000008, 0.00035791700000000273, 0.0003612909999999997, 0.0003550140000000007, 0.0003553890000000011, 0.00036043000000000186, 0.0003592779999999976, 0.00035509699999999866, 0.0003568889999999991, 0.0003558750000000055, 0.0003578470000000014, 0.00035786200000000046, 0.0003565830000000006, 0.000356569000000001, 0.0003606390000000029, 0.0003609450000000014, 0.0003571809999999981, 0.0003606810000000016, 0.0003585140000000042, 0.00036119399999999524, 0.00035505499999999995, 0.00035600000000000215, 0.000356861, 0.0003612220000000013, 0.0003610969999999977, 0.00035704099999999545, 0.00035536199999999796, 0.00035608399999999957, 0.00035924999999999846, 0.0003561809999999971, 0.00035565199999999797, 0.0003602359999999999, 0.00035748599999999714]</msg>
<status status="PASS" starttime="20201115 23:00:37.216" endtime="20201115 23:00:37.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.211" endtime="20201115 23:00:37.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.220" endtime="20201115 23:00:37.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.224" endtime="20201115 23:00:37.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.222" endtime="20201115 23:00:37.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.219" endtime="20201115 23:00:37.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.834" endtime="20201115 23:00:37.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.833" endtime="20201115 23:00:37.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.832" endtime="20201115 23:00:37.245"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.247" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.256" endtime="20201115 23:00:37.294"></status>
</kw>
<msg timestamp="20201115 23:00:37.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.254" endtime="20201115 23:00:37.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.295" endtime="20201115 23:00:37.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.298" endtime="20201115 23:00:37.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.252" endtime="20201115 23:00:37.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.250" endtime="20201115 23:00:37.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.307" endtime="20201115 23:00:37.593"></status>
</kw>
<msg timestamp="20201115 23:00:37.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026568194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026935792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.305" endtime="20201115 23:00:37.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026568194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026935792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.597" endtime="20201115 23:00:37.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.605" endtime="20201115 23:00:37.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.303" endtime="20201115 23:00:37.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.301" endtime="20201115 23:00:37.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.612" level="INFO">${RESULT} = [{'time': 0.026935792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036759800000000023, 'source_diff': 0.00036759800000000023}, {'time': 0.027301056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:37.608" endtime="20201115 23:00:37.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.625" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:37.613" endtime="20201115 23:00:37.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.629" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.628" endtime="20201115 23:00:37.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.632" level="INFO">VALUE: [0.00036759800000000023, 0.00036047300000000004, 0.00035655600000000093, 0.0003575000000000002, 0.0003584730000000015, 0.0003604999999999997, 0.0003595830000000001, 0.000357861000000001, 0.0003567219999999968, 0.0003570140000000027, 0.0003566950000000006, 0.0003560140000000017, 0.00035747299999999704, 0.000360943999999995, 0.0003600139999999988, 0.00035766599999999954, 0.00035905600000000343, 0.0003563609999999995, 0.00035638799999999915, 0.0003548469999999984, 0.0003605139999999993, 0.0003592359999999989, 0.0003550140000000007, 0.00035829199999999617, 0.0003612090000000012, 0.0003559579999999965, 0.0003602220000000003, 0.0003580140000000037, 0.00035874999999999796, 0.00035594500000000334, 0.00035780499999999577, 0.00035874999999999796, 0.0003567359999999964, 0.00035501300000000124, 0.0003585419999999964, 0.0003574589999999975, 0.00035522200000000226, 0.0003612360000000009, 0.0003546950000000021, 0.0003547500000000009, 0.00036102799999999935, 0.00036030599999999774, 0.0003590690000000035, 0.00035994400000000093, 0.00036069500000000115, 0.00035943100000000033, 0.00035492999999999636, 0.0003591390000000014, 0.00035655500000000145, 0.000356972000000004]</msg>
<status status="PASS" starttime="20201115 23:00:37.630" endtime="20201115 23:00:37.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.626" endtime="20201115 23:00:37.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.635" endtime="20201115 23:00:37.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.638" endtime="20201115 23:00:37.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.637" endtime="20201115 23:00:37.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.633" endtime="20201115 23:00:37.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.248" endtime="20201115 23:00:37.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.246" endtime="20201115 23:00:37.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.245" endtime="20201115 23:00:37.660"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.662" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.670" endtime="20201115 23:00:37.705"></status>
</kw>
<msg timestamp="20201115 23:00:37.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.669" endtime="20201115 23:00:37.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.706" endtime="20201115 23:00:37.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.709" endtime="20201115 23:00:37.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.666" endtime="20201115 23:00:37.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.664" endtime="20201115 23:00:37.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.718" endtime="20201115 23:00:38.006"></status>
</kw>
<msg timestamp="20201115 23:00:38.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023893125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024272556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.717" endtime="20201115 23:00:38.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023893125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024272556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.010" endtime="20201115 23:00:38.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.018" endtime="20201115 23:00:38.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.714" endtime="20201115 23:00:38.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.712" endtime="20201115 23:00:38.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.025" level="INFO">${RESULT} = [{'time': 0.024272556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003794309999999995, 'source_diff': 0.0003794309999999995}, {'time': 0.024637931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:38.021" endtime="20201115 23:00:38.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.038" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:38.026" endtime="20201115 23:00:38.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.042" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.041" endtime="20201115 23:00:38.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.045" level="INFO">VALUE: [0.0003794309999999995, 0.0003548889999999971, 0.00035912499999999833, 0.0003600830000000006, 0.00035824999999999746, 0.000361555999999999, 0.0003569999999999997, 0.00035643000000000133, 0.0003550829999999991, 0.00036120800000000175, 0.000356473000000003, 0.0003567080000000007, 0.00035988899999999865, 0.00035970800000000025, 0.00036012499999999933, 0.00036097200000000107, 0.0003596390000000019, 0.00035983399999999985, 0.0003612360000000009, 0.00036001400000000225, 0.0003571799999999986, 0.00035592999999999736, 0.00036094400000000193, 0.0003598890000000021, 0.0003570830000000011, 0.00035932000000000325, 0.00035598700000000205, 0.0003552080000000027, 0.00035794400000000587, 0.0003591669999999936, 0.0003579869999999971, 0.0003574170000000057, 0.0003608199999999978, 0.00035561100000000567, 0.000356457999999997, 0.00035704200000000186, 0.00036091700000000226, 0.00036058299999999766, 0.0003567500000000029, 0.00035644399999999743, 0.00035591600000000473, 0.0003612909999999997, 0.0003563609999999995, 0.00036069399999999474, 0.0003577089999999977, 0.00035986099999999605, 0.0003596810000000006, 0.00035559799999999864, 0.0003590830000000031, 0.0003612909999999997]</msg>
<status status="PASS" starttime="20201115 23:00:38.043" endtime="20201115 23:00:38.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.039" endtime="20201115 23:00:38.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.048" endtime="20201115 23:00:38.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.051" endtime="20201115 23:00:38.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.050" endtime="20201115 23:00:38.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.046" endtime="20201115 23:00:38.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.663" endtime="20201115 23:00:38.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.661" endtime="20201115 23:00:38.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.660" endtime="20201115 23:00:38.073"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.075" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.084" endtime="20201115 23:00:38.118"></status>
</kw>
<msg timestamp="20201115 23:00:38.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.082" endtime="20201115 23:00:38.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.119" endtime="20201115 23:00:38.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.122" endtime="20201115 23:00:38.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.080" endtime="20201115 23:00:38.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.077" endtime="20201115 23:00:38.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.131" endtime="20201115 23:00:38.418"></status>
</kw>
<msg timestamp="20201115 23:00:38.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023056153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023410347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.129" endtime="20201115 23:00:38.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023056153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023410347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.422" endtime="20201115 23:00:38.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.430" endtime="20201115 23:00:38.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.127" endtime="20201115 23:00:38.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.125" endtime="20201115 23:00:38.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.437" level="INFO">${RESULT} = [{'time': 0.023410347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003541940000000021, 'source_diff': 0.0003541940000000021}, {'time': 0.023775542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:38.434" endtime="20201115 23:00:38.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.450" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:38.438" endtime="20201115 23:00:38.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.455" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.454" endtime="20201115 23:00:38.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.457" level="INFO">VALUE: [0.0003541940000000021, 0.00035513900000000084, 0.0003549999999999977, 0.0003553750000000015, 0.0003554439999999999, 0.0003611529999999995, 0.0003591810000000001, 0.00036098600000000064, 0.0003608480000000004, 0.00036117999999999914, 0.0003575700000000015, 0.00035934699999999944, 0.0003590420000000004, 0.0003595830000000001, 0.00036129100000000317, 0.00036026299999999956, 0.0003563060000000007, 0.00036056900000000155, 0.00035901400000000125, 0.00035941700000000076, 0.0003576530000000029, 0.00035774999999999696, 0.0003602079999999973, 0.0003591940000000002, 0.0003565139999999953, 0.0003569029999999987, 0.0003573470000000009, 0.0003569999999999962, 0.00035998599999999964, 0.00035808299999999516, 0.000359458, 0.00035568000000000405, 0.0003601800000000016, 0.0003581250000000008, 0.00035590300000000463, 0.0003567080000000042, 0.00035458399999999807, 0.00035967999999999417, 0.0003568470000000004, 0.0003559590000000029, 0.00035500000000000115, 0.0003552920000000001, 0.00036029100000000563, 0.0003565140000000022, 0.00035576399999999453, 0.000360346999999997, 0.00036036099999999655, 0.00035993100000000083, 0.0003546389999999969, 0.0003570830000000011]</msg>
<status status="PASS" starttime="20201115 23:00:38.456" endtime="20201115 23:00:38.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.451" endtime="20201115 23:00:38.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.460" endtime="20201115 23:00:38.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.464" endtime="20201115 23:00:38.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.462" endtime="20201115 23:00:38.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.459" endtime="20201115 23:00:38.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.076" endtime="20201115 23:00:38.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.074" endtime="20201115 23:00:38.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.073" endtime="20201115 23:00:38.485"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.488" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.496" endtime="20201115 23:00:38.536"></status>
</kw>
<msg timestamp="20201115 23:00:38.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.495" endtime="20201115 23:00:38.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.538" endtime="20201115 23:00:38.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.540" endtime="20201115 23:00:38.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.492" endtime="20201115 23:00:38.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.490" endtime="20201115 23:00:38.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.549" endtime="20201115 23:00:38.836"></status>
</kw>
<msg timestamp="20201115 23:00:38.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027244431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027625333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.548" endtime="20201115 23:00:38.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027244431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027625333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.840" endtime="20201115 23:00:38.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.848" endtime="20201115 23:00:38.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.545" endtime="20201115 23:00:38.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.543" endtime="20201115 23:00:38.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.855" level="INFO">${RESULT} = [{'time': 0.027625333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038090199999999894, 'source_diff': 0.00038090199999999894}, {'time': 0.027990569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:38.852" endtime="20201115 23:00:38.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.869" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:38.856" endtime="20201115 23:00:38.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.874" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.873" endtime="20201115 23:00:38.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.876" level="INFO">VALUE: [0.00038090199999999894, 0.00035680499999999823, 0.000358764000000001, 0.0003567220000000003, 0.0003551249999999978, 0.0003592779999999976, 0.0003554859999999986, 0.0003564999999999992, 0.0003571249999999998, 0.00035483299999999884, 0.00035568100000000005, 0.0003563190000000008, 0.0003554170000000037, 0.0003583190000000028, 0.00035820900000000516, 0.0003565410000000019, 0.0003547919999999996, 0.00035743099999999833, 0.0003548620000000044, 0.00035523600000000183, 0.00035711100000000023, 0.00035504199999999986, 0.0003586939999999997, 0.00035700000000000315, 0.0003548610000000049, 0.0003556799999999971, 0.0003565830000000006, 0.0003596250000000023, 0.00035522200000000226, 0.00035730499999999527, 0.00035955600000000393, 0.0003602779999999986, 0.00035605500000000095, 0.0003550270000000008, 0.0003606390000000029, 0.00035465299999999644, 0.00035627800000000154, 0.0003569029999999987, 0.0003612770000000001, 0.00035600000000000215, 0.00035786099999999404, 0.0003553339999999988, 0.00035533299999999934, 0.0003573190000000018, 0.000355972000000003, 0.0003547500000000009, 0.00035872300000000523, 0.0003582920000000031, 0.00035847199999999857, 0.0003570140000000027]</msg>
<status status="PASS" starttime="20201115 23:00:38.875" endtime="20201115 23:00:38.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.870" endtime="20201115 23:00:38.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.880" endtime="20201115 23:00:38.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.884" endtime="20201115 23:00:38.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.882" endtime="20201115 23:00:38.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.878" endtime="20201115 23:00:38.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.489" endtime="20201115 23:00:38.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.487" endtime="20201115 23:00:38.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.486" endtime="20201115 23:00:38.905"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.907" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.915" endtime="20201115 23:00:38.951"></status>
</kw>
<msg timestamp="20201115 23:00:38.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.914" endtime="20201115 23:00:38.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.952" endtime="20201115 23:00:38.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.955" endtime="20201115 23:00:38.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.911" endtime="20201115 23:00:38.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.909" endtime="20201115 23:00:38.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.964" endtime="20201115 23:00:39.267"></status>
</kw>
<msg timestamp="20201115 23:00:39.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024863431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025246736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.963" endtime="20201115 23:00:39.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024863431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025246736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.275" endtime="20201115 23:00:39.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.283" endtime="20201115 23:00:39.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.960" endtime="20201115 23:00:39.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.958" endtime="20201115 23:00:39.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.289" level="INFO">${RESULT} = [{'time': 0.025246736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038330500000000045, 'source_diff': 0.00038330500000000045}, {'time': 0.025612069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:39.286" endtime="20201115 23:00:39.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.302" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:39.290" endtime="20201115 23:00:39.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.307" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.306" endtime="20201115 23:00:39.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.310" level="INFO">VALUE: [0.00038330500000000045, 0.00035765199999999997, 0.00035755599999999846, 0.00035747200000000104, 0.0003585829999999991, 0.0003555829999999996, 0.00035580499999999723, 0.0003561249999999988, 0.00035505599999999943, 0.0003613199999999983, 0.0003579860000000011, 0.0003589999999999982, 0.0003600420000000014, 0.00035954099999999795, 0.0003595280000000013, 0.00035711100000000023, 0.00035672299999999976, 0.000357070000000001, 0.00035615299999999794, 0.0003572920000000021, 0.0003563609999999995, 0.00036037500000000305, 0.0003571799999999986, 0.0003595700000000035, 0.000355375000000005, 0.00035893099999999983, 0.0003548189999999993, 0.0003587080000000062, 0.000358054999999996, 0.0003610000000000002, 0.00035670900000000366, 0.00035755600000000193, 0.0003605139999999993, 0.00035924999999999846, 0.00035518000000000355, 0.00035795800000000544, 0.00035850000000000465, 0.0003554860000000021, 0.0003610139999999998, 0.0003579029999999997, 0.000356473000000003, 0.000356861, 0.00035561099999999873, 0.0003563190000000008, 0.00035720799999999775, 0.0003607220000000008, 0.0003565280000000018, 0.00035593099999999683, 0.0003579159999999998, 0.0003607090000000007]</msg>
<status status="PASS" starttime="20201115 23:00:39.308" endtime="20201115 23:00:39.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.303" endtime="20201115 23:00:39.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.313" endtime="20201115 23:00:39.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.317" endtime="20201115 23:00:39.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.315" endtime="20201115 23:00:39.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.312" endtime="20201115 23:00:39.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.908" endtime="20201115 23:00:39.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.906" endtime="20201115 23:00:39.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.905" endtime="20201115 23:00:39.338"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.340" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.349" endtime="20201115 23:00:39.384"></status>
</kw>
<msg timestamp="20201115 23:00:39.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.347" endtime="20201115 23:00:39.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.385" endtime="20201115 23:00:39.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.388" endtime="20201115 23:00:39.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.344" endtime="20201115 23:00:39.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.342" endtime="20201115 23:00:39.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.397" endtime="20201115 23:00:39.684"></status>
</kw>
<msg timestamp="20201115 23:00:39.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023673431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024030278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.395" endtime="20201115 23:00:39.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023673431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024030278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.688" endtime="20201115 23:00:39.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.696" endtime="20201115 23:00:39.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.393" endtime="20201115 23:00:39.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.391" endtime="20201115 23:00:39.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.702" level="INFO">${RESULT} = [{'time': 0.024030278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035684699999999694, 'source_diff': 0.00035684699999999694}, {'time': 0.024395694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:39.699" endtime="20201115 23:00:39.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.716" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:39.704" endtime="20201115 23:00:39.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.721" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.720" endtime="20201115 23:00:39.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.723" level="INFO">VALUE: [0.00035684699999999694, 0.00036030499999999827, 0.000359959, 0.0003591800000000006, 0.00035559799999999864, 0.00035674999999999943, 0.0003604999999999997, 0.0003589579999999995, 0.00035979200000000114, 0.00035705500000000195, 0.00035602699999999834, 0.0003552079999999992, 0.0003610970000000012, 0.0003558050000000007, 0.0003574589999999975, 0.0003554859999999986, 0.0003569310000000013, 0.0003589869999999981, 0.00035606899999999705, 0.00035930500000000073, 0.00036152700000000385, 0.0003568060000000012, 0.00035591699999999726, 0.00035897199999999907, 0.00035512500000000474, 0.00035724999999999646, 0.0003592359999999989, 0.0003571669999999985, 0.00035670900000000366, 0.0003590140000000047, 0.0003601669999999946, 0.00036108299999999816, 0.00035974999999999896, 0.0003607779999999991, 0.0003572089999999972, 0.00035930599999999674, 0.0003556660000000045, 0.00036086099999999705, 0.00035515299999999694, 0.000361070000000005, 0.00035626400000000197, 0.0003567080000000042, 0.00035865300000000044, 0.00035859700000000216, 0.00035733300000000134, 0.0003582909999999967, 0.0003549159999999968, 0.00036076399999999953, 0.000357473000000004, 0.00035772200000000476]</msg>
<status status="PASS" starttime="20201115 23:00:39.722" endtime="20201115 23:00:39.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.717" endtime="20201115 23:00:39.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.726" endtime="20201115 23:00:39.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.730" endtime="20201115 23:00:39.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.728" endtime="20201115 23:00:39.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.725" endtime="20201115 23:00:39.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.341" endtime="20201115 23:00:39.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.339" endtime="20201115 23:00:39.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.338" endtime="20201115 23:00:39.751"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.753" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.762" endtime="20201115 23:00:39.801"></status>
</kw>
<msg timestamp="20201115 23:00:39.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.761" endtime="20201115 23:00:39.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.802" endtime="20201115 23:00:39.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.805" endtime="20201115 23:00:39.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.758" endtime="20201115 23:00:39.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.755" endtime="20201115 23:00:39.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.814" endtime="20201115 23:00:40.100"></status>
</kw>
<msg timestamp="20201115 23:00:40.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027703278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028060528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.812" endtime="20201115 23:00:40.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027703278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028060528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.104" endtime="20201115 23:00:40.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.112" endtime="20201115 23:00:40.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.810" endtime="20201115 23:00:40.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.808" endtime="20201115 23:00:40.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.119" level="INFO">${RESULT} = [{'time': 0.028060528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035724999999999993, 'source_diff': 0.00035724999999999993}, {'time': 0.028425847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:40.116" endtime="20201115 23:00:40.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.132" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:40.120" endtime="20201115 23:00:40.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.137" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.136" endtime="20201115 23:00:40.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.139" level="INFO">VALUE: [0.00035724999999999993, 0.00035673599999999986, 0.00035861100000000173, 0.00035651399999999875, 0.00035551399999999775, 0.0003585280000000003, 0.000354875000000001, 0.00036116699999999904, 0.00035865300000000044, 0.00035679199999999814, 0.0003594869999999986, 0.00035655600000000093, 0.00036094400000000193, 0.00035518000000000355, 0.0003565410000000019, 0.00035952799999999785, 0.00035791699999999926, 0.0003579579999999985, 0.0003559019999999982, 0.0003582500000000044, 0.00035670799999999725, 0.000359861000000003, 0.0003578469999999945, 0.00035577800000000104, 0.0003608749999999966, 0.0003549019999999972, 0.0003590270000000048, 0.0003550829999999991, 0.0003556799999999971, 0.00035626399999999503, 0.000357070000000001, 0.00035676400000000247, 0.0003585139999999973, 0.0003550280000000003, 0.00036026399999999903, 0.00035905600000000343, 0.000360861000000004, 0.0003608749999999966, 0.0003602359999999999, 0.0003571249999999998, 0.00035842999999999986, 0.00035665299999999844, 0.0003558190000000003, 0.00035997200000000007, 0.00035554200000000036, 0.0003552080000000027, 0.0003606800000000021, 0.00035862499999999436, 0.00035494399999999593, 0.0003573199999999943]</msg>
<status status="PASS" starttime="20201115 23:00:40.138" endtime="20201115 23:00:40.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.133" endtime="20201115 23:00:40.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.142" endtime="20201115 23:00:40.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.146" endtime="20201115 23:00:40.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.144" endtime="20201115 23:00:40.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.141" endtime="20201115 23:00:40.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.754" endtime="20201115 23:00:40.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.752" endtime="20201115 23:00:40.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.751" endtime="20201115 23:00:40.167"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.170" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.180" endtime="20201115 23:00:40.217"></status>
</kw>
<msg timestamp="20201115 23:00:40.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.178" endtime="20201115 23:00:40.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.219" endtime="20201115 23:00:40.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.221" endtime="20201115 23:00:40.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.175" endtime="20201115 23:00:40.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.173" endtime="20201115 23:00:40.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.235" endtime="20201115 23:00:40.521"></status>
</kw>
<msg timestamp="20201115 23:00:40.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028672014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029049014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.229" endtime="20201115 23:00:40.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028672014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029049014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.525" endtime="20201115 23:00:40.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.533" endtime="20201115 23:00:40.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.226" endtime="20201115 23:00:40.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.224" endtime="20201115 23:00:40.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.540" level="INFO">${RESULT} = [{'time': 0.029049014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037700000000000233, 'source_diff': 0.00037700000000000233}, {'time': 0.029414292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:40.537" endtime="20201115 23:00:40.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.554" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:40.541" endtime="20201115 23:00:40.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.559" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.558" endtime="20201115 23:00:40.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.562" level="INFO">VALUE: [0.00037700000000000233, 0.0003570140000000027, 0.0003588890000000011, 0.00035898599999999864, 0.0003605139999999993, 0.00035877800000000057, 0.00035811099999999776, 0.0003561950000000036, 0.00036043100000000133, 0.0003558889999999981, 0.00035843099999999933, 0.0003595549999999975, 0.00035926399999999803, 0.00036087500000000355, 0.00035993100000000083, 0.000360667000000002, 0.00035555500000000045, 0.00035680499999999477, 0.0003548049999999997, 0.0003552080000000027, 0.00035915200000000147, 0.0003575419999999954, 0.00035911100000000223, 0.00035988800000000265, 0.00035573699999999486, 0.0003600139999999988, 0.0003600280000000053, 0.0003560139999999948, 0.0003558610000000059, 0.0003567359999999964, 0.00035583299999999984, 0.0003570140000000027, 0.00035515299999999694, 0.0003586800000000001, 0.000360152999999995, 0.0003610139999999998, 0.0003589019999999943, 0.0003553050000000002, 0.00036048600000000014, 0.00035841699999999976, 0.0003596109999999958, 0.00036126400000000003, 0.0003603749999999961, 0.00035891700000000026, 0.00035876400000000447, 0.0003593329999999964, 0.0003594030000000012, 0.00036141700000000276, 0.0003583340000000018, 0.000357861000000001]</msg>
<status status="PASS" starttime="20201115 23:00:40.560" endtime="20201115 23:00:40.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.555" endtime="20201115 23:00:40.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.565" endtime="20201115 23:00:40.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.568" endtime="20201115 23:00:40.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.567" endtime="20201115 23:00:40.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.563" endtime="20201115 23:00:40.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.171" endtime="20201115 23:00:40.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.169" endtime="20201115 23:00:40.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.168" endtime="20201115 23:00:40.590"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.593" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.601" endtime="20201115 23:00:40.644"></status>
</kw>
<msg timestamp="20201115 23:00:40.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.599" endtime="20201115 23:00:40.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.645" endtime="20201115 23:00:40.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.648" endtime="20201115 23:00:40.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.597" endtime="20201115 23:00:40.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.595" endtime="20201115 23:00:40.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.657" endtime="20201115 23:00:40.943"></status>
</kw>
<msg timestamp="20201115 23:00:40.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028211431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028567264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.656" endtime="20201115 23:00:40.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028211431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028567264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.948" endtime="20201115 23:00:40.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.956" endtime="20201115 23:00:40.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.653" endtime="20201115 23:00:40.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.651" endtime="20201115 23:00:40.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.962" level="INFO">${RESULT} = [{'time': 0.028567264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035583299999999984, 'source_diff': 0.00035583299999999984}, {'time': 0.028932653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:40.959" endtime="20201115 23:00:40.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.975" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:40.963" endtime="20201115 23:00:40.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.980" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.979" endtime="20201115 23:00:40.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.982" level="INFO">VALUE: [0.00035583299999999984, 0.00035926399999999803, 0.0003556389999999979, 0.0003590829999999996, 0.00036080499999999877, 0.0003598749999999991, 0.00035737500000000005, 0.00035591700000000073, 0.0003583749999999976, 0.0003546379999999974, 0.0003584030000000002, 0.00035587499999999855, 0.00035693100000000477, 0.00035676400000000247, 0.00035947299999999904, 0.0003552080000000027, 0.00035576400000000147, 0.0003591800000000006, 0.00035861100000000173, 0.00035830599999999574, 0.00035576400000000147, 0.0003575419999999954, 0.00035769499999999815, 0.00035545800000000294, 0.00035586199999999846, 0.0003598890000000021, 0.00036043100000000133, 0.0003576250000000003, 0.0003593470000000029, 0.00035777800000000304, 0.0003609169999999953, 0.00035809700000000166, 0.00035677800000000204, 0.00035824999999999746, 0.00036097200000000107, 0.0003583190000000028, 0.00035623600000000283, 0.00035611099999999923, 0.0003612779999999996, 0.00035726400000000297, 0.0003582080000000057, 0.00035727800000000254, 0.0003595419999999974, 0.00035816600000000004, 0.0003563609999999995, 0.0003555140000000012, 0.00035550000000000165, 0.00035533299999999934, 0.0003586390000000009, 0.00035994499999999346]</msg>
<status status="PASS" starttime="20201115 23:00:40.981" endtime="20201115 23:00:40.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.976" endtime="20201115 23:00:40.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.986" endtime="20201115 23:00:40.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.989" endtime="20201115 23:00:41.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.988" endtime="20201115 23:00:41.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.984" endtime="20201115 23:00:41.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.593" endtime="20201115 23:00:41.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.592" endtime="20201115 23:00:41.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.591" endtime="20201115 23:00:41.011"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.013" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.022" endtime="20201115 23:00:41.057"></status>
</kw>
<msg timestamp="20201115 23:00:41.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.020" endtime="20201115 23:00:41.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.058" endtime="20201115 23:00:41.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.061" endtime="20201115 23:00:41.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.017" endtime="20201115 23:00:41.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.015" endtime="20201115 23:00:41.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.070" endtime="20201115 23:00:41.356"></status>
</kw>
<msg timestamp="20201115 23:00:41.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024232653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0245875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:41.068" endtime="20201115 23:00:41.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024232653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0245875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:41.360" endtime="20201115 23:00:41.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.368" endtime="20201115 23:00:41.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.066" endtime="20201115 23:00:41.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.064" endtime="20201115 23:00:41.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.375" level="INFO">${RESULT} = [{'time': 0.0245875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003548470000000019, 'source_diff': 0.0003548470000000019}, {'time': 0.024952847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:41.372" endtime="20201115 23:00:41.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.388" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:41.376" endtime="20201115 23:00:41.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.393" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.392" endtime="20201115 23:00:41.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.395" level="INFO">VALUE: [0.0003548470000000019, 0.0003612909999999997, 0.0003599869999999991, 0.0003596389999999984, 0.0003585829999999991, 0.0003607769999999996, 0.0003569029999999987, 0.00035965300000000144, 0.00036098600000000064, 0.0003580830000000021, 0.0003573610000000005, 0.0003550689999999995, 0.0003560140000000017, 0.00035997200000000007, 0.00035658400000000007, 0.0003588609999999985, 0.0003561250000000023, 0.0003612220000000013, 0.00035605500000000095, 0.0003600969999999967, 0.00035642999999999786, 0.00035458399999999807, 0.00035962499999999537, 0.0003592920000000041, 0.0003573889999999996, 0.0003602090000000002, 0.00035894399999999993, 0.0003566939999999977, 0.00035780599999999524, 0.00035493099999999583, 0.00035924999999999846, 0.0003581669999999995, 0.0003579029999999997, 0.000355972000000003, 0.0003559579999999965, 0.0003577500000000039, 0.0003587779999999971, 0.00035627800000000154, 0.0003575700000000015, 0.0003560140000000017, 0.0003554860000000021, 0.00035479100000000013, 0.00035592999999999736, 0.00036126400000000003, 0.0003607769999999996, 0.0003566389999999989, 0.00035987500000000255, 0.00035887500000000155, 0.0003598339999999964, 0.00036126400000000003]</msg>
<status status="PASS" starttime="20201115 23:00:41.394" endtime="20201115 23:00:41.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.389" endtime="20201115 23:00:41.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.398" endtime="20201115 23:00:41.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.402" endtime="20201115 23:00:41.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.400" endtime="20201115 23:00:41.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.397" endtime="20201115 23:00:41.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.013" endtime="20201115 23:00:41.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.012" endtime="20201115 23:00:41.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.011" endtime="20201115 23:00:41.424"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.426" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.434" endtime="20201115 23:00:41.468"></status>
</kw>
<msg timestamp="20201115 23:00:41.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.433" endtime="20201115 23:00:41.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.470" endtime="20201115 23:00:41.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.472" endtime="20201115 23:00:41.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.430" endtime="20201115 23:00:41.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.428" endtime="20201115 23:00:41.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.482" endtime="20201115 23:00:41.768"></status>
</kw>
<msg timestamp="20201115 23:00:41.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023387097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.480" endtime="20201115 23:00:41.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023387097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.772" endtime="20201115 23:00:41.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.780" endtime="20201115 23:00:41.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.477" endtime="20201115 23:00:41.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.476" endtime="20201115 23:00:41.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.786" level="INFO">${RESULT} = [{'time': 0.023387097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037713899999999856, 'source_diff': 0.00037713899999999856}, {'time': 0.023752181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:41.783" endtime="20201115 23:00:41.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.799" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:41.787" endtime="20201115 23:00:41.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.804" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.803" endtime="20201115 23:00:41.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.806" level="INFO">VALUE: [0.00037713899999999856, 0.0003595839999999996, 0.00036129199999999917, 0.00035830499999999973, 0.0003598330000000004, 0.0003603330000000009, 0.00036093099999999836, 0.0003559310000000003, 0.00035720799999999775, 0.00035761100000000073, 0.0003582219999999983, 0.00036090199999999975, 0.00035472200000000176, 0.00036115300000000294, 0.00035805599999999896, 0.0003580279999999998, 0.00036125000000000046, 0.0003569310000000013, 0.000354972000000002, 0.00036097200000000107, 0.0003593479999999989, 0.00035669400000000115, 0.0003601949999999972, 0.0003611390000000034, 0.00035562500000000524, 0.0003555140000000012, 0.0003596659999999946, 0.0003602920000000051, 0.00035798599999999764, 0.000354568999999999, 0.00035727800000000254, 0.0003555270000000013, 0.00035605600000000043, 0.00035959700000000316, 0.00035916600000000104, 0.00036097200000000107, 0.0003556799999999971, 0.00035643099999999733, 0.00035898599999999864, 0.00035937500000000205, 0.0003601390000000024, 0.00035965200000000197, 0.0003576250000000003, 0.000357861000000001, 0.0003593199999999963, 0.00035694500000000434, 0.0003581120000000007, 0.00035583299999999984, 0.0003575270000000033, 0.0003571809999999981]</msg>
<status status="PASS" starttime="20201115 23:00:41.805" endtime="20201115 23:00:41.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.800" endtime="20201115 23:00:41.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.810" endtime="20201115 23:00:41.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.814" endtime="20201115 23:00:41.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.812" endtime="20201115 23:00:41.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.808" endtime="20201115 23:00:41.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.427" endtime="20201115 23:00:41.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.425" endtime="20201115 23:00:41.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.424" endtime="20201115 23:00:41.835"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.837" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.845" endtime="20201115 23:00:41.881"></status>
</kw>
<msg timestamp="20201115 23:00:41.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.844" endtime="20201115 23:00:41.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.882" endtime="20201115 23:00:41.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.885" endtime="20201115 23:00:41.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.841" endtime="20201115 23:00:41.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.839" endtime="20201115 23:00:41.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.894" endtime="20201115 23:00:42.180"></status>
</kw>
<msg timestamp="20201115 23:00:42.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023849139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242065, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:41.892" endtime="20201115 23:00:42.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023849139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242065, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:42.184" endtime="20201115 23:00:42.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.192" endtime="20201115 23:00:42.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.890" endtime="20201115 23:00:42.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.888" endtime="20201115 23:00:42.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.199" level="INFO">${RESULT} = [{'time': 0.0242065, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003573610000000005, 'source_diff': 0.0003573610000000005}, {'time': 0.024571708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:42.196" endtime="20201115 23:00:42.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.214" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:42.200" endtime="20201115 23:00:42.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.219" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.218" endtime="20201115 23:00:42.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.222" level="INFO">VALUE: [0.0003573610000000005, 0.00036020800000000075, 0.00035607, 0.00035716599999999904, 0.00035797200000000154, 0.0003553750000000015, 0.00035957000000000003, 0.00035661099999999973, 0.0003569579999999975, 0.00035644500000000037, 0.0003590420000000004, 0.00035627700000000206, 0.00035930500000000073, 0.00035752699999999984, 0.00035844500000000237, 0.0003556530000000009, 0.0003569860000000001, 0.000359667000000001, 0.0003612090000000012, 0.00035838800000000115, 0.0003583480000000014, 0.00036102799999999935, 0.0003551939999999962, 0.0003594999999999987, 0.0003612090000000012, 0.00035493100000000277, 0.0003587359999999984, 0.00035547199999999557, 0.0003582500000000044, 0.0003590830000000031, 0.0003608329999999979, 0.00035693099999999783, 0.0003575969999999942, 0.0003561249999999988, 0.0003560139999999948, 0.00036024999999999946, 0.0003563609999999995, 0.0003565969999999932, 0.0003554860000000021, 0.00035587499999999855, 0.0003605969999999972, 0.0003596940000000007, 0.0003609309999999949, 0.00035559699999999916, 0.0003589999999999982, 0.00035837500000000105, 0.00035538900000000456, 0.0003612779999999996, 0.00035893099999999983, 0.0003600139999999988]</msg>
<status status="PASS" starttime="20201115 23:00:42.220" endtime="20201115 23:00:42.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.215" endtime="20201115 23:00:42.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.225" endtime="20201115 23:00:42.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.229" endtime="20201115 23:00:42.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.227" endtime="20201115 23:00:42.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.223" endtime="20201115 23:00:42.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.838" endtime="20201115 23:00:42.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.836" endtime="20201115 23:00:42.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.835" endtime="20201115 23:00:42.250"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.252" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.261" endtime="20201115 23:00:42.298"></status>
</kw>
<msg timestamp="20201115 23:00:42.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.259" endtime="20201115 23:00:42.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.299" endtime="20201115 23:00:42.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.302" endtime="20201115 23:00:42.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.256" endtime="20201115 23:00:42.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.254" endtime="20201115 23:00:42.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.311" endtime="20201115 23:00:42.598"></status>
</kw>
<msg timestamp="20201115 23:00:42.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025746722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026107972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.309" endtime="20201115 23:00:42.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025746722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026107972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.602" endtime="20201115 23:00:42.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.610" endtime="20201115 23:00:42.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.307" endtime="20201115 23:00:42.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.305" endtime="20201115 23:00:42.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.617" level="INFO">${RESULT} = [{'time': 0.026107972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036125000000000046, 'source_diff': 0.00036125000000000046}, {'time': 0.02647325, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:42.613" endtime="20201115 23:00:42.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.630" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:42.618" endtime="20201115 23:00:42.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.635" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.634" endtime="20201115 23:00:42.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.637" level="INFO">VALUE: [0.00036125000000000046, 0.00035540300000000066, 0.0003607769999999996, 0.00035607, 0.0003565140000000022, 0.0003590269999999979, 0.00035487499999999755, 0.0003588189999999998, 0.0003566389999999989, 0.00035523599999999836, 0.00036002799999999835, 0.00035573599999999886, 0.000359054999999997, 0.00036107000000000153, 0.00035479100000000013, 0.0003587080000000027, 0.0003580419999999959, 0.00035912499999999486, 0.0003548750000000045, 0.00035668000000000505, 0.0003607360000000004, 0.0003596940000000007, 0.00035827800000000354, 0.00035559699999999916, 0.00035682000000000075, 0.0003559159999999978, 0.0003547500000000009, 0.00035770900000000466, 0.00035690300000000563, 0.00035494500000000234, 0.0003567500000000029, 0.00036098600000000064, 0.0003589579999999995, 0.0003588329999999959, 0.00035750000000000365, 0.00036094400000000193, 0.0003555140000000012, 0.0003550140000000007, 0.00035926400000000497, 0.0003555280000000008, 0.0003608480000000039, 0.0003582909999999967, 0.00035518000000000355, 0.0003578470000000014, 0.00035841699999999976, 0.00035647199999999657, 0.0003582359999999979, 0.00035794399999999893, 0.00035772300000000423, 0.0003595419999999974]</msg>
<status status="PASS" starttime="20201115 23:00:42.636" endtime="20201115 23:00:42.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.631" endtime="20201115 23:00:42.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.640" endtime="20201115 23:00:42.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.644" endtime="20201115 23:00:42.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.642" endtime="20201115 23:00:42.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.639" endtime="20201115 23:00:42.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.253" endtime="20201115 23:00:42.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.251" endtime="20201115 23:00:42.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.250" endtime="20201115 23:00:42.665"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.668" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.676" endtime="20201115 23:00:42.714"></status>
</kw>
<msg timestamp="20201115 23:00:42.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.674" endtime="20201115 23:00:42.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.716" endtime="20201115 23:00:42.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.719" endtime="20201115 23:00:42.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.672" endtime="20201115 23:00:42.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.670" endtime="20201115 23:00:42.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.728" endtime="20201115 23:00:43.013"></status>
</kw>
<msg timestamp="20201115 23:00:43.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02747375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027854792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:42.726" endtime="20201115 23:00:43.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02747375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027854792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:43.018" endtime="20201115 23:00:43.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.026" endtime="20201115 23:00:43.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.724" endtime="20201115 23:00:43.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.722" endtime="20201115 23:00:43.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.033" level="INFO">${RESULT} = [{'time': 0.027854792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003810419999999981, 'source_diff': 0.0003810419999999981}, {'time': 0.028220069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:43.030" endtime="20201115 23:00:43.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.046" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:43.034" endtime="20201115 23:00:43.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.050" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.049" endtime="20201115 23:00:43.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.053" level="INFO">VALUE: [0.0003810419999999981, 0.000359555000000001, 0.00035975000000000243, 0.00035997299999999954, 0.00035973699999999886, 0.0003600970000000002, 0.00035668100000000105, 0.0003602220000000003, 0.0003591120000000017, 0.00036074999999999996, 0.00035641700000000123, 0.0003560690000000005, 0.00035563800000000534, 0.00035765299999999944, 0.00036013899999999543, 0.00035566599999999754, 0.0003554999999999947, 0.000357861000000001, 0.0003576389999999999, 0.00035577800000000104, 0.00035912499999999486, 0.00035909700000000266, 0.00036136099999999755, 0.0003561669999999975, 0.00035533299999999934, 0.0003593190000000038, 0.00035987500000000255, 0.0003553469999999989, 0.00035974999999999896, 0.0003608890000000031, 0.000356457999999997, 0.0003564720000000035, 0.0003550140000000007, 0.00036055600000000493, 0.0003610689999999986, 0.0003592909999999977, 0.0003570280000000023, 0.0003583610000000015, 0.00035787500000000055, 0.00035815299999999994, 0.00035692999999999836, 0.00035659799999999964, 0.000354860999999998, 0.00035876399999999753, 0.0003582359999999979, 0.0003575410000000029, 0.0003579999999999972, 0.00036125000000000046, 0.00036065300000000244, 0.0003576660000000065]</msg>
<status status="PASS" starttime="20201115 23:00:43.051" endtime="20201115 23:00:43.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.047" endtime="20201115 23:00:43.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.056" endtime="20201115 23:00:43.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.060" endtime="20201115 23:00:43.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.058" endtime="20201115 23:00:43.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.054" endtime="20201115 23:00:43.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.668" endtime="20201115 23:00:43.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.666" endtime="20201115 23:00:43.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.665" endtime="20201115 23:00:43.081"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.083" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.092" endtime="20201115 23:00:43.126"></status>
</kw>
<msg timestamp="20201115 23:00:43.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.090" endtime="20201115 23:00:43.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.128" endtime="20201115 23:00:43.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.130" endtime="20201115 23:00:43.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.087" endtime="20201115 23:00:43.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.085" endtime="20201115 23:00:43.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.140" endtime="20201115 23:00:43.427"></status>
</kw>
<msg timestamp="20201115 23:00:43.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023714889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024081875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.138" endtime="20201115 23:00:43.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023714889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024081875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.431" endtime="20201115 23:00:43.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.439" endtime="20201115 23:00:43.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.135" endtime="20201115 23:00:43.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.133" endtime="20201115 23:00:43.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.446" level="INFO">${RESULT} = [{'time': 0.024081875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003669859999999997, 'source_diff': 0.0003669859999999997}, {'time': 0.024447278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:43.443" endtime="20201115 23:00:43.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.459" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:43.447" endtime="20201115 23:00:43.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.464" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.463" endtime="20201115 23:00:43.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.466" level="INFO">VALUE: [0.0003669859999999997, 0.000361346999999998, 0.000357861000000001, 0.00035777799999999957, 0.000359555000000001, 0.0003569579999999975, 0.0003560279999999978, 0.0003601800000000016, 0.00035633300000000034, 0.0003598480000000029, 0.0003603190000000013, 0.00036066699999999854, 0.0003576250000000003, 0.0003574449999999979, 0.00036012499999999933, 0.00035679100000000213, 0.00035859799999999817, 0.00035823600000000136, 0.0003583059999999992, 0.000360361, 0.00035512500000000474, 0.00036065300000000244, 0.0003559029999999977, 0.00035695800000000444, 0.0003573610000000005, 0.0003555829999999996, 0.0003603749999999961, 0.0003588749999999946, 0.0003557089999999957, 0.00035797299999999754, 0.0003561249999999988, 0.00036144400000000243, 0.00036005600000000443, 0.0003612639999999931, 0.0003559860000000026, 0.00035855500000000345, 0.00035776400000000347, 0.00035909700000000266, 0.00036098600000000064, 0.0003561669999999975, 0.00035766599999999954, 0.0003567219999999968, 0.00035833300000000234, 0.0003596250000000023, 0.00035891700000000026, 0.00035776399999999653, 0.00035854200000000336, 0.00036132000000000525, 0.000360152999999995, 0.0003572500000000034]</msg>
<status status="PASS" starttime="20201115 23:00:43.465" endtime="20201115 23:00:43.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.460" endtime="20201115 23:00:43.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.469" endtime="20201115 23:00:43.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.473" endtime="20201115 23:00:43.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.471" endtime="20201115 23:00:43.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.468" endtime="20201115 23:00:43.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.084" endtime="20201115 23:00:43.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.082" endtime="20201115 23:00:43.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.081" endtime="20201115 23:00:43.494"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.496" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.505" endtime="20201115 23:00:43.543"></status>
</kw>
<msg timestamp="20201115 23:00:43.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.503" endtime="20201115 23:00:43.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.544" endtime="20201115 23:00:43.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.547" endtime="20201115 23:00:43.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.501" endtime="20201115 23:00:43.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.499" endtime="20201115 23:00:43.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.556" endtime="20201115 23:00:43.843"></status>
</kw>
<msg timestamp="20201115 23:00:43.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027571389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027948125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.555" endtime="20201115 23:00:43.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027571389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027948125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.847" endtime="20201115 23:00:43.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.855" endtime="20201115 23:00:43.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.552" endtime="20201115 23:00:43.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.551" endtime="20201115 23:00:43.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.862" level="INFO">${RESULT} = [{'time': 0.027948125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037673599999999904, 'source_diff': 0.00037673599999999904}, {'time': 0.028313375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:43.859" endtime="20201115 23:00:43.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.876" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:43.863" endtime="20201115 23:00:43.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.881" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.880" endtime="20201115 23:00:43.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.883" level="INFO">VALUE: [0.00037673599999999904, 0.0003555829999999996, 0.00035758400000000107, 0.0003573889999999996, 0.00035706899999999805, 0.0003611389999999999, 0.00035851400000000075, 0.00035618100000000055, 0.0003575000000000002, 0.00035876399999999753, 0.0003560140000000017, 0.0003605139999999993, 0.00035526400000000097, 0.0003606250000000033, 0.0003595280000000048, 0.00035947199999999957, 0.0003560830000000001, 0.0003596250000000023, 0.00035826299999999756, 0.0003588050000000037, 0.0003601390000000024, 0.000356861, 0.00035783300000000184, 0.00035561100000000567, 0.0003587359999999984, 0.00035726400000000297, 0.00035659700000000016, 0.0003595700000000035, 0.0003561249999999988, 0.00035533400000000576, 0.00036126400000000003, 0.0003549029999999967, 0.00035833300000000234, 0.0003550829999999991, 0.0003602779999999986, 0.0003605139999999993, 0.00036040299999999525, 0.00035501300000000124, 0.00036104099999999945, 0.00035636199999999896, 0.00035936099999999555, 0.0003552219999999953, 0.00035533299999999934, 0.00035900000000000515, 0.0003577500000000039, 0.0003605139999999993, 0.000359569000000004, 0.00035947299999999904, 0.0003602920000000051, 0.0003561950000000036]</msg>
<status status="PASS" starttime="20201115 23:00:43.882" endtime="20201115 23:00:43.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.877" endtime="20201115 23:00:43.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.886" endtime="20201115 23:00:43.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.890" endtime="20201115 23:00:43.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.888" endtime="20201115 23:00:43.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.885" endtime="20201115 23:00:43.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.497" endtime="20201115 23:00:43.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.495" endtime="20201115 23:00:43.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.494" endtime="20201115 23:00:43.911"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.914" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.922" endtime="20201115 23:00:43.961"></status>
</kw>
<msg timestamp="20201115 23:00:43.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.921" endtime="20201115 23:00:43.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.962" endtime="20201115 23:00:43.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.965" endtime="20201115 23:00:43.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.918" endtime="20201115 23:00:43.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.916" endtime="20201115 23:00:43.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.974" endtime="20201115 23:00:44.269"></status>
</kw>
<msg timestamp="20201115 23:00:44.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027336778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027706333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.972" endtime="20201115 23:00:44.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027336778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027706333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.278" endtime="20201115 23:00:44.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.296" endtime="20201115 23:00:44.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.970" endtime="20201115 23:00:44.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.968" endtime="20201115 23:00:44.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.311" level="INFO">${RESULT} = [{'time': 0.027706333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003695550000000006, 'source_diff': 0.0003695550000000006}, {'time': 0.028071625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:44.304" endtime="20201115 23:00:44.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.332" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:44.313" endtime="20201115 23:00:44.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.337" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.336" endtime="20201115 23:00:44.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.339" level="INFO">VALUE: [0.0003695550000000006, 0.0003553189999999998, 0.0003602779999999986, 0.0003598479999999994, 0.00035984699999999994, 0.00035791699999999926, 0.00036086099999999705, 0.00035834699999999844, 0.0003575000000000002, 0.000361152, 0.0003607220000000008, 0.00035954200000000436, 0.00036024999999999946, 0.00036066600000000254, 0.0003598890000000021, 0.0003567219999999968, 0.00035761100000000073, 0.00035794399999999893, 0.0003594999999999987, 0.00036034799999999645, 0.0003556810000000035, 0.00035533299999999934, 0.0003569860000000036, 0.0003579730000000045, 0.0003608480000000039, 0.0003606669999999951, 0.00035824999999999746, 0.0003571950000000046, 0.0003560830000000001, 0.0003608469999999975, 0.0003592500000000054, 0.0003597219999999998, 0.00035701300000000324, 0.00035837500000000105, 0.0003558469999999994, 0.00035826400000000397, 0.0003575139999999963, 0.0003606810000000016, 0.00035691699999999826, 0.0003560690000000005, 0.00036098600000000064, 0.0003599999999999992, 0.00035659700000000016, 0.00036079199999999867, 0.0003546389999999969, 0.00035511099999999823, 0.00035594399999999693, 0.00035998599999999964, 0.000361054999999999, 0.00035577700000000156]</msg>
<status status="PASS" starttime="20201115 23:00:44.338" endtime="20201115 23:00:44.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.333" endtime="20201115 23:00:44.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.343" endtime="20201115 23:00:44.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.346" endtime="20201115 23:00:44.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.345" endtime="20201115 23:00:44.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.341" endtime="20201115 23:00:44.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.914" endtime="20201115 23:00:44.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.912" endtime="20201115 23:00:44.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.912" endtime="20201115 23:00:44.368"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.370" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.378" endtime="20201115 23:00:44.412"></status>
</kw>
<msg timestamp="20201115 23:00:44.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.377" endtime="20201115 23:00:44.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.414" endtime="20201115 23:00:44.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.416" endtime="20201115 23:00:44.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.374" endtime="20201115 23:00:44.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.372" endtime="20201115 23:00:44.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.426" endtime="20201115 23:00:44.713"></status>
</kw>
<msg timestamp="20201115 23:00:44.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023010764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023388514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.424" endtime="20201115 23:00:44.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023010764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023388514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.717" endtime="20201115 23:00:44.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.725" endtime="20201115 23:00:44.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.422" endtime="20201115 23:00:44.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.420" endtime="20201115 23:00:44.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.731" level="INFO">${RESULT} = [{'time': 0.023388514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003777499999999996, 'source_diff': 0.0003777499999999996}, {'time': 0.023753708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:44.728" endtime="20201115 23:00:44.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.745" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:44.732" endtime="20201115 23:00:44.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.749" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.748" endtime="20201115 23:00:44.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.752" level="INFO">VALUE: [0.0003777499999999996, 0.00035537499999999805, 0.0003570279999999988, 0.0003580969999999982, 0.0003576809999999986, 0.0003595969999999997, 0.00035495899999999844, 0.000360652999999999, 0.00035812499999999733, 0.0003588199999999993, 0.00035859800000000164, 0.0003579579999999985, 0.0003553609999999985, 0.0003605840000000006, 0.0003608610000000005, 0.0003612779999999996, 0.00035909799999999867, 0.0003579029999999997, 0.00036026399999999903, 0.00035765299999999944, 0.0003596810000000006, 0.0003579029999999997, 0.0003600000000000027, 0.0003581669999999995, 0.00035941700000000076, 0.00035658400000000007, 0.0003559579999999965, 0.0003582769999999971, 0.0003569860000000036, 0.00036020800000000075, 0.00035577800000000104, 0.00035543100000000327, 0.000360555999999998, 0.0003551950000000026, 0.00035605500000000095, 0.0003547919999999996, 0.000354763000000001, 0.0003595140000000052, 0.0003580129999999973, 0.00035493100000000277, 0.00035958299999999666, 0.00035465199999999697, 0.0003591940000000002, 0.0003610139999999998, 0.0003573340000000008, 0.0003590410000000044, 0.00036126400000000003, 0.000360346999999997, 0.00035479100000000013, 0.0003586250000000013]</msg>
<status status="PASS" starttime="20201115 23:00:44.750" endtime="20201115 23:00:44.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.746" endtime="20201115 23:00:44.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.755" endtime="20201115 23:00:44.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.759" endtime="20201115 23:00:44.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.757" endtime="20201115 23:00:44.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.754" endtime="20201115 23:00:44.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.371" endtime="20201115 23:00:44.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.369" endtime="20201115 23:00:44.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.368" endtime="20201115 23:00:44.780"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.782" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.791" endtime="20201115 23:00:44.824"></status>
</kw>
<msg timestamp="20201115 23:00:44.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.789" endtime="20201115 23:00:44.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.826" endtime="20201115 23:00:44.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.828" endtime="20201115 23:00:44.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.786" endtime="20201115 23:00:44.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.784" endtime="20201115 23:00:44.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.837" endtime="20201115 23:00:45.124"></status>
</kw>
<msg timestamp="20201115 23:00:45.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023036125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.836" endtime="20201115 23:00:45.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023036125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.128" endtime="20201115 23:00:45.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.136" endtime="20201115 23:00:45.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.833" endtime="20201115 23:00:45.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.831" endtime="20201115 23:00:45.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.143" level="INFO">${RESULT} = [{'time': 0.023036125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003697219999999994, 'source_diff': 0.0003697219999999994}, {'time': 0.023401417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:45.139" endtime="20201115 23:00:45.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.156" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:45.144" endtime="20201115 23:00:45.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.160" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.159" endtime="20201115 23:00:45.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.163" level="INFO">VALUE: [0.0003697219999999994, 0.0003595839999999996, 0.00035991700000000126, 0.00035538799999999815, 0.00035861099999999826, 0.00035591700000000073, 0.0003602090000000002, 0.0003605840000000006, 0.00035891700000000026, 0.00035644500000000037, 0.00035715199999999947, 0.0003602220000000003, 0.00036126400000000003, 0.00035522299999999826, 0.00035929199999999717, 0.0003568050000000017, 0.000360652999999999, 0.00035795900000000144, 0.0003568329999999974, 0.000357263, 0.0003570830000000011, 0.00036116699999999904, 0.0003570419999999984, 0.00036097200000000107, 0.00035691600000000573, 0.0003584869999999976, 0.00036029199999999817, 0.0003579999999999972, 0.00036125000000000046, 0.00036024999999999946, 0.000356569000000001, 0.00036074999999999996, 0.00035659700000000016, 0.00036098600000000064, 0.0003567359999999964, 0.000360861000000004, 0.00035691699999999826, 0.0003588340000000023, 0.0003578190000000023, 0.00035737500000000005, 0.0003599030000000017, 0.00035623600000000283, 0.0003553059999999997, 0.0003593339999999959, 0.0003575140000000032, 0.0003553050000000002, 0.0003580280000000033, 0.00036097300000000054, 0.0003585549999999965, 0.0003576799999999991]</msg>
<status status="PASS" starttime="20201115 23:00:45.161" endtime="20201115 23:00:45.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.157" endtime="20201115 23:00:45.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.166" endtime="20201115 23:00:45.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.170" endtime="20201115 23:00:45.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.168" endtime="20201115 23:00:45.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.165" endtime="20201115 23:00:45.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.783" endtime="20201115 23:00:45.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.781" endtime="20201115 23:00:45.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.780" endtime="20201115 23:00:45.191"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.194" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.202" endtime="20201115 23:00:45.236"></status>
</kw>
<msg timestamp="20201115 23:00:45.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.200" endtime="20201115 23:00:45.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.237" endtime="20201115 23:00:45.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.240" endtime="20201115 23:00:45.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.198" endtime="20201115 23:00:45.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.196" endtime="20201115 23:00:45.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.249" endtime="20201115 23:00:45.536"></status>
</kw>
<msg timestamp="20201115 23:00:45.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023407653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023790819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.247" endtime="20201115 23:00:45.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023407653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023790819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.540" endtime="20201115 23:00:45.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.549" endtime="20201115 23:00:45.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.245" endtime="20201115 23:00:45.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.243" endtime="20201115 23:00:45.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.555" level="INFO">${RESULT} = [{'time': 0.023790819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038316600000000076, 'source_diff': 0.00038316600000000076}, {'time': 0.024156097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:45.552" endtime="20201115 23:00:45.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.570" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:45.557" endtime="20201115 23:00:45.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.575" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.574" endtime="20201115 23:00:45.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.577" level="INFO">VALUE: [0.00038316600000000076, 0.0003612220000000013, 0.0003572220000000008, 0.00036097300000000054, 0.0003581669999999995, 0.00035751399999999975, 0.0003577770000000001, 0.0003579860000000011, 0.0003583479999999979, 0.00035865300000000044, 0.0003577090000000012, 0.0003592640000000015, 0.0003576250000000003, 0.0003554999999999982, 0.00035497199999999854, 0.0003574860000000006, 0.000355763999999998, 0.000358973000000002, 0.0003594030000000012, 0.000355167, 0.0003554309999999998, 0.0003599299999999979, 0.0003585419999999964, 0.0003581669999999995, 0.0003568340000000003, 0.0003555140000000012, 0.00035566700000000395, 0.0003594589999999995, 0.00035754200000000236, 0.00035765299999999944, 0.00035850000000000465, 0.00036037500000000305, 0.00035544500000000284, 0.0003599160000000018, 0.0003565700000000005, 0.00036113899999999644, 0.0003591810000000001, 0.0003597779999999981, 0.0003558469999999994, 0.00035715299999999894, 0.0003587500000000049, 0.00035711100000000023, 0.0003612090000000012, 0.00035923600000000583, 0.00036043100000000133, 0.0003572359999999969, 0.0003597219999999998, 0.00035943100000000033, 0.0003571119999999997, 0.00035565299999999744]</msg>
<status status="PASS" starttime="20201115 23:00:45.576" endtime="20201115 23:00:45.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.571" endtime="20201115 23:00:45.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.581" endtime="20201115 23:00:45.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.584" endtime="20201115 23:00:45.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.583" endtime="20201115 23:00:45.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.579" endtime="20201115 23:00:45.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.194" endtime="20201115 23:00:45.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.192" endtime="20201115 23:00:45.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.192" endtime="20201115 23:00:45.605"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.608" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.616" endtime="20201115 23:00:45.654"></status>
</kw>
<msg timestamp="20201115 23:00:45.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.615" endtime="20201115 23:00:45.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.655" endtime="20201115 23:00:45.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.658" endtime="20201115 23:00:45.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.612" endtime="20201115 23:00:45.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.610" endtime="20201115 23:00:45.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.667" endtime="20201115 23:00:45.953"></status>
</kw>
<msg timestamp="20201115 23:00:45.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026268042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026629319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.665" endtime="20201115 23:00:45.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026268042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026629319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.957" endtime="20201115 23:00:45.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.965" endtime="20201115 23:00:45.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.663" endtime="20201115 23:00:45.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.661" endtime="20201115 23:00:45.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.972" level="INFO">${RESULT} = [{'time': 0.026629319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003612770000000001, 'source_diff': 0.0003612770000000001}, {'time': 0.026994639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:45.969" endtime="20201115 23:00:45.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.985" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:45.973" endtime="20201115 23:00:45.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.990" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.988" endtime="20201115 23:00:45.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.992" level="INFO">VALUE: [0.0003612770000000001, 0.00035929200000000064, 0.00035825000000000093, 0.00035723600000000036, 0.0003556530000000009, 0.0003585700000000025, 0.0003593329999999999, 0.0003596389999999984, 0.0003562219999999998, 0.0003578749999999971, 0.0003561249999999988, 0.00035641700000000123, 0.00035615199999999847, 0.00035655599999999746, 0.00035607, 0.0003600419999999979, 0.0003570410000000024, 0.00035740300000000613, 0.0003594160000000013, 0.00035820799999999875, 0.0003591390000000014, 0.0003591670000000005, 0.0003599160000000018, 0.0003557500000000019, 0.0003558469999999994, 0.00035852799999999685, 0.00035611099999999923, 0.00035492999999999636, 0.0003586800000000001, 0.00035891700000000026, 0.0003587920000000036, 0.0003578190000000023, 0.00035837500000000105, 0.0003552219999999953, 0.00035534700000000585, 0.00036020800000000075, 0.000357861000000001, 0.00035811100000000123, 0.0003598329999999969, 0.0003609450000000014, 0.0003599160000000018, 0.00035565299999999744, 0.0003568190000000013, 0.0003557359999999954, 0.0003612360000000009, 0.0003558050000000007, 0.0003563469999999999, 0.00035986099999999605, 0.00035555599999999993, 0.00035540300000000413]</msg>
<status status="PASS" starttime="20201115 23:00:45.991" endtime="20201115 23:00:45.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.986" endtime="20201115 23:00:45.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.995" endtime="20201115 23:00:45.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.999" endtime="20201115 23:00:46.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.997" endtime="20201115 23:00:46.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.993" endtime="20201115 23:00:46.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.608" endtime="20201115 23:00:46.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.607" endtime="20201115 23:00:46.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.606" endtime="20201115 23:00:46.020"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.022" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.031" endtime="20201115 23:00:46.065"></status>
</kw>
<msg timestamp="20201115 23:00:46.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.029" endtime="20201115 23:00:46.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.067" endtime="20201115 23:00:46.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.069" endtime="20201115 23:00:46.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.026" endtime="20201115 23:00:46.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.024" endtime="20201115 23:00:46.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.079" endtime="20201115 23:00:46.366"></status>
</kw>
<msg timestamp="20201115 23:00:46.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023686792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024042292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.077" endtime="20201115 23:00:46.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023686792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024042292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.370" endtime="20201115 23:00:46.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.378" endtime="20201115 23:00:46.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.074" endtime="20201115 23:00:46.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.072" endtime="20201115 23:00:46.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.384" level="INFO">${RESULT} = [{'time': 0.024042292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003554999999999982, 'source_diff': 0.0003554999999999982}, {'time': 0.024407403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:46.381" endtime="20201115 23:00:46.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.398" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:46.385" endtime="20201115 23:00:46.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.402" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.401" endtime="20201115 23:00:46.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.405" level="INFO">VALUE: [0.0003554999999999982, 0.00035590300000000116, 0.00035901400000000125, 0.0003578749999999971, 0.00035944400000000043, 0.00035861100000000173, 0.0003548059999999992, 0.00035787500000000055, 0.000356875000000003, 0.000357070000000001, 0.00035541600000000076, 0.000356167000000001, 0.000359360999999999, 0.0003578609999999975, 0.0003567920000000016, 0.0003574019999999997, 0.0003553890000000011, 0.0003595420000000009, 0.0003558050000000007, 0.0003581799999999996, 0.0003610419999999989, 0.0003563609999999995, 0.00035791699999999926, 0.0003598749999999956, 0.0003581250000000008, 0.0003555140000000012, 0.00035518000000000355, 0.00035624999999999546, 0.0003600969999999967, 0.00035847199999999857, 0.000360667000000002, 0.000358569000000003, 0.0003599020000000022, 0.0003576250000000003, 0.00035998599999999964, 0.00035915300000000094, 0.0003599999999999992, 0.000360943999999995, 0.00036002799999999835, 0.00036052799999999885, 0.000356958999999997, 0.00035674999999999596, 0.00035881899999999634, 0.00035915300000000094, 0.0003562359999999959, 0.00035623600000000283, 0.00035997200000000007, 0.00035940299999999425, 0.00036002799999999835, 0.0003577920000000026]</msg>
<status status="PASS" starttime="20201115 23:00:46.403" endtime="20201115 23:00:46.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.399" endtime="20201115 23:00:46.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.408" endtime="20201115 23:00:46.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.411" endtime="20201115 23:00:46.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.410" endtime="20201115 23:00:46.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.406" endtime="20201115 23:00:46.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.023" endtime="20201115 23:00:46.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.021" endtime="20201115 23:00:46.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.020" endtime="20201115 23:00:46.432"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.435" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.443" endtime="20201115 23:00:46.478"></status>
</kw>
<msg timestamp="20201115 23:00:46.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.442" endtime="20201115 23:00:46.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.480" endtime="20201115 23:00:46.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.483" endtime="20201115 23:00:46.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.439" endtime="20201115 23:00:46.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.437" endtime="20201115 23:00:46.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.492" endtime="20201115 23:00:46.778"></status>
</kw>
<msg timestamp="20201115 23:00:46.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023120861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023497903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.490" endtime="20201115 23:00:46.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023120861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023497903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.783" endtime="20201115 23:00:46.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.791" endtime="20201115 23:00:46.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.488" endtime="20201115 23:00:46.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.486" endtime="20201115 23:00:46.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.797" level="INFO">${RESULT} = [{'time': 0.023497903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037704200000000104, 'source_diff': 0.00037704200000000104}, {'time': 0.023863125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:46.794" endtime="20201115 23:00:46.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.810" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:46.798" endtime="20201115 23:00:46.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.815" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.814" endtime="20201115 23:00:46.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.817" level="INFO">VALUE: [0.00037704200000000104, 0.00035691699999999826, 0.0003592220000000028, 0.0003611109999999973, 0.00036122199999999785, 0.0003604029999999987, 0.00035875000000000143, 0.00035618100000000055, 0.00035704200000000186, 0.0003569449999999974, 0.0003576809999999986, 0.00035941700000000076, 0.00035920799999999975, 0.0003553469999999989, 0.00035780499999999923, 0.0003552219999999988, 0.0003575280000000028, 0.00035965300000000144, 0.00035915200000000147, 0.00035924999999999846, 0.00035629099999999816, 0.000359652999999998, 0.0003573470000000009, 0.00035629100000000163, 0.0003581939999999992, 0.0003571249999999998, 0.0003570690000000015, 0.0003582909999999967, 0.00035554200000000036, 0.00035704200000000186, 0.0003579579999999985, 0.0003603890000000026, 0.00036047200000000057, 0.00035637499999999905, 0.0003560270000000018, 0.00035811100000000123, 0.0003593199999999963, 0.00035700000000000315, 0.0003607220000000008, 0.0003578060000000022, 0.00035841699999999976, 0.0003550829999999991, 0.0003588050000000037, 0.0003614299999999959, 0.0003591670000000005, 0.00035954099999999795, 0.00035493099999999583, 0.00035565299999999744, 0.00036118099999999514, 0.00035761100000000073]</msg>
<status status="PASS" starttime="20201115 23:00:46.816" endtime="20201115 23:00:46.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.811" endtime="20201115 23:00:46.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.821" endtime="20201115 23:00:46.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.824" endtime="20201115 23:00:46.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.823" endtime="20201115 23:00:46.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.819" endtime="20201115 23:00:46.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.435" endtime="20201115 23:00:46.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.434" endtime="20201115 23:00:46.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.433" endtime="20201115 23:00:46.845"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.848" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.856" endtime="20201115 23:00:46.895"></status>
</kw>
<msg timestamp="20201115 23:00:46.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.855" endtime="20201115 23:00:46.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.896" endtime="20201115 23:00:46.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.899" endtime="20201115 23:00:46.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.852" endtime="20201115 23:00:46.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.850" endtime="20201115 23:00:46.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.908" endtime="20201115 23:00:47.204"></status>
</kw>
<msg timestamp="20201115 23:00:47.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027319403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027682222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.906" endtime="20201115 23:00:47.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027319403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027682222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.214" endtime="20201115 23:00:47.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.232" endtime="20201115 23:00:47.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.904" endtime="20201115 23:00:47.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.902" endtime="20201115 23:00:47.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.246" level="INFO">${RESULT} = [{'time': 0.027682222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036281900000000034, 'source_diff': 0.00036281900000000034}, {'time': 0.028047514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:47.239" endtime="20201115 23:00:47.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.268" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:47.248" endtime="20201115 23:00:47.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.273" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.271" endtime="20201115 23:00:47.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.275" level="INFO">VALUE: [0.00036281900000000034, 0.0003548890000000006, 0.00035762499999999683, 0.00036017999999999814, 0.00035659700000000016, 0.00036006900000000105, 0.00035645899999999994, 0.00035961099999999926, 0.00035691699999999826, 0.0003610689999999986, 0.0003601800000000016, 0.00036055600000000493, 0.000358667, 0.0003591390000000014, 0.00035841699999999976, 0.0003551249999999978, 0.00036037500000000305, 0.00035808400000000157, 0.0003613190000000058, 0.00035709700000000066, 0.0003586809999999996, 0.00035655500000000145, 0.00035698700000000305, 0.0003579579999999985, 0.0003600969999999967, 0.0003566390000000058, 0.0003574999999999967, 0.00035595800000000344, 0.0003576250000000003, 0.000358457999999999, 0.0003604030000000022, 0.0003604299999999949, 0.0003576389999999999, 0.0003610130000000003, 0.0003587359999999984, 0.0003558889999999981, 0.0003551940000000031, 0.0003581939999999992, 0.000358457999999999, 0.00036073599999999345, 0.0003614450000000019, 0.00035580599999999324, 0.0003566249999999993, 0.0003571249999999998, 0.0003605689999999981, 0.00035627800000000154, 0.0003576120000000002, 0.00035809800000000114, 0.0003576389999999999, 0.0003578469999999945]</msg>
<status status="PASS" starttime="20201115 23:00:47.274" endtime="20201115 23:00:47.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.269" endtime="20201115 23:00:47.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.278" endtime="20201115 23:00:47.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.282" endtime="20201115 23:00:47.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.280" endtime="20201115 23:00:47.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.277" endtime="20201115 23:00:47.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.848" endtime="20201115 23:00:47.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.846" endtime="20201115 23:00:47.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.846" endtime="20201115 23:00:47.304"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.306" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.316" endtime="20201115 23:00:47.351"></status>
</kw>
<msg timestamp="20201115 23:00:47.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.314" endtime="20201115 23:00:47.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.353" endtime="20201115 23:00:47.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.355" endtime="20201115 23:00:47.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.311" endtime="20201115 23:00:47.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.309" endtime="20201115 23:00:47.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.364" endtime="20201115 23:00:47.651"></status>
</kw>
<msg timestamp="20201115 23:00:47.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026336903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026706514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.363" endtime="20201115 23:00:47.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026336903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026706514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.655" endtime="20201115 23:00:47.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.663" endtime="20201115 23:00:47.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.360" endtime="20201115 23:00:47.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.359" endtime="20201115 23:00:47.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.669" level="INFO">${RESULT} = [{'time': 0.026706514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003696110000000023, 'source_diff': 0.0003696110000000023}, {'time': 0.02707175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:47.666" endtime="20201115 23:00:47.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.682" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:47.670" endtime="20201115 23:00:47.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.687" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.686" endtime="20201115 23:00:47.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.689" level="INFO">VALUE: [0.0003696110000000023, 0.0003549309999999993, 0.00035677800000000204, 0.00035851400000000075, 0.0003610280000000028, 0.00035590300000000116, 0.0003565419999999979, 0.0003566939999999977, 0.00035513800000000137, 0.0003560419999999974, 0.0003568479999999999, 0.0003568189999999978, 0.0003583060000000027, 0.00036094399999999846, 0.000357666999999999, 0.00035695800000000444, 0.00035555599999999993, 0.0003603340000000038, 0.000358861000000002, 0.0003561799999999976, 0.000358346999999995, 0.00035948599999999914, 0.00035627800000000154, 0.00035980499999999777, 0.0003595549999999975, 0.0003605140000000062, 0.0003550689999999995, 0.00035687499999999955, 0.00035633300000000034, 0.0003567219999999968, 0.0003588060000000032, 0.0003549860000000016, 0.00035468000000000305, 0.0003572920000000021, 0.0003609160000000028, 0.0003612220000000013, 0.0003558050000000007, 0.0003587779999999971, 0.0003556379999999984, 0.00035891700000000026, 0.00035509699999999866, 0.0003594999999999987, 0.0003559860000000026, 0.0003556520000000049, 0.0003590269999999979, 0.00036029199999999817, 0.0003602220000000003, 0.00035777800000000304, 0.00035576400000000147, 0.00035987500000000255]</msg>
<status status="PASS" starttime="20201115 23:00:47.688" endtime="20201115 23:00:47.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.683" endtime="20201115 23:00:47.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.693" endtime="20201115 23:00:47.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.697" endtime="20201115 23:00:47.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.695" endtime="20201115 23:00:47.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.691" endtime="20201115 23:00:47.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.307" endtime="20201115 23:00:47.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.305" endtime="20201115 23:00:47.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.304" endtime="20201115 23:00:47.718"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.720" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.728" endtime="20201115 23:00:47.763"></status>
</kw>
<msg timestamp="20201115 23:00:47.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.727" endtime="20201115 23:00:47.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.765" endtime="20201115 23:00:47.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.767" endtime="20201115 23:00:47.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.724" endtime="20201115 23:00:47.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.722" endtime="20201115 23:00:47.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.776" endtime="20201115 23:00:48.063"></status>
</kw>
<msg timestamp="20201115 23:00:48.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023992778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024360333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.775" endtime="20201115 23:00:48.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023992778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024360333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.067" endtime="20201115 23:00:48.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.075" endtime="20201115 23:00:48.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.772" endtime="20201115 23:00:48.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.770" endtime="20201115 23:00:48.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.082" level="INFO">${RESULT} = [{'time': 0.024360333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036755500000000205, 'source_diff': 0.00036755500000000205}, {'time': 0.024725597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:48.079" endtime="20201115 23:00:48.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.095" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:48.083" endtime="20201115 23:00:48.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.100" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.099" endtime="20201115 23:00:48.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.103" level="INFO">VALUE: [0.00036755500000000205, 0.00035687499999999955, 0.0003608330000000014, 0.0003589030000000007, 0.0003603749999999996, 0.00035961099999999926, 0.0003606809999999981, 0.0003579999999999972, 0.000359360999999999, 0.00035775000000000043, 0.000358667, 0.00036102799999999935, 0.0003595280000000013, 0.00035711100000000023, 0.0003589030000000007, 0.0003563889999999986, 0.000358263000000001, 0.0003573060000000017, 0.00036058299999999766, 0.0003554999999999982, 0.00035479100000000013, 0.0003584860000000051, 0.0003604999999999997, 0.00035719499999999765, 0.0003549860000000016, 0.00035572200000000276, 0.0003572920000000021, 0.00035847199999999857, 0.0003593889999999947, 0.0003592769999999981, 0.00035572200000000276, 0.0003588469999999955, 0.00035711100000000023, 0.0003612770000000001, 0.000359555999999997, 0.0003606529999999955, 0.00036024999999999946, 0.00035970800000000025, 0.0003587359999999984, 0.000360458000000001, 0.0003568190000000013, 0.00035750000000000365, 0.00036026399999999903, 0.00035676400000000247, 0.0003609870000000001, 0.00035773600000000433, 0.00035620799999999675, 0.0003580280000000033, 0.00035615299999999794, 0.0003583610000000015]</msg>
<status status="PASS" starttime="20201115 23:00:48.101" endtime="20201115 23:00:48.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.096" endtime="20201115 23:00:48.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.106" endtime="20201115 23:00:48.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.109" endtime="20201115 23:00:48.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.108" endtime="20201115 23:00:48.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.104" endtime="20201115 23:00:48.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.721" endtime="20201115 23:00:48.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.719" endtime="20201115 23:00:48.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.718" endtime="20201115 23:00:48.130"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.133" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.141" endtime="20201115 23:00:48.176"></status>
</kw>
<msg timestamp="20201115 23:00:48.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.140" endtime="20201115 23:00:48.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.178" endtime="20201115 23:00:48.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.180" endtime="20201115 23:00:48.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.137" endtime="20201115 23:00:48.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.135" endtime="20201115 23:00:48.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.189" endtime="20201115 23:00:48.476"></status>
</kw>
<msg timestamp="20201115 23:00:48.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023250625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023606097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.188" endtime="20201115 23:00:48.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023250625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023606097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.481" endtime="20201115 23:00:48.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.489" endtime="20201115 23:00:48.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.185" endtime="20201115 23:00:48.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.183" endtime="20201115 23:00:48.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.495" level="INFO">${RESULT} = [{'time': 0.023606097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035547199999999904, 'source_diff': 0.00035547199999999904}, {'time': 0.023971472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:48.492" endtime="20201115 23:00:48.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.509" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:48.497" endtime="20201115 23:00:48.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.514" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.512" endtime="20201115 23:00:48.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.516" level="INFO">VALUE: [0.00035547199999999904, 0.00035633300000000034, 0.000358861000000002, 0.00036088899999999965, 0.00035912499999999833, 0.00035487499999999755, 0.0003615549999999995, 0.00036093100000000183, 0.00035809700000000166, 0.0003566389999999989, 0.0003612779999999996, 0.00035573699999999833, 0.00035547199999999904, 0.0003610550000000025, 0.00035554200000000036, 0.00035827800000000007, 0.000356763999999999, 0.00035976399999999853, 0.0003580000000000007, 0.000356569000000001, 0.0003608750000000001, 0.0003588340000000023, 0.0003556530000000044, 0.00035883300000000284, 0.0003584860000000051, 0.00036083300000000484, 0.0003565140000000022, 0.00035616599999999804, 0.0003564720000000035, 0.00035654200000000136, 0.00035604099999999445, 0.00035777800000000304, 0.0003569579999999975, 0.00035897199999999907, 0.00035970800000000025, 0.00035618000000000455, 0.00036145799999999506, 0.00035759700000000116, 0.000356166000000005, 0.00035544400000000337, 0.00035600000000000215, 0.0003613339999999979, 0.00035861100000000173, 0.0003597920000000046, 0.0003560690000000005, 0.0003591250000000018, 0.0003571389999999994, 0.0003565140000000022, 0.00035637499999999905, 0.0003567920000000016]</msg>
<status status="PASS" starttime="20201115 23:00:48.515" endtime="20201115 23:00:48.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.510" endtime="20201115 23:00:48.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.519" endtime="20201115 23:00:48.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.523" endtime="20201115 23:00:48.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.521" endtime="20201115 23:00:48.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.518" endtime="20201115 23:00:48.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.134" endtime="20201115 23:00:48.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.132" endtime="20201115 23:00:48.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.131" endtime="20201115 23:00:48.544"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.546" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.554" endtime="20201115 23:00:48.597"></status>
</kw>
<msg timestamp="20201115 23:00:48.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.553" endtime="20201115 23:00:48.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.599" endtime="20201115 23:00:48.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.601" endtime="20201115 23:00:48.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.550" endtime="20201115 23:00:48.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.548" endtime="20201115 23:00:48.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.610" endtime="20201115 23:00:48.897"></status>
</kw>
<msg timestamp="20201115 23:00:48.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026863069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027221708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.609" endtime="20201115 23:00:48.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026863069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027221708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.901" endtime="20201115 23:00:48.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.910" endtime="20201115 23:00:48.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.606" endtime="20201115 23:00:48.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.604" endtime="20201115 23:00:48.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.916" level="INFO">${RESULT} = [{'time': 0.027221708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003586390000000009, 'source_diff': 0.0003586390000000009}, {'time': 0.027587153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:48.913" endtime="20201115 23:00:48.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.931" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:48.917" endtime="20201115 23:00:48.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.936" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.935" endtime="20201115 23:00:48.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.938" level="INFO">VALUE: [0.0003586390000000009, 0.00035865300000000044, 0.00035650000000000265, 0.0003601390000000024, 0.0003578749999999971, 0.00035976299999999906, 0.00035724999999999993, 0.00035981899999999734, 0.0003558889999999981, 0.0003571249999999998, 0.00035941700000000076, 0.00035837500000000105, 0.00036066600000000254, 0.0003551249999999978, 0.00035954200000000436, 0.00035526400000000097, 0.0003612360000000009, 0.00035705500000000195, 0.00036126400000000003, 0.0003605419999999984, 0.0003580419999999959, 0.0003580129999999973, 0.000356861, 0.0003602220000000003, 0.00035787500000000055, 0.0003588329999999959, 0.0003580140000000037, 0.0003557080000000032, 0.00035947199999999957, 0.0003566119999999992, 0.0003567359999999964, 0.0003549579999999955, 0.0003604030000000022, 0.00035537499999999805, 0.0003565280000000018, 0.0003595549999999975, 0.00036048600000000014, 0.0003589030000000007, 0.0003565700000000005, 0.00035873600000000533, 0.000356861, 0.0003554300000000038, 0.0003588050000000037, 0.0003553469999999989, 0.0003610969999999977, 0.00035752799999999585, 0.00035731899999999484, 0.0003580830000000021, 0.00035495800000000244, 0.00035869499999999915]</msg>
<status status="PASS" starttime="20201115 23:00:48.937" endtime="20201115 23:00:48.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.932" endtime="20201115 23:00:48.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.941" endtime="20201115 23:00:48.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.945" endtime="20201115 23:00:48.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.943" endtime="20201115 23:00:48.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.940" endtime="20201115 23:00:48.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.547" endtime="20201115 23:00:48.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.545" endtime="20201115 23:00:48.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.544" endtime="20201115 23:00:48.966"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.968" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.977" endtime="20201115 23:00:49.014"></status>
</kw>
<msg timestamp="20201115 23:00:49.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.975" endtime="20201115 23:00:49.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.016" endtime="20201115 23:00:49.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.018" endtime="20201115 23:00:49.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.972" endtime="20201115 23:00:49.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.970" endtime="20201115 23:00:49.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.028" endtime="20201115 23:00:49.314"></status>
</kw>
<msg timestamp="20201115 23:00:49.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026771944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027148417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.026" endtime="20201115 23:00:49.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026771944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027148417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.318" endtime="20201115 23:00:49.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.326" endtime="20201115 23:00:49.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.023" endtime="20201115 23:00:49.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.022" endtime="20201115 23:00:49.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.333" level="INFO">${RESULT} = [{'time': 0.027148417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037647300000000217, 'source_diff': 0.00037647300000000217}, {'time': 0.027513694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:49.329" endtime="20201115 23:00:49.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.346" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:49.334" endtime="20201115 23:00:49.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.351" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.350" endtime="20201115 23:00:49.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.354" level="INFO">VALUE: [0.00037647300000000217, 0.000357263, 0.0003583470000000019, 0.000356569000000001, 0.0003598749999999991, 0.00035841699999999976, 0.0003568470000000004, 0.0003605970000000007, 0.0003574860000000006, 0.00035875000000000143, 0.00035540300000000066, 0.0003580419999999994, 0.00035673599999999986, 0.0003610139999999998, 0.0003590280000000043, 0.00035643099999999733, 0.000360346999999997, 0.0003548330000000058, 0.00036130499999999927, 0.00035908299999999616, 0.0003550410000000004, 0.0003603610000000035, 0.00035911100000000223, 0.0003582779999999966, 0.0003561389999999984, 0.0003551940000000031, 0.00035523600000000183, 0.000358861000000002, 0.00035476400000000047, 0.0003611390000000034, 0.00036097200000000107, 0.0003558889999999981, 0.00035826400000000397, 0.0003561389999999984, 0.0003560140000000017, 0.0003578329999999949, 0.0003563609999999995, 0.0003594449999999999, 0.0003579579999999985, 0.00036126400000000003, 0.00035615299999999794, 0.0003601390000000024, 0.0003559029999999977, 0.0003604030000000022, 0.00035715199999999947, 0.0003586109999999948, 0.000356861, 0.0003577500000000039, 0.0003558050000000007, 0.0003554720000000025]</msg>
<status status="PASS" starttime="20201115 23:00:49.352" endtime="20201115 23:00:49.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.347" endtime="20201115 23:00:49.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.357" endtime="20201115 23:00:49.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.360" endtime="20201115 23:00:49.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.359" endtime="20201115 23:00:49.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.355" endtime="20201115 23:00:49.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.969" endtime="20201115 23:00:49.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.967" endtime="20201115 23:00:49.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.966" endtime="20201115 23:00:49.382"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.384" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.392" endtime="20201115 23:00:49.426"></status>
</kw>
<msg timestamp="20201115 23:00:49.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.391" endtime="20201115 23:00:49.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.428" endtime="20201115 23:00:49.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.430" endtime="20201115 23:00:49.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.388" endtime="20201115 23:00:49.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.386" endtime="20201115 23:00:49.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.440" endtime="20201115 23:00:49.726"></status>
</kw>
<msg timestamp="20201115 23:00:49.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231385, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023506028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:49.438" endtime="20201115 23:00:49.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231385, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023506028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:49.730" endtime="20201115 23:00:49.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.738" endtime="20201115 23:00:49.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.436" endtime="20201115 23:00:49.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.434" endtime="20201115 23:00:49.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.745" level="INFO">${RESULT} = [{'time': 0.023506028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003675280000000024, 'source_diff': 0.0003675280000000024}, {'time': 0.023871236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:49.742" endtime="20201115 23:00:49.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.758" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:49.746" endtime="20201115 23:00:49.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.763" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.762" endtime="20201115 23:00:49.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.765" level="INFO">VALUE: [0.0003675280000000024, 0.0003591670000000005, 0.0003587089999999987, 0.00035902799999999735, 0.00035984699999999994, 0.00036074999999999996, 0.00036011099999999976, 0.0003553889999999976, 0.0003600550000000015, 0.00035915300000000094, 0.0003581799999999996, 0.00035937500000000205, 0.00036031899999999784, 0.0003548890000000006, 0.0003579440000000024, 0.00036070800000000125, 0.0003610419999999989, 0.0003610139999999998, 0.00035697200000000054, 0.00036066699999999854, 0.0003588189999999998, 0.0003593060000000002, 0.00035475000000000437, 0.00035504199999999986, 0.00035990299999999475, 0.00035948599999999914, 0.00036009800000000314, 0.00035554200000000036, 0.00035476400000000047, 0.0003555140000000012, 0.00035824999999999746, 0.00036081899999999834, 0.00035629100000000163, 0.00035909700000000266, 0.0003590280000000043, 0.0003612079999999948, 0.0003607220000000008, 0.0003558889999999981, 0.00035874999999999796, 0.0003589579999999995, 0.00035531999999999925, 0.00035777700000000356, 0.0003548059999999992, 0.0003571669999999985, 0.00035904200000000386, 0.0003548610000000049, 0.00035981899999999734, 0.0003573889999999996, 0.0003607220000000008, 0.00035543099999999633]</msg>
<status status="PASS" starttime="20201115 23:00:49.764" endtime="20201115 23:00:49.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.759" endtime="20201115 23:00:49.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.769" endtime="20201115 23:00:49.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.772" endtime="20201115 23:00:49.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.770" endtime="20201115 23:00:49.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.767" endtime="20201115 23:00:49.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.385" endtime="20201115 23:00:49.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.383" endtime="20201115 23:00:49.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.382" endtime="20201115 23:00:49.793"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.796" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.804" endtime="20201115 23:00:49.839"></status>
</kw>
<msg timestamp="20201115 23:00:49.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.803" endtime="20201115 23:00:49.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.841" endtime="20201115 23:00:49.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.843" endtime="20201115 23:00:49.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.800" endtime="20201115 23:00:49.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.798" endtime="20201115 23:00:49.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.852" endtime="20201115 23:00:50.139"></status>
</kw>
<msg timestamp="20201115 23:00:50.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023856903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.851" endtime="20201115 23:00:50.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023856903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.143" endtime="20201115 23:00:50.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.151" endtime="20201115 23:00:50.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.848" endtime="20201115 23:00:50.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.846" endtime="20201115 23:00:50.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.157" level="INFO">${RESULT} = [{'time': 0.023856903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036272199999999935, 'source_diff': 0.00036272199999999935}, {'time': 0.024222125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:50.154" endtime="20201115 23:00:50.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.170" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:50.158" endtime="20201115 23:00:50.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.175" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.174" endtime="20201115 23:00:50.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.177" level="INFO">VALUE: [0.00036272199999999935, 0.0003565830000000006, 0.00035609700000000313, 0.0003568470000000004, 0.0003560270000000018, 0.00035715299999999894, 0.0003608200000000013, 0.0003600139999999988, 0.0003570140000000027, 0.00035524999999999793, 0.00035852799999999685, 0.0003571249999999998, 0.00036029200000000164, 0.0003579579999999985, 0.00035577700000000156, 0.00035569400000000015, 0.00036024999999999946, 0.0003578890000000001, 0.00035490300000000016, 0.00035687499999999955, 0.0003553890000000011, 0.0003546249999999973, 0.0003581250000000008, 0.0003601390000000024, 0.0003606940000000017, 0.00036116600000000304, 0.0003589020000000012, 0.0003607909999999992, 0.0003559730000000025, 0.0003575689999999951, 0.00036125000000000046, 0.0003551939999999962, 0.0003572359999999969, 0.0003614169999999958, 0.00035586199999999846, 0.00036118099999999514, 0.00036065300000000244, 0.0003596810000000006, 0.00035609799999999914, 0.00035893000000000036, 0.000356958999999997, 0.00035659700000000016, 0.00035895800000000644, 0.00035743100000000527, 0.00035998599999999964, 0.0003556389999999979, 0.0003612230000000008, 0.00035797299999999754, 0.00035663800000000634, 0.00035537499999999805]</msg>
<status status="PASS" starttime="20201115 23:00:50.176" endtime="20201115 23:00:50.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.171" endtime="20201115 23:00:50.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.181" endtime="20201115 23:00:50.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.184" endtime="20201115 23:00:50.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.183" endtime="20201115 23:00:50.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.179" endtime="20201115 23:00:50.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.796" endtime="20201115 23:00:50.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.794" endtime="20201115 23:00:50.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.794" endtime="20201115 23:00:50.206"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.208" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.216" endtime="20201115 23:00:50.250"></status>
</kw>
<msg timestamp="20201115 23:00:50.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.215" endtime="20201115 23:00:50.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.252" endtime="20201115 23:00:50.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.254" endtime="20201115 23:00:50.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.212" endtime="20201115 23:00:50.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.210" endtime="20201115 23:00:50.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.263" endtime="20201115 23:00:50.550"></status>
</kw>
<msg timestamp="20201115 23:00:50.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023296361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023665306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.262" endtime="20201115 23:00:50.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023296361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023665306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.554" endtime="20201115 23:00:50.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.562" endtime="20201115 23:00:50.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.259" endtime="20201115 23:00:50.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.258" endtime="20201115 23:00:50.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.568" level="INFO">${RESULT} = [{'time': 0.023665306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000368944999999999, 'source_diff': 0.000368944999999999}, {'time': 0.024030639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:50.565" endtime="20201115 23:00:50.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.626" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:50.569" endtime="20201115 23:00:50.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.630" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.629" endtime="20201115 23:00:50.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.633" level="INFO">VALUE: [0.000368944999999999, 0.00035524999999999793, 0.0003561530000000014, 0.0003589160000000008, 0.00035855599999999946, 0.0003615140000000003, 0.0003564859999999996, 0.00035643000000000133, 0.0003575000000000002, 0.0003592640000000015, 0.0003573889999999996, 0.000358958999999999, 0.000355875000000002, 0.0003555699999999995, 0.0003557079999999997, 0.0003595969999999997, 0.00036061100000000026, 0.0003615000000000007, 0.00035533299999999934, 0.0003584449999999989, 0.00035679099999999866, 0.000358764000000001, 0.00035973600000000633, 0.00035711100000000023, 0.000356861, 0.00035487499999999755, 0.0003584860000000051, 0.0003570690000000015, 0.0003549999999999942, 0.00036009700000000366, 0.00035805500000000295, 0.000360861000000004, 0.000357070000000001, 0.00035558399999999907, 0.0003605269999999994, 0.0003586390000000009, 0.0003597920000000046, 0.0003568329999999939, 0.0003573050000000022, 0.00036040299999999525, 0.00035500000000000115, 0.0003576389999999999, 0.00035744399999999843, 0.0003605139999999993, 0.0003556530000000044, 0.0003612920000000061, 0.0003574589999999975, 0.00036065200000000297, 0.0003566809999999976, 0.0003592769999999981]</msg>
<status status="PASS" starttime="20201115 23:00:50.632" endtime="20201115 23:00:50.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.627" endtime="20201115 23:00:50.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.640" endtime="20201115 23:00:50.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.644" endtime="20201115 23:00:50.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.642" endtime="20201115 23:00:50.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.638" endtime="20201115 23:00:50.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.209" endtime="20201115 23:00:50.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.207" endtime="20201115 23:00:50.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.206" endtime="20201115 23:00:50.665"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.667" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.675" endtime="20201115 23:00:50.712"></status>
</kw>
<msg timestamp="20201115 23:00:50.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.674" endtime="20201115 23:00:50.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.714" endtime="20201115 23:00:50.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.716" endtime="20201115 23:00:50.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.671" endtime="20201115 23:00:50.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.669" endtime="20201115 23:00:50.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.725" endtime="20201115 23:00:51.011"></status>
</kw>
<msg timestamp="20201115 23:00:51.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026153125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026513833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.724" endtime="20201115 23:00:51.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026153125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026513833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.015" endtime="20201115 23:00:51.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.023" endtime="20201115 23:00:51.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.721" endtime="20201115 23:00:51.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.719" endtime="20201115 23:00:51.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.030" level="INFO">${RESULT} = [{'time': 0.026513833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036070800000000125, 'source_diff': 0.00036070800000000125}, {'time': 0.02687925, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:51.026" endtime="20201115 23:00:51.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.043" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:51.031" endtime="20201115 23:00:51.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.047" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.046" endtime="20201115 23:00:51.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.050" level="INFO">VALUE: [0.00036070800000000125, 0.00035486100000000145, 0.0003564729999999995, 0.00035661099999999973, 0.00035745800000000147, 0.00035773600000000086, 0.00035677799999999857, 0.00035641600000000176, 0.00036074999999999996, 0.00035729199999999864, 0.0003564159999999983, 0.00035959700000000316, 0.00035504199999999986, 0.000356167000000001, 0.0003582219999999983, 0.000360555999999998, 0.0003599030000000017, 0.00036108399999999763, 0.00036037500000000305, 0.0003608329999999979, 0.000357666999999999, 0.0003610419999999989, 0.00036015200000000247, 0.00035808399999999463, 0.0003607090000000007, 0.0003585139999999973, 0.00036013799999999596, 0.000358473000000005, 0.00036074999999999996, 0.00036011100000000323, 0.00035655500000000145, 0.00035572200000000276, 0.0003552359999999949, 0.00036074999999999996, 0.00035726399999999603, 0.0003577229999999973, 0.0003594999999999987, 0.0003607219999999939, 0.00035827800000000354, 0.00035948599999999914, 0.0003585969999999952, 0.00035493099999999583, 0.0003611810000000021, 0.0003602359999999999, 0.0003551669999999965, 0.0003600139999999988, 0.00036033300000000434, 0.00035509699999999866, 0.000358861000000002, 0.0003605969999999972]</msg>
<status status="PASS" starttime="20201115 23:00:51.049" endtime="20201115 23:00:51.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.044" endtime="20201115 23:00:51.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.054" endtime="20201115 23:00:51.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.057" endtime="20201115 23:00:51.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.055" endtime="20201115 23:00:51.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.052" endtime="20201115 23:00:51.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.668" endtime="20201115 23:00:51.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.666" endtime="20201115 23:00:51.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.665" endtime="20201115 23:00:51.078"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.081" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.090" endtime="20201115 23:00:51.126"></status>
</kw>
<msg timestamp="20201115 23:00:51.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.088" endtime="20201115 23:00:51.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.128" endtime="20201115 23:00:51.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.131" endtime="20201115 23:00:51.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.086" endtime="20201115 23:00:51.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.083" endtime="20201115 23:00:51.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.140" endtime="20201115 23:00:51.424"></status>
</kw>
<msg timestamp="20201115 23:00:51.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024519806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024904083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.138" endtime="20201115 23:00:51.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024519806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024904083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.429" endtime="20201115 23:00:51.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.437" endtime="20201115 23:00:51.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.136" endtime="20201115 23:00:51.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.134" endtime="20201115 23:00:51.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.443" level="INFO">${RESULT} = [{'time': 0.024904083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038427699999999884, 'source_diff': 0.00038427699999999884}, {'time': 0.025269417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:51.440" endtime="20201115 23:00:51.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.457" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:51.445" endtime="20201115 23:00:51.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.462" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.461" endtime="20201115 23:00:51.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.464" level="INFO">VALUE: [0.00038427699999999884, 0.00035672299999999976, 0.0003555699999999995, 0.00036059800000000017, 0.0003611809999999986, 0.00035540300000000066, 0.00035809700000000166, 0.00035765299999999944, 0.0003573470000000009, 0.00035984699999999994, 0.0003599869999999991, 0.00035647200000000004, 0.0003593329999999999, 0.0003599580000000005, 0.00035859799999999817, 0.000358360999999998, 0.0003597779999999981, 0.0003566670000000015, 0.00036131899999999537, 0.0003581939999999992, 0.0003564029999999982, 0.00035755600000000193, 0.00035894399999999993, 0.0003550140000000007, 0.00036136099999999755, 0.00035920799999999975, 0.0003600559999999975, 0.000356958999999997, 0.00036091700000000226, 0.00036113899999999644, 0.0003582920000000031, 0.00035795800000000544, 0.00035581999999999975, 0.00035609699999999966, 0.0003557219999999958, 0.0003573199999999943, 0.0003608890000000031, 0.000354860999999998, 0.0003579020000000002, 0.0003573889999999996, 0.00035836099999999455, 0.00035659799999999964, 0.0003576389999999999, 0.00036047200000000057, 0.00036136099999999755, 0.00035559699999999916, 0.00036134799999999745, 0.0003573889999999996, 0.000356569000000001, 0.0003609299999999954]</msg>
<status status="PASS" starttime="20201115 23:00:51.463" endtime="20201115 23:00:51.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.458" endtime="20201115 23:00:51.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.467" endtime="20201115 23:00:51.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.471" endtime="20201115 23:00:51.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.469" endtime="20201115 23:00:51.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.466" endtime="20201115 23:00:51.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.081" endtime="20201115 23:00:51.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.080" endtime="20201115 23:00:51.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.079" endtime="20201115 23:00:51.492"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.495" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.504" endtime="20201115 23:00:51.542"></status>
</kw>
<msg timestamp="20201115 23:00:51.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.502" endtime="20201115 23:00:51.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.543" endtime="20201115 23:00:51.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.546" endtime="20201115 23:00:51.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.499" endtime="20201115 23:00:51.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.497" endtime="20201115 23:00:51.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.555" endtime="20201115 23:00:51.841"></status>
</kw>
<msg timestamp="20201115 23:00:51.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027578306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027947042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.553" endtime="20201115 23:00:51.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027578306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027947042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.845" endtime="20201115 23:00:51.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.853" endtime="20201115 23:00:51.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.551" endtime="20201115 23:00:51.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.549" endtime="20201115 23:00:51.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.860" level="INFO">${RESULT} = [{'time': 0.027947042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000368735999999998, 'source_diff': 0.000368735999999998}, {'time': 0.028312292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:51.856" endtime="20201115 23:00:51.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.873" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:51.861" endtime="20201115 23:00:51.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.878" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.877" endtime="20201115 23:00:51.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.880" level="INFO">VALUE: [0.000368735999999998, 0.00036093099999999836, 0.00035756899999999855, 0.00035704200000000186, 0.00035633300000000034, 0.0003603200000000008, 0.0003589030000000007, 0.0003605970000000007, 0.00035909799999999867, 0.0003549309999999993, 0.00035842999999999986, 0.000354860999999998, 0.00035488900000000406, 0.0003607360000000004, 0.00035961100000000273, 0.0003587920000000036, 0.00036104200000000586, 0.00035829199999999617, 0.00036126400000000003, 0.00035943000000000086, 0.0003603610000000035, 0.00035633300000000034, 0.0003588329999999959, 0.000359861000000003, 0.0003564720000000035, 0.00036113899999999644, 0.00036043000000000186, 0.0003586809999999996, 0.00036111100000000423, 0.0003594589999999995, 0.0003579999999999972, 0.0003590419999999969, 0.0003596390000000019, 0.0003613199999999983, 0.0003549999999999942, 0.00035600000000000215, 0.0003553189999999998, 0.00035473600000000133, 0.00036043000000000186, 0.00035861100000000173, 0.0003563609999999995, 0.0003605280000000058, 0.0003553889999999976, 0.0003594030000000012, 0.00035766599999999954, 0.0003560690000000005, 0.0003565280000000018, 0.0003594999999999987, 0.0003558620000000054, 0.0003604030000000022]</msg>
<status status="PASS" starttime="20201115 23:00:51.879" endtime="20201115 23:00:51.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.874" endtime="20201115 23:00:51.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.883" endtime="20201115 23:00:51.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.887" endtime="20201115 23:00:51.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.885" endtime="20201115 23:00:51.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.882" endtime="20201115 23:00:51.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.495" endtime="20201115 23:00:51.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.493" endtime="20201115 23:00:51.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.493" endtime="20201115 23:00:51.908"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.910" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.919" endtime="20201115 23:00:51.953"></status>
</kw>
<msg timestamp="20201115 23:00:51.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.917" endtime="20201115 23:00:51.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.955" endtime="20201115 23:00:51.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.957" endtime="20201115 23:00:51.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.914" endtime="20201115 23:00:51.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.912" endtime="20201115 23:00:51.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.967" endtime="20201115 23:00:52.262"></status>
</kw>
<msg timestamp="20201115 23:00:52.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023774361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024148431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.965" endtime="20201115 23:00:52.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023774361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024148431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.271" endtime="20201115 23:00:52.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.290" endtime="20201115 23:00:52.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.962" endtime="20201115 23:00:52.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.961" endtime="20201115 23:00:52.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.304" level="INFO">${RESULT} = [{'time': 0.024148431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037407000000000065, 'source_diff': 0.00037407000000000065}, {'time': 0.024513653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:52.297" endtime="20201115 23:00:52.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.320" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:52.306" endtime="20201115 23:00:52.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.324" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.323" endtime="20201115 23:00:52.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.327" level="INFO">VALUE: [0.00037407000000000065, 0.0003594030000000012, 0.0003609580000000015, 0.00035847199999999857, 0.00036062499999999983, 0.00035573600000000233, 0.0003591940000000002, 0.00035513900000000084, 0.000356167000000001, 0.0003597779999999981, 0.00035977800000000157, 0.00035979100000000167, 0.000356875000000003, 0.00035658400000000007, 0.00035911100000000223, 0.00035595799999999997, 0.00035473599999999786, 0.0003596940000000007, 0.0003583890000000006, 0.0003556110000000022, 0.0003570549999999985, 0.00036076399999999953, 0.0003611670000000025, 0.00035616700000000445, 0.0003593889999999947, 0.00035816600000000004, 0.0003609299999999954, 0.0003564999999999957, 0.000357555999999995, 0.00035587499999999855, 0.0003596810000000006, 0.0003603889999999957, 0.00035611099999999923, 0.0003584860000000051, 0.0003557500000000019, 0.00036061199999999627, 0.00035865300000000044, 0.00035481999999999875, 0.00035993000000000136, 0.0003562500000000024, 0.0003558889999999981, 0.0003608339999999974, 0.00035490300000000363, 0.0003608329999999979, 0.00035479100000000013, 0.0003612909999999997, 0.00035533400000000576, 0.00035504199999999986, 0.0003561939999999972, 0.0003563469999999999]</msg>
<status status="PASS" starttime="20201115 23:00:52.326" endtime="20201115 23:00:52.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.321" endtime="20201115 23:00:52.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.330" endtime="20201115 23:00:52.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.334" endtime="20201115 23:00:52.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.332" endtime="20201115 23:00:52.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.328" endtime="20201115 23:00:52.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.911" endtime="20201115 23:00:52.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.909" endtime="20201115 23:00:52.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.908" endtime="20201115 23:00:52.355"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.357" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.365" endtime="20201115 23:00:52.400"></status>
</kw>
<msg timestamp="20201115 23:00:52.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.364" endtime="20201115 23:00:52.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.402" endtime="20201115 23:00:52.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.405" endtime="20201115 23:00:52.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.361" endtime="20201115 23:00:52.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.359" endtime="20201115 23:00:52.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.414" endtime="20201115 23:00:52.699"></status>
</kw>
<msg timestamp="20201115 23:00:52.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024169611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024538542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.412" endtime="20201115 23:00:52.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024169611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024538542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.704" endtime="20201115 23:00:52.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.712" endtime="20201115 23:00:52.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.410" endtime="20201115 23:00:52.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.408" endtime="20201115 23:00:52.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.718" level="INFO">${RESULT} = [{'time': 0.024538542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003689309999999994, 'source_diff': 0.0003689309999999994}, {'time': 0.024903667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:52.715" endtime="20201115 23:00:52.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.732" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:52.719" endtime="20201115 23:00:52.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.736" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.735" endtime="20201115 23:00:52.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.739" level="INFO">VALUE: [0.0003689309999999994, 0.00035645899999999994, 0.00036059800000000017, 0.0003600129999999993, 0.00035993100000000083, 0.00035476400000000047, 0.00036104099999999945, 0.0003599580000000005, 0.0003600550000000015, 0.0003553609999999985, 0.00036012499999999933, 0.0003580549999999995, 0.0003590000000000017, 0.0003569860000000001, 0.00035797200000000154, 0.0003551249999999978, 0.00035674999999999943, 0.0003579440000000024, 0.000355860999999999, 0.00035511099999999823, 0.0003611250000000038, 0.0003612909999999997, 0.0003603199999999973, 0.00035670799999999725, 0.000357861000000001, 0.0003570280000000023, 0.0003573190000000018, 0.00035509699999999866, 0.000358667, 0.00035604200000000086, 0.00035670799999999725, 0.0003575969999999942, 0.0003587219999999988, 0.00036080599999999824, 0.00035544400000000337, 0.0003554300000000038, 0.0003571389999999994, 0.00035490300000000363, 0.0003602220000000003, 0.00035936099999999555, 0.00036120800000000175, 0.00035824999999999746, 0.00035672200000000376, 0.00035776399999999653, 0.0003569999999999962, 0.0003568060000000012, 0.00036070800000000125, 0.0003554720000000025, 0.0003593889999999947, 0.0003589020000000012]</msg>
<status status="PASS" starttime="20201115 23:00:52.737" endtime="20201115 23:00:52.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.732" endtime="20201115 23:00:52.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.742" endtime="20201115 23:00:52.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.745" endtime="20201115 23:00:52.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.744" endtime="20201115 23:00:52.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.740" endtime="20201115 23:00:52.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.358" endtime="20201115 23:00:52.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.356" endtime="20201115 23:00:52.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.355" endtime="20201115 23:00:52.767"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.769" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.778" endtime="20201115 23:00:52.813"></status>
</kw>
<msg timestamp="20201115 23:00:52.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.776" endtime="20201115 23:00:52.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.814" endtime="20201115 23:00:52.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.817" endtime="20201115 23:00:52.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.774" endtime="20201115 23:00:52.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.771" endtime="20201115 23:00:52.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.826" endtime="20201115 23:00:53.112"></status>
</kw>
<msg timestamp="20201115 23:00:53.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024405583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024778903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.825" endtime="20201115 23:00:53.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024405583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024778903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.116" endtime="20201115 23:00:53.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.124" endtime="20201115 23:00:53.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.822" endtime="20201115 23:00:53.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.820" endtime="20201115 23:00:53.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.131" level="INFO">${RESULT} = [{'time': 0.024778903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003733199999999999, 'source_diff': 0.0003733199999999999}, {'time': 0.025144222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:53.128" endtime="20201115 23:00:53.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.144" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:53.132" endtime="20201115 23:00:53.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.149" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.148" endtime="20201115 23:00:53.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.152" level="INFO">VALUE: [0.0003733199999999999, 0.0003599030000000017, 0.0003579449999999984, 0.0003577220000000013, 0.00035576400000000147, 0.00035491699999999973, 0.0003588749999999981, 0.00035911100000000223, 0.00035736199999999996, 0.0003612220000000013, 0.00035811100000000123, 0.00035519399999999965, 0.0003560410000000014, 0.0003609029999999992, 0.0003551389999999974, 0.00035783300000000184, 0.0003553340000000023, 0.0003590969999999992, 0.00035629199999999764, 0.00035719499999999765, 0.00035688799999999965, 0.0003611670000000025, 0.00035834799999999445, 0.0003600139999999988, 0.0003578889999999932, 0.0003600139999999988, 0.0003607220000000008, 0.0003608749999999966, 0.0003610969999999977, 0.0003605689999999981, 0.00036033300000000434, 0.00035912499999999486, 0.00036002799999999835, 0.00035901300000000524, 0.0003577779999999961, 0.00035659700000000016, 0.00035554200000000036, 0.00035504199999999986, 0.00036097200000000107, 0.00035952799999999785, 0.0003571799999999986, 0.00036052799999999885, 0.0003596800000000011, 0.00036145799999999506, 0.0003569019999999992, 0.00035950000000000565, 0.00035676299999999606, 0.0003586939999999997, 0.00035692999999999836, 0.0003549029999999967]</msg>
<status status="PASS" starttime="20201115 23:00:53.150" endtime="20201115 23:00:53.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.145" endtime="20201115 23:00:53.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.155" endtime="20201115 23:00:53.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.159" endtime="20201115 23:00:53.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.157" endtime="20201115 23:00:53.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.153" endtime="20201115 23:00:53.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.770" endtime="20201115 23:00:53.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.768" endtime="20201115 23:00:53.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.767" endtime="20201115 23:00:53.180"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.182" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.191" endtime="20201115 23:00:53.234"></status>
</kw>
<msg timestamp="20201115 23:00:53.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.189" endtime="20201115 23:00:53.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.236" endtime="20201115 23:00:53.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.238" endtime="20201115 23:00:53.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.186" endtime="20201115 23:00:53.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.184" endtime="20201115 23:00:53.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.247" endtime="20201115 23:00:53.534"></status>
</kw>
<msg timestamp="20201115 23:00:53.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027960667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028344764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.246" endtime="20201115 23:00:53.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027960667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028344764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.538" endtime="20201115 23:00:53.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.546" endtime="20201115 23:00:53.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.243" endtime="20201115 23:00:53.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.242" endtime="20201115 23:00:53.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.553" level="INFO">${RESULT} = [{'time': 0.028344764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003840969999999999, 'source_diff': 0.0003840969999999999}, {'time': 0.028710056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:53.550" endtime="20201115 23:00:53.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.566" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:53.554" endtime="20201115 23:00:53.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.571" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.570" endtime="20201115 23:00:53.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.574" level="INFO">VALUE: [0.0003840969999999999, 0.0003610420000000024, 0.0003563469999999999, 0.0003572220000000008, 0.0003569019999999992, 0.00035559700000000263, 0.0003564310000000008, 0.0003600139999999988, 0.0003609159999999993, 0.00035500000000000115, 0.0003561950000000036, 0.00035565299999999744, 0.00035469499999999515, 0.00035950000000000565, 0.00035808400000000157, 0.0003600689999999976, 0.0003603329999999974, 0.000360458000000001, 0.0003588060000000032, 0.00035673600000000333, 0.0003611109999999973, 0.00035976399999999853, 0.0003587080000000062, 0.00035855600000000293, 0.00036065300000000244, 0.000356666999999998, 0.0003595830000000036, 0.00036036099999999655, 0.0003586380000000014, 0.00035879199999999667, 0.00036074999999999996, 0.0003608470000000044, 0.00035572200000000276, 0.0003613190000000058, 0.00035683300000000084, 0.00036044400000000143, 0.00036041700000000176, 0.00036037500000000305, 0.00035526400000000097, 0.00036012499999999587, 0.00035955500000000445, 0.0003571249999999998, 0.00035750000000000365, 0.0003598199999999968, 0.000360667000000002, 0.0003594030000000012, 0.0003602779999999986, 0.00035862499999999436, 0.00036080499999999877, 0.00035683300000000084]</msg>
<status status="PASS" starttime="20201115 23:00:53.572" endtime="20201115 23:00:53.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.567" endtime="20201115 23:00:53.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.577" endtime="20201115 23:00:53.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.581" endtime="20201115 23:00:53.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.579" endtime="20201115 23:00:53.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.576" endtime="20201115 23:00:53.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.183" endtime="20201115 23:00:53.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.181" endtime="20201115 23:00:53.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.180" endtime="20201115 23:00:53.602"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.604" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.613" endtime="20201115 23:00:53.651"></status>
</kw>
<msg timestamp="20201115 23:00:53.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.611" endtime="20201115 23:00:53.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.653" endtime="20201115 23:00:53.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.655" endtime="20201115 23:00:53.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.609" endtime="20201115 23:00:53.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.606" endtime="20201115 23:00:53.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.664" endtime="20201115 23:00:53.950"></status>
</kw>
<msg timestamp="20201115 23:00:53.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027995236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028378486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.663" endtime="20201115 23:00:53.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027995236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028378486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.954" endtime="20201115 23:00:53.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.962" endtime="20201115 23:00:53.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.660" endtime="20201115 23:00:53.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.659" endtime="20201115 23:00:53.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.969" level="INFO">${RESULT} = [{'time': 0.028378486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00038325000000000164, 'source_diff': 0.00038325000000000164}, {'time': 0.028743681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:53.965" endtime="20201115 23:00:53.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.983" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:53.970" endtime="20201115 23:00:53.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.988" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.987" endtime="20201115 23:00:53.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.991" level="INFO">VALUE: [0.00038325000000000164, 0.00036019500000000065, 0.00036031899999999784, 0.0003595139999999983, 0.00035779199999999914, 0.00035561099999999873, 0.0003612359999999974, 0.00035967999999999764, 0.00035848599999999814, 0.00035852799999999685, 0.00035965200000000197, 0.00035936099999999555, 0.00035820799999999875, 0.00036083300000000484, 0.0003592500000000054, 0.0003566950000000041, 0.0003583329999999954, 0.0003595689999999971, 0.0003548889999999971, 0.0003563609999999995, 0.0003612360000000009, 0.0003550140000000007, 0.00035706999999999406, 0.0003566799999999981, 0.0003548189999999993, 0.00035700000000000315, 0.0003603470000000039, 0.00036011100000000323, 0.000360346999999997, 0.00035572200000000276, 0.00035573600000000233, 0.00035891700000000026, 0.00035572300000000223, 0.0003588060000000032, 0.00035831899999999584, 0.00035709700000000066, 0.0003598329999999969, 0.0003608199999999978, 0.0003597089999999997, 0.00035815299999999994, 0.0003581939999999992, 0.0003587359999999984, 0.0003573050000000022, 0.0003578060000000022, 0.0003564029999999982, 0.0003572909999999957, 0.0003564029999999982, 0.0003595140000000052, 0.00035783300000000184, 0.0003595830000000036]</msg>
<status status="PASS" starttime="20201115 23:00:53.989" endtime="20201115 23:00:53.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.984" endtime="20201115 23:00:53.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.994" endtime="20201115 23:00:53.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.997" endtime="20201115 23:00:54.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.996" endtime="20201115 23:00:54.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.992" endtime="20201115 23:00:54.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.605" endtime="20201115 23:00:54.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.603" endtime="20201115 23:00:54.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.602" endtime="20201115 23:00:54.019"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.021" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.029" endtime="20201115 23:00:54.064"></status>
</kw>
<msg timestamp="20201115 23:00:54.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.028" endtime="20201115 23:00:54.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.066" endtime="20201115 23:00:54.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.068" endtime="20201115 23:00:54.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.025" endtime="20201115 23:00:54.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.023" endtime="20201115 23:00:54.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.077" endtime="20201115 23:00:54.364"></status>
</kw>
<msg timestamp="20201115 23:00:54.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023331639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023710361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.076" endtime="20201115 23:00:54.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023331639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023710361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.368" endtime="20201115 23:00:54.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.376" endtime="20201115 23:00:54.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.073" endtime="20201115 23:00:54.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.072" endtime="20201115 23:00:54.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.383" level="INFO">${RESULT} = [{'time': 0.023710361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000378721999999998, 'source_diff': 0.000378721999999998}, {'time': 0.02407575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:54.379" endtime="20201115 23:00:54.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:54.396" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:54.384" endtime="20201115 23:00:54.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.401" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:00:54.400" endtime="20201115 23:00:54.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.403" level="INFO">VALUE: [0.000378721999999998, 0.0003589579999999995, 0.000359360999999999, 0.0003556530000000009, 0.00035929200000000064, 0.00036083400000000085, 0.00035822300000000126, 0.0003554720000000025, 0.00036112500000000033, 0.00035522200000000226, 0.00036108399999999763, 0.00035865300000000044, 0.00035613900000000184, 0.0003589449999999994, 0.00036038899999999915, 0.0003609029999999992, 0.0003601810000000011, 0.00035563900000000134, 0.00035787500000000055, 0.00035601399999999825, 0.000360361, 0.00035656999999999703, 0.00035926399999999803, 0.0003570690000000015, 0.00035877800000000404, 0.00035637499999999905, 0.0003606669999999951, 0.0003584449999999989, 0.0003549300000000033, 0.00036106999999999806, 0.00036094400000000193, 0.0003605270000000063, 0.00035879199999999667, 0.0003609859999999937, 0.00035990299999999475, 0.00035511099999999823, 0.0003568469999999935, 0.00035866600000000054, 0.00035687499999999955, 0.00035859700000000216, 0.00036095899999999403, 0.00035648599999999614, 0.0003591390000000014, 0.0003566530000000054, 0.0003558190000000003, 0.00035852799999999685, 0.00035550000000000165, 0.00036111199999999677, 0.00035622200000000326, 0.00035595800000000344]</msg>
<status status="PASS" starttime="20201115 23:00:54.402" endtime="20201115 23:00:54.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.397" endtime="20201115 23:00:54.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.407" endtime="20201115 23:00:54.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.410" endtime="20201115 23:00:54.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.409" endtime="20201115 23:00:54.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.405" endtime="20201115 23:00:54.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.022" endtime="20201115 23:00:54.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.020" endtime="20201115 23:00:54.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.019" endtime="20201115 23:00:54.432"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.434" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.443" endtime="20201115 23:00:54.481"></status>
</kw>
<msg timestamp="20201115 23:00:54.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.441" endtime="20201115 23:00:54.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.483" endtime="20201115 23:00:54.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.485" endtime="20201115 23:00:54.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.438" endtime="20201115 23:00:54.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.436" endtime="20201115 23:00:54.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.495" endtime="20201115 23:00:54.780"></status>
</kw>
<msg timestamp="20201115 23:00:54.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0271595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027517486, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:54.493" endtime="20201115 23:00:54.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0271595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027517486, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:54.784" endtime="20201115 23:00:54.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.793" endtime="20201115 23:00:54.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.491" endtime="20201115 23:00:54.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.489" endtime="20201115 23:00:54.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.799" level="INFO">${RESULT} = [{'time': 0.027517486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003579860000000011, 'source_diff': 0.0003579860000000011}, {'time': 0.02788275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:54.796" endtime="20201115 23:00:54.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:54.813" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:54.800" endtime="20201115 23:00:54.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.817" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:00:54.816" endtime="20201115 23:00:54.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.820" level="INFO">VALUE: [0.0003579860000000011, 0.0003584030000000002, 0.0003612090000000012, 0.0003601940000000012, 0.0003603879999999997, 0.00035487499999999755, 0.00036093099999999836, 0.0003549869999999976, 0.0003605139999999993, 0.00035787500000000055, 0.00036048600000000014, 0.00035529199999999664, 0.0003547919999999996, 0.0003582219999999983, 0.00035770900000000466, 0.0003554029999999972, 0.0003604160000000023, 0.00035937500000000205, 0.00035811100000000123, 0.0003595139999999983, 0.0003550410000000004, 0.0003591670000000005, 0.00035637499999999905, 0.00035522200000000226, 0.0003613470000000049, 0.0003551249999999978, 0.00036106999999999806, 0.00036019500000000065, 0.0003575139999999963, 0.0003560140000000017, 0.00035858299999999566, 0.0003575549999999955, 0.00035608399999999957, 0.0003585419999999964, 0.00035702799999999535, 0.0003592089999999992, 0.00035533299999999934, 0.0003600830000000041, 0.00035698599999999664, 0.00035981899999999734, 0.00035523600000000183, 0.0003552370000000013, 0.0003608469999999975, 0.0003553200000000062, 0.0003567089999999967, 0.0003570830000000011, 0.00035542999999999686, 0.0003566799999999981, 0.00035698700000000305, 0.0003553610000000054]</msg>
<status status="PASS" starttime="20201115 23:00:54.818" endtime="20201115 23:00:54.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.814" endtime="20201115 23:00:54.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.823" endtime="20201115 23:00:54.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.826" endtime="20201115 23:00:54.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.825" endtime="20201115 23:00:54.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.821" endtime="20201115 23:00:54.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.435" endtime="20201115 23:00:54.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.433" endtime="20201115 23:00:54.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.432" endtime="20201115 23:00:54.848"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.850" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.858" endtime="20201115 23:00:54.892"></status>
</kw>
<msg timestamp="20201115 23:00:54.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.857" endtime="20201115 23:00:54.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.894" endtime="20201115 23:00:54.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.896" endtime="20201115 23:00:54.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.854" endtime="20201115 23:00:54.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.852" endtime="20201115 23:00:54.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.906" endtime="20201115 23:00:55.192"></status>
</kw>
<msg timestamp="20201115 23:00:55.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023141889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023519833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.904" endtime="20201115 23:00:55.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023141889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023519833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.196" endtime="20201115 23:00:55.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.205" endtime="20201115 23:00:55.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.901" endtime="20201115 23:00:55.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.900" endtime="20201115 23:00:55.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:55.211" level="INFO">${RESULT} = [{'time': 0.023519833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003779440000000016, 'source_diff': 0.0003779440000000016}, {'time': 0.023885306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:55.208" endtime="20201115 23:00:55.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.225" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:55.212" endtime="20201115 23:00:55.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.229" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.228" endtime="20201115 23:00:55.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.232" level="INFO">VALUE: [0.0003779440000000016, 0.0003552920000000001, 0.0003554029999999972, 0.00036098600000000064, 0.00035732000000000125, 0.0003567220000000003, 0.00035818100000000255, 0.0003587220000000023, 0.0003580279999999998, 0.0003593329999999999, 0.00035669400000000115, 0.0003579449999999984, 0.00035694500000000087, 0.00036044400000000143, 0.0003610139999999998, 0.00035683300000000084, 0.0003602359999999999, 0.00035844399999999943, 0.00035758400000000107, 0.0003563469999999999, 0.0003585419999999999, 0.00035669400000000115, 0.0003564999999999992, 0.0003585830000000026, 0.0003601109999999963, 0.00035711100000000023, 0.00036115300000000294, 0.000358569000000003, 0.0003605969999999972, 0.0003559300000000043, 0.0003563060000000007, 0.0003593749999999951, 0.0003607779999999991, 0.0003576250000000003, 0.0003551390000000043, 0.0003565280000000018, 0.0003563469999999999, 0.00036004099999999845, 0.0003610280000000063, 0.0003563889999999986, 0.0003581120000000007, 0.00035487499999999755, 0.0003601390000000024, 0.0003554860000000021, 0.00036079199999999867, 0.00035837500000000105, 0.0003585269999999974, 0.0003615140000000003, 0.0003600969999999967, 0.00035633300000000034]</msg>
<status status="PASS" starttime="20201115 23:00:55.230" endtime="20201115 23:00:55.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.226" endtime="20201115 23:00:55.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.235" endtime="20201115 23:00:55.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.238" endtime="20201115 23:00:55.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.237" endtime="20201115 23:00:55.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.233" endtime="20201115 23:00:55.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.851" endtime="20201115 23:00:55.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.849" endtime="20201115 23:00:55.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.848" endtime="20201115 23:00:55.260"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.262" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.270" endtime="20201115 23:00:55.309"></status>
</kw>
<msg timestamp="20201115 23:00:55.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.269" endtime="20201115 23:00:55.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.310" endtime="20201115 23:00:55.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.314" endtime="20201115 23:00:55.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.266" endtime="20201115 23:00:55.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.264" endtime="20201115 23:00:55.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.323" endtime="20201115 23:00:55.609"></status>
</kw>
<msg timestamp="20201115 23:00:55.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028146139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028516917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.321" endtime="20201115 23:00:55.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028146139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028516917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.613" endtime="20201115 23:00:55.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.622" endtime="20201115 23:00:55.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.319" endtime="20201115 23:00:55.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.317" endtime="20201115 23:00:55.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:55.628" level="INFO">${RESULT} = [{'time': 0.028516917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003707779999999987, 'source_diff': 0.0003707779999999987}, {'time': 0.028882111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:55.625" endtime="20201115 23:00:55.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.643" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:55.629" endtime="20201115 23:00:55.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.647" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.646" endtime="20201115 23:00:55.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.650" level="INFO">VALUE: [0.0003707779999999987, 0.0003568889999999991, 0.0003547079999999987, 0.0003613620000000005, 0.0003571389999999994, 0.00035927800000000107, 0.00035873700000000133, 0.0003560830000000001, 0.0003582220000000018, 0.00035605600000000043, 0.0003610139999999998, 0.00035583299999999984, 0.0003567779999999951, 0.00035815299999999994, 0.0003565140000000022, 0.0003583890000000006, 0.0003589999999999982, 0.00035998599999999964, 0.0003551799999999966, 0.00035908400000000257, 0.00035969500000000015, 0.0003555970000000061, 0.00035472200000000176, 0.0003568060000000012, 0.00035927800000000454, 0.0003569029999999987, 0.00036000000000000615, 0.0003567500000000029, 0.0003550410000000004, 0.0003556530000000044, 0.0003597219999999998, 0.0003588190000000033, 0.0003564029999999982, 0.0003561249999999988, 0.00035983300000000384, 0.0003548339999999983, 0.0003605139999999993, 0.0003561950000000036, 0.0003597769999999986, 0.00035966600000000154, 0.00035794500000000534, 0.00035659700000000016, 0.000360152999999995, 0.000359054999999997, 0.00035611099999999923, 0.0003584030000000002, 0.00035495800000000244, 0.0003576389999999999, 0.00036032000000000425, 0.0003574019999999997]</msg>
<status status="PASS" starttime="20201115 23:00:55.648" endtime="20201115 23:00:55.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.644" endtime="20201115 23:00:55.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.653" endtime="20201115 23:00:55.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.656" endtime="20201115 23:00:55.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.655" endtime="20201115 23:00:55.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.651" endtime="20201115 23:00:55.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.263" endtime="20201115 23:00:55.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.261" endtime="20201115 23:00:55.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.260" endtime="20201115 23:00:55.678"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.680" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.693" endtime="20201115 23:00:55.734"></status>
</kw>
<msg timestamp="20201115 23:00:55.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.692" endtime="20201115 23:00:55.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.735" endtime="20201115 23:00:55.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.738" endtime="20201115 23:00:55.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.689" endtime="20201115 23:00:55.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.682" endtime="20201115 23:00:55.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.747" endtime="20201115 23:00:56.032"></status>
</kw>
<msg timestamp="20201115 23:00:56.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032286681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032658417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.745" endtime="20201115 23:00:56.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032286681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032658417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.036" endtime="20201115 23:00:56.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.045" endtime="20201115 23:00:56.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.743" endtime="20201115 23:00:56.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.741" endtime="20201115 23:00:56.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.051" level="INFO">${RESULT} = [{'time': 0.032658417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037173600000000445, 'source_diff': 0.00037173600000000445}, {'time': 0.033023736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:56.048" endtime="20201115 23:00:56.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.064" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:56.052" endtime="20201115 23:00:56.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.069" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.068" endtime="20201115 23:00:56.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.072" level="INFO">VALUE: [0.00037173600000000445, 0.0003564999999999957, 0.00035593100000000377, 0.0003588339999999954, 0.000357958999999998, 0.0003599580000000005, 0.00035583299999999984, 0.0003575140000000032, 0.00035969399999999374, 0.000354860999999998, 0.00036041700000000176, 0.00035794399999999893, 0.0003549860000000016, 0.0003589579999999995, 0.000358457999999999, 0.0003561950000000036, 0.000359959, 0.0003558339999999993, 0.0003567080000000042, 0.000360346999999997, 0.000355860999999999, 0.0003606390000000029, 0.0003578190000000023, 0.0003576250000000003, 0.000360054999999998, 0.0003587779999999971, 0.00035641699999999776, 0.0003599030000000017, 0.0003608480000000039, 0.0003608469999999975, 0.0003603339999999969, 0.00035988800000000265, 0.0003579159999999998, 0.0003610830000000051, 0.000357861000000001, 0.00035687499999999955, 0.00035754200000000236, 0.000356861, 0.0003553189999999998, 0.0003588469999999955, 0.0003555139999999943, 0.00036102799999999935, 0.00035956999999999656, 0.00035915199999999453, 0.00035711100000000023, 0.0003574029999999992, 0.000356958999999997, 0.00035976399999999853, 0.0003550270000000008, 0.0003588749999999946]</msg>
<status status="PASS" starttime="20201115 23:00:56.070" endtime="20201115 23:00:56.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.065" endtime="20201115 23:00:56.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.075" endtime="20201115 23:00:56.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.078" endtime="20201115 23:00:56.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.077" endtime="20201115 23:00:56.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.073" endtime="20201115 23:00:56.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.681" endtime="20201115 23:00:56.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.679" endtime="20201115 23:00:56.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.678" endtime="20201115 23:00:56.100"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.102" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.111" endtime="20201115 23:00:56.149"></status>
</kw>
<msg timestamp="20201115 23:00:56.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.109" endtime="20201115 23:00:56.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.150" endtime="20201115 23:00:56.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.153" endtime="20201115 23:00:56.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.106" endtime="20201115 23:00:56.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.104" endtime="20201115 23:00:56.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.162" endtime="20201115 23:00:56.447"></status>
</kw>
<msg timestamp="20201115 23:00:56.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026958153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027318417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.160" endtime="20201115 23:00:56.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026958153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027318417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.452" endtime="20201115 23:00:56.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.460" endtime="20201115 23:00:56.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.158" endtime="20201115 23:00:56.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.156" endtime="20201115 23:00:56.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.467" level="INFO">${RESULT} = [{'time': 0.027318417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003602640000000025, 'source_diff': 0.0003602640000000025}, {'time': 0.027683917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:56.463" endtime="20201115 23:00:56.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.480" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:56.468" endtime="20201115 23:00:56.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.485" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.484" endtime="20201115 23:00:56.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.487" level="INFO">VALUE: [0.0003602640000000025, 0.00035561099999999873, 0.000357070000000001, 0.00035777799999999957, 0.00036144499999999843, 0.0003578890000000001, 0.0003597219999999998, 0.00036061100000000026, 0.0003556119999999982, 0.0003591800000000006, 0.0003598060000000007, 0.00035729199999999864, 0.00036098600000000064, 0.0003595689999999971, 0.0003590269999999979, 0.0003556390000000048, 0.00035766599999999954, 0.00035844399999999943, 0.00036019500000000065, 0.000354860999999998, 0.0003556119999999982, 0.0003573190000000018, 0.0003587359999999984, 0.00035483299999999884, 0.00036080599999999824, 0.0003553469999999989, 0.00035893099999999983, 0.0003597219999999998, 0.0003600139999999988, 0.0003558469999999994, 0.00035779199999999567, 0.00035922200000000626, 0.00036076399999999953, 0.00035565299999999744, 0.0003613889999999967, 0.0003567769999999956, 0.0003599169999999943, 0.0003586250000000013, 0.00035711100000000023, 0.00035906999999999606, 0.00035879199999999667, 0.00035644500000000384, 0.0003550689999999995, 0.0003564029999999982, 0.00035642999999999786, 0.00035543100000000327, 0.00036033300000000434, 0.0003556389999999979, 0.0003564029999999982, 0.00035993000000000136]</msg>
<status status="PASS" starttime="20201115 23:00:56.486" endtime="20201115 23:00:56.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.481" endtime="20201115 23:00:56.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.491" endtime="20201115 23:00:56.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.494" endtime="20201115 23:00:56.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.493" endtime="20201115 23:00:56.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.489" endtime="20201115 23:00:56.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.103" endtime="20201115 23:00:56.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.101" endtime="20201115 23:00:56.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.100" endtime="20201115 23:00:56.516"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.518" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.526" endtime="20201115 23:00:56.560"></status>
</kw>
<msg timestamp="20201115 23:00:56.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.525" endtime="20201115 23:00:56.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.562" endtime="20201115 23:00:56.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.564" endtime="20201115 23:00:56.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.522" endtime="20201115 23:00:56.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.520" endtime="20201115 23:00:56.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.573" endtime="20201115 23:00:56.859"></status>
</kw>
<msg timestamp="20201115 23:00:56.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023307653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02366275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:56.572" endtime="20201115 23:00:56.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023307653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02366275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:56.863" endtime="20201115 23:00:56.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.871" endtime="20201115 23:00:56.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.569" endtime="20201115 23:00:56.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.567" endtime="20201115 23:00:56.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.878" level="INFO">${RESULT} = [{'time': 0.02366275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035509699999999866, 'source_diff': 0.00035509699999999866}, {'time': 0.024028069, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:56.874" endtime="20201115 23:00:56.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.891" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:56.879" endtime="20201115 23:00:56.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.895" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.894" endtime="20201115 23:00:56.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.898" level="INFO">VALUE: [0.00035509699999999866, 0.0003548049999999997, 0.00035906999999999953, 0.0003571939999999982, 0.0003560830000000001, 0.00035476400000000047, 0.00035637499999999905, 0.00035761100000000073, 0.00036011099999999976, 0.0003610840000000011, 0.0003571249999999998, 0.00035976399999999853, 0.00036011099999999976, 0.00035591700000000073, 0.000355473000000002, 0.00035627799999999807, 0.0003590420000000004, 0.0003593480000000024, 0.0003566530000000019, 0.00035691700000000173, 0.00035793099999999883, 0.00035720799999999775, 0.00036148600000000114, 0.0003568889999999991, 0.0003586250000000013, 0.00035963899999999493, 0.0003576799999999991, 0.00035879199999999667, 0.00035576400000000147, 0.00035990299999999475, 0.00035827800000000354, 0.0003567219999999968, 0.0003585140000000042, 0.00035859700000000216, 0.0003564019999999987, 0.00035615299999999794, 0.00035870799999999925, 0.00035819499999999865, 0.0003573889999999996, 0.0003566390000000058, 0.00035898599999999864, 0.0003559579999999965, 0.0003606390000000029, 0.0003587089999999987, 0.0003571389999999994, 0.0003604999999999997, 0.00035636199999999896, 0.00035915199999999453, 0.0003574589999999975, 0.00035832000000000225]</msg>
<status status="PASS" starttime="20201115 23:00:56.896" endtime="20201115 23:00:56.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.892" endtime="20201115 23:00:56.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.902" endtime="20201115 23:00:56.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.905" endtime="20201115 23:00:56.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.904" endtime="20201115 23:00:56.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.900" endtime="20201115 23:00:56.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.519" endtime="20201115 23:00:56.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.517" endtime="20201115 23:00:56.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.516" endtime="20201115 23:00:56.926"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.929" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.937" endtime="20201115 23:00:56.972"></status>
</kw>
<msg timestamp="20201115 23:00:56.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.935" endtime="20201115 23:00:56.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.973" endtime="20201115 23:00:56.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.976" endtime="20201115 23:00:56.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.933" endtime="20201115 23:00:56.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.931" endtime="20201115 23:00:56.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.985" endtime="20201115 23:00:57.271"></status>
</kw>
<msg timestamp="20201115 23:00:57.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024512778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024895681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.984" endtime="20201115 23:00:57.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024512778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024895681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.275" endtime="20201115 23:00:57.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.283" endtime="20201115 23:00:57.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.981" endtime="20201115 23:00:57.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.979" endtime="20201115 23:00:57.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.290" level="INFO">${RESULT} = [{'time': 0.024895681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003829030000000004, 'source_diff': 0.0003829030000000004}, {'time': 0.025260986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:57.287" endtime="20201115 23:00:57.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.305" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:57.291" endtime="20201115 23:00:57.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.309" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.308" endtime="20201115 23:00:57.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.312" level="INFO">VALUE: [0.0003829030000000004, 0.0003588609999999985, 0.0003586939999999997, 0.00035640300000000166, 0.0003560690000000005, 0.0003547500000000009, 0.0003587219999999988, 0.00035641700000000123, 0.00035695900000000044, 0.0003559999999999987, 0.0003577080000000017, 0.0003596800000000011, 0.00035879100000000066, 0.000354972999999998, 0.00035780499999999923, 0.00035559699999999916, 0.00035911100000000223, 0.00035829199999999964, 0.0003581809999999991, 0.00035988800000000265, 0.0003575140000000032, 0.00035743099999999833, 0.0003608329999999979, 0.00036015300000000194, 0.0003567219999999968, 0.0003594589999999995, 0.00036081899999999834, 0.0003594869999999986, 0.00035905600000000343, 0.00035959700000000316, 0.0003601109999999963, 0.00035547199999999557, 0.0003586250000000013, 0.00035720799999999775, 0.000359959, 0.0003574999999999967, 0.0003576809999999986, 0.0003561249999999988, 0.00035487499999999755, 0.0003579999999999972, 0.00035572300000000223, 0.0003558190000000003, 0.00035737500000000005, 0.000356763000000003, 0.0003561249999999988, 0.0003560140000000017, 0.00035854200000000336, 0.00035555599999999993, 0.0003586800000000001, 0.00035490300000000363]</msg>
<status status="PASS" starttime="20201115 23:00:57.310" endtime="20201115 23:00:57.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.306" endtime="20201115 23:00:57.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.315" endtime="20201115 23:00:57.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.318" endtime="20201115 23:00:57.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.317" endtime="20201115 23:00:57.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.313" endtime="20201115 23:00:57.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.929" endtime="20201115 23:00:57.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.928" endtime="20201115 23:00:57.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.927" endtime="20201115 23:00:57.340"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.342" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.350" endtime="20201115 23:00:57.385"></status>
</kw>
<msg timestamp="20201115 23:00:57.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.349" endtime="20201115 23:00:57.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.386" endtime="20201115 23:00:57.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.389" endtime="20201115 23:00:57.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.346" endtime="20201115 23:00:57.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.344" endtime="20201115 23:00:57.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.398" endtime="20201115 23:00:57.684"></status>
</kw>
<msg timestamp="20201115 23:00:57.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023130528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.396" endtime="20201115 23:00:57.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023130528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.689" endtime="20201115 23:00:57.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.697" endtime="20201115 23:00:57.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.394" endtime="20201115 23:00:57.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.392" endtime="20201115 23:00:57.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.704" level="INFO">${RESULT} = [{'time': 0.023514667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003841389999999986, 'source_diff': 0.0003841389999999986}, {'time': 0.023879861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:57.700" endtime="20201115 23:00:57.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.717" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:57.705" endtime="20201115 23:00:57.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.722" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.721" endtime="20201115 23:00:57.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.724" level="INFO">VALUE: [0.0003841389999999986, 0.00035469399999999915, 0.0003557219999999993, 0.000356958999999997, 0.00035729099999999916, 0.00035969500000000015, 0.0003554859999999986, 0.00035694399999999793, 0.0003583470000000019, 0.00035901400000000125, 0.0003569029999999987, 0.00035941700000000076, 0.00035962499999999883, 0.0003572080000000012, 0.00035766599999999954, 0.0003554859999999986, 0.00035745800000000147, 0.0003562080000000002, 0.0003559999999999987, 0.00035544500000000284, 0.00035833300000000234, 0.00035608399999999957, 0.00035920799999999975, 0.0003590969999999957, 0.00035623600000000283, 0.00035898599999999864, 0.00035559699999999916, 0.00035666700000000495, 0.00035911100000000223, 0.0003570139999999958, 0.00036047200000000057, 0.000360458000000001, 0.00035976399999999853, 0.00035902799999999735, 0.00035798599999999764, 0.0003611659999999961, 0.0003569300000000053, 0.0003585969999999952, 0.00035576399999999453, 0.00035495800000000244, 0.0003572229999999968, 0.00035509799999999814, 0.00035874999999999796, 0.0003551249999999978, 0.00035641699999999776, 0.0003581390000000004, 0.00035520900000000216, 0.00035897199999999907, 0.0003603199999999973, 0.0003590830000000031]</msg>
<status status="PASS" starttime="20201115 23:00:57.723" endtime="20201115 23:00:57.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.718" endtime="20201115 23:00:57.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.727" endtime="20201115 23:00:57.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.731" endtime="20201115 23:00:57.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.729" endtime="20201115 23:00:57.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.726" endtime="20201115 23:00:57.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.343" endtime="20201115 23:00:57.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.341" endtime="20201115 23:00:57.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.340" endtime="20201115 23:00:57.752"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.754" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.763" endtime="20201115 23:00:57.806"></status>
</kw>
<msg timestamp="20201115 23:00:57.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.761" endtime="20201115 23:00:57.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.808" endtime="20201115 23:00:57.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.810" endtime="20201115 23:00:57.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.759" endtime="20201115 23:00:57.813"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.757" endtime="20201115 23:00:57.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.820" endtime="20201115 23:00:58.106"></status>
</kw>
<msg timestamp="20201115 23:00:58.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027695944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028066056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.818" endtime="20201115 23:00:58.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027695944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028066056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.110" endtime="20201115 23:00:58.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.119" endtime="20201115 23:00:58.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.815" endtime="20201115 23:00:58.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.814" endtime="20201115 23:00:58.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.125" level="INFO">${RESULT} = [{'time': 0.028066056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037011199999999883, 'source_diff': 0.00037011199999999883}, {'time': 0.02843125, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:58.122" endtime="20201115 23:00:58.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.139" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:58.126" endtime="20201115 23:00:58.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.143" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.142" endtime="20201115 23:00:58.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.146" level="INFO">VALUE: [0.00037011199999999883, 0.0003578190000000023, 0.00036094400000000193, 0.00035597199999999954, 0.00035623600000000283, 0.00035573599999999886, 0.0003551800000000001, 0.00035645800000000047, 0.000354875000000001, 0.00036056999999999756, 0.0003547500000000009, 0.0003600559999999975, 0.0003577219999999978, 0.00035677800000000204, 0.0003595979999999957, 0.0003559029999999977, 0.000357070000000001, 0.0003562920000000011, 0.00035493100000000277, 0.00035509699999999866, 0.0003558479999999989, 0.0003558190000000003, 0.0003606109999999968, 0.0003548189999999993, 0.0003592359999999989, 0.000359569000000004, 0.0003608329999999979, 0.0003606659999999956, 0.0003591380000000019, 0.0003552779999999936, 0.00036043100000000133, 0.0003591800000000006, 0.00035744399999999843, 0.00036117999999999567, 0.0003600690000000045, 0.00035676399999999553, 0.00035615299999999794, 0.0003578890000000001, 0.00036058299999999766, 0.0003606810000000016, 0.0003592359999999989, 0.00036104099999999945, 0.0003581669999999995, 0.0003581109999999943, 0.0003608749999999966, 0.0003611390000000034, 0.00036018099999999414, 0.00035537499999999805, 0.00035494400000000287, 0.0003570140000000027]</msg>
<status status="PASS" starttime="20201115 23:00:58.144" endtime="20201115 23:00:58.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.139" endtime="20201115 23:00:58.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.149" endtime="20201115 23:00:58.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.152" endtime="20201115 23:00:58.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.151" endtime="20201115 23:00:58.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.147" endtime="20201115 23:00:58.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.755" endtime="20201115 23:00:58.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.753" endtime="20201115 23:00:58.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.752" endtime="20201115 23:00:58.173"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.176" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.184" endtime="20201115 23:00:58.218"></status>
</kw>
<msg timestamp="20201115 23:00:58.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.183" endtime="20201115 23:00:58.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.220" endtime="20201115 23:00:58.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.223" endtime="20201115 23:00:58.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.180" endtime="20201115 23:00:58.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.178" endtime="20201115 23:00:58.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.232" endtime="20201115 23:00:58.517"></status>
</kw>
<msg timestamp="20201115 23:00:58.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023285056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023659069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.230" endtime="20201115 23:00:58.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023285056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023659069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.521" endtime="20201115 23:00:58.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.529" endtime="20201115 23:00:58.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.228" endtime="20201115 23:00:58.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.226" endtime="20201115 23:00:58.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.536" level="INFO">${RESULT} = [{'time': 0.023659069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003740130000000029, 'source_diff': 0.0003740130000000029}, {'time': 0.0240245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:58.533" endtime="20201115 23:00:58.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.549" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:58.537" endtime="20201115 23:00:58.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.554" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.553" endtime="20201115 23:00:58.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.556" level="INFO">VALUE: [0.0003740130000000029, 0.00035815299999999994, 0.00036140200000000025, 0.00036005600000000096, 0.00036143099999999886, 0.00036007000000000053, 0.00035966699999999754, 0.00035665299999999844, 0.00035825000000000093, 0.0003599870000000026, 0.00035805500000000295, 0.0003591810000000001, 0.00035504199999999986, 0.0003562080000000002, 0.00035673599999999986, 0.0003596380000000024, 0.00035948599999999914, 0.00035697200000000054, 0.0003593329999999999, 0.0003590969999999992, 0.00035491600000000026, 0.0003590000000000017, 0.0003550140000000007, 0.00036019500000000065, 0.00035705500000000195, 0.00036024999999999946, 0.0003604590000000005, 0.000358457999999999, 0.00035483299999999884, 0.00035779100000000313, 0.0003576250000000003, 0.00035693099999999783, 0.00035719499999999765, 0.0003558469999999994, 0.0003589449999999994, 0.0003606120000000032, 0.0003597359999999994, 0.0003575830000000016, 0.00035743100000000527, 0.00035643099999999733, 0.0003598889999999952, 0.0003614439999999955, 0.0003559860000000026, 0.0003561950000000036, 0.00036097200000000107, 0.00035547299999999504, 0.00035769499999999815, 0.00036047199999999363, 0.00035687499999999955, 0.00035723600000000383]</msg>
<status status="PASS" starttime="20201115 23:00:58.555" endtime="20201115 23:00:58.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.550" endtime="20201115 23:00:58.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.560" endtime="20201115 23:00:58.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.563" endtime="20201115 23:00:58.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.562" endtime="20201115 23:00:58.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.558" endtime="20201115 23:00:58.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.176" endtime="20201115 23:00:58.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.175" endtime="20201115 23:00:58.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.174" endtime="20201115 23:00:58.584"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.587" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.597" endtime="20201115 23:00:58.636"></status>
</kw>
<msg timestamp="20201115 23:00:58.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.595" endtime="20201115 23:00:58.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.638" endtime="20201115 23:00:58.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.640" endtime="20201115 23:00:58.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.592" endtime="20201115 23:00:58.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.589" endtime="20201115 23:00:58.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.649" endtime="20201115 23:00:58.935"></status>
</kw>
<msg timestamp="20201115 23:00:58.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029413056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029771611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.648" endtime="20201115 23:00:58.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029413056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029771611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.939" endtime="20201115 23:00:58.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.948" endtime="20201115 23:00:58.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.645" endtime="20201115 23:00:58.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.643" endtime="20201115 23:00:58.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.954" level="INFO">${RESULT} = [{'time': 0.029771611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000358555, 'source_diff': 0.000358555}, {'time': 0.030136972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000360472000000...</msg>
<status status="PASS" starttime="20201115 23:00:58.951" endtime="20201115 23:00:58.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.968" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:58.955" endtime="20201115 23:00:58.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.973" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.972" endtime="20201115 23:00:58.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.975" level="INFO">VALUE: [0.000358555, 0.00036047200000000057, 0.0003608610000000005, 0.00035745800000000147, 0.00035988899999999865, 0.00036104099999999945, 0.0003582500000000044, 0.0003600419999999979, 0.0003548189999999993, 0.0003594020000000017, 0.00035826399999999703, 0.0003612779999999996, 0.0003589030000000007, 0.0003583890000000006, 0.00035500000000000115, 0.0003569860000000036, 0.0003557359999999954, 0.0003609299999999954, 0.0003548059999999992, 0.0003581809999999991, 0.0003551390000000043, 0.00036020800000000075, 0.0003569029999999987, 0.00036104099999999945, 0.0003558469999999994, 0.00035836099999999455, 0.00035909700000000266, 0.00036113899999999644, 0.0003563469999999999, 0.00036048600000000014, 0.00035980599999999724, 0.0003559170000000042, 0.00035854200000000336, 0.00036115199999999653, 0.00035943100000000033, 0.00035793100000000577, 0.00035809700000000166, 0.0003601940000000012, 0.0003603329999999974, 0.00036112499999999687, 0.00035593099999999683, 0.0003558050000000007, 0.00035826400000000397, 0.0003613329999999984, 0.0003594589999999995, 0.00035798700000000405, 0.0003601670000000015, 0.0003605270000000063, 0.00035774999999999696, 0.0003610139999999998]</msg>
<status status="PASS" starttime="20201115 23:00:58.974" endtime="20201115 23:00:58.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.969" endtime="20201115 23:00:58.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.979" endtime="20201115 23:00:58.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.982" endtime="20201115 23:00:59.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.981" endtime="20201115 23:00:59.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.977" endtime="20201115 23:00:59.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.588" endtime="20201115 23:00:59.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.586" endtime="20201115 23:00:59.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.585" endtime="20201115 23:00:59.004"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.006" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.015" endtime="20201115 23:00:59.054"></status>
</kw>
<msg timestamp="20201115 23:00:59.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.013" endtime="20201115 23:00:59.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.055" endtime="20201115 23:00:59.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.058" endtime="20201115 23:00:59.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.011" endtime="20201115 23:00:59.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.008" endtime="20201115 23:00:59.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.067" endtime="20201115 23:00:59.353"></status>
</kw>
<msg timestamp="20201115 23:00:59.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026859764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027214403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.065" endtime="20201115 23:00:59.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026859764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027214403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.357" endtime="20201115 23:00:59.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.365" endtime="20201115 23:00:59.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.063" endtime="20201115 23:00:59.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.061" endtime="20201115 23:00:59.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.372" level="INFO">${RESULT} = [{'time': 0.027214403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035463900000000034, 'source_diff': 0.00035463900000000034}, {'time': 0.027579681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:59.368" endtime="20201115 23:00:59.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.385" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:59.373" endtime="20201115 23:00:59.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.390" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.388" endtime="20201115 23:00:59.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.392" level="INFO">VALUE: [0.00035463900000000034, 0.000359667000000001, 0.00035580499999999723, 0.00035841699999999976, 0.0003610280000000028, 0.0003561250000000023, 0.0003577090000000012, 0.000358764000000001, 0.0003571800000000021, 0.00035554200000000036, 0.0003553189999999998, 0.00035607, 0.0003566799999999981, 0.0003585280000000038, 0.00035842999999999986, 0.00035479200000000655, 0.00035800000000000415, 0.00035800000000000415, 0.000357861000000001, 0.00035577700000000156, 0.00035815299999999994, 0.00035493100000000277, 0.00035836099999999455, 0.0003564170000000047, 0.0003569999999999962, 0.00035705500000000195, 0.0003575280000000028, 0.00035730599999999474, 0.00036074999999999996, 0.0003573329999999944, 0.00035874999999999796, 0.0003606390000000029, 0.00036126400000000003, 0.0003557500000000019, 0.00035847199999999857, 0.000360569000000005, 0.0003569029999999987, 0.0003548610000000049, 0.00035761100000000073, 0.0003604019999999958, 0.00035993100000000083, 0.0003548189999999993, 0.0003604999999999997, 0.0003575830000000016, 0.00035969500000000015, 0.00035715299999999894, 0.00036108399999999763, 0.00035941700000000076, 0.000355972000000003, 0.00035693100000000477]</msg>
<status status="PASS" starttime="20201115 23:00:59.391" endtime="20201115 23:00:59.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.386" endtime="20201115 23:00:59.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.396" endtime="20201115 23:00:59.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.399" endtime="20201115 23:00:59.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.398" endtime="20201115 23:00:59.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.394" endtime="20201115 23:00:59.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.007" endtime="20201115 23:00:59.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.005" endtime="20201115 23:00:59.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.004" endtime="20201115 23:00:59.421"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.423" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.433" endtime="20201115 23:00:59.469"></status>
</kw>
<msg timestamp="20201115 23:00:59.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.431" endtime="20201115 23:00:59.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.471" endtime="20201115 23:00:59.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.474" endtime="20201115 23:00:59.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.429" endtime="20201115 23:00:59.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.426" endtime="20201115 23:00:59.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.483" endtime="20201115 23:00:59.768"></status>
</kw>
<msg timestamp="20201115 23:00:59.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02749175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027863861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:59.481" endtime="20201115 23:00:59.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02749175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027863861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:59.772" endtime="20201115 23:00:59.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.780" endtime="20201115 23:00:59.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.479" endtime="20201115 23:00:59.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.477" endtime="20201115 23:00:59.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.787" level="INFO">${RESULT} = [{'time': 0.027863861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037211100000000136, 'source_diff': 0.00037211100000000136}, {'time': 0.028229181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:59.784" endtime="20201115 23:00:59.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.800" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:59.788" endtime="20201115 23:00:59.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.805" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.804" endtime="20201115 23:00:59.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.808" level="INFO">VALUE: [0.00037211100000000136, 0.00035783399999999785, 0.0003598330000000004, 0.0003593190000000003, 0.0003565419999999979, 0.0003602640000000025, 0.0003598200000000003, 0.0003606940000000017, 0.0003593329999999999, 0.0003607360000000004, 0.00035975000000000243, 0.00035620900000000316, 0.0003574999999999967, 0.0003558889999999981, 0.0003573199999999943, 0.00035787500000000055, 0.00035505600000000637, 0.00036120800000000175, 0.000354860999999998, 0.00035962499999999537, 0.0003574589999999975, 0.0003570830000000011, 0.00035550000000000165, 0.00035801300000000424, 0.00035811100000000123, 0.0003600689999999976, 0.00035797199999999807, 0.0003597359999999994, 0.00035809800000000114, 0.0003612360000000009, 0.0003603610000000035, 0.0003567080000000042, 0.0003577219999999978, 0.00035934799999999545, 0.00035865200000000097, 0.0003562359999999959, 0.00035593099999999683, 0.00035831899999999584, 0.0003564720000000035, 0.00035891700000000026, 0.0003555410000000009, 0.0003605689999999981, 0.0003563469999999999, 0.0003593889999999947, 0.00035870799999999925, 0.0003600830000000041, 0.00035841699999999976, 0.00035676400000000247, 0.0003563050000000012, 0.0003602220000000003]</msg>
<status status="PASS" starttime="20201115 23:00:59.806" endtime="20201115 23:00:59.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.801" endtime="20201115 23:00:59.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.811" endtime="20201115 23:00:59.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.814" endtime="20201115 23:00:59.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.813" endtime="20201115 23:00:59.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.809" endtime="20201115 23:00:59.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.424" endtime="20201115 23:00:59.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.422" endtime="20201115 23:00:59.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.421" endtime="20201115 23:00:59.836"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.838" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.846" endtime="20201115 23:00:59.881"></status>
</kw>
<msg timestamp="20201115 23:00:59.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.845" endtime="20201115 23:00:59.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.882" endtime="20201115 23:00:59.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.885" endtime="20201115 23:00:59.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.842" endtime="20201115 23:00:59.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.840" endtime="20201115 23:00:59.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.894" endtime="20201115 23:01:00.179"></status>
</kw>
<msg timestamp="20201115 23:01:00.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024214903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024571653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.893" endtime="20201115 23:01:00.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024214903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024571653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.184" endtime="20201115 23:01:00.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.192" endtime="20201115 23:01:00.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.890" endtime="20201115 23:01:00.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.888" endtime="20201115 23:01:00.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.198" level="INFO">${RESULT} = [{'time': 0.024571653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035674999999999943, 'source_diff': 0.00035674999999999943}, {'time': 0.024937, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:00.195" endtime="20201115 23:01:00.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.212" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:00.200" endtime="20201115 23:01:00.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.217" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.216" endtime="20201115 23:01:00.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.219" level="INFO">VALUE: [0.00035674999999999943, 0.0003600420000000014, 0.00035684699999999694, 0.0003585280000000003, 0.00035533299999999934, 0.0003572769999999996, 0.00035827800000000007, 0.00035537499999999805, 0.0003566249999999993, 0.00035902700000000135, 0.00035677799999999857, 0.0003561660000000015, 0.0003579579999999985, 0.00035769499999999815, 0.0003607220000000008, 0.00036111100000000076, 0.0003572920000000021, 0.0003594999999999987, 0.0003563469999999999, 0.00035624999999999893, 0.00035924999999999846, 0.0003579579999999985, 0.00035916600000000104, 0.0003574860000000041, 0.00035919499999999965, 0.00035980499999999777, 0.0003553609999999985, 0.00035880499999999677, 0.0003561669999999975, 0.0003554019999999977, 0.0003611390000000034, 0.0003564860000000031, 0.00035956999999999656, 0.00035554099999999395, 0.0003607360000000004, 0.00035877700000000456, 0.0003609020000000032, 0.00035541600000000423, 0.0003576939999999987, 0.00036138800000000415, 0.00035977800000000504, 0.0003606109999999968, 0.0003576250000000003, 0.00035812499999999386, 0.0003600830000000041, 0.0003582089999999982, 0.00035605500000000095, 0.00035977800000000504, 0.0003586800000000001, 0.0003608889999999962]</msg>
<status status="PASS" starttime="20201115 23:01:00.218" endtime="20201115 23:01:00.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.213" endtime="20201115 23:01:00.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.223" endtime="20201115 23:01:00.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.226" endtime="20201115 23:01:00.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.224" endtime="20201115 23:01:00.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.221" endtime="20201115 23:01:00.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.839" endtime="20201115 23:01:00.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.837" endtime="20201115 23:01:00.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.836" endtime="20201115 23:01:00.247"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.250" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.258" endtime="20201115 23:01:00.294"></status>
</kw>
<msg timestamp="20201115 23:01:00.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.256" endtime="20201115 23:01:00.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.295" endtime="20201115 23:01:00.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.298" endtime="20201115 23:01:00.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.254" endtime="20201115 23:01:00.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.252" endtime="20201115 23:01:00.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.307" endtime="20201115 23:01:00.593"></status>
</kw>
<msg timestamp="20201115 23:01:00.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02450225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024881944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:00.306" endtime="20201115 23:01:00.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02450225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024881944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:00.598" endtime="20201115 23:01:00.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.606" endtime="20201115 23:01:00.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.303" endtime="20201115 23:01:00.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.301" endtime="20201115 23:01:00.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.613" level="INFO">${RESULT} = [{'time': 0.024881944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037969399999999986, 'source_diff': 0.00037969399999999986}, {'time': 0.025247417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:00.610" endtime="20201115 23:01:00.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.627" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:00.614" endtime="20201115 23:01:00.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.632" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.631" endtime="20201115 23:01:00.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.634" level="INFO">VALUE: [0.00037969399999999986, 0.0003551950000000026, 0.00036076399999999953, 0.00035911099999999876, 0.00035837500000000105, 0.0003569999999999997, 0.0003589579999999995, 0.0003551530000000004, 0.00035519399999999965, 0.0003553609999999985, 0.00035825000000000093, 0.0003590829999999996, 0.00035815200000000047, 0.0003583890000000006, 0.00035673599999999986, 0.0003566530000000019, 0.00035579099999999766, 0.0003578189999999988, 0.0003576519999999965, 0.0003590969999999957, 0.0003596250000000023, 0.00035936099999999555, 0.00035881899999999634, 0.0003550689999999995, 0.0003609859999999937, 0.00036076300000000006, 0.000355473000000002, 0.000354972000000002, 0.00035654200000000136, 0.00035915300000000094, 0.00035744399999999843, 0.0003565139999999953, 0.00035902799999999735, 0.0003606810000000016, 0.0003584030000000002, 0.00035841699999999976, 0.00035800000000000415, 0.0003594999999999987, 0.00035515299999999694, 0.00035815299999999994, 0.0003592779999999976, 0.0003576250000000003, 0.000358861000000002, 0.00035981899999999734, 0.00036043100000000133, 0.0003565269999999954, 0.00036052799999999885, 0.00035604200000000086, 0.0003589020000000012, 0.0003600280000000053]</msg>
<status status="PASS" starttime="20201115 23:01:00.633" endtime="20201115 23:01:00.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.628" endtime="20201115 23:01:00.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.637" endtime="20201115 23:01:00.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.641" endtime="20201115 23:01:00.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.639" endtime="20201115 23:01:00.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.636" endtime="20201115 23:01:00.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.250" endtime="20201115 23:01:00.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.249" endtime="20201115 23:01:00.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.248" endtime="20201115 23:01:00.662"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.665" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.673" endtime="20201115 23:01:00.710"></status>
</kw>
<msg timestamp="20201115 23:01:00.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.671" endtime="20201115 23:01:00.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.712" endtime="20201115 23:01:00.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.715" endtime="20201115 23:01:00.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.669" endtime="20201115 23:01:00.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.667" endtime="20201115 23:01:00.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.729" endtime="20201115 23:01:01.016"></status>
</kw>
<msg timestamp="20201115 23:01:01.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026495556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026871, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:00.722" endtime="20201115 23:01:01.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026495556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026871, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:01.020" endtime="20201115 23:01:01.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.028" endtime="20201115 23:01:01.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.720" endtime="20201115 23:01:01.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.718" endtime="20201115 23:01:01.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.034" level="INFO">${RESULT} = [{'time': 0.026871, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003754439999999991, 'source_diff': 0.0003754439999999991}, {'time': 0.027236167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:01.031" endtime="20201115 23:01:01.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.049" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:01.035" endtime="20201115 23:01:01.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.055" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.053" endtime="20201115 23:01:01.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.058" level="INFO">VALUE: [0.0003754439999999991, 0.0003547089999999982, 0.0003593470000000029, 0.0003565140000000022, 0.00035997299999999954, 0.00036057000000000103, 0.0003604029999999987, 0.0003583189999999993, 0.0003600000000000027, 0.00035815299999999994, 0.0003573610000000005, 0.0003598200000000003, 0.0003588480000000019, 0.00035880499999999677, 0.0003571249999999998, 0.0003589030000000007, 0.0003599450000000004, 0.00035870799999999925, 0.0003561379999999989, 0.0003554300000000038, 0.0003564159999999983, 0.0003596810000000006, 0.0003607360000000004, 0.00036012499999999587, 0.00035780599999999524, 0.00035616599999999804, 0.0003610139999999998, 0.000356181000000004, 0.00035804099999999645, 0.00035687499999999955, 0.00035561100000000567, 0.0003565830000000006, 0.00035644500000000384, 0.00035711100000000023, 0.0003599999999999992, 0.00035607, 0.00035954099999999795, 0.0003609030000000027, 0.0003579170000000062, 0.0003549300000000033, 0.000356861, 0.00036052799999999885, 0.0003591670000000005, 0.0003555410000000009, 0.0003566389999999989, 0.00035607, 0.0003599999999999992, 0.0003610139999999998, 0.00035676399999999553, 0.000356555999999994]</msg>
<status status="PASS" starttime="20201115 23:01:01.056" endtime="20201115 23:01:01.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.050" endtime="20201115 23:01:01.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.063" endtime="20201115 23:01:01.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.067" endtime="20201115 23:01:01.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.065" endtime="20201115 23:01:01.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.060" endtime="20201115 23:01:01.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.665" endtime="20201115 23:01:01.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.663" endtime="20201115 23:01:01.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.663" endtime="20201115 23:01:01.089"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.092" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.103" endtime="20201115 23:01:01.137"></status>
</kw>
<msg timestamp="20201115 23:01:01.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.101" endtime="20201115 23:01:01.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.139" endtime="20201115 23:01:01.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.142" endtime="20201115 23:01:01.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.098" endtime="20201115 23:01:01.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.095" endtime="20201115 23:01:01.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.151" endtime="20201115 23:01:01.436"></status>
</kw>
<msg timestamp="20201115 23:01:01.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026958722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027314597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.149" endtime="20201115 23:01:01.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026958722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027314597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.440" endtime="20201115 23:01:01.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.449" endtime="20201115 23:01:01.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.147" endtime="20201115 23:01:01.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.145" endtime="20201115 23:01:01.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.455" level="INFO">${RESULT} = [{'time': 0.027314597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035587499999999855, 'source_diff': 0.00035587499999999855}, {'time': 0.027679972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:01.452" endtime="20201115 23:01:01.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.469" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:01.456" endtime="20201115 23:01:01.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.473" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.472" endtime="20201115 23:01:01.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.476" level="INFO">VALUE: [0.00035587499999999855, 0.00035870799999999925, 0.0003589579999999995, 0.0003585139999999973, 0.00035554200000000036, 0.00035569400000000015, 0.00035609699999999966, 0.00035877800000000057, 0.00035847200000000204, 0.000358861000000002, 0.0003563050000000012, 0.0003557370000000018, 0.0003547919999999996, 0.0003609450000000014, 0.0003600139999999988, 0.0003553609999999985, 0.0003594999999999987, 0.00035870799999999925, 0.000356958999999997, 0.00035841699999999976, 0.00036080499999999877, 0.0003597779999999981, 0.00035738900000000656, 0.0003576250000000003, 0.00035927700000000506, 0.0003569999999999962, 0.00035887500000000155, 0.00035974999999999896, 0.00036048600000000014, 0.00036125000000000046, 0.0003614030000000032, 0.00035940299999999425, 0.00036106999999999806, 0.00035750000000000365, 0.0003552920000000001, 0.0003592779999999976, 0.0003599020000000022, 0.0003551939999999962, 0.0003583480000000014, 0.00035573600000000233, 0.0003551389999999974, 0.00035908299999999616, 0.00035709700000000066, 0.00035982000000000375, 0.00035802799999999635, 0.00036140299999999626, 0.0003599030000000017, 0.0003558469999999994, 0.0003566530000000054, 0.0003575549999999955]</msg>
<status status="PASS" starttime="20201115 23:01:01.474" endtime="20201115 23:01:01.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.470" endtime="20201115 23:01:01.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.479" endtime="20201115 23:01:01.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.482" endtime="20201115 23:01:01.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.481" endtime="20201115 23:01:01.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.477" endtime="20201115 23:01:01.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.093" endtime="20201115 23:01:01.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.091" endtime="20201115 23:01:01.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.090" endtime="20201115 23:01:01.504"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.506" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.515" endtime="20201115 23:01:01.549"></status>
</kw>
<msg timestamp="20201115 23:01:01.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.513" endtime="20201115 23:01:01.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.550" endtime="20201115 23:01:01.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.553" endtime="20201115 23:01:01.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.511" endtime="20201115 23:01:01.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.508" endtime="20201115 23:01:01.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.562" endtime="20201115 23:01:01.848"></status>
</kw>
<msg timestamp="20201115 23:01:01.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024049708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024420931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.561" endtime="20201115 23:01:01.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024049708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024420931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.852" endtime="20201115 23:01:01.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.861" endtime="20201115 23:01:01.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.558" endtime="20201115 23:01:01.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.556" endtime="20201115 23:01:01.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.867" level="INFO">${RESULT} = [{'time': 0.024420931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003712230000000004, 'source_diff': 0.0003712230000000004}, {'time': 0.02478625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:01.864" endtime="20201115 23:01:01.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.881" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:01.868" endtime="20201115 23:01:01.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.885" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.884" endtime="20201115 23:01:01.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.888" level="INFO">VALUE: [0.0003712230000000004, 0.0003573329999999979, 0.0003583189999999993, 0.000358764000000001, 0.00035551300000000174, 0.0003563469999999999, 0.00035477700000000056, 0.00035869499999999915, 0.00035955600000000046, 0.00035719400000000165, 0.0003555829999999996, 0.00036073699999999986, 0.00035481999999999875, 0.0003569999999999997, 0.0003589579999999995, 0.00035775000000000043, 0.0003565140000000022, 0.00035856999999999903, 0.0003576389999999999, 0.0003548470000000019, 0.00035993100000000083, 0.00035993000000000136, 0.00036029199999999817, 0.00035576400000000147, 0.0003564860000000031, 0.0003599450000000004, 0.00035919499999999965, 0.00035611099999999923, 0.00036079199999999867, 0.0003569029999999987, 0.0003551389999999974, 0.00035652799999999485, 0.00035541699999999676, 0.0003595830000000036, 0.00036015300000000194, 0.0003575269999999964, 0.0003558060000000002, 0.0003568340000000003, 0.0003581809999999991, 0.0003558889999999981, 0.00035893099999999983, 0.0003557089999999957, 0.00035551300000000174, 0.0003583329999999954, 0.00035683300000000084, 0.0003551940000000031, 0.00035483299999999884, 0.0003569029999999987, 0.00036024999999999946, 0.0003593060000000037]</msg>
<status status="PASS" starttime="20201115 23:01:01.886" endtime="20201115 23:01:01.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.882" endtime="20201115 23:01:01.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.891" endtime="20201115 23:01:01.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.894" endtime="20201115 23:01:01.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.893" endtime="20201115 23:01:01.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.889" endtime="20201115 23:01:01.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.507" endtime="20201115 23:01:01.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.505" endtime="20201115 23:01:01.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.504" endtime="20201115 23:01:01.916"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.918" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.927" endtime="20201115 23:01:01.962"></status>
</kw>
<msg timestamp="20201115 23:01:01.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.925" endtime="20201115 23:01:01.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.963" endtime="20201115 23:01:01.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.966" endtime="20201115 23:01:01.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.923" endtime="20201115 23:01:01.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.920" endtime="20201115 23:01:01.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.975" endtime="20201115 23:01:02.261"></status>
</kw>
<msg timestamp="20201115 23:01:02.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023657514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024017403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.973" endtime="20201115 23:01:02.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023657514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024017403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.265" endtime="20201115 23:01:02.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.273" endtime="20201115 23:01:02.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.971" endtime="20201115 23:01:02.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.969" endtime="20201115 23:01:02.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.280" level="INFO">${RESULT} = [{'time': 0.024017403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035988899999999865, 'source_diff': 0.00035988899999999865}, {'time': 0.024382806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:02.277" endtime="20201115 23:01:02.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.294" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:02.281" endtime="20201115 23:01:02.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.299" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.298" endtime="20201115 23:01:02.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.301" level="INFO">VALUE: [0.00035988899999999865, 0.0003599029999999982, 0.0003583329999999989, 0.0003606809999999981, 0.00035574999999999843, 0.00035998599999999964, 0.0003591389999999979, 0.00035519399999999965, 0.0003551949999999991, 0.0003601800000000016, 0.0003580829999999986, 0.00035844399999999943, 0.0003580690000000025, 0.0003553889999999976, 0.0003614299999999994, 0.0003556250000000018, 0.00035863799999999793, 0.0003599030000000017, 0.00035893099999999983, 0.0003565280000000018, 0.00035715299999999894, 0.000357972000000005, 0.0003591670000000005, 0.00035694399999999793, 0.0003553609999999985, 0.0003587779999999971, 0.00035958299999999666, 0.0003563889999999986, 0.0003569449999999974, 0.0003556530000000044, 0.000361458000000002, 0.00036088800000000365, 0.00035965300000000144, 0.0003562909999999947, 0.00036091599999999585, 0.00035893000000000036, 0.000355860999999999, 0.0003591940000000002, 0.0003568340000000003, 0.00035497199999999507, 0.0003582219999999983, 0.0003583340000000018, 0.00035538900000000456, 0.0003581809999999991, 0.00035672200000000376, 0.00036091599999999585, 0.0003552219999999953, 0.00036147300000000104, 0.00036080499999999877, 0.00036113899999999644]</msg>
<status status="PASS" starttime="20201115 23:01:02.300" endtime="20201115 23:01:02.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.295" endtime="20201115 23:01:02.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.305" endtime="20201115 23:01:02.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.309" endtime="20201115 23:01:02.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.307" endtime="20201115 23:01:02.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.303" endtime="20201115 23:01:02.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.919" endtime="20201115 23:01:02.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.917" endtime="20201115 23:01:02.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.916" endtime="20201115 23:01:02.330"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.332" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.340" endtime="20201115 23:01:02.378"></status>
</kw>
<msg timestamp="20201115 23:01:02.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.339" endtime="20201115 23:01:02.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.380" endtime="20201115 23:01:02.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.383" endtime="20201115 23:01:02.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.336" endtime="20201115 23:01:02.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.334" endtime="20201115 23:01:02.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.392" endtime="20201115 23:01:02.676"></status>
</kw>
<msg timestamp="20201115 23:01:02.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02693725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027305847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:02.390" endtime="20201115 23:01:02.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02693725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027305847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:02.680" endtime="20201115 23:01:02.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.689" endtime="20201115 23:01:02.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.388" endtime="20201115 23:01:02.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.386" endtime="20201115 23:01:02.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.695" level="INFO">${RESULT} = [{'time': 0.027305847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036859700000000176, 'source_diff': 0.00036859700000000176}, {'time': 0.027671083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:02.692" endtime="20201115 23:01:02.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.708" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:02.696" endtime="20201115 23:01:02.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.713" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.712" endtime="20201115 23:01:02.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.716" level="INFO">VALUE: [0.00036859700000000176, 0.0003581939999999992, 0.00036098600000000064, 0.0003547500000000009, 0.00036106900000000205, 0.0003567080000000007, 0.00035782000000000175, 0.0003567500000000029, 0.000355167, 0.00035574999999999843, 0.00035719400000000165, 0.0003578479999999974, 0.0003576389999999999, 0.000355569, 0.00035798599999999764, 0.0003556939999999967, 0.0003569579999999975, 0.0003590269999999979, 0.00035655500000000145, 0.0003551530000000039, 0.00035794399999999893, 0.00035600000000000215, 0.00035611099999999923, 0.0003573190000000018, 0.0003575140000000032, 0.0003593329999999964, 0.00036137500000000405, 0.00035576399999999453, 0.0003557500000000019, 0.00035588900000000506, 0.0003577359999999974, 0.0003611250000000038, 0.0003548330000000058, 0.0003594439999999935, 0.0003581939999999992, 0.0003597359999999994, 0.00035947199999999957, 0.0003613340000000048, 0.0003597359999999994, 0.00035809700000000166, 0.00035855600000000293, 0.000359569000000004, 0.0003595419999999974, 0.000356181000000004, 0.00036076399999999953, 0.000356666999999998, 0.0003554999999999947, 0.00036036099999999655, 0.000359861000000003, 0.0003581799999999996]</msg>
<status status="PASS" starttime="20201115 23:01:02.714" endtime="20201115 23:01:02.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.709" endtime="20201115 23:01:02.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.719" endtime="20201115 23:01:02.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.723" endtime="20201115 23:01:02.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.721" endtime="20201115 23:01:02.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.717" endtime="20201115 23:01:02.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.333" endtime="20201115 23:01:02.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.331" endtime="20201115 23:01:02.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.330" endtime="20201115 23:01:02.744"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.746" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.754" endtime="20201115 23:01:02.790"></status>
</kw>
<msg timestamp="20201115 23:01:02.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.753" endtime="20201115 23:01:02.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.792" endtime="20201115 23:01:02.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.794" endtime="20201115 23:01:02.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.750" endtime="20201115 23:01:02.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.748" endtime="20201115 23:01:02.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.803" endtime="20201115 23:01:03.088"></status>
</kw>
<msg timestamp="20201115 23:01:03.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024907931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025280931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.802" endtime="20201115 23:01:03.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024907931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025280931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.093" endtime="20201115 23:01:03.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.101" endtime="20201115 23:01:03.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.799" endtime="20201115 23:01:03.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.798" endtime="20201115 23:01:03.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.107" level="INFO">${RESULT} = [{'time': 0.025280931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037299999999999833, 'source_diff': 0.00037299999999999833}, {'time': 0.025646056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:03.104" endtime="20201115 23:01:03.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.121" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:03.109" endtime="20201115 23:01:03.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.126" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.125" endtime="20201115 23:01:03.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.128" level="INFO">VALUE: [0.00037299999999999833, 0.00035858400000000207, 0.0003582080000000022, 0.00035641699999999776, 0.00035879200000000014, 0.0003549590000000019, 0.0003605419999999984, 0.0003596940000000007, 0.00036097200000000107, 0.00036024999999999946, 0.00035775000000000043, 0.00035791699999999926, 0.00035659700000000016, 0.00035569400000000015, 0.00035523600000000183, 0.00035555599999999993, 0.00035979200000000114, 0.00035997200000000007, 0.0003548750000000045, 0.00035805500000000295, 0.0003560139999999948, 0.00035970900000000666, 0.00035676400000000247, 0.000355972000000003, 0.00035627800000000154, 0.0003570419999999949, 0.0003584589999999985, 0.0003586120000000012, 0.0003584020000000007, 0.0003564029999999982, 0.0003598339999999964, 0.00035943100000000033, 0.0003554860000000021, 0.0003548479999999979, 0.00035924999999999846, 0.00036098600000000064, 0.00035962499999999537, 0.00035943000000000086, 0.00035865300000000044, 0.00036008399999999663, 0.00036016600000000204, 0.0003559999999999952, 0.0003563469999999999, 0.00035922200000000626, 0.0003559999999999952, 0.00035961100000000273, 0.0003564029999999982, 0.00036126400000000003, 0.00035948599999999914, 0.00035633300000000034]</msg>
<status status="PASS" starttime="20201115 23:01:03.127" endtime="20201115 23:01:03.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.122" endtime="20201115 23:01:03.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.131" endtime="20201115 23:01:03.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.135" endtime="20201115 23:01:03.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.133" endtime="20201115 23:01:03.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.130" endtime="20201115 23:01:03.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.747" endtime="20201115 23:01:03.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.745" endtime="20201115 23:01:03.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.744" endtime="20201115 23:01:03.156"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.159" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.167" endtime="20201115 23:01:03.202"></status>
</kw>
<msg timestamp="20201115 23:01:03.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.165" endtime="20201115 23:01:03.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.203" endtime="20201115 23:01:03.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.206" endtime="20201115 23:01:03.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.163" endtime="20201115 23:01:03.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.161" endtime="20201115 23:01:03.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.215" endtime="20201115 23:01:03.501"></status>
</kw>
<msg timestamp="20201115 23:01:03.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024582347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024947458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.213" endtime="20201115 23:01:03.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024582347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024947458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.505" endtime="20201115 23:01:03.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.514" endtime="20201115 23:01:03.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.211" endtime="20201115 23:01:03.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.209" endtime="20201115 23:01:03.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.521" level="INFO">${RESULT} = [{'time': 0.024947458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003651109999999978, 'source_diff': 0.0003651109999999978}, {'time': 0.025312847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:03.517" endtime="20201115 23:01:03.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.534" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:03.522" endtime="20201115 23:01:03.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.538" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.537" endtime="20201115 23:01:03.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.541" level="INFO">VALUE: [0.0003651109999999978, 0.0003561249999999988, 0.00035509699999999866, 0.00035811100000000123, 0.0003612909999999997, 0.0003576389999999999, 0.00035845800000000247, 0.00035884699999999894, 0.00035591600000000126, 0.0003590550000000005, 0.00036074999999999996, 0.00035719499999999765, 0.0003564310000000008, 0.00035718100000000155, 0.0003576250000000003, 0.00035541700000000023, 0.000354972000000002, 0.0003608890000000031, 0.00035690300000000216, 0.00035893099999999983, 0.00035715299999999894, 0.0003587219999999988, 0.00035997200000000007, 0.0003568060000000012, 0.00035887500000000155, 0.00035622200000000326, 0.0003552229999999948, 0.0003581390000000004, 0.0003564029999999982, 0.00035558399999999907, 0.00035842999999999986, 0.000360152999999995, 0.0003549159999999968, 0.00035997200000000007, 0.00035920799999999975, 0.00035804099999999645, 0.00035715299999999894, 0.0003595140000000052, 0.0003596109999999958, 0.0003611669999999956, 0.0003608890000000031, 0.0003562500000000024, 0.00035724999999999646, 0.00035641699999999776, 0.0003602500000000064, 0.0003573610000000005, 0.0003579579999999985, 0.0003594860000000061, 0.0003563060000000007, 0.0003592219999999993]</msg>
<status status="PASS" starttime="20201115 23:01:03.540" endtime="20201115 23:01:03.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.535" endtime="20201115 23:01:03.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.544" endtime="20201115 23:01:03.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.548" endtime="20201115 23:01:03.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.546" endtime="20201115 23:01:03.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.542" endtime="20201115 23:01:03.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.159" endtime="20201115 23:01:03.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.157" endtime="20201115 23:01:03.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.156" endtime="20201115 23:01:03.569"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.571" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.580" endtime="20201115 23:01:03.616"></status>
</kw>
<msg timestamp="20201115 23:01:03.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.578" endtime="20201115 23:01:03.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.617" endtime="20201115 23:01:03.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.620" endtime="20201115 23:01:03.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.576" endtime="20201115 23:01:03.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.573" endtime="20201115 23:01:03.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.630" endtime="20201115 23:01:03.916"></status>
</kw>
<msg timestamp="20201115 23:01:03.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023680847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024046375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.628" endtime="20201115 23:01:03.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023680847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024046375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.920" endtime="20201115 23:01:03.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.928" endtime="20201115 23:01:03.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.625" endtime="20201115 23:01:03.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.623" endtime="20201115 23:01:03.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.935" level="INFO">${RESULT} = [{'time': 0.024046375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003655279999999969, 'source_diff': 0.0003655279999999969}, {'time': 0.024411736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:03.931" endtime="20201115 23:01:03.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.949" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:03.936" endtime="20201115 23:01:03.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.954" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.953" endtime="20201115 23:01:03.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.956" level="INFO">VALUE: [0.0003655279999999969, 0.00035847199999999857, 0.0003613199999999983, 0.00035879200000000014, 0.0003598190000000008, 0.00035663900000000234, 0.00035659700000000016, 0.0003608329999999979, 0.00035775000000000043, 0.00035957000000000003, 0.00035695900000000044, 0.0003587359999999984, 0.0003595830000000001, 0.00035870799999999925, 0.00035843099999999933, 0.0003550140000000007, 0.00036125000000000046, 0.0003561950000000001, 0.0003610139999999998, 0.0003567220000000003, 0.0003594029999999977, 0.0003554449999999959, 0.0003607360000000004, 0.0003560419999999939, 0.00036002799999999835, 0.00035566700000000395, 0.0003560830000000001, 0.0003601940000000012, 0.0003564720000000035, 0.0003602359999999999, 0.00035543100000000327, 0.00035490300000000363, 0.00035944400000000043, 0.0003549029999999967, 0.0003593610000000025, 0.0003567920000000016, 0.0003610269999999999, 0.00035898599999999864, 0.00036008399999999663, 0.00035970800000000025, 0.0003556939999999967, 0.0003607220000000008, 0.0003587219999999988, 0.000359667000000001, 0.0003586390000000009, 0.00036041700000000176, 0.00035909700000000266, 0.0003551950000000026, 0.0003549860000000016, 0.00035977800000000504]</msg>
<status status="PASS" starttime="20201115 23:01:03.955" endtime="20201115 23:01:03.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.950" endtime="20201115 23:01:03.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.959" endtime="20201115 23:01:03.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.963" endtime="20201115 23:01:03.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.961" endtime="20201115 23:01:03.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.958" endtime="20201115 23:01:03.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.572" endtime="20201115 23:01:03.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.570" endtime="20201115 23:01:03.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.569" endtime="20201115 23:01:03.984"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.986" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.995" endtime="20201115 23:01:04.031"></status>
</kw>
<msg timestamp="20201115 23:01:04.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.993" endtime="20201115 23:01:04.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.033" endtime="20201115 23:01:04.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.036" endtime="20201115 23:01:04.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.990" endtime="20201115 23:01:04.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.988" endtime="20201115 23:01:04.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.045" endtime="20201115 23:01:04.331"></status>
</kw>
<msg timestamp="20201115 23:01:04.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025603778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025966528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.043" endtime="20201115 23:01:04.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025603778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025966528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.335" endtime="20201115 23:01:04.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.343" endtime="20201115 23:01:04.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.041" endtime="20201115 23:01:04.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.039" endtime="20201115 23:01:04.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.350" level="INFO">${RESULT} = [{'time': 0.025966528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003627499999999985, 'source_diff': 0.0003627499999999985}, {'time': 0.026331708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:04.347" endtime="20201115 23:01:04.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.363" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:04.351" endtime="20201115 23:01:04.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.368" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.367" endtime="20201115 23:01:04.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.370" level="INFO">VALUE: [0.0003627499999999985, 0.00036048600000000014, 0.00035944400000000043, 0.00035755599999999846, 0.0003566389999999989, 0.0003566249999999993, 0.00036134700000000144, 0.00035607, 0.0003605280000000023, 0.00035491600000000026, 0.0003578609999999975, 0.00035644399999999743, 0.0003587219999999988, 0.0003585000000000012, 0.0003556530000000009, 0.0003571250000000033, 0.00036102799999999935, 0.0003577089999999977, 0.0003609450000000014, 0.00036043000000000186, 0.0003556249999999983, 0.0003555280000000008, 0.0003556249999999983, 0.00035798599999999764, 0.0003603329999999974, 0.0003554860000000021, 0.0003582779999999966, 0.00036126300000000056, 0.00035927800000000454, 0.0003585700000000025, 0.0003570690000000015, 0.00035605500000000095, 0.00035772300000000423, 0.000356457999999997, 0.00035477700000000056, 0.00035574999999999496, 0.0003550410000000004, 0.0003557500000000019, 0.0003553189999999998, 0.00035752799999999585, 0.0003559159999999978, 0.0003602909999999987, 0.00035544500000000284, 0.0003582219999999983, 0.00035947199999999957, 0.0003609580000000015, 0.00035616700000000445, 0.00035594400000000387, 0.0003555140000000012, 0.0003603060000000047]</msg>
<status status="PASS" starttime="20201115 23:01:04.369" endtime="20201115 23:01:04.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.364" endtime="20201115 23:01:04.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.373" endtime="20201115 23:01:04.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.377" endtime="20201115 23:01:04.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.375" endtime="20201115 23:01:04.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.372" endtime="20201115 23:01:04.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.987" endtime="20201115 23:01:04.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.985" endtime="20201115 23:01:04.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.984" endtime="20201115 23:01:04.398"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.401" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.409" endtime="20201115 23:01:04.443"></status>
</kw>
<msg timestamp="20201115 23:01:04.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.408" endtime="20201115 23:01:04.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.444" endtime="20201115 23:01:04.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.447" endtime="20201115 23:01:04.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.405" endtime="20201115 23:01:04.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.403" endtime="20201115 23:01:04.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.456" endtime="20201115 23:01:04.742"></status>
</kw>
<msg timestamp="20201115 23:01:04.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023394069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023769333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.455" endtime="20201115 23:01:04.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023394069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023769333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.746" endtime="20201115 23:01:04.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.754" endtime="20201115 23:01:04.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.452" endtime="20201115 23:01:04.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.450" endtime="20201115 23:01:04.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.761" level="INFO">${RESULT} = [{'time': 0.023769333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037526400000000015, 'source_diff': 0.00037526400000000015}, {'time': 0.024134681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:04.758" endtime="20201115 23:01:04.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.774" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:04.762" endtime="20201115 23:01:04.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.779" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.778" endtime="20201115 23:01:04.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.781" level="INFO">VALUE: [0.00037526400000000015, 0.00035782000000000175, 0.0003603330000000009, 0.0003554309999999998, 0.00035838800000000115, 0.00036047200000000057, 0.0003549859999999981, 0.0003591389999999979, 0.0003566670000000015, 0.00035873600000000186, 0.0003572639999999995, 0.0003612360000000009, 0.0003575000000000002, 0.0003558190000000003, 0.00035729099999999916, 0.0003608610000000005, 0.0003579860000000011, 0.00036012499999999933, 0.00036017999999999814, 0.000359555000000001, 0.00035916599999999757, 0.00035637499999999905, 0.00035916600000000104, 0.0003557500000000019, 0.00036008400000000357, 0.000356861, 0.00035997200000000007, 0.00036031899999999784, 0.0003558889999999981, 0.00035705600000000143, 0.0003598199999999968, 0.00035893099999999983, 0.0003557500000000019, 0.00035854200000000336, 0.00035805600000000243, 0.00035494400000000287, 0.00035769499999999815, 0.00035741699999999876, 0.0003612629999999936, 0.00035934799999999545, 0.0003576250000000003, 0.0003548889999999971, 0.0003549999999999942, 0.0003615000000000007, 0.00035893099999999983, 0.00035673600000000333, 0.0003604030000000022, 0.00035894399999999993, 0.00035859700000000216, 0.00035965200000000197]</msg>
<status status="PASS" starttime="20201115 23:01:04.780" endtime="20201115 23:01:04.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.775" endtime="20201115 23:01:04.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.785" endtime="20201115 23:01:04.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.788" endtime="20201115 23:01:04.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.786" endtime="20201115 23:01:04.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.783" endtime="20201115 23:01:04.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.401" endtime="20201115 23:01:04.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.399" endtime="20201115 23:01:04.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.399" endtime="20201115 23:01:04.810"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.812" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.820" endtime="20201115 23:01:04.855"></status>
</kw>
<msg timestamp="20201115 23:01:04.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.819" endtime="20201115 23:01:04.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.856" endtime="20201115 23:01:04.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.859" endtime="20201115 23:01:04.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.816" endtime="20201115 23:01:04.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.814" endtime="20201115 23:01:04.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.868" endtime="20201115 23:01:05.153"></status>
</kw>
<msg timestamp="20201115 23:01:05.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023851972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024224458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.866" endtime="20201115 23:01:05.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023851972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024224458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.157" endtime="20201115 23:01:05.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.165" endtime="20201115 23:01:05.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.864" endtime="20201115 23:01:05.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.862" endtime="20201115 23:01:05.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:05.172" level="INFO">${RESULT} = [{'time': 0.024224458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037248600000000173, 'source_diff': 0.00037248600000000173}, {'time': 0.024589889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:05.168" endtime="20201115 23:01:05.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:05.185" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:05.173" endtime="20201115 23:01:05.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.189" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:01:05.188" endtime="20201115 23:01:05.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.192" level="INFO">VALUE: [0.00037248600000000173, 0.00035920799999999975, 0.00035995799999999703, 0.0003569579999999975, 0.0003596250000000023, 0.0003611939999999987, 0.00035845900000000194, 0.0003595000000000022, 0.00035522200000000226, 0.0003608480000000004, 0.0003598609999999995, 0.0003591390000000014, 0.0003557920000000006, 0.0003579440000000024, 0.0003610840000000011, 0.00036061100000000026, 0.00035780499999999923, 0.0003551379999999979, 0.000360458000000001, 0.0003585969999999987, 0.00035998599999999964, 0.0003604999999999997, 0.0003579860000000046, 0.0003560410000000014, 0.00035811100000000123, 0.0003558889999999981, 0.0003552089999999952, 0.0003560410000000014, 0.0003610139999999998, 0.0003610139999999998, 0.0003549860000000016, 0.00035622300000000273, 0.0003597219999999998, 0.0003551389999999974, 0.00035491600000000373, 0.0003599580000000005, 0.00035727800000000254, 0.00035933300000000334, 0.00035948599999999914, 0.0003558469999999994, 0.0003595269999999984, 0.0003580280000000033, 0.00035665299999999844, 0.00035811100000000123, 0.00035561099999999873, 0.0003586250000000013, 0.00035655600000000093, 0.00035779199999999567, 0.00035555599999999993, 0.0003598469999999965]</msg>
<status status="PASS" starttime="20201115 23:01:05.191" endtime="20201115 23:01:05.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.186" endtime="20201115 23:01:05.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.196" endtime="20201115 23:01:05.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:05.199" endtime="20201115 23:01:05.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.198" endtime="20201115 23:01:05.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.194" endtime="20201115 23:01:05.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.813" endtime="20201115 23:01:05.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.811" endtime="20201115 23:01:05.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.810" endtime="20201115 23:01:05.220"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.223" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.231" endtime="20201115 23:01:05.267"></status>
</kw>
<msg timestamp="20201115 23:01:05.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.229" endtime="20201115 23:01:05.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.269" endtime="20201115 23:01:05.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.272" endtime="20201115 23:01:05.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.227" endtime="20201115 23:01:05.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.225" endtime="20201115 23:01:05.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.281" endtime="20201115 23:01:05.567"></status>
</kw>
<msg timestamp="20201115 23:01:05.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025188625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025559958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.279" endtime="20201115 23:01:05.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025188625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025559958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.571" endtime="20201115 23:01:05.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.579" endtime="20201115 23:01:05.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.277" endtime="20201115 23:01:05.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.275" endtime="20201115 23:01:05.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:05.586" level="INFO">${RESULT} = [{'time': 0.025559958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037133300000000147, 'source_diff': 0.00037133300000000147}, {'time': 0.025925042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:05.583" endtime="20201115 23:01:05.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:05.601" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:05.587" endtime="20201115 23:01:05.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.606" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:01:05.605" endtime="20201115 23:01:05.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.609" level="INFO">VALUE: [0.00037133300000000147, 0.0003604590000000005, 0.000360151999999999, 0.0003565280000000018, 0.00035494499999999887, 0.00035601399999999825, 0.00035559699999999916, 0.0003559730000000025, 0.00035540300000000066, 0.00035492999999999983, 0.0003556249999999983, 0.0003551250000000013, 0.0003551250000000013, 0.00036047200000000057, 0.00035494499999999887, 0.00035911100000000223, 0.00035566599999999754, 0.0003580139999999968, 0.00035997299999999954, 0.00035761100000000073, 0.0003587500000000049, 0.0003567500000000029, 0.0003572359999999969, 0.000356958999999997, 0.00036008299999999716, 0.00035912499999999486, 0.0003601390000000024, 0.00035854200000000336, 0.0003585689999999961, 0.00035898599999999864, 0.00035498599999999464, 0.0003575140000000032, 0.0003569579999999975, 0.0003555270000000013, 0.0003576389999999999, 0.00035472300000000123, 0.00035844399999999943, 0.0003555419999999934, 0.0003610979999999972, 0.000356666999999998, 0.00036106999999999806, 0.00035865300000000044, 0.0003598749999999956, 0.0003575700000000015, 0.00036062499999999637, 0.0003580969999999947, 0.0003559860000000026, 0.0003603199999999973, 0.00035897199999999907, 0.0003558469999999994]</msg>
<status status="PASS" starttime="20201115 23:01:05.607" endtime="20201115 23:01:05.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.602" endtime="20201115 23:01:05.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.612" endtime="20201115 23:01:05.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:05.616" endtime="20201115 23:01:05.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.614" endtime="20201115 23:01:05.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.611" endtime="20201115 23:01:05.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.223" endtime="20201115 23:01:05.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.221" endtime="20201115 23:01:05.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.221" endtime="20201115 23:01:05.637"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.639" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.648" endtime="20201115 23:01:05.688"></status>
</kw>
<msg timestamp="20201115 23:01:05.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.646" endtime="20201115 23:01:05.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.690" endtime="20201115 23:01:05.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.693" endtime="20201115 23:01:05.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.644" endtime="20201115 23:01:05.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.641" endtime="20201115 23:01:05.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.702" endtime="20201115 23:01:05.988"></status>
</kw>
<msg timestamp="20201115 23:01:05.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025559875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025932194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.700" endtime="20201115 23:01:05.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025559875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025932194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.992" endtime="20201115 23:01:05.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.000" endtime="20201115 23:01:06.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.698" endtime="20201115 23:01:06.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.696" endtime="20201115 23:01:06.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:06.007" level="INFO">${RESULT} = [{'time': 0.025932194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00037231899999999943, 'source_diff': 0.00037231899999999943}, {'time': 0.026297347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:06.004" endtime="20201115 23:01:06.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:06.026" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:06.014" endtime="20201115 23:01:06.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.031" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:01:06.030" endtime="20201115 23:01:06.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.033" level="INFO">VALUE: [0.00037231899999999943, 0.0003592219999999993, 0.00035882000000000275, 0.0003608330000000014, 0.0003583199999999988, 0.00035533299999999934, 0.0003573610000000005, 0.00035723600000000036, 0.0003553890000000011, 0.0003608750000000001, 0.0003586809999999996, 0.00036034700000000044, 0.0003596939999999972, 0.0003600139999999988, 0.0003583890000000006, 0.0003588890000000011, 0.0003579029999999997, 0.00035987500000000255, 0.00035488799999999765, 0.0003604999999999997, 0.0003553050000000002, 0.0003587089999999987, 0.000355375000000005, 0.0003584449999999989, 0.00035794399999999893, 0.00035961100000000273, 0.00035833300000000234, 0.0003599999999999992, 0.0003600140000000057, 0.00035959700000000316, 0.00035550000000000165, 0.00035761100000000073, 0.00036069500000000115, 0.000355972000000003, 0.0003584999999999977, 0.0003581250000000008, 0.00036102799999999935, 0.00035997200000000007, 0.00036005500000000495, 0.0003546940000000026, 0.00035545800000000294, 0.0003585969999999952, 0.0003581799999999996, 0.000358667, 0.0003607779999999991, 0.00035543100000000327, 0.00035943100000000033, 0.00035654200000000136, 0.00035787500000000055, 0.0003550140000000007]</msg>
<status status="PASS" starttime="20201115 23:01:06.032" endtime="20201115 23:01:06.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.027" endtime="20201115 23:01:06.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.036" endtime="20201115 23:01:06.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.040" endtime="20201115 23:01:06.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.038" endtime="20201115 23:01:06.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.035" endtime="20201115 23:01:06.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.640" endtime="20201115 23:01:06.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.638" endtime="20201115 23:01:06.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.637" endtime="20201115 23:01:06.061"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.063" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.072" endtime="20201115 23:01:06.106"></status>
</kw>
<msg timestamp="20201115 23:01:06.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.070" endtime="20201115 23:01:06.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.107" endtime="20201115 23:01:06.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.110" endtime="20201115 23:01:06.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.068" endtime="20201115 23:01:06.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.065" endtime="20201115 23:01:06.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.119" endtime="20201115 23:01:06.404"></status>
</kw>
<msg timestamp="20201115 23:01:06.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023510611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023894153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.118" endtime="20201115 23:01:06.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023510611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023894153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.409" endtime="20201115 23:01:06.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.417" endtime="20201115 23:01:06.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.115" endtime="20201115 23:01:06.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.113" endtime="20201115 23:01:06.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:06.424" level="INFO">${RESULT} = [{'time': 0.023894153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003835420000000006, 'source_diff': 0.0003835420000000006}, {'time': 0.024259306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:06.421" endtime="20201115 23:01:06.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:06.437" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:06.425" endtime="20201115 23:01:06.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.442" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:01:06.441" endtime="20201115 23:01:06.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.444" level="INFO">VALUE: [0.0003835420000000006, 0.00035808400000000157, 0.00035769400000000215, 0.00036017999999999814, 0.00035912499999999833, 0.0003590420000000004, 0.0003573189999999983, 0.00036111100000000076, 0.0003574589999999975, 0.0003569860000000001, 0.0003548049999999997, 0.0003578470000000014, 0.0003584020000000007, 0.0003602359999999999, 0.00035901400000000125, 0.00035765299999999944, 0.0003568190000000013, 0.0003610969999999977, 0.00035811100000000123, 0.00035541700000000023, 0.000357764, 0.0003554439999999999, 0.00036106999999999806, 0.00036037500000000305, 0.0003603749999999961, 0.0003564720000000035, 0.00035572200000000276, 0.0003571669999999985, 0.00035777800000000304, 0.00035627800000000154, 0.00035741699999999876, 0.00036009700000000366, 0.0003601390000000024, 0.0003583060000000027, 0.00035874999999999796, 0.0003554029999999972, 0.00036008299999999716, 0.0003563479999999994, 0.0003581939999999992, 0.0003566530000000054, 0.00035570900000000266, 0.00035642999999999786, 0.0003553339999999988, 0.0003583470000000019, 0.00035802799999999635, 0.00035533299999999934, 0.00035541699999999676, 0.00036058299999999766, 0.0003599019999999953, 0.0003574449999999979]</msg>
<status status="PASS" starttime="20201115 23:01:06.443" endtime="20201115 23:01:06.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.438" endtime="20201115 23:01:06.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.447" endtime="20201115 23:01:06.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.451" endtime="20201115 23:01:06.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.449" endtime="20201115 23:01:06.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.446" endtime="20201115 23:01:06.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.064" endtime="20201115 23:01:06.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.062" endtime="20201115 23:01:06.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.061" endtime="20201115 23:01:06.472"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.474" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.483" endtime="20201115 23:01:06.519"></status>
</kw>
<msg timestamp="20201115 23:01:06.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.481" endtime="20201115 23:01:06.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.520" endtime="20201115 23:01:06.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.523" endtime="20201115 23:01:06.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.479" endtime="20201115 23:01:06.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.476" endtime="20201115 23:01:06.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.532" endtime="20201115 23:01:06.818"></status>
</kw>
<msg timestamp="20201115 23:01:06.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024438292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024793333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.530" endtime="20201115 23:01:06.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024438292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024793333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.823" endtime="20201115 23:01:06.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.831" endtime="20201115 23:01:06.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.528" endtime="20201115 23:01:06.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.526" endtime="20201115 23:01:06.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:06.837" level="INFO">${RESULT} = [{'time': 0.024793333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003550410000000004, 'source_diff': 0.0003550410000000004}, {'time': 0.025158653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:06.834" endtime="20201115 23:01:06.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:06.851" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:06.838" endtime="20201115 23:01:06.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.855" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:01:06.854" endtime="20201115 23:01:06.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.858" level="INFO">VALUE: [0.0003550410000000004, 0.00035784699999999794, 0.0003599029999999982, 0.00035541700000000023, 0.0003601250000000028, 0.00035873600000000186, 0.0003580000000000007, 0.00035533299999999934, 0.0003567219999999968, 0.00036002799999999835, 0.00035655500000000145, 0.0003591810000000001, 0.0003576809999999986, 0.00035663900000000234, 0.00035651399999999875, 0.0003600419999999979, 0.0003558469999999994, 0.00035732000000000125, 0.00035995900000000344, 0.0003566389999999989, 0.0003595830000000036, 0.00035505599999999943, 0.00035611099999999923, 0.00036120800000000175, 0.00035783300000000184, 0.00035604200000000086, 0.00035777700000000356, 0.00035743100000000527, 0.00035576399999999453, 0.00035943000000000086, 0.00035509699999999866, 0.0003595269999999984, 0.0003583050000000032, 0.0003607779999999991, 0.00035577800000000104, 0.0003595419999999974, 0.0003558889999999981, 0.0003608890000000031, 0.0003607220000000008, 0.00035529100000000063, 0.0003584869999999976, 0.0003552080000000027, 0.00035615199999999847, 0.00036030599999999774, 0.00036044499999999396, 0.00035917999999999367, 0.0003555139999999943, 0.0003586659999999936, 0.0003581669999999995, 0.0003565139999999953]</msg>
<status status="PASS" starttime="20201115 23:01:06.856" endtime="20201115 23:01:06.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.852" endtime="20201115 23:01:06.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.861" endtime="20201115 23:01:06.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.864" endtime="20201115 23:01:06.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.863" endtime="20201115 23:01:06.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.859" endtime="20201115 23:01:06.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.475" endtime="20201115 23:01:06.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.473" endtime="20201115 23:01:06.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.472" endtime="20201115 23:01:06.886"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.888" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.896" endtime="20201115 23:01:06.936"></status>
</kw>
<msg timestamp="20201115 23:01:06.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.895" endtime="20201115 23:01:06.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.937" endtime="20201115 23:01:06.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.940" endtime="20201115 23:01:06.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.892" endtime="20201115 23:01:06.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.890" endtime="20201115 23:01:06.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.949" endtime="20201115 23:01:07.235"></status>
</kw>
<msg timestamp="20201115 23:01:07.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027885417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028249528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.948" endtime="20201115 23:01:07.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027885417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028249528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.239" endtime="20201115 23:01:07.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.247" endtime="20201115 23:01:07.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.945" endtime="20201115 23:01:07.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.943" endtime="20201115 23:01:07.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:07.254" level="INFO">${RESULT} = [{'time': 0.028249528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003641110000000003, 'source_diff': 0.0003641110000000003}, {'time': 0.028614889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:07.251" endtime="20201115 23:01:07.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:07.269" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:07.255" endtime="20201115 23:01:07.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.273" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:01:07.272" endtime="20201115 23:01:07.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.276" level="INFO">VALUE: [0.0003641110000000003, 0.0003599580000000005, 0.00035569400000000015, 0.00036066699999999854, 0.0003591250000000018, 0.0003564999999999992, 0.00035627800000000154, 0.0003569159999999988, 0.0003588890000000011, 0.0003568890000000026, 0.0003595549999999975, 0.0003603889999999957, 0.0003598329999999969, 0.00035893099999999983, 0.00035719499999999765, 0.0003576389999999999, 0.00035637499999999905, 0.0003584589999999985, 0.000356972000000004, 0.0003552080000000027, 0.0003556810000000035, 0.00035856999999999556, 0.00035672200000000376, 0.00035611099999999923, 0.0003551799999999966, 0.00035959800000000264, 0.0003592359999999989, 0.00035976399999999853, 0.0003556249999999983, 0.00035687499999999955, 0.00035841599999999335, 0.00035538900000000456, 0.00035798700000000405, 0.0003555280000000008, 0.0003569999999999962, 0.0003598889999999952, 0.00035577700000000156, 0.00035808400000000157, 0.0003590139999999978, 0.00035694400000000487, 0.00035647199999999657, 0.0003582500000000044, 0.00035627700000000206, 0.00035893000000000036, 0.0003613060000000057, 0.0003614169999999958, 0.0003594589999999995, 0.00035661099999999973, 0.0003588060000000032, 0.00035655600000000093]</msg>
<status status="PASS" starttime="20201115 23:01:07.274" endtime="20201115 23:01:07.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.270" endtime="20201115 23:01:07.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.279" endtime="20201115 23:01:07.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:07.282" endtime="20201115 23:01:07.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.281" endtime="20201115 23:01:07.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.277" endtime="20201115 23:01:07.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.889" endtime="20201115 23:01:07.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.887" endtime="20201115 23:01:07.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.886" endtime="20201115 23:01:07.304"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.306" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.315" endtime="20201115 23:01:07.352"></status>
</kw>
<msg timestamp="20201115 23:01:07.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.313" endtime="20201115 23:01:07.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.354" endtime="20201115 23:01:07.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.356" endtime="20201115 23:01:07.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.311" endtime="20201115 23:01:07.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.308" endtime="20201115 23:01:07.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.365" endtime="20201115 23:01:07.651"></status>
</kw>
<msg timestamp="20201115 23:01:07.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026913472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027291181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.364" endtime="20201115 23:01:07.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026913472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027291181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.655" endtime="20201115 23:01:07.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.663" endtime="20201115 23:01:07.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.361" endtime="20201115 23:01:07.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.359" endtime="20201115 23:01:07.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:07.670" level="INFO">${RESULT} = [{'time': 0.027291181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003777090000000004, 'source_diff': 0.0003777090000000004}, {'time': 0.027656653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:07.667" endtime="20201115 23:01:07.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:07.683" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:07.671" endtime="20201115 23:01:07.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.688" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:01:07.687" endtime="20201115 23:01:07.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.691" level="INFO">VALUE: [0.0003777090000000004, 0.00036112500000000033, 0.0003574029999999992, 0.00035655599999999746, 0.00035526400000000097, 0.00035551399999999775, 0.0003580000000000007, 0.00035944400000000043, 0.0003593329999999999, 0.0003585000000000012, 0.000359458, 0.0003580830000000021, 0.00035715199999999947, 0.0003567219999999968, 0.00035856999999999556, 0.0003570280000000023, 0.00035815200000000047, 0.00035852799999999685, 0.0003583610000000015, 0.0003580280000000033, 0.0003593610000000025, 0.00035765299999999944, 0.00035609799999999914, 0.0003554860000000021, 0.00035490300000000363, 0.0003551389999999974, 0.00035626400000000197, 0.00036005500000000495, 0.00035680599999999424, 0.0003572080000000047, 0.00035698599999999664, 0.0003594020000000017, 0.0003569579999999975, 0.0003588470000000024, 0.00036116600000000304, 0.0003612360000000009, 0.0003555140000000012, 0.00036054099999999895, 0.0003558339999999993, 0.000358555999999996, 0.00035450000000000065, 0.00035743099999999833, 0.0003598199999999968, 0.0003572229999999968, 0.00035984799999999595, 0.0003553889999999976, 0.0003582779999999966, 0.0003553469999999989, 0.0003607220000000008, 0.00035687499999999955]</msg>
<status status="PASS" starttime="20201115 23:01:07.689" endtime="20201115 23:01:07.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.684" endtime="20201115 23:01:07.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.694" endtime="20201115 23:01:07.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:07.697" endtime="20201115 23:01:07.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.696" endtime="20201115 23:01:07.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.692" endtime="20201115 23:01:07.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.307" endtime="20201115 23:01:07.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.305" endtime="20201115 23:01:07.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.304" endtime="20201115 23:01:07.719"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.721" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.730" endtime="20201115 23:01:07.764"></status>
</kw>
<msg timestamp="20201115 23:01:07.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.728" endtime="20201115 23:01:07.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.765" endtime="20201115 23:01:07.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.768" endtime="20201115 23:01:07.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.725" endtime="20201115 23:01:07.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.723" endtime="20201115 23:01:07.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.777" endtime="20201115 23:01:08.062"></status>
</kw>
<msg timestamp="20201115 23:01:08.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023480306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023837597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.775" endtime="20201115 23:01:08.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023480306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023837597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.066" endtime="20201115 23:01:08.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.074" endtime="20201115 23:01:08.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.773" endtime="20201115 23:01:08.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.771" endtime="20201115 23:01:08.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:08.081" level="INFO">${RESULT} = [{'time': 0.023837597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035729099999999916, 'source_diff': 0.00035729099999999916}, {'time': 0.024203069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:08.077" endtime="20201115 23:01:08.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:08.094" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:08.082" endtime="20201115 23:01:08.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.099" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:01:08.097" endtime="20201115 23:01:08.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.101" level="INFO">VALUE: [0.00035729099999999916, 0.0003601940000000012, 0.0003603060000000012, 0.0003587779999999971, 0.0003562920000000011, 0.0003594030000000012, 0.00036138900000000015, 0.0003613749999999971, 0.00035994400000000093, 0.0003559019999999982, 0.0003564019999999987, 0.00036024999999999946, 0.000360361, 0.0003560690000000005, 0.000358973000000002, 0.0003565280000000018, 0.00035730499999999873, 0.0003580830000000021, 0.00035769400000000215, 0.0003551110000000017, 0.000360652999999999, 0.0003587220000000023, 0.00036137500000000405, 0.00036095899999999403, 0.0003566389999999989, 0.00035661099999999973, 0.00035876400000000447, 0.0003596109999999958, 0.00035994400000000093, 0.0003550970000000056, 0.0003549860000000016, 0.00035488900000000406, 0.00035891700000000026, 0.00035733300000000134, 0.0003588890000000011, 0.00035679100000000213, 0.0003570280000000023, 0.00035647199999999657, 0.00035494399999999593, 0.00035943100000000033, 0.00035876399999999753, 0.00035920799999999975, 0.00035565299999999744, 0.0003594020000000017, 0.0003570830000000011, 0.0003566950000000041, 0.00035594399999999693, 0.00036140299999999626, 0.00036011100000000323, 0.0003608469999999975]</msg>
<status status="PASS" starttime="20201115 23:01:08.100" endtime="20201115 23:01:08.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.095" endtime="20201115 23:01:08.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.105" endtime="20201115 23:01:08.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:08.108" endtime="20201115 23:01:08.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.107" endtime="20201115 23:01:08.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.103" endtime="20201115 23:01:08.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.722" endtime="20201115 23:01:08.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.720" endtime="20201115 23:01:08.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.719" endtime="20201115 23:01:08.129"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.132" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.140" endtime="20201115 23:01:08.178"></status>
</kw>
<msg timestamp="20201115 23:01:08.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.138" endtime="20201115 23:01:08.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.179" endtime="20201115 23:01:08.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.182" endtime="20201115 23:01:08.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.136" endtime="20201115 23:01:08.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.134" endtime="20201115 23:01:08.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.191" endtime="20201115 23:01:08.477"></status>
</kw>
<msg timestamp="20201115 23:01:08.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025054375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025423583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.190" endtime="20201115 23:01:08.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025054375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025423583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.481" endtime="20201115 23:01:08.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.490" endtime="20201115 23:01:08.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.187" endtime="20201115 23:01:08.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.185" endtime="20201115 23:01:08.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:08.496" level="INFO">${RESULT} = [{'time': 0.025423583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00036920799999999934, 'source_diff': 0.00036920799999999934}, {'time': 0.025788792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:08.493" endtime="20201115 23:01:08.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:08.509" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:08.497" endtime="20201115 23:01:08.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.514" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:01:08.513" endtime="20201115 23:01:08.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.517" level="INFO">VALUE: [0.00036920799999999934, 0.0003593890000000016, 0.0003572639999999995, 0.0003548620000000009, 0.00035690300000000216, 0.0003604869999999996, 0.0003560830000000001, 0.00035579099999999766, 0.00035627800000000154, 0.00035891700000000026, 0.00035497199999999854, 0.00036080499999999877, 0.0003574310000000018, 0.0003566379999999994, 0.0003598060000000007, 0.0003610000000000002, 0.0003576389999999999, 0.0003547500000000009, 0.0003581939999999992, 0.00035565199999999797, 0.00035780499999999577, 0.00035908399999999563, 0.0003581939999999992, 0.00035587499999999855, 0.00035515299999999694, 0.00035861100000000173, 0.0003605139999999993, 0.00035570900000000266, 0.0003613470000000049, 0.00035591699999999726, 0.00035736199999999996, 0.00035916600000000104, 0.00036148600000000114, 0.00035604200000000086, 0.0003562080000000037, 0.0003565140000000022, 0.00035537499999999805, 0.0003610000000000002, 0.0003562359999999959, 0.0003607220000000008, 0.00035591699999999726, 0.00036052799999999885, 0.0003604020000000027, 0.0003601940000000012, 0.00035794400000000587, 0.00036123599999999395, 0.0003581799999999996, 0.00035943000000000086, 0.00035755600000000193, 0.00035484700000000535]</msg>
<status status="PASS" starttime="20201115 23:01:08.515" endtime="20201115 23:01:08.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.510" endtime="20201115 23:01:08.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.520" endtime="20201115 23:01:08.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:08.524" endtime="20201115 23:01:08.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.522" endtime="20201115 23:01:08.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.519" endtime="20201115 23:01:08.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.132" endtime="20201115 23:01:08.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.131" endtime="20201115 23:01:08.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.130" endtime="20201115 23:01:08.545"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.547" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.556" endtime="20201115 23:01:08.593"></status>
</kw>
<msg timestamp="20201115 23:01:08.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.554" endtime="20201115 23:01:08.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.595" endtime="20201115 23:01:08.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.597" endtime="20201115 23:01:08.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.551" endtime="20201115 23:01:08.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.549" endtime="20201115 23:01:08.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.606" endtime="20201115 23:01:08.893"></status>
</kw>
<msg timestamp="20201115 23:01:08.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026512208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026868806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.605" endtime="20201115 23:01:08.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026512208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026868806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.897" endtime="20201115 23:01:08.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.906" endtime="20201115 23:01:08.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.602" endtime="20201115 23:01:08.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.601" endtime="20201115 23:01:08.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:08.912" level="INFO">${RESULT} = [{'time': 0.026868806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00035659799999999964, 'source_diff': 0.00035659799999999964}, {'time': 0.027234111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:08.909" endtime="20201115 23:01:08.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:08.927" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:08.914" endtime="20201115 23:01:08.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.932" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:01:08.931" endtime="20201115 23:01:08.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.934" level="INFO">VALUE: [0.00035659799999999964, 0.0003548049999999997, 0.0003558890000000016, 0.00035938899999999815, 0.0003556670000000005, 0.0003579029999999997, 0.0003563060000000007, 0.00035773600000000086, 0.0003574440000000019, 0.000357457999999998, 0.0003583060000000027, 0.00035650000000000265, 0.00036117999999999914, 0.00035481999999999875, 0.00036015200000000247, 0.0003565700000000005, 0.0003611669999999956, 0.0003545829999999986, 0.00035670799999999725, 0.00035797199999999807, 0.00035715299999999894, 0.00035915300000000094, 0.0003558060000000002, 0.00035711100000000023, 0.0003570280000000023, 0.00035566700000000395, 0.00035500000000000115, 0.0003546660000000035, 0.000355666999999997, 0.00035523600000000183, 0.0003610139999999998, 0.00035902799999999735, 0.0003548610000000049, 0.00035632000000000025, 0.0003592500000000054, 0.000357569000000002, 0.00035822200000000526, 0.0003557219999999958, 0.0003571249999999998, 0.00035611099999999923, 0.00035876400000000447, 0.0003594030000000012, 0.00035591699999999726, 0.0003609450000000014, 0.0003571389999999994, 0.00036079199999999867, 0.0003608339999999974, 0.0003585140000000042, 0.00035505599999999943, 0.00036106999999999806]</msg>
<status status="PASS" starttime="20201115 23:01:08.933" endtime="20201115 23:01:08.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.928" endtime="20201115 23:01:08.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.937" endtime="20201115 23:01:08.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:08.941" endtime="20201115 23:01:08.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.939" endtime="20201115 23:01:08.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.936" endtime="20201115 23:01:08.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.548" endtime="20201115 23:01:08.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.546" endtime="20201115 23:01:08.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.545" endtime="20201115 23:01:08.962"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.965" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.973" endtime="20201115 23:01:09.010"></status>
</kw>
<msg timestamp="20201115 23:01:09.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.971" endtime="20201115 23:01:09.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:09.011" endtime="20201115 23:01:09.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.014" endtime="20201115 23:01:09.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.969" endtime="20201115 23:01:09.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.967" endtime="20201115 23:01:09.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.023" endtime="20201115 23:01:09.320"></status>
</kw>
<msg timestamp="20201115 23:01:09.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026351528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026719194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.022" endtime="20201115 23:01:09.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026351528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026719194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.329" endtime="20201115 23:01:09.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.348" endtime="20201115 23:01:09.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.019" endtime="20201115 23:01:09.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.017" endtime="20201115 23:01:09.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:09.361" level="INFO">${RESULT} = [{'time': 0.026719194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0003676660000000026, 'source_diff': 0.0003676660000000026}, {'time': 0.027084417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:09.355" endtime="20201115 23:01:09.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:09.374" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:09.362" endtime="20201115 23:01:09.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.379" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:01:09.378" endtime="20201115 23:01:09.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.381" level="INFO">VALUE: [0.0003676660000000026, 0.0003572639999999995, 0.00035652699999999884, 0.00035591700000000073, 0.0003583059999999992, 0.0003577920000000026, 0.0003602779999999986, 0.0003599869999999991, 0.00035654200000000136, 0.0003567920000000016, 0.0003548200000000022, 0.00035806999999999853, 0.00035508400000000204, 0.0003560140000000017, 0.00035655500000000145, 0.0003590269999999979, 0.0003591670000000005, 0.00035500000000000115, 0.00036080499999999877, 0.0003564159999999983, 0.0003581799999999996, 0.0003612220000000013, 0.000354972000000002, 0.00036047200000000057, 0.00035824999999999746, 0.0003559579999999965, 0.00036048600000000014, 0.00035609699999999966, 0.00035815299999999994, 0.00036098600000000064, 0.0003557920000000006, 0.00036004200000000486, 0.0003595969999999962, 0.0003585700000000025, 0.0003613889999999967, 0.00035505599999999943, 0.00035632000000000025, 0.00035984799999999595, 0.0003584030000000002, 0.00035936099999999555, 0.00035720799999999775, 0.0003587769999999976, 0.00035859800000000164, 0.0003578340000000013, 0.000354972000000002, 0.0003583329999999954, 0.00035824999999999746, 0.00035893000000000036, 0.00035798599999999764, 0.0003604019999999958]</msg>
<status status="PASS" starttime="20201115 23:01:09.380" endtime="20201115 23:01:09.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.375" endtime="20201115 23:01:09.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.384" endtime="20201115 23:01:09.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:09.388" endtime="20201115 23:01:09.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.386" endtime="20201115 23:01:09.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.383" endtime="20201115 23:01:09.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.965" endtime="20201115 23:01:09.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.963" endtime="20201115 23:01:09.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.962" endtime="20201115 23:01:09.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.615" endtime="20201115 23:01:09.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:09.414" endtime="20201115 23:01:09.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.412" endtime="20201115 23:01:09.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.411" endtime="20201115 23:01:09.434"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:00:27.538" endtime="20201115 23:01:09.434" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:44.220" endtime="20201115 23:01:09.439"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:59:42.180" endtime="20201115 23:01:09.451"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
