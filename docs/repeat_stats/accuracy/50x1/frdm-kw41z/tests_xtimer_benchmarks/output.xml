<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 23:01:14.956" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.518" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:01:15.527" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:01:16.612" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:01:15.517" endtime="20201115 23:01:16.613"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.615" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:01:16.614" endtime="20201115 23:01:16.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.516" endtime="20201115 23:01:16.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.619" endtime="20201115 23:01:16.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.617" endtime="20201115 23:01:16.804"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.816" endtime="20201115 23:01:16.833"></status>
</kw>
<msg timestamp="20201115 23:01:16.833" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.815" endtime="20201115 23:01:16.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.836" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.834" endtime="20201115 23:01:16.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.839" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:16.837" endtime="20201115 23:01:16.840"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:16.812" endtime="20201115 23:01:16.840"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:16.810" endtime="20201115 23:01:16.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.809" endtime="20201115 23:01:16.841"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:16.845" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:16.844" endtime="20201115 23:01:16.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.842" endtime="20201115 23:01:16.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.808" endtime="20201115 23:01:16.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.807" endtime="20201115 23:01:16.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.847" endtime="20201115 23:01:16.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.806" endtime="20201115 23:01:16.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.849" endtime="20201115 23:01:16.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.804" endtime="20201115 23:01:16.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.514" endtime="20201115 23:01:16.852"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.859" endtime="20201115 23:01:16.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.857" endtime="20201115 23:01:16.879"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.894" endtime="20201115 23:01:16.918"></status>
</kw>
<msg timestamp="20201115 23:01:16.919" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.891" endtime="20201115 23:01:16.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.921" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.920" endtime="20201115 23:01:16.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.924" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:16.922" endtime="20201115 23:01:16.924"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:16.888" endtime="20201115 23:01:16.925"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:16.886" endtime="20201115 23:01:16.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.884" endtime="20201115 23:01:16.926"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:16.930" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:16.929" endtime="20201115 23:01:16.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.927" endtime="20201115 23:01:16.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.883" endtime="20201115 23:01:16.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.882" endtime="20201115 23:01:16.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.931" endtime="20201115 23:01:16.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.881" endtime="20201115 23:01:16.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.879" endtime="20201115 23:01:16.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.856" endtime="20201115 23:01:16.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.942" endtime="20201115 23:01:16.957"></status>
</kw>
<msg timestamp="20201115 23:01:16.957" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.940" endtime="20201115 23:01:16.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.960" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.958" endtime="20201115 23:01:16.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.961" endtime="20201115 23:01:16.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.937" endtime="20201115 23:01:16.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.935" endtime="20201115 23:01:16.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.968" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 23:01:16.967" endtime="20201115 23:01:16.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.970" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 23:01:16.969" endtime="20201115 23:01:16.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.965" endtime="20201115 23:01:16.971"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:16.852" endtime="20201115 23:01:16.972" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:01:15.067" endtime="20201115 23:01:16.976"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.030" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:01:17.038" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:01:18.120" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:01:17.029" endtime="20201115 23:01:18.120"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.123" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:01:18.122" endtime="20201115 23:01:18.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.027" endtime="20201115 23:01:18.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.126" endtime="20201115 23:01:18.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.125" endtime="20201115 23:01:18.347"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.359" endtime="20201115 23:01:18.376"></status>
</kw>
<msg timestamp="20201115 23:01:18.376" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.358" endtime="20201115 23:01:18.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.379" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.377" endtime="20201115 23:01:18.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.382" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:18.380" endtime="20201115 23:01:18.382"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:18.355" endtime="20201115 23:01:18.383"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:18.353" endtime="20201115 23:01:18.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.352" endtime="20201115 23:01:18.384"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:18.387" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:18.387" endtime="20201115 23:01:18.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.384" endtime="20201115 23:01:18.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.351" endtime="20201115 23:01:18.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.350" endtime="20201115 23:01:18.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.389" endtime="20201115 23:01:18.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.349" endtime="20201115 23:01:18.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.392" endtime="20201115 23:01:18.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.348" endtime="20201115 23:01:18.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.026" endtime="20201115 23:01:18.394"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.401" endtime="20201115 23:01:18.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.399" endtime="20201115 23:01:18.422"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.434" endtime="20201115 23:01:18.453"></status>
</kw>
<msg timestamp="20201115 23:01:18.454" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.433" endtime="20201115 23:01:18.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.457" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.455" endtime="20201115 23:01:18.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.460" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:18.458" endtime="20201115 23:01:18.460"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:18.430" endtime="20201115 23:01:18.461"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:18.428" endtime="20201115 23:01:18.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.427" endtime="20201115 23:01:18.462"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:18.465" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:18.465" endtime="20201115 23:01:18.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.463" endtime="20201115 23:01:18.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.426" endtime="20201115 23:01:18.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.425" endtime="20201115 23:01:18.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.467" endtime="20201115 23:01:18.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.424" endtime="20201115 23:01:18.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.422" endtime="20201115 23:01:18.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.398" endtime="20201115 23:01:18.470"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.475" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.484" endtime="20201115 23:01:18.501"></status>
</kw>
<msg timestamp="20201115 23:01:18.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.481" endtime="20201115 23:01:18.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.503" endtime="20201115 23:01:18.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.505" endtime="20201115 23:01:18.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.479" endtime="20201115 23:01:18.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.477" endtime="20201115 23:01:18.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.514" endtime="20201115 23:01:18.820"></status>
</kw>
<msg timestamp="20201115 23:01:18.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075904875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075911097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.513" endtime="20201115 23:01:18.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075904875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075911097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.825" endtime="20201115 23:01:18.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.833" endtime="20201115 23:01:18.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.510" endtime="20201115 23:01:18.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.509" endtime="20201115 23:01:18.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:18.840" level="INFO">${RESULT} = [{'time': 0.075911097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.075927028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:18.837" endtime="20201115 23:01:18.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:18.854" level="INFO">${ACCURACY} = {'time': [0.075911097, 0.075927028, 0.075940639, 0.075954319, 0.075967167, 0.075979389, 0.075996319, 0.076012014, 0.076022972, 0.076040319, 0.076055167, 0.076070528, 0.076087319, 0.076099542, 0.076112...</msg>
<status status="PASS" starttime="20201115 23:01:18.841" endtime="20201115 23:01:18.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.858" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 23:01:18.857" endtime="20201115 23:01:18.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.861" level="INFO">VALUE: [6.222000000000172e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.208000000007541e-06, 6.181000000007875e-06, 6.180999999993997e-06, 6.208000000007541e-06, 6.236000000006681e-06, 6.194000000001032e-06, 6.207999999993663e-06, 6.223000000013523e-06, 6.152999999994857e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.236000000006681e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.208000000007541e-06, 6.194999999986628e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.193999999987154e-06, 6.194000000001032e-06, 6.2090000000070145e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.179999999994523e-06, 6.195000000000506e-06, 6.208999999993137e-06, 6.193999999987154e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.235999999992803e-06, 6.236000000006681e-06, 6.180000000008401e-06, 6.195000000000506e-06, 6.2090000000070145e-06, 6.2640000000058205e-06, 6.2090000000070145e-06, 6.195000000000506e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.207999999993663e-06]</msg>
<status status="PASS" starttime="20201115 23:01:18.859" endtime="20201115 23:01:18.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.855" endtime="20201115 23:01:18.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.864" endtime="20201115 23:01:18.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.867" endtime="20201115 23:01:18.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.866" endtime="20201115 23:01:18.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.862" endtime="20201115 23:01:18.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.475" endtime="20201115 23:01:18.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.472" endtime="20201115 23:01:18.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.472" endtime="20201115 23:01:18.889"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.891" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.900" endtime="20201115 23:01:18.922"></status>
</kw>
<msg timestamp="20201115 23:01:18.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.898" endtime="20201115 23:01:18.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.923" endtime="20201115 23:01:18.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.926" endtime="20201115 23:01:18.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.895" endtime="20201115 23:01:18.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.893" endtime="20201115 23:01:18.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.935" endtime="20201115 23:01:19.219"></status>
</kw>
<msg timestamp="20201115 23:01:19.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026992528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026998708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.933" endtime="20201115 23:01:19.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026992528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026998708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.224" endtime="20201115 23:01:19.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.232" endtime="20201115 23:01:19.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.931" endtime="20201115 23:01:19.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.929" endtime="20201115 23:01:19.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.238" level="INFO">${RESULT} = [{'time': 0.026998708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.027014389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:19.235" endtime="20201115 23:01:19.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.252" level="INFO">${ACCURACY} = {'time': [0.026998708, 0.027014389, 0.027030986, 0.027042083, 0.027058181, 0.027070403, 0.027081389, 0.027095056, 0.027106458, 0.027119514, 0.027136722, 0.02714875, 0.027163389, 0.027179153, 0.0271958...</msg>
<status status="PASS" starttime="20201115 23:01:19.240" endtime="20201115 23:01:19.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.256" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.255" endtime="20201115 23:01:19.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.259" level="INFO">VALUE: [6.180000000001462e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.1939999999975626e-06, 6.1939999999975626e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.291999999998021e-06, 6.179999999997993e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.165999999998423e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.237000000002685e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.236999999999215e-06, 6.2090000000000756e-06, 6.1389999999987566e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.235999999999742e-06, 6.1939999999975626e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.249999999999312e-06, 6.194999999997036e-06, 6.2090000000000756e-06, 6.221999999996702e-06]</msg>
<status status="PASS" starttime="20201115 23:01:19.258" endtime="20201115 23:01:19.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.253" endtime="20201115 23:01:19.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.262" endtime="20201115 23:01:19.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.265" endtime="20201115 23:01:19.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.264" endtime="20201115 23:01:19.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.260" endtime="20201115 23:01:19.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.892" endtime="20201115 23:01:19.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.890" endtime="20201115 23:01:19.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.889" endtime="20201115 23:01:19.287"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.289" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.297" endtime="20201115 23:01:19.316"></status>
</kw>
<msg timestamp="20201115 23:01:19.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.296" endtime="20201115 23:01:19.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.317" endtime="20201115 23:01:19.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.320" endtime="20201115 23:01:19.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.293" endtime="20201115 23:01:19.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.291" endtime="20201115 23:01:19.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.329" endtime="20201115 23:01:19.615"></status>
</kw>
<msg timestamp="20201115 23:01:19.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025818083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025824292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.328" endtime="20201115 23:01:19.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025818083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025824292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.620" endtime="20201115 23:01:19.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.628" endtime="20201115 23:01:19.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.325" endtime="20201115 23:01:19.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.323" endtime="20201115 23:01:19.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.635" level="INFO">${RESULT} = [{'time': 0.025824292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.025839653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:19.632" endtime="20201115 23:01:19.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.650" level="INFO">${ACCURACY} = {'time': [0.025824292, 0.025839653, 0.025853319, 0.025867431, 0.025882264, 0.025898375, 0.025911125, 0.025927097, 0.025937986, 0.025955333, 0.025967486, 0.025981153, 0.02599775, 0.026011653, 0.0260239...</msg>
<status status="PASS" starttime="20201115 23:01:19.636" endtime="20201115 23:01:19.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.655" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.653" endtime="20201115 23:01:19.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.657" level="INFO">VALUE: [6.2090000000000756e-06, 6.2090000000000756e-06, 6.179999999997993e-06, 6.167000000001366e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.180999999997466e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.278000000001921e-06, 6.2079999999971325e-06, 6.2639999999988816e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.194999999997036e-06, 6.1529999999983265e-06, 6.153000000001796e-06]</msg>
<status status="PASS" starttime="20201115 23:01:19.656" endtime="20201115 23:01:19.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.651" endtime="20201115 23:01:19.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.660" endtime="20201115 23:01:19.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.664" endtime="20201115 23:01:19.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.662" endtime="20201115 23:01:19.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.659" endtime="20201115 23:01:19.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.290" endtime="20201115 23:01:19.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.288" endtime="20201115 23:01:19.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.287" endtime="20201115 23:01:19.685"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.688" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.697" endtime="20201115 23:01:19.713"></status>
</kw>
<msg timestamp="20201115 23:01:19.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.695" endtime="20201115 23:01:19.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.714" endtime="20201115 23:01:19.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.717" endtime="20201115 23:01:19.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.692" endtime="20201115 23:01:19.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.690" endtime="20201115 23:01:19.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.727" endtime="20201115 23:01:20.014"></status>
</kw>
<msg timestamp="20201115 23:01:20.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024077458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024083611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.725" endtime="20201115 23:01:20.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024077458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024083611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.018" endtime="20201115 23:01:20.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.026" endtime="20201115 23:01:20.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.722" endtime="20201115 23:01:20.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.721" endtime="20201115 23:01:20.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.033" level="INFO">${RESULT} = [{'time': 0.024083611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.024097819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:20.030" endtime="20201115 23:01:20.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.046" level="INFO">${ACCURACY} = {'time': [0.024083611, 0.024097819, 0.024110167, 0.024127333, 0.024140069, 0.024156222, 0.024173153, 0.024187264, 0.024204597, 0.024217, 0.024231278, 0.024242861, 0.024260306, 0.024275139, 0.024286931...</msg>
<status status="PASS" starttime="20201115 23:01:20.034" endtime="20201115 23:01:20.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.051" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.050" endtime="20201115 23:01:20.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.053" level="INFO">VALUE: [6.153000000001796e-06, 6.208000000000602e-06, 6.208999999996606e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.111000000003086e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.139000000002226e-06, 6.278000000001921e-06, 6.1939999999975626e-06, 6.181000000000936e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.179999999997993e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2079999999971325e-06, 6.195000000000506e-06, 6.1939999999975626e-06, 6.2079999999971325e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.2229999999996455e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.167000000001366e-06, 6.151999999998853e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.180999999997466e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.208000000000602e-06]</msg>
<status status="PASS" starttime="20201115 23:01:20.052" endtime="20201115 23:01:20.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.047" endtime="20201115 23:01:20.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.056" endtime="20201115 23:01:20.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.060" endtime="20201115 23:01:20.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.058" endtime="20201115 23:01:20.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.055" endtime="20201115 23:01:20.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.689" endtime="20201115 23:01:20.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.687" endtime="20201115 23:01:20.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.686" endtime="20201115 23:01:20.081"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.083" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.092" endtime="20201115 23:01:20.115"></status>
</kw>
<msg timestamp="20201115 23:01:20.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.090" endtime="20201115 23:01:20.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.118" endtime="20201115 23:01:20.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.123" endtime="20201115 23:01:20.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.088" endtime="20201115 23:01:20.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.086" endtime="20201115 23:01:20.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.144" endtime="20201115 23:01:20.435"></status>
</kw>
<msg timestamp="20201115 23:01:20.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025487208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025493417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.141" endtime="20201115 23:01:20.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025487208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025493417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.439" endtime="20201115 23:01:20.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.448" endtime="20201115 23:01:20.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.135" endtime="20201115 23:01:20.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.132" endtime="20201115 23:01:20.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.454" level="INFO">${RESULT} = [{'time': 0.025493417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.025505972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:20.451" endtime="20201115 23:01:20.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.467" level="INFO">${ACCURACY} = {'time': [0.025493417, 0.025505972, 0.025519667, 0.025534917, 0.025548722, 0.025565653, 0.025580736, 0.025592722, 0.025603722, 0.025619806, 0.025631361, 0.025647292, 0.025662625, 0.025678514, 0.025691...</msg>
<status status="PASS" starttime="20201115 23:01:20.455" endtime="20201115 23:01:20.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.472" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.471" endtime="20201115 23:01:20.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.474" level="INFO">VALUE: [6.2090000000000756e-06, 6.2079999999971325e-06, 6.2090000000000756e-06, 6.2229999999996455e-06, 6.1529999999983265e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.1939999999975626e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.2639999999988816e-06, 6.194999999997036e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.194999999997036e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.166999999997896e-06, 6.167000000001366e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.167000000001366e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.179999999997993e-06, 6.2079999999971325e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.2079999999971325e-06, 6.195000000000506e-06, 6.2079999999971325e-06, 6.208000000000602e-06, 6.2079999999971325e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.236999999999215e-06, 6.194000000001032e-06, 6.124999999999187e-06, 6.194000000001032e-06, 6.153000000001796e-06, 6.195000000000506e-06, 6.2079999999971325e-06]</msg>
<status status="PASS" starttime="20201115 23:01:20.473" endtime="20201115 23:01:20.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.468" endtime="20201115 23:01:20.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.478" endtime="20201115 23:01:20.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.481" endtime="20201115 23:01:20.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.480" endtime="20201115 23:01:20.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.476" endtime="20201115 23:01:20.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.084" endtime="20201115 23:01:20.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.082" endtime="20201115 23:01:20.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.081" endtime="20201115 23:01:20.503"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.505" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.514" endtime="20201115 23:01:20.532"></status>
</kw>
<msg timestamp="20201115 23:01:20.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.512" endtime="20201115 23:01:20.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.533" endtime="20201115 23:01:20.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.536" endtime="20201115 23:01:20.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.509" endtime="20201115 23:01:20.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.507" endtime="20201115 23:01:20.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.545" endtime="20201115 23:01:20.832"></status>
</kw>
<msg timestamp="20201115 23:01:20.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025715653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025721861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.543" endtime="20201115 23:01:20.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025715653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025721861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.836" endtime="20201115 23:01:20.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.844" endtime="20201115 23:01:20.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.541" endtime="20201115 23:01:20.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.539" endtime="20201115 23:01:20.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.852" level="INFO">${RESULT} = [{'time': 0.025721861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2079999999971325e-06, 'source_diff': 6.2079999999971325e-06}, {'time': 0.025733625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:20.848" endtime="20201115 23:01:20.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.865" level="INFO">${ACCURACY} = {'time': [0.025721861, 0.025733625, 0.025746361, 0.025761069, 0.025772667, 0.025787611, 0.025799611, 0.025810722, 0.025822514, 0.025836611, 0.02585175, 0.025863056, 0.025876958, 0.025892472, 0.0259079...</msg>
<status status="PASS" starttime="20201115 23:01:20.853" endtime="20201115 23:01:20.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.870" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.869" endtime="20201115 23:01:20.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.872" level="INFO">VALUE: [6.2079999999971325e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.1939999999975626e-06, 6.292000000001491e-06, 6.153000000001796e-06, 6.195000000000506e-06, 6.1939999999975626e-06, 6.194000000001032e-06, 6.1529999999983265e-06, 6.2079999999971325e-06, 6.249999999999312e-06, 6.264000000002351e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.2079999999971325e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.223000000003115e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.2079999999971325e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.194999999997036e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.194000000001032e-06]</msg>
<status status="PASS" starttime="20201115 23:01:20.871" endtime="20201115 23:01:20.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.866" endtime="20201115 23:01:20.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.876" endtime="20201115 23:01:20.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.879" endtime="20201115 23:01:20.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.878" endtime="20201115 23:01:20.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.874" endtime="20201115 23:01:20.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.505" endtime="20201115 23:01:20.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.504" endtime="20201115 23:01:20.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.503" endtime="20201115 23:01:20.901"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.903" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.911" endtime="20201115 23:01:20.928"></status>
</kw>
<msg timestamp="20201115 23:01:20.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.910" endtime="20201115 23:01:20.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.930" endtime="20201115 23:01:20.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.932" endtime="20201115 23:01:20.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.907" endtime="20201115 23:01:20.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.905" endtime="20201115 23:01:20.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.941" endtime="20201115 23:01:21.226"></status>
</kw>
<msg timestamp="20201115 23:01:21.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024582819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024589083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.940" endtime="20201115 23:01:21.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024582819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024589083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.230" endtime="20201115 23:01:21.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.238" endtime="20201115 23:01:21.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.937" endtime="20201115 23:01:21.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.935" endtime="20201115 23:01:21.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.245" level="INFO">${RESULT} = [{'time': 0.024589083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.024606486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:21.242" endtime="20201115 23:01:21.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.259" level="INFO">${ACCURACY} = {'time': [0.024589083, 0.024606486, 0.024620153, 0.024632972, 0.024648556, 0.024659653, 0.024675319, 0.024689875, 0.024705319, 0.024719958, 0.024732806, 0.024743917, 0.024756139, 0.024769431, 0.024783...</msg>
<status status="PASS" starttime="20201115 23:01:21.246" endtime="20201115 23:01:21.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.264" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.263" endtime="20201115 23:01:21.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.267" level="INFO">VALUE: [6.264000000002351e-06, 6.235999999999742e-06, 6.166999999997896e-06, 6.194000000001032e-06, 6.194999999997036e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.139000000002226e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.1939999999975626e-06, 6.180000000001462e-06, 6.166000000001892e-06, 6.235999999999742e-06, 6.179999999997993e-06, 6.2090000000000756e-06, 6.139000000002226e-06, 6.166999999997896e-06, 6.179999999997993e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.1939999999975626e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.194000000001032e-06]</msg>
<status status="PASS" starttime="20201115 23:01:21.265" endtime="20201115 23:01:21.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.260" endtime="20201115 23:01:21.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.270" endtime="20201115 23:01:21.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.273" endtime="20201115 23:01:21.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.272" endtime="20201115 23:01:21.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.268" endtime="20201115 23:01:21.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.904" endtime="20201115 23:01:21.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.902" endtime="20201115 23:01:21.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.901" endtime="20201115 23:01:21.295"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.297" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.305" endtime="20201115 23:01:21.330"></status>
</kw>
<msg timestamp="20201115 23:01:21.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.304" endtime="20201115 23:01:21.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.331" endtime="20201115 23:01:21.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.334" endtime="20201115 23:01:21.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.301" endtime="20201115 23:01:21.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.299" endtime="20201115 23:01:21.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.343" endtime="20201115 23:01:21.630"></status>
</kw>
<msg timestamp="20201115 23:01:21.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027524639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027530833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.341" endtime="20201115 23:01:21.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027524639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027530833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.634" endtime="20201115 23:01:21.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.642" endtime="20201115 23:01:21.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.339" endtime="20201115 23:01:21.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.337" endtime="20201115 23:01:21.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.649" level="INFO">${RESULT} = [{'time': 0.027530833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.02754425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:21.646" endtime="20201115 23:01:21.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.663" level="INFO">${ACCURACY} = {'time': [0.027530833, 0.02754425, 0.027558292, 0.027575722, 0.027588986, 0.027602375, 0.027613583, 0.0276285, 0.027645708, 0.027661181, 0.027675181, 0.027690861, 0.027703833, 0.027721181, 0.027733319...</msg>
<status status="PASS" starttime="20201115 23:01:21.650" endtime="20201115 23:01:21.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.667" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.666" endtime="20201115 23:01:21.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.670" level="INFO">VALUE: [6.194000000001032e-06, 6.235999999999742e-06, 6.236000000003211e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.221999999996702e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.179999999997993e-06, 6.1939999999975626e-06, 6.2229999999996455e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.180999999997466e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.290999999998548e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.1939999999975626e-06, 6.2229999999996455e-06, 6.195000000000506e-06]</msg>
<status status="PASS" starttime="20201115 23:01:21.668" endtime="20201115 23:01:21.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.664" endtime="20201115 23:01:21.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.673" endtime="20201115 23:01:21.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.676" endtime="20201115 23:01:21.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.675" endtime="20201115 23:01:21.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.671" endtime="20201115 23:01:21.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.298" endtime="20201115 23:01:21.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.296" endtime="20201115 23:01:21.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.295" endtime="20201115 23:01:21.697"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.700" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.708" endtime="20201115 23:01:21.726"></status>
</kw>
<msg timestamp="20201115 23:01:21.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.706" endtime="20201115 23:01:21.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.728" endtime="20201115 23:01:21.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.730" endtime="20201115 23:01:21.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.704" endtime="20201115 23:01:21.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.702" endtime="20201115 23:01:21.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.739" endtime="20201115 23:01:22.027"></status>
</kw>
<msg timestamp="20201115 23:01:22.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026705444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026711625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.738" endtime="20201115 23:01:22.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026705444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026711625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.031" endtime="20201115 23:01:22.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.046" endtime="20201115 23:01:22.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.735" endtime="20201115 23:01:22.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.734" endtime="20201115 23:01:22.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.053" level="INFO">${RESULT} = [{'time': 0.026711625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.026722528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:22.049" endtime="20201115 23:01:22.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.066" level="INFO">${ACCURACY} = {'time': [0.026711625, 0.026722528, 0.026739944, 0.0267525, 0.026768167, 0.026782681, 0.026796361, 0.026812875, 0.026829889, 0.026846389, 0.026858125, 0.026870264, 0.026884472, 0.026896458, 0.02691225...</msg>
<status status="PASS" starttime="20201115 23:01:22.054" endtime="20201115 23:01:22.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.071" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.070" endtime="20201115 23:01:22.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.073" level="INFO">VALUE: [6.181000000000936e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.180999999997466e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.221999999996702e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.264000000002351e-06, 6.2779999999984515e-06, 6.181000000000936e-06, 6.236000000003211e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.2229999999996455e-06, 6.180000000001462e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.2639999999988816e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.194999999997036e-06, 6.1939999999975626e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.1389999999987566e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.194000000001032e-06]</msg>
<status status="PASS" starttime="20201115 23:01:22.072" endtime="20201115 23:01:22.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.067" endtime="20201115 23:01:22.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.076" endtime="20201115 23:01:22.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.080" endtime="20201115 23:01:22.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.078" endtime="20201115 23:01:22.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.074" endtime="20201115 23:01:22.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.700" endtime="20201115 23:01:22.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.699" endtime="20201115 23:01:22.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.698" endtime="20201115 23:01:22.101"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.103" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.111" endtime="20201115 23:01:22.129"></status>
</kw>
<msg timestamp="20201115 23:01:22.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.110" endtime="20201115 23:01:22.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.131" endtime="20201115 23:01:22.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.133" endtime="20201115 23:01:22.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.107" endtime="20201115 23:01:22.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.105" endtime="20201115 23:01:22.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.143" endtime="20201115 23:01:22.427"></status>
</kw>
<msg timestamp="20201115 23:01:22.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025291514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025297736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.141" endtime="20201115 23:01:22.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025291514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025297736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.431" endtime="20201115 23:01:22.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.439" endtime="20201115 23:01:22.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.138" endtime="20201115 23:01:22.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.136" endtime="20201115 23:01:22.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.446" level="INFO">${RESULT} = [{'time': 0.025297736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.025309528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:22.442" endtime="20201115 23:01:22.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.459" level="INFO">${ACCURACY} = {'time': [0.025297736, 0.025309528, 0.025323111, 0.025336333, 0.025350139, 0.025361792, 0.025377278, 0.025390139, 0.025404444, 0.025418972, 0.025436375, 0.025447958, 0.025462556, 0.025474181, 0.025488...</msg>
<status status="PASS" starttime="20201115 23:01:22.447" endtime="20201115 23:01:22.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.464" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.463" endtime="20201115 23:01:22.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.466" level="INFO">VALUE: [6.222000000000172e-06, 6.181000000000936e-06, 6.2079999999971325e-06, 6.179999999997993e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.180999999997466e-06, 6.138000000002752e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.276999999998978e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6.221999999996702e-06, 6.1939999999975626e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.291999999998021e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.180999999997466e-06, 6.1939999999975626e-06, 6.180999999997466e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.152000000002322e-06, 6.167000000001366e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.305000000001587e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.2229999999996455e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.179999999997993e-06, 6.124999999999187e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.195000000000506e-06]</msg>
<status status="PASS" starttime="20201115 23:01:22.465" endtime="20201115 23:01:22.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.460" endtime="20201115 23:01:22.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.469" endtime="20201115 23:01:22.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.472" endtime="20201115 23:01:22.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.471" endtime="20201115 23:01:22.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.467" endtime="20201115 23:01:22.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.104" endtime="20201115 23:01:22.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.102" endtime="20201115 23:01:22.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.101" endtime="20201115 23:01:22.494"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.496" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.504" endtime="20201115 23:01:22.521"></status>
</kw>
<msg timestamp="20201115 23:01:22.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.503" endtime="20201115 23:01:22.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.523" endtime="20201115 23:01:22.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.526" endtime="20201115 23:01:22.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.500" endtime="20201115 23:01:22.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.498" endtime="20201115 23:01:22.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.535" endtime="20201115 23:01:22.819"></status>
</kw>
<msg timestamp="20201115 23:01:22.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024283875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024290083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.533" endtime="20201115 23:01:22.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024283875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024290083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.823" endtime="20201115 23:01:22.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.831" endtime="20201115 23:01:22.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.531" endtime="20201115 23:01:22.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.529" endtime="20201115 23:01:22.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.838" level="INFO">${RESULT} = [{'time': 0.024290083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.024306597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:22.835" endtime="20201115 23:01:22.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.852" level="INFO">${ACCURACY} = {'time': [0.024290083, 0.024306597, 0.024321653, 0.024333792, 0.02434575, 0.024359, 0.024372042, 0.024388653, 0.024405347, 0.024417083, 0.024430056, 0.024444597, 0.024458389, 0.024471347, 0.024482528,...</msg>
<status status="PASS" starttime="20201115 23:01:22.839" endtime="20201115 23:01:22.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.857" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.856" endtime="20201115 23:01:22.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.859" level="INFO">VALUE: [6.208000000000602e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.2079999999971325e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.2079999999971325e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.208999999996606e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.180999999997466e-06, 6.222000000000172e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.1939999999975626e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.181000000000936e-06, 6.1939999999975626e-06, 6.194000000001032e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201115 23:01:22.858" endtime="20201115 23:01:22.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.853" endtime="20201115 23:01:22.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.862" endtime="20201115 23:01:22.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.866" endtime="20201115 23:01:22.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.864" endtime="20201115 23:01:22.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.861" endtime="20201115 23:01:22.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.497" endtime="20201115 23:01:22.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.495" endtime="20201115 23:01:22.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.494" endtime="20201115 23:01:22.887"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.890" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.899" endtime="20201115 23:01:22.917"></status>
</kw>
<msg timestamp="20201115 23:01:22.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.897" endtime="20201115 23:01:22.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.919" endtime="20201115 23:01:22.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.921" endtime="20201115 23:01:22.923"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.894" endtime="20201115 23:01:22.923"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.892" endtime="20201115 23:01:22.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.930" endtime="20201115 23:01:23.214"></status>
</kw>
<msg timestamp="20201115 23:01:23.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027871528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02787775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:22.929" endtime="20201115 23:01:23.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027871528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02787775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:23.218" endtime="20201115 23:01:23.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.227" endtime="20201115 23:01:23.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.926" endtime="20201115 23:01:23.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.924" endtime="20201115 23:01:23.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.233" level="INFO">${RESULT} = [{'time': 0.02787775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.027893028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:23.230" endtime="20201115 23:01:23.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.246" level="INFO">${ACCURACY} = {'time': [0.02787775, 0.027893028, 0.027908361, 0.027924111, 0.027939681, 0.027952528, 0.027969958, 0.027983986, 0.027996806, 0.028012625, 0.028026722, 0.02804125, 0.028053875, 0.028071083, 0.02808809...</msg>
<status status="PASS" starttime="20201115 23:01:23.234" endtime="20201115 23:01:23.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.251" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.250" endtime="20201115 23:01:23.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.253" level="INFO">VALUE: [6.222000000000172e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.2779999999984515e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.1939999999975626e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.2779999999984515e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.179999999997993e-06, 6.222000000000172e-06, 6.180000000001462e-06, 6.179999999997993e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.167000000001366e-06, 6.1939999999975626e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.139000000002226e-06, 6.195000000000506e-06]</msg>
<status status="PASS" starttime="20201115 23:01:23.252" endtime="20201115 23:01:23.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.247" endtime="20201115 23:01:23.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.256" endtime="20201115 23:01:23.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.260" endtime="20201115 23:01:23.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.258" endtime="20201115 23:01:23.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.255" endtime="20201115 23:01:23.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.891" endtime="20201115 23:01:23.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.889" endtime="20201115 23:01:23.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.888" endtime="20201115 23:01:23.282"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.284" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.292" endtime="20201115 23:01:23.310"></status>
</kw>
<msg timestamp="20201115 23:01:23.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.290" endtime="20201115 23:01:23.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.311" endtime="20201115 23:01:23.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.314" endtime="20201115 23:01:23.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.288" endtime="20201115 23:01:23.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.286" endtime="20201115 23:01:23.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.323" endtime="20201115 23:01:23.609"></status>
</kw>
<msg timestamp="20201115 23:01:23.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025585833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025592042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.322" endtime="20201115 23:01:23.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025585833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025592042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.613" endtime="20201115 23:01:23.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.621" endtime="20201115 23:01:23.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.319" endtime="20201115 23:01:23.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.317" endtime="20201115 23:01:23.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.628" level="INFO">${RESULT} = [{'time': 0.025592042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.025603639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:23.624" endtime="20201115 23:01:23.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.641" level="INFO">${ACCURACY} = {'time': [0.025592042, 0.025603639, 0.025617958, 0.025629778, 0.025644069, 0.025661083, 0.025674264, 0.025685778, 0.025697611, 0.025711083, 0.02572575, 0.025743139, 0.025757597, 0.025769167, 0.0257844...</msg>
<status status="PASS" starttime="20201115 23:01:23.629" endtime="20201115 23:01:23.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.645" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.644" endtime="20201115 23:01:23.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.648" level="INFO">VALUE: [6.2090000000000756e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.1939999999975626e-06, 6.166000000001892e-06, 6.180999999997466e-06, 6.195000000000506e-06, 6.2079999999971325e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.236000000003211e-06, 6.235999999999742e-06, 6.2639999999988816e-06, 6.222000000000172e-06, 6.1389999999987566e-06, 6.194999999997036e-06, 6.208000000000602e-06, 6.250000000002781e-06, 6.2229999999996455e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.2079999999971325e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.139000000002226e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.180999999997466e-06, 6.179999999997993e-06, 6.2639999999988816e-06, 6.2079999999971325e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.125000000002656e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.179999999997993e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.1529999999983265e-06]</msg>
<status status="PASS" starttime="20201115 23:01:23.646" endtime="20201115 23:01:23.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.642" endtime="20201115 23:01:23.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.651" endtime="20201115 23:01:23.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.655" endtime="20201115 23:01:23.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.653" endtime="20201115 23:01:23.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.650" endtime="20201115 23:01:23.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.284" endtime="20201115 23:01:23.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.283" endtime="20201115 23:01:23.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.282" endtime="20201115 23:01:23.676"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.678" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.686" endtime="20201115 23:01:23.704"></status>
</kw>
<msg timestamp="20201115 23:01:23.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.685" endtime="20201115 23:01:23.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.705" endtime="20201115 23:01:23.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.708" endtime="20201115 23:01:23.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.682" endtime="20201115 23:01:23.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.680" endtime="20201115 23:01:23.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.717" endtime="20201115 23:01:24.002"></status>
</kw>
<msg timestamp="20201115 23:01:24.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022746208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022752389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.715" endtime="20201115 23:01:24.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022746208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022752389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.006" endtime="20201115 23:01:24.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.014" endtime="20201115 23:01:24.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.713" endtime="20201115 23:01:24.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.711" endtime="20201115 23:01:24.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.021" level="INFO">${RESULT} = [{'time': 0.022752389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.022768264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:24.017" endtime="20201115 23:01:24.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.034" level="INFO">${ACCURACY} = {'time': [0.022752389, 0.022768264, 0.022781694, 0.022796417, 0.022808958, 0.022826181, 0.022841444, 0.022857125, 0.022869056, 0.022881694, 0.022897681, 0.022910319, 0.022921417, 0.022938431, 0.022950...</msg>
<status status="PASS" starttime="20201115 23:01:24.022" endtime="20201115 23:01:24.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.038" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.037" endtime="20201115 23:01:24.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.041" level="INFO">VALUE: [6.181000000000936e-06, 6.222000000000172e-06, 6.180000000001462e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.2090000000000756e-06, 6.1389999999987566e-06, 6.2779999999984515e-06, 6.194000000001032e-06, 6.180999999997466e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.237000000002685e-06, 6.194999999997036e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.2079999999971325e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.167000000001366e-06, 6.208000000000602e-06, 6.166000000001892e-06, 6.208999999996606e-06]</msg>
<status status="PASS" starttime="20201115 23:01:24.039" endtime="20201115 23:01:24.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.035" endtime="20201115 23:01:24.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.044" endtime="20201115 23:01:24.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.048" endtime="20201115 23:01:24.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.046" endtime="20201115 23:01:24.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.043" endtime="20201115 23:01:24.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.679" endtime="20201115 23:01:24.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.677" endtime="20201115 23:01:24.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.676" endtime="20201115 23:01:24.069"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.071" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.079" endtime="20201115 23:01:24.098"></status>
</kw>
<msg timestamp="20201115 23:01:24.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.078" endtime="20201115 23:01:24.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.100" endtime="20201115 23:01:24.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.102" endtime="20201115 23:01:24.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.075" endtime="20201115 23:01:24.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.073" endtime="20201115 23:01:24.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.111" endtime="20201115 23:01:24.397"></status>
</kw>
<msg timestamp="20201115 23:01:24.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026443681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026449903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.109" endtime="20201115 23:01:24.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026443681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026449903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.401" endtime="20201115 23:01:24.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.410" endtime="20201115 23:01:24.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.107" endtime="20201115 23:01:24.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.105" endtime="20201115 23:01:24.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.416" level="INFO">${RESULT} = [{'time': 0.026449903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.026462528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:24.413" endtime="20201115 23:01:24.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.431" level="INFO">${ACCURACY} = {'time': [0.026449903, 0.026462528, 0.026477458, 0.026490931, 0.026502528, 0.026514458, 0.026527639, 0.026541944, 0.026559292, 0.026571444, 0.026588639, 0.026603486, 0.026618236, 0.026632653, 0.026647...</msg>
<status status="PASS" starttime="20201115 23:01:24.418" endtime="20201115 23:01:24.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.436" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.435" endtime="20201115 23:01:24.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.438" level="INFO">VALUE: [6.222000000000172e-06, 6.1529999999983265e-06, 6.1939999999975626e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.2079999999971325e-06, 6.152000000002322e-06, 6.223000000003115e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.166999999997896e-06, 6.235999999999742e-06, 6.167000000001366e-06, 6.2079999999971325e-06, 6.124999999999187e-06, 6.1939999999975626e-06, 6.249999999999312e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.165999999998423e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.179999999997993e-06, 6.222000000000172e-06, 6.236000000003211e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.223000000003115e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.264000000002351e-06]</msg>
<status status="PASS" starttime="20201115 23:01:24.437" endtime="20201115 23:01:24.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.432" endtime="20201115 23:01:24.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.441" endtime="20201115 23:01:24.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.445" endtime="20201115 23:01:24.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.443" endtime="20201115 23:01:24.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.440" endtime="20201115 23:01:24.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.072" endtime="20201115 23:01:24.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.070" endtime="20201115 23:01:24.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.069" endtime="20201115 23:01:24.466"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.468" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.476" endtime="20201115 23:01:24.498"></status>
</kw>
<msg timestamp="20201115 23:01:24.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.475" endtime="20201115 23:01:24.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.499" endtime="20201115 23:01:24.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.502" endtime="20201115 23:01:24.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.472" endtime="20201115 23:01:24.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.470" endtime="20201115 23:01:24.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.511" endtime="20201115 23:01:24.797"></status>
</kw>
<msg timestamp="20201115 23:01:24.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026656792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026663014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.509" endtime="20201115 23:01:24.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026656792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026663014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.801" endtime="20201115 23:01:24.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.810" endtime="20201115 23:01:24.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.507" endtime="20201115 23:01:24.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.505" endtime="20201115 23:01:24.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.817" level="INFO">${RESULT} = [{'time': 0.026663014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.026674292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:24.813" endtime="20201115 23:01:24.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.830" level="INFO">${ACCURACY} = {'time': [0.026663014, 0.026674292, 0.026688597, 0.026704903, 0.026720875, 0.026734556, 0.026749819, 0.026764111, 0.026779167, 0.026796306, 0.026808861, 0.026823292, 0.026835042, 0.026847569, 0.026861...</msg>
<status status="PASS" starttime="20201115 23:01:24.818" endtime="20201115 23:01:24.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.834" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.833" endtime="20201115 23:01:24.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.837" level="INFO">VALUE: [6.222000000000172e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.194999999997036e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.180999999997466e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.180999999997466e-06, 6.2090000000000756e-06, 6.237000000002685e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.2079999999971325e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.222000000000172e-06, 6.208999999996606e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.249999999999312e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.1529999999983265e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.2639999999988816e-06, 6.195000000000506e-06, 6.180999999997466e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.124999999999187e-06, 6.235999999999742e-06, 6.194999999997036e-06, 6.208000000000602e-06]</msg>
<status status="PASS" starttime="20201115 23:01:24.836" endtime="20201115 23:01:24.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.831" endtime="20201115 23:01:24.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.840" endtime="20201115 23:01:24.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.843" endtime="20201115 23:01:24.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.842" endtime="20201115 23:01:24.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.838" endtime="20201115 23:01:24.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.469" endtime="20201115 23:01:24.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.467" endtime="20201115 23:01:24.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.466" endtime="20201115 23:01:24.865"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.867" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.875" endtime="20201115 23:01:24.892"></status>
</kw>
<msg timestamp="20201115 23:01:24.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.874" endtime="20201115 23:01:24.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.894" endtime="20201115 23:01:24.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.896" endtime="20201115 23:01:24.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.871" endtime="20201115 23:01:24.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.869" endtime="20201115 23:01:24.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.906" endtime="20201115 23:01:25.194"></status>
</kw>
<msg timestamp="20201115 23:01:25.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024747514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024753708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.904" endtime="20201115 23:01:25.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024747514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024753708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.198" endtime="20201115 23:01:25.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.206" endtime="20201115 23:01:25.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.901" endtime="20201115 23:01:25.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.900" endtime="20201115 23:01:25.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.213" level="INFO">${RESULT} = [{'time': 0.024753708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1939999999975626e-06, 'source_diff': 6.1939999999975626e-06}, {'time': 0.024767514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:25.209" endtime="20201115 23:01:25.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.226" level="INFO">${ACCURACY} = {'time': [0.024753708, 0.024767514, 0.024784722, 0.024798819, 0.024812708, 0.024828597, 0.024840611, 0.024855958, 0.024869181, 0.024880667, 0.02489425, 0.024910639, 0.024925681, 0.024939278, 0.0249526...</msg>
<status status="PASS" starttime="20201115 23:01:25.214" endtime="20201115 23:01:25.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.231" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.230" endtime="20201115 23:01:25.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.233" level="INFO">VALUE: [6.1939999999975626e-06, 6.222000000000172e-06, 6.179999999997993e-06, 6.194000000001032e-06, 6.179999999997993e-06, 6.222000000000172e-06, 6.1939999999975626e-06, 6.180000000001462e-06, 6.264000000002351e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.194999999997036e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.1939999999975626e-06, 6.1529999999983265e-06, 6.195000000000506e-06, 6.264000000002351e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.2079999999971325e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.305999999997591e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.236000000003211e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.2079999999971325e-06, 6.2639999999988816e-06, 6.2229999999996455e-06, 6.110999999999617e-06, 6.2090000000000756e-06]</msg>
<status status="PASS" starttime="20201115 23:01:25.232" endtime="20201115 23:01:25.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.227" endtime="20201115 23:01:25.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.236" endtime="20201115 23:01:25.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.240" endtime="20201115 23:01:25.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.238" endtime="20201115 23:01:25.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.234" endtime="20201115 23:01:25.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.868" endtime="20201115 23:01:25.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.866" endtime="20201115 23:01:25.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.865" endtime="20201115 23:01:25.261"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.263" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.271" endtime="20201115 23:01:25.289"></status>
</kw>
<msg timestamp="20201115 23:01:25.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.270" endtime="20201115 23:01:25.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.291" endtime="20201115 23:01:25.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.293" endtime="20201115 23:01:25.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.267" endtime="20201115 23:01:25.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.265" endtime="20201115 23:01:25.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.303" endtime="20201115 23:01:25.587"></status>
</kw>
<msg timestamp="20201115 23:01:25.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025468139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025474347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.301" endtime="20201115 23:01:25.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025468139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025474347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.591" endtime="20201115 23:01:25.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.599" endtime="20201115 23:01:25.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.298" endtime="20201115 23:01:25.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.297" endtime="20201115 23:01:25.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.606" level="INFO">${RESULT} = [{'time': 0.025474347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.025487611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:25.603" endtime="20201115 23:01:25.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.619" level="INFO">${ACCURACY} = {'time': [0.025474347, 0.025487611, 0.025502028, 0.025518417, 0.025532208, 0.025549181, 0.025563306, 0.025577556, 0.025589583, 0.025603389, 0.025618444, 0.025630792, 0.025644889, 0.025659194, 0.025671...</msg>
<status status="PASS" starttime="20201115 23:01:25.607" endtime="20201115 23:01:25.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.624" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.623" endtime="20201115 23:01:25.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.626" level="INFO">VALUE: [6.208000000000602e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.2229999999996455e-06, 6.250000000002781e-06, 6.1939999999975626e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.1529999999983265e-06, 6.179999999997993e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.180000000001462e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.236000000003211e-06, 6.1389999999987566e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.291999999998021e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.180999999997466e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.2079999999971325e-06, 6.194000000001032e-06, 6.223000000003115e-06, 6.179999999997993e-06, 6.180000000001462e-06]</msg>
<status status="PASS" starttime="20201115 23:01:25.625" endtime="20201115 23:01:25.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.620" endtime="20201115 23:01:25.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.629" endtime="20201115 23:01:25.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.633" endtime="20201115 23:01:25.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.631" endtime="20201115 23:01:25.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.628" endtime="20201115 23:01:25.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.264" endtime="20201115 23:01:25.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.262" endtime="20201115 23:01:25.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.261" endtime="20201115 23:01:25.654"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.656" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.665" endtime="20201115 23:01:25.684"></status>
</kw>
<msg timestamp="20201115 23:01:25.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.663" endtime="20201115 23:01:25.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.686" endtime="20201115 23:01:25.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.689" endtime="20201115 23:01:25.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.660" endtime="20201115 23:01:25.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.658" endtime="20201115 23:01:25.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.698" endtime="20201115 23:01:25.985"></status>
</kw>
<msg timestamp="20201115 23:01:25.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024009653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024015861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.696" endtime="20201115 23:01:25.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024009653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024015861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.989" endtime="20201115 23:01:25.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.998" endtime="20201115 23:01:25.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.693" endtime="20201115 23:01:26.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.692" endtime="20201115 23:01:26.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.004" level="INFO">${RESULT} = [{'time': 0.024015861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.024033083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:26.001" endtime="20201115 23:01:26.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.019" level="INFO">${ACCURACY} = {'time': [0.024015861, 0.024033083, 0.024048569, 0.024066, 0.024080431, 0.024094403, 0.024111722, 0.024126208, 0.024138611, 0.024149736, 0.02416375, 0.024177958, 0.024189986, 0.024205194, 0.024221458,...</msg>
<status status="PASS" starttime="20201115 23:01:26.005" endtime="20201115 23:01:26.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.023" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.022" endtime="20201115 23:01:26.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.026" level="INFO">VALUE: [6.208000000000602e-06, 6.194000000001032e-06, 6.2079999999971325e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.2090000000000756e-06, 6.2079999999971325e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.236000000003211e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.276999999998978e-06, 6.250000000002781e-06, 6.222000000000172e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 6.236000000003211e-06, 6.222000000000172e-06, 6.1389999999987566e-06, 6.2090000000000756e-06, 6.236999999999215e-06, 6.194000000001032e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.153000000001796e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.237000000002685e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.2229999999996455e-06]</msg>
<status status="PASS" starttime="20201115 23:01:26.024" endtime="20201115 23:01:26.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.020" endtime="20201115 23:01:26.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.029" endtime="20201115 23:01:26.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.032" endtime="20201115 23:01:26.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.031" endtime="20201115 23:01:26.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.027" endtime="20201115 23:01:26.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.657" endtime="20201115 23:01:26.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.655" endtime="20201115 23:01:26.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.654" endtime="20201115 23:01:26.054"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.056" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.064" endtime="20201115 23:01:26.083"></status>
</kw>
<msg timestamp="20201115 23:01:26.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.063" endtime="20201115 23:01:26.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.085" endtime="20201115 23:01:26.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.087" endtime="20201115 23:01:26.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.060" endtime="20201115 23:01:26.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.058" endtime="20201115 23:01:26.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.096" endtime="20201115 23:01:26.383"></status>
</kw>
<msg timestamp="20201115 23:01:26.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026601625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026607819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.095" endtime="20201115 23:01:26.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026601625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026607819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.388" endtime="20201115 23:01:26.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.396" endtime="20201115 23:01:26.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.092" endtime="20201115 23:01:26.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.091" endtime="20201115 23:01:26.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.402" level="INFO">${RESULT} = [{'time': 0.026607819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.026622903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:26.399" endtime="20201115 23:01:26.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.416" level="INFO">${ACCURACY} = {'time': [0.026607819, 0.026622903, 0.026639597, 0.026655069, 0.026669167, 0.026681722, 0.026698653, 0.026715958, 0.026728097, 0.026739208, 0.026751236, 0.026768153, 0.026780917, 0.026797097, 0.026810...</msg>
<status status="PASS" starttime="20201115 23:01:26.403" endtime="20201115 23:01:26.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.420" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.419" endtime="20201115 23:01:26.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.423" level="INFO">VALUE: [6.194000000001032e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.277000000002447e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.2229999999996455e-06, 6.180000000001462e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.1939999999975626e-06, 6.221999999996702e-06, 6.166000000001892e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.167000000001366e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.1389999999987566e-06, 6.2639999999988816e-06, 6.2229999999996455e-06, 6.2079999999971325e-06, 6.151999999998853e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.194999999997036e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.2229999999996455e-06, 6.180000000001462e-06]</msg>
<status status="PASS" starttime="20201115 23:01:26.421" endtime="20201115 23:01:26.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.417" endtime="20201115 23:01:26.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.426" endtime="20201115 23:01:26.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.430" endtime="20201115 23:01:26.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.428" endtime="20201115 23:01:26.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.425" endtime="20201115 23:01:26.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.057" endtime="20201115 23:01:26.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.055" endtime="20201115 23:01:26.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.054" endtime="20201115 23:01:26.451"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.453" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.461" endtime="20201115 23:01:26.480"></status>
</kw>
<msg timestamp="20201115 23:01:26.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.460" endtime="20201115 23:01:26.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.481" endtime="20201115 23:01:26.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.484" endtime="20201115 23:01:26.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.457" endtime="20201115 23:01:26.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.455" endtime="20201115 23:01:26.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.493" endtime="20201115 23:01:26.779"></status>
</kw>
<msg timestamp="20201115 23:01:26.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025870694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025876889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.491" endtime="20201115 23:01:26.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025870694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025876889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.784" endtime="20201115 23:01:26.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.792" endtime="20201115 23:01:26.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.489" endtime="20201115 23:01:26.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.487" endtime="20201115 23:01:26.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.798" level="INFO">${RESULT} = [{'time': 0.025876889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.025888208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:26.795" endtime="20201115 23:01:26.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.812" level="INFO">${ACCURACY} = {'time': [0.025876889, 0.025888208, 0.025900014, 0.0259135, 0.025925278, 0.025939653, 0.025951014, 0.025967792, 0.025983264, 0.026000472, 0.026015319, 0.026028597, 0.026044875, 0.026057611, 0.02607034...</msg>
<status status="PASS" starttime="20201115 23:01:26.799" endtime="20201115 23:01:26.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.816" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.815" endtime="20201115 23:01:26.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.819" level="INFO">VALUE: [6.195000000000506e-06, 6.1389999999987566e-06, 6.195000000000506e-06, 6.180999999997466e-06, 6.2639999999988816e-06, 6.2090000000000756e-06, 6.264000000002351e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.151999999998853e-06, 6.180000000001462e-06, 6.1939999999975626e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.166999999997896e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.124999999999187e-06, 6.2229999999996455e-06, 6.167000000001366e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.179999999997993e-06, 6.180000000001462e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.194999999997036e-06, 6.2090000000000756e-06, 6.2079999999971325e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.166999999997896e-06, 6.1529999999983265e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.153000000001796e-06]</msg>
<status status="PASS" starttime="20201115 23:01:26.817" endtime="20201115 23:01:26.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.813" endtime="20201115 23:01:26.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.822" endtime="20201115 23:01:26.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.826" endtime="20201115 23:01:26.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.824" endtime="20201115 23:01:26.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.821" endtime="20201115 23:01:26.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.454" endtime="20201115 23:01:26.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.452" endtime="20201115 23:01:26.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.451" endtime="20201115 23:01:26.847"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.849" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.857" endtime="20201115 23:01:26.881"></status>
</kw>
<msg timestamp="20201115 23:01:26.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.856" endtime="20201115 23:01:26.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.883" endtime="20201115 23:01:26.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.885" endtime="20201115 23:01:26.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.853" endtime="20201115 23:01:26.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.851" endtime="20201115 23:01:26.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.894" endtime="20201115 23:01:27.180"></status>
</kw>
<msg timestamp="20201115 23:01:27.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027002056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02700825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:26.893" endtime="20201115 23:01:27.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027002056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02700825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:27.184" endtime="20201115 23:01:27.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.192" endtime="20201115 23:01:27.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.890" endtime="20201115 23:01:27.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.889" endtime="20201115 23:01:27.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.199" level="INFO">${RESULT} = [{'time': 0.02700825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.027024153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:27.195" endtime="20201115 23:01:27.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.216" level="INFO">${ACCURACY} = {'time': [0.02700825, 0.027024153, 0.027035681, 0.027046639, 0.027062403, 0.027077764, 0.027093625, 0.027109306, 0.027120417, 0.027131389, 0.02714875, 0.027162611, 0.027177556, 0.027192514, 0.02720572...</msg>
<status status="PASS" starttime="20201115 23:01:27.203" endtime="20201115 23:01:27.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.220" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.219" endtime="20201115 23:01:27.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.223" level="INFO">VALUE: [6.194000000001032e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.181000000000936e-06, 6.194999999997036e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.180999999997466e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.222000000000172e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.1389999999987566e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.167000000001366e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.180999999997466e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.2090000000000756e-06]</msg>
<status status="PASS" starttime="20201115 23:01:27.221" endtime="20201115 23:01:27.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.217" endtime="20201115 23:01:27.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.226" endtime="20201115 23:01:27.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.229" endtime="20201115 23:01:27.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.228" endtime="20201115 23:01:27.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.224" endtime="20201115 23:01:27.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.850" endtime="20201115 23:01:27.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.848" endtime="20201115 23:01:27.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.847" endtime="20201115 23:01:27.250"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.253" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.261" endtime="20201115 23:01:27.279"></status>
</kw>
<msg timestamp="20201115 23:01:27.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.259" endtime="20201115 23:01:27.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.281" endtime="20201115 23:01:27.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.283" endtime="20201115 23:01:27.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.257" endtime="20201115 23:01:27.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.255" endtime="20201115 23:01:27.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.292" endtime="20201115 23:01:27.576"></status>
</kw>
<msg timestamp="20201115 23:01:27.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025213236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025219417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.291" endtime="20201115 23:01:27.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025213236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025219417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.580" endtime="20201115 23:01:27.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.589" endtime="20201115 23:01:27.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.288" endtime="20201115 23:01:27.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.286" endtime="20201115 23:01:27.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.596" level="INFO">${RESULT} = [{'time': 0.025219417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.025236639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:27.592" endtime="20201115 23:01:27.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.610" level="INFO">${ACCURACY} = {'time': [0.025219417, 0.025236639, 0.025253806, 0.025267472, 0.025278847, 0.025290764, 0.025306403, 0.025323, 0.025338625, 0.025349819, 0.025364125, 0.025376153, 0.025389333, 0.025404472, 0.025418514...</msg>
<status status="PASS" starttime="20201115 23:01:27.597" endtime="20201115 23:01:27.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.614" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.613" endtime="20201115 23:01:27.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.617" level="INFO">VALUE: [6.181000000000936e-06, 6.125000000002656e-06, 6.249999999999312e-06, 6.1939999999975626e-06, 6.165999999998423e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.1939999999975626e-06, 6.181000000000936e-06, 6.137999999999283e-06, 6.194000000001032e-06, 6.194999999997036e-06, 6.222000000000172e-06, 6.153000000001796e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.139000000002226e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.166999999997896e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.223000000003115e-06, 6.264000000002351e-06, 6.222000000000172e-06, 6.1389999999987566e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.1939999999975626e-06, 6.2079999999971325e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.179999999997993e-06, 6.223000000003115e-06, 6.195000000000506e-06]</msg>
<status status="PASS" starttime="20201115 23:01:27.616" endtime="20201115 23:01:27.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.611" endtime="20201115 23:01:27.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.620" endtime="20201115 23:01:27.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.623" endtime="20201115 23:01:27.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.622" endtime="20201115 23:01:27.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.618" endtime="20201115 23:01:27.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.253" endtime="20201115 23:01:27.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.252" endtime="20201115 23:01:27.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.251" endtime="20201115 23:01:27.645"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.647" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.655" endtime="20201115 23:01:27.671"></status>
</kw>
<msg timestamp="20201115 23:01:27.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.654" endtime="20201115 23:01:27.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.672" endtime="20201115 23:01:27.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.675" endtime="20201115 23:01:27.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.651" endtime="20201115 23:01:27.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.649" endtime="20201115 23:01:27.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.684" endtime="20201115 23:01:27.969"></status>
</kw>
<msg timestamp="20201115 23:01:27.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022890069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022896264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.682" endtime="20201115 23:01:27.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022890069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022896264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.973" endtime="20201115 23:01:27.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.982" endtime="20201115 23:01:27.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.680" endtime="20201115 23:01:27.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.678" endtime="20201115 23:01:27.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.988" level="INFO">${RESULT} = [{'time': 0.022896264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.02290725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:27.985" endtime="20201115 23:01:27.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.002" level="INFO">${ACCURACY} = {'time': [0.022896264, 0.02290725, 0.022918236, 0.022933375, 0.022947139, 0.022962361, 0.022974069, 0.022990458, 0.023004444, 0.023020764, 0.023036639, 0.023050736, 0.023065681, 0.023077236, 0.0230943...</msg>
<status status="PASS" starttime="20201115 23:01:27.989" endtime="20201115 23:01:28.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.006" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.005" endtime="20201115 23:01:28.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.009" level="INFO">VALUE: [6.195000000000506e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.1939999999975626e-06, 6.2079999999971325e-06, 6.139000000002226e-06, 6.208000000000602e-06, 6.221999999996702e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.124999999999187e-06, 6.2090000000000756e-06, 6.264000000002351e-06, 6.2079999999971325e-06, 6.208000000000602e-06, 6.250000000002781e-06, 6.292000000001491e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.179999999997993e-06, 6.208000000000602e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.194999999997036e-06, 6.195000000000506e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.194999999997036e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.180999999997466e-06, 6.195000000000506e-06]</msg>
<status status="PASS" starttime="20201115 23:01:28.007" endtime="20201115 23:01:28.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.003" endtime="20201115 23:01:28.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.012" endtime="20201115 23:01:28.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.015" endtime="20201115 23:01:28.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.014" endtime="20201115 23:01:28.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.010" endtime="20201115 23:01:28.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.648" endtime="20201115 23:01:28.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.646" endtime="20201115 23:01:28.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.645" endtime="20201115 23:01:28.036"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.039" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.047" endtime="20201115 23:01:28.063"></status>
</kw>
<msg timestamp="20201115 23:01:28.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.045" endtime="20201115 23:01:28.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.064" endtime="20201115 23:01:28.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.067" endtime="20201115 23:01:28.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.043" endtime="20201115 23:01:28.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.041" endtime="20201115 23:01:28.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.076" endtime="20201115 23:01:28.363"></status>
</kw>
<msg timestamp="20201115 23:01:28.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023040681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023046819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.075" endtime="20201115 23:01:28.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023040681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023046819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.367" endtime="20201115 23:01:28.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.375" endtime="20201115 23:01:28.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.072" endtime="20201115 23:01:28.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.071" endtime="20201115 23:01:28.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.382" level="INFO">${RESULT} = [{'time': 0.023046819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.137999999999283e-06, 'source_diff': 6.137999999999283e-06}, {'time': 0.023060014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:28.379" endtime="20201115 23:01:28.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.395" level="INFO">${ACCURACY} = {'time': [0.023046819, 0.023060014, 0.023077139, 0.023093028, 0.023110375, 0.023127389, 0.023140444, 0.023151472, 0.023167819, 0.023184194, 0.023199458, 0.023216931, 0.023232194, 0.023246042, 0.023258...</msg>
<status status="PASS" starttime="20201115 23:01:28.383" endtime="20201115 23:01:28.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.400" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.399" endtime="20201115 23:01:28.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.402" level="INFO">VALUE: [6.137999999999283e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.1939999999975626e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.1939999999975626e-06, 6.236999999999215e-06, 6.263000000002877e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.1389999999987566e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.139000000002226e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.2229999999996455e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.194000000001032e-06, 6.179999999997993e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.2079999999971325e-06, 6.194000000001032e-06, 6.180999999997466e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201115 23:01:28.401" endtime="20201115 23:01:28.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.396" endtime="20201115 23:01:28.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.405" endtime="20201115 23:01:28.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.409" endtime="20201115 23:01:28.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.407" endtime="20201115 23:01:28.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.404" endtime="20201115 23:01:28.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.039" endtime="20201115 23:01:28.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.038" endtime="20201115 23:01:28.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.037" endtime="20201115 23:01:28.430"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.432" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.441" endtime="20201115 23:01:28.459"></status>
</kw>
<msg timestamp="20201115 23:01:28.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.439" endtime="20201115 23:01:28.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.460" endtime="20201115 23:01:28.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.463" endtime="20201115 23:01:28.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.436" endtime="20201115 23:01:28.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.434" endtime="20201115 23:01:28.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.472" endtime="20201115 23:01:28.756"></status>
</kw>
<msg timestamp="20201115 23:01:28.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0263085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026314792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:28.470" endtime="20201115 23:01:28.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0263085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026314792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:28.761" endtime="20201115 23:01:28.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.769" endtime="20201115 23:01:28.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.468" endtime="20201115 23:01:28.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.466" endtime="20201115 23:01:28.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.775" level="INFO">${RESULT} = [{'time': 0.026314792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.026330889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:28.772" endtime="20201115 23:01:28.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.789" level="INFO">${ACCURACY} = {'time': [0.026314792, 0.026330889, 0.026347486, 0.026361792, 0.026373958, 0.026388208, 0.026403528, 0.026420722, 0.026435125, 0.026451125, 0.026465736, 0.026481208, 0.026497806, 0.026511486, 0.026522...</msg>
<status status="PASS" starttime="20201115 23:01:28.776" endtime="20201115 23:01:28.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.793" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.792" endtime="20201115 23:01:28.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.795" level="INFO">VALUE: [6.292000000001491e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.194999999997036e-06, 6.235999999999742e-06, 6.165999999998423e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 6.180999999997466e-06, 6.2079999999971325e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.179999999997993e-06, 6.180000000001462e-06, 6.1939999999975626e-06, 6.194999999997036e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.2079999999971325e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.278000000001921e-06, 6.194000000001032e-06, 6.2229999999996455e-06, 6.124999999999187e-06, 6.111000000003086e-06, 6.180999999997466e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.179999999997993e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.235999999999742e-06]</msg>
<status status="PASS" starttime="20201115 23:01:28.794" endtime="20201115 23:01:28.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.789" endtime="20201115 23:01:28.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.799" endtime="20201115 23:01:28.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.802" endtime="20201115 23:01:28.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.801" endtime="20201115 23:01:28.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.797" endtime="20201115 23:01:28.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.433" endtime="20201115 23:01:28.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.431" endtime="20201115 23:01:28.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.430" endtime="20201115 23:01:28.824"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.826" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.834" endtime="20201115 23:01:28.851"></status>
</kw>
<msg timestamp="20201115 23:01:28.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.833" endtime="20201115 23:01:28.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.853" endtime="20201115 23:01:28.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.855" endtime="20201115 23:01:28.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.830" endtime="20201115 23:01:28.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.828" endtime="20201115 23:01:28.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.864" endtime="20201115 23:01:29.157"></status>
</kw>
<msg timestamp="20201115 23:01:29.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024785875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024792014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.863" endtime="20201115 23:01:29.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024785875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024792014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.161" endtime="20201115 23:01:29.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.169" endtime="20201115 23:01:29.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.860" endtime="20201115 23:01:29.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.859" endtime="20201115 23:01:29.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.176" level="INFO">${RESULT} = [{'time': 0.024792014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.024803125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:29.172" endtime="20201115 23:01:29.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.190" level="INFO">${ACCURACY} = {'time': [0.024792014, 0.024803125, 0.024820472, 0.024835417, 0.024846917, 0.024859986, 0.0248765, 0.024888722, 0.024900347, 0.02491725, 0.024934486, 0.024949167, 0.024963778, 0.024975069, 0.024986056...</msg>
<status status="PASS" starttime="20201115 23:01:29.177" endtime="20201115 23:01:29.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.195" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.194" endtime="20201115 23:01:29.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.197" level="INFO">VALUE: [6.139000000002226e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.1939999999975626e-06, 6.2079999999971325e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.166999999997896e-06, 6.194999999997036e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.1939999999975626e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.153000000001796e-06, 6.236999999999215e-06, 6.179999999997993e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.236000000003211e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.2079999999971325e-06, 6.180999999997466e-06, 6.1939999999975626e-06, 6.222000000000172e-06]</msg>
<status status="PASS" starttime="20201115 23:01:29.196" endtime="20201115 23:01:29.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.191" endtime="20201115 23:01:29.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.201" endtime="20201115 23:01:29.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.204" endtime="20201115 23:01:29.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.203" endtime="20201115 23:01:29.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.199" endtime="20201115 23:01:29.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.827" endtime="20201115 23:01:29.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.825" endtime="20201115 23:01:29.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.824" endtime="20201115 23:01:29.225"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.228" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.236" endtime="20201115 23:01:29.255"></status>
</kw>
<msg timestamp="20201115 23:01:29.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.234" endtime="20201115 23:01:29.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.257" endtime="20201115 23:01:29.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.260" endtime="20201115 23:01:29.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.232" endtime="20201115 23:01:29.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.230" endtime="20201115 23:01:29.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.269" endtime="20201115 23:01:29.556"></status>
</kw>
<msg timestamp="20201115 23:01:29.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024859806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024866, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:29.267" endtime="20201115 23:01:29.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024859806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024866, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:29.560" endtime="20201115 23:01:29.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.569" endtime="20201115 23:01:29.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.264" endtime="20201115 23:01:29.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.263" endtime="20201115 23:01:29.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.575" level="INFO">${RESULT} = [{'time': 0.024866, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1939999999975626e-06, 'source_diff': 6.1939999999975626e-06}, {'time': 0.024877403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:29.572" endtime="20201115 23:01:29.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.589" level="INFO">${ACCURACY} = {'time': [0.024866, 0.024877403, 0.024891708, 0.024907389, 0.024924736, 0.024939458, 0.024953903, 0.024966125, 0.024980153, 0.024992292, 0.025004931, 0.025017708, 0.025029444, 0.025045542, 0.025056792...</msg>
<status status="PASS" starttime="20201115 23:01:29.576" endtime="20201115 23:01:29.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.593" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.592" endtime="20201115 23:01:29.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.596" level="INFO">VALUE: [6.1939999999975626e-06, 6.195000000000506e-06, 6.1939999999975626e-06, 6.180999999997466e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.264000000002351e-06, 6.195000000000506e-06, 6.2229999999996455e-06, 6.180999999997466e-06, 6.2090000000000756e-06, 6.1939999999975626e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.1939999999975626e-06, 6.194999999997036e-06, 6.180999999997466e-06, 6.195000000000506e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.235999999999742e-06, 6.167000000001366e-06, 6.2079999999971325e-06, 6.2639999999988816e-06, 6.236000000003211e-06, 6.2090000000000756e-06, 6.2229999999996455e-06, 6.1529999999983265e-06, 6.222000000000172e-06, 6.180999999997466e-06, 6.180000000001462e-06]</msg>
<status status="PASS" starttime="20201115 23:01:29.594" endtime="20201115 23:01:29.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.589" endtime="20201115 23:01:29.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.599" endtime="20201115 23:01:29.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.602" endtime="20201115 23:01:29.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.601" endtime="20201115 23:01:29.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.597" endtime="20201115 23:01:29.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.228" endtime="20201115 23:01:29.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.226" endtime="20201115 23:01:29.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.226" endtime="20201115 23:01:29.624"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.626" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.634" endtime="20201115 23:01:29.650"></status>
</kw>
<msg timestamp="20201115 23:01:29.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.633" endtime="20201115 23:01:29.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.651" endtime="20201115 23:01:29.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.654" endtime="20201115 23:01:29.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.630" endtime="20201115 23:01:29.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.628" endtime="20201115 23:01:29.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.663" endtime="20201115 23:01:29.947"></status>
</kw>
<msg timestamp="20201115 23:01:29.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023387681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023393889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.661" endtime="20201115 23:01:29.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023387681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023393889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.951" endtime="20201115 23:01:29.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.959" endtime="20201115 23:01:29.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.659" endtime="20201115 23:01:29.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.657" endtime="20201115 23:01:29.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.966" level="INFO">${RESULT} = [{'time': 0.023393889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.023406667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:29.963" endtime="20201115 23:01:29.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.980" level="INFO">${ACCURACY} = {'time': [0.023393889, 0.023406667, 0.023420069, 0.023433458, 0.023446639, 0.023458458, 0.023472764, 0.023486986, 0.023501208, 0.023515042, 0.023529972, 0.02354525, 0.023556361, 0.023568347, 0.0235829...</msg>
<status status="PASS" starttime="20201115 23:01:29.967" endtime="20201115 23:01:29.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.984" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.983" endtime="20201115 23:01:29.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.987" level="INFO">VALUE: [6.208000000000602e-06, 6.2229999999996455e-06, 6.236000000003211e-06, 6.222000000000172e-06, 6.2079999999971325e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.151999999998853e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2779999999984515e-06, 6.2090000000000756e-06, 6.153000000001796e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.208999999996606e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.153000000001796e-06, 6.1939999999975626e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.278000000001921e-06, 6.194000000001032e-06, 6.223000000003115e-06]</msg>
<status status="PASS" starttime="20201115 23:01:29.985" endtime="20201115 23:01:29.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.980" endtime="20201115 23:01:29.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.990" endtime="20201115 23:01:29.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.994" endtime="20201115 23:01:30.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.993" endtime="20201115 23:01:30.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.989" endtime="20201115 23:01:30.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.627" endtime="20201115 23:01:30.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.625" endtime="20201115 23:01:30.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.624" endtime="20201115 23:01:30.016"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.018" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.026" endtime="20201115 23:01:30.046"></status>
</kw>
<msg timestamp="20201115 23:01:30.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.025" endtime="20201115 23:01:30.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.047" endtime="20201115 23:01:30.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.050" endtime="20201115 23:01:30.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.022" endtime="20201115 23:01:30.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.020" endtime="20201115 23:01:30.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.059" endtime="20201115 23:01:30.343"></status>
</kw>
<msg timestamp="20201115 23:01:30.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023388306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023394528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.057" endtime="20201115 23:01:30.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023388306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023394528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.347" endtime="20201115 23:01:30.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.355" endtime="20201115 23:01:30.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.055" endtime="20201115 23:01:30.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.053" endtime="20201115 23:01:30.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.362" level="INFO">${RESULT} = [{'time': 0.023394528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.023406236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:30.359" endtime="20201115 23:01:30.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.376" level="INFO">${ACCURACY} = {'time': [0.023394528, 0.023406236, 0.023421181, 0.023435208, 0.023447125, 0.023463639, 0.023479528, 0.023491792, 0.023503292, 0.023518014, 0.023534625, 0.023549667, 0.023565444, 0.023581111, 0.023597...</msg>
<status status="PASS" starttime="20201115 23:01:30.363" endtime="20201115 23:01:30.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.380" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.379" endtime="20201115 23:01:30.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.383" level="INFO">VALUE: [6.222000000000172e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.166999999997896e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.2229999999996455e-06, 6.194999999997036e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.2079999999971325e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.139000000002226e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.166999999997896e-06, 6.195000000000506e-06, 6.235999999999742e-06, 6.179999999997993e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.237000000002685e-06, 6.222000000000172e-06, 6.236999999999215e-06, 6.2639999999988816e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.2779999999984515e-06, 6.1939999999975626e-06]</msg>
<status status="PASS" starttime="20201115 23:01:30.381" endtime="20201115 23:01:30.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.377" endtime="20201115 23:01:30.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.386" endtime="20201115 23:01:30.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.389" endtime="20201115 23:01:30.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.388" endtime="20201115 23:01:30.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.384" endtime="20201115 23:01:30.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.019" endtime="20201115 23:01:30.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.017" endtime="20201115 23:01:30.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.016" endtime="20201115 23:01:30.411"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.413" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.421" endtime="20201115 23:01:30.439"></status>
</kw>
<msg timestamp="20201115 23:01:30.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.420" endtime="20201115 23:01:30.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.441" endtime="20201115 23:01:30.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.443" endtime="20201115 23:01:30.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.417" endtime="20201115 23:01:30.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.415" endtime="20201115 23:01:30.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.453" endtime="20201115 23:01:30.738"></status>
</kw>
<msg timestamp="20201115 23:01:30.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025162694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025185139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.451" endtime="20201115 23:01:30.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025162694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025185139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.742" endtime="20201115 23:01:30.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.750" endtime="20201115 23:01:30.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.448" endtime="20201115 23:01:30.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.447" endtime="20201115 23:01:30.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.757" level="INFO">${RESULT} = [{'time': 0.025185139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.244499999999941e-05, 'source_diff': 2.244499999999941e-05}, {'time': 0.025215444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:30.754" endtime="20201115 23:01:30.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.772" level="INFO">${ACCURACY} = {'time': [0.025185139, 0.025215444, 0.025246569, 0.025276472, 0.025307, 0.025338083, 0.025368139, 0.025398639, 0.025429306, 0.025459861, 0.025490583, 0.025520708, 0.025551681, 0.025582167, 0.025612556...</msg>
<status status="PASS" starttime="20201115 23:01:30.758" endtime="20201115 23:01:30.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.776" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.775" endtime="20201115 23:01:30.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.779" level="INFO">VALUE: [2.244499999999941e-05, 2.333300000000038e-05, 2.052699999999935e-05, 1.961100000000271e-05, 2.2443999999999936e-05, 2.6291000000001202e-05, 2.2458000000002976e-05, 2.1486000000001115e-05, 2.144499999999841e-05, 2.05830000000011e-05, 2.533300000000238e-05, 2.055499999999849e-05, 2.148700000000059e-05, 1.9583999999999574e-05, 2.248700000000159e-05, 1.9499999999998685e-05, 2.5277000000000632e-05, 2.437500000000009e-05, 2.343100000000084e-05, 2.2457999999999506e-05, 2.5332999999998912e-05, 1.959699999999967e-05, 2.0457999999997506e-05, 2.3430000000001366e-05, 2.434700000000095e-05, 2.5318999999999342e-05, 2.2443999999999936e-05, 2.155499999999949e-05, 2.2429999999996897e-05, 2.243099999999984e-05, 1.9570000000000004e-05, 2.4320000000001285e-05, 1.956900000000053e-05, 2.0499999999999685e-05, 2.5264000000000536e-05, 2.151300000000078e-05, 1.959699999999967e-05, 2.434700000000095e-05, 2.1500000000000685e-05, 1.959699999999967e-05, 2.2485999999998646e-05, 2.5291000000000202e-05, 2.5264000000000536e-05, 2.337500000000256e-05, 2.5277000000000632e-05, 2.3499999999999216e-05, 2.055499999999849e-05, 2.34169999999978e-05, 1.9542000000000864e-05, 2.144499999999841e-05]</msg>
<status status="PASS" starttime="20201115 23:01:30.777" endtime="20201115 23:01:30.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.773" endtime="20201115 23:01:30.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.782" endtime="20201115 23:01:30.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.785" endtime="20201115 23:01:30.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.784" endtime="20201115 23:01:30.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.780" endtime="20201115 23:01:30.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.414" endtime="20201115 23:01:30.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.412" endtime="20201115 23:01:30.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.411" endtime="20201115 23:01:30.806"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.809" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.817" endtime="20201115 23:01:30.836"></status>
</kw>
<msg timestamp="20201115 23:01:30.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.815" endtime="20201115 23:01:30.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.838" endtime="20201115 23:01:30.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.841" endtime="20201115 23:01:30.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.813" endtime="20201115 23:01:30.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.811" endtime="20201115 23:01:30.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.849" endtime="20201115 23:01:31.134"></status>
</kw>
<msg timestamp="20201115 23:01:31.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02635225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026381333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:30.848" endtime="20201115 23:01:31.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02635225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026381333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:31.139" endtime="20201115 23:01:31.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.147" endtime="20201115 23:01:31.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.845" endtime="20201115 23:01:31.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.844" endtime="20201115 23:01:31.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.153" level="INFO">${RESULT} = [{'time': 0.026381333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9082999999999193e-05, 'source_diff': 2.9082999999999193e-05}, {'time': 0.026411278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:31.150" endtime="20201115 23:01:31.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.167" level="INFO">${ACCURACY} = {'time': [0.026381333, 0.026411278, 0.026441736, 0.026472528, 0.026502931, 0.026533875, 0.026563889, 0.026594861, 0.026625167, 0.026655514, 0.026686403, 0.026716694, 0.026747, 0.026777528, 0.026807833...</msg>
<status status="PASS" starttime="20201115 23:01:31.154" endtime="20201115 23:01:31.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.171" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.170" endtime="20201115 23:01:31.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.174" level="INFO">VALUE: [2.9082999999999193e-05, 2.0486000000000115e-05, 2.141699999999927e-05, 2.340299999999823e-05, 2.0513999999999255e-05, 2.5332999999998912e-05, 1.961099999999924e-05, 2.34030000000017e-05, 2.0514000000002724e-05, 2.4306000000001715e-05, 2.0513999999999255e-05, 2.436100000000052e-05, 2.0541999999998395e-05, 2.345899999999998e-05, 2.1500000000000685e-05, 2.338899999999866e-05, 2.1499999999997216e-05, 2.2443999999999936e-05, 2.1471999999998076e-05, 2.0527999999998825e-05, 2.2485999999998646e-05, 2.3415999999998327e-05, 2.2415999999997327e-05, 2.0513999999999255e-05, 2.5263999999997067e-05, 2.341700000000127e-05, 2.2457999999999506e-05, 2.2457999999999506e-05, 2.437500000000009e-05, 2.5291999999999676e-05, 2.1500000000000685e-05, 2.0500000000003155e-05, 2.2430000000000366e-05, 2.341700000000127e-05, 2.34030000000017e-05, 1.95830000000001e-05, 1.9541999999997395e-05, 2.4305999999998246e-05, 2.344500000000041e-05, 2.436100000000052e-05, 2.5305999999999246e-05, 2.1444000000002406e-05, 2.340299999999823e-05, 2.6291000000001202e-05, 2.343100000000084e-05, 2.5264000000000536e-05, 2.24030000000007e-05, 2.0528000000002294e-05, 2.2457999999999506e-05, 2.341700000000127e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.172" endtime="20201115 23:01:31.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.168" endtime="20201115 23:01:31.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.177" endtime="20201115 23:01:31.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.180" endtime="20201115 23:01:31.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.179" endtime="20201115 23:01:31.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.175" endtime="20201115 23:01:31.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.809" endtime="20201115 23:01:31.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.808" endtime="20201115 23:01:31.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.807" endtime="20201115 23:01:31.201"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.204" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.213" endtime="20201115 23:01:31.231"></status>
</kw>
<msg timestamp="20201115 23:01:31.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.211" endtime="20201115 23:01:31.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.233" endtime="20201115 23:01:31.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.235" endtime="20201115 23:01:31.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.208" endtime="20201115 23:01:31.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.206" endtime="20201115 23:01:31.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.244" endtime="20201115 23:01:31.530"></status>
</kw>
<msg timestamp="20201115 23:01:31.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023050069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.243" endtime="20201115 23:01:31.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023050069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.535" endtime="20201115 23:01:31.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.543" endtime="20201115 23:01:31.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.240" endtime="20201115 23:01:31.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.239" endtime="20201115 23:01:31.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.550" level="INFO">${RESULT} = [{'time': 0.023061028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0959000000001357e-05, 'source_diff': 1.0959000000001357e-05}, {'time': 0.023091056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:31.546" endtime="20201115 23:01:31.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.563" level="INFO">${ACCURACY} = {'time': [0.023061028, 0.023091056, 0.023121792, 0.023152375, 0.023182986, 0.023213194, 0.023244069, 0.023274847, 0.023305125, 0.023335972, 0.023366208, 0.023396542, 0.023426528, 0.023457264, 0.023487...</msg>
<status status="PASS" starttime="20201115 23:01:31.551" endtime="20201115 23:01:31.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.567" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.566" endtime="20201115 23:01:31.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.570" level="INFO">VALUE: [1.0959000000001357e-05, 2.4333999999997385e-05, 2.338899999999866e-05, 2.2457999999999506e-05, 2.5318999999999342e-05, 2.5318999999999342e-05, 2.2457999999999506e-05, 2.2458000000002976e-05, 1.9527999999997825e-05, 2.5291000000000202e-05, 2.1514000000000255e-05, 2.1500000000000685e-05, 1.959699999999967e-05, 1.961099999999924e-05, 2.2457999999999506e-05, 2.6305000000000772e-05, 2.1514000000000255e-05, 2.5304999999999772e-05, 2.336099999999952e-05, 2.6221999999999357e-05, 2.1527999999999825e-05, 2.0513999999999255e-05, 2.436100000000052e-05, 2.054099999999892e-05, 2.147300000000102e-05, 2.055499999999849e-05, 2.2443999999999936e-05, 2.436100000000052e-05, 1.95830000000001e-05, 1.863900000000085e-05, 2.5333999999998386e-05, 2.1486000000001115e-05, 2.438899999999966e-05, 2.148700000000059e-05, 2.5332999999998912e-05, 2.2457999999999506e-05, 2.0499999999999685e-05, 1.9513999999998255e-05, 2.4332999999997912e-05, 2.1485999999997646e-05, 2.1472000000001545e-05, 1.956899999999706e-05, 2.5320000000002285e-05, 2.1471999999998076e-05, 2.533300000000238e-05, 2.437500000000009e-05, 1.956900000000053e-05, 2.0527999999998825e-05, 2.436099999999705e-05, 1.9570000000000004e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.568" endtime="20201115 23:01:31.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.564" endtime="20201115 23:01:31.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.573" endtime="20201115 23:01:31.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.576" endtime="20201115 23:01:31.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.575" endtime="20201115 23:01:31.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.571" endtime="20201115 23:01:31.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.204" endtime="20201115 23:01:31.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.203" endtime="20201115 23:01:31.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.202" endtime="20201115 23:01:31.598"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.600" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.608" endtime="20201115 23:01:31.624"></status>
</kw>
<msg timestamp="20201115 23:01:31.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.607" endtime="20201115 23:01:31.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.626" endtime="20201115 23:01:31.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.628" endtime="20201115 23:01:31.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.604" endtime="20201115 23:01:31.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.602" endtime="20201115 23:01:31.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.637" endtime="20201115 23:01:31.924"></status>
</kw>
<msg timestamp="20201115 23:01:31.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023943778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023951875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.636" endtime="20201115 23:01:31.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023943778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023951875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.928" endtime="20201115 23:01:31.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.936" endtime="20201115 23:01:31.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.633" endtime="20201115 23:01:31.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.632" endtime="20201115 23:01:31.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.943" level="INFO">${RESULT} = [{'time': 0.023951875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.097000000002047e-06, 'source_diff': 8.097000000002047e-06}, {'time': 0.023981986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:31.940" endtime="20201115 23:01:31.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.956" level="INFO">${ACCURACY} = {'time': [0.023951875, 0.023981986, 0.024012597, 0.024043333, 0.024073361, 0.024104556, 0.02413475, 0.024165028, 0.024195722, 0.024225931, 0.024256958, 0.024287611, 0.024318014, 0.024348347, 0.0243786...</msg>
<status status="PASS" starttime="20201115 23:01:31.944" endtime="20201115 23:01:31.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.961" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.960" endtime="20201115 23:01:31.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.963" level="INFO">VALUE: [8.097000000002047e-06, 2.5332999999998912e-05, 2.431900000000181e-05, 2.0486000000000115e-05, 1.9528000000001294e-05, 2.340299999999823e-05, 2.2500000000001685e-05, 2.5320000000002285e-05, 2.3415999999998327e-05, 2.438899999999966e-05, 2.5318999999999342e-05, 2.1514000000000255e-05, 2.0527999999998825e-05, 2.0472000000000545e-05, 2.5333999999998386e-05, 2.1485999999997646e-05, 1.9583999999999574e-05, 2.237500000000156e-05, 2.5319999999998816e-05, 1.9542000000000864e-05, 2.5291000000000202e-05, 2.337499999999909e-05, 2.4346999999997482e-05, 2.0528000000002294e-05, 2.5305999999999246e-05, 2.437499999999662e-05, 2.1471999999998076e-05, 2.5318999999999342e-05, 1.9583999999999574e-05, 2.148700000000059e-05, 1.9583999999999574e-05, 1.9556000000000434e-05, 2.338900000000213e-05, 2.240299999999723e-05, 2.2457999999999506e-05, 2.1471999999998076e-05, 2.340299999999823e-05, 2.244499999999941e-05, 2.2457999999999506e-05, 2.2457999999999506e-05, 2.1527999999999825e-05, 2.437500000000009e-05, 2.347300000000302e-05, 2.0542000000001864e-05, 2.5305999999999246e-05, 2.5291999999999676e-05, 2.1541999999999395e-05, 2.338899999999866e-05, 2.0541999999998395e-05, 2.338900000000213e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.962" endtime="20201115 23:01:31.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.957" endtime="20201115 23:01:31.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.967" endtime="20201115 23:01:31.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.970" endtime="20201115 23:01:31.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.969" endtime="20201115 23:01:31.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.965" endtime="20201115 23:01:31.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.601" endtime="20201115 23:01:31.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.599" endtime="20201115 23:01:31.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.598" endtime="20201115 23:01:31.991"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.994" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.002" endtime="20201115 23:01:32.022"></status>
</kw>
<msg timestamp="20201115 23:01:32.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.001" endtime="20201115 23:01:32.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.024" endtime="20201115 23:01:32.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.027" endtime="20201115 23:01:32.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.998" endtime="20201115 23:01:32.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.996" endtime="20201115 23:01:32.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.036" endtime="20201115 23:01:32.322"></status>
</kw>
<msg timestamp="20201115 23:01:32.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026868792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026887347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.035" endtime="20201115 23:01:32.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026868792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026887347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.326" endtime="20201115 23:01:32.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.334" endtime="20201115 23:01:32.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.032" endtime="20201115 23:01:32.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.030" endtime="20201115 23:01:32.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.341" level="INFO">${RESULT} = [{'time': 0.026887347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.855499999999996e-05, 'source_diff': 1.855499999999996e-05}, {'time': 0.026918431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:32.337" endtime="20201115 23:01:32.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.355" level="INFO">${ACCURACY} = {'time': [0.026887347, 0.026918431, 0.026948111, 0.026978653, 0.027009403, 0.027040306, 0.027070264, 0.027101097, 0.027131722, 0.027162472, 0.027192486, 0.027222958, 0.027254139, 0.027284458, 0.027314...</msg>
<status status="PASS" starttime="20201115 23:01:32.342" endtime="20201115 23:01:32.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.360" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.359" endtime="20201115 23:01:32.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.368" level="INFO">VALUE: [1.855499999999996e-05, 2.1527999999999825e-05, 2.3458000000000506e-05, 2.245899999999898e-05, 2.0556000000001434e-05, 2.4334000000000855e-05, 2.0527999999998825e-05, 2.338900000000213e-05, 1.959699999999967e-05, 2.0513999999999255e-05, 2.055499999999849e-05, 2.436099999999705e-05, 2.1486000000001115e-05, 2.055500000000196e-05, 2.0471999999997076e-05, 2.34030000000017e-05, 2.343100000000084e-05, 2.4264000000003005e-05, 2.437500000000009e-05, 2.238899999999766e-05, 2.6306000000000246e-05, 1.862499999999781e-05, 2.6235999999998927e-05, 1.9542000000000864e-05, 2.44169999999988e-05, 1.962499999999881e-05, 2.1499999999997216e-05, 2.3444000000000936e-05, 1.962499999999881e-05, 2.2416000000000796e-05, 2.5291000000000202e-05, 1.955500000000096e-05, 1.9583999999999574e-05, 2.5348000000001425e-05, 2.056899999999806e-05, 2.5332999999998912e-05, 2.5305999999999246e-05, 2.245899999999898e-05, 2.5320000000002285e-05, 2.341700000000127e-05, 2.2457999999999506e-05, 2.0541999999998395e-05, 2.6264000000001536e-05, 2.5320000000002285e-05, 2.34030000000017e-05, 2.5278000000000106e-05, 2.5249999999997497e-05, 1.95830000000001e-05, 2.0486000000000115e-05, 2.3320000000000285e-05]</msg>
<status status="PASS" starttime="20201115 23:01:32.361" endtime="20201115 23:01:32.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.356" endtime="20201115 23:01:32.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.371" endtime="20201115 23:01:32.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.374" endtime="20201115 23:01:32.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.373" endtime="20201115 23:01:32.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.369" endtime="20201115 23:01:32.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.994" endtime="20201115 23:01:32.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.993" endtime="20201115 23:01:32.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.992" endtime="20201115 23:01:32.395"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.398" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.406" endtime="20201115 23:01:32.428"></status>
</kw>
<msg timestamp="20201115 23:01:32.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.404" endtime="20201115 23:01:32.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.430" endtime="20201115 23:01:32.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.432" endtime="20201115 23:01:32.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.402" endtime="20201115 23:01:32.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.400" endtime="20201115 23:01:32.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.441" endtime="20201115 23:01:32.728"></status>
</kw>
<msg timestamp="20201115 23:01:32.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024801347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024817069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.440" endtime="20201115 23:01:32.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024801347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024817069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.732" endtime="20201115 23:01:32.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.740" endtime="20201115 23:01:32.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.437" endtime="20201115 23:01:32.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.436" endtime="20201115 23:01:32.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.747" level="INFO">${RESULT} = [{'time': 0.024817069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5721999999999264e-05, 'source_diff': 1.5721999999999264e-05}, {'time': 0.024847792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:32.743" endtime="20201115 23:01:32.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.761" level="INFO">${ACCURACY} = {'time': [0.024817069, 0.024847792, 0.024878, 0.024908625, 0.024938806, 0.024969944, 0.025000097, 0.025030778, 0.025061319, 0.025091528, 0.025122139, 0.025152653, 0.025182806, 0.025214208, 0.025243819...</msg>
<status status="PASS" starttime="20201115 23:01:32.748" endtime="20201115 23:01:32.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.765" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.764" endtime="20201115 23:01:32.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.768" level="INFO">VALUE: [1.5721999999999264e-05, 2.336099999999952e-05, 2.1486000000001115e-05, 2.5250000000000966e-05, 2.5305999999999246e-05, 2.3444000000000936e-05, 1.956900000000053e-05, 2.0499999999999685e-05, 2.236099999999852e-05, 2.5305999999999246e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.0499999999999685e-05, 2.5221999999998357e-05, 2.433300000000138e-05, 2.434700000000095e-05, 2.0527999999998825e-05, 2.155499999999949e-05, 2.338899999999866e-05, 2.2472000000002545e-05, 2.2443999999999936e-05, 2.1472000000001545e-05, 2.3443999999997467e-05, 2.0486000000000115e-05, 2.245900000000245e-05, 2.0513999999999255e-05, 2.0513999999999255e-05, 1.95830000000001e-05, 2.1472000000001545e-05, 2.4333999999997385e-05, 2.341700000000127e-05, 2.244499999999941e-05, 2.436099999999705e-05, 2.051300000000325e-05, 2.4318999999998342e-05, 2.24030000000007e-05, 2.5305999999999246e-05, 2.0555999999997965e-05, 2.1514000000000255e-05, 2.244499999999941e-05, 2.4334000000000855e-05, 2.1513999999996786e-05, 2.1472000000001545e-05, 2.243099999999984e-05, 2.5305999999999246e-05, 2.336099999999952e-05, 1.9570000000000004e-05, 2.340299999999823e-05, 2.437500000000009e-05, 2.5318999999999342e-05]</msg>
<status status="PASS" starttime="20201115 23:01:32.766" endtime="20201115 23:01:32.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.761" endtime="20201115 23:01:32.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.771" endtime="20201115 23:01:32.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.774" endtime="20201115 23:01:32.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.772" endtime="20201115 23:01:32.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.769" endtime="20201115 23:01:32.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.398" endtime="20201115 23:01:32.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.397" endtime="20201115 23:01:32.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.396" endtime="20201115 23:01:32.795"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.798" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.806" endtime="20201115 23:01:32.825"></status>
</kw>
<msg timestamp="20201115 23:01:32.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.804" endtime="20201115 23:01:32.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.827" endtime="20201115 23:01:32.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.830" endtime="20201115 23:01:32.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.802" endtime="20201115 23:01:32.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.800" endtime="20201115 23:01:32.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.838" endtime="20201115 23:01:33.126"></status>
</kw>
<msg timestamp="20201115 23:01:33.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027000319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027019889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.837" endtime="20201115 23:01:33.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027000319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027019889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.130" endtime="20201115 23:01:33.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.139" endtime="20201115 23:01:33.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.834" endtime="20201115 23:01:33.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.833" endtime="20201115 23:01:33.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.146" level="INFO">${RESULT} = [{'time': 0.027019889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9570000000000004e-05, 'source_diff': 1.9570000000000004e-05}, {'time': 0.02705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:33.142" endtime="20201115 23:01:33.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.159" level="INFO">${ACCURACY} = {'time': [0.027019889, 0.02705, 0.02708025, 0.027110833, 0.027142028, 0.027172417, 0.027202722, 0.0272335, 0.027263444, 0.027293917, 0.027325153, 0.027355472, 0.027385889, 0.027416569, 0.027447167, 0....</msg>
<status status="PASS" starttime="20201115 23:01:33.147" endtime="20201115 23:01:33.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.163" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.162" endtime="20201115 23:01:33.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.166" level="INFO">VALUE: [1.9570000000000004e-05, 2.431900000000181e-05, 2.436100000000052e-05, 2.5304999999999772e-05, 2.1514000000000255e-05, 2.0542000000001864e-05, 2.1485999999997646e-05, 2.2457999999999506e-05, 2.2458000000002976e-05, 1.965300000000142e-05, 2.1527999999999825e-05, 2.056899999999806e-05, 2.337499999999909e-05, 2.1401999999996757e-05, 2.437500000000009e-05, 2.052699999999935e-05, 2.343100000000084e-05, 2.436100000000052e-05, 2.2457999999999506e-05, 2.5346999999998482e-05, 1.95830000000001e-05, 2.1500000000000685e-05, 2.055500000000196e-05, 2.437500000000009e-05, 1.961099999999924e-05, 2.6278000000001106e-05, 2.433300000000138e-05, 2.245899999999898e-05, 2.436100000000052e-05, 2.5304999999999772e-05, 2.1499999999997216e-05, 2.437500000000009e-05, 2.0499999999999685e-05, 2.054100000000239e-05, 2.5305999999999246e-05, 2.0541999999998395e-05, 2.4401999999999757e-05, 2.433300000000138e-05, 2.1471999999998076e-05, 2.2443999999999936e-05, 1.959699999999967e-05, 1.9528000000001294e-05, 2.4348000000000425e-05, 2.5318999999999342e-05, 2.1472000000001545e-05, 1.956900000000053e-05, 2.1457999999998506e-05, 2.0513999999999255e-05, 2.5305999999999246e-05, 1.963900000000185e-05]</msg>
<status status="PASS" starttime="20201115 23:01:33.165" endtime="20201115 23:01:33.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.160" endtime="20201115 23:01:33.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.169" endtime="20201115 23:01:33.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.172" endtime="20201115 23:01:33.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.171" endtime="20201115 23:01:33.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.167" endtime="20201115 23:01:33.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.798" endtime="20201115 23:01:33.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.796" endtime="20201115 23:01:33.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.796" endtime="20201115 23:01:33.194"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.196" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.204" endtime="20201115 23:01:33.222"></status>
</kw>
<msg timestamp="20201115 23:01:33.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.203" endtime="20201115 23:01:33.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.223" endtime="20201115 23:01:33.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.226" endtime="20201115 23:01:33.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.200" endtime="20201115 23:01:33.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.198" endtime="20201115 23:01:33.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.235" endtime="20201115 23:01:33.520"></status>
</kw>
<msg timestamp="20201115 23:01:33.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025459611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025468722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.233" endtime="20201115 23:01:33.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025459611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025468722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.524" endtime="20201115 23:01:33.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.533" endtime="20201115 23:01:33.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.231" endtime="20201115 23:01:33.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.229" endtime="20201115 23:01:33.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.539" level="INFO">${RESULT} = [{'time': 0.025468722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.025499361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:33.536" endtime="20201115 23:01:33.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.553" level="INFO">${ACCURACY} = {'time': [0.025468722, 0.025499361, 0.025529597, 0.025560417, 0.0255905, 0.025621861, 0.025652167, 0.025682722, 0.025712667, 0.025743472, 0.025774417, 0.025804611, 0.025835111, 0.025865528, 0.02589612...</msg>
<status status="PASS" starttime="20201115 23:01:33.540" endtime="20201115 23:01:33.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.557" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.556" endtime="20201115 23:01:33.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.560" level="INFO">VALUE: [9.110999999999148e-06, 2.341700000000127e-05, 2.1514000000000255e-05, 2.0513999999999255e-05, 2.343099999999737e-05, 2.055499999999849e-05, 2.1486000000001115e-05, 2.0458000000000975e-05, 2.4348000000000425e-05, 1.95830000000001e-05, 2.5305999999999246e-05, 2.0500000000003155e-05, 2.338900000000213e-05, 1.9527999999997825e-05, 2.5305999999999246e-05, 2.2443999999999936e-05, 1.9500000000002154e-05, 1.9499999999998685e-05, 2.0513999999999255e-05, 2.3472000000000076e-05, 2.5291999999999676e-05, 2.5332999999998912e-05, 2.438899999999966e-05, 2.0499999999999685e-05, 2.1514000000000255e-05, 2.2471999999999076e-05, 1.95830000000001e-05, 2.0499999999999685e-05, 2.431900000000181e-05, 2.0499999999999685e-05, 2.5332999999998912e-05, 2.3429999999997897e-05, 1.954100000000139e-05, 2.0527999999998825e-05, 2.436100000000052e-05, 2.5291999999999676e-05, 2.047300000000002e-05, 2.431900000000181e-05, 1.95830000000001e-05, 2.4346999999997482e-05, 2.436100000000052e-05, 2.3415999999998327e-05, 2.247300000000202e-05, 1.9528000000001294e-05, 2.237500000000156e-05, 2.437500000000009e-05, 2.34030000000017e-05, 2.437500000000009e-05, 2.436100000000052e-05, 1.865299999999695e-05]</msg>
<status status="PASS" starttime="20201115 23:01:33.558" endtime="20201115 23:01:33.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.553" endtime="20201115 23:01:33.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.563" endtime="20201115 23:01:33.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.566" endtime="20201115 23:01:33.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.564" endtime="20201115 23:01:33.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.561" endtime="20201115 23:01:33.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.197" endtime="20201115 23:01:33.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.195" endtime="20201115 23:01:33.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.194" endtime="20201115 23:01:33.587"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.590" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.598" endtime="20201115 23:01:33.615"></status>
</kw>
<msg timestamp="20201115 23:01:33.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.596" endtime="20201115 23:01:33.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.617" endtime="20201115 23:01:33.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.620" endtime="20201115 23:01:33.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.594" endtime="20201115 23:01:33.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.592" endtime="20201115 23:01:33.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.629" endtime="20201115 23:01:33.914"></status>
</kw>
<msg timestamp="20201115 23:01:33.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023782194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023796917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.627" endtime="20201115 23:01:33.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023782194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023796917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.918" endtime="20201115 23:01:33.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.926" endtime="20201115 23:01:33.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.625" endtime="20201115 23:01:33.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.623" endtime="20201115 23:01:33.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.933" level="INFO">${RESULT} = [{'time': 0.023796917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4723000000001207e-05, 'source_diff': 1.4723000000001207e-05}, {'time': 0.023827069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:33.930" endtime="20201115 23:01:33.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.950" level="INFO">${ACCURACY} = {'time': [0.023796917, 0.023827069, 0.023858097, 0.023888167, 0.023918569, 0.023949139, 0.023979972, 0.024010194, 0.024041097, 0.024071458, 0.024102069, 0.024132111, 0.024163306, 0.024193, 0.024223417...</msg>
<status status="PASS" starttime="20201115 23:01:33.934" endtime="20201115 23:01:33.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.955" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.954" endtime="20201115 23:01:33.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.957" level="INFO">VALUE: [1.4723000000001207e-05, 2.2457999999999506e-05, 2.530500000000324e-05, 2.245899999999898e-05, 2.1486000000001115e-05, 2.34030000000017e-05, 1.961099999999924e-05, 1.954099999999792e-05, 2.24030000000007e-05, 2.3499999999999216e-05, 2.434700000000095e-05, 2.2443999999999936e-05, 2.340299999999823e-05, 2.0555999999997965e-05, 2.436100000000052e-05, 2.4361999999999995e-05, 2.2458000000002976e-05, 2.341700000000127e-05, 2.1500000000000685e-05, 2.1471999999998076e-05, 2.1499999999997216e-05, 2.1499999999997216e-05, 2.437500000000009e-05, 2.244499999999941e-05, 1.862500000000128e-05, 2.1458000000001975e-05, 1.9542000000000864e-05, 1.865300000000042e-05, 2.1485999999997646e-05, 1.9555999999996965e-05, 2.1500000000000685e-05, 2.5278000000000106e-05, 2.430500000000224e-05, 2.341700000000127e-05, 2.6305000000000772e-05, 2.0527999999998825e-05, 2.3416000000001796e-05, 2.1486000000001115e-05, 2.6277000000001632e-05, 1.956900000000053e-05, 2.1514000000000255e-05, 2.238900000000113e-05, 1.955500000000096e-05, 2.0542000000001864e-05, 2.436100000000052e-05, 2.0541999999998395e-05, 2.0527999999998825e-05, 2.6264000000001536e-05, 2.5304999999999772e-05, 2.434700000000095e-05]</msg>
<status status="PASS" starttime="20201115 23:01:33.956" endtime="20201115 23:01:33.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.951" endtime="20201115 23:01:33.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.960" endtime="20201115 23:01:33.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.964" endtime="20201115 23:01:33.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.962" endtime="20201115 23:01:33.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.959" endtime="20201115 23:01:33.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.590" endtime="20201115 23:01:33.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.588" endtime="20201115 23:01:33.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.588" endtime="20201115 23:01:33.985"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.988" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.996" endtime="20201115 23:01:34.017"></status>
</kw>
<msg timestamp="20201115 23:01:34.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.995" endtime="20201115 23:01:34.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.018" endtime="20201115 23:01:34.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.021" endtime="20201115 23:01:34.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.992" endtime="20201115 23:01:34.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.990" endtime="20201115 23:01:34.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.030" endtime="20201115 23:01:34.321"></status>
</kw>
<msg timestamp="20201115 23:01:34.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027722639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027739361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.028" endtime="20201115 23:01:34.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027722639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027739361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.325" endtime="20201115 23:01:34.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.334" endtime="20201115 23:01:34.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.026" endtime="20201115 23:01:34.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.024" endtime="20201115 23:01:34.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.341" level="INFO">${RESULT} = [{'time': 0.027739361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6722000000000264e-05, 'source_diff': 1.6722000000000264e-05}, {'time': 0.027769389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:34.337" endtime="20201115 23:01:34.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.356" level="INFO">${ACCURACY} = {'time': [0.027739361, 0.027769389, 0.027800208, 0.027830806, 0.027861125, 0.0278915, 0.027921694, 0.027952792, 0.027982806, 0.028013167, 0.028043986, 0.028074597, 0.028105306, 0.028135278, 0.02816588...</msg>
<status status="PASS" starttime="20201115 23:01:34.342" endtime="20201115 23:01:34.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.361" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.360" endtime="20201115 23:01:34.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.363" level="INFO">VALUE: [1.6722000000000264e-05, 2.1513999999996786e-05, 2.438899999999966e-05, 2.437500000000009e-05, 2.0542000000001864e-05, 2.237499999999809e-05, 1.95830000000001e-05, 2.536100000000152e-05, 2.4361999999999995e-05, 2.338899999999866e-05, 2.437500000000009e-05, 2.5318999999999342e-05, 1.9583999999999574e-05, 1.9556000000000434e-05, 2.436100000000052e-05, 2.338900000000213e-05, 2.0542000000001864e-05, 2.0542000000001864e-05, 2.337499999999909e-05, 2.340299999999823e-05, 2.2485999999998646e-05, 2.337500000000256e-05, 2.1485999999997646e-05, 2.241700000000027e-05, 2.2430000000000366e-05, 2.34030000000017e-05, 2.1486000000001115e-05, 2.155499999999949e-05, 1.963899999999838e-05, 2.437500000000009e-05, 2.5334000000001855e-05, 2.1486000000001115e-05, 2.436100000000052e-05, 2.3401999999998757e-05, 2.0527999999998825e-05, 1.955500000000096e-05, 2.152700000000035e-05, 2.5319999999998816e-05, 2.3387999999999187e-05, 2.6306000000000246e-05, 1.959700000000314e-05, 2.4346999999997482e-05, 2.534700000000195e-05, 2.05969999999972e-05, 1.9513999999998255e-05, 1.9542000000000864e-05, 2.5319999999998816e-05, 2.534700000000195e-05, 2.1514000000000255e-05, 2.2415999999997327e-05]</msg>
<status status="PASS" starttime="20201115 23:01:34.362" endtime="20201115 23:01:34.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.357" endtime="20201115 23:01:34.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.367" endtime="20201115 23:01:34.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.371" endtime="20201115 23:01:34.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.369" endtime="20201115 23:01:34.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.365" endtime="20201115 23:01:34.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.988" endtime="20201115 23:01:34.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.986" endtime="20201115 23:01:34.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.986" endtime="20201115 23:01:34.392"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.394" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.402" endtime="20201115 23:01:34.418"></status>
</kw>
<msg timestamp="20201115 23:01:34.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.401" endtime="20201115 23:01:34.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.420" endtime="20201115 23:01:34.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.422" endtime="20201115 23:01:34.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.398" endtime="20201115 23:01:34.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.396" endtime="20201115 23:01:34.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.431" endtime="20201115 23:01:34.717"></status>
</kw>
<msg timestamp="20201115 23:01:34.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022850778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022860833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.430" endtime="20201115 23:01:34.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022850778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022860833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.721" endtime="20201115 23:01:34.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.729" endtime="20201115 23:01:34.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.427" endtime="20201115 23:01:34.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.426" endtime="20201115 23:01:34.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.736" level="INFO">${RESULT} = [{'time': 0.022860833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0055000000001868e-05, 'source_diff': 1.0055000000001868e-05}, {'time': 0.022891597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:34.733" endtime="20201115 23:01:34.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.750" level="INFO">${ACCURACY} = {'time': [0.022860833, 0.022891597, 0.022921819, 0.022952347, 0.022982472, 0.023013708, 0.023043667, 0.023074403, 0.023104931, 0.023135583, 0.023165556, 0.023195931, 0.023226847, 0.023257764, 0.023288...</msg>
<status status="PASS" starttime="20201115 23:01:34.737" endtime="20201115 23:01:34.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.754" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.753" endtime="20201115 23:01:34.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.756" level="INFO">VALUE: [1.0055000000001868e-05, 2.055499999999849e-05, 2.2443999999999936e-05, 2.533300000000238e-05, 2.054099999999892e-05, 2.052699999999935e-05, 2.341700000000127e-05, 2.534700000000195e-05, 1.9611999999998714e-05, 1.956900000000053e-05, 2.341700000000127e-05, 1.9583999999999574e-05, 2.6235999999998927e-05, 2.337499999999909e-05, 2.3401999999998757e-05, 2.1500000000000685e-05, 2.438899999999966e-05, 2.0527999999998825e-05, 2.0513999999999255e-05, 2.058299999999763e-05, 2.619499999999969e-05, 2.1472000000001545e-05, 2.436099999999705e-05, 1.863900000000085e-05, 2.437500000000009e-05, 2.4304999999998772e-05, 2.5291000000000202e-05, 2.34169999999978e-05, 1.9597999999999144e-05, 1.961099999999924e-05, 2.437500000000009e-05, 2.534700000000195e-05, 2.5291999999999676e-05, 2.5291999999999676e-05, 1.9499999999998685e-05, 2.6264000000001536e-05, 1.9556000000000434e-05, 2.536100000000152e-05, 2.1486000000001115e-05, 2.244499999999941e-05, 2.1471999999998076e-05, 2.438899999999966e-05, 2.0584000000000574e-05, 2.5305999999999246e-05, 2.241700000000027e-05, 2.337499999999909e-05, 2.336099999999952e-05, 2.336099999999952e-05, 1.959699999999967e-05, 2.062499999999981e-05]</msg>
<status status="PASS" starttime="20201115 23:01:34.755" endtime="20201115 23:01:34.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.750" endtime="20201115 23:01:34.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.760" endtime="20201115 23:01:34.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.764" endtime="20201115 23:01:34.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.762" endtime="20201115 23:01:34.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.759" endtime="20201115 23:01:34.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.395" endtime="20201115 23:01:34.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.393" endtime="20201115 23:01:34.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.392" endtime="20201115 23:01:34.785"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.787" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.796" endtime="20201115 23:01:34.817"></status>
</kw>
<msg timestamp="20201115 23:01:34.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.794" endtime="20201115 23:01:34.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.819" endtime="20201115 23:01:34.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.821" endtime="20201115 23:01:34.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.791" endtime="20201115 23:01:34.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.789" endtime="20201115 23:01:34.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.830" endtime="20201115 23:01:35.117"></status>
</kw>
<msg timestamp="20201115 23:01:35.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026628097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026651556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.829" endtime="20201115 23:01:35.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026628097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026651556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.121" endtime="20201115 23:01:35.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.130" endtime="20201115 23:01:35.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.826" endtime="20201115 23:01:35.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.824" endtime="20201115 23:01:35.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.136" level="INFO">${RESULT} = [{'time': 0.026651556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.345899999999998e-05, 'source_diff': 2.345899999999998e-05}, {'time': 0.026681375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:35.133" endtime="20201115 23:01:35.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.150" level="INFO">${ACCURACY} = {'time': [0.026651556, 0.026681375, 0.026712278, 0.026742472, 0.026772931, 0.026803667, 0.026834597, 0.026865, 0.026895708, 0.026926056, 0.026956514, 0.026987278, 0.027017542, 0.027047639, 0.027077917...</msg>
<status status="PASS" starttime="20201115 23:01:35.137" endtime="20201115 23:01:35.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.154" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.153" endtime="20201115 23:01:35.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.157" level="INFO">VALUE: [2.345899999999998e-05, 1.95830000000001e-05, 2.4346999999997482e-05, 2.5304999999999772e-05, 2.244499999999941e-05, 2.0556000000001434e-05, 2.533300000000238e-05, 2.0527999999998825e-05, 1.95830000000001e-05, 2.245899999999898e-05, 2.1514000000000255e-05, 2.3499999999999216e-05, 2.1499999999997216e-05, 2.0541999999998395e-05, 2.341700000000127e-05, 1.9597999999999144e-05, 2.245899999999898e-05, 2.1485999999997646e-05, 2.5235999999997927e-05, 2.151300000000078e-05, 2.34169999999978e-05, 2.2402000000001226e-05, 1.9598000000002613e-05, 2.055500000000196e-05, 2.056899999999806e-05, 2.4348000000000425e-05, 1.9584000000003043e-05, 2.437500000000009e-05, 2.2457999999999506e-05, 2.5318999999999342e-05, 2.0513999999999255e-05, 2.436100000000052e-05, 2.1486000000001115e-05, 2.2457999999999506e-05, 2.5334000000001855e-05, 2.0527999999998825e-05, 2.055500000000196e-05, 2.337500000000256e-05, 2.434700000000095e-05, 2.6278000000001106e-05, 2.436100000000052e-05, 2.344500000000041e-05, 2.2471999999999076e-05, 2.2471999999999076e-05, 2.437500000000009e-05, 2.236099999999852e-05, 2.337500000000256e-05, 2.5318999999999342e-05, 1.9500000000002154e-05, 2.5333999999998386e-05]</msg>
<status status="PASS" starttime="20201115 23:01:35.155" endtime="20201115 23:01:35.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.151" endtime="20201115 23:01:35.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.161" endtime="20201115 23:01:35.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.164" endtime="20201115 23:01:35.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.162" endtime="20201115 23:01:35.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.159" endtime="20201115 23:01:35.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.788" endtime="20201115 23:01:35.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.786" endtime="20201115 23:01:35.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.785" endtime="20201115 23:01:35.185"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.187" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.195" endtime="20201115 23:01:35.211"></status>
</kw>
<msg timestamp="20201115 23:01:35.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.194" endtime="20201115 23:01:35.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.213" endtime="20201115 23:01:35.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.216" endtime="20201115 23:01:35.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.191" endtime="20201115 23:01:35.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.189" endtime="20201115 23:01:35.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.225" endtime="20201115 23:01:35.509"></status>
</kw>
<msg timestamp="20201115 23:01:35.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023489556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023512958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.223" endtime="20201115 23:01:35.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023489556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023512958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.513" endtime="20201115 23:01:35.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.522" endtime="20201115 23:01:35.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.220" endtime="20201115 23:01:35.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.219" endtime="20201115 23:01:35.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.528" level="INFO">${RESULT} = [{'time': 0.023512958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3401999999998757e-05, 'source_diff': 2.3401999999998757e-05}, {'time': 0.023543556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:35.525" endtime="20201115 23:01:35.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.543" level="INFO">${ACCURACY} = {'time': [0.023512958, 0.023543556, 0.023574264, 0.02360475, 0.023635667, 0.023665569, 0.023696542, 0.023727139, 0.023757875, 0.02378775, 0.023818139, 0.0238485, 0.023879514, 0.023909597, 0.023940944,...</msg>
<status status="PASS" starttime="20201115 23:01:35.530" endtime="20201115 23:01:35.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.548" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.547" endtime="20201115 23:01:35.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.550" level="INFO">VALUE: [2.3401999999998757e-05, 2.5305999999999246e-05, 2.436100000000052e-05, 2.433300000000138e-05, 2.241700000000027e-05, 2.2430000000000366e-05, 2.245900000000245e-05, 1.95830000000001e-05, 2.5306000000002715e-05, 1.9528000000001294e-05, 2.436099999999705e-05, 2.34030000000017e-05, 2.436100000000052e-05, 2.434700000000095e-05, 2.6262999999998593e-05, 2.436100000000052e-05, 2.3332999999996912e-05, 2.244499999999941e-05, 2.144499999999841e-05, 2.433300000000138e-05, 2.2457999999999506e-05, 2.5304999999999772e-05, 2.243099999999984e-05, 2.3333999999999855e-05, 1.952700000000182e-05, 2.238900000000113e-05, 2.440299999999923e-05, 1.95830000000001e-05, 2.5291999999999676e-05, 1.961099999999924e-05, 2.4348000000000425e-05, 2.243099999999984e-05, 2.3485999999999646e-05, 2.3458000000000506e-05, 2.336100000000299e-05, 2.5193999999999217e-05, 2.241700000000027e-05, 2.437500000000009e-05, 2.0542000000001864e-05, 2.05830000000011e-05, 2.437500000000009e-05, 2.5318999999999342e-05, 2.5262999999997593e-05, 2.5305999999999246e-05, 2.2443999999999936e-05, 2.051299999999978e-05, 2.6290999999997733e-05, 2.533300000000238e-05, 2.4346999999997482e-05, 2.437500000000009e-05]</msg>
<status status="PASS" starttime="20201115 23:01:35.549" endtime="20201115 23:01:35.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.544" endtime="20201115 23:01:35.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.553" endtime="20201115 23:01:35.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.557" endtime="20201115 23:01:35.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.555" endtime="20201115 23:01:35.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.552" endtime="20201115 23:01:35.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.188" endtime="20201115 23:01:35.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.186" endtime="20201115 23:01:35.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.185" endtime="20201115 23:01:35.578"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.580" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.588" endtime="20201115 23:01:35.606"></status>
</kw>
<msg timestamp="20201115 23:01:35.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.587" endtime="20201115 23:01:35.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.608" endtime="20201115 23:01:35.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.610" endtime="20201115 23:01:35.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.584" endtime="20201115 23:01:35.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.582" endtime="20201115 23:01:35.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.619" endtime="20201115 23:01:35.903"></status>
</kw>
<msg timestamp="20201115 23:01:35.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022726819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.618" endtime="20201115 23:01:35.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022726819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.907" endtime="20201115 23:01:35.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.916" endtime="20201115 23:01:35.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.615" endtime="20201115 23:01:35.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.614" endtime="20201115 23:01:35.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.922" level="INFO">${RESULT} = [{'time': 0.022756917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0098000000002706e-05, 'source_diff': 3.0098000000002706e-05}, {'time': 0.022787625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:35.919" endtime="20201115 23:01:35.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.936" level="INFO">${ACCURACY} = {'time': [0.022756917, 0.022787625, 0.022817847, 0.022848639, 0.022878597, 0.022909722, 0.022939917, 0.022970361, 0.023001056, 0.023031583, 0.023062097, 0.023092458, 0.023122583, 0.023153708, 0.023184...</msg>
<status status="PASS" starttime="20201115 23:01:35.923" endtime="20201115 23:01:35.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.940" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.939" endtime="20201115 23:01:35.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.943" level="INFO">VALUE: [3.0098000000002706e-05, 2.436100000000052e-05, 2.2430000000000366e-05, 2.5291999999999676e-05, 2.1486000000001115e-05, 2.3416000000001796e-05, 2.0528000000002294e-05, 2.2430000000000366e-05, 2.34169999999978e-05, 2.1458000000001975e-05, 2.2500000000001685e-05, 1.959699999999967e-05, 2.5360999999998052e-05, 2.055499999999849e-05, 2.437500000000009e-05, 2.0528000000002294e-05, 2.3387999999999187e-05, 1.959699999999967e-05, 2.2443999999999936e-05, 2.3291999999997676e-05, 1.9598000000002613e-05, 2.337499999999909e-05, 1.961099999999924e-05, 1.961100000000271e-05, 1.955500000000096e-05, 2.1485999999997646e-05, 2.2416000000000796e-05, 2.4318999999998342e-05, 2.1512999999997312e-05, 2.0528000000002294e-05, 2.437500000000009e-05, 2.1500000000000685e-05, 2.340299999999823e-05, 2.243099999999984e-05, 2.5319999999998816e-05, 2.341700000000127e-05, 1.956900000000053e-05, 2.437500000000009e-05, 2.5319999999998816e-05, 2.1471999999998076e-05, 2.4319999999997816e-05, 2.4320000000001285e-05, 2.338900000000213e-05, 2.437500000000009e-05, 2.1541999999999395e-05, 2.2457999999999506e-05, 2.340299999999823e-05, 2.1499999999997216e-05, 2.5333999999998386e-05, 1.9570000000000004e-05]</msg>
<status status="PASS" starttime="20201115 23:01:35.941" endtime="20201115 23:01:35.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.937" endtime="20201115 23:01:35.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.946" endtime="20201115 23:01:35.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.949" endtime="20201115 23:01:35.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.948" endtime="20201115 23:01:35.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.944" endtime="20201115 23:01:35.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.581" endtime="20201115 23:01:35.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.579" endtime="20201115 23:01:35.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.578" endtime="20201115 23:01:35.970"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.973" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.981" endtime="20201115 23:01:36.001"></status>
</kw>
<msg timestamp="20201115 23:01:36.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.979" endtime="20201115 23:01:36.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.003" endtime="20201115 23:01:36.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.005" endtime="20201115 23:01:36.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.977" endtime="20201115 23:01:36.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.975" endtime="20201115 23:01:36.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.015" endtime="20201115 23:01:36.300"></status>
</kw>
<msg timestamp="20201115 23:01:36.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026992236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027005111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.013" endtime="20201115 23:01:36.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026992236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027005111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.304" endtime="20201115 23:01:36.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.312" endtime="20201115 23:01:36.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.010" endtime="20201115 23:01:36.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.008" endtime="20201115 23:01:36.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.319" level="INFO">${RESULT} = [{'time': 0.027005111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2874999999998998e-05, 'source_diff': 1.2874999999998998e-05}, {'time': 0.027035181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:36.316" endtime="20201115 23:01:36.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.333" level="INFO">${ACCURACY} = {'time': [0.027005111, 0.027035181, 0.027065875, 0.027096625, 0.027127431, 0.027157944, 0.027188194, 0.027218431, 0.027249014, 0.027279722, 0.027309861, 0.027340764, 0.027370653, 0.027401792, 0.027431...</msg>
<status status="PASS" starttime="20201115 23:01:36.320" endtime="20201115 23:01:36.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.337" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.336" endtime="20201115 23:01:36.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.339" level="INFO">VALUE: [1.2874999999998998e-05, 2.4361999999999995e-05, 1.9556000000000434e-05, 2.5332999999998912e-05, 2.343100000000084e-05, 2.056900000000153e-05, 2.4346999999997482e-05, 2.1500000000000685e-05, 2.338899999999866e-05, 1.95830000000001e-05, 2.44030000000027e-05, 1.963899999999838e-05, 2.0570000000001004e-05, 2.1486000000001115e-05, 1.862500000000128e-05, 2.055499999999849e-05, 2.055500000000196e-05, 2.05830000000011e-05, 2.5291000000000202e-05, 1.95830000000001e-05, 2.1486000000001115e-05, 2.5305999999999246e-05, 2.1527999999999825e-05, 2.2443999999999936e-05, 2.045900000000045e-05, 2.244499999999941e-05, 2.4416000000002797e-05, 2.1500000000000685e-05, 2.154099999999992e-05, 2.0528000000002294e-05, 2.4388000000000187e-05, 2.05830000000011e-05, 2.1486000000001115e-05, 2.5318999999999342e-05, 2.152700000000035e-05, 2.337499999999909e-05, 2.3500000000002685e-05, 2.440299999999923e-05, 2.344500000000041e-05, 2.1471999999998076e-05, 2.6249999999998497e-05, 1.961099999999924e-05, 2.5305999999999246e-05, 2.1527999999999825e-05, 2.1514000000000255e-05, 2.338900000000213e-05, 2.4334000000000855e-05, 1.959699999999967e-05, 1.956900000000053e-05, 1.961099999999924e-05]</msg>
<status status="PASS" starttime="20201115 23:01:36.338" endtime="20201115 23:01:36.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.333" endtime="20201115 23:01:36.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.343" endtime="20201115 23:01:36.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.346" endtime="20201115 23:01:36.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.344" endtime="20201115 23:01:36.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.341" endtime="20201115 23:01:36.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.973" endtime="20201115 23:01:36.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.972" endtime="20201115 23:01:36.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.971" endtime="20201115 23:01:36.367"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.369" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.378" endtime="20201115 23:01:36.393"></status>
</kw>
<msg timestamp="20201115 23:01:36.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.376" endtime="20201115 23:01:36.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.394" endtime="20201115 23:01:36.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.397" endtime="20201115 23:01:36.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.374" endtime="20201115 23:01:36.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.371" endtime="20201115 23:01:36.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.406" endtime="20201115 23:01:36.693"></status>
</kw>
<msg timestamp="20201115 23:01:36.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.405" endtime="20201115 23:01:36.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.697" endtime="20201115 23:01:36.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.705" endtime="20201115 23:01:36.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.402" endtime="20201115 23:01:36.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.400" endtime="20201115 23:01:36.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.712" level="INFO">${RESULT} = [{'time': 0.022158153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.022189167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:36.709" endtime="20201115 23:01:36.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.725" level="INFO">${ACCURACY} = {'time': [0.022158153, 0.022189167, 0.022219542, 0.022249625, 0.022280819, 0.022311611, 0.022341431, 0.022372181, 0.022402667, 0.022433125, 0.022463694, 0.022494097, 0.022524708, 0.022555653, 0.022586...</msg>
<status status="PASS" starttime="20201115 23:01:36.713" endtime="20201115 23:01:36.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.730" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.729" endtime="20201115 23:01:36.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.732" level="INFO">VALUE: [1.3847000000000859e-05, 2.437500000000009e-05, 2.247299999999855e-05, 2.2485999999998646e-05, 2.3485999999999646e-05, 2.5304999999999772e-05, 1.9541999999997395e-05, 2.34030000000017e-05, 2.436100000000052e-05, 2.1514000000000255e-05, 2.2471999999999076e-05, 2.437500000000009e-05, 2.5236000000001396e-05, 2.0471999999997076e-05, 1.9570000000000004e-05, 2.2485999999998646e-05, 1.963900000000185e-05, 2.054100000000239e-05, 2.5305999999999246e-05, 2.147300000000102e-05, 2.2472000000002545e-05, 2.440299999999923e-05, 1.959699999999967e-05, 2.3416000000001796e-05, 2.437500000000009e-05, 2.1486000000001115e-05, 2.3416000000001796e-05, 1.9570000000000004e-05, 2.341700000000127e-05, 2.6262999999998593e-05, 2.437499999999662e-05, 1.9597999999999144e-05, 2.5235999999997927e-05, 1.961099999999924e-05, 2.054099999999892e-05, 2.3443999999997467e-05, 2.343099999999737e-05, 2.3388000000002657e-05, 2.243099999999984e-05, 2.248699999999812e-05, 2.1527999999999825e-05, 1.955500000000096e-05, 2.341700000000127e-05, 2.436100000000052e-05, 2.3415999999998327e-05, 1.9583999999999574e-05, 2.2443999999999936e-05, 2.059700000000067e-05, 2.6278000000001106e-05, 2.3472000000000076e-05]</msg>
<status status="PASS" starttime="20201115 23:01:36.731" endtime="20201115 23:01:36.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.726" endtime="20201115 23:01:36.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.735" endtime="20201115 23:01:36.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.739" endtime="20201115 23:01:36.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.737" endtime="20201115 23:01:36.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.734" endtime="20201115 23:01:36.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.370" endtime="20201115 23:01:36.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.368" endtime="20201115 23:01:36.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.368" endtime="20201115 23:01:36.760"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.762" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.771" endtime="20201115 23:01:36.793"></status>
</kw>
<msg timestamp="20201115 23:01:36.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.770" endtime="20201115 23:01:36.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.795" endtime="20201115 23:01:36.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.797" endtime="20201115 23:01:36.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.767" endtime="20201115 23:01:36.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.764" endtime="20201115 23:01:36.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.806" endtime="20201115 23:01:37.091"></status>
</kw>
<msg timestamp="20201115 23:01:37.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026180875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02619275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:36.805" endtime="20201115 23:01:37.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026180875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02619275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:37.095" endtime="20201115 23:01:37.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.104" endtime="20201115 23:01:37.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.802" endtime="20201115 23:01:37.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.801" endtime="20201115 23:01:37.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.111" level="INFO">${RESULT} = [{'time': 0.02619275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.026223264, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:37.108" endtime="20201115 23:01:37.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.126" level="INFO">${ACCURACY} = {'time': [0.02619275, 0.026223264, 0.026254264, 0.026285069, 0.026314736, 0.026345375, 0.026375875, 0.0264065, 0.026437542, 0.026467847, 0.026498583, 0.026528889, 0.026559347, 0.026589639, 0.026620417...</msg>
<status status="PASS" starttime="20201115 23:01:37.112" endtime="20201115 23:01:37.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.131" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.130" endtime="20201115 23:01:37.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.133" level="INFO">VALUE: [1.1875000000001468e-05, 2.2471999999999076e-05, 2.6332999999999912e-05, 2.434700000000095e-05, 2.34169999999978e-05, 2.0556000000001434e-05, 2.5332999999998912e-05, 1.95830000000001e-05, 2.5334000000001855e-05, 2.1485999999997646e-05, 2.054099999999892e-05, 2.437500000000009e-05, 2.534700000000195e-05, 2.2458000000002976e-05, 2.245899999999898e-05, 2.0499999999999685e-05, 2.1486000000001115e-05, 2.2514000000001255e-05, 2.44169999999988e-05, 2.1500000000000685e-05, 2.6263999999998067e-05, 2.437500000000009e-05, 2.0555999999997965e-05, 2.245899999999898e-05, 2.0570000000001004e-05, 2.245899999999898e-05, 2.436100000000052e-05, 1.95830000000001e-05, 1.95830000000001e-05, 2.437500000000009e-05, 2.334699999999995e-05, 2.1444000000002406e-05, 1.95830000000001e-05, 2.3458000000000506e-05, 2.0542000000001864e-05, 2.052699999999935e-05, 2.340299999999823e-05, 2.434700000000095e-05, 2.6264000000001536e-05, 2.1486000000001115e-05, 2.437500000000009e-05, 2.436099999999705e-05, 2.2430000000000366e-05, 2.0556000000001434e-05, 2.436100000000052e-05, 2.2499999999998216e-05, 2.437500000000009e-05, 2.3415999999998327e-05, 2.1514000000000255e-05, 2.438899999999966e-05]</msg>
<status status="PASS" starttime="20201115 23:01:37.132" endtime="20201115 23:01:37.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.127" endtime="20201115 23:01:37.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.136" endtime="20201115 23:01:37.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.140" endtime="20201115 23:01:37.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.138" endtime="20201115 23:01:37.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.135" endtime="20201115 23:01:37.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.763" endtime="20201115 23:01:37.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.761" endtime="20201115 23:01:37.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.760" endtime="20201115 23:01:37.161"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.164" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.172" endtime="20201115 23:01:37.191"></status>
</kw>
<msg timestamp="20201115 23:01:37.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.170" endtime="20201115 23:01:37.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.192" endtime="20201115 23:01:37.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.195" endtime="20201115 23:01:37.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.168" endtime="20201115 23:01:37.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.166" endtime="20201115 23:01:37.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.204" endtime="20201115 23:01:37.491"></status>
</kw>
<msg timestamp="20201115 23:01:37.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026744472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026778389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.202" endtime="20201115 23:01:37.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026744472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026778389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.495" endtime="20201115 23:01:37.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.503" endtime="20201115 23:01:37.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.200" endtime="20201115 23:01:37.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.198" endtime="20201115 23:01:37.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.510" level="INFO">${RESULT} = [{'time': 0.026778389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.391700000000136e-05, 'source_diff': 3.391700000000136e-05}, {'time': 0.026808931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:37.506" endtime="20201115 23:01:37.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.523" level="INFO">${ACCURACY} = {'time': [0.026778389, 0.026808931, 0.026839458, 0.026869986, 0.026899875, 0.026930375, 0.026961333, 0.026992264, 0.027022306, 0.027052944, 0.027083861, 0.027113611, 0.027144028, 0.02717475, 0.0272056...</msg>
<status status="PASS" starttime="20201115 23:01:37.511" endtime="20201115 23:01:37.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.527" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.526" endtime="20201115 23:01:37.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.530" level="INFO">VALUE: [3.391700000000136e-05, 2.0570000000001004e-05, 2.055499999999849e-05, 2.2429999999996897e-05, 2.3292000000001145e-05, 2.0541999999998395e-05, 2.1443999999998936e-05, 2.5332999999998912e-05, 2.243099999999984e-05, 2.4304999999998772e-05, 2.1472000000001545e-05, 1.959699999999967e-05, 2.0528000000002294e-05, 2.5291999999999676e-05, 2.2430000000000366e-05, 2.430500000000224e-05, 2.4305999999998246e-05, 2.338899999999866e-05, 2.0527999999998825e-05, 2.436100000000052e-05, 2.3402000000002227e-05, 2.5360999999998052e-05, 2.1485999999997646e-05, 2.2443999999999936e-05, 2.533300000000238e-05, 2.1500000000000685e-05, 2.1486000000001115e-05, 2.1472000000001545e-05, 2.5333999999998386e-05, 2.5304999999999772e-05, 1.863900000000085e-05, 2.1472000000001545e-05, 2.0542000000001864e-05, 2.2457999999999506e-05, 2.5304999999999772e-05, 2.243099999999984e-05, 2.1485999999997646e-05, 2.0527999999998825e-05, 2.5305999999999246e-05, 2.2486000000002115e-05, 2.337500000000256e-05, 1.956899999999706e-05, 2.1458000000001975e-05, 2.334699999999995e-05, 1.956900000000053e-05, 2.340299999999823e-05, 2.6292000000000676e-05, 2.1499999999997216e-05, 2.0542000000001864e-05, 2.434700000000095e-05]</msg>
<status status="PASS" starttime="20201115 23:01:37.529" endtime="20201115 23:01:37.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.524" endtime="20201115 23:01:37.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.538" endtime="20201115 23:01:37.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.541" endtime="20201115 23:01:37.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.540" endtime="20201115 23:01:37.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.536" endtime="20201115 23:01:37.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.164" endtime="20201115 23:01:37.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.162" endtime="20201115 23:01:37.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.162" endtime="20201115 23:01:37.562"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.565" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.573" endtime="20201115 23:01:37.589"></status>
</kw>
<msg timestamp="20201115 23:01:37.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.571" endtime="20201115 23:01:37.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.590" endtime="20201115 23:01:37.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.593" endtime="20201115 23:01:37.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.569" endtime="20201115 23:01:37.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.567" endtime="20201115 23:01:37.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.602" endtime="20201115 23:01:37.886"></status>
</kw>
<msg timestamp="20201115 23:01:37.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022613958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022633569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.600" endtime="20201115 23:01:37.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022613958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022633569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.890" endtime="20201115 23:01:37.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.899" endtime="20201115 23:01:37.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.598" endtime="20201115 23:01:37.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.596" endtime="20201115 23:01:37.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.905" level="INFO">${RESULT} = [{'time': 0.022633569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.961099999999924e-05, 'source_diff': 1.961099999999924e-05}, {'time': 0.022663875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:37.902" endtime="20201115 23:01:37.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.919" level="INFO">${ACCURACY} = {'time': [0.022633569, 0.022663875, 0.022694194, 0.022724444, 0.022754958, 0.022785333, 0.022816292, 0.022846528, 0.022876931, 0.022907792, 0.022938333, 0.022968931, 0.022999542, 0.023029931, 0.023060...</msg>
<status status="PASS" starttime="20201115 23:01:37.906" endtime="20201115 23:01:37.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.923" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.922" endtime="20201115 23:01:37.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.926" level="INFO">VALUE: [1.961099999999924e-05, 2.1486000000001115e-05, 2.533300000000238e-05, 2.2430000000000366e-05, 2.1457999999998506e-05, 2.238900000000113e-05, 2.243099999999984e-05, 2.244500000000288e-05, 2.437500000000009e-05, 2.244499999999941e-05, 2.534700000000195e-05, 2.4361999999999995e-05, 1.9583999999999574e-05, 2.244499999999941e-05, 2.343100000000084e-05, 2.0541999999998395e-05, 2.2457999999999506e-05, 2.1527999999999825e-05, 2.2471999999999076e-05, 1.961100000000271e-05, 1.9583999999999574e-05, 2.05830000000011e-05, 2.5304999999999772e-05, 2.5332999999998912e-05, 1.956899999999706e-05, 1.961100000000271e-05, 2.337499999999909e-05, 1.959699999999967e-05, 2.061100000000024e-05, 2.2457999999999506e-05, 2.245900000000245e-05, 2.341700000000127e-05, 2.340299999999823e-05, 2.1499999999997216e-05, 2.434700000000095e-05, 2.244500000000288e-05, 1.95830000000001e-05, 2.338899999999866e-05, 2.243099999999984e-05, 2.3415999999998327e-05, 2.2443999999999936e-05, 2.054099999999892e-05, 2.6291000000001202e-05, 2.4348000000000425e-05, 2.3402000000002227e-05, 2.0486000000000115e-05, 1.9570000000000004e-05, 2.2457999999999506e-05, 2.4334000000000855e-05, 2.437500000000009e-05]</msg>
<status status="PASS" starttime="20201115 23:01:37.924" endtime="20201115 23:01:37.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.920" endtime="20201115 23:01:37.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.929" endtime="20201115 23:01:37.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.933" endtime="20201115 23:01:37.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.931" endtime="20201115 23:01:37.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.928" endtime="20201115 23:01:37.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.565" endtime="20201115 23:01:37.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.564" endtime="20201115 23:01:37.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.563" endtime="20201115 23:01:37.954"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.956" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.964" endtime="20201115 23:01:37.985"></status>
</kw>
<msg timestamp="20201115 23:01:37.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.963" endtime="20201115 23:01:37.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.987" endtime="20201115 23:01:37.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.989" endtime="20201115 23:01:37.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.960" endtime="20201115 23:01:37.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.958" endtime="20201115 23:01:37.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.998" endtime="20201115 23:01:38.284"></status>
</kw>
<msg timestamp="20201115 23:01:38.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023036528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.997" endtime="20201115 23:01:38.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023036528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.289" endtime="20201115 23:01:38.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.297" endtime="20201115 23:01:38.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.994" endtime="20201115 23:01:38.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.992" endtime="20201115 23:01:38.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.303" level="INFO">${RESULT} = [{'time': 0.023036528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.718100000000112e-05, 'source_diff': 2.718100000000112e-05}, {'time': 0.023066722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:38.300" endtime="20201115 23:01:38.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.317" level="INFO">${ACCURACY} = {'time': [0.023036528, 0.023066722, 0.023097528, 0.023128319, 0.023158486, 0.023189389, 0.02321975, 0.02324975, 0.023280917, 0.023310556, 0.023341931, 0.023372333, 0.023402917, 0.02343275, 0.023463361...</msg>
<status status="PASS" starttime="20201115 23:01:38.305" endtime="20201115 23:01:38.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.322" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.321" endtime="20201115 23:01:38.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.324" level="INFO">VALUE: [2.718100000000112e-05, 1.959699999999967e-05, 2.2499999999998216e-05, 2.5304999999999772e-05, 2.2457999999999506e-05, 2.341700000000127e-05, 2.338900000000213e-05, 2.438899999999966e-05, 2.1486000000001115e-05, 2.4348000000000425e-05, 2.5278000000000106e-05, 1.95830000000001e-05, 2.1514000000000255e-05, 1.95830000000001e-05, 2.2429999999996897e-05, 2.1486000000001115e-05, 2.1514000000000255e-05, 2.1500000000000685e-05, 2.0527999999998825e-05, 2.245900000000245e-05, 2.2485999999998646e-05, 2.340299999999823e-05, 2.2485999999998646e-05, 2.2471999999999076e-05, 2.245899999999898e-05, 2.245899999999898e-05, 2.1500000000000685e-05, 2.244500000000288e-05, 2.2457999999999506e-05, 2.1527999999999825e-05, 2.4361999999999995e-05, 2.2429999999996897e-05, 1.956900000000053e-05, 2.3430000000001366e-05, 2.238900000000113e-05, 2.5332999999998912e-05, 2.0527999999998825e-05, 2.2443999999999936e-05, 2.2472000000002545e-05, 2.1486000000001115e-05, 2.1486000000001115e-05, 2.3401999999998757e-05, 2.243099999999984e-05, 2.5318999999999342e-05, 2.2443999999999936e-05, 1.961099999999924e-05, 1.95830000000001e-05, 2.1471999999998076e-05, 2.34169999999978e-05, 2.4346999999997482e-05]</msg>
<status status="PASS" starttime="20201115 23:01:38.323" endtime="20201115 23:01:38.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.318" endtime="20201115 23:01:38.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.327" endtime="20201115 23:01:38.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.331" endtime="20201115 23:01:38.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.329" endtime="20201115 23:01:38.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.326" endtime="20201115 23:01:38.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.957" endtime="20201115 23:01:38.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.955" endtime="20201115 23:01:38.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.954" endtime="20201115 23:01:38.352"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.354" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.362" endtime="20201115 23:01:38.382"></status>
</kw>
<msg timestamp="20201115 23:01:38.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.361" endtime="20201115 23:01:38.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.384" endtime="20201115 23:01:38.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.386" endtime="20201115 23:01:38.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.358" endtime="20201115 23:01:38.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.356" endtime="20201115 23:01:38.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.395" endtime="20201115 23:01:38.681"></status>
</kw>
<msg timestamp="20201115 23:01:38.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026792014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026825944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.393" endtime="20201115 23:01:38.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026792014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026825944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.685" endtime="20201115 23:01:38.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.694" endtime="20201115 23:01:38.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.391" endtime="20201115 23:01:38.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.389" endtime="20201115 23:01:38.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.700" level="INFO">${RESULT} = [{'time': 0.026825944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.393000000000146e-05, 'source_diff': 3.393000000000146e-05}, {'time': 0.026856333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:38.697" endtime="20201115 23:01:38.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.715" level="INFO">${ACCURACY} = {'time': [0.026825944, 0.026856333, 0.026887347, 0.026917681, 0.026948486, 0.026978819, 0.027009056, 0.027040069, 0.027070583, 0.027100278, 0.027130944, 0.027161778, 0.027192264, 0.027223306, 0.027253...</msg>
<status status="PASS" starttime="20201115 23:01:38.701" endtime="20201115 23:01:38.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.719" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.718" endtime="20201115 23:01:38.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.722" level="INFO">VALUE: [3.393000000000146e-05, 1.959699999999967e-05, 2.2471999999999076e-05, 2.1514000000000255e-05, 2.0499999999999685e-05, 2.336099999999952e-05, 1.948699999999859e-05, 2.436100000000052e-05, 2.054099999999892e-05, 2.141699999999927e-05, 2.2443999999999936e-05, 2.5291999999999676e-05, 2.343100000000084e-05, 2.54169999999998e-05, 1.955500000000096e-05, 2.5291000000000202e-05, 2.0486000000000115e-05, 1.95830000000001e-05, 2.4346999999997482e-05, 2.2443999999999936e-05, 2.055500000000196e-05, 2.438900000000313e-05, 2.340299999999823e-05, 2.241700000000027e-05, 2.4318999999998342e-05, 2.436100000000052e-05, 2.1471999999998076e-05, 2.1458000000001975e-05, 2.2430000000000366e-05, 2.0541999999998395e-05, 2.4388000000000187e-05, 2.0472000000000545e-05, 1.9527999999997825e-05, 1.95830000000001e-05, 2.436100000000052e-05, 2.5334000000001855e-05, 1.95830000000001e-05, 2.241700000000027e-05, 2.1514000000000255e-05, 2.431900000000181e-05, 2.6278000000001106e-05, 2.3430000000001366e-05, 2.1513999999996786e-05, 2.0542000000001864e-05, 1.9542000000000864e-05, 2.2443999999999936e-05, 2.2457999999999506e-05, 2.244499999999941e-05, 2.4361999999999995e-05, 2.24030000000007e-05]</msg>
<status status="PASS" starttime="20201115 23:01:38.720" endtime="20201115 23:01:38.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.716" endtime="20201115 23:01:38.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.725" endtime="20201115 23:01:38.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.728" endtime="20201115 23:01:38.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.727" endtime="20201115 23:01:38.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.723" endtime="20201115 23:01:38.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.355" endtime="20201115 23:01:38.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.353" endtime="20201115 23:01:38.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.352" endtime="20201115 23:01:38.750"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.752" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.760" endtime="20201115 23:01:38.779"></status>
</kw>
<msg timestamp="20201115 23:01:38.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.758" endtime="20201115 23:01:38.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.780" endtime="20201115 23:01:38.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.783" endtime="20201115 23:01:38.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.756" endtime="20201115 23:01:38.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.754" endtime="20201115 23:01:38.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.792" endtime="20201115 23:01:39.078"></status>
</kw>
<msg timestamp="20201115 23:01:39.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026054153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026068972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.790" endtime="20201115 23:01:39.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026054153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026068972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.082" endtime="20201115 23:01:39.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.091" endtime="20201115 23:01:39.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.788" endtime="20201115 23:01:39.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.786" endtime="20201115 23:01:39.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.097" level="INFO">${RESULT} = [{'time': 0.026068972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.481899999999925e-05, 'source_diff': 1.481899999999925e-05}, {'time': 0.026099569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:39.094" endtime="20201115 23:01:39.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.111" level="INFO">${ACCURACY} = {'time': [0.026068972, 0.026099569, 0.026129722, 0.026160889, 0.026190569, 0.026221431, 0.026252292, 0.026282194, 0.026313097, 0.026343958, 0.026374347, 0.026404889, 0.026435375, 0.026465222, 0.026496...</msg>
<status status="PASS" starttime="20201115 23:01:39.098" endtime="20201115 23:01:39.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.115" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.114" endtime="20201115 23:01:39.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.118" level="INFO">VALUE: [1.481899999999925e-05, 1.95830000000001e-05, 2.2457999999999506e-05, 2.0555999999997965e-05, 2.4388000000000187e-05, 2.1527999999999825e-05, 2.34030000000017e-05, 2.336099999999952e-05, 2.054099999999892e-05, 1.962500000000228e-05, 2.2430000000000366e-05, 2.1500000000000685e-05, 2.436100000000052e-05, 1.862500000000128e-05, 2.437500000000009e-05, 2.341700000000127e-05, 2.2485999999998646e-05, 2.4361999999999995e-05, 2.5291999999999676e-05, 2.0499999999999685e-05, 1.9542000000000864e-05, 2.1527999999999825e-05, 2.1513999999996786e-05, 2.2430000000000366e-05, 2.244499999999941e-05, 1.865300000000042e-05, 2.345899999999998e-05, 2.2401999999997757e-05, 2.052699999999935e-05, 2.5334000000001855e-05, 2.2443999999999936e-05, 1.9570000000000004e-05, 2.6235999999998927e-05, 2.0541999999998395e-05, 2.3443999999997467e-05, 2.5319999999998816e-05, 2.436100000000052e-05, 2.151300000000078e-05, 2.436100000000052e-05, 2.5332999999998912e-05, 2.5305999999999246e-05, 2.241700000000027e-05, 2.338900000000213e-05, 2.0542000000001864e-05, 2.1472000000001545e-05, 1.954099999999792e-05, 2.5305999999999246e-05, 2.440299999999923e-05, 2.2499999999998216e-05, 2.5320000000002285e-05]</msg>
<status status="PASS" starttime="20201115 23:01:39.116" endtime="20201115 23:01:39.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.112" endtime="20201115 23:01:39.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.121" endtime="20201115 23:01:39.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.124" endtime="20201115 23:01:39.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.123" endtime="20201115 23:01:39.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.119" endtime="20201115 23:01:39.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.753" endtime="20201115 23:01:39.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.751" endtime="20201115 23:01:39.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.750" endtime="20201115 23:01:39.146"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.148" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.156" endtime="20201115 23:01:39.177"></status>
</kw>
<msg timestamp="20201115 23:01:39.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.155" endtime="20201115 23:01:39.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.179" endtime="20201115 23:01:39.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.182" endtime="20201115 23:01:39.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.152" endtime="20201115 23:01:39.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.150" endtime="20201115 23:01:39.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.191" endtime="20201115 23:01:39.474"></status>
</kw>
<msg timestamp="20201115 23:01:39.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027171639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027203611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.189" endtime="20201115 23:01:39.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027171639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027203611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.479" endtime="20201115 23:01:39.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.487" endtime="20201115 23:01:39.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.186" endtime="20201115 23:01:39.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.185" endtime="20201115 23:01:39.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.494" level="INFO">${RESULT} = [{'time': 0.027203611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.197199999999817e-05, 'source_diff': 3.197199999999817e-05}, {'time': 0.027234417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:39.490" endtime="20201115 23:01:39.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.507" level="INFO">${ACCURACY} = {'time': [0.027203611, 0.027234417, 0.027265083, 0.027295403, 0.027326181, 0.027356069, 0.027387208, 0.027417611, 0.027448514, 0.027478556, 0.027508875, 0.027539472, 0.027569736, 0.027600569, 0.027631...</msg>
<status status="PASS" starttime="20201115 23:01:39.495" endtime="20201115 23:01:39.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.512" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.511" endtime="20201115 23:01:39.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.514" level="INFO">VALUE: [3.197199999999817e-05, 2.5305999999999246e-05, 2.1514000000000255e-05, 2.1485999999997646e-05, 2.0528000000002294e-05, 2.055499999999849e-05, 2.437500000000009e-05, 2.1472000000001545e-05, 2.6235999999998927e-05, 2.341700000000127e-05, 2.158299999999863e-05, 2.4277999999999106e-05, 2.141699999999927e-05, 2.055499999999849e-05, 2.5291999999999676e-05, 2.5318999999999342e-05, 2.5320000000002285e-05, 2.5305999999999246e-05, 2.336099999999952e-05, 2.238900000000113e-05, 2.438899999999966e-05, 2.337499999999909e-05, 2.145899999999798e-05, 2.34030000000017e-05, 2.3402000000002227e-05, 2.44030000000027e-05, 1.9583999999999574e-05, 2.2472000000002545e-05, 2.3416000000001796e-05, 2.5291999999999676e-05, 2.234700000000242e-05, 2.1485999999997646e-05, 2.5319999999998816e-05, 2.5318999999999342e-05, 2.2443999999999936e-05, 2.336100000000299e-05, 2.238900000000113e-05, 2.5318999999999342e-05, 2.1514000000000255e-05, 2.245900000000245e-05, 2.5291999999999676e-05, 2.1485999999997646e-05, 2.336099999999952e-05, 2.5318999999999342e-05, 2.1513999999996786e-05, 2.245899999999898e-05, 2.5346999999998482e-05, 2.34169999999978e-05, 2.4318999999998342e-05, 2.055499999999849e-05]</msg>
<status status="PASS" starttime="20201115 23:01:39.513" endtime="20201115 23:01:39.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.508" endtime="20201115 23:01:39.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.518" endtime="20201115 23:01:39.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.521" endtime="20201115 23:01:39.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.519" endtime="20201115 23:01:39.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.516" endtime="20201115 23:01:39.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.149" endtime="20201115 23:01:39.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.147" endtime="20201115 23:01:39.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.146" endtime="20201115 23:01:39.544"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.547" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.557" endtime="20201115 23:01:39.573"></status>
</kw>
<msg timestamp="20201115 23:01:39.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.555" endtime="20201115 23:01:39.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.575" endtime="20201115 23:01:39.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.578" endtime="20201115 23:01:39.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.552" endtime="20201115 23:01:39.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.550" endtime="20201115 23:01:39.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.587" endtime="20201115 23:01:39.873"></status>
</kw>
<msg timestamp="20201115 23:01:39.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027301458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027331597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.586" endtime="20201115 23:01:39.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027301458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027331597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.878" endtime="20201115 23:01:39.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.886" endtime="20201115 23:01:39.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.583" endtime="20201115 23:01:39.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.581" endtime="20201115 23:01:39.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.893" level="INFO">${RESULT} = [{'time': 0.027331597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0138999999998473e-05, 'source_diff': 3.0138999999998473e-05}, {'time': 0.027361889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:39.890" endtime="20201115 23:01:39.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.907" level="INFO">${ACCURACY} = {'time': [0.027331597, 0.027361889, 0.027392583, 0.027423681, 0.027453958, 0.027484514, 0.027514931, 0.027545722, 0.027575778, 0.027606181, 0.027636944, 0.027667764, 0.027697833, 0.0277285, 0.02775848...</msg>
<status status="PASS" starttime="20201115 23:01:39.894" endtime="20201115 23:01:39.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.912" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.911" endtime="20201115 23:01:39.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.915" level="INFO">VALUE: [3.0138999999998473e-05, 2.1500000000000685e-05, 1.955500000000096e-05, 2.0499999999999685e-05, 2.5291000000000202e-05, 2.2458000000002976e-05, 1.9597999999999144e-05, 2.3416000000001796e-05, 2.4346999999997482e-05, 2.145900000000145e-05, 2.0472000000000545e-05, 2.0528000000002294e-05, 2.436100000000052e-05, 2.2443999999999936e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.1443999999998936e-05, 2.2457999999999506e-05, 2.3444000000000936e-05, 2.6221999999999357e-05, 2.5291999999999676e-05, 2.244499999999941e-05, 2.243099999999984e-05, 1.961099999999924e-05, 2.438899999999966e-05, 2.2457999999999506e-05, 2.052699999999935e-05, 2.152700000000035e-05, 2.4361999999999995e-05, 2.144500000000188e-05, 2.1457999999998506e-05, 2.237500000000156e-05, 2.1527999999999825e-05, 2.1457999999998506e-05, 2.0458000000000975e-05, 2.438899999999966e-05, 2.1527999999999825e-05, 2.336099999999952e-05, 1.955500000000096e-05, 1.9583999999999574e-05, 2.4415999999999327e-05, 2.238899999999766e-05, 2.1444000000002406e-05, 2.3430000000001366e-05, 1.959699999999967e-05, 2.148700000000059e-05, 2.245899999999898e-05, 2.5291999999999676e-05, 2.1500000000000685e-05, 2.1541999999999395e-05]</msg>
<status status="PASS" starttime="20201115 23:01:39.913" endtime="20201115 23:01:39.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.908" endtime="20201115 23:01:39.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.918" endtime="20201115 23:01:39.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.922" endtime="20201115 23:01:39.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.920" endtime="20201115 23:01:39.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.916" endtime="20201115 23:01:39.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.548" endtime="20201115 23:01:39.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.546" endtime="20201115 23:01:39.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.545" endtime="20201115 23:01:39.943"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.946" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.954" endtime="20201115 23:01:39.979"></status>
</kw>
<msg timestamp="20201115 23:01:39.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.953" endtime="20201115 23:01:39.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.982" endtime="20201115 23:01:39.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.988" endtime="20201115 23:01:39.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.950" endtime="20201115 23:01:39.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.948" endtime="20201115 23:01:39.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.009" endtime="20201115 23:01:40.303"></status>
</kw>
<msg timestamp="20201115 23:01:40.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0281095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028130014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:40.005" endtime="20201115 23:01:40.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0281095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028130014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:40.307" endtime="20201115 23:01:40.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.315" endtime="20201115 23:01:40.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.999" endtime="20201115 23:01:40.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.995" endtime="20201115 23:01:40.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.322" level="INFO">${RESULT} = [{'time': 0.028130014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0513999999999255e-05, 'source_diff': 2.0513999999999255e-05}, {'time': 0.028160889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:40.319" endtime="20201115 23:01:40.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:40.337" level="INFO">${ACCURACY} = {'time': [0.028130014, 0.028160889, 0.028191486, 0.028222069, 0.028252069, 0.028282569, 0.028313097, 0.028343708, 0.028374222, 0.028404611, 0.028435639, 0.028466472, 0.028496514, 0.028527444, 0.028557...</msg>
<status status="PASS" starttime="20201115 23:01:40.323" endtime="20201115 23:01:40.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.341" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:01:40.340" endtime="20201115 23:01:40.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.344" level="INFO">VALUE: [2.0513999999999255e-05, 2.1514000000000255e-05, 2.3430000000001366e-05, 2.436100000000052e-05, 2.433300000000138e-05, 1.951299999999878e-05, 2.3458000000000506e-05, 2.2443999999999936e-05, 2.0472000000000545e-05, 2.24030000000007e-05, 2.1471999999998076e-05, 2.5318999999999342e-05, 2.2457999999999506e-05, 2.6262999999998593e-05, 2.438899999999966e-05, 2.2485999999998646e-05, 1.9570000000000004e-05, 2.3415999999998327e-05, 2.1415999999999796e-05, 2.337499999999909e-05, 2.5277000000000632e-05, 2.0457999999997506e-05, 2.4348000000000425e-05, 2.338899999999866e-05, 2.5318999999999342e-05, 2.2472000000002545e-05, 2.0542000000001864e-05, 2.3415999999998327e-05, 2.5250000000000966e-05, 1.861099999999824e-05, 2.1472000000001545e-05, 2.5318999999999342e-05, 2.2457999999999506e-05, 2.5318999999999342e-05, 2.5332999999998912e-05, 2.061099999999677e-05, 1.9597999999999144e-05, 1.956900000000053e-05, 2.245899999999898e-05, 1.9612000000002183e-05, 1.9528000000001294e-05, 2.334699999999995e-05, 2.5333999999998386e-05, 2.5318999999999342e-05, 1.9583999999999574e-05, 2.2457999999999506e-05, 1.9570000000000004e-05, 2.0542000000001864e-05, 2.055500000000196e-05, 2.247300000000202e-05]</msg>
<status status="PASS" starttime="20201115 23:01:40.342" endtime="20201115 23:01:40.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.338" endtime="20201115 23:01:40.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.347" endtime="20201115 23:01:40.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:40.351" endtime="20201115 23:01:40.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.349" endtime="20201115 23:01:40.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.346" endtime="20201115 23:01:40.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.947" endtime="20201115 23:01:40.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.945" endtime="20201115 23:01:40.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.944" endtime="20201115 23:01:40.372"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.374" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.385" endtime="20201115 23:01:40.404"></status>
</kw>
<msg timestamp="20201115 23:01:40.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.382" endtime="20201115 23:01:40.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.406" endtime="20201115 23:01:40.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.408" endtime="20201115 23:01:40.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.379" endtime="20201115 23:01:40.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.376" endtime="20201115 23:01:40.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.417" endtime="20201115 23:01:40.704"></status>
</kw>
<msg timestamp="20201115 23:01:40.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026592861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02660575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:40.416" endtime="20201115 23:01:40.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026592861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02660575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:40.708" endtime="20201115 23:01:40.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.716" endtime="20201115 23:01:40.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.413" endtime="20201115 23:01:40.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.411" endtime="20201115 23:01:40.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.723" level="INFO">${RESULT} = [{'time': 0.02660575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2889000000002038e-05, 'source_diff': 1.2889000000002038e-05}, {'time': 0.026636667, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:40.719" endtime="20201115 23:01:40.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:40.736" level="INFO">${ACCURACY} = {'time': [0.02660575, 0.026636667, 0.026667347, 0.026697292, 0.026727653, 0.026758292, 0.026788819, 0.026819292, 0.02684975, 0.026880264, 0.026911181, 0.026941597, 0.026972042, 0.027002944, 0.02703306...</msg>
<status status="PASS" starttime="20201115 23:01:40.724" endtime="20201115 23:01:40.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.741" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:01:40.740" endtime="20201115 23:01:40.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.744" level="INFO">VALUE: [1.2889000000002038e-05, 2.243099999999984e-05, 2.1444000000002406e-05, 2.044500000000088e-05, 2.5278000000000106e-05, 2.347299999999955e-05, 2.2485999999998646e-05, 2.4334000000000855e-05, 2.240299999999723e-05, 2.241700000000027e-05, 2.0513999999999255e-05, 2.44030000000027e-05, 2.0570000000001004e-05, 2.055500000000196e-05, 2.5332999999998912e-05, 2.1471999999998076e-05, 1.9570000000000004e-05, 2.1500000000000685e-05, 2.0541999999998395e-05, 2.4276999999999632e-05, 2.5291999999999676e-05, 2.3430000000001366e-05, 1.959699999999967e-05, 1.9513999999998255e-05, 2.5264000000000536e-05, 2.343099999999737e-05, 2.2471999999999076e-05, 2.0527999999998825e-05, 2.534700000000195e-05, 2.141699999999927e-05, 1.955499999999749e-05, 2.434700000000095e-05, 2.054099999999892e-05, 2.4306000000001715e-05, 2.336099999999952e-05, 1.9570000000000004e-05, 2.4347999999996955e-05, 2.245900000000245e-05, 2.247300000000202e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.0542000000001864e-05, 2.6277000000001632e-05, 2.5319999999998816e-05, 2.437500000000009e-05, 2.5278000000000106e-05, 2.0556000000001434e-05, 2.2471999999999076e-05, 2.337499999999909e-05, 2.1486000000001115e-05]</msg>
<status status="PASS" starttime="20201115 23:01:40.742" endtime="20201115 23:01:40.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.737" endtime="20201115 23:01:40.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.747" endtime="20201115 23:01:40.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:40.750" endtime="20201115 23:01:40.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.749" endtime="20201115 23:01:40.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.745" endtime="20201115 23:01:40.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.375" endtime="20201115 23:01:40.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.373" endtime="20201115 23:01:40.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.372" endtime="20201115 23:01:40.774"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.779" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.796" endtime="20201115 23:01:40.817"></status>
</kw>
<msg timestamp="20201115 23:01:40.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.793" endtime="20201115 23:01:40.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.821" endtime="20201115 23:01:40.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.826" endtime="20201115 23:01:40.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.788" endtime="20201115 23:01:40.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.783" endtime="20201115 23:01:40.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.845" endtime="20201115 23:01:41.133"></status>
</kw>
<msg timestamp="20201115 23:01:41.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039033444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039062597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.841" endtime="20201115 23:01:41.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039033444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039062597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.137" endtime="20201115 23:01:41.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.146" endtime="20201115 23:01:41.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.836" endtime="20201115 23:01:41.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.832" endtime="20201115 23:01:41.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:41.153" level="INFO">${RESULT} = [{'time': 0.039062597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9152999999997042e-05, 'source_diff': 2.9152999999997042e-05}, {'time': 0.039092333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:41.149" endtime="20201115 23:01:41.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.166" level="INFO">${ACCURACY} = {'time': [0.039062597, 0.039092333, 0.039123194, 0.03915375, 0.039184167, 0.039215028, 0.039245514, 0.039275403, 0.039306028, 0.0393365, 0.039367, 0.039398139, 0.039428306, 0.039459125, 0.039489111, 0...</msg>
<status status="PASS" starttime="20201115 23:01:41.154" endtime="20201115 23:01:41.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.172" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.170" endtime="20201115 23:01:41.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.174" level="INFO">VALUE: [2.9152999999997042e-05, 1.862500000000128e-05, 2.431900000000181e-05, 2.433300000000138e-05, 2.0499999999999685e-05, 2.1514000000000255e-05, 2.434700000000095e-05, 1.866699999999999e-05, 1.9513999999998255e-05, 2.5264000000004005e-05, 2.437500000000009e-05, 2.0527999999998825e-05, 2.247300000000202e-05, 2.437500000000009e-05, 2.1458000000001975e-05, 2.337500000000603e-05, 2.244500000000288e-05, 2.148700000000059e-05, 2.0555999999997965e-05, 2.0527999999998825e-05, 1.955499999999749e-05, 2.434700000000095e-05, 2.0527999999998825e-05, 1.9584000000003043e-05, 2.0499999999999685e-05, 2.1472000000001545e-05, 2.1527999999999825e-05, 2.437500000000009e-05, 2.34169999999978e-05, 2.1514000000000255e-05, 1.862499999999434e-05, 2.5304999999996303e-05, 2.338899999999866e-05, 2.2514000000001255e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.340300000000517e-05, 2.5318999999995873e-05, 2.6277999999997637e-05, 2.1513999999993316e-05, 1.9584000000003043e-05, 2.0528000000005764e-05, 2.430500000000224e-05, 2.0527999999998825e-05, 2.0541999999998395e-05, 2.337500000000603e-05, 2.5332999999995442e-05, 2.434700000000095e-05, 1.961100000000271e-05, 2.4348000000000425e-05]</msg>
<status status="PASS" starttime="20201115 23:01:41.173" endtime="20201115 23:01:41.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.168" endtime="20201115 23:01:41.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.178" endtime="20201115 23:01:41.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.181" endtime="20201115 23:01:41.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.180" endtime="20201115 23:01:41.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.176" endtime="20201115 23:01:41.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.781" endtime="20201115 23:01:41.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.777" endtime="20201115 23:01:41.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.775" endtime="20201115 23:01:41.202"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.205" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.213" endtime="20201115 23:01:41.234"></status>
</kw>
<msg timestamp="20201115 23:01:41.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.211" endtime="20201115 23:01:41.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.236" endtime="20201115 23:01:41.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.239" endtime="20201115 23:01:41.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.209" endtime="20201115 23:01:41.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.207" endtime="20201115 23:01:41.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.247" endtime="20201115 23:01:41.534"></status>
</kw>
<msg timestamp="20201115 23:01:41.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024953208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024964194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.246" endtime="20201115 23:01:41.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024953208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024964194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.538" endtime="20201115 23:01:41.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.546" endtime="20201115 23:01:41.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.243" endtime="20201115 23:01:41.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.242" endtime="20201115 23:01:41.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:41.553" level="INFO">${RESULT} = [{'time': 0.024964194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0985999999997553e-05, 'source_diff': 1.0985999999997553e-05}, {'time': 0.024995306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:41.550" endtime="20201115 23:01:41.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.567" level="INFO">${ACCURACY} = {'time': [0.024964194, 0.024995306, 0.025025819, 0.025055708, 0.025086736, 0.025116806, 0.025147458, 0.0251785, 0.025209111, 0.025239292, 0.025269875, 0.025299931, 0.025331153, 0.025360958, 0.02539151...</msg>
<status status="PASS" starttime="20201115 23:01:41.554" endtime="20201115 23:01:41.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.571" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.570" endtime="20201115 23:01:41.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.574" level="INFO">VALUE: [1.0985999999997553e-05, 2.1499999999997216e-05, 2.531900000000281e-05, 2.1486000000001115e-05, 2.336099999999952e-05, 2.138900000000013e-05, 2.1500000000000685e-05, 2.6278000000001106e-05, 2.5304999999999772e-05, 1.9583999999999574e-05, 2.331900000000081e-05, 2.4348000000000425e-05, 2.1555999999998965e-05, 1.861099999999824e-05, 2.2457999999999506e-05, 2.4318999999998342e-05, 2.0499999999999685e-05, 2.4320000000001285e-05, 2.4346999999997482e-05, 2.5304999999999772e-05, 2.0527999999998825e-05, 2.2430000000000366e-05, 2.0513999999999255e-05, 2.338900000000213e-05, 2.0527999999998825e-05, 2.5278000000000106e-05, 2.148700000000059e-05, 2.244499999999941e-05, 2.244500000000288e-05, 2.436100000000052e-05, 2.5278000000000106e-05, 2.4333999999997385e-05, 2.155499999999949e-05, 2.2457999999999506e-05, 2.244499999999941e-05, 1.9583999999999574e-05, 2.438899999999966e-05, 2.055499999999849e-05, 2.2472000000002545e-05, 2.1486000000001115e-05, 2.1485999999997646e-05, 2.245899999999898e-05, 2.5334000000001855e-05, 2.147300000000102e-05, 2.2457999999999506e-05, 2.434700000000095e-05, 2.0527999999998825e-05, 2.5318999999999342e-05, 1.956899999999706e-05, 2.244499999999941e-05]</msg>
<status status="PASS" starttime="20201115 23:01:41.572" endtime="20201115 23:01:41.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.568" endtime="20201115 23:01:41.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.577" endtime="20201115 23:01:41.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.580" endtime="20201115 23:01:41.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.579" endtime="20201115 23:01:41.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.575" endtime="20201115 23:01:41.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.205" endtime="20201115 23:01:41.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.204" endtime="20201115 23:01:41.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.203" endtime="20201115 23:01:41.602"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.604" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.612" endtime="20201115 23:01:41.633"></status>
</kw>
<msg timestamp="20201115 23:01:41.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.611" endtime="20201115 23:01:41.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.634" endtime="20201115 23:01:41.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.637" endtime="20201115 23:01:41.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.608" endtime="20201115 23:01:41.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.606" endtime="20201115 23:01:41.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.646" endtime="20201115 23:01:41.933"></status>
</kw>
<msg timestamp="20201115 23:01:41.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027802333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027808528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.644" endtime="20201115 23:01:41.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027802333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027808528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.937" endtime="20201115 23:01:41.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.945" endtime="20201115 23:01:41.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.642" endtime="20201115 23:01:41.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.640" endtime="20201115 23:01:41.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:41.952" level="INFO">${RESULT} = [{'time': 0.027808528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.027838708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:41.949" endtime="20201115 23:01:41.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.967" level="INFO">${ACCURACY} = {'time': [0.027808528, 0.027838708, 0.027869181, 0.027899444, 0.027930236, 0.027960806, 0.027990792, 0.028022153, 0.028052583, 0.028083194, 0.028113431, 0.028143653, 0.0281745, 0.028205167, 0.02823540...</msg>
<status status="PASS" starttime="20201115 23:01:41.953" endtime="20201115 23:01:41.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.971" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.970" endtime="20201115 23:01:41.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.974" level="INFO">VALUE: [6.195000000000506e-06, 2.3416000000001796e-05, 2.045900000000045e-05, 2.1443999999998936e-05, 2.0513999999999255e-05, 2.245900000000245e-05, 2.5305999999999246e-05, 2.6264000000001536e-05, 2.2430000000000366e-05, 2.5262999999997593e-05, 1.962500000000228e-05, 2.536100000000152e-05, 2.343100000000084e-05, 1.9570000000000004e-05, 2.244499999999941e-05, 2.5305999999999246e-05, 2.2457999999999506e-05, 2.5291000000000202e-05, 2.0541999999998395e-05, 2.0514000000002724e-05, 2.6292000000000676e-05, 2.052699999999935e-05, 2.1499999999997216e-05, 2.052699999999935e-05, 2.5305999999999246e-05, 2.145900000000145e-05, 2.5318999999999342e-05, 2.437500000000009e-05, 2.5346999999998482e-05, 1.95830000000001e-05, 2.0542000000001864e-05, 2.4348000000000425e-05, 2.1429999999999366e-05, 2.054099999999892e-05, 2.2514000000001255e-05, 2.056899999999806e-05, 1.961099999999924e-05, 2.434700000000095e-05, 2.340299999999823e-05, 2.6264000000001536e-05, 2.2430000000000366e-05, 2.0514000000002724e-05, 2.0513999999999255e-05, 2.1513999999996786e-05, 2.244499999999941e-05, 2.434700000000095e-05, 2.1471999999998076e-05, 2.243099999999984e-05, 2.2429999999996897e-05, 2.5304999999999772e-05]</msg>
<status status="PASS" starttime="20201115 23:01:41.972" endtime="20201115 23:01:41.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.968" endtime="20201115 23:01:41.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.977" endtime="20201115 23:01:41.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.980" endtime="20201115 23:01:42.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.979" endtime="20201115 23:01:42.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.975" endtime="20201115 23:01:42.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.604" endtime="20201115 23:01:42.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.603" endtime="20201115 23:01:42.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.602" endtime="20201115 23:01:42.001"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.004" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.012" endtime="20201115 23:01:42.029"></status>
</kw>
<msg timestamp="20201115 23:01:42.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.010" endtime="20201115 23:01:42.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.031" endtime="20201115 23:01:42.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.034" endtime="20201115 23:01:42.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.008" endtime="20201115 23:01:42.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.006" endtime="20201115 23:01:42.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.043" endtime="20201115 23:01:42.330"></status>
</kw>
<msg timestamp="20201115 23:01:42.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024931347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024945181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.042" endtime="20201115 23:01:42.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024931347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024945181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.334" endtime="20201115 23:01:42.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.343" endtime="20201115 23:01:42.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.039" endtime="20201115 23:01:42.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.037" endtime="20201115 23:01:42.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:42.349" level="INFO">${RESULT} = [{'time': 0.024945181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3834000000000762e-05, 'source_diff': 1.3834000000000762e-05}, {'time': 0.024975583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:42.346" endtime="20201115 23:01:42.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:42.363" level="INFO">${ACCURACY} = {'time': [0.024945181, 0.024975583, 0.025005986, 0.025036597, 0.025067347, 0.025097583, 0.025127611, 0.025158069, 0.025188958, 0.025219694, 0.02525, 0.025280958, 0.025311361, 0.025341083, 0.025371903,...</msg>
<status status="PASS" starttime="20201115 23:01:42.350" endtime="20201115 23:01:42.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.367" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:01:42.366" endtime="20201115 23:01:42.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.370" level="INFO">VALUE: [1.3834000000000762e-05, 2.437500000000009e-05, 1.959699999999967e-05, 2.437500000000009e-05, 2.056900000000153e-05, 2.4401999999999757e-05, 1.961100000000271e-05, 2.05830000000011e-05, 2.6277000000001632e-05, 2.5318999999999342e-05, 2.0528000000002294e-05, 2.6276999999998163e-05, 2.438899999999966e-05, 2.2443999999999936e-05, 2.2500000000001685e-05, 2.437499999999662e-05, 2.0527999999998825e-05, 2.436100000000052e-05, 2.0555999999997965e-05, 2.5320000000002285e-05, 2.438899999999966e-05, 2.154099999999992e-05, 2.3458000000000506e-05, 2.338899999999866e-05, 2.6264000000001536e-05, 2.338899999999866e-05, 2.0499999999999685e-05, 2.340299999999823e-05, 2.1443999999998936e-05, 2.0542000000001864e-05, 2.1472000000001545e-05, 2.34169999999978e-05, 2.4348000000000425e-05, 2.1500000000000685e-05, 2.5334000000001855e-05, 2.5304999999999772e-05, 2.055499999999849e-05, 2.2457999999999506e-05, 2.0513999999999255e-05, 2.5291999999999676e-05, 2.244499999999941e-05, 2.238900000000113e-05, 1.95830000000001e-05, 1.9638000000002376e-05, 2.2457999999999506e-05, 2.436100000000052e-05, 2.059700000000067e-05, 1.9612000000002183e-05, 2.1499999999997216e-05, 2.5221999999998357e-05]</msg>
<status status="PASS" starttime="20201115 23:01:42.368" endtime="20201115 23:01:42.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.364" endtime="20201115 23:01:42.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.373" endtime="20201115 23:01:42.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:42.376" endtime="20201115 23:01:42.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.375" endtime="20201115 23:01:42.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.371" endtime="20201115 23:01:42.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.004" endtime="20201115 23:01:42.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.003" endtime="20201115 23:01:42.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.002" endtime="20201115 23:01:42.397"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.400" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.408" endtime="20201115 23:01:42.430"></status>
</kw>
<msg timestamp="20201115 23:01:42.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.407" endtime="20201115 23:01:42.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.432" endtime="20201115 23:01:42.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.434" endtime="20201115 23:01:42.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.404" endtime="20201115 23:01:42.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.402" endtime="20201115 23:01:42.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.443" endtime="20201115 23:01:42.729"></status>
</kw>
<msg timestamp="20201115 23:01:42.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025704236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025713264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.442" endtime="20201115 23:01:42.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025704236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025713264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.734" endtime="20201115 23:01:42.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.742" endtime="20201115 23:01:42.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.439" endtime="20201115 23:01:42.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.437" endtime="20201115 23:01:42.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:42.749" level="INFO">${RESULT} = [{'time': 0.025713264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.025744, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:42.745" endtime="20201115 23:01:42.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:42.762" level="INFO">${ACCURACY} = {'time': [0.025713264, 0.025744, 0.025774889, 0.025805333, 0.025835611, 0.025866167, 0.025897042, 0.025926778, 0.025957583, 0.025988083, 0.026018472, 0.026049194, 0.026080181, 0.026110167, 0.026140972...</msg>
<status status="PASS" starttime="20201115 23:01:42.749" endtime="20201115 23:01:42.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.766" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:01:42.765" endtime="20201115 23:01:42.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.769" level="INFO">VALUE: [9.028000000001202e-06, 2.5332999999998912e-05, 2.336099999999952e-05, 2.2416000000000796e-05, 1.955500000000096e-05, 2.5360999999998052e-05, 2.340299999999823e-05, 2.2472000000002545e-05, 1.956900000000053e-05, 2.437500000000009e-05, 2.0528000000002294e-05, 2.054100000000239e-05, 2.338900000000213e-05, 1.9597999999999144e-05, 1.95830000000001e-05, 2.1485999999997646e-05, 2.1500000000000685e-05, 1.8570000000002473e-05, 2.5318999999999342e-05, 2.338899999999866e-05, 2.3416000000001796e-05, 2.2584000000002574e-05, 1.959699999999967e-05, 2.343100000000084e-05, 2.433300000000138e-05, 2.147299999999755e-05, 2.436100000000052e-05, 2.338900000000213e-05, 2.2430000000000366e-05, 2.0527999999998825e-05, 2.244499999999941e-05, 2.338900000000213e-05, 1.961099999999924e-05, 2.236100000000199e-05, 2.243099999999984e-05, 2.5332999999998912e-05, 2.5348000000001425e-05, 1.95830000000001e-05, 2.0527999999998825e-05, 2.5318999999999342e-05, 1.9541999999997395e-05, 2.341700000000127e-05, 2.5305999999999246e-05, 2.243099999999984e-05, 2.437499999999662e-05, 2.34030000000017e-05, 2.5362000000000995e-05, 2.434700000000095e-05, 2.340299999999823e-05, 2.5305999999999246e-05]</msg>
<status status="PASS" starttime="20201115 23:01:42.767" endtime="20201115 23:01:42.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.763" endtime="20201115 23:01:42.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.772" endtime="20201115 23:01:42.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:42.775" endtime="20201115 23:01:42.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.774" endtime="20201115 23:01:42.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.770" endtime="20201115 23:01:42.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.400" endtime="20201115 23:01:42.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.399" endtime="20201115 23:01:42.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.398" endtime="20201115 23:01:42.803"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.806" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.814" endtime="20201115 23:01:42.836"></status>
</kw>
<msg timestamp="20201115 23:01:42.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.812" endtime="20201115 23:01:42.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.838" endtime="20201115 23:01:42.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.840" endtime="20201115 23:01:42.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.810" endtime="20201115 23:01:42.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.808" endtime="20201115 23:01:42.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.849" endtime="20201115 23:01:43.135"></status>
</kw>
<msg timestamp="20201115 23:01:43.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026666847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026725625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.848" endtime="20201115 23:01:43.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026666847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026725625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.139" endtime="20201115 23:01:43.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.147" endtime="20201115 23:01:43.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.845" endtime="20201115 23:01:43.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.843" endtime="20201115 23:01:43.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:43.154" level="INFO">${RESULT} = [{'time': 0.026725625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8777999999998914e-05, 'source_diff': 5.8777999999998914e-05}, {'time': 0.026786222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:43.151" endtime="20201115 23:01:43.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:43.167" level="INFO">${ACCURACY} = {'time': [0.026725625, 0.026786222, 0.026847764, 0.026908153, 0.026969292, 0.027030889, 0.027091931, 0.027152319, 0.027213819, 0.027274889, 0.027335625, 0.027396236, 0.027457569, 0.027518361, 0.027579...</msg>
<status status="PASS" starttime="20201115 23:01:43.155" endtime="20201115 23:01:43.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.172" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:01:43.171" endtime="20201115 23:01:43.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.174" level="INFO">VALUE: [5.8777999999998914e-05, 5.4971999999996884e-05, 5.208300000000138e-05, 5.019499999999941e-05, 5.208399999999738e-05, 5.213899999999966e-05, 5.016700000000027e-05, 5.311100000000152e-05, 5.209700000000095e-05, 5.5027999999998634e-05, 5.406900000000034e-05, 5.5929999999999175e-05, 5.116600000000179e-05, 5.018000000000036e-05, 5.402700000000163e-05, 5.400000000000196e-05, 5.4013999999998064e-05, 5.01530000000007e-05, 5.02079999999995e-05, 5.116700000000127e-05, 5.0138000000001653e-05, 5.5916000000003074e-05, 5.400000000000196e-05, 5.123599999999964e-05, 5.02079999999995e-05, 5.016600000000079e-05, 5.406899999999687e-05, 5.402700000000163e-05, 5.11530000000017e-05, 5.5916000000003074e-05, 5.018099999999984e-05, 5.398600000000239e-05, 5.593100000000212e-05, 5.016700000000027e-05, 5.11530000000017e-05, 5.1165999999998324e-05, 5.306899999999934e-05, 5.5943999999998745e-05, 5.402699999999816e-05, 5.304199999999967e-05, 5.493100000000112e-05, 4.926400000000025e-05, 5.208299999999791e-05, 5.4985999999999924e-05, 5.113899999999866e-05, 5.595900000000126e-05, 5.307000000000228e-05, 5.311100000000152e-05, 5.5958000000001784e-05, 5.409699999999948e-05]</msg>
<status status="PASS" starttime="20201115 23:01:43.173" endtime="20201115 23:01:43.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.168" endtime="20201115 23:01:43.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.178" endtime="20201115 23:01:43.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.181" endtime="20201115 23:01:43.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.180" endtime="20201115 23:01:43.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.176" endtime="20201115 23:01:43.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.806" endtime="20201115 23:01:43.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.805" endtime="20201115 23:01:43.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.804" endtime="20201115 23:01:43.203"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.205" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.214" endtime="20201115 23:01:43.234"></status>
</kw>
<msg timestamp="20201115 23:01:43.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.212" endtime="20201115 23:01:43.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.235" endtime="20201115 23:01:43.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.238" endtime="20201115 23:01:43.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.210" endtime="20201115 23:01:43.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.208" endtime="20201115 23:01:43.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.247" endtime="20201115 23:01:43.532"></status>
</kw>
<msg timestamp="20201115 23:01:43.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024435542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024472319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.245" endtime="20201115 23:01:43.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024435542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024472319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.536" endtime="20201115 23:01:43.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.544" endtime="20201115 23:01:43.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.243" endtime="20201115 23:01:43.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.241" endtime="20201115 23:01:43.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:43.551" level="INFO">${RESULT} = [{'time': 0.024472319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6776999999998256e-05, 'source_diff': 3.6776999999998256e-05}, {'time': 0.024533306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:43.548" endtime="20201115 23:01:43.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:43.566" level="INFO">${ACCURACY} = {'time': [0.024472319, 0.024533306, 0.024594417, 0.024655708, 0.024716875, 0.024777847, 0.024838889, 0.024899667, 0.024960736, 0.025022208, 0.025082542, 0.025143694, 0.025204931, 0.025265847, 0.025326...</msg>
<status status="PASS" starttime="20201115 23:01:43.552" endtime="20201115 23:01:43.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.570" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:01:43.569" endtime="20201115 23:01:43.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.573" level="INFO">VALUE: [3.6776999999998256e-05, 5.591700000000255e-05, 5.495900000000026e-05, 5.0179999999996894e-05, 5.5971999999997885e-05, 5.306899999999934e-05, 5.208299999999791e-05, 5.122299999999955e-05, 5.405500000000077e-05, 5.212500000000009e-05, 5.107000000000028e-05, 5.015200000000122e-05, 5.4999999999999494e-05, 5.5915999999999605e-05, 5.113900000000213e-05, 5.2943999999999214e-05, 5.300000000000096e-05, 5.019399999999993e-05, 5.112499999999909e-05, 5.111099999999952e-05, 5.3999999999998494e-05, 5.593099999999865e-05, 5.5972000000001354e-05, 5.018099999999984e-05, 5.5943999999998745e-05, 5.204199999999867e-05, 5.016600000000079e-05, 5.01940000000034e-05, 5.211100000000052e-05, 5.393100000000012e-05, 5.023599999999864e-05, 5.209699999999748e-05, 5.02079999999995e-05, 5.5971999999997885e-05, 5.109699999999995e-05, 5.306899999999934e-05, 5.205600000000171e-05, 5.5930000000002644e-05, 5.305499999999977e-05, 5.5929999999999175e-05, 5.4971999999996884e-05, 5.4013999999998064e-05, 5.212499999999662e-05, 5.3944000000000214e-05, 5.593100000000212e-05, 5.211100000000052e-05, 5.593099999999865e-05, 5.588899999999994e-05, 5.301400000000053e-05, 5.019399999999993e-05]</msg>
<status status="PASS" starttime="20201115 23:01:43.571" endtime="20201115 23:01:43.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.567" endtime="20201115 23:01:43.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.576" endtime="20201115 23:01:43.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.580" endtime="20201115 23:01:43.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.578" endtime="20201115 23:01:43.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.575" endtime="20201115 23:01:43.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.206" endtime="20201115 23:01:43.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.204" endtime="20201115 23:01:43.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.203" endtime="20201115 23:01:43.601"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.603" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.611" endtime="20201115 23:01:43.632"></status>
</kw>
<msg timestamp="20201115 23:01:43.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.610" endtime="20201115 23:01:43.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.634" endtime="20201115 23:01:43.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.636" endtime="20201115 23:01:43.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.607" endtime="20201115 23:01:43.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.605" endtime="20201115 23:01:43.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.645" endtime="20201115 23:01:43.930"></status>
</kw>
<msg timestamp="20201115 23:01:43.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022869208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022922278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.644" endtime="20201115 23:01:43.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022869208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022922278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.935" endtime="20201115 23:01:43.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.943" endtime="20201115 23:01:43.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.641" endtime="20201115 23:01:43.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.639" endtime="20201115 23:01:43.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:43.950" level="INFO">${RESULT} = [{'time': 0.022922278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.307000000000228e-05, 'source_diff': 5.307000000000228e-05}, {'time': 0.022983097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:43.946" endtime="20201115 23:01:43.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:43.963" level="INFO">${ACCURACY} = {'time': [0.022922278, 0.022983097, 0.023044431, 0.023104736, 0.02316625, 0.023227333, 0.023288181, 0.023349319, 0.023410222, 0.023471278, 0.023532097, 0.023593417, 0.023654403, 0.023715653, 0.0237765...</msg>
<status status="PASS" starttime="20201115 23:01:43.951" endtime="20201115 23:01:43.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.968" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:01:43.967" endtime="20201115 23:01:43.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.970" level="INFO">VALUE: [5.307000000000228e-05, 5.501400000000253e-05, 5.219500000000141e-05, 5.016700000000027e-05, 5.393100000000012e-05, 5.4943999999997745e-05, 5.586200000000027e-05, 5.4999999999999494e-05, 5.208300000000138e-05, 5.298600000000139e-05, 5.4957999999997315e-05, 5.019499999999941e-05, 5.400000000000196e-05, 5.108399999999985e-05, 5.401400000000153e-05, 5.109699999999995e-05, 5.209700000000095e-05, 5.207000000000128e-05, 5.494500000000069e-05, 5.204200000000214e-05, 5.216700000000227e-05, 5.112499999999909e-05, 5.58749999999969e-05, 5.6805999999999524e-05, 5.109699999999995e-05, 5.4972000000000354e-05, 5.011100000000199e-05, 5.020899999999898e-05, 5.30280000000001e-05, 5.204199999999867e-05, 5.122200000000007e-05, 5.5929999999999175e-05, 5.58480000000007e-05, 5.115299999999823e-05, 5.207000000000128e-05, 5.3944000000000214e-05, 5.301400000000053e-05, 5.011099999999852e-05, 5.3999999999998494e-05, 5.204200000000214e-05, 5.022199999999907e-05, 5.111099999999952e-05, 5.587500000000037e-05, 5.3999999999998494e-05, 5.011099999999852e-05, 5.400000000000196e-05, 5.309700000000195e-05, 5.211100000000052e-05, 5.590299999999951e-05, 5.311200000000099e-05]</msg>
<status status="PASS" starttime="20201115 23:01:43.969" endtime="20201115 23:01:43.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.964" endtime="20201115 23:01:43.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.974" endtime="20201115 23:01:43.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.977" endtime="20201115 23:01:43.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.975" endtime="20201115 23:01:43.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.972" endtime="20201115 23:01:43.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.604" endtime="20201115 23:01:43.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.602" endtime="20201115 23:01:43.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.601" endtime="20201115 23:01:43.998"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.001" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.009" endtime="20201115 23:01:44.027"></status>
</kw>
<msg timestamp="20201115 23:01:44.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.007" endtime="20201115 23:01:44.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.029" endtime="20201115 23:01:44.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.031" endtime="20201115 23:01:44.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.005" endtime="20201115 23:01:44.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.003" endtime="20201115 23:01:44.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.040" endtime="20201115 23:01:44.325"></status>
</kw>
<msg timestamp="20201115 23:01:44.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.039" endtime="20201115 23:01:44.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.330" endtime="20201115 23:01:44.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.338" endtime="20201115 23:01:44.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.036" endtime="20201115 23:01:44.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.034" endtime="20201115 23:01:44.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.345" level="INFO">${RESULT} = [{'time': 0.022652458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.687500000000137e-05, 'source_diff': 5.687500000000137e-05}, {'time': 0.022713722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:44.342" endtime="20201115 23:01:44.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:44.358" level="INFO">${ACCURACY} = {'time': [0.022652458, 0.022713722, 0.022774944, 0.022836319, 0.022896847, 0.022957625, 0.023019236, 0.023080111, 0.023140806, 0.023202139, 0.023263361, 0.023324042, 0.023384819, 0.023446, 0.023506972...</msg>
<status status="PASS" starttime="20201115 23:01:44.346" endtime="20201115 23:01:44.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.363" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:01:44.362" endtime="20201115 23:01:44.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.365" level="INFO">VALUE: [5.687500000000137e-05, 5.30410000000002e-05, 5.5915999999999605e-05, 5.409699999999948e-05, 5.108300000000038e-05, 5.3999999999998494e-05, 5.308299999999891e-05, 5.018000000000036e-05, 5.40280000000011e-05, 5.593099999999865e-05, 5.4944000000001214e-05, 5.495900000000026e-05, 5.402700000000163e-05, 5.401400000000153e-05, 5.30410000000002e-05, 5.025000000000168e-05, 5.311099999999805e-05, 5.118000000000136e-05, 5.1137999999999184e-05, 5.115299999999823e-05, 5.113899999999866e-05, 5.491699999999808e-05, 5.49869999999994e-05, 5.6888000000001465e-05, 5.6014000000000064e-05, 5.211100000000052e-05, 5.504099999999873e-05, 5.591700000000255e-05, 5.211099999999705e-05, 5.305599999999924e-05, 5.305599999999924e-05, 5.209700000000095e-05, 5.50549999999983e-05, 5.209700000000095e-05, 5.40419999999972e-05, 5.3957999999999784e-05, 4.926400000000025e-05, 5.497299999999983e-05, 5.313900000000066e-05, 5.305599999999924e-05, 5.3957999999999784e-05, 5.4958000000000784e-05, 5.1179999999997894e-05, 5.5943999999998745e-05, 5.4957999999997315e-05, 5.019399999999993e-05, 5.213899999999966e-05, 5.30280000000001e-05, 5.209800000000042e-05, 5.016700000000027e-05]</msg>
<status status="PASS" starttime="20201115 23:01:44.364" endtime="20201115 23:01:44.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.359" endtime="20201115 23:01:44.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.368" endtime="20201115 23:01:44.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:44.372" endtime="20201115 23:01:44.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.370" endtime="20201115 23:01:44.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.367" endtime="20201115 23:01:44.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.001" endtime="20201115 23:01:44.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.999" endtime="20201115 23:01:44.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.999" endtime="20201115 23:01:44.393"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.395" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.403" endtime="20201115 23:01:44.424"></status>
</kw>
<msg timestamp="20201115 23:01:44.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.402" endtime="20201115 23:01:44.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.425" endtime="20201115 23:01:44.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.428" endtime="20201115 23:01:44.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.399" endtime="20201115 23:01:44.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.397" endtime="20201115 23:01:44.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.437" endtime="20201115 23:01:44.723"></status>
</kw>
<msg timestamp="20201115 23:01:44.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024885361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024947958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.435" endtime="20201115 23:01:44.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024885361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024947958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.727" endtime="20201115 23:01:44.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.735" endtime="20201115 23:01:44.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.433" endtime="20201115 23:01:44.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.431" endtime="20201115 23:01:44.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.742" level="INFO">${RESULT} = [{'time': 0.024947958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.259699999999757e-05, 'source_diff': 6.259699999999757e-05}, {'time': 0.025008806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:44.739" endtime="20201115 23:01:44.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:44.755" level="INFO">${ACCURACY} = {'time': [0.024947958, 0.025008806, 0.025069833, 0.025130917, 0.025191931, 0.025253236, 0.025314431, 0.025375278, 0.025435708, 0.025496903, 0.025557875, 0.025618958, 0.025680681, 0.025740889, 0.025801...</msg>
<status status="PASS" starttime="20201115 23:01:44.743" endtime="20201115 23:01:44.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.760" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:01:44.759" endtime="20201115 23:01:44.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.763" level="INFO">VALUE: [6.259699999999757e-05, 5.494500000000069e-05, 5.015200000000122e-05, 5.394499999999969e-05, 5.49869999999994e-05, 5.215299999999923e-05, 5.01669999999968e-05, 5.400000000000196e-05, 5.302700000000063e-05, 5.395900000000273e-05, 5.301400000000053e-05, 5.4944000000001214e-05, 5.300000000000096e-05, 5.212500000000009e-05, 5.3999999999998494e-05, 5.587500000000037e-05, 5.305499999999977e-05, 5.206899999999834e-05, 5.2985999999997924e-05, 5.491700000000155e-05, 5.588899999999994e-05, 5.113900000000213e-05, 5.300000000000096e-05, 5.3999999999998494e-05, 5.112499999999909e-05, 5.305599999999924e-05, 5.594500000000169e-05, 5.300000000000096e-05, 5.018000000000036e-05, 5.212500000000009e-05, 5.11530000000017e-05, 5.016600000000079e-05, 5.4013999999998064e-05, 5.306999999999881e-05, 4.917999999999936e-05, 5.305499999999977e-05, 5.501299999999959e-05, 5.109699999999995e-05, 5.398600000000239e-05, 5.213899999999966e-05, 5.4943999999997745e-05, 5.108300000000038e-05, 5.4958000000000784e-05, 5.309700000000195e-05, 5.395899999999926e-05, 5.3013999999997063e-05, 5.580499999999905e-05, 5.209699999999748e-05, 5.011099999999852e-05, 5.204199999999867e-05]</msg>
<status status="PASS" starttime="20201115 23:01:44.761" endtime="20201115 23:01:44.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.756" endtime="20201115 23:01:44.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.766" endtime="20201115 23:01:44.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:44.769" endtime="20201115 23:01:44.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.768" endtime="20201115 23:01:44.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.764" endtime="20201115 23:01:44.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.396" endtime="20201115 23:01:44.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.394" endtime="20201115 23:01:44.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.393" endtime="20201115 23:01:44.790"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.793" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.801" endtime="20201115 23:01:44.822"></status>
</kw>
<msg timestamp="20201115 23:01:44.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.799" endtime="20201115 23:01:44.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.823" endtime="20201115 23:01:44.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.826" endtime="20201115 23:01:44.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.797" endtime="20201115 23:01:44.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.795" endtime="20201115 23:01:44.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.835" endtime="20201115 23:01:45.120"></status>
</kw>
<msg timestamp="20201115 23:01:45.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024228889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024281972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.834" endtime="20201115 23:01:45.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024228889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024281972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.124" endtime="20201115 23:01:45.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.132" endtime="20201115 23:01:45.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.831" endtime="20201115 23:01:45.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.829" endtime="20201115 23:01:45.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:45.139" level="INFO">${RESULT} = [{'time': 0.024281972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.308299999999891e-05, 'source_diff': 5.308299999999891e-05}, {'time': 0.024342847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:45.136" endtime="20201115 23:01:45.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.154" level="INFO">${ACCURACY} = {'time': [0.024281972, 0.024342847, 0.024404569, 0.0244655, 0.024526069, 0.024587639, 0.024648625, 0.024709431, 0.024770153, 0.024830972, 0.024892639, 0.024952986, 0.025014417, 0.025075917, 0.02513629...</msg>
<status status="PASS" starttime="20201115 23:01:45.140" endtime="20201115 23:01:45.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.158" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.157" endtime="20201115 23:01:45.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.161" level="INFO">VALUE: [5.308299999999891e-05, 5.009700000000242e-05, 5.402700000000163e-05, 5.209700000000095e-05, 5.112500000000256e-05, 5.295800000000225e-05, 5.112499999999909e-05, 5.490300000000198e-05, 5.201399999999953e-05, 5.111099999999952e-05, 5.687500000000137e-05, 5.3999999999998494e-05, 5.4985999999999924e-05, 5.308399999999838e-05, 5.0209000000002446e-05, 5.011199999999799e-05, 5.687500000000137e-05, 5.591700000000255e-05, 5.398600000000239e-05, 5.405500000000077e-05, 5.008399999999885e-05, 5.016600000000079e-05, 5.211100000000052e-05, 5.294400000000268e-05, 5.5915999999999605e-05, 5.212500000000009e-05, 5.5957999999998315e-05, 5.212500000000009e-05, 5.68749999999979e-05, 5.102800000000157e-05, 5.218099999999837e-05, 5.02079999999995e-05, 5.115299999999823e-05, 5.305499999999977e-05, 5.590299999999951e-05, 5.199999999999996e-05, 5.026399999999778e-05, 5.405500000000077e-05, 5.106899999999734e-05, 5.400000000000196e-05, 5.40280000000011e-05, 5.306899999999934e-05, 5.301400000000053e-05, 5.201399999999953e-05, 5.405599999999677e-05, 5.308399999999838e-05, 5.211100000000052e-05, 5.40419999999972e-05, 4.922200000000154e-05, 5.209700000000095e-05]</msg>
<status status="PASS" starttime="20201115 23:01:45.160" endtime="20201115 23:01:45.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.155" endtime="20201115 23:01:45.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.164" endtime="20201115 23:01:45.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.167" endtime="20201115 23:01:45.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.166" endtime="20201115 23:01:45.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.162" endtime="20201115 23:01:45.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.793" endtime="20201115 23:01:45.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.791" endtime="20201115 23:01:45.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.791" endtime="20201115 23:01:45.189"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.191" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.199" endtime="20201115 23:01:45.218"></status>
</kw>
<msg timestamp="20201115 23:01:45.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.198" endtime="20201115 23:01:45.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.220" endtime="20201115 23:01:45.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.222" endtime="20201115 23:01:45.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.195" endtime="20201115 23:01:45.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.193" endtime="20201115 23:01:45.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.232" endtime="20201115 23:01:45.518"></status>
</kw>
<msg timestamp="20201115 23:01:45.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022964972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023005542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.231" endtime="20201115 23:01:45.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022964972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023005542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.522" endtime="20201115 23:01:45.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.531" endtime="20201115 23:01:45.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.228" endtime="20201115 23:01:45.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.226" endtime="20201115 23:01:45.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:45.537" level="INFO">${RESULT} = [{'time': 0.023005542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.057000000000019e-05, 'source_diff': 4.057000000000019e-05}, {'time': 0.023067111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:45.534" endtime="20201115 23:01:45.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.551" level="INFO">${ACCURACY} = {'time': [0.023005542, 0.023067111, 0.023128097, 0.023189194, 0.023249875, 0.023311139, 0.02337175, 0.02343325, 0.023493958, 0.023555333, 0.023616667, 0.023677264, 0.023738611, 0.023799542, 0.02386076...</msg>
<status status="PASS" starttime="20201115 23:01:45.538" endtime="20201115 23:01:45.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.555" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.554" endtime="20201115 23:01:45.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.558" level="INFO">VALUE: [4.057000000000019e-05, 5.116700000000127e-05, 5.5915999999999605e-05, 5.4972000000000354e-05, 5.4972000000000354e-05, 5.295800000000225e-05, 5.30280000000001e-05, 5.4958000000000784e-05, 5.5915999999999605e-05, 5.400000000000196e-05, 5.591700000000255e-05, 5.487499999999937e-05, 5.3999999999998494e-05, 5.115299999999823e-05, 5.112499999999909e-05, 5.008300000000285e-05, 5.0223000000002016e-05, 5.2985999999997924e-05, 5.208299999999791e-05, 5.402700000000163e-05, 5.4985999999999924e-05, 4.922200000000154e-05, 5.49869999999994e-05, 5.587500000000037e-05, 5.211100000000052e-05, 5.0195000000002876e-05, 5.481900000000109e-05, 5.209700000000095e-05, 5.3999999999998494e-05, 5.11530000000017e-05, 5.304199999999967e-05, 5.498600000000339e-05, 5.388899999999794e-05, 5.111099999999952e-05, 5.306899999999934e-05, 5.5915999999999605e-05, 5.018099999999984e-05, 5.3957999999999784e-05, 5.212500000000009e-05, 5.112499999999909e-05, 5.019399999999993e-05, 5.673700000000115e-05, 5.112499999999909e-05, 5.211100000000052e-05, 5.212500000000009e-05, 5.302799999999663e-05, 5.212500000000009e-05, 5.590299999999951e-05, 5.112500000000256e-05, 5.112500000000256e-05]</msg>
<status status="PASS" starttime="20201115 23:01:45.556" endtime="20201115 23:01:45.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.552" endtime="20201115 23:01:45.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.561" endtime="20201115 23:01:45.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.564" endtime="20201115 23:01:45.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.563" endtime="20201115 23:01:45.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.559" endtime="20201115 23:01:45.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.192" endtime="20201115 23:01:45.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.190" endtime="20201115 23:01:45.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.189" endtime="20201115 23:01:45.586"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.588" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.596" endtime="20201115 23:01:45.615"></status>
</kw>
<msg timestamp="20201115 23:01:45.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.595" endtime="20201115 23:01:45.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.617" endtime="20201115 23:01:45.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.619" endtime="20201115 23:01:45.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.592" endtime="20201115 23:01:45.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.590" endtime="20201115 23:01:45.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.628" endtime="20201115 23:01:45.913"></status>
</kw>
<msg timestamp="20201115 23:01:45.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023225444, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:45.626" endtime="20201115 23:01:45.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023225444, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:45.918" endtime="20201115 23:01:45.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.926" endtime="20201115 23:01:45.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.624" endtime="20201115 23:01:45.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.622" endtime="20201115 23:01:45.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:45.932" level="INFO">${RESULT} = [{'time': 0.023225444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6943999999999745e-05, 'source_diff': 5.6943999999999745e-05}, {'time': 0.023286653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:45.929" endtime="20201115 23:01:45.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.946" level="INFO">${ACCURACY} = {'time': [0.023225444, 0.023286653, 0.023347611, 0.023408361, 0.02347, 0.023530972, 0.023592056, 0.023652181, 0.023713389, 0.023774722, 0.023835917, 0.023896806, 0.023957375, 0.024018958, 0.024080319,...</msg>
<status status="PASS" starttime="20201115 23:01:45.933" endtime="20201115 23:01:45.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.950" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.949" endtime="20201115 23:01:45.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.953" level="INFO">VALUE: [5.6943999999999745e-05, 5.211100000000052e-05, 5.306899999999934e-05, 5.3999999999998494e-05, 5.306900000000281e-05, 5.02079999999995e-05, 5.40280000000011e-05, 5.29730000000013e-05, 5.018099999999984e-05, 5.4972000000000354e-05, 5.49730000000033e-05, 5.019499999999941e-05, 5.018099999999984e-05, 5.3999999999998494e-05, 5.5957999999998315e-05, 5.505599999999777e-05, 5.40280000000011e-05, 5.6000000000000494e-05, 5.215299999999923e-05, 5.30280000000001e-05, 5.209700000000095e-05, 5.490299999999851e-05, 5.111099999999952e-05, 5.590299999999951e-05, 5.211100000000052e-05, 5.300000000000096e-05, 5.5929999999999175e-05, 5.209700000000095e-05, 5.208299999999791e-05, 5.4943999999997745e-05, 5.01530000000007e-05, 5.018099999999984e-05, 5.111200000000246e-05, 5.111100000000299e-05, 5.113899999999866e-05, 5.018099999999984e-05, 5.211100000000052e-05, 5.2179999999998894e-05, 5.119500000000041e-05, 5.593100000000212e-05, 5.112499999999909e-05, 5.016700000000027e-05, 5.022199999999907e-05, 5.113899999999866e-05, 5.300000000000096e-05, 5.495900000000026e-05, 5.5916000000003074e-05, 5.018099999999984e-05, 5.018000000000036e-05, 5.404200000000067e-05]</msg>
<status status="PASS" starttime="20201115 23:01:45.951" endtime="20201115 23:01:45.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.947" endtime="20201115 23:01:45.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.956" endtime="20201115 23:01:45.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.960" endtime="20201115 23:01:45.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.958" endtime="20201115 23:01:45.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.955" endtime="20201115 23:01:45.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.589" endtime="20201115 23:01:45.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.587" endtime="20201115 23:01:45.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.586" endtime="20201115 23:01:45.981"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.983" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.991" endtime="20201115 23:01:46.012"></status>
</kw>
<msg timestamp="20201115 23:01:46.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.990" endtime="20201115 23:01:46.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.013" endtime="20201115 23:01:46.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.016" endtime="20201115 23:01:46.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.987" endtime="20201115 23:01:46.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.985" endtime="20201115 23:01:46.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.025" endtime="20201115 23:01:46.318"></status>
</kw>
<msg timestamp="20201115 23:01:46.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024379722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024421278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.023" endtime="20201115 23:01:46.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024379722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024421278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.322" endtime="20201115 23:01:46.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.330" endtime="20201115 23:01:46.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.021" endtime="20201115 23:01:46.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.019" endtime="20201115 23:01:46.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.337" level="INFO">${RESULT} = [{'time': 0.024421278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.155600000000162e-05, 'source_diff': 4.155600000000162e-05}, {'time': 0.02448225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:46.333" endtime="20201115 23:01:46.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:46.350" level="INFO">${ACCURACY} = {'time': [0.024421278, 0.02448225, 0.024543597, 0.024604708, 0.024665889, 0.024726708, 0.024788167, 0.024849111, 0.024910139, 0.024970653, 0.025031819, 0.025092639, 0.025154194, 0.025214556, 0.0252759...</msg>
<status status="PASS" starttime="20201115 23:01:46.338" endtime="20201115 23:01:46.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.355" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:01:46.354" endtime="20201115 23:01:46.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.358" level="INFO">VALUE: [4.155600000000162e-05, 5.308299999999891e-05, 5.20409999999992e-05, 5.4972000000000354e-05, 5.300000000000096e-05, 5.5929999999999175e-05, 5.4999999999999494e-05, 5.305499999999977e-05, 5.4985999999999924e-05, 5.115299999999823e-05, 5.58610000000008e-05, 5.48609999999998e-05, 5.5902000000000035e-05, 4.9222999999997546e-05, 5.309700000000195e-05, 5.11669999999978e-05, 5.4930000000001644e-05, 5.112500000000256e-05, 5.11530000000017e-05, 5.68749999999979e-05, 5.304199999999967e-05, 5.593099999999865e-05, 5.3999999999998494e-05, 5.112499999999909e-05, 5.211099999999705e-05, 5.40280000000011e-05, 5.402699999999816e-05, 5.593099999999865e-05, 5.3999999999998494e-05, 5.11530000000017e-05, 5.495900000000026e-05, 5.305599999999924e-05, 5.30280000000001e-05, 5.11530000000017e-05, 5.019399999999993e-05, 5.588899999999994e-05, 5.400000000000196e-05, 5.122200000000007e-05, 5.4985999999999924e-05, 5.211100000000052e-05, 5.388899999999794e-05, 5.295900000000173e-05, 5.0181000000003306e-05, 5.208300000000138e-05, 5.590299999999951e-05, 5.113899999999866e-05, 5.11530000000017e-05, 5.305600000000271e-05, 5.4985999999999924e-05, 5.50410000000022e-05]</msg>
<status status="PASS" starttime="20201115 23:01:46.356" endtime="20201115 23:01:46.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.351" endtime="20201115 23:01:46.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.361" endtime="20201115 23:01:46.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:46.364" endtime="20201115 23:01:46.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.363" endtime="20201115 23:01:46.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.359" endtime="20201115 23:01:46.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.984" endtime="20201115 23:01:46.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.982" endtime="20201115 23:01:46.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.981" endtime="20201115 23:01:46.385"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.388" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.396" endtime="20201115 23:01:46.418"></status>
</kw>
<msg timestamp="20201115 23:01:46.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.394" endtime="20201115 23:01:46.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.420" endtime="20201115 23:01:46.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.422" endtime="20201115 23:01:46.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.392" endtime="20201115 23:01:46.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.390" endtime="20201115 23:01:46.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.431" endtime="20201115 23:01:46.718"></status>
</kw>
<msg timestamp="20201115 23:01:46.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026925778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026989347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.430" endtime="20201115 23:01:46.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026925778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026989347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.722" endtime="20201115 23:01:46.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.730" endtime="20201115 23:01:46.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.427" endtime="20201115 23:01:46.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.425" endtime="20201115 23:01:46.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.737" level="INFO">${RESULT} = [{'time': 0.026989347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.356899999999943e-05, 'source_diff': 6.356899999999943e-05}, {'time': 0.027050236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:46.734" endtime="20201115 23:01:46.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:46.752" level="INFO">${ACCURACY} = {'time': [0.026989347, 0.027050236, 0.027111681, 0.027172486, 0.027233528, 0.027294319, 0.027355764, 0.027416778, 0.027477806, 0.027538722, 0.027599944, 0.027660444, 0.027721931, 0.027783278, 0.027843...</msg>
<status status="PASS" starttime="20201115 23:01:46.738" endtime="20201115 23:01:46.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.757" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:01:46.755" endtime="20201115 23:01:46.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.759" level="INFO">VALUE: [6.356899999999943e-05, 5.4027999999997633e-05, 5.112499999999909e-05, 5.113899999999866e-05, 5.583400000000113e-05, 5.5915999999999605e-05, 5.593100000000212e-05, 5.113899999999866e-05, 5.4999999999999494e-05, 5.113900000000213e-05, 5.5930000000002644e-05, 5.1151999999998754e-05, 5.212499999999662e-05, 5.111100000000299e-05, 5.1014000000002e-05, 5.4999999999999494e-05, 5.401400000000153e-05, 5.495900000000026e-05, 5.1151999999998754e-05, 5.4915999999998605e-05, 4.926400000000025e-05, 5.309699999999848e-05, 5.211100000000052e-05, 5.019399999999993e-05, 5.5929999999999175e-05, 5.4972000000000354e-05, 5.591699999999908e-05, 5.304199999999967e-05, 5.4972000000000354e-05, 5.305599999999924e-05, 5.3999999999998494e-05, 5.401400000000153e-05, 5.113899999999866e-05, 5.4958000000000784e-05, 5.019499999999941e-05, 5.4972000000000354e-05, 5.019399999999993e-05, 5.409699999999948e-05, 5.211100000000052e-05, 5.115299999999823e-05, 5.411100000000252e-05, 5.391700000000055e-05, 5.208400000000085e-05, 5.4985999999999924e-05, 5.4999999999999494e-05, 5.2985999999997924e-05, 5.5944000000002214e-05, 5.016700000000027e-05, 5.020899999999898e-05, 5.4985999999999924e-05]</msg>
<status status="PASS" starttime="20201115 23:01:46.758" endtime="20201115 23:01:46.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.753" endtime="20201115 23:01:46.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.762" endtime="20201115 23:01:46.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:46.766" endtime="20201115 23:01:46.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.764" endtime="20201115 23:01:46.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.761" endtime="20201115 23:01:46.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.388" endtime="20201115 23:01:46.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.386" endtime="20201115 23:01:46.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.386" endtime="20201115 23:01:46.787"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.789" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.797" endtime="20201115 23:01:46.821"></status>
</kw>
<msg timestamp="20201115 23:01:46.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.796" endtime="20201115 23:01:46.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.823" endtime="20201115 23:01:46.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.825" endtime="20201115 23:01:46.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.793" endtime="20201115 23:01:46.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.791" endtime="20201115 23:01:46.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.834" endtime="20201115 23:01:47.120"></status>
</kw>
<msg timestamp="20201115 23:01:47.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.833" endtime="20201115 23:01:47.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.124" endtime="20201115 23:01:47.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.133" endtime="20201115 23:01:47.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.830" endtime="20201115 23:01:47.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.829" endtime="20201115 23:01:47.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:47.140" level="INFO">${RESULT} = [{'time': 0.022325583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.634699999999867e-05, 'source_diff': 4.634699999999867e-05}, {'time': 0.022386764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:47.136" endtime="20201115 23:01:47.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:47.153" level="INFO">${ACCURACY} = {'time': [0.022325583, 0.022386764, 0.022448194, 0.022508903, 0.022570278, 0.022631028, 0.022691736, 0.022753222, 0.022814486, 0.022874861, 0.022936514, 0.0229975, 0.023058, 0.023119361, 0.023180583, ...</msg>
<status status="PASS" starttime="20201115 23:01:47.141" endtime="20201115 23:01:47.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.157" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:01:47.156" endtime="20201115 23:01:47.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.160" level="INFO">VALUE: [4.634699999999867e-05, 5.119500000000041e-05, 5.297200000000182e-05, 5.104200000000114e-05, 5.305599999999924e-05, 5.212500000000009e-05, 5.208300000000138e-05, 5.20279999999991e-05, 5.4957999999997315e-05, 5.4972000000000354e-05, 5.488900000000241e-05, 5.4985999999999924e-05, 5.208299999999791e-05, 5.209700000000095e-05, 5.4999999999999494e-05, 5.404200000000067e-05, 5.583299999999819e-05, 5.4943999999997745e-05, 5.212500000000009e-05, 5.487499999999937e-05, 5.019499999999941e-05, 5.306999999999881e-05, 5.109699999999995e-05, 5.211100000000052e-05, 5.306999999999881e-05, 5.595900000000126e-05, 5.4902000000002504e-05, 5.208400000000085e-05, 5.306999999999881e-05, 5.491700000000155e-05, 5.212500000000009e-05, 5.308399999999838e-05, 5.488899999999894e-05, 5.4999999999999494e-05, 5.025000000000168e-05, 5.308299999999891e-05, 5.009699999999895e-05, 5.016700000000027e-05, 5.491700000000155e-05, 5.0209000000002446e-05, 5.291699999999955e-05, 5.118000000000136e-05, 5.401400000000153e-05, 5.305599999999924e-05, 5.591699999999908e-05, 5.294499999999869e-05, 5.4930000000001644e-05, 5.306999999999881e-05, 5.024999999999821e-05, 5.495900000000026e-05]</msg>
<status status="PASS" starttime="20201115 23:01:47.158" endtime="20201115 23:01:47.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.154" endtime="20201115 23:01:47.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.163" endtime="20201115 23:01:47.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.166" endtime="20201115 23:01:47.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.165" endtime="20201115 23:01:47.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.161" endtime="20201115 23:01:47.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.790" endtime="20201115 23:01:47.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.788" endtime="20201115 23:01:47.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.787" endtime="20201115 23:01:47.187"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.190" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.198" endtime="20201115 23:01:47.218"></status>
</kw>
<msg timestamp="20201115 23:01:47.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.196" endtime="20201115 23:01:47.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.220" endtime="20201115 23:01:47.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.222" endtime="20201115 23:01:47.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.194" endtime="20201115 23:01:47.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.192" endtime="20201115 23:01:47.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.232" endtime="20201115 23:01:47.519"></status>
</kw>
<msg timestamp="20201115 23:01:47.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023602514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023643139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.230" endtime="20201115 23:01:47.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023602514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023643139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.523" endtime="20201115 23:01:47.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.531" endtime="20201115 23:01:47.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.227" endtime="20201115 23:01:47.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.225" endtime="20201115 23:01:47.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:47.538" level="INFO">${RESULT} = [{'time': 0.023643139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0624999999998995e-05, 'source_diff': 4.0624999999998995e-05}, {'time': 0.023703903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:47.534" endtime="20201115 23:01:47.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:47.551" level="INFO">${ACCURACY} = {'time': [0.023643139, 0.023703903, 0.023765528, 0.023826417, 0.023887333, 0.023948222, 0.024009597, 0.024070778, 0.024131375, 0.024192208, 0.024253139, 0.024314444, 0.024375889, 0.024436736, 0.024497...</msg>
<status status="PASS" starttime="20201115 23:01:47.539" endtime="20201115 23:01:47.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.556" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:01:47.555" endtime="20201115 23:01:47.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.558" level="INFO">VALUE: [4.0624999999998995e-05, 5.394499999999969e-05, 5.4972000000000354e-05, 5.495900000000026e-05, 5.208300000000138e-05, 5.018000000000036e-05, 5.400000000000196e-05, 5.307000000000228e-05, 5.019399999999993e-05, 5.302700000000063e-05, 5.4985999999999924e-05, 5.208300000000138e-05, 5.301400000000053e-05, 5.305499999999977e-05, 5.115299999999823e-05, 5.686099999999833e-05, 5.402700000000163e-05, 5.018000000000036e-05, 5.3957999999999784e-05, 5.591699999999908e-05, 5.213899999999966e-05, 5.209700000000095e-05, 5.4999999999999494e-05, 5.68749999999979e-05, 5.4985999999999924e-05, 5.212500000000009e-05, 5.113899999999866e-05, 5.21669999999988e-05, 5.40419999999972e-05, 5.11530000000017e-05, 5.306999999999881e-05, 5.30410000000002e-05, 5.4972000000000354e-05, 5.407000000000328e-05, 5.409799999999895e-05, 5.590299999999951e-05, 5.30410000000002e-05, 5.02079999999995e-05, 5.3999999999998494e-05, 5.211199999999999e-05, 5.4999999999999494e-05, 5.013900000000113e-05, 5.013900000000113e-05, 5.688900000000094e-05, 5.40280000000011e-05, 5.118099999999737e-05, 5.505600000000124e-05, 5.590299999999951e-05, 5.5929999999999175e-05, 5.306899999999934e-05]</msg>
<status status="PASS" starttime="20201115 23:01:47.557" endtime="20201115 23:01:47.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.552" endtime="20201115 23:01:47.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.561" endtime="20201115 23:01:47.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.565" endtime="20201115 23:01:47.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.563" endtime="20201115 23:01:47.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.560" endtime="20201115 23:01:47.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.190" endtime="20201115 23:01:47.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.189" endtime="20201115 23:01:47.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.188" endtime="20201115 23:01:47.586"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.588" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.596" endtime="20201115 23:01:47.620"></status>
</kw>
<msg timestamp="20201115 23:01:47.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.595" endtime="20201115 23:01:47.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.621" endtime="20201115 23:01:47.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.624" endtime="20201115 23:01:47.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.592" endtime="20201115 23:01:47.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.590" endtime="20201115 23:01:47.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.633" endtime="20201115 23:01:47.919"></status>
</kw>
<msg timestamp="20201115 23:01:47.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027153403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027218819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.632" endtime="20201115 23:01:47.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027153403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027218819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.923" endtime="20201115 23:01:47.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.931" endtime="20201115 23:01:47.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.629" endtime="20201115 23:01:47.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.627" endtime="20201115 23:01:47.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:47.938" level="INFO">${RESULT} = [{'time': 0.027218819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.541600000000217e-05, 'source_diff': 6.541600000000217e-05}, {'time': 0.027280083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:47.935" endtime="20201115 23:01:47.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:47.951" level="INFO">${ACCURACY} = {'time': [0.027218819, 0.027280083, 0.027340764, 0.027402333, 0.027463444, 0.027524292, 0.027585417, 0.027646083, 0.02770775, 0.027768333, 0.027829875, 0.027890833, 0.027951306, 0.028012611, 0.0280737...</msg>
<status status="PASS" starttime="20201115 23:01:47.939" endtime="20201115 23:01:47.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.956" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:01:47.955" endtime="20201115 23:01:47.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.958" level="INFO">VALUE: [6.541600000000217e-05, 5.015200000000122e-05, 5.4958000000000784e-05, 5.208300000000138e-05, 5.4985999999999924e-05, 5.597299999999736e-05, 5.013900000000113e-05, 5.20409999999992e-05, 5.116700000000127e-05, 5.5929999999999175e-05, 5.11530000000017e-05, 5.211100000000052e-05, 5.2999999999997494e-05, 5.591699999999908e-05, 5.5929999999999175e-05, 5.205599999999824e-05, 5.11530000000017e-05, 5.113899999999866e-05, 5.405600000000024e-05, 5.4972000000000354e-05, 5.5958000000001784e-05, 5.113899999999866e-05, 5.4972000000000354e-05, 5.1151999999998754e-05, 5.300000000000096e-05, 5.309800000000142e-05, 5.5902000000000035e-05, 5.4972000000000354e-05, 5.108299999999691e-05, 5.3971999999999354e-05, 5.4944000000001214e-05, 5.308400000000185e-05, 5.308299999999891e-05, 5.591699999999908e-05, 5.583300000000166e-05, 5.401400000000153e-05, 5.491700000000155e-05, 5.308399999999838e-05, 5.487499999999937e-05, 5.4972000000000354e-05, 5.401400000000153e-05, 5.4985999999999924e-05, 5.212500000000009e-05, 5.402700000000163e-05, 5.4999999999999494e-05, 5.404200000000067e-05, 5.212500000000009e-05, 5.306999999999881e-05, 5.4972000000000354e-05, 5.018099999999984e-05]</msg>
<status status="PASS" starttime="20201115 23:01:47.957" endtime="20201115 23:01:47.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.952" endtime="20201115 23:01:47.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.961" endtime="20201115 23:01:47.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.965" endtime="20201115 23:01:47.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.963" endtime="20201115 23:01:47.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.960" endtime="20201115 23:01:47.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.589" endtime="20201115 23:01:47.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.587" endtime="20201115 23:01:47.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.586" endtime="20201115 23:01:47.986"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.988" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.003" endtime="20201115 23:01:48.027"></status>
</kw>
<msg timestamp="20201115 23:01:48.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.001" endtime="20201115 23:01:48.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.029" endtime="20201115 23:01:48.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.031" endtime="20201115 23:01:48.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.992" endtime="20201115 23:01:48.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.990" endtime="20201115 23:01:48.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.040" endtime="20201115 23:01:48.327"></status>
</kw>
<msg timestamp="20201115 23:01:48.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033974944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034029917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.038" endtime="20201115 23:01:48.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033974944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034029917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.331" endtime="20201115 23:01:48.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.339" endtime="20201115 23:01:48.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.036" endtime="20201115 23:01:48.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.034" endtime="20201115 23:01:48.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:48.346" level="INFO">${RESULT} = [{'time': 0.034029917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.497299999999983e-05, 'source_diff': 5.497299999999983e-05}, {'time': 0.034090389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:48.343" endtime="20201115 23:01:48.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:48.361" level="INFO">${ACCURACY} = {'time': [0.034029917, 0.034090389, 0.034151431, 0.034212722, 0.034274069, 0.034335181, 0.034395639, 0.034456556, 0.034517542, 0.034579125, 0.034639931, 0.034700806, 0.034762431, 0.034823333, 0.034884...</msg>
<status status="PASS" starttime="20201115 23:01:48.347" endtime="20201115 23:01:48.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.365" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:01:48.364" endtime="20201115 23:01:48.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.368" level="INFO">VALUE: [5.497299999999983e-05, 5.3971999999999354e-05, 5.305600000000271e-05, 5.4972000000000354e-05, 5.3985999999998924e-05, 5.591700000000255e-05, 5.01669999999968e-05, 5.593100000000212e-05, 5.109799999999942e-05, 5.305600000000271e-05, 5.308400000000185e-05, 5.208400000000085e-05, 5.590300000000298e-05, 5.404099999999773e-05, 5.206900000000181e-05, 5.408300000000338e-05, 4.91940000000024e-05, 5.4013999999998064e-05, 5.305500000000324e-05, 5.306899999999587e-05, 5.0179999999996894e-05, 5.4958000000000784e-05, 5.493099999999418e-05, 5.212500000000009e-05, 5.402699999999816e-05, 5.4944000000001214e-05, 5.4999999999999494e-05, 5.302800000000357e-05, 5.01940000000034e-05, 5.688899999999747e-05, 5.4985999999999924e-05, 5.0193999999996464e-05, 5.495899999999332e-05, 5.4944000000001214e-05, 5.4944000000001214e-05, 5.6819999999999093e-05, 5.4027999999997633e-05, 5.313900000000066e-05, 5.590299999999604e-05, 5.4958000000000784e-05, 5.209700000000095e-05, 5.1151999999998754e-05, 5.111099999999952e-05, 5.0179999999996894e-05, 5.207000000000128e-05, 5.6778000000000384e-05, 5.0151999999997754e-05, 5.3013999999997063e-05, 5.208300000000138e-05, 5.0209000000002446e-05]</msg>
<status status="PASS" starttime="20201115 23:01:48.366" endtime="20201115 23:01:48.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.361" endtime="20201115 23:01:48.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.371" endtime="20201115 23:01:48.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:48.374" endtime="20201115 23:01:48.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.373" endtime="20201115 23:01:48.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.369" endtime="20201115 23:01:48.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.989" endtime="20201115 23:01:48.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.987" endtime="20201115 23:01:48.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.986" endtime="20201115 23:01:48.396"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.398" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.406" endtime="20201115 23:01:48.429"></status>
</kw>
<msg timestamp="20201115 23:01:48.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.405" endtime="20201115 23:01:48.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.431" endtime="20201115 23:01:48.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.433" endtime="20201115 23:01:48.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.402" endtime="20201115 23:01:48.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.400" endtime="20201115 23:01:48.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.442" endtime="20201115 23:01:48.727"></status>
</kw>
<msg timestamp="20201115 23:01:48.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02659825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026648417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:48.441" endtime="20201115 23:01:48.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02659825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026648417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:48.731" endtime="20201115 23:01:48.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.739" endtime="20201115 23:01:48.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.438" endtime="20201115 23:01:48.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.436" endtime="20201115 23:01:48.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:48.746" level="INFO">${RESULT} = [{'time': 0.026648417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.016700000000027e-05, 'source_diff': 5.016700000000027e-05}, {'time': 0.026709611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:48.743" endtime="20201115 23:01:48.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:48.759" level="INFO">${ACCURACY} = {'time': [0.026648417, 0.026709611, 0.026771083, 0.026831667, 0.026893208, 0.026953514, 0.027015347, 0.027075583, 0.027137125, 0.027198125, 0.027259361, 0.027320347, 0.027380847, 0.027442, 0.027503444...</msg>
<status status="PASS" starttime="20201115 23:01:48.747" endtime="20201115 23:01:48.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.764" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:01:48.763" endtime="20201115 23:01:48.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.766" level="INFO">VALUE: [5.016700000000027e-05, 5.48609999999998e-05, 5.305499999999977e-05, 5.019499999999941e-05, 5.113899999999866e-05, 5.295800000000225e-05, 5.590299999999951e-05, 5.305499999999977e-05, 5.113900000000213e-05, 5.019399999999993e-05, 5.4999999999999494e-05, 5.4957999999997315e-05, 5.206899999999834e-05, 5.397200000000282e-05, 5.201300000000006e-05, 5.304199999999967e-05, 5.112499999999909e-05, 5.5915999999999605e-05, 5.208400000000085e-05, 5.397299999999883e-05, 5.590299999999951e-05, 5.494500000000069e-05, 5.113900000000213e-05, 5.020899999999898e-05, 5.211100000000052e-05, 5.016600000000079e-05, 5.013900000000113e-05, 5.111099999999952e-05, 5.016600000000079e-05, 5.111099999999952e-05, 4.920800000000197e-05, 5.304199999999967e-05, 5.495900000000026e-05, 5.5944000000002214e-05, 5.495900000000026e-05, 5.212500000000009e-05, 5.015200000000122e-05, 5.587500000000037e-05, 5.208300000000138e-05, 5.206900000000181e-05, 5.3957999999999784e-05, 5.493100000000112e-05, 5.301400000000053e-05, 5.019399999999993e-05, 5.304199999999967e-05, 5.40280000000011e-05, 5.208299999999791e-05, 5.105500000000124e-05, 5.019399999999993e-05, 5.400000000000196e-05]</msg>
<status status="PASS" starttime="20201115 23:01:48.765" endtime="20201115 23:01:48.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.760" endtime="20201115 23:01:48.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.770" endtime="20201115 23:01:48.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:48.773" endtime="20201115 23:01:48.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.772" endtime="20201115 23:01:48.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.768" endtime="20201115 23:01:48.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.399" endtime="20201115 23:01:48.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.397" endtime="20201115 23:01:48.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.396" endtime="20201115 23:01:48.795"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.797" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.805" endtime="20201115 23:01:48.826"></status>
</kw>
<msg timestamp="20201115 23:01:48.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.804" endtime="20201115 23:01:48.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.827" endtime="20201115 23:01:48.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.830" endtime="20201115 23:01:48.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.801" endtime="20201115 23:01:48.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.799" endtime="20201115 23:01:48.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.839" endtime="20201115 23:01:49.125"></status>
</kw>
<msg timestamp="20201115 23:01:49.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024083792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024121556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.837" endtime="20201115 23:01:49.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024083792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024121556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.129" endtime="20201115 23:01:49.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.137" endtime="20201115 23:01:49.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.835" endtime="20201115 23:01:49.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.833" endtime="20201115 23:01:49.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:49.144" level="INFO">${RESULT} = [{'time': 0.024121556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.776399999999916e-05, 'source_diff': 3.776399999999916e-05}, {'time': 0.024182403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:49.140" endtime="20201115 23:01:49.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:49.157" level="INFO">${ACCURACY} = {'time': [0.024121556, 0.024182403, 0.024243722, 0.024304069, 0.024365472, 0.024426764, 0.024487764, 0.024548514, 0.024609264, 0.024670236, 0.024731375, 0.024792056, 0.024853778, 0.024914889, 0.024975...</msg>
<status status="PASS" starttime="20201115 23:01:49.145" endtime="20201115 23:01:49.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.162" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:01:49.161" endtime="20201115 23:01:49.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.164" level="INFO">VALUE: [3.776399999999916e-05, 5.304200000000314e-05, 5.4972000000000354e-05, 5.401300000000206e-05, 5.587500000000037e-05, 5.205600000000171e-05, 5.113899999999866e-05, 5.209700000000095e-05, 5.015299999999723e-05, 5.016700000000027e-05, 5.115299999999823e-05, 5.20279999999991e-05, 5.207000000000128e-05, 5.404200000000067e-05, 4.925000000000068e-05, 5.4027999999997633e-05, 5.4957999999997315e-05, 5.306900000000281e-05, 5.5929999999999175e-05, 5.4915999999998605e-05, 5.016600000000079e-05, 5.597300000000083e-05, 5.306899999999934e-05, 5.402700000000163e-05, 5.208400000000085e-05, 5.594499999999822e-05, 5.115299999999823e-05, 5.115299999999823e-05, 5.5929999999999175e-05, 5.591700000000255e-05, 5.018000000000036e-05, 5.30280000000001e-05, 5.112499999999909e-05, 5.306899999999934e-05, 5.4985999999999924e-05, 5.3944000000000214e-05, 5.4930000000001644e-05, 5.40410000000012e-05, 5.500000000000296e-05, 5.306899999999934e-05, 5.015200000000122e-05, 5.491700000000155e-05, 5.493100000000112e-05, 5.594500000000169e-05, 5.1151999999998754e-05, 5.400000000000196e-05, 5.208399999999738e-05, 5.209699999999748e-05, 5.497299999999983e-05, 5.400000000000196e-05]</msg>
<status status="PASS" starttime="20201115 23:01:49.163" endtime="20201115 23:01:49.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.158" endtime="20201115 23:01:49.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.168" endtime="20201115 23:01:49.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:49.171" endtime="20201115 23:01:49.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.170" endtime="20201115 23:01:49.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.166" endtime="20201115 23:01:49.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.798" endtime="20201115 23:01:49.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.796" endtime="20201115 23:01:49.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.795" endtime="20201115 23:01:49.192"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.195" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.203" endtime="20201115 23:01:49.224"></status>
</kw>
<msg timestamp="20201115 23:01:49.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.201" endtime="20201115 23:01:49.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.225" endtime="20201115 23:01:49.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.228" endtime="20201115 23:01:49.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.199" endtime="20201115 23:01:49.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.196" endtime="20201115 23:01:49.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.237" endtime="20201115 23:01:49.522"></status>
</kw>
<msg timestamp="20201115 23:01:49.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023369319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02342525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:49.235" endtime="20201115 23:01:49.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023369319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02342525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:49.526" endtime="20201115 23:01:49.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.535" endtime="20201115 23:01:49.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.233" endtime="20201115 23:01:49.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.231" endtime="20201115 23:01:49.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:49.541" level="INFO">${RESULT} = [{'time': 0.02342525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.593100000000212e-05, 'source_diff': 5.593100000000212e-05}, {'time': 0.023486389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:49.538" endtime="20201115 23:01:49.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:49.555" level="INFO">${ACCURACY} = {'time': [0.02342525, 0.023486389, 0.023547292, 0.023608167, 0.023669431, 0.023729917, 0.023790778, 0.023852042, 0.023913278, 0.023974083, 0.024035556, 0.024096153, 0.0241575, 0.024218778, 0.02427975,...</msg>
<status status="PASS" starttime="20201115 23:01:49.543" endtime="20201115 23:01:49.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.560" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:01:49.559" endtime="20201115 23:01:49.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.562" level="INFO">VALUE: [5.593100000000212e-05, 5.209700000000095e-05, 5.497299999999983e-05, 5.018099999999984e-05, 5.305600000000271e-05, 5.019499999999941e-05, 5.118099999999737e-05, 5.009800000000189e-05, 5.208400000000085e-05, 5.113899999999866e-05, 5.304199999999967e-05, 5.009699999999895e-05, 5.305599999999924e-05, 5.305599999999924e-05, 5.306899999999934e-05, 5.5915999999999605e-05, 5.019499999999941e-05, 5.390299999999751e-05, 5.40419999999972e-05, 5.02079999999995e-05, 5.494500000000069e-05, 5.213899999999966e-05, 5.198600000000039e-05, 5.591699999999908e-05, 5.305599999999924e-05, 5.012499999999809e-05, 5.306999999999881e-05, 5.391700000000055e-05, 4.923600000000111e-05, 5.6902000000001035e-05, 4.927799999999982e-05, 5.107000000000028e-05, 5.113899999999866e-05, 5.209799999999695e-05, 5.113899999999866e-05, 5.3930000000000644e-05, 5.3985999999998924e-05, 5.209700000000095e-05, 5.212499999999662e-05, 4.912500000000056e-05, 5.6916000000000605e-05, 5.212500000000009e-05, 5.020899999999898e-05, 5.211100000000052e-05, 5.2193999999998464e-05, 5.588899999999994e-05, 5.115299999999823e-05, 5.305599999999924e-05, 4.925000000000068e-05, 5.581999999999809e-05]</msg>
<status status="PASS" starttime="20201115 23:01:49.561" endtime="20201115 23:01:49.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.556" endtime="20201115 23:01:49.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.565" endtime="20201115 23:01:49.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:49.569" endtime="20201115 23:01:49.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.567" endtime="20201115 23:01:49.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.563" endtime="20201115 23:01:49.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.195" endtime="20201115 23:01:49.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.193" endtime="20201115 23:01:49.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.193" endtime="20201115 23:01:49.590"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.592" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.600" endtime="20201115 23:01:49.624"></status>
</kw>
<msg timestamp="20201115 23:01:49.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.599" endtime="20201115 23:01:49.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.626" endtime="20201115 23:01:49.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.628" endtime="20201115 23:01:49.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.596" endtime="20201115 23:01:49.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.594" endtime="20201115 23:01:49.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.637" endtime="20201115 23:01:49.923"></status>
</kw>
<msg timestamp="20201115 23:01:49.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027796903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027855792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.636" endtime="20201115 23:01:49.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027796903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027855792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.927" endtime="20201115 23:01:49.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.936" endtime="20201115 23:01:49.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.633" endtime="20201115 23:01:49.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.632" endtime="20201115 23:01:49.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:49.943" level="INFO">${RESULT} = [{'time': 0.027855792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.888899999999947e-05, 'source_diff': 5.888899999999947e-05}, {'time': 0.027916278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:49.939" endtime="20201115 23:01:49.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:49.957" level="INFO">${ACCURACY} = {'time': [0.027855792, 0.027916278, 0.027977139, 0.028038625, 0.028099486, 0.028160819, 0.028221417, 0.028282917, 0.028343958, 0.028404861, 0.028465736, 0.028526903, 0.028587458, 0.028648556, 0.028710...</msg>
<status status="PASS" starttime="20201115 23:01:49.944" endtime="20201115 23:01:49.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.962" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:01:49.961" endtime="20201115 23:01:49.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.964" level="INFO">VALUE: [5.888899999999947e-05, 5.4027999999997633e-05, 5.401400000000153e-05, 5.306899999999934e-05, 5.016700000000027e-05, 5.5902000000000035e-05, 5.497299999999983e-05, 5.400000000000196e-05, 5.208299999999791e-05, 5.4958000000000784e-05, 5.2957999999998784e-05, 5.494500000000069e-05, 5.4013999999998064e-05, 5.491699999999808e-05, 5.497299999999983e-05, 5.30280000000001e-05, 5.022199999999907e-05, 5.20279999999991e-05, 5.591700000000255e-05, 5.390300000000098e-05, 5.305499999999977e-05, 5.401400000000153e-05, 5.211100000000052e-05, 5.593100000000212e-05, 5.4957999999997315e-05, 5.306899999999934e-05, 5.4958000000000784e-05, 5.119400000000093e-05, 5.5915999999999605e-05, 5.297200000000182e-05, 5.3957999999999784e-05, 5.3985999999998924e-05, 5.594500000000169e-05, 5.404200000000067e-05, 5.583299999999819e-05, 5.305599999999924e-05, 5.5957999999998315e-05, 5.3999999999998494e-05, 5.112499999999909e-05, 5.016700000000027e-05, 5.591699999999908e-05, 5.113900000000213e-05, 5.112499999999909e-05, 5.011099999999852e-05, 5.406999999999981e-05, 5.2985999999997924e-05, 5.5915999999999605e-05, 5.116700000000127e-05, 5.4985999999999924e-05, 5.58610000000008e-05]</msg>
<status status="PASS" starttime="20201115 23:01:49.963" endtime="20201115 23:01:49.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.958" endtime="20201115 23:01:49.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.967" endtime="20201115 23:01:49.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:49.971" endtime="20201115 23:01:49.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.969" endtime="20201115 23:01:49.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.966" endtime="20201115 23:01:49.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.593" endtime="20201115 23:01:49.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.591" endtime="20201115 23:01:49.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.590" endtime="20201115 23:01:49.992"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.994" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.002" endtime="20201115 23:01:50.021"></status>
</kw>
<msg timestamp="20201115 23:01:50.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.001" endtime="20201115 23:01:50.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.022" endtime="20201115 23:01:50.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.025" endtime="20201115 23:01:50.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.998" endtime="20201115 23:01:50.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.996" endtime="20201115 23:01:50.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.034" endtime="20201115 23:01:50.320"></status>
</kw>
<msg timestamp="20201115 23:01:50.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022673083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.032" endtime="20201115 23:01:50.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022673083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.324" endtime="20201115 23:01:50.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.333" endtime="20201115 23:01:50.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.030" endtime="20201115 23:01:50.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.028" endtime="20201115 23:01:50.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:50.339" level="INFO">${RESULT} = [{'time': 0.022673083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9596999999998855e-05, 'source_diff': 3.9596999999998855e-05}, {'time': 0.022733431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:50.336" endtime="20201115 23:01:50.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:50.353" level="INFO">${ACCURACY} = {'time': [0.022673083, 0.022733431, 0.022794264, 0.022855278, 0.022916708, 0.022978014, 0.023039222, 0.023099875, 0.023160694, 0.023221875, 0.023282667, 0.023343681, 0.023405042, 0.023466333, 0.023526...</msg>
<status status="PASS" starttime="20201115 23:01:50.340" endtime="20201115 23:01:50.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.357" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:01:50.356" endtime="20201115 23:01:50.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.360" level="INFO">VALUE: [3.9596999999998855e-05, 5.111199999999899e-05, 5.501400000000253e-05, 5.4985999999999924e-05, 5.5930000000002644e-05, 5.12080000000005e-05, 5.4930000000001644e-05, 5.205599999999824e-05, 5.5929999999999175e-05, 5.493100000000112e-05, 5.301400000000053e-05, 5.495900000000026e-05, 5.209800000000042e-05, 5.202699999999963e-05, 5.111099999999952e-05, 5.490300000000198e-05, 5.112499999999909e-05, 5.595900000000126e-05, 5.309700000000195e-05, 5.205499999999877e-05, 5.4957999999997315e-05, 5.3957999999999784e-05, 5.112499999999909e-05, 5.119400000000093e-05, 5.3944000000000214e-05, 5.208300000000138e-05, 5.505599999999777e-05, 5.590299999999951e-05, 5.400000000000196e-05, 5.3957999999999784e-05, 5.4985999999999924e-05, 5.594499999999822e-05, 5.3957999999999784e-05, 5.112499999999909e-05, 5.5930000000002644e-05, 5.113900000000213e-05, 5.300000000000096e-05, 5.112500000000256e-05, 5.019399999999993e-05, 5.395899999999926e-05, 5.2999999999997494e-05, 5.023599999999864e-05, 5.308299999999891e-05, 5.20279999999991e-05, 5.398600000000239e-05, 5.208300000000138e-05, 5.300000000000096e-05, 5.01530000000007e-05, 5.113900000000213e-05, 5.205600000000171e-05]</msg>
<status status="PASS" starttime="20201115 23:01:50.358" endtime="20201115 23:01:50.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.354" endtime="20201115 23:01:50.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.363" endtime="20201115 23:01:50.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:50.366" endtime="20201115 23:01:50.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.365" endtime="20201115 23:01:50.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.361" endtime="20201115 23:01:50.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.995" endtime="20201115 23:01:50.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.993" endtime="20201115 23:01:50.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.992" endtime="20201115 23:01:50.387"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.390" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.398" endtime="20201115 23:01:50.418"></status>
</kw>
<msg timestamp="20201115 23:01:50.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.396" endtime="20201115 23:01:50.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.420" endtime="20201115 23:01:50.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.423" endtime="20201115 23:01:50.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.394" endtime="20201115 23:01:50.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.392" endtime="20201115 23:01:50.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.432" endtime="20201115 23:01:50.719"></status>
</kw>
<msg timestamp="20201115 23:01:50.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024081028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024143625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.430" endtime="20201115 23:01:50.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024081028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024143625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.723" endtime="20201115 23:01:50.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.731" endtime="20201115 23:01:50.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.428" endtime="20201115 23:01:50.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.426" endtime="20201115 23:01:50.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:50.738" level="INFO">${RESULT} = [{'time': 0.024143625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.259699999999757e-05, 'source_diff': 6.259699999999757e-05}, {'time': 0.024204458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:50.734" endtime="20201115 23:01:50.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:50.751" level="INFO">${ACCURACY} = {'time': [0.024143625, 0.024204458, 0.024265153, 0.024326597, 0.024387375, 0.024449139, 0.024509806, 0.024570639, 0.024631667, 0.024692778, 0.024754306, 0.024814736, 0.024876042, 0.024937333, 0.024998...</msg>
<status status="PASS" starttime="20201115 23:01:50.739" endtime="20201115 23:01:50.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.756" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:01:50.755" endtime="20201115 23:01:50.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.758" level="INFO">VALUE: [6.259699999999757e-05, 5.301400000000053e-05, 5.495900000000026e-05, 5.20409999999992e-05, 5.591699999999908e-05, 5.591700000000255e-05, 5.3999999999998494e-05, 5.108299999999691e-05, 5.208400000000085e-05, 5.388899999999794e-05, 5.113899999999866e-05, 5.305499999999977e-05, 5.494500000000069e-05, 5.0165999999997324e-05, 5.112500000000256e-05, 5.391700000000055e-05, 5.0195000000002876e-05, 5.012499999999809e-05, 5.297200000000182e-05, 5.306899999999934e-05, 5.019499999999941e-05, 5.2151999999999754e-05, 5.397200000000282e-05, 5.101399999999853e-05, 5.591700000000255e-05, 5.304199999999967e-05, 5.111200000000246e-05, 5.012500000000156e-05, 5.019399999999993e-05, 5.115299999999823e-05, 5.401299999999859e-05, 5.583299999999819e-05, 5.306899999999934e-05, 5.3985999999998924e-05, 5.300000000000096e-05, 5.211100000000052e-05, 5.5915999999999605e-05, 5.40280000000011e-05, 5.3013999999997063e-05, 5.201399999999953e-05, 5.026399999999778e-05, 5.118100000000084e-05, 5.584700000000123e-05, 5.493100000000112e-05, 5.019399999999993e-05, 5.113900000000213e-05, 5.3971999999999354e-05, 5.680600000000299e-05, 5.404200000000067e-05, 5.112499999999909e-05]</msg>
<status status="PASS" starttime="20201115 23:01:50.757" endtime="20201115 23:01:50.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.752" endtime="20201115 23:01:50.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.761" endtime="20201115 23:01:50.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:50.765" endtime="20201115 23:01:50.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.763" endtime="20201115 23:01:50.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.760" endtime="20201115 23:01:50.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.390" endtime="20201115 23:01:50.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.388" endtime="20201115 23:01:50.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.388" endtime="20201115 23:01:50.786"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.788" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.797" endtime="20201115 23:01:50.820"></status>
</kw>
<msg timestamp="20201115 23:01:50.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.795" endtime="20201115 23:01:50.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.822" endtime="20201115 23:01:50.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.824" endtime="20201115 23:01:50.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.792" endtime="20201115 23:01:50.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.790" endtime="20201115 23:01:50.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.833" endtime="20201115 23:01:51.118"></status>
</kw>
<msg timestamp="20201115 23:01:51.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027263458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027322264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.832" endtime="20201115 23:01:51.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027263458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027322264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.122" endtime="20201115 23:01:51.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.130" endtime="20201115 23:01:51.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.829" endtime="20201115 23:01:51.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.827" endtime="20201115 23:01:51.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:51.137" level="INFO">${RESULT} = [{'time': 0.027322264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8805999999998054e-05, 'source_diff': 5.8805999999998054e-05}, {'time': 0.027384028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:51.133" endtime="20201115 23:01:51.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:51.150" level="INFO">${ACCURACY} = {'time': [0.027322264, 0.027384028, 0.027444653, 0.027505458, 0.027566611, 0.027628097, 0.027688736, 0.02775, 0.027810875, 0.027872139, 0.027933319, 0.027993819, 0.028054611, 0.028115917, 0.028177056,...</msg>
<status status="PASS" starttime="20201115 23:01:51.138" endtime="20201115 23:01:51.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.154" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:01:51.153" endtime="20201115 23:01:51.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.157" level="INFO">VALUE: [5.8805999999998054e-05, 5.209700000000095e-05, 5.300000000000096e-05, 5.587500000000037e-05, 5.400000000000196e-05, 5.5929999999999175e-05, 5.11669999999978e-05, 5.023599999999864e-05, 5.206899999999834e-05, 5.304199999999967e-05, 5.308300000000238e-05, 5.1137999999999184e-05, 5.019399999999993e-05, 5.018099999999984e-05, 5.594499999999822e-05, 5.594500000000169e-05, 5.409699999999948e-05, 5.308399999999838e-05, 5.5943999999998745e-05, 5.4972000000000354e-05, 5.40280000000011e-05, 5.593099999999865e-05, 5.206900000000181e-05, 5.305499999999977e-05, 5.305599999999924e-05, 5.018099999999984e-05, 5.49869999999994e-05, 5.212500000000009e-05, 5.018099999999984e-05, 5.022200000000254e-05, 5.2138000000000184e-05, 5.694499999999922e-05, 5.018000000000036e-05, 4.915200000000022e-05, 5.211100000000052e-05, 5.306999999999881e-05, 5.300000000000096e-05, 5.023600000000211e-05, 5.026400000000125e-05, 5.120899999999998e-05, 5.108300000000038e-05, 5.208300000000138e-05, 5.3013999999997063e-05, 5.020899999999898e-05, 5.11530000000017e-05, 5.4985999999999924e-05, 5.591699999999908e-05, 5.400000000000196e-05, 5.019499999999941e-05, 5.313900000000066e-05]</msg>
<status status="PASS" starttime="20201115 23:01:51.156" endtime="20201115 23:01:51.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.151" endtime="20201115 23:01:51.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.160" endtime="20201115 23:01:51.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:51.163" endtime="20201115 23:01:51.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.162" endtime="20201115 23:01:51.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.159" endtime="20201115 23:01:51.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.789" endtime="20201115 23:01:51.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.787" endtime="20201115 23:01:51.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.786" endtime="20201115 23:01:51.185"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.187" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.196" endtime="20201115 23:01:51.217"></status>
</kw>
<msg timestamp="20201115 23:01:51.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.194" endtime="20201115 23:01:51.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.218" endtime="20201115 23:01:51.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.221" endtime="20201115 23:01:51.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.192" endtime="20201115 23:01:51.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.189" endtime="20201115 23:01:51.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.230" endtime="20201115 23:01:51.515"></status>
</kw>
<msg timestamp="20201115 23:01:51.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025485944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0255275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:51.228" endtime="20201115 23:01:51.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025485944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0255275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:51.520" endtime="20201115 23:01:51.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.528" endtime="20201115 23:01:51.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.226" endtime="20201115 23:01:51.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.224" endtime="20201115 23:01:51.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:51.534" level="INFO">${RESULT} = [{'time': 0.0255275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.155600000000162e-05, 'source_diff': 4.155600000000162e-05}, {'time': 0.025588778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:51.531" endtime="20201115 23:01:51.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:51.549" level="INFO">${ACCURACY} = {'time': [0.0255275, 0.025588778, 0.025649917, 0.025710333, 0.025772194, 0.025832514, 0.025894347, 0.025955028, 0.02601575, 0.026076528, 0.026138403, 0.026199528, 0.026260069, 0.026320847, 0.026381903...</msg>
<status status="PASS" starttime="20201115 23:01:51.535" endtime="20201115 23:01:51.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.553" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:01:51.552" endtime="20201115 23:01:51.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.556" level="INFO">VALUE: [4.155600000000162e-05, 5.306999999999881e-05, 5.398600000000239e-05, 5.209699999999748e-05, 5.1151999999998754e-05, 4.920800000000197e-05, 5.111100000000299e-05, 5.40280000000011e-05, 5.593100000000212e-05, 5.495900000000026e-05, 5.4999999999999494e-05, 5.3985999999998924e-05, 5.30410000000002e-05, 5.5986000000000924e-05, 5.208400000000085e-05, 5.202800000000257e-05, 5.694499999999922e-05, 5.495900000000026e-05, 5.401400000000153e-05, 5.019499999999941e-05, 5.4985999999999924e-05, 5.300000000000096e-05, 5.4944000000001214e-05, 5.0179999999996894e-05, 5.304200000000314e-05, 5.306900000000281e-05, 5.498700000000287e-05, 5.308299999999891e-05, 5.491700000000155e-05, 5.30280000000001e-05, 5.105499999999777e-05, 5.493099999999765e-05, 5.207000000000128e-05, 5.497299999999983e-05, 5.112499999999909e-05, 5.023599999999864e-05, 5.112500000000256e-05, 5.495900000000026e-05, 5.683399999999866e-05, 5.311200000000099e-05, 5.591699999999908e-05, 5.3985999999998924e-05, 5.109699999999995e-05, 5.108300000000038e-05, 5.016600000000079e-05, 5.11530000000017e-05, 5.494499999999722e-05, 5.208400000000085e-05, 4.913900000000013e-05, 5.4958000000000784e-05]</msg>
<status status="PASS" starttime="20201115 23:01:51.554" endtime="20201115 23:01:51.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.550" endtime="20201115 23:01:51.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.559" endtime="20201115 23:01:51.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:51.563" endtime="20201115 23:01:51.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.561" endtime="20201115 23:01:51.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.558" endtime="20201115 23:01:51.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.188" endtime="20201115 23:01:51.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.186" endtime="20201115 23:01:51.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.185" endtime="20201115 23:01:51.584"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.586" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.594" endtime="20201115 23:01:51.613"></status>
</kw>
<msg timestamp="20201115 23:01:51.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.593" endtime="20201115 23:01:51.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.615" endtime="20201115 23:01:51.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.618" endtime="20201115 23:01:51.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.590" endtime="20201115 23:01:51.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.588" endtime="20201115 23:01:51.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.626" endtime="20201115 23:01:51.912"></status>
</kw>
<msg timestamp="20201115 23:01:51.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023052833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023091528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.625" endtime="20201115 23:01:51.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023052833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023091528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.916" endtime="20201115 23:01:51.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.925" endtime="20201115 23:01:51.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.622" endtime="20201115 23:01:51.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.621" endtime="20201115 23:01:51.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:51.931" level="INFO">${RESULT} = [{'time': 0.023091528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8695000000001784e-05, 'source_diff': 3.8695000000001784e-05}, {'time': 0.023153278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:51.928" endtime="20201115 23:01:51.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:51.945" level="INFO">${ACCURACY} = {'time': [0.023091528, 0.023153278, 0.023214514, 0.023275417, 0.023335819, 0.023396986, 0.023457875, 0.023518986, 0.023579861, 0.023640792, 0.023702639, 0.023763569, 0.023824, 0.023885389, 0.023946264...</msg>
<status status="PASS" starttime="20201115 23:01:51.932" endtime="20201115 23:01:51.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.949" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:01:51.948" endtime="20201115 23:01:51.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.952" level="INFO">VALUE: [3.8695000000001784e-05, 5.113899999999866e-05, 5.022199999999907e-05, 5.300000000000096e-05, 5.211100000000052e-05, 5.11530000000017e-05, 5.4958000000000784e-05, 5.019399999999993e-05, 5.4958000000000784e-05, 5.116700000000127e-05, 5.4985999999999924e-05, 5.1165999999998324e-05, 5.305600000000271e-05, 5.308299999999891e-05, 5.21669999999988e-05, 5.5013999999999064e-05, 5.4013999999998064e-05, 5.212500000000009e-05, 5.5902000000000035e-05, 5.205600000000171e-05, 5.018000000000036e-05, 5.4958000000000784e-05, 5.6000000000000494e-05, 5.402700000000163e-05, 5.205500000000224e-05, 5.211100000000052e-05, 5.020800000000297e-05, 5.5929999999999175e-05, 5.305599999999924e-05, 5.5013999999999064e-05, 5.21530000000027e-05, 5.4999999999999494e-05, 5.301400000000053e-05, 5.020800000000297e-05, 5.212500000000009e-05, 5.4972000000000354e-05, 5.4944000000001214e-05, 5.500000000000296e-05, 5.59870000000004e-05, 5.405600000000024e-05, 5.591699999999908e-05, 5.4013999999998064e-05, 5.116700000000127e-05, 5.30280000000001e-05, 5.5915999999999605e-05, 5.015299999999723e-05, 5.494500000000069e-05, 5.024999999999821e-05, 5.6014000000000064e-05, 5.308299999999891e-05]</msg>
<status status="PASS" starttime="20201115 23:01:51.950" endtime="20201115 23:01:51.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.946" endtime="20201115 23:01:51.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.955" endtime="20201115 23:01:51.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:51.959" endtime="20201115 23:01:51.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.957" endtime="20201115 23:01:51.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.954" endtime="20201115 23:01:51.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.587" endtime="20201115 23:01:51.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.585" endtime="20201115 23:01:51.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.584" endtime="20201115 23:01:51.980"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.982" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.990" endtime="20201115 23:01:52.010"></status>
</kw>
<msg timestamp="20201115 23:01:52.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.989" endtime="20201115 23:01:52.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.012" endtime="20201115 23:01:52.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.014" endtime="20201115 23:01:52.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.986" endtime="20201115 23:01:52.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.984" endtime="20201115 23:01:52.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.023" endtime="20201115 23:01:52.309"></status>
</kw>
<msg timestamp="20201115 23:01:52.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024054569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024104764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.022" endtime="20201115 23:01:52.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024054569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024104764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.313" endtime="20201115 23:01:52.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.321" endtime="20201115 23:01:52.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.019" endtime="20201115 23:01:52.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.017" endtime="20201115 23:01:52.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:52.328" level="INFO">${RESULT} = [{'time': 0.024104764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.019499999999941e-05, 'source_diff': 5.019499999999941e-05}, {'time': 0.024166181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:52.324" endtime="20201115 23:01:52.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:52.342" level="INFO">${ACCURACY} = {'time': [0.024104764, 0.024166181, 0.024227319, 0.024288319, 0.024348722, 0.024410097, 0.024471472, 0.024531778, 0.024593542, 0.024654486, 0.024715472, 0.024775944, 0.024837306, 0.024898111, 0.024959...</msg>
<status status="PASS" starttime="20201115 23:01:52.329" endtime="20201115 23:01:52.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.347" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:01:52.346" endtime="20201115 23:01:52.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.350" level="INFO">VALUE: [5.019499999999941e-05, 5.112499999999909e-05, 5.209700000000095e-05, 5.4985999999999924e-05, 5.30410000000002e-05, 5.305499999999977e-05, 5.305499999999977e-05, 5.113900000000213e-05, 5.115299999999823e-05, 5.108300000000038e-05, 5.588899999999994e-05, 5.209700000000095e-05, 5.39869999999984e-05, 5.019399999999993e-05, 5.201399999999953e-05, 5.023599999999864e-05, 5.3985999999998924e-05, 5.3971999999999354e-05, 5.497299999999983e-05, 5.02079999999995e-05, 5.211100000000052e-05, 5.4985999999999924e-05, 5.594499999999822e-05, 5.106900000000081e-05, 5.30410000000002e-05, 5.018099999999984e-05, 5.304199999999967e-05, 5.016700000000027e-05, 5.5930000000002644e-05, 5.494500000000069e-05, 5.018000000000036e-05, 5.0237000000001586e-05, 5.3944000000000214e-05, 5.590299999999951e-05, 5.588899999999994e-05, 5.015299999999723e-05, 5.497299999999983e-05, 5.58610000000008e-05, 5.206899999999834e-05, 5.211100000000052e-05, 5.590299999999951e-05, 5.5929999999999175e-05, 5.1151999999998754e-05, 5.4972000000000354e-05, 5.495900000000026e-05, 5.018099999999984e-05, 5.308400000000185e-05, 5.491699999999808e-05, 5.3013999999997063e-05, 5.5902000000000035e-05]</msg>
<status status="PASS" starttime="20201115 23:01:52.348" endtime="20201115 23:01:52.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.343" endtime="20201115 23:01:52.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.353" endtime="20201115 23:01:52.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:52.356" endtime="20201115 23:01:52.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.355" endtime="20201115 23:01:52.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.351" endtime="20201115 23:01:52.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.983" endtime="20201115 23:01:52.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.981" endtime="20201115 23:01:52.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.980" endtime="20201115 23:01:52.377"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.380" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.388" endtime="20201115 23:01:52.408"></status>
</kw>
<msg timestamp="20201115 23:01:52.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.386" endtime="20201115 23:01:52.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.410" endtime="20201115 23:01:52.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.412" endtime="20201115 23:01:52.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.384" endtime="20201115 23:01:52.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.382" endtime="20201115 23:01:52.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.421" endtime="20201115 23:01:52.706"></status>
</kw>
<msg timestamp="20201115 23:01:52.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023452764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023500056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.420" endtime="20201115 23:01:52.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023452764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023500056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.710" endtime="20201115 23:01:52.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.719" endtime="20201115 23:01:52.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.417" endtime="20201115 23:01:52.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.415" endtime="20201115 23:01:52.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:52.725" level="INFO">${RESULT} = [{'time': 0.023500056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729199999999739e-05, 'source_diff': 4.729199999999739e-05}, {'time': 0.023560764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:52.722" endtime="20201115 23:01:52.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:52.739" level="INFO">${ACCURACY} = {'time': [0.023500056, 0.023560764, 0.023622653, 0.023683417, 0.023744333, 0.023805681, 0.023866125, 0.023927458, 0.023988, 0.024049639, 0.024110486, 0.024171653, 0.024232514, 0.024293347, 0.024354833...</msg>
<status status="PASS" starttime="20201115 23:01:52.726" endtime="20201115 23:01:52.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.743" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:01:52.742" endtime="20201115 23:01:52.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.746" level="INFO">VALUE: [4.729199999999739e-05, 5.208300000000138e-05, 5.5013999999999064e-05, 5.491699999999808e-05, 5.20409999999992e-05, 5.594499999999822e-05, 5.305599999999924e-05, 5.4901999999999035e-05, 5.587500000000037e-05, 5.113900000000213e-05, 5.025000000000168e-05, 5.112500000000256e-05, 5.212500000000009e-05, 5.108300000000038e-05, 5.5902000000000035e-05, 5.209700000000095e-05, 5.1137999999999184e-05, 5.013900000000113e-05, 5.3944000000000214e-05, 5.2985999999997924e-05, 5.4958000000000784e-05, 5.305599999999924e-05, 5.588899999999994e-05, 5.018099999999984e-05, 5.581899999999862e-05, 5.4930000000001644e-05, 5.593100000000212e-05, 5.30410000000002e-05, 5.5958000000001784e-05, 5.401400000000153e-05, 5.49730000000033e-05, 5.488899999999894e-05, 5.308399999999838e-05, 5.4943999999997745e-05, 5.590299999999951e-05, 5.111099999999952e-05, 5.305499999999977e-05, 5.019399999999993e-05, 5.111099999999952e-05, 5.205500000000224e-05, 5.208400000000085e-05, 5.305600000000271e-05, 5.116700000000127e-05, 5.395800000000325e-05, 5.113899999999866e-05, 5.582000000000156e-05, 5.11530000000017e-05, 5.304199999999967e-05, 5.591699999999908e-05, 5.587500000000037e-05]</msg>
<status status="PASS" starttime="20201115 23:01:52.744" endtime="20201115 23:01:52.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.740" endtime="20201115 23:01:52.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.749" endtime="20201115 23:01:52.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:52.752" endtime="20201115 23:01:52.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.751" endtime="20201115 23:01:52.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.747" endtime="20201115 23:01:52.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.381" endtime="20201115 23:01:52.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.379" endtime="20201115 23:01:52.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.378" endtime="20201115 23:01:52.773"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.776" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.784" endtime="20201115 23:01:52.805"></status>
</kw>
<msg timestamp="20201115 23:01:52.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.782" endtime="20201115 23:01:52.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.806" endtime="20201115 23:01:52.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.809" endtime="20201115 23:01:52.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.780" endtime="20201115 23:01:52.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.778" endtime="20201115 23:01:52.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.818" endtime="20201115 23:01:53.103"></status>
</kw>
<msg timestamp="20201115 23:01:53.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024306333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024360333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.816" endtime="20201115 23:01:53.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024306333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024360333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.107" endtime="20201115 23:01:53.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.116" endtime="20201115 23:01:53.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.814" endtime="20201115 23:01:53.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.812" endtime="20201115 23:01:53.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:53.123" level="INFO">${RESULT} = [{'time': 0.024360333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.400000000000196e-05, 'source_diff': 5.400000000000196e-05}, {'time': 0.024421472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:53.119" endtime="20201115 23:01:53.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:53.137" level="INFO">${ACCURACY} = {'time': [0.024360333, 0.024421472, 0.024483111, 0.024543736, 0.024604764, 0.024665542, 0.024727097, 0.024787431, 0.024848819, 0.024909903, 0.024970611, 0.025031667, 0.025092847, 0.025153986, 0.025214...</msg>
<status status="PASS" starttime="20201115 23:01:53.123" endtime="20201115 23:01:53.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.142" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:01:53.141" endtime="20201115 23:01:53.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.144" level="INFO">VALUE: [5.400000000000196e-05, 5.4999999999999494e-05, 5.491699999999808e-05, 5.108300000000038e-05, 5.02079999999995e-05, 5.018099999999984e-05, 5.3957999999999784e-05, 5.297299999999783e-05, 5.306900000000281e-05, 5.495900000000026e-05, 5.206900000000181e-05, 5.211100000000052e-05, 5.306900000000281e-05, 5.5943999999998745e-05, 5.49869999999994e-05, 5.4985999999999924e-05, 5.209700000000095e-05, 5.491700000000155e-05, 5.488899999999894e-05, 5.02079999999995e-05, 5.4013999999998064e-05, 5.587500000000037e-05, 5.58610000000008e-05, 5.298600000000139e-05, 5.111100000000299e-05, 5.0209000000002446e-05, 5.40280000000011e-05, 5.488899999999894e-05, 5.4944000000001214e-05, 5.209700000000095e-05, 5.112499999999909e-05, 5.1151999999998754e-05, 5.493100000000112e-05, 5.0138000000001653e-05, 5.205499999999877e-05, 5.4972000000000354e-05, 5.305500000000324e-05, 5.305599999999924e-05, 5.590299999999951e-05, 5.593099999999865e-05, 5.205599999999824e-05, 5.2985999999997924e-05, 5.302700000000063e-05, 5.305599999999924e-05, 5.211100000000052e-05, 5.5943999999998745e-05, 5.211099999999705e-05, 5.019399999999993e-05, 5.111099999999952e-05, 5.108299999999691e-05]</msg>
<status status="PASS" starttime="20201115 23:01:53.143" endtime="20201115 23:01:53.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.138" endtime="20201115 23:01:53.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.147" endtime="20201115 23:01:53.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:53.151" endtime="20201115 23:01:53.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.149" endtime="20201115 23:01:53.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.146" endtime="20201115 23:01:53.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.776" endtime="20201115 23:01:53.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.775" endtime="20201115 23:01:53.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.774" endtime="20201115 23:01:53.172"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.174" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.182" endtime="20201115 23:01:53.201"></status>
</kw>
<msg timestamp="20201115 23:01:53.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.181" endtime="20201115 23:01:53.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.203" endtime="20201115 23:01:53.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.210" endtime="20201115 23:01:53.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.178" endtime="20201115 23:01:53.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.176" endtime="20201115 23:01:53.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.219" endtime="20201115 23:01:53.509"></status>
</kw>
<msg timestamp="20201115 23:01:53.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022901569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.217" endtime="20201115 23:01:53.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022901569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.513" endtime="20201115 23:01:53.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.522" endtime="20201115 23:01:53.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.215" endtime="20201115 23:01:53.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.213" endtime="20201115 23:01:53.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:53.528" level="INFO">${RESULT} = [{'time': 0.022901569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729100000000139e-05, 'source_diff': 4.729100000000139e-05}, {'time': 0.022962722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:53.525" endtime="20201115 23:01:53.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:53.542" level="INFO">${ACCURACY} = {'time': [0.022901569, 0.022962722, 0.023023389, 0.023084444, 0.023145861, 0.023205958, 0.023267125, 0.023328569, 0.023389569, 0.023450722, 0.023512042, 0.023572903, 0.023634083, 0.023694319, 0.023756...</msg>
<status status="PASS" starttime="20201115 23:01:53.529" endtime="20201115 23:01:53.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.546" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:01:53.545" endtime="20201115 23:01:53.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.549" level="INFO">VALUE: [4.729100000000139e-05, 5.5944000000002214e-05, 5.4013999999998064e-05, 5.305499999999977e-05, 5.205499999999877e-05, 5.0151999999997754e-05, 5.305599999999924e-05, 5.112499999999909e-05, 5.5915999999999605e-05, 5.5958000000001784e-05, 5.588899999999994e-05, 5.024999999999821e-05, 5.113899999999866e-05, 5.0165999999997324e-05, 5.688900000000094e-05, 5.488899999999894e-05, 5.300000000000096e-05, 5.019399999999993e-05, 5.4999999999999494e-05, 5.113899999999866e-05, 5.3999999999998494e-05, 5.397200000000282e-05, 5.208299999999791e-05, 5.400000000000196e-05, 5.500000000000296e-05, 5.02079999999995e-05, 5.488899999999894e-05, 5.109799999999942e-05, 5.308399999999838e-05, 5.11530000000017e-05, 5.305599999999924e-05, 5.590299999999951e-05, 5.688900000000094e-05, 5.209799999999695e-05, 5.208300000000138e-05, 5.483300000000066e-05, 5.213899999999966e-05, 5.018099999999984e-05, 5.112500000000256e-05, 5.11530000000017e-05, 5.209700000000095e-05, 5.106900000000081e-05, 5.587500000000037e-05, 5.209700000000095e-05, 5.1165999999998324e-05, 5.400000000000196e-05, 5.391699999999708e-05, 5.108300000000038e-05, 5.587500000000037e-05, 5.112499999999909e-05]</msg>
<status status="PASS" starttime="20201115 23:01:53.547" endtime="20201115 23:01:53.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.543" endtime="20201115 23:01:53.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.552" endtime="20201115 23:01:53.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:53.555" endtime="20201115 23:01:53.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.554" endtime="20201115 23:01:53.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.550" endtime="20201115 23:01:53.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.175" endtime="20201115 23:01:53.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.173" endtime="20201115 23:01:53.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.172" endtime="20201115 23:01:53.576"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.579" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.588" endtime="20201115 23:01:53.609"></status>
</kw>
<msg timestamp="20201115 23:01:53.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.586" endtime="20201115 23:01:53.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.610" endtime="20201115 23:01:53.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.613" endtime="20201115 23:01:53.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.583" endtime="20201115 23:01:53.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.581" endtime="20201115 23:01:53.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.622" endtime="20201115 23:01:53.907"></status>
</kw>
<msg timestamp="20201115 23:01:53.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025210167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025255583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.620" endtime="20201115 23:01:53.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025210167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025255583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.911" endtime="20201115 23:01:53.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.919" endtime="20201115 23:01:53.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.618" endtime="20201115 23:01:53.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.616" endtime="20201115 23:01:53.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:53.926" level="INFO">${RESULT} = [{'time': 0.025255583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541600000000298e-05, 'source_diff': 4.541600000000298e-05}, {'time': 0.025316667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:53.922" endtime="20201115 23:01:53.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:53.939" level="INFO">${ACCURACY} = {'time': [0.025255583, 0.025316667, 0.025378125, 0.025439042, 0.025499944, 0.025561056, 0.025622417, 0.025683431, 0.025744167, 0.025805458, 0.025866208, 0.025926694, 0.025987653, 0.026049653, 0.026110...</msg>
<status status="PASS" starttime="20201115 23:01:53.927" endtime="20201115 23:01:53.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.944" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:01:53.943" endtime="20201115 23:01:53.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.946" level="INFO">VALUE: [4.541600000000298e-05, 5.40280000000011e-05, 5.209700000000095e-05, 5.593099999999865e-05, 5.018000000000036e-05, 5.591699999999908e-05, 5.211100000000052e-05, 5.594499999999822e-05, 5.3985999999998924e-05, 5.4944000000001214e-05, 5.305500000000324e-05, 5.2151999999999754e-05, 5.591699999999908e-05, 5.3999999999998494e-05, 5.018000000000036e-05, 5.113899999999866e-05, 5.212500000000009e-05, 5.305499999999977e-05, 5.012499999999809e-05, 5.6778000000000384e-05, 5.4985999999999924e-05, 5.208299999999791e-05, 5.112500000000256e-05, 5.018099999999984e-05, 5.304199999999967e-05, 5.111099999999952e-05, 5.4971999999996884e-05, 5.4013999999998064e-05, 5.112499999999909e-05, 5.30410000000002e-05, 5.208300000000138e-05, 5.2014000000003e-05, 5.306999999999881e-05, 5.306999999999881e-05, 5.018099999999984e-05, 5.3985999999998924e-05, 4.917999999999936e-05, 5.113899999999866e-05, 5.3957999999999784e-05, 5.398600000000239e-05, 5.211099999999705e-05, 5.590300000000298e-05, 5.588899999999994e-05, 5.493099999999765e-05, 5.1137999999999184e-05, 5.593099999999865e-05, 5.4972000000000354e-05, 5.4958000000000784e-05, 5.4972000000000354e-05, 5.68749999999979e-05]</msg>
<status status="PASS" starttime="20201115 23:01:53.945" endtime="20201115 23:01:53.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.940" endtime="20201115 23:01:53.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.949" endtime="20201115 23:01:53.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:53.953" endtime="20201115 23:01:53.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.951" endtime="20201115 23:01:53.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.948" endtime="20201115 23:01:53.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.580" endtime="20201115 23:01:53.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.578" endtime="20201115 23:01:53.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.577" endtime="20201115 23:01:53.974"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.977" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.985" endtime="20201115 23:01:54.006"></status>
</kw>
<msg timestamp="20201115 23:01:54.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.983" endtime="20201115 23:01:54.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.007" endtime="20201115 23:01:54.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.010" endtime="20201115 23:01:54.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.981" endtime="20201115 23:01:54.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.979" endtime="20201115 23:01:54.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.019" endtime="20201115 23:01:54.304"></status>
</kw>
<msg timestamp="20201115 23:01:54.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024695319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024742583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.017" endtime="20201115 23:01:54.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024695319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024742583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.308" endtime="20201115 23:01:54.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.316" endtime="20201115 23:01:54.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.015" endtime="20201115 23:01:54.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.013" endtime="20201115 23:01:54.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:54.323" level="INFO">${RESULT} = [{'time': 0.024742583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.726399999999825e-05, 'source_diff': 4.726399999999825e-05}, {'time': 0.024803389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:54.320" endtime="20201115 23:01:54.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:54.336" level="INFO">${ACCURACY} = {'time': [0.024742583, 0.024803389, 0.024864847, 0.024925528, 0.024986486, 0.025047597, 0.025108708, 0.025170292, 0.025230722, 0.025292319, 0.025353042, 0.025413736, 0.025474597, 0.025536028, 0.025597...</msg>
<status status="PASS" starttime="20201115 23:01:54.324" endtime="20201115 23:01:54.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.341" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:01:54.340" endtime="20201115 23:01:54.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.343" level="INFO">VALUE: [4.726399999999825e-05, 5.2999999999997494e-05, 5.5929999999999175e-05, 5.4027999999997633e-05, 5.013899999999766e-05, 5.590300000000298e-05, 5.40410000000012e-05, 5.597300000000083e-05, 5.201399999999953e-05, 5.400000000000196e-05, 5.118100000000084e-05, 5.018000000000036e-05, 5.211100000000052e-05, 5.015299999999723e-05, 5.5958000000001784e-05, 5.209700000000095e-05, 5.02079999999995e-05, 5.5943999999998745e-05, 5.201300000000006e-05, 5.306899999999934e-05, 5.118099999999737e-05, 5.5943999999998745e-05, 5.5915999999999605e-05, 5.49730000000033e-05, 5.212500000000009e-05, 5.116700000000127e-05, 5.487499999999937e-05, 5.018099999999984e-05, 5.4957999999997315e-05, 5.300000000000096e-05, 5.590299999999951e-05, 5.199999999999996e-05, 5.30280000000001e-05, 5.49869999999994e-05, 5.107000000000028e-05, 5.113899999999866e-05, 5.211099999999705e-05, 5.4972000000000354e-05, 5.4972000000000354e-05, 5.5915999999999605e-05, 5.011099999999852e-05, 5.0179999999996894e-05, 5.591699999999908e-05, 5.4013999999998064e-05, 5.0137999999998184e-05, 5.305499999999977e-05, 5.401299999999859e-05, 5.30280000000001e-05, 5.580600000000199e-05, 5.11530000000017e-05]</msg>
<status status="PASS" starttime="20201115 23:01:54.342" endtime="20201115 23:01:54.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.337" endtime="20201115 23:01:54.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.347" endtime="20201115 23:01:54.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.350" endtime="20201115 23:01:54.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.349" endtime="20201115 23:01:54.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.345" endtime="20201115 23:01:54.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.977" endtime="20201115 23:01:54.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.975" endtime="20201115 23:01:54.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.975" endtime="20201115 23:01:54.372"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.374" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.383" endtime="20201115 23:01:54.407"></status>
</kw>
<msg timestamp="20201115 23:01:54.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.382" endtime="20201115 23:01:54.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.409" endtime="20201115 23:01:54.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.411" endtime="20201115 23:01:54.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.379" endtime="20201115 23:01:54.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.376" endtime="20201115 23:01:54.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.420" endtime="20201115 23:01:54.706"></status>
</kw>
<msg timestamp="20201115 23:01:54.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029005278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029050653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.419" endtime="20201115 23:01:54.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029005278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029050653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.710" endtime="20201115 23:01:54.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.718" endtime="20201115 23:01:54.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.416" endtime="20201115 23:01:54.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.415" endtime="20201115 23:01:54.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:54.725" level="INFO">${RESULT} = [{'time': 0.029050653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5375000000000276e-05, 'source_diff': 4.5375000000000276e-05}, {'time': 0.029112028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:54.721" endtime="20201115 23:01:54.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:54.739" level="INFO">${ACCURACY} = {'time': [0.029050653, 0.029112028, 0.029172861, 0.029234056, 0.029295569, 0.029356736, 0.029417375, 0.029478056, 0.029539778, 0.029600139, 0.029661611, 0.029722444, 0.029783083, 0.029845028, 0.029905...</msg>
<status status="PASS" starttime="20201115 23:01:54.726" endtime="20201115 23:01:54.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.744" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:01:54.743" endtime="20201115 23:01:54.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.747" level="INFO">VALUE: [4.5375000000000276e-05, 5.398600000000239e-05, 5.5944000000002214e-05, 5.498700000000287e-05, 5.4958000000000784e-05, 5.306900000000281e-05, 5.304199999999967e-05, 5.018099999999984e-05, 5.308399999999838e-05, 5.02079999999995e-05, 5.211100000000052e-05, 5.408299999999991e-05, 5.577699999999991e-05, 5.113899999999866e-05, 5.305499999999977e-05, 5.113900000000213e-05, 5.4944000000001214e-05, 5.207000000000128e-05, 5.119400000000093e-05, 5.40410000000012e-05, 5.402700000000163e-05, 5.591700000000255e-05, 5.213899999999966e-05, 5.5958000000001784e-05, 5.4887999999999465e-05, 5.208399999999738e-05, 5.593100000000212e-05, 5.4971999999996884e-05, 5.3999999999998494e-05, 5.019399999999993e-05, 5.212500000000009e-05, 5.5929999999999175e-05, 5.11530000000017e-05, 5.019399999999993e-05, 5.306899999999934e-05, 5.306900000000281e-05, 5.686099999999833e-05, 5.488900000000241e-05, 5.0181000000003306e-05, 5.11669999999978e-05, 5.019499999999594e-05, 5.306899999999587e-05, 5.204200000000214e-05, 5.4013999999998064e-05, 5.5902000000003504e-05, 5.018099999999637e-05, 5.593099999999518e-05, 5.494500000000069e-05, 5.4972000000000354e-05, 5.494500000000069e-05]</msg>
<status status="PASS" starttime="20201115 23:01:54.745" endtime="20201115 23:01:54.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.740" endtime="20201115 23:01:54.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.750" endtime="20201115 23:01:54.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.753" endtime="20201115 23:01:54.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.752" endtime="20201115 23:01:54.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.748" endtime="20201115 23:01:54.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.375" endtime="20201115 23:01:54.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.373" endtime="20201115 23:01:54.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.372" endtime="20201115 23:01:54.775"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.777" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.785" endtime="20201115 23:01:54.806"></status>
</kw>
<msg timestamp="20201115 23:01:54.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.783" endtime="20201115 23:01:54.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.807" endtime="20201115 23:01:54.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.810" endtime="20201115 23:01:54.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.781" endtime="20201115 23:01:54.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.779" endtime="20201115 23:01:54.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.819" endtime="20201115 23:01:55.104"></status>
</kw>
<msg timestamp="20201115 23:01:55.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022802986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022891306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.817" endtime="20201115 23:01:55.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022802986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022891306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.108" endtime="20201115 23:01:55.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.116" endtime="20201115 23:01:55.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.815" endtime="20201115 23:01:55.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.813" endtime="20201115 23:01:55.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:55.123" level="INFO">${RESULT} = [{'time': 0.022891306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.831999999999937e-05, 'source_diff': 8.831999999999937e-05}, {'time': 0.022983569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:55.120" endtime="20201115 23:01:55.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:55.137" level="INFO">${ACCURACY} = {'time': [0.022891306, 0.022983569, 0.023074806, 0.023166681, 0.023257667, 0.023349792, 0.023441167, 0.023532278, 0.023624417, 0.023715653, 0.023807458, 0.023898764, 0.023990431, 0.024081944, 0.024173...</msg>
<status status="PASS" starttime="20201115 23:01:55.124" endtime="20201115 23:01:55.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.141" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:01:55.140" endtime="20201115 23:01:55.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.144" level="INFO">VALUE: [8.831999999999937e-05, 8.372199999999788e-05, 8.169499999999968e-05, 8.376400000000006e-05, 8.076400000000053e-05, 8.27780000000021e-05, 8.176399999999806e-05, 8.644500000000097e-05, 8.466700000000008e-05, 8.458399999999866e-05, 8.559699999999976e-05, 8.090300000000022e-05, 8.466700000000008e-05, 8.162500000000183e-05, 8.369499999999822e-05, 8.463800000000146e-05, 8.369499999999822e-05, 8.176400000000153e-05, 8.4459000000002e-05, 8.272200000000035e-05, 8.363899999999994e-05, 8.651399999999934e-05, 8.554200000000095e-05, 8.552800000000138e-05, 8.272199999999688e-05, 7.982000000000128e-05, 8.649999999999977e-05, 8.363899999999994e-05, 8.369500000000168e-05, 8.080599999999924e-05, 8.36110000000008e-05, 8.64860000000002e-05, 8.179200000000067e-05, 8.366699999999908e-05, 8.358300000000166e-05, 8.083300000000238e-05, 8.550000000000224e-05, 8.370799999999831e-05, 7.98329999999979e-05, 8.654099999999901e-05, 8.073600000000139e-05, 8.269500000000068e-05, 8.558300000000019e-05, 8.468099999999965e-05, 8.174999999999849e-05, 8.367999999999917e-05, 8.266700000000154e-05, 8.462500000000137e-05, 8.651399999999934e-05, 8.175000000000196e-05]</msg>
<status status="PASS" starttime="20201115 23:01:55.142" endtime="20201115 23:01:55.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.138" endtime="20201115 23:01:55.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.147" endtime="20201115 23:01:55.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.150" endtime="20201115 23:01:55.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.149" endtime="20201115 23:01:55.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.145" endtime="20201115 23:01:55.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.778" endtime="20201115 23:01:55.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.776" endtime="20201115 23:01:55.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.775" endtime="20201115 23:01:55.172"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.174" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.182" endtime="20201115 23:01:55.201"></status>
</kw>
<msg timestamp="20201115 23:01:55.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.181" endtime="20201115 23:01:55.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.203" endtime="20201115 23:01:55.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.205" endtime="20201115 23:01:55.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.178" endtime="20201115 23:01:55.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.176" endtime="20201115 23:01:55.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.214" endtime="20201115 23:01:55.499"></status>
</kw>
<msg timestamp="20201115 23:01:55.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.213" endtime="20201115 23:01:55.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.503" endtime="20201115 23:01:55.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.512" endtime="20201115 23:01:55.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.210" endtime="20201115 23:01:55.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.209" endtime="20201115 23:01:55.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:55.519" level="INFO">${RESULT} = [{'time': 0.022714222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.269399999999774e-05, 'source_diff': 8.269399999999774e-05}, {'time': 0.02280625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:55.515" endtime="20201115 23:01:55.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:55.532" level="INFO">${ACCURACY} = {'time': [0.022714222, 0.02280625, 0.0228975, 0.022989083, 0.023080333, 0.023172264, 0.023263667, 0.023355611, 0.023446847, 0.023538111, 0.023630222, 0.023720944, 0.023812903, 0.023904111, 0.023995833...</msg>
<status status="PASS" starttime="20201115 23:01:55.520" endtime="20201115 23:01:55.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.537" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:01:55.536" endtime="20201115 23:01:55.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.539" level="INFO">VALUE: [8.269399999999774e-05, 8.173599999999892e-05, 8.36529999999995e-05, 8.46110000000018e-05, 8.562500000000237e-05, 8.655600000000152e-05, 8.174999999999849e-05, 8.654199999999848e-05, 8.262499999999937e-05, 8.273599999999992e-05, 8.661100000000033e-05, 8.069399999999921e-05, 8.657000000000109e-05, 8.081899999999934e-05, 8.277700000000263e-05, 8.559699999999976e-05, 8.172199999999935e-05, 8.465199999999756e-05, 8.465200000000103e-05, 8.273599999999992e-05, 8.082000000000228e-05, 8.173599999999892e-05, 8.25979999999997e-05, 8.555600000000052e-05, 8.655500000000205e-05, 8.079199999999967e-05, 8.559799999999923e-05, 8.46110000000018e-05, 8.462500000000137e-05, 8.36659999999996e-05, 8.365300000000297e-05, 8.076400000000053e-05, 8.26109999999998e-05, 8.559699999999976e-05, 8.461099999999833e-05, 8.367999999999917e-05, 8.273599999999992e-05, 8.559699999999976e-05, 8.655600000000152e-05, 8.076400000000053e-05, 8.272200000000035e-05, 8.175000000000196e-05, 8.176400000000153e-05, 8.455599999999952e-05, 8.265300000000197e-05, 8.369499999999822e-05, 8.366700000000254e-05, 8.747200000000163e-05, 8.649999999999977e-05, 8.273599999999992e-05]</msg>
<status status="PASS" starttime="20201115 23:01:55.538" endtime="20201115 23:01:55.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.533" endtime="20201115 23:01:55.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.542" endtime="20201115 23:01:55.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.546" endtime="20201115 23:01:55.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.544" endtime="20201115 23:01:55.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.541" endtime="20201115 23:01:55.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.174" endtime="20201115 23:01:55.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.173" endtime="20201115 23:01:55.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.172" endtime="20201115 23:01:55.567"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.569" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.577" endtime="20201115 23:01:55.598"></status>
</kw>
<msg timestamp="20201115 23:01:55.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.576" endtime="20201115 23:01:55.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.599" endtime="20201115 23:01:55.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.602" endtime="20201115 23:01:55.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.573" endtime="20201115 23:01:55.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.571" endtime="20201115 23:01:55.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.611" endtime="20201115 23:01:55.897"></status>
</kw>
<msg timestamp="20201115 23:01:55.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024153625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024245903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.609" endtime="20201115 23:01:55.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024153625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024245903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.901" endtime="20201115 23:01:55.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.910" endtime="20201115 23:01:55.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.607" endtime="20201115 23:01:55.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.605" endtime="20201115 23:01:55.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:55.916" level="INFO">${RESULT} = [{'time': 0.024245903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.227799999999772e-05, 'source_diff': 9.227799999999772e-05}, {'time': 0.024337833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:55.913" endtime="20201115 23:01:55.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:55.930" level="INFO">${ACCURACY} = {'time': [0.024245903, 0.024337833, 0.024428778, 0.024521111, 0.024612736, 0.024704306, 0.024795542, 0.024887389, 0.024978292, 0.025069917, 0.025161222, 0.025253153, 0.025344917, 0.025435917, 0.025527...</msg>
<status status="PASS" starttime="20201115 23:01:55.917" endtime="20201115 23:01:55.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.934" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:01:55.933" endtime="20201115 23:01:55.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.937" level="INFO">VALUE: [9.227799999999772e-05, 8.465200000000103e-05, 7.982000000000128e-05, 8.463900000000094e-05, 8.269400000000121e-05, 8.074999999999749e-05, 8.64730000000001e-05, 8.655599999999805e-05, 8.083399999999838e-05, 8.176400000000153e-05, 8.46660000000006e-05, 8.162500000000183e-05, 8.272299999999982e-05, 8.559799999999923e-05, 8.552800000000138e-05, 8.268000000000164e-05, 8.369399999999874e-05, 8.547199999999963e-05, 8.559799999999923e-05, 8.363899999999994e-05, 8.08190000000028e-05, 8.26390000000024e-05, 8.272200000000035e-05, 8.359700000000123e-05, 8.272200000000035e-05, 7.988900000000312e-05, 8.568100000000065e-05, 8.655499999999858e-05, 8.456999999999909e-05, 8.64860000000002e-05, 8.465200000000103e-05, 8.558399999999966e-05, 8.36249999999969e-05, 8.079199999999967e-05, 8.456900000000309e-05, 8.654199999999848e-05, 8.657000000000109e-05, 8.174999999999849e-05, 8.36659999999996e-05, 8.174999999999849e-05, 8.645799999999759e-05, 8.558399999999966e-05, 8.461200000000127e-05, 8.451300000000134e-05, 8.17780000000011e-05, 8.46530000000005e-05, 8.175000000000196e-05, 8.177699999999816e-05, 8.169499999999968e-05, 8.07780000000001e-05]</msg>
<status status="PASS" starttime="20201115 23:01:55.935" endtime="20201115 23:01:55.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.931" endtime="20201115 23:01:55.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.940" endtime="20201115 23:01:55.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.943" endtime="20201115 23:01:55.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.942" endtime="20201115 23:01:55.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.938" endtime="20201115 23:01:55.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.570" endtime="20201115 23:01:55.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.568" endtime="20201115 23:01:55.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.567" endtime="20201115 23:01:55.964"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.967" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.975" endtime="20201115 23:01:55.996"></status>
</kw>
<msg timestamp="20201115 23:01:55.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.973" endtime="20201115 23:01:55.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.997" endtime="20201115 23:01:56.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.000" endtime="20201115 23:01:56.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.971" endtime="20201115 23:01:56.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.969" endtime="20201115 23:01:56.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.009" endtime="20201115 23:01:56.295"></status>
</kw>
<msg timestamp="20201115 23:01:56.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023731611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023824722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.008" endtime="20201115 23:01:56.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023731611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023824722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.299" endtime="20201115 23:01:56.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.307" endtime="20201115 23:01:56.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.005" endtime="20201115 23:01:56.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.004" endtime="20201115 23:01:56.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.314" level="INFO">${RESULT} = [{'time': 0.023824722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.311099999999989e-05, 'source_diff': 9.311099999999989e-05}, {'time': 0.023915861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:56.311" endtime="20201115 23:01:56.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:56.328" level="INFO">${ACCURACY} = {'time': [0.023824722, 0.023915861, 0.024007528, 0.024099667, 0.024191042, 0.02428225, 0.024373764, 0.024465319, 0.024557431, 0.024648458, 0.024739708, 0.024831833, 0.024923097, 0.025015153, 0.0251060...</msg>
<status status="PASS" starttime="20201115 23:01:56.315" endtime="20201115 23:01:56.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.333" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:01:56.332" endtime="20201115 23:01:56.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.335" level="INFO">VALUE: [9.311099999999989e-05, 8.179200000000067e-05, 8.273599999999992e-05, 8.74730000000011e-05, 8.35980000000007e-05, 8.559699999999976e-05, 8.555600000000052e-05, 8.270800000000078e-05, 8.276400000000253e-05, 8.554100000000148e-05, 8.64860000000002e-05, 8.556900000000062e-05, 8.273600000000339e-05, 8.654199999999848e-05, 8.549999999999877e-05, 8.172199999999935e-05, 8.269499999999722e-05, 8.552800000000138e-05, 8.173599999999892e-05, 8.366699999999908e-05, 8.176399999999806e-05, 8.177799999999763e-05, 8.36529999999995e-05, 8.25979999999997e-05, 8.563899999999847e-05, 8.36529999999995e-05, 8.26390000000024e-05, 8.363799999999699e-05, 8.461099999999833e-05, 8.079199999999967e-05, 8.449999999999777e-05, 8.556900000000062e-05, 8.557000000000009e-05, 8.656899999999815e-05, 8.081899999999934e-05, 8.651399999999934e-05, 8.17780000000011e-05, 8.175000000000196e-05, 8.084800000000142e-05, 8.649999999999977e-05, 8.555500000000105e-05, 8.267999999999817e-05, 8.556900000000062e-05, 8.654199999999848e-05, 8.463899999999747e-05, 8.44309999999994e-05, 8.176399999999806e-05, 8.368099999999865e-05, 8.641699999999836e-05, 8.368099999999865e-05]</msg>
<status status="PASS" starttime="20201115 23:01:56.334" endtime="20201115 23:01:56.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.329" endtime="20201115 23:01:56.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.339" endtime="20201115 23:01:56.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:56.342" endtime="20201115 23:01:56.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.340" endtime="20201115 23:01:56.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.337" endtime="20201115 23:01:56.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.967" endtime="20201115 23:01:56.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.965" endtime="20201115 23:01:56.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.965" endtime="20201115 23:01:56.363"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.365" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.374" endtime="20201115 23:01:56.397"></status>
</kw>
<msg timestamp="20201115 23:01:56.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.373" endtime="20201115 23:01:56.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.399" endtime="20201115 23:01:56.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.402" endtime="20201115 23:01:56.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.370" endtime="20201115 23:01:56.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.367" endtime="20201115 23:01:56.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.412" endtime="20201115 23:01:56.697"></status>
</kw>
<msg timestamp="20201115 23:01:56.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026857556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026943111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.410" endtime="20201115 23:01:56.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026857556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026943111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.701" endtime="20201115 23:01:56.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.709" endtime="20201115 23:01:56.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.407" endtime="20201115 23:01:56.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.405" endtime="20201115 23:01:56.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.716" level="INFO">${RESULT} = [{'time': 0.026943111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555499999999758e-05, 'source_diff': 8.555499999999758e-05}, {'time': 0.027034278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:56.712" endtime="20201115 23:01:56.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:56.729" level="INFO">${ACCURACY} = {'time': [0.026943111, 0.027034278, 0.027125625, 0.027217972, 0.027308639, 0.027400333, 0.027492639, 0.027583958, 0.027675431, 0.027767292, 0.02785825, 0.027949653, 0.028041292, 0.028132931, 0.0282244...</msg>
<status status="PASS" starttime="20201115 23:01:56.717" endtime="20201115 23:01:56.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.734" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:01:56.733" endtime="20201115 23:01:56.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.736" level="INFO">VALUE: [8.555499999999758e-05, 8.651399999999934e-05, 8.172199999999935e-05, 8.173599999999892e-05, 8.18329999999999e-05, 8.552699999999844e-05, 8.459699999999876e-05, 8.652699999999944e-05, 8.549999999999877e-05, 8.362500000000037e-05, 8.368100000000211e-05, 8.287500000000309e-05, 8.070899999999825e-05, 8.363899999999994e-05, 8.068099999999911e-05, 8.358300000000166e-05, 8.080599999999924e-05, 8.176299999999859e-05, 8.366699999999908e-05, 8.665299999999904e-05, 8.176400000000153e-05, 8.558399999999966e-05, 8.272200000000035e-05, 8.561099999999933e-05, 8.27919999999982e-05, 8.559799999999923e-05, 8.173600000000239e-05, 8.266699999999808e-05, 8.558300000000019e-05, 8.188900000000165e-05, 8.176400000000153e-05, 8.554100000000148e-05, 8.370799999999831e-05, 8.077700000000063e-05, 8.175000000000196e-05, 8.459699999999876e-05, 8.362500000000037e-05, 8.172200000000282e-05, 8.376400000000006e-05, 8.561099999999933e-05, 8.463900000000094e-05, 8.655499999999858e-05, 8.654100000000248e-05, 8.169400000000021e-05, 8.36659999999996e-05, 8.376400000000006e-05, 8.175000000000196e-05, 8.37780000000031e-05, 8.174999999999849e-05, 8.368100000000211e-05]</msg>
<status status="PASS" starttime="20201115 23:01:56.735" endtime="20201115 23:01:56.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.730" endtime="20201115 23:01:56.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.739" endtime="20201115 23:01:56.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:56.742" endtime="20201115 23:01:56.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.741" endtime="20201115 23:01:56.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.738" endtime="20201115 23:01:56.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.366" endtime="20201115 23:01:56.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.364" endtime="20201115 23:01:56.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.363" endtime="20201115 23:01:56.764"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.766" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.775" endtime="20201115 23:01:56.798"></status>
</kw>
<msg timestamp="20201115 23:01:56.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.773" endtime="20201115 23:01:56.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.799" endtime="20201115 23:01:56.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.802" endtime="20201115 23:01:56.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.771" endtime="20201115 23:01:56.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.769" endtime="20201115 23:01:56.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.811" endtime="20201115 23:01:57.096"></status>
</kw>
<msg timestamp="20201115 23:01:57.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023161597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02325575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:56.809" endtime="20201115 23:01:57.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023161597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02325575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:57.101" endtime="20201115 23:01:57.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.109" endtime="20201115 23:01:57.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.807" endtime="20201115 23:01:57.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.805" endtime="20201115 23:01:57.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:57.116" level="INFO">${RESULT} = [{'time': 0.02325575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.41529999999996e-05, 'source_diff': 9.41529999999996e-05}, {'time': 0.023347236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:57.112" endtime="20201115 23:01:57.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.129" level="INFO">${ACCURACY} = {'time': [0.02325575, 0.023347236, 0.023438417, 0.023530681, 0.023621764, 0.023713153, 0.023805333, 0.023896042, 0.023987708, 0.024079944, 0.024171514, 0.024262444, 0.024353875, 0.024445681, 0.0245370...</msg>
<status status="PASS" starttime="20201115 23:01:57.116" endtime="20201115 23:01:57.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.133" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.132" endtime="20201115 23:01:57.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.136" level="INFO">VALUE: [9.41529999999996e-05, 8.181900000000034e-05, 8.368099999999865e-05, 8.552800000000138e-05, 8.461099999999833e-05, 8.651399999999934e-05, 8.376400000000006e-05, 8.36529999999995e-05, 8.655499999999858e-05, 8.369399999999874e-05, 8.459700000000223e-05, 8.36110000000008e-05, 8.362500000000037e-05, 8.47370000000014e-05, 8.556900000000062e-05, 8.651400000000281e-05, 8.280500000000177e-05, 8.363899999999994e-05, 8.74730000000011e-05, 8.173599999999892e-05, 8.376400000000006e-05, 8.080599999999924e-05, 8.64860000000002e-05, 8.459700000000223e-05, 8.180500000000077e-05, 8.463899999999747e-05, 8.274999999999949e-05, 8.46530000000005e-05, 8.36110000000008e-05, 8.180600000000024e-05, 8.559799999999923e-05, 8.554199999999748e-05, 8.369400000000221e-05, 8.270900000000025e-05, 8.362500000000037e-05, 8.376400000000006e-05, 8.170899999999925e-05, 8.554100000000148e-05, 8.277799999999863e-05, 7.97779999999991e-05, 8.36529999999995e-05, 8.281899999999787e-05, 8.36110000000008e-05, 8.365200000000003e-05, 8.17230000000023e-05, 8.170799999999978e-05, 8.373600000000092e-05, 8.26529999999985e-05, 8.370800000000178e-05, 8.556899999999715e-05]</msg>
<status status="PASS" starttime="20201115 23:01:57.135" endtime="20201115 23:01:57.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.130" endtime="20201115 23:01:57.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.139" endtime="20201115 23:01:57.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.143" endtime="20201115 23:01:57.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.141" endtime="20201115 23:01:57.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.138" endtime="20201115 23:01:57.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.767" endtime="20201115 23:01:57.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.765" endtime="20201115 23:01:57.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.764" endtime="20201115 23:01:57.164"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.166" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.174" endtime="20201115 23:01:57.196"></status>
</kw>
<msg timestamp="20201115 23:01:57.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.173" endtime="20201115 23:01:57.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.197" endtime="20201115 23:01:57.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.200" endtime="20201115 23:01:57.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.170" endtime="20201115 23:01:57.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.168" endtime="20201115 23:01:57.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.209" endtime="20201115 23:01:57.495"></status>
</kw>
<msg timestamp="20201115 23:01:57.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024746292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024817514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.207" endtime="20201115 23:01:57.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024746292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024817514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.500" endtime="20201115 23:01:57.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.508" endtime="20201115 23:01:57.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.205" endtime="20201115 23:01:57.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.203" endtime="20201115 23:01:57.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:57.514" level="INFO">${RESULT} = [{'time': 0.024817514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.122199999999926e-05, 'source_diff': 7.122199999999926e-05}, {'time': 0.024908764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:57.511" endtime="20201115 23:01:57.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.528" level="INFO">${ACCURACY} = {'time': [0.024817514, 0.024908764, 0.025000611, 0.025092014, 0.025183542, 0.025275222, 0.025366764, 0.025458389, 0.025549542, 0.025641403, 0.025732458, 0.025824375, 0.025915375, 0.026006931, 0.026098...</msg>
<status status="PASS" starttime="20201115 23:01:57.515" endtime="20201115 23:01:57.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.532" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.531" endtime="20201115 23:01:57.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.535" level="INFO">VALUE: [7.122199999999926e-05, 8.086100000000151e-05, 8.284700000000048e-05, 8.558300000000019e-05, 8.655599999999805e-05, 8.076400000000053e-05, 8.186099999999905e-05, 8.362500000000037e-05, 8.366700000000254e-05, 8.282000000000081e-05, 8.273599999999992e-05, 8.079199999999967e-05, 8.081899999999934e-05, 8.272299999999982e-05, 8.08329999999989e-05, 8.090300000000022e-05, 8.276400000000253e-05, 8.27780000000021e-05, 8.274999999999949e-05, 8.370799999999831e-05, 8.180500000000077e-05, 8.372199999999788e-05, 8.375000000000049e-05, 8.079199999999967e-05, 8.36529999999995e-05, 8.558300000000019e-05, 8.556900000000062e-05, 8.170799999999978e-05, 8.366699999999908e-05, 8.659700000000076e-05, 8.177799999999763e-05, 8.747200000000163e-05, 8.559699999999976e-05, 8.366699999999908e-05, 8.475000000000149e-05, 8.274999999999949e-05, 8.269499999999722e-05, 8.36529999999995e-05, 8.365300000000297e-05, 8.654200000000195e-05, 8.663899999999947e-05, 8.558300000000019e-05, 8.556900000000062e-05, 8.476300000000159e-05, 8.073700000000086e-05, 8.279200000000167e-05, 8.462500000000137e-05, 8.570800000000031e-05, 8.654199999999848e-05, 8.367999999999917e-05]</msg>
<status status="PASS" starttime="20201115 23:01:57.533" endtime="20201115 23:01:57.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.529" endtime="20201115 23:01:57.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.539" endtime="20201115 23:01:57.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.542" endtime="20201115 23:01:57.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.540" endtime="20201115 23:01:57.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.537" endtime="20201115 23:01:57.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.167" endtime="20201115 23:01:57.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.165" endtime="20201115 23:01:57.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.164" endtime="20201115 23:01:57.563"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.565" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.574" endtime="20201115 23:01:57.599"></status>
</kw>
<msg timestamp="20201115 23:01:57.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.572" endtime="20201115 23:01:57.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.600" endtime="20201115 23:01:57.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.603" endtime="20201115 23:01:57.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.570" endtime="20201115 23:01:57.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.567" endtime="20201115 23:01:57.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.612" endtime="20201115 23:01:57.897"></status>
</kw>
<msg timestamp="20201115 23:01:57.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027623778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027691083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.610" endtime="20201115 23:01:57.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027623778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027691083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.901" endtime="20201115 23:01:57.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.909" endtime="20201115 23:01:57.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.608" endtime="20201115 23:01:57.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.606" endtime="20201115 23:01:57.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:57.921" level="INFO">${RESULT} = [{'time': 0.027691083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.730499999999667e-05, 'source_diff': 6.730499999999667e-05}, {'time': 0.027782653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:57.913" endtime="20201115 23:01:57.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.936" level="INFO">${ACCURACY} = {'time': [0.027691083, 0.027782653, 0.027874486, 0.027965486, 0.028057486, 0.028148528, 0.028240083, 0.0283315, 0.028423153, 0.028514833, 0.028606653, 0.028698069, 0.028789181, 0.028880833, 0.02897313...</msg>
<status status="PASS" starttime="20201115 23:01:57.922" endtime="20201115 23:01:57.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.940" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.939" endtime="20201115 23:01:57.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.943" level="INFO">VALUE: [6.730499999999667e-05, 8.179200000000067e-05, 8.366699999999908e-05, 8.548600000000267e-05, 8.173599999999892e-05, 8.366699999999908e-05, 8.355499999999905e-05, 8.174999999999849e-05, 8.084699999999848e-05, 8.07910000000002e-05, 8.558399999999966e-05, 8.170799999999978e-05, 8.269500000000068e-05, 8.643000000000192e-05, 8.555599999999705e-05, 8.075000000000096e-05, 8.459699999999876e-05, 8.645900000000054e-05, 8.176299999999859e-05, 8.740299999999979e-05, 8.174999999999849e-05, 8.556900000000062e-05, 8.459699999999876e-05, 8.368099999999865e-05, 8.162499999999837e-05, 8.654200000000195e-05, 8.556900000000062e-05, 8.081899999999934e-05, 8.368099999999865e-05, 8.54859999999992e-05, 8.272200000000035e-05, 8.465200000000103e-05, 8.552800000000138e-05, 8.644400000000149e-05, 8.17780000000011e-05, 7.98329999999979e-05, 8.559699999999976e-05, 8.655600000000152e-05, 8.64310000000014e-05, 8.176399999999806e-05, 8.362500000000384e-05, 8.556900000000062e-05, 8.273599999999992e-05, 8.35970000000047e-05, 8.465300000000398e-05, 8.465199999999756e-05, 8.069500000000562e-05, 8.075000000000443e-05, 8.463899999999747e-05, 8.269400000000121e-05]</msg>
<status status="PASS" starttime="20201115 23:01:57.941" endtime="20201115 23:01:57.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.937" endtime="20201115 23:01:57.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.946" endtime="20201115 23:01:57.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.949" endtime="20201115 23:01:57.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.948" endtime="20201115 23:01:57.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.944" endtime="20201115 23:01:57.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.566" endtime="20201115 23:01:57.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.564" endtime="20201115 23:01:57.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.563" endtime="20201115 23:01:57.971"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.973" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.981" endtime="20201115 23:01:58.010"></status>
</kw>
<msg timestamp="20201115 23:01:58.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.979" endtime="20201115 23:01:58.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.012" endtime="20201115 23:01:58.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.014" endtime="20201115 23:01:58.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.977" endtime="20201115 23:01:58.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.975" endtime="20201115 23:01:58.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.023" endtime="20201115 23:01:58.309"></status>
</kw>
<msg timestamp="20201115 23:01:58.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027183472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027268083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.022" endtime="20201115 23:01:58.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027183472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027268083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.313" endtime="20201115 23:01:58.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.326" endtime="20201115 23:01:58.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.019" endtime="20201115 23:01:58.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.017" endtime="20201115 23:01:58.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.332" level="INFO">${RESULT} = [{'time': 0.027268083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.461099999999833e-05, 'source_diff': 8.461099999999833e-05}, {'time': 0.027359972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:58.329" endtime="20201115 23:01:58.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:58.346" level="INFO">${ACCURACY} = {'time': [0.027268083, 0.027359972, 0.027450875, 0.027542597, 0.027633917, 0.027725736, 0.027817347, 0.027909361, 0.028000292, 0.028091694, 0.028183347, 0.028275458, 0.028366514, 0.028457847, 0.028550...</msg>
<status status="PASS" starttime="20201115 23:01:58.333" endtime="20201115 23:01:58.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.350" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:01:58.349" endtime="20201115 23:01:58.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.353" level="INFO">VALUE: [8.461099999999833e-05, 8.076400000000053e-05, 8.27919999999982e-05, 8.554099999999801e-05, 8.550000000000224e-05, 8.649999999999977e-05, 8.07910000000002e-05, 8.649999999999977e-05, 8.170899999999925e-05, 8.270800000000078e-05, 8.359700000000123e-05, 8.742999999999945e-05, 8.461099999999833e-05, 8.556900000000062e-05, 8.74449999999985e-05, 8.366699999999908e-05, 8.177799999999763e-05, 8.64860000000002e-05, 8.073599999999792e-05, 8.272299999999982e-05, 8.176400000000153e-05, 8.355599999999852e-05, 8.46110000000018e-05, 8.551399999999834e-05, 8.26529999999985e-05, 8.273599999999992e-05, 8.175000000000196e-05, 8.352799999999938e-05, 8.270800000000078e-05, 8.642999999999845e-05, 8.079199999999967e-05, 8.641700000000183e-05, 8.558300000000019e-05, 8.651399999999934e-05, 8.463900000000094e-05, 8.551399999999834e-05, 8.172199999999935e-05, 8.461099999999833e-05, 8.350000000000024e-05, 8.173600000000239e-05, 8.654099999999901e-05, 8.16390000000014e-05, 8.461099999999833e-05, 8.641600000000235e-05, 8.461099999999833e-05, 8.64999999999963e-05, 8.654199999999501e-05, 8.541699999999736e-05, 8.177799999999763e-05, 8.168000000000064e-05]</msg>
<status status="PASS" starttime="20201115 23:01:58.351" endtime="20201115 23:01:58.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.347" endtime="20201115 23:01:58.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.356" endtime="20201115 23:01:58.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.359" endtime="20201115 23:01:58.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.358" endtime="20201115 23:01:58.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.354" endtime="20201115 23:01:58.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.973" endtime="20201115 23:01:58.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.972" endtime="20201115 23:01:58.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.971" endtime="20201115 23:01:58.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.471" endtime="20201115 23:01:58.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.385" endtime="20201115 23:01:58.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.384" endtime="20201115 23:01:58.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.382" endtime="20201115 23:01:58.405"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:18.395" endtime="20201115 23:01:58.406" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.413" endtime="20201115 23:01:58.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.412" endtime="20201115 23:01:58.434"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.449" endtime="20201115 23:01:58.467"></status>
</kw>
<msg timestamp="20201115 23:01:58.468" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.447" endtime="20201115 23:01:58.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.471" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.469" endtime="20201115 23:01:58.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.474" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:58.472" endtime="20201115 23:01:58.474"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:58.444" endtime="20201115 23:01:58.475"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:58.442" endtime="20201115 23:01:58.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.440" endtime="20201115 23:01:58.475"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:58.479" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:58.479" endtime="20201115 23:01:58.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.476" endtime="20201115 23:01:58.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.439" endtime="20201115 23:01:58.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.438" endtime="20201115 23:01:58.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.481" endtime="20201115 23:01:58.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.436" endtime="20201115 23:01:58.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.434" endtime="20201115 23:01:58.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.411" endtime="20201115 23:01:58.484"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.487" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.496" endtime="20201115 23:01:58.513"></status>
</kw>
<msg timestamp="20201115 23:01:58.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.494" endtime="20201115 23:01:58.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.514" endtime="20201115 23:01:58.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.517" endtime="20201115 23:01:58.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.491" endtime="20201115 23:01:58.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.489" endtime="20201115 23:01:58.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.527" endtime="20201115 23:01:58.813"></status>
</kw>
<msg timestamp="20201115 23:01:58.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075534139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075542917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.525" endtime="20201115 23:01:58.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075534139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075542917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.818" endtime="20201115 23:01:58.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.828" endtime="20201115 23:01:58.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.522" endtime="20201115 23:01:58.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.520" endtime="20201115 23:01:58.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.836" level="INFO">${RESULT} = [{'time': 0.075542917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.075559542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:58.832" endtime="20201115 23:01:58.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:58.849" level="INFO">${ACCURACY} = {'time': [0.075542917, 0.075559542, 0.075577833, 0.075592069, 0.075611069, 0.075629278, 0.075644903, 0.075661028, 0.075674556, 0.075689194, 0.075703806, 0.075721708, 0.075739236, 0.075755667, 0.075770...</msg>
<status status="PASS" starttime="20201115 23:01:58.837" endtime="20201115 23:01:58.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.854" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:01:58.853" endtime="20201115 23:01:58.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.856" level="INFO">VALUE: [8.778000000000952e-06, 8.763999999994443e-06, 8.750000000001812e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.778000000000952e-06, 8.791999999993583e-06, 8.76400000000832e-06, 8.778000000000952e-06, 8.76299999999497e-06, 8.750000000001812e-06, 8.790999999994109e-06, 8.750000000001812e-06, 8.723000000002146e-06, 8.735999999995303e-06, 8.763000000008847e-06, 8.778000000000952e-06, 8.749999999987934e-06, 8.750000000001812e-06, 8.805000000000618e-06, 8.777000000001478e-06, 8.763000000008847e-06, 8.750000000001812e-06, 8.76299999999497e-06, 8.790999999994109e-06, 8.8200000000066e-06, 8.791999999993583e-06, 8.763999999994443e-06, 8.736000000009181e-06, 8.750000000001812e-06, 8.76400000000832e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.679999999997023e-06, 8.763999999994443e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.735999999995303e-06, 8.7769999999876e-06, 8.750000000001812e-06, 8.791000000007987e-06, 8.790999999994109e-06, 8.693999999989654e-06, 8.679999999997023e-06, 8.722000000002672e-06, 8.805000000000618e-06, 8.790999999994109e-06, 8.707999999996163e-06]</msg>
<status status="PASS" starttime="20201115 23:01:58.855" endtime="20201115 23:01:58.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.850" endtime="20201115 23:01:58.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.859" endtime="20201115 23:01:58.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.863" endtime="20201115 23:01:58.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.861" endtime="20201115 23:01:58.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.858" endtime="20201115 23:01:58.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.488" endtime="20201115 23:01:58.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.486" endtime="20201115 23:01:58.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.485" endtime="20201115 23:01:58.884"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.886" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.895" endtime="20201115 23:01:58.914"></status>
</kw>
<msg timestamp="20201115 23:01:58.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.893" endtime="20201115 23:01:58.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.916" endtime="20201115 23:01:58.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.919" endtime="20201115 23:01:58.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.891" endtime="20201115 23:01:58.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.888" endtime="20201115 23:01:58.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.929" endtime="20201115 23:01:59.216"></status>
</kw>
<msg timestamp="20201115 23:01:59.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023066444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023075194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.927" endtime="20201115 23:01:59.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023066444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023075194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.221" endtime="20201115 23:01:59.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.229" endtime="20201115 23:01:59.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.924" endtime="20201115 23:01:59.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.922" endtime="20201115 23:01:59.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:59.236" level="INFO">${RESULT} = [{'time': 0.023075194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.023091278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:59.232" endtime="20201115 23:01:59.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:59.249" level="INFO">${ACCURACY} = {'time': [0.023075194, 0.023091278, 0.023109681, 0.02312275, 0.023140861, 0.023153833, 0.023168806, 0.023181764, 0.023195986, 0.023209069, 0.023222069, 0.023235014, 0.023251944, 0.023266931, 0.0232803...</msg>
<status status="PASS" starttime="20201115 23:01:59.237" endtime="20201115 23:01:59.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.253" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:01:59.252" endtime="20201115 23:01:59.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.256" level="INFO">VALUE: [8.750000000001812e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.791999999997052e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.762999999998439e-06, 8.777000000001478e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.694999999999536e-06, 8.819000000000188e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.763000000001908e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.749999999998342e-06, 8.749999999998342e-06]</msg>
<status status="PASS" starttime="20201115 23:01:59.255" endtime="20201115 23:01:59.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.250" endtime="20201115 23:01:59.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.259" endtime="20201115 23:01:59.260"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:59.263" endtime="20201115 23:01:59.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.261" endtime="20201115 23:01:59.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.257" endtime="20201115 23:01:59.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.887" endtime="20201115 23:01:59.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.885" endtime="20201115 23:01:59.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.884" endtime="20201115 23:01:59.284"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.286" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.295" endtime="20201115 23:01:59.312"></status>
</kw>
<msg timestamp="20201115 23:01:59.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.293" endtime="20201115 23:01:59.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.314" endtime="20201115 23:01:59.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.317" endtime="20201115 23:01:59.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.290" endtime="20201115 23:01:59.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.288" endtime="20201115 23:01:59.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.327" endtime="20201115 23:01:59.613"></status>
</kw>
<msg timestamp="20201115 23:01:59.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024966986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024975736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.325" endtime="20201115 23:01:59.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024966986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024975736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.618" endtime="20201115 23:01:59.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.626" endtime="20201115 23:01:59.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.322" endtime="20201115 23:01:59.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.320" endtime="20201115 23:01:59.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:59.633" level="INFO">${RESULT} = [{'time': 0.024975736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999998342e-06, 'source_diff': 8.749999999998342e-06}, {'time': 0.024990736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:59.629" endtime="20201115 23:01:59.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:59.650" level="INFO">${ACCURACY} = {'time': [0.024975736, 0.024990736, 0.025007542, 0.025023431, 0.025042653, 0.025059986, 0.025079097, 0.025096708, 0.025111667, 0.025130917, 0.025147708, 0.025165972, 0.025185153, 0.025197875, 0.025217...</msg>
<status status="PASS" starttime="20201115 23:01:59.635" endtime="20201115 23:01:59.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.655" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:01:59.654" endtime="20201115 23:01:59.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.657" level="INFO">VALUE: [8.749999999998342e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.736999999998246e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.790999999997579e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.749999999998342e-06, 8.806000000000092e-06, 8.735999999998773e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.791999999997052e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.721999999999203e-06, 8.806000000000092e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.805000000000618e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.763999999997912e-06, 8.762999999998439e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.805999999996622e-06, 8.791000000001048e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201115 23:01:59.656" endtime="20201115 23:01:59.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.651" endtime="20201115 23:01:59.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.661" endtime="20201115 23:01:59.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:59.664" endtime="20201115 23:01:59.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.663" endtime="20201115 23:01:59.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.659" endtime="20201115 23:01:59.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.287" endtime="20201115 23:01:59.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.285" endtime="20201115 23:01:59.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.284" endtime="20201115 23:01:59.685"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.688" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.697" endtime="20201115 23:01:59.714"></status>
</kw>
<msg timestamp="20201115 23:01:59.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.695" endtime="20201115 23:01:59.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.716" endtime="20201115 23:01:59.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.718" endtime="20201115 23:01:59.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.692" endtime="20201115 23:01:59.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.690" endtime="20201115 23:01:59.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.728" endtime="20201115 23:02:00.039"></status>
</kw>
<msg timestamp="20201115 23:02:00.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025516778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025525556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.726" endtime="20201115 23:02:00.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025516778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025525556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.049" endtime="20201115 23:02:00.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.058" endtime="20201115 23:02:00.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.724" endtime="20201115 23:02:00.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.722" endtime="20201115 23:02:00.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.065" level="INFO">${RESULT} = [{'time': 0.025525556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.025539472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:00.061" endtime="20201115 23:02:00.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.079" level="INFO">${ACCURACY} = {'time': [0.025525556, 0.025539472, 0.025556125, 0.025570111, 0.025582972, 0.025598, 0.025612417, 0.025628, 0.025640931, 0.025653903, 0.025670958, 0.025684681, 0.025700472, 0.025716764, 0.025733278, 0...</msg>
<status status="PASS" starttime="20201115 23:02:00.066" endtime="20201115 23:02:00.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.083" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.082" endtime="20201115 23:02:00.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.086" level="INFO">VALUE: [8.778000000000952e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.667000000000397e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.763000000001908e-06, 8.792000000000522e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.749999999998342e-06, 8.708999999999106e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.777999999997482e-06]</msg>
<status status="PASS" starttime="20201115 23:02:00.084" endtime="20201115 23:02:00.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.079" endtime="20201115 23:02:00.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.089" endtime="20201115 23:02:00.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.093" endtime="20201115 23:02:00.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.091" endtime="20201115 23:02:00.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.087" endtime="20201115 23:02:00.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.689" endtime="20201115 23:02:00.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.687" endtime="20201115 23:02:00.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.686" endtime="20201115 23:02:00.114"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.117" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.126" endtime="20201115 23:02:00.142"></status>
</kw>
<msg timestamp="20201115 23:02:00.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.124" endtime="20201115 23:02:00.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.144" endtime="20201115 23:02:00.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.147" endtime="20201115 23:02:00.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.121" endtime="20201115 23:02:00.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.119" endtime="20201115 23:02:00.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.156" endtime="20201115 23:02:00.445"></status>
</kw>
<msg timestamp="20201115 23:02:00.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023961375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023970083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.155" endtime="20201115 23:02:00.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023961375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023970083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.449" endtime="20201115 23:02:00.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.459" endtime="20201115 23:02:00.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.152" endtime="20201115 23:02:00.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.150" endtime="20201115 23:02:00.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.472" level="INFO">${RESULT} = [{'time': 0.023970083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.023984097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:00.468" endtime="20201115 23:02:00.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.486" level="INFO">${ACCURACY} = {'time': [0.023970083, 0.023984097, 0.023997861, 0.024015597, 0.024029625, 0.024042375, 0.024060056, 0.024077306, 0.0240925, 0.024109542, 0.024125972, 0.024140125, 0.024156, 0.024170153, 0.024184569, ...</msg>
<status status="PASS" starttime="20201115 23:02:00.473" endtime="20201115 23:02:00.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.490" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.489" endtime="20201115 23:02:00.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.493" level="INFO">VALUE: [8.707999999999633e-06, 8.749999999998342e-06, 8.804999999997148e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.791999999997052e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.762999999998439e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.776999999998009e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.722999999998676e-06, 8.805000000000618e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.776999999998009e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201115 23:02:00.491" endtime="20201115 23:02:00.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.487" endtime="20201115 23:02:00.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.496" endtime="20201115 23:02:00.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.500" endtime="20201115 23:02:00.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.498" endtime="20201115 23:02:00.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.494" endtime="20201115 23:02:00.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.118" endtime="20201115 23:02:00.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.115" endtime="20201115 23:02:00.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.114" endtime="20201115 23:02:00.521"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.523" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.532" endtime="20201115 23:02:00.548"></status>
</kw>
<msg timestamp="20201115 23:02:00.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.530" endtime="20201115 23:02:00.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.550" endtime="20201115 23:02:00.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.552" endtime="20201115 23:02:00.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.528" endtime="20201115 23:02:00.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.525" endtime="20201115 23:02:00.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.561" endtime="20201115 23:02:00.864"></status>
</kw>
<msg timestamp="20201115 23:02:00.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023871417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023880167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.560" endtime="20201115 23:02:00.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023871417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023880167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.868" endtime="20201115 23:02:00.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.876" endtime="20201115 23:02:00.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.557" endtime="20201115 23:02:00.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.555" endtime="20201115 23:02:00.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.883" level="INFO">${RESULT} = [{'time': 0.023880167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.023894806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:00.879" endtime="20201115 23:02:00.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.896" level="INFO">${ACCURACY} = {'time': [0.023880167, 0.023894806, 0.023913139, 0.023929194, 0.023942069, 0.023956597, 0.023972903, 0.023987958, 0.024002181, 0.024015486, 0.024030889, 0.024045319, 0.024059653, 0.024076806, 0.024093...</msg>
<status status="PASS" starttime="20201115 23:02:00.884" endtime="20201115 23:02:00.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.900" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.899" endtime="20201115 23:02:00.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.903" level="INFO">VALUE: [8.750000000001812e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.791999999997052e-06, 8.776999999998009e-06, 8.832999999999758e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.763000000001908e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.763999999997912e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.819999999999661e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.735999999998773e-06]</msg>
<status status="PASS" starttime="20201115 23:02:00.901" endtime="20201115 23:02:00.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.897" endtime="20201115 23:02:00.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.906" endtime="20201115 23:02:00.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.910" endtime="20201115 23:02:00.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.908" endtime="20201115 23:02:00.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.905" endtime="20201115 23:02:00.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.524" endtime="20201115 23:02:00.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.522" endtime="20201115 23:02:00.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.521" endtime="20201115 23:02:00.931"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.933" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.941" endtime="20201115 23:02:00.960"></status>
</kw>
<msg timestamp="20201115 23:02:00.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.940" endtime="20201115 23:02:00.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.961" endtime="20201115 23:02:00.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.964" endtime="20201115 23:02:00.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.937" endtime="20201115 23:02:00.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.935" endtime="20201115 23:02:00.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.973" endtime="20201115 23:02:01.259"></status>
</kw>
<msg timestamp="20201115 23:02:01.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025957097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025965847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.971" endtime="20201115 23:02:01.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025957097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025965847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.263" endtime="20201115 23:02:01.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.272" endtime="20201115 23:02:01.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.969" endtime="20201115 23:02:01.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.967" endtime="20201115 23:02:01.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:01.279" level="INFO">${RESULT} = [{'time': 0.025965847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.025982708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:01.275" endtime="20201115 23:02:01.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:01.293" level="INFO">${ACCURACY} = {'time': [0.025965847, 0.025982708, 0.025996125, 0.026013556, 0.026026319, 0.026040944, 0.026060153, 0.026076333, 0.026089083, 0.026107069, 0.026123208, 0.026142333, 0.026160764, 0.026178, 0.026192417...</msg>
<status status="PASS" starttime="20201115 23:02:01.280" endtime="20201115 23:02:01.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.298" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:02:01.297" endtime="20201115 23:02:01.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.301" level="INFO">VALUE: [8.750000000001812e-06, 8.777000000001478e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.762999999998439e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.777000000001478e-06, 8.763999999997912e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.694999999999536e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.737000000001716e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.790999999997579e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.820000000003131e-06, 8.750000000001812e-06, 8.777000000001478e-06, 8.8340000000027e-06, 8.762999999998439e-06, 8.778000000000952e-06, 8.762999999998439e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201115 23:02:01.299" endtime="20201115 23:02:01.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.294" endtime="20201115 23:02:01.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.304" endtime="20201115 23:02:01.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:01.308" endtime="20201115 23:02:01.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.306" endtime="20201115 23:02:01.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.302" endtime="20201115 23:02:01.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.934" endtime="20201115 23:02:01.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.932" endtime="20201115 23:02:01.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.931" endtime="20201115 23:02:01.329"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.331" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.339" endtime="20201115 23:02:01.358"></status>
</kw>
<msg timestamp="20201115 23:02:01.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.338" endtime="20201115 23:02:01.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.359" endtime="20201115 23:02:01.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.362" endtime="20201115 23:02:01.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.335" endtime="20201115 23:02:01.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.333" endtime="20201115 23:02:01.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.371" endtime="20201115 23:02:01.676"></status>
</kw>
<msg timestamp="20201115 23:02:01.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024992514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025001264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.369" endtime="20201115 23:02:01.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024992514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025001264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.681" endtime="20201115 23:02:01.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.689" endtime="20201115 23:02:01.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.367" endtime="20201115 23:02:01.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.365" endtime="20201115 23:02:01.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:01.696" level="INFO">${RESULT} = [{'time': 0.025001264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999998342e-06, 'source_diff': 8.749999999998342e-06}, {'time': 0.025018722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:01.692" endtime="20201115 23:02:01.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:01.710" level="INFO">${ACCURACY} = {'time': [0.025001264, 0.025018722, 0.025035889, 0.025053403, 0.025067, 0.025082472, 0.025101097, 0.025116931, 0.025132625, 0.025146764, 0.025160889, 0.02517525, 0.025193417, 0.025212194, 0.025231292,...</msg>
<status status="PASS" starttime="20201115 23:02:01.697" endtime="20201115 23:02:01.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.714" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:02:01.713" endtime="20201115 23:02:01.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.717" level="INFO">VALUE: [8.749999999998342e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.790999999997579e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.762999999998439e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.736999999998246e-06, 8.777000000001478e-06, 8.777999999997482e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.791000000001048e-06, 8.819999999999661e-06, 8.777000000001478e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201115 23:02:01.715" endtime="20201115 23:02:01.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.710" endtime="20201115 23:02:01.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.720" endtime="20201115 23:02:01.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:01.723" endtime="20201115 23:02:01.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.722" endtime="20201115 23:02:01.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.718" endtime="20201115 23:02:01.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.332" endtime="20201115 23:02:01.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.330" endtime="20201115 23:02:01.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.329" endtime="20201115 23:02:01.744"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.747" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.755" endtime="20201115 23:02:01.774"></status>
</kw>
<msg timestamp="20201115 23:02:01.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.753" endtime="20201115 23:02:01.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.775" endtime="20201115 23:02:01.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.778" endtime="20201115 23:02:01.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.751" endtime="20201115 23:02:01.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.749" endtime="20201115 23:02:01.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.787" endtime="20201115 23:02:02.074"></status>
</kw>
<msg timestamp="20201115 23:02:02.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026437236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026445986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.786" endtime="20201115 23:02:02.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026437236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026445986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.078" endtime="20201115 23:02:02.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.087" endtime="20201115 23:02:02.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.783" endtime="20201115 23:02:02.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.781" endtime="20201115 23:02:02.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.094" level="INFO">${RESULT} = [{'time': 0.026445986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.026459292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:02.090" endtime="20201115 23:02:02.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.107" level="INFO">${ACCURACY} = {'time': [0.026445986, 0.026459292, 0.026475917, 0.026491208, 0.026505833, 0.026523528, 0.0265395, 0.026556431, 0.026573444, 0.026587583, 0.026600778, 0.026617486, 0.026631722, 0.026646764, 0.02666551...</msg>
<status status="PASS" starttime="20201115 23:02:02.095" endtime="20201115 23:02:02.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.112" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.111" endtime="20201115 23:02:02.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.114" level="INFO">VALUE: [8.750000000001812e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.833000000003227e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.819999999999661e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.776999999998009e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.846999999999328e-06, 8.694000000000063e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.777999999997482e-06, 8.762999999998439e-06, 8.763999999997912e-06, 8.723000000002146e-06, 8.778000000000952e-06, 8.763000000001908e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.736999999998246e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.790999999997579e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.763999999997912e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201115 23:02:02.113" endtime="20201115 23:02:02.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.108" endtime="20201115 23:02:02.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.117" endtime="20201115 23:02:02.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.121" endtime="20201115 23:02:02.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.119" endtime="20201115 23:02:02.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.116" endtime="20201115 23:02:02.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.747" endtime="20201115 23:02:02.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.745" endtime="20201115 23:02:02.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.745" endtime="20201115 23:02:02.142"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.144" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.152" endtime="20201115 23:02:02.174"></status>
</kw>
<msg timestamp="20201115 23:02:02.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.151" endtime="20201115 23:02:02.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.175" endtime="20201115 23:02:02.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.178" endtime="20201115 23:02:02.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.148" endtime="20201115 23:02:02.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.146" endtime="20201115 23:02:02.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.188" endtime="20201115 23:02:02.475"></status>
</kw>
<msg timestamp="20201115 23:02:02.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025850931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025859694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.186" endtime="20201115 23:02:02.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025850931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025859694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.479" endtime="20201115 23:02:02.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.487" endtime="20201115 23:02:02.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.183" endtime="20201115 23:02:02.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.181" endtime="20201115 23:02:02.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.494" level="INFO">${RESULT} = [{'time': 0.025859694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.762999999998439e-06, 'source_diff': 8.762999999998439e-06}, {'time': 0.025876014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:02.491" endtime="20201115 23:02:02.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.508" level="INFO">${ACCURACY} = {'time': [0.025859694, 0.025876014, 0.025894181, 0.025908431, 0.025925153, 0.025942931, 0.025961389, 0.025974583, 0.025987875, 0.026003139, 0.026021722, 0.026039917, 0.026054458, 0.026069292, 0.026083...</msg>
<status status="PASS" starttime="20201115 23:02:02.495" endtime="20201115 23:02:02.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.513" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.512" endtime="20201115 23:02:02.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.515" level="INFO">VALUE: [8.762999999998439e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.776999999998009e-06, 8.723000000002146e-06, 8.749999999998342e-06, 8.790999999997579e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.707999999999633e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.735999999998773e-06, 8.763000000001908e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.708999999999106e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.805000000000618e-06, 8.791999999997052e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.763000000001908e-06, 8.778000000000952e-06, 8.762999999998439e-06, 8.763000000001908e-06, 8.777000000001478e-06]</msg>
<status status="PASS" starttime="20201115 23:02:02.514" endtime="20201115 23:02:02.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.509" endtime="20201115 23:02:02.516"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.518" endtime="20201115 23:02:02.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.522" endtime="20201115 23:02:02.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.520" endtime="20201115 23:02:02.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.517" endtime="20201115 23:02:02.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.145" endtime="20201115 23:02:02.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.143" endtime="20201115 23:02:02.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.142" endtime="20201115 23:02:02.543"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.546" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.554" endtime="20201115 23:02:02.572"></status>
</kw>
<msg timestamp="20201115 23:02:02.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.552" endtime="20201115 23:02:02.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.574" endtime="20201115 23:02:02.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.576" endtime="20201115 23:02:02.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.550" endtime="20201115 23:02:02.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.548" endtime="20201115 23:02:02.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.586" endtime="20201115 23:02:02.874"></status>
</kw>
<msg timestamp="20201115 23:02:02.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026497431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026506181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.584" endtime="20201115 23:02:02.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026497431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026506181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.878" endtime="20201115 23:02:02.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.886" endtime="20201115 23:02:02.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.582" endtime="20201115 23:02:02.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.580" endtime="20201115 23:02:02.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.893" level="INFO">${RESULT} = [{'time': 0.026506181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.026519694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:02.889" endtime="20201115 23:02:02.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.908" level="INFO">${ACCURACY} = {'time': [0.026506181, 0.026519694, 0.0265355, 0.026553847, 0.026567264, 0.026582375, 0.026596389, 0.026614778, 0.026628806, 0.026643375, 0.026662125, 0.026675667, 0.0266905, 0.026706181, 0.026720917,...</msg>
<status status="PASS" starttime="20201115 23:02:02.894" endtime="20201115 23:02:02.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.912" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.911" endtime="20201115 23:02:02.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.915" level="INFO">VALUE: [8.750000000001812e-06, 8.762999999998439e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.832999999999758e-06, 8.777999999997482e-06, 8.680999999999967e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.791999999997052e-06, 8.792000000000522e-06, 8.832999999999758e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.762999999998439e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.791999999997052e-06, 8.764000000001382e-06, 8.722000000002672e-06, 8.791999999997052e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.694999999999536e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.749999999998342e-06]</msg>
<status status="PASS" starttime="20201115 23:02:02.913" endtime="20201115 23:02:02.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.909" endtime="20201115 23:02:02.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.918" endtime="20201115 23:02:02.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.921" endtime="20201115 23:02:02.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.920" endtime="20201115 23:02:02.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.916" endtime="20201115 23:02:02.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.546" endtime="20201115 23:02:02.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.544" endtime="20201115 23:02:02.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.544" endtime="20201115 23:02:02.942"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.945" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.953" endtime="20201115 23:02:02.970"></status>
</kw>
<msg timestamp="20201115 23:02:02.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.952" endtime="20201115 23:02:02.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.971" endtime="20201115 23:02:02.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.974" endtime="20201115 23:02:02.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.949" endtime="20201115 23:02:02.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.947" endtime="20201115 23:02:02.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.983" endtime="20201115 23:02:03.269"></status>
</kw>
<msg timestamp="20201115 23:02:03.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024132972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024141736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.981" endtime="20201115 23:02:03.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024132972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024141736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.273" endtime="20201115 23:02:03.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.281" endtime="20201115 23:02:03.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.979" endtime="20201115 23:02:03.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.977" endtime="20201115 23:02:03.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:03.288" level="INFO">${RESULT} = [{'time': 0.024141736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.024158167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:03.284" endtime="20201115 23:02:03.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:03.301" level="INFO">${ACCURACY} = {'time': [0.024141736, 0.024158167, 0.024176347, 0.024189861, 0.02420575, 0.024222181, 0.024235708, 0.024250694, 0.024263556, 0.024278208, 0.024294653, 0.024307944, 0.024324792, 0.024340389, 0.0243564...</msg>
<status status="PASS" starttime="20201115 23:02:03.289" endtime="20201115 23:02:03.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.306" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:02:03.305" endtime="20201115 23:02:03.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.308" level="INFO">VALUE: [8.764000000001382e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.791000000001048e-06, 8.791000000001048e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.722999999998676e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.777000000001478e-06, 8.805000000000618e-06, 8.749999999998342e-06, 8.805000000000618e-06, 8.762999999998439e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.777999999997482e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.777999999997482e-06, 8.777000000001478e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.735999999998773e-06]</msg>
<status status="PASS" starttime="20201115 23:02:03.307" endtime="20201115 23:02:03.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.302" endtime="20201115 23:02:03.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.311" endtime="20201115 23:02:03.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:03.315" endtime="20201115 23:02:03.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.313" endtime="20201115 23:02:03.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.310" endtime="20201115 23:02:03.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.945" endtime="20201115 23:02:03.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.944" endtime="20201115 23:02:03.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.943" endtime="20201115 23:02:03.342"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.345" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.353" endtime="20201115 23:02:03.376"></status>
</kw>
<msg timestamp="20201115 23:02:03.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.352" endtime="20201115 23:02:03.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.378" endtime="20201115 23:02:03.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.380" endtime="20201115 23:02:03.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.349" endtime="20201115 23:02:03.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.347" endtime="20201115 23:02:03.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.389" endtime="20201115 23:02:03.675"></status>
</kw>
<msg timestamp="20201115 23:02:03.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032543708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032552486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.387" endtime="20201115 23:02:03.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032543708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032552486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.680" endtime="20201115 23:02:03.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.688" endtime="20201115 23:02:03.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.385" endtime="20201115 23:02:03.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.383" endtime="20201115 23:02:03.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:03.694" level="INFO">${RESULT} = [{'time': 0.032552486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.032571722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:03.691" endtime="20201115 23:02:03.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:03.708" level="INFO">${ACCURACY} = {'time': [0.032552486, 0.032571722, 0.032590917, 0.032610042, 0.032623986, 0.032638375, 0.032654556, 0.032673042, 0.032689861, 0.032708042, 0.032722181, 0.032736806, 0.032755403, 0.032771292, 0.032785...</msg>
<status status="PASS" starttime="20201115 23:02:03.695" endtime="20201115 23:02:03.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.712" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:02:03.711" endtime="20201115 23:02:03.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.715" level="INFO">VALUE: [8.778000000000952e-06, 8.763999999994443e-06, 8.722999999995207e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.735999999995303e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.763000000001908e-06, 8.764000000001382e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.763000000001908e-06, 8.709000000002576e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.749999999994873e-06, 8.721999999995733e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.736000000002242e-06, 8.721999999995733e-06, 8.723000000002146e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.819000000000188e-06, 8.749999999994873e-06, 8.819999999999661e-06, 8.777000000001478e-06, 8.763000000001908e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.749999999994873e-06, 8.749999999994873e-06, 8.750000000001812e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201115 23:02:03.713" endtime="20201115 23:02:03.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.709" endtime="20201115 23:02:03.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.718" endtime="20201115 23:02:03.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:03.722" endtime="20201115 23:02:03.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.720" endtime="20201115 23:02:03.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.717" endtime="20201115 23:02:03.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.346" endtime="20201115 23:02:03.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.344" endtime="20201115 23:02:03.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.343" endtime="20201115 23:02:03.743"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.746" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.754" endtime="20201115 23:02:03.773"></status>
</kw>
<msg timestamp="20201115 23:02:03.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.752" endtime="20201115 23:02:03.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.774" endtime="20201115 23:02:03.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.777" endtime="20201115 23:02:03.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.750" endtime="20201115 23:02:03.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.748" endtime="20201115 23:02:03.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.786" endtime="20201115 23:02:04.072"></status>
</kw>
<msg timestamp="20201115 23:02:04.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027291083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027299875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.785" endtime="20201115 23:02:04.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027291083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027299875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.076" endtime="20201115 23:02:04.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.085" endtime="20201115 23:02:04.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.782" endtime="20201115 23:02:04.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.780" endtime="20201115 23:02:04.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.091" level="INFO">${RESULT} = [{'time': 0.027299875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.027316125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:04.088" endtime="20201115 23:02:04.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.105" level="INFO">${ACCURACY} = {'time': [0.027299875, 0.027316125, 0.027331389, 0.027348347, 0.027365361, 0.027378958, 0.027396944, 0.0274115, 0.02742875, 0.02744475, 0.027463056, 0.027479764, 0.027492444, 0.027506458, 0.027523181,...</msg>
<status status="PASS" starttime="20201115 23:02:04.092" endtime="20201115 23:02:04.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.109" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.108" endtime="20201115 23:02:04.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.112" level="INFO">VALUE: [8.792000000000522e-06, 8.792000000000522e-06, 8.736000000002242e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.776999999998009e-06, 8.791999999997052e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.763000000001908e-06, 8.736000000002242e-06, 8.737000000001716e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.749999999998342e-06, 8.832999999999758e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.805000000000618e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.791999999997052e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.805000000000618e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.737000000001716e-06, 8.806000000000092e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.778000000000952e-06, 8.790999999997579e-06, 8.721999999999203e-06, 8.777999999997482e-06, 8.749999999998342e-06]</msg>
<status status="PASS" starttime="20201115 23:02:04.110" endtime="20201115 23:02:04.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.106" endtime="20201115 23:02:04.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.115" endtime="20201115 23:02:04.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.119" endtime="20201115 23:02:04.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.117" endtime="20201115 23:02:04.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.114" endtime="20201115 23:02:04.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.746" endtime="20201115 23:02:04.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.744" endtime="20201115 23:02:04.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.743" endtime="20201115 23:02:04.140"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.142" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.151" endtime="20201115 23:02:04.171"></status>
</kw>
<msg timestamp="20201115 23:02:04.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.149" endtime="20201115 23:02:04.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.172" endtime="20201115 23:02:04.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.175" endtime="20201115 23:02:04.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.147" endtime="20201115 23:02:04.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.144" endtime="20201115 23:02:04.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.184" endtime="20201115 23:02:04.469"></status>
</kw>
<msg timestamp="20201115 23:02:04.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027282833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027291583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.182" endtime="20201115 23:02:04.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027282833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027291583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.473" endtime="20201115 23:02:04.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.482" endtime="20201115 23:02:04.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.180" endtime="20201115 23:02:04.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.178" endtime="20201115 23:02:04.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.489" level="INFO">${RESULT} = [{'time': 0.027291583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.027304903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:04.485" endtime="20201115 23:02:04.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.504" level="INFO">${ACCURACY} = {'time': [0.027291583, 0.027304903, 0.027321333, 0.027334931, 0.027352111, 0.027366556, 0.027381347, 0.027394028, 0.027411167, 0.027430083, 0.027447, 0.027463222, 0.027482139, 0.027496792, 0.027512667...</msg>
<status status="PASS" starttime="20201115 23:02:04.490" endtime="20201115 23:02:04.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.509" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.508" endtime="20201115 23:02:04.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.511" level="INFO">VALUE: [8.750000000001812e-06, 8.763999999997912e-06, 8.791000000001048e-06, 8.708999999999106e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.708999999999106e-06, 8.777000000001478e-06, 8.721999999999203e-06, 8.777999999997482e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.791999999997052e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.722000000002672e-06, 8.763000000001908e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.777000000001478e-06]</msg>
<status status="PASS" starttime="20201115 23:02:04.510" endtime="20201115 23:02:04.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.505" endtime="20201115 23:02:04.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.514" endtime="20201115 23:02:04.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.518" endtime="20201115 23:02:04.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.516" endtime="20201115 23:02:04.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.513" endtime="20201115 23:02:04.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.143" endtime="20201115 23:02:04.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.141" endtime="20201115 23:02:04.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.140" endtime="20201115 23:02:04.539"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.542" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.550" endtime="20201115 23:02:04.568"></status>
</kw>
<msg timestamp="20201115 23:02:04.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.549" endtime="20201115 23:02:04.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.570" endtime="20201115 23:02:04.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.572" endtime="20201115 23:02:04.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.546" endtime="20201115 23:02:04.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.544" endtime="20201115 23:02:04.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.581" endtime="20201115 23:02:04.866"></status>
</kw>
<msg timestamp="20201115 23:02:04.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025319083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025327847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.580" endtime="20201115 23:02:04.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025319083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025327847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.871" endtime="20201115 23:02:04.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.879" endtime="20201115 23:02:04.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.577" endtime="20201115 23:02:04.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.575" endtime="20201115 23:02:04.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.886" level="INFO">${RESULT} = [{'time': 0.025327847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.025345778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:04.883" endtime="20201115 23:02:04.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.899" level="INFO">${ACCURACY} = {'time': [0.025327847, 0.025345778, 0.025360125, 0.025374264, 0.025386944, 0.025400667, 0.025415528, 0.025430778, 0.025449361, 0.025465153, 0.025481694, 0.025495903, 0.025510722, 0.025525986, 0.025543...</msg>
<status status="PASS" starttime="20201115 23:02:04.887" endtime="20201115 23:02:04.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.904" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.903" endtime="20201115 23:02:04.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.906" level="INFO">VALUE: [8.764000000001382e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.763000000001908e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.667000000000397e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.790999999997579e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.666999999996927e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.694999999999536e-06, 8.763999999997912e-06]</msg>
<status status="PASS" starttime="20201115 23:02:04.905" endtime="20201115 23:02:04.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.900" endtime="20201115 23:02:04.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.910" endtime="20201115 23:02:04.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.913" endtime="20201115 23:02:04.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.912" endtime="20201115 23:02:04.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.908" endtime="20201115 23:02:04.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.543" endtime="20201115 23:02:04.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.541" endtime="20201115 23:02:04.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.540" endtime="20201115 23:02:04.934"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.937" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.945" endtime="20201115 23:02:04.964"></status>
</kw>
<msg timestamp="20201115 23:02:04.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.943" endtime="20201115 23:02:04.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.965" endtime="20201115 23:02:04.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.968" endtime="20201115 23:02:04.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.941" endtime="20201115 23:02:04.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.939" endtime="20201115 23:02:04.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.978" endtime="20201115 23:02:05.264"></status>
</kw>
<msg timestamp="20201115 23:02:05.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026824208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026832917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.975" endtime="20201115 23:02:05.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026824208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026832917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.269" endtime="20201115 23:02:05.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.277" endtime="20201115 23:02:05.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.973" endtime="20201115 23:02:05.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.971" endtime="20201115 23:02:05.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:05.284" level="INFO">${RESULT} = [{'time': 0.026832917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.709000000002576e-06, 'source_diff': 8.709000000002576e-06}, {'time': 0.026848611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:05.280" endtime="20201115 23:02:05.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:05.297" level="INFO">${ACCURACY} = {'time': [0.026832917, 0.026848611, 0.026864208, 0.026877292, 0.026895458, 0.026910125, 0.026927014, 0.026942667, 0.026957042, 0.026973097, 0.026988764, 0.027001708, 0.027020014, 0.027035056, 0.027051...</msg>
<status status="PASS" starttime="20201115 23:02:05.285" endtime="20201115 23:02:05.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.302" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:02:05.301" endtime="20201115 23:02:05.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.304" level="INFO">VALUE: [8.709000000002576e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.694000000000063e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.819999999999661e-06, 8.735999999998773e-06, 8.819000000000188e-06, 8.791999999997052e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.833999999999231e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.791999999997052e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.791000000001048e-06, 8.735999999998773e-06, 8.777000000001478e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.805000000000618e-06]</msg>
<status status="PASS" starttime="20201115 23:02:05.303" endtime="20201115 23:02:05.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.298" endtime="20201115 23:02:05.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.307" endtime="20201115 23:02:05.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.311" endtime="20201115 23:02:05.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.309" endtime="20201115 23:02:05.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.306" endtime="20201115 23:02:05.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.937" endtime="20201115 23:02:05.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.935" endtime="20201115 23:02:05.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.935" endtime="20201115 23:02:05.332"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.334" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.343" endtime="20201115 23:02:05.360"></status>
</kw>
<msg timestamp="20201115 23:02:05.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.341" endtime="20201115 23:02:05.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.362" endtime="20201115 23:02:05.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.365" endtime="20201115 23:02:05.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.339" endtime="20201115 23:02:05.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.336" endtime="20201115 23:02:05.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.374" endtime="20201115 23:02:05.660"></status>
</kw>
<msg timestamp="20201115 23:02:05.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025994236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026003, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:05.372" endtime="20201115 23:02:05.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025994236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026003, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:05.664" endtime="20201115 23:02:05.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.673" endtime="20201115 23:02:05.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.370" endtime="20201115 23:02:05.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.368" endtime="20201115 23:02:05.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:05.679" level="INFO">${RESULT} = [{'time': 0.026003, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999997912e-06, 'source_diff': 8.763999999997912e-06}, {'time': 0.026018597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:05.676" endtime="20201115 23:02:05.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:05.693" level="INFO">${ACCURACY} = {'time': [0.026003, 0.026018597, 0.026037722, 0.026051125, 0.026069222, 0.026084472, 0.026102833, 0.026118681, 0.026137764, 0.026153653, 0.026172444, 0.026187722, 0.026200389, 0.026213778, 0.026232708...</msg>
<status status="PASS" starttime="20201115 23:02:05.680" endtime="20201115 23:02:05.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.697" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:02:05.696" endtime="20201115 23:02:05.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.700" level="INFO">VALUE: [8.763999999997912e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.819999999999661e-06, 8.764000000001382e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.722000000002672e-06, 8.763000000001908e-06, 8.762999999998439e-06, 8.694000000000063e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.819000000000188e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201115 23:02:05.698" endtime="20201115 23:02:05.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.694" endtime="20201115 23:02:05.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.703" endtime="20201115 23:02:05.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.706" endtime="20201115 23:02:05.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.705" endtime="20201115 23:02:05.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.701" endtime="20201115 23:02:05.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.335" endtime="20201115 23:02:05.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.333" endtime="20201115 23:02:05.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.332" endtime="20201115 23:02:05.727"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.730" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.739" endtime="20201115 23:02:05.760"></status>
</kw>
<msg timestamp="20201115 23:02:05.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.737" endtime="20201115 23:02:05.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.762" endtime="20201115 23:02:05.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.764" endtime="20201115 23:02:05.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.734" endtime="20201115 23:02:05.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.732" endtime="20201115 23:02:05.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.773" endtime="20201115 23:02:06.061"></status>
</kw>
<msg timestamp="20201115 23:02:06.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027559972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027568736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.772" endtime="20201115 23:02:06.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027559972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027568736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.065" endtime="20201115 23:02:06.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.073" endtime="20201115 23:02:06.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.769" endtime="20201115 23:02:06.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.767" endtime="20201115 23:02:06.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.080" level="INFO">${RESULT} = [{'time': 0.027568736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.027587528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:06.077" endtime="20201115 23:02:06.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.095" level="INFO">${ACCURACY} = {'time': [0.027568736, 0.027587528, 0.027600625, 0.027615889, 0.027633569, 0.027651125, 0.027665542, 0.027684556, 0.027698181, 0.027716514, 0.027733861, 0.027751403, 0.027767833, 0.027786542, 0.027804...</msg>
<status status="PASS" starttime="20201115 23:02:06.081" endtime="20201115 23:02:06.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.099" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.098" endtime="20201115 23:02:06.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.102" level="INFO">VALUE: [8.764000000001382e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.776999999998009e-06, 8.764000000001382e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.776999999998009e-06, 8.846999999999328e-06, 8.735999999998773e-06, 8.833999999999231e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.723000000002146e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.832999999999758e-06, 8.791999999997052e-06, 8.694000000000063e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201115 23:02:06.101" endtime="20201115 23:02:06.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.096" endtime="20201115 23:02:06.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.105" endtime="20201115 23:02:06.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.109" endtime="20201115 23:02:06.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.107" endtime="20201115 23:02:06.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.103" endtime="20201115 23:02:06.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.730" endtime="20201115 23:02:06.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.729" endtime="20201115 23:02:06.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.728" endtime="20201115 23:02:06.130"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.133" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.141" endtime="20201115 23:02:06.160"></status>
</kw>
<msg timestamp="20201115 23:02:06.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.139" endtime="20201115 23:02:06.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.161" endtime="20201115 23:02:06.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.164" endtime="20201115 23:02:06.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.137" endtime="20201115 23:02:06.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.135" endtime="20201115 23:02:06.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.173" endtime="20201115 23:02:06.458"></status>
</kw>
<msg timestamp="20201115 23:02:06.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027052153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027060903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.171" endtime="20201115 23:02:06.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027052153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027060903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.462" endtime="20201115 23:02:06.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.470" endtime="20201115 23:02:06.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.169" endtime="20201115 23:02:06.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.167" endtime="20201115 23:02:06.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.477" level="INFO">${RESULT} = [{'time': 0.027060903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.027073903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:06.474" endtime="20201115 23:02:06.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.490" level="INFO">${ACCURACY} = {'time': [0.027060903, 0.027073903, 0.027087597, 0.027102444, 0.027117208, 0.027133444, 0.027151528, 0.027164306, 0.027180097, 0.027197361, 0.027214653, 0.027230167, 0.027244833, 0.027262097, 0.027277...</msg>
<status status="PASS" starttime="20201115 23:02:06.478" endtime="20201115 23:02:06.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.495" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.494" endtime="20201115 23:02:06.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.497" level="INFO">VALUE: [8.750000000001812e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.737000000001716e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.791999999997052e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201115 23:02:06.496" endtime="20201115 23:02:06.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.491" endtime="20201115 23:02:06.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.501" endtime="20201115 23:02:06.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.504" endtime="20201115 23:02:06.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.503" endtime="20201115 23:02:06.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.499" endtime="20201115 23:02:06.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.133" endtime="20201115 23:02:06.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.131" endtime="20201115 23:02:06.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.131" endtime="20201115 23:02:06.526"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.528" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.536" endtime="20201115 23:02:06.555"></status>
</kw>
<msg timestamp="20201115 23:02:06.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.535" endtime="20201115 23:02:06.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.556" endtime="20201115 23:02:06.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.559" endtime="20201115 23:02:06.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.532" endtime="20201115 23:02:06.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.530" endtime="20201115 23:02:06.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.569" endtime="20201115 23:02:06.857"></status>
</kw>
<msg timestamp="20201115 23:02:06.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023149264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023158028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.568" endtime="20201115 23:02:06.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023149264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023158028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.862" endtime="20201115 23:02:06.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.870" endtime="20201115 23:02:06.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.565" endtime="20201115 23:02:06.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.563" endtime="20201115 23:02:06.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.877" level="INFO">${RESULT} = [{'time': 0.023158028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.0231755, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:06.873" endtime="20201115 23:02:06.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.890" level="INFO">${ACCURACY} = {'time': [0.023158028, 0.0231755, 0.023189222, 0.023205944, 0.023221764, 0.023234736, 0.023249806, 0.023265389, 0.023283903, 0.023298458, 0.023311556, 0.023327778, 0.023342625, 0.023360389, 0.02337336...</msg>
<status status="PASS" starttime="20201115 23:02:06.878" endtime="20201115 23:02:06.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.895" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.894" endtime="20201115 23:02:06.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.898" level="INFO">VALUE: [8.764000000001382e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.694999999999536e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.737000000001716e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201115 23:02:06.896" endtime="20201115 23:02:06.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.891" endtime="20201115 23:02:06.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.901" endtime="20201115 23:02:06.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.904" endtime="20201115 23:02:06.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.903" endtime="20201115 23:02:06.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.899" endtime="20201115 23:02:06.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.529" endtime="20201115 23:02:06.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.527" endtime="20201115 23:02:06.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.526" endtime="20201115 23:02:06.925"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.928" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.936" endtime="20201115 23:02:06.954"></status>
</kw>
<msg timestamp="20201115 23:02:06.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.935" endtime="20201115 23:02:06.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.956" endtime="20201115 23:02:06.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.958" endtime="20201115 23:02:06.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.932" endtime="20201115 23:02:06.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.930" endtime="20201115 23:02:06.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.967" endtime="20201115 23:02:07.254"></status>
</kw>
<msg timestamp="20201115 23:02:07.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025165097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025173778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.966" endtime="20201115 23:02:07.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025165097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025173778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.258" endtime="20201115 23:02:07.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.266" endtime="20201115 23:02:07.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.963" endtime="20201115 23:02:07.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.961" endtime="20201115 23:02:07.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:07.273" level="INFO">${RESULT} = [{'time': 0.025173778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.025188458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:07.269" endtime="20201115 23:02:07.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:07.287" level="INFO">${ACCURACY} = {'time': [0.025173778, 0.025188458, 0.025204111, 0.025219486, 0.025234681, 0.025248472, 0.025267194, 0.025283847, 0.025297569, 0.025316347, 0.025330778, 0.025345417, 0.025360264, 0.025376278, 0.025391...</msg>
<status status="PASS" starttime="20201115 23:02:07.274" endtime="20201115 23:02:07.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.291" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:02:07.290" endtime="20201115 23:02:07.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.294" level="INFO">VALUE: [8.680999999999967e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.762999999998439e-06, 8.791000000001048e-06, 8.762999999998439e-06, 8.735999999998773e-06, 8.709000000002576e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.722999999998676e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.832999999999758e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.791000000001048e-06, 8.776999999998009e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.694000000000063e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.833999999999231e-06, 8.777000000001478e-06, 8.764000000001382e-06, 8.749999999998342e-06]</msg>
<status status="PASS" starttime="20201115 23:02:07.292" endtime="20201115 23:02:07.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.288" endtime="20201115 23:02:07.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.297" endtime="20201115 23:02:07.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:07.300" endtime="20201115 23:02:07.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.299" endtime="20201115 23:02:07.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.295" endtime="20201115 23:02:07.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.929" endtime="20201115 23:02:07.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.927" endtime="20201115 23:02:07.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.926" endtime="20201115 23:02:07.322"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.324" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.332" endtime="20201115 23:02:07.351"></status>
</kw>
<msg timestamp="20201115 23:02:07.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.331" endtime="20201115 23:02:07.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.352" endtime="20201115 23:02:07.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.355" endtime="20201115 23:02:07.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.328" endtime="20201115 23:02:07.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.326" endtime="20201115 23:02:07.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.364" endtime="20201115 23:02:07.650"></status>
</kw>
<msg timestamp="20201115 23:02:07.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025995083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026003847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.362" endtime="20201115 23:02:07.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025995083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026003847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.654" endtime="20201115 23:02:07.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.663" endtime="20201115 23:02:07.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.360" endtime="20201115 23:02:07.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.358" endtime="20201115 23:02:07.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:07.670" level="INFO">${RESULT} = [{'time': 0.026003847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.026017389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:07.666" endtime="20201115 23:02:07.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:07.685" level="INFO">${ACCURACY} = {'time': [0.026003847, 0.026017389, 0.026036236, 0.026055069, 0.026068583, 0.026081472, 0.026096028, 0.026112986, 0.026131111, 0.026149486, 0.026163431, 0.026180986, 0.026198028, 0.026217014, 0.026230...</msg>
<status status="PASS" starttime="20201115 23:02:07.671" endtime="20201115 23:02:07.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.689" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:02:07.688" endtime="20201115 23:02:07.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.692" level="INFO">VALUE: [8.764000000001382e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.790999999997579e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.737000000001716e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.847999999998801e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.777999999997482e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.806000000000092e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.777000000001478e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.777000000001478e-06]</msg>
<status status="PASS" starttime="20201115 23:02:07.690" endtime="20201115 23:02:07.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.686" endtime="20201115 23:02:07.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.695" endtime="20201115 23:02:07.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:07.698" endtime="20201115 23:02:07.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.697" endtime="20201115 23:02:07.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.693" endtime="20201115 23:02:07.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.325" endtime="20201115 23:02:07.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.323" endtime="20201115 23:02:07.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.322" endtime="20201115 23:02:07.720"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.722" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.730" endtime="20201115 23:02:07.752"></status>
</kw>
<msg timestamp="20201115 23:02:07.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.729" endtime="20201115 23:02:07.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.753" endtime="20201115 23:02:07.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.756" endtime="20201115 23:02:07.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.726" endtime="20201115 23:02:07.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.724" endtime="20201115 23:02:07.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.766" endtime="20201115 23:02:08.052"></status>
</kw>
<msg timestamp="20201115 23:02:08.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0248375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02484625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:07.763" endtime="20201115 23:02:08.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0248375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02484625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:08.056" endtime="20201115 23:02:08.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.065" endtime="20201115 23:02:08.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.761" endtime="20201115 23:02:08.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.759" endtime="20201115 23:02:08.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.071" level="INFO">${RESULT} = [{'time': 0.02484625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.024859764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:08.068" endtime="20201115 23:02:08.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.085" level="INFO">${ACCURACY} = {'time': [0.02484625, 0.024859764, 0.024877236, 0.024893694, 0.024909194, 0.024922778, 0.024937194, 0.024953292, 0.024970556, 0.024987514, 0.025004778, 0.025022722, 0.025039208, 0.025052181, 0.0250661...</msg>
<status status="PASS" starttime="20201115 23:02:08.072" endtime="20201115 23:02:08.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.089" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.088" endtime="20201115 23:02:08.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.092" level="INFO">VALUE: [8.750000000001812e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.735999999998773e-06, 8.833999999999231e-06, 8.762999999998439e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.819999999999661e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.723000000002146e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.680999999999967e-06, 8.777000000001478e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.750000000001812e-06, 8.763999999997912e-06]</msg>
<status status="PASS" starttime="20201115 23:02:08.090" endtime="20201115 23:02:08.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.086" endtime="20201115 23:02:08.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.095" endtime="20201115 23:02:08.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.098" endtime="20201115 23:02:08.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.097" endtime="20201115 23:02:08.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.093" endtime="20201115 23:02:08.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.723" endtime="20201115 23:02:08.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.721" endtime="20201115 23:02:08.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.720" endtime="20201115 23:02:08.120"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.122" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.130" endtime="20201115 23:02:08.149"></status>
</kw>
<msg timestamp="20201115 23:02:08.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.129" endtime="20201115 23:02:08.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.150" endtime="20201115 23:02:08.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.153" endtime="20201115 23:02:08.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.126" endtime="20201115 23:02:08.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.124" endtime="20201115 23:02:08.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.162" endtime="20201115 23:02:08.450"></status>
</kw>
<msg timestamp="20201115 23:02:08.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026766208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026774958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.161" endtime="20201115 23:02:08.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026766208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026774958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.454" endtime="20201115 23:02:08.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.462" endtime="20201115 23:02:08.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.158" endtime="20201115 23:02:08.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.156" endtime="20201115 23:02:08.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.469" level="INFO">${RESULT} = [{'time': 0.026774958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.026794194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:08.465" endtime="20201115 23:02:08.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.482" level="INFO">${ACCURACY} = {'time': [0.026774958, 0.026794194, 0.026809028, 0.026823056, 0.026838931, 0.026851625, 0.026868681, 0.026886319, 0.026905208, 0.026918083, 0.026935736, 0.026953222, 0.026967361, 0.026981736, 0.026995...</msg>
<status status="PASS" starttime="20201115 23:02:08.470" endtime="20201115 23:02:08.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.487" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.486" endtime="20201115 23:02:08.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.489" level="INFO">VALUE: [8.750000000001812e-06, 8.777000000001478e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.736999999998246e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.680000000000493e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.832999999999758e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.820000000003131e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.777000000001478e-06, 8.776999999998009e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.790999999997579e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201115 23:02:08.488" endtime="20201115 23:02:08.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.483" endtime="20201115 23:02:08.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.492" endtime="20201115 23:02:08.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.496" endtime="20201115 23:02:08.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.494" endtime="20201115 23:02:08.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.491" endtime="20201115 23:02:08.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.123" endtime="20201115 23:02:08.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.121" endtime="20201115 23:02:08.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.120" endtime="20201115 23:02:08.517"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.520" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.532" endtime="20201115 23:02:08.551"></status>
</kw>
<msg timestamp="20201115 23:02:08.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.530" endtime="20201115 23:02:08.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.553" endtime="20201115 23:02:08.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.555" endtime="20201115 23:02:08.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.524" endtime="20201115 23:02:08.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.522" endtime="20201115 23:02:08.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.565" endtime="20201115 23:02:08.852"></status>
</kw>
<msg timestamp="20201115 23:02:08.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031141736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031150458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.563" endtime="20201115 23:02:08.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031141736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031150458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.856" endtime="20201115 23:02:08.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.865" endtime="20201115 23:02:08.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.560" endtime="20201115 23:02:08.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.559" endtime="20201115 23:02:08.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.871" level="INFO">${RESULT} = [{'time': 0.031150458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.031169278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:08.868" endtime="20201115 23:02:08.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.885" level="INFO">${ACCURACY} = {'time': [0.031150458, 0.031169278, 0.031188069, 0.031206792, 0.031225347, 0.031238125, 0.031252819, 0.031265792, 0.031278764, 0.031291458, 0.031307889, 0.031322431, 0.031337431, 0.031351625, 0.031364...</msg>
<status status="PASS" starttime="20201115 23:02:08.872" endtime="20201115 23:02:08.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.889" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.888" endtime="20201115 23:02:08.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.892" level="INFO">VALUE: [8.721999999999203e-06, 8.778000000000952e-06, 8.762999999998439e-06, 8.778000000000952e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.763000000001908e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.749999999994873e-06, 8.806000000000092e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.735999999995303e-06, 8.736000000002242e-06, 8.722000000002672e-06, 8.763000000001908e-06, 8.749999999994873e-06, 8.750000000001812e-06, 8.709000000002576e-06, 8.764000000001382e-06, 8.707999999996163e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.709000000002576e-06, 8.763999999994443e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.708999999995637e-06, 8.777000000001478e-06, 8.750000000001812e-06, 8.735999999995303e-06, 8.777999999994013e-06, 8.792000000000522e-06, 8.749999999994873e-06, 8.764000000001382e-06, 8.722000000002672e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.777000000001478e-06, 8.750000000001812e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201115 23:02:08.890" endtime="20201115 23:02:08.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.885" endtime="20201115 23:02:08.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.895" endtime="20201115 23:02:08.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.898" endtime="20201115 23:02:08.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.897" endtime="20201115 23:02:08.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.893" endtime="20201115 23:02:08.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.520" endtime="20201115 23:02:08.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.518" endtime="20201115 23:02:08.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.518" endtime="20201115 23:02:08.920"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.922" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.931" endtime="20201115 23:02:08.949"></status>
</kw>
<msg timestamp="20201115 23:02:08.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.929" endtime="20201115 23:02:08.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.951" endtime="20201115 23:02:08.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.953" endtime="20201115 23:02:08.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.926" endtime="20201115 23:02:08.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.924" endtime="20201115 23:02:08.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.962" endtime="20201115 23:02:09.249"></status>
</kw>
<msg timestamp="20201115 23:02:09.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025703181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025711875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.961" endtime="20201115 23:02:09.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025703181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025711875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.254" endtime="20201115 23:02:09.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.262" endtime="20201115 23:02:09.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.958" endtime="20201115 23:02:09.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.956" endtime="20201115 23:02:09.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.269" level="INFO">${RESULT} = [{'time': 0.025711875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.025729014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:09.265" endtime="20201115 23:02:09.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:09.284" level="INFO">${ACCURACY} = {'time': [0.025711875, 0.025729014, 0.025744222, 0.025761347, 0.025780056, 0.025794694, 0.025813083, 0.025830542, 0.025847389, 0.025866403, 0.025884764, 0.025902167, 0.025920736, 0.025936306, 0.025951...</msg>
<status status="PASS" starttime="20201115 23:02:09.270" endtime="20201115 23:02:09.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.288" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:02:09.287" endtime="20201115 23:02:09.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.291" level="INFO">VALUE: [8.694000000000063e-06, 8.750000000001812e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.721999999999203e-06, 8.847000000002797e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.819999999999661e-06, 8.735999999998773e-06, 8.777000000001478e-06, 8.707999999999633e-06, 8.764000000001382e-06, 8.722999999998676e-06, 8.790999999997579e-06, 8.819000000000188e-06, 8.777999999997482e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.762999999998439e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.694999999999536e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.721999999999203e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201115 23:02:09.289" endtime="20201115 23:02:09.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.284" endtime="20201115 23:02:09.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.294" endtime="20201115 23:02:09.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:09.298" endtime="20201115 23:02:09.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.296" endtime="20201115 23:02:09.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.293" endtime="20201115 23:02:09.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.923" endtime="20201115 23:02:09.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.921" endtime="20201115 23:02:09.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.920" endtime="20201115 23:02:09.319"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.321" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.330" endtime="20201115 23:02:09.345"></status>
</kw>
<msg timestamp="20201115 23:02:09.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.328" endtime="20201115 23:02:09.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.346" endtime="20201115 23:02:09.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.349" endtime="20201115 23:02:09.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.325" endtime="20201115 23:02:09.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.323" endtime="20201115 23:02:09.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.358" endtime="20201115 23:02:09.643"></status>
</kw>
<msg timestamp="20201115 23:02:09.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023174458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.356" endtime="20201115 23:02:09.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023174458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.648" endtime="20201115 23:02:09.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.656" endtime="20201115 23:02:09.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.354" endtime="20201115 23:02:09.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.352" endtime="20201115 23:02:09.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.663" level="INFO">${RESULT} = [{'time': 0.023183264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.023199694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:09.659" endtime="20201115 23:02:09.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:09.676" level="INFO">${ACCURACY} = {'time': [0.023183264, 0.023199694, 0.023216167, 0.023232639, 0.023248069, 0.023266556, 0.023284875, 0.023302833, 0.023321819, 0.023334597, 0.023350681, 0.023365764, 0.023379764, 0.023394194, 0.023408...</msg>
<status status="PASS" starttime="20201115 23:02:09.664" endtime="20201115 23:02:09.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.681" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:02:09.680" endtime="20201115 23:02:09.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.684" level="INFO">VALUE: [8.806000000000092e-06, 8.791000000001048e-06, 8.735999999998773e-06, 8.819999999999661e-06, 8.762999999998439e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.762999999998439e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.791999999997052e-06, 8.8340000000027e-06, 8.763000000001908e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.708999999999106e-06, 8.792000000000522e-06, 8.723000000002146e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.819000000000188e-06, 8.832999999999758e-06, 8.721999999999203e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.777999999997482e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201115 23:02:09.682" endtime="20201115 23:02:09.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.677" endtime="20201115 23:02:09.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.687" endtime="20201115 23:02:09.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:09.690" endtime="20201115 23:02:09.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.689" endtime="20201115 23:02:09.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.685" endtime="20201115 23:02:09.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.322" endtime="20201115 23:02:09.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.320" endtime="20201115 23:02:09.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.319" endtime="20201115 23:02:09.712"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.714" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.722" endtime="20201115 23:02:09.742"></status>
</kw>
<msg timestamp="20201115 23:02:09.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.721" endtime="20201115 23:02:09.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.744" endtime="20201115 23:02:09.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.746" endtime="20201115 23:02:09.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.718" endtime="20201115 23:02:09.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.716" endtime="20201115 23:02:09.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.755" endtime="20201115 23:02:10.043"></status>
</kw>
<msg timestamp="20201115 23:02:10.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02738625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027395042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:09.754" endtime="20201115 23:02:10.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02738625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027395042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:10.047" endtime="20201115 23:02:10.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.055" endtime="20201115 23:02:10.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.751" endtime="20201115 23:02:10.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.750" endtime="20201115 23:02:10.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.062" level="INFO">${RESULT} = [{'time': 0.027395042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.027408819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:10.059" endtime="20201115 23:02:10.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.076" level="INFO">${ACCURACY} = {'time': [0.027395042, 0.027408819, 0.027422833, 0.027437708, 0.027456181, 0.027473528, 0.027487042, 0.027502097, 0.027516458, 0.027533375, 0.027551472, 0.027570389, 0.027583375, 0.027601667, 0.027618...</msg>
<status status="PASS" starttime="20201115 23:02:10.064" endtime="20201115 23:02:10.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.081" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.080" endtime="20201115 23:02:10.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.083" level="INFO">VALUE: [8.792000000000522e-06, 8.763000000001908e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.708999999999106e-06, 8.806000000000092e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.805000000000618e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.819999999999661e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.819999999999661e-06, 8.736999999998246e-06, 8.777999999997482e-06, 8.763999999997912e-06, 8.777000000001478e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.791000000001048e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201115 23:02:10.082" endtime="20201115 23:02:10.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.077" endtime="20201115 23:02:10.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.086" endtime="20201115 23:02:10.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.090" endtime="20201115 23:02:10.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.088" endtime="20201115 23:02:10.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.085" endtime="20201115 23:02:10.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.715" endtime="20201115 23:02:10.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.713" endtime="20201115 23:02:10.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.712" endtime="20201115 23:02:10.111"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.113" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.122" endtime="20201115 23:02:10.139"></status>
</kw>
<msg timestamp="20201115 23:02:10.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.120" endtime="20201115 23:02:10.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.141" endtime="20201115 23:02:10.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.143" endtime="20201115 23:02:10.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.118" endtime="20201115 23:02:10.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.115" endtime="20201115 23:02:10.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.152" endtime="20201115 23:02:10.439"></status>
</kw>
<msg timestamp="20201115 23:02:10.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024889847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024898611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.151" endtime="20201115 23:02:10.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024889847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024898611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.443" endtime="20201115 23:02:10.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.452" endtime="20201115 23:02:10.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.148" endtime="20201115 23:02:10.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.146" endtime="20201115 23:02:10.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.459" level="INFO">${RESULT} = [{'time': 0.024898611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.024915986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:10.456" endtime="20201115 23:02:10.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.472" level="INFO">${ACCURACY} = {'time': [0.024898611, 0.024915986, 0.024931486, 0.024949028, 0.0249675, 0.024982875, 0.025001958, 0.025014694, 0.025030042, 0.025047167, 0.025061722, 0.025079056, 0.025092056, 0.025110847, 0.02512829...</msg>
<status status="PASS" starttime="20201115 23:02:10.460" endtime="20201115 23:02:10.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.477" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.476" endtime="20201115 23:02:10.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.479" level="INFO">VALUE: [8.764000000001382e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.8340000000027e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.832999999999758e-06, 8.791000000001048e-06, 8.777999999997482e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.791999999997052e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.792000000000522e-06, 8.736000000002242e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.680999999999967e-06, 8.805000000000618e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.833999999999231e-06, 8.736000000002242e-06, 8.763000000001908e-06, 8.832999999999758e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.776999999998009e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.819999999999661e-06, 8.819999999999661e-06]</msg>
<status status="PASS" starttime="20201115 23:02:10.478" endtime="20201115 23:02:10.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.473" endtime="20201115 23:02:10.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.483" endtime="20201115 23:02:10.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.486" endtime="20201115 23:02:10.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.484" endtime="20201115 23:02:10.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.481" endtime="20201115 23:02:10.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.114" endtime="20201115 23:02:10.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.112" endtime="20201115 23:02:10.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.111" endtime="20201115 23:02:10.507"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.510" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.518" endtime="20201115 23:02:10.538"></status>
</kw>
<msg timestamp="20201115 23:02:10.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.516" endtime="20201115 23:02:10.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.540" endtime="20201115 23:02:10.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.542" endtime="20201115 23:02:10.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.514" endtime="20201115 23:02:10.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.512" endtime="20201115 23:02:10.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.552" endtime="20201115 23:02:10.838"></status>
</kw>
<msg timestamp="20201115 23:02:10.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025645972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025678639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.550" endtime="20201115 23:02:10.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025645972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025678639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.843" endtime="20201115 23:02:10.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.851" endtime="20201115 23:02:10.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.547" endtime="20201115 23:02:10.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.546" endtime="20201115 23:02:10.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.858" level="INFO">${RESULT} = [{'time': 0.025678639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.266700000000011e-05, 'source_diff': 3.266700000000011e-05}, {'time': 0.025709042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:10.854" endtime="20201115 23:02:10.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.873" level="INFO">${ACCURACY} = {'time': [0.025678639, 0.025709042, 0.025739486, 0.025769889, 0.025800542, 0.025831153, 0.025861444, 0.025891722, 0.025922625, 0.025953236, 0.025983125, 0.026013806, 0.026044778, 0.026075097, 0.026105...</msg>
<status status="PASS" starttime="20201115 23:02:10.859" endtime="20201115 23:02:10.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.877" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.876" endtime="20201115 23:02:10.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.880" level="INFO">VALUE: [3.266700000000011e-05, 2.212500000000131e-05, 2.4041999999998426e-05, 2.40970000000007e-05, 2.594499999999944e-05, 2.4084000000000605e-05, 2.30969999999997e-05, 2.1165999999999546e-05, 2.5957999999999537e-05, 2.1194000000002156e-05, 2.306900000000056e-05, 2.5014000000000286e-05, 2.5041999999999426e-05, 2.5971999999999107e-05, 2.4986000000001146e-05, 2.5986000000002146e-05, 2.019500000000063e-05, 2.211100000000174e-05, 2.0249999999999435e-05, 2.0208000000000725e-05, 2.4971999999998107e-05, 2.2152000000000976e-05, 2.4986000000001146e-05, 2.5000000000000716e-05, 2.015299999999845e-05, 2.5943999999999967e-05, 2.4985999999997677e-05, 2.116700000000249e-05, 2.113899999999988e-05, 2.209700000000217e-05, 2.012499999999931e-05, 2.313899999999841e-05, 2.0235999999999865e-05, 2.4056000000001465e-05, 2.5000000000000716e-05, 2.5971999999999107e-05, 2.4054999999998522e-05, 2.1193999999998686e-05, 2.5012999999997343e-05, 2.406900000000156e-05, 2.5013999999996817e-05, 2.6930000000001397e-05, 2.5000000000000716e-05, 2.4056000000001465e-05, 2.408300000000113e-05, 2.5000000000000716e-05, 2.4098000000000175e-05, 2.6915999999998358e-05, 2.4026999999999382e-05, 2.30969999999997e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.879" endtime="20201115 23:02:10.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.874" endtime="20201115 23:02:10.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.883" endtime="20201115 23:02:10.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.887" endtime="20201115 23:02:10.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.885" endtime="20201115 23:02:10.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.881" endtime="20201115 23:02:10.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.510" endtime="20201115 23:02:10.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.508" endtime="20201115 23:02:10.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.508" endtime="20201115 23:02:10.908"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.910" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.918" endtime="20201115 23:02:10.941"></status>
</kw>
<msg timestamp="20201115 23:02:10.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.917" endtime="20201115 23:02:10.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.943" endtime="20201115 23:02:10.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.946" endtime="20201115 23:02:10.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.914" endtime="20201115 23:02:10.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.912" endtime="20201115 23:02:10.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.955" endtime="20201115 23:02:11.241"></status>
</kw>
<msg timestamp="20201115 23:02:11.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02700025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027026278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:10.953" endtime="20201115 23:02:11.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02700025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027026278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:11.245" endtime="20201115 23:02:11.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.253" endtime="20201115 23:02:11.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.951" endtime="20201115 23:02:11.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.949" endtime="20201115 23:02:11.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.260" level="INFO">${RESULT} = [{'time': 0.027026278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6028000000000856e-05, 'source_diff': 2.6028000000000856e-05}, {'time': 0.027057347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:11.256" endtime="20201115 23:02:11.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.273" level="INFO">${ACCURACY} = {'time': [0.027026278, 0.027057347, 0.027087194, 0.027118181, 0.027148375, 0.027178736, 0.027209806, 0.027240319, 0.027270264, 0.027301014, 0.027331875, 0.027362347, 0.027392722, 0.027423208, 0.027453...</msg>
<status status="PASS" starttime="20201115 23:02:11.261" endtime="20201115 23:02:11.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.278" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.277" endtime="20201115 23:02:11.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.280" level="INFO">VALUE: [2.6028000000000856e-05, 2.4999999999997247e-05, 2.0221999999996826e-05, 2.5000000000000716e-05, 2.593099999999987e-05, 2.4971999999998107e-05, 2.3083999999999605e-05, 2.1193999999998686e-05, 2.312499999999884e-05, 2.0249999999999435e-05, 2.4013999999999286e-05, 2.1165999999999546e-05, 2.2180000000000116e-05, 2.20830000000026e-05, 2.5068999999999092e-05, 2.0263999999999005e-05, 2.116699999999902e-05, 2.5027000000000382e-05, 2.306900000000056e-05, 2.4041999999998426e-05, 2.1207999999998256e-05, 2.311099999999927e-05, 2.311099999999927e-05, 2.02090000000002e-05, 2.116699999999902e-05, 2.4943999999998967e-05, 2.5957999999999537e-05, 2.2098000000001644e-05, 2.5000000000000716e-05, 2.3083999999999605e-05, 2.5957999999999537e-05, 2.311100000000274e-05, 2.215300000000045e-05, 2.312499999999884e-05, 2.691699999999783e-05, 2.308300000000013e-05, 2.116699999999902e-05, 2.119499999999816e-05, 2.6972000000000107e-05, 2.212500000000131e-05, 2.4042000000001895e-05, 2.212499999999784e-05, 2.5000000000000716e-05, 2.30969999999997e-05, 2.119500000000163e-05, 2.119499999999816e-05, 2.1180000000002586e-05, 2.0222000000000295e-05, 2.4069999999997566e-05, 2.5027999999999856e-05]</msg>
<status status="PASS" starttime="20201115 23:02:11.279" endtime="20201115 23:02:11.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.274" endtime="20201115 23:02:11.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.284" endtime="20201115 23:02:11.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.287" endtime="20201115 23:02:11.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.285" endtime="20201115 23:02:11.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.282" endtime="20201115 23:02:11.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.911" endtime="20201115 23:02:11.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.909" endtime="20201115 23:02:11.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.908" endtime="20201115 23:02:11.308"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.311" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.319" endtime="20201115 23:02:11.338"></status>
</kw>
<msg timestamp="20201115 23:02:11.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.318" endtime="20201115 23:02:11.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.339" endtime="20201115 23:02:11.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.342" endtime="20201115 23:02:11.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.315" endtime="20201115 23:02:11.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.313" endtime="20201115 23:02:11.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.351" endtime="20201115 23:02:11.637"></status>
</kw>
<msg timestamp="20201115 23:02:11.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023345569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023369639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.350" endtime="20201115 23:02:11.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023345569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023369639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.641" endtime="20201115 23:02:11.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.650" endtime="20201115 23:02:11.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.347" endtime="20201115 23:02:11.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.345" endtime="20201115 23:02:11.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.657" level="INFO">${RESULT} = [{'time': 0.023369639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4070000000001035e-05, 'source_diff': 2.4070000000001035e-05}, {'time': 0.023399611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:11.654" endtime="20201115 23:02:11.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.670" level="INFO">${ACCURACY} = {'time': [0.023369639, 0.023399611, 0.023430708, 0.023461306, 0.023491847, 0.02352225, 0.023552653, 0.023583236, 0.023613417, 0.023643681, 0.023674514, 0.023704792, 0.023736056, 0.023766361, 0.0237970...</msg>
<status status="PASS" starttime="20201115 23:02:11.658" endtime="20201115 23:02:11.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.675" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.674" endtime="20201115 23:02:11.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.678" level="INFO">VALUE: [2.4070000000001035e-05, 2.5930000000000397e-05, 2.5930000000000397e-05, 2.5027999999999856e-05, 2.4068999999998092e-05, 2.5972000000002576e-05, 2.212500000000131e-05, 2.4958000000002006e-05, 2.594499999999944e-05, 2.312499999999884e-05, 2.30969999999997e-05, 2.022299999999977e-05, 2.216700000000002e-05, 2.5068999999999092e-05, 2.2221999999998826e-05, 2.4040999999998952e-05, 2.118100000000206e-05, 2.691699999999783e-05, 2.1151999999999976e-05, 2.5014000000000286e-05, 2.212499999999784e-05, 2.0320000000000754e-05, 2.5027999999999856e-05, 2.4070000000001035e-05, 2.3097999999999175e-05, 2.594499999999944e-05, 2.4041999999998426e-05, 2.2152000000000976e-05, 2.306900000000056e-05, 2.0222000000000295e-05, 2.5000000000000716e-05, 2.30969999999997e-05, 2.311099999999927e-05, 2.2180000000000116e-05, 2.115299999999945e-05, 2.312499999999884e-05, 2.40970000000007e-05, 2.116700000000249e-05, 2.30969999999997e-05, 2.1165999999999546e-05, 2.1221999999997826e-05, 2.0222000000000295e-05, 2.116699999999902e-05, 2.5957999999999537e-05, 2.6888999999998692e-05, 2.212500000000131e-05, 2.5055999999998996e-05, 2.405500000000199e-05, 2.5014000000000286e-05, 2.6999999999999247e-05]</msg>
<status status="PASS" starttime="20201115 23:02:11.676" endtime="20201115 23:02:11.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.671" endtime="20201115 23:02:11.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.681" endtime="20201115 23:02:11.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.684" endtime="20201115 23:02:11.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.683" endtime="20201115 23:02:11.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.679" endtime="20201115 23:02:11.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.311" endtime="20201115 23:02:11.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.309" endtime="20201115 23:02:11.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.309" endtime="20201115 23:02:11.706"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.708" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.717" endtime="20201115 23:02:11.735"></status>
</kw>
<msg timestamp="20201115 23:02:11.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.715" endtime="20201115 23:02:11.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.736" endtime="20201115 23:02:11.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.739" endtime="20201115 23:02:11.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.712" endtime="20201115 23:02:11.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.710" endtime="20201115 23:02:11.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.748" endtime="20201115 23:02:12.034"></status>
</kw>
<msg timestamp="20201115 23:02:12.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022675125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.746" endtime="20201115 23:02:12.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022675125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.038" endtime="20201115 23:02:12.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.047" endtime="20201115 23:02:12.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.744" endtime="20201115 23:02:12.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.742" endtime="20201115 23:02:12.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.053" level="INFO">${RESULT} = [{'time': 0.022703944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8818999999999373e-05, 'source_diff': 2.8818999999999373e-05}, {'time': 0.022734444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:12.050" endtime="20201115 23:02:12.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.067" level="INFO">${ACCURACY} = {'time': [0.022703944, 0.022734444, 0.02276525, 0.022795153, 0.022826264, 0.022856111, 0.02288725, 0.022917583, 0.022948458, 0.022979125, 0.023009125, 0.023039194, 0.023069819, 0.023100597, 0.02313162...</msg>
<status status="PASS" starttime="20201115 23:02:12.054" endtime="20201115 23:02:12.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.071" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.070" endtime="20201115 23:02:12.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.074" level="INFO">VALUE: [2.8818999999999373e-05, 2.5027000000000382e-05, 2.6860999999999552e-05, 2.3083999999999605e-05, 2.5957999999999537e-05, 2.5013999999996817e-05, 2.693100000000087e-05, 2.1221999999997826e-05, 2.305500000000099e-05, 2.311099999999927e-05, 2.30969999999997e-05, 2.5930000000000397e-05, 2.02769999999991e-05, 2.6944000000000967e-05, 2.3999999999999716e-05, 2.305500000000099e-05, 2.690300000000173e-05, 2.211099999999827e-05, 2.019500000000063e-05, 2.5943999999999967e-05, 2.4999999999997247e-05, 2.211100000000174e-05, 2.594499999999944e-05, 2.6916000000001827e-05, 2.1236000000000865e-05, 2.02090000000002e-05, 2.4986000000001146e-05, 2.5972000000002576e-05, 2.411100000000027e-05, 1.9264000000001474e-05, 2.305500000000099e-05, 2.116700000000249e-05, 2.120899999999773e-05, 2.5027999999999856e-05, 2.4041999999998426e-05, 2.690300000000173e-05, 2.122300000000077e-05, 2.116699999999902e-05, 2.4054999999998522e-05, 2.4986000000001146e-05, 2.5957999999999537e-05, 2.5000000000000716e-05, 2.3070000000000035e-05, 2.30969999999997e-05, 2.4026999999999382e-05, 2.3041999999997426e-05, 2.308300000000013e-05, 2.115299999999945e-05, 2.311099999999927e-05, 2.3083999999999605e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.072" endtime="20201115 23:02:12.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.068" endtime="20201115 23:02:12.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.077" endtime="20201115 23:02:12.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.081" endtime="20201115 23:02:12.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.079" endtime="20201115 23:02:12.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.076" endtime="20201115 23:02:12.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.709" endtime="20201115 23:02:12.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.707" endtime="20201115 23:02:12.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.706" endtime="20201115 23:02:12.102"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.105" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.113" endtime="20201115 23:02:12.133"></status>
</kw>
<msg timestamp="20201115 23:02:12.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.111" endtime="20201115 23:02:12.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.135" endtime="20201115 23:02:12.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.137" endtime="20201115 23:02:12.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.109" endtime="20201115 23:02:12.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.107" endtime="20201115 23:02:12.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.146" endtime="20201115 23:02:12.434"></status>
</kw>
<msg timestamp="20201115 23:02:12.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023136542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023167292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.145" endtime="20201115 23:02:12.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023136542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023167292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.438" endtime="20201115 23:02:12.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.446" endtime="20201115 23:02:12.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.142" endtime="20201115 23:02:12.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.141" endtime="20201115 23:02:12.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.453" level="INFO">${RESULT} = [{'time': 0.023167292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.074999999999953e-05, 'source_diff': 3.074999999999953e-05}, {'time': 0.023198194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:12.450" endtime="20201115 23:02:12.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.468" level="INFO">${ACCURACY} = {'time': [0.023167292, 0.023198194, 0.023228472, 0.023258597, 0.023289764, 0.023319875, 0.023350389, 0.023381236, 0.023411542, 0.023442486, 0.023472639, 0.023502833, 0.02353375, 0.023564472, 0.0235942...</msg>
<status status="PASS" starttime="20201115 23:02:12.454" endtime="20201115 23:02:12.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.472" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.471" endtime="20201115 23:02:12.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.475" level="INFO">VALUE: [3.074999999999953e-05, 2.5943999999999967e-05, 2.109700000000117e-05, 2.208299999999913e-05, 2.4042000000001895e-05, 2.0292000000001614e-05, 2.5000000000000716e-05, 2.215300000000045e-05, 2.213900000000088e-05, 2.215299999999698e-05, 2.4041999999998426e-05, 2.1179999999999116e-05, 2.5027999999999856e-05, 2.308300000000013e-05, 2.3097999999999175e-05, 2.112500000000031e-05, 2.3013999999998286e-05, 2.5027999999999856e-05, 2.5972000000002576e-05, 2.4096999999997232e-05, 2.4042000000001895e-05, 2.588899999999769e-05, 2.113899999999988e-05, 2.3999999999999716e-05, 2.690299999999826e-05, 2.0194000000001155e-05, 2.4013999999999286e-05, 2.112500000000031e-05, 2.3082999999996662e-05, 2.4915999999999827e-05, 2.6014000000001286e-05, 2.30969999999997e-05, 2.211100000000174e-05, 2.212500000000131e-05, 2.1193999999998686e-05, 2.5971999999999107e-05, 2.116699999999902e-05, 2.215300000000045e-05, 2.119500000000163e-05, 2.113899999999988e-05, 2.593099999999987e-05, 2.5027999999999856e-05, 2.5985999999998677e-05, 2.115299999999945e-05, 2.495900000000148e-05, 2.311099999999927e-05, 2.1208000000001725e-05, 2.69309999999974e-05, 2.4041999999998426e-05, 2.5013999999996817e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.474" endtime="20201115 23:02:12.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.469" endtime="20201115 23:02:12.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.479" endtime="20201115 23:02:12.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.482" endtime="20201115 23:02:12.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.481" endtime="20201115 23:02:12.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.477" endtime="20201115 23:02:12.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.105" endtime="20201115 23:02:12.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.103" endtime="20201115 23:02:12.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.103" endtime="20201115 23:02:12.503"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.506" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.514" endtime="20201115 23:02:12.533"></status>
</kw>
<msg timestamp="20201115 23:02:12.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.513" endtime="20201115 23:02:12.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.534" endtime="20201115 23:02:12.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.537" endtime="20201115 23:02:12.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.510" endtime="20201115 23:02:12.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.508" endtime="20201115 23:02:12.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.546" endtime="20201115 23:02:12.832"></status>
</kw>
<msg timestamp="20201115 23:02:12.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023908611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023935528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.544" endtime="20201115 23:02:12.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023908611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023935528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.836" endtime="20201115 23:02:12.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.845" endtime="20201115 23:02:12.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.542" endtime="20201115 23:02:12.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.540" endtime="20201115 23:02:12.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.852" level="INFO">${RESULT} = [{'time': 0.023935528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.69170000000013e-05, 'source_diff': 2.69170000000013e-05}, {'time': 0.023966556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:12.848" endtime="20201115 23:02:12.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.865" level="INFO">${ACCURACY} = {'time': [0.023935528, 0.023966556, 0.023996972, 0.024027139, 0.024057972, 0.024088111, 0.024118694, 0.024149125, 0.024179847, 0.02421, 0.024241222, 0.024270972, 0.02430225, 0.024332431, 0.024363139, ...</msg>
<status status="PASS" starttime="20201115 23:02:12.853" endtime="20201115 23:02:12.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.870" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.869" endtime="20201115 23:02:12.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.872" level="INFO">VALUE: [2.69170000000013e-05, 2.119500000000163e-05, 2.5971999999999107e-05, 2.118099999999859e-05, 2.212500000000131e-05, 2.4041999999998426e-05, 2.0222000000000295e-05, 2.4027999999998856e-05, 2.208299999999913e-05, 2.0207999999997256e-05, 2.5957999999999537e-05, 2.0221999999996826e-05, 2.50970000000017e-05, 2.6014000000001286e-05, 2.0222000000000295e-05, 2.4028000000002325e-05, 2.3042000000000895e-05, 2.5014000000000286e-05, 2.0235999999999865e-05, 2.113899999999988e-05, 2.7000000000002716e-05, 2.5096999999998232e-05, 2.3054999999997522e-05, 2.112500000000031e-05, 2.211100000000174e-05, 2.116699999999902e-05, 2.0235999999999865e-05, 2.315300000000145e-05, 2.2152000000000976e-05, 2.0222000000000295e-05, 2.213900000000088e-05, 2.6860999999999552e-05, 2.412499999999984e-05, 2.404100000000242e-05, 2.3083999999999605e-05, 2.5930000000000397e-05, 2.119500000000163e-05, 2.0208000000000725e-05, 2.411100000000027e-05, 2.1236000000000865e-05, 2.5985999999998677e-05, 2.4055999999997996e-05, 2.0306000000001184e-05, 2.30969999999997e-05, 2.4056000000001465e-05, 2.213900000000088e-05, 2.3097999999999175e-05, 2.3957999999997537e-05, 2.318100000000059e-05, 2.412499999999984e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.871" endtime="20201115 23:02:12.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.866" endtime="20201115 23:02:12.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.876" endtime="20201115 23:02:12.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.879" endtime="20201115 23:02:12.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.878" endtime="20201115 23:02:12.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.874" endtime="20201115 23:02:12.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.506" endtime="20201115 23:02:12.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.505" endtime="20201115 23:02:12.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.504" endtime="20201115 23:02:12.900"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.903" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.911" endtime="20201115 23:02:12.929"></status>
</kw>
<msg timestamp="20201115 23:02:12.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.909" endtime="20201115 23:02:12.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.931" endtime="20201115 23:02:12.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.933" endtime="20201115 23:02:12.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.907" endtime="20201115 23:02:12.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.905" endtime="20201115 23:02:12.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.943" endtime="20201115 23:02:13.231"></status>
</kw>
<msg timestamp="20201115 23:02:13.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023965236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024002667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.941" endtime="20201115 23:02:13.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023965236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024002667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.236" endtime="20201115 23:02:13.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.244" endtime="20201115 23:02:13.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.938" endtime="20201115 23:02:13.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.937" endtime="20201115 23:02:13.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.251" level="INFO">${RESULT} = [{'time': 0.024002667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7430999999997494e-05, 'source_diff': 3.7430999999997494e-05}, {'time': 0.024033389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:13.248" endtime="20201115 23:02:13.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.264" level="INFO">${ACCURACY} = {'time': [0.024002667, 0.024033389, 0.024063986, 0.024094306, 0.024124792, 0.024154958, 0.024185681, 0.02421575, 0.024246958, 0.024277542, 0.024307472, 0.024337917, 0.024368833, 0.024399556, 0.0244297...</msg>
<status status="PASS" starttime="20201115 23:02:13.252" endtime="20201115 23:02:13.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.269" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.268" endtime="20201115 23:02:13.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.272" level="INFO">VALUE: [3.7430999999997494e-05, 2.5041999999999426e-05, 2.5041999999999426e-05, 2.5000000000000716e-05, 2.5014000000000286e-05, 2.5014000000000286e-05, 2.213900000000088e-05, 2.5014000000000286e-05, 2.5000000000000716e-05, 2.595899999999901e-05, 2.1165999999999546e-05, 2.116699999999902e-05, 2.1179999999999116e-05, 2.3083999999999605e-05, 2.4986000000001146e-05, 2.12090000000012e-05, 2.0263999999999005e-05, 2.312499999999884e-05, 2.30969999999997e-05, 2.1180000000002586e-05, 2.406900000000156e-05, 2.4041999999998426e-05, 2.695900000000001e-05, 2.115299999999945e-05, 2.113899999999988e-05, 2.394500000000091e-05, 2.5014000000000286e-05, 2.118099999999859e-05, 2.4943999999998967e-05, 2.5957999999999537e-05, 2.1193999999998686e-05, 2.2152000000000976e-05, 2.0249999999999435e-05, 2.5916000000000827e-05, 2.590300000000073e-05, 2.4972000000001576e-05, 2.211099999999827e-05, 2.311099999999927e-05, 2.3070000000000035e-05, 2.405500000000199e-05, 2.119500000000163e-05, 2.215300000000045e-05, 2.018099999999759e-05, 2.405500000000199e-05, 2.30969999999997e-05, 2.3098000000002644e-05, 2.308300000000013e-05, 2.690300000000173e-05, 2.5040999999999952e-05, 2.3056000000000465e-05]</msg>
<status status="PASS" starttime="20201115 23:02:13.270" endtime="20201115 23:02:13.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.265" endtime="20201115 23:02:13.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.275" endtime="20201115 23:02:13.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.278" endtime="20201115 23:02:13.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.277" endtime="20201115 23:02:13.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.273" endtime="20201115 23:02:13.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.903" endtime="20201115 23:02:13.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.902" endtime="20201115 23:02:13.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.901" endtime="20201115 23:02:13.300"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.302" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.310" endtime="20201115 23:02:13.332"></status>
</kw>
<msg timestamp="20201115 23:02:13.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.309" endtime="20201115 23:02:13.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.334" endtime="20201115 23:02:13.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.336" endtime="20201115 23:02:13.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.306" endtime="20201115 23:02:13.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.304" endtime="20201115 23:02:13.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.346" endtime="20201115 23:02:13.635"></status>
</kw>
<msg timestamp="20201115 23:02:13.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026686597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026724028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.344" endtime="20201115 23:02:13.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026686597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026724028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.639" endtime="20201115 23:02:13.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.647" endtime="20201115 23:02:13.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.341" endtime="20201115 23:02:13.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.340" endtime="20201115 23:02:13.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.654" level="INFO">${RESULT} = [{'time': 0.026724028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7431000000000964e-05, 'source_diff': 3.7431000000000964e-05}, {'time': 0.026754056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:13.651" endtime="20201115 23:02:13.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.667" level="INFO">${ACCURACY} = {'time': [0.026724028, 0.026754056, 0.026784569, 0.026815236, 0.026846069, 0.026876583, 0.026907111, 0.026937347, 0.026968361, 0.026998958, 0.027028986, 0.027059681, 0.027090542, 0.027120514, 0.027150...</msg>
<status status="PASS" starttime="20201115 23:02:13.655" endtime="20201115 23:02:13.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.672" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.671" endtime="20201115 23:02:13.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.675" level="INFO">VALUE: [3.7431000000000964e-05, 2.6013999999997817e-05, 2.308300000000013e-05, 2.2985999999999146e-05, 2.4957999999998537e-05, 2.2151999999997507e-05, 2.1180000000002586e-05, 2.4986000000001146e-05, 2.212500000000131e-05, 2.5014000000000286e-05, 2.5000000000000716e-05, 2.594499999999944e-05, 2.311099999999927e-05, 2.212499999999784e-05, 2.5000000000000716e-05, 2.212500000000131e-05, 2.4056000000001465e-05, 2.308300000000013e-05, 2.406900000000156e-05, 2.5000000000000716e-05, 2.0222000000000295e-05, 2.6819000000000842e-05, 2.113899999999988e-05, 2.2138000000001407e-05, 2.213900000000088e-05, 2.1151999999999976e-05, 2.505500000000299e-05, 2.405500000000199e-05, 2.119500000000163e-05, 2.311100000000274e-05, 2.118100000000206e-05, 2.6916000000001827e-05, 2.5027999999999856e-05, 2.5971999999999107e-05, 2.212500000000131e-05, 2.312500000000231e-05, 2.311099999999927e-05, 2.4041999999998426e-05, 2.595899999999901e-05, 2.211099999999827e-05, 2.218099999999959e-05, 2.2207999999999256e-05, 2.4056000000001465e-05, 2.4040999999998952e-05, 2.4041999999998426e-05, 2.311099999999927e-05, 2.405500000000199e-05, 2.69309999999974e-05, 2.5000000000000716e-05, 2.212500000000131e-05]</msg>
<status status="PASS" starttime="20201115 23:02:13.674" endtime="20201115 23:02:13.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.669" endtime="20201115 23:02:13.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.679" endtime="20201115 23:02:13.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.683" endtime="20201115 23:02:13.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.681" endtime="20201115 23:02:13.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.677" endtime="20201115 23:02:13.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.303" endtime="20201115 23:02:13.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.301" endtime="20201115 23:02:13.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.300" endtime="20201115 23:02:13.704"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.707" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.715" endtime="20201115 23:02:13.734"></status>
</kw>
<msg timestamp="20201115 23:02:13.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.713" endtime="20201115 23:02:13.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.736" endtime="20201115 23:02:13.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.744" endtime="20201115 23:02:13.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.711" endtime="20201115 23:02:13.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.709" endtime="20201115 23:02:13.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.754" endtime="20201115 23:02:14.041"></status>
</kw>
<msg timestamp="20201115 23:02:14.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023767667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023799347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.752" endtime="20201115 23:02:14.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023767667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023799347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.045" endtime="20201115 23:02:14.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.054" endtime="20201115 23:02:14.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.750" endtime="20201115 23:02:14.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.748" endtime="20201115 23:02:14.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.060" level="INFO">${RESULT} = [{'time': 0.023799347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.167999999999921e-05, 'source_diff': 3.167999999999921e-05}, {'time': 0.023829292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:14.057" endtime="20201115 23:02:14.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.075" level="INFO">${ACCURACY} = {'time': [0.023799347, 0.023829292, 0.023859972, 0.023890708, 0.023920917, 0.023951931, 0.023981625, 0.024012778, 0.024042681, 0.024074, 0.024104486, 0.024135097, 0.024165333, 0.024195653, 0.024226222...</msg>
<status status="PASS" starttime="20201115 23:02:14.061" endtime="20201115 23:02:14.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.080" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.079" endtime="20201115 23:02:14.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.082" level="INFO">VALUE: [3.167999999999921e-05, 2.0291999999998145e-05, 2.311099999999927e-05, 2.306900000000056e-05, 2.212500000000131e-05, 2.6888999999998692e-05, 2.3056000000000465e-05, 2.213899999999741e-05, 2.213900000000088e-05, 2.5000000000000716e-05, 2.115300000000292e-05, 2.5972000000002576e-05, 2.029100000000214e-05, 2.5972000000002576e-05, 2.4999999999997247e-05, 2.4986000000001146e-05, 2.116699999999902e-05, 2.5014000000000286e-05, 2.309700000000317e-05, 2.4027999999998856e-05, 2.5943999999999967e-05, 2.212499999999784e-05, 2.30969999999997e-05, 2.1221999999997826e-05, 2.4084000000000605e-05, 2.213900000000088e-05, 2.215300000000045e-05, 2.5055999999998996e-05, 2.1221999999997826e-05, 2.1179999999999116e-05, 2.594500000000291e-05, 2.018100000000106e-05, 2.4070000000001035e-05, 2.0249999999999435e-05, 2.6027999999997387e-05, 2.594499999999944e-05, 2.588900000000116e-05, 2.0222000000000295e-05, 2.597299999999858e-05, 2.212500000000131e-05, 2.408300000000113e-05, 2.118099999999859e-05, 2.0208000000000725e-05, 2.4040999999998952e-05, 2.408300000000113e-05, 2.5082999999998662e-05, 2.5055999999998996e-05, 2.4986000000001146e-05, 2.595899999999901e-05, 2.1180000000002586e-05]</msg>
<status status="PASS" starttime="20201115 23:02:14.081" endtime="20201115 23:02:14.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.076" endtime="20201115 23:02:14.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.086" endtime="20201115 23:02:14.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.089" endtime="20201115 23:02:14.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.088" endtime="20201115 23:02:14.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.084" endtime="20201115 23:02:14.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.707" endtime="20201115 23:02:14.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.706" endtime="20201115 23:02:14.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.705" endtime="20201115 23:02:14.110"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.113" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.121" endtime="20201115 23:02:14.141"></status>
</kw>
<msg timestamp="20201115 23:02:14.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.120" endtime="20201115 23:02:14.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.142" endtime="20201115 23:02:14.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.145" endtime="20201115 23:02:14.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.117" endtime="20201115 23:02:14.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.115" endtime="20201115 23:02:14.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.154" endtime="20201115 23:02:14.439"></status>
</kw>
<msg timestamp="20201115 23:02:14.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024667194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024688361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.152" endtime="20201115 23:02:14.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024667194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024688361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.443" endtime="20201115 23:02:14.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.452" endtime="20201115 23:02:14.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.150" endtime="20201115 23:02:14.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.148" endtime="20201115 23:02:14.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.459" level="INFO">${RESULT} = [{'time': 0.024688361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.116699999999902e-05, 'source_diff': 2.116699999999902e-05}, {'time': 0.024718514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:14.455" endtime="20201115 23:02:14.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.472" level="INFO">${ACCURACY} = {'time': [0.024688361, 0.024718514, 0.024749333, 0.024779694, 0.024810083, 0.024840597, 0.024871833, 0.024901736, 0.024932597, 0.024962667, 0.024993153, 0.025023722, 0.025054736, 0.025085222, 0.025115...</msg>
<status status="PASS" starttime="20201115 23:02:14.460" endtime="20201115 23:02:14.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.477" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.476" endtime="20201115 23:02:14.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.479" level="INFO">VALUE: [2.116699999999902e-05, 2.0208000000000725e-05, 2.5957999999999537e-05, 2.4986000000001146e-05, 2.5027000000000382e-05, 2.315299999999798e-05, 2.6874999999999122e-05, 2.308300000000013e-05, 2.30969999999997e-05, 2.590300000000073e-05, 2.594499999999944e-05, 2.4986000000001146e-05, 2.5943999999999967e-05, 2.5957999999999537e-05, 2.5070000000002035e-05, 2.2166000000000546e-05, 2.30969999999997e-05, 2.3083999999999605e-05, 2.4985999999997677e-05, 2.5000000000000716e-05, 2.113899999999988e-05, 2.122300000000077e-05, 2.2137999999997937e-05, 2.30969999999997e-05, 2.5971999999999107e-05, 2.597299999999858e-05, 2.4055999999997996e-05, 2.216700000000002e-05, 2.118099999999859e-05, 2.594499999999944e-05, 2.5014000000000286e-05, 2.5068999999999092e-05, 2.213900000000088e-05, 2.404100000000242e-05, 2.1235999999997396e-05, 2.3151999999998507e-05, 2.311099999999927e-05, 2.59170000000003e-05, 2.212500000000131e-05, 2.1193999999998686e-05, 2.69309999999974e-05, 2.5014000000000286e-05, 2.211100000000174e-05, 2.5957999999999537e-05, 2.022299999999977e-05, 2.0278000000002044e-05, 2.12090000000012e-05, 2.5055999999998996e-05, 2.6958000000000537e-05, 2.1194000000002156e-05]</msg>
<status status="PASS" starttime="20201115 23:02:14.478" endtime="20201115 23:02:14.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.473" endtime="20201115 23:02:14.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.482" endtime="20201115 23:02:14.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.486" endtime="20201115 23:02:14.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.484" endtime="20201115 23:02:14.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.481" endtime="20201115 23:02:14.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.113" endtime="20201115 23:02:14.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.112" endtime="20201115 23:02:14.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.111" endtime="20201115 23:02:14.508"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.510" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.518" endtime="20201115 23:02:14.537"></status>
</kw>
<msg timestamp="20201115 23:02:14.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.517" endtime="20201115 23:02:14.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.539" endtime="20201115 23:02:14.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.541" endtime="20201115 23:02:14.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.514" endtime="20201115 23:02:14.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.512" endtime="20201115 23:02:14.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.550" endtime="20201115 23:02:14.836"></status>
</kw>
<msg timestamp="20201115 23:02:14.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024446681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024480264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.549" endtime="20201115 23:02:14.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024446681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024480264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.841" endtime="20201115 23:02:14.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.849" endtime="20201115 23:02:14.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.546" endtime="20201115 23:02:14.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.545" endtime="20201115 23:02:14.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.856" level="INFO">${RESULT} = [{'time': 0.024480264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3583000000000224e-05, 'source_diff': 3.3583000000000224e-05}, {'time': 0.024511278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:14.852" endtime="20201115 23:02:14.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.869" level="INFO">${ACCURACY} = {'time': [0.024480264, 0.024511278, 0.024541472, 0.024572528, 0.024602236, 0.024632792, 0.024663333, 0.024693806, 0.024725, 0.024755431, 0.024785986, 0.024816514, 0.024846361, 0.024877014, 0.024907361...</msg>
<status status="PASS" starttime="20201115 23:02:14.857" endtime="20201115 23:02:14.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.874" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.873" endtime="20201115 23:02:14.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.876" level="INFO">VALUE: [3.3583000000000224e-05, 2.118100000000206e-05, 2.212500000000131e-05, 2.4027999999998856e-05, 2.212499999999784e-05, 2.497300000000105e-05, 2.0193999999997686e-05, 2.593099999999987e-05, 2.3986000000000146e-05, 2.4028000000002325e-05, 2.4041999999998426e-05, 2.316700000000102e-05, 2.0208000000000725e-05, 2.6013999999997817e-05, 2.5971999999999107e-05, 2.690300000000173e-05, 2.4055999999997996e-05, 2.4027999999998856e-05, 2.4999999999997247e-05, 2.3083999999999605e-05, 2.5000000000000716e-05, 2.313900000000188e-05, 2.5943999999999967e-05, 2.3056000000000465e-05, 2.5055999999998996e-05, 2.116699999999902e-05, 2.116699999999902e-05, 2.4013999999999286e-05, 2.20969999999987e-05, 2.5930000000000397e-05, 2.116700000000249e-05, 2.0222000000000295e-05, 2.5972000000002576e-05, 2.0235999999999865e-05, 2.212500000000131e-05, 2.0235999999999865e-05, 2.019500000000063e-05, 2.411100000000027e-05, 2.3986000000000146e-05, 2.0208000000000725e-05, 2.4068999999998092e-05, 2.0208000000000725e-05, 2.5000000000000716e-05, 2.5943999999999967e-05, 2.3097999999999175e-05, 2.5014000000000286e-05, 2.5943999999999967e-05, 2.594499999999944e-05, 2.0208000000000725e-05, 2.4042000000001895e-05]</msg>
<status status="PASS" starttime="20201115 23:02:14.875" endtime="20201115 23:02:14.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.870" endtime="20201115 23:02:14.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.880" endtime="20201115 23:02:14.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.883" endtime="20201115 23:02:14.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.882" endtime="20201115 23:02:14.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.878" endtime="20201115 23:02:14.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.511" endtime="20201115 23:02:14.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.509" endtime="20201115 23:02:14.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.508" endtime="20201115 23:02:14.905"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.907" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.915" endtime="20201115 23:02:14.934"></status>
</kw>
<msg timestamp="20201115 23:02:14.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.914" endtime="20201115 23:02:14.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.935" endtime="20201115 23:02:14.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.938" endtime="20201115 23:02:14.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.911" endtime="20201115 23:02:14.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.909" endtime="20201115 23:02:14.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.947" endtime="20201115 23:02:15.233"></status>
</kw>
<msg timestamp="20201115 23:02:15.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024270014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024303681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.946" endtime="20201115 23:02:15.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024270014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024303681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.237" endtime="20201115 23:02:15.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.245" endtime="20201115 23:02:15.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.943" endtime="20201115 23:02:15.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.941" endtime="20201115 23:02:15.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.252" level="INFO">${RESULT} = [{'time': 0.024303681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.366700000000111e-05, 'source_diff': 3.366700000000111e-05}, {'time': 0.024333361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:15.249" endtime="20201115 23:02:15.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.265" level="INFO">${ACCURACY} = {'time': [0.024303681, 0.024333361, 0.024364653, 0.024394792, 0.024425361, 0.024455833, 0.024485903, 0.024516528, 0.024547819, 0.024577889, 0.024608069, 0.024639181, 0.024669236, 0.024700431, 0.024730...</msg>
<status status="PASS" starttime="20201115 23:02:15.253" endtime="20201115 23:02:15.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.270" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.269" endtime="20201115 23:02:15.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.273" level="INFO">VALUE: [3.366700000000111e-05, 2.405500000000199e-05, 2.593099999999987e-05, 2.0305999999997715e-05, 2.4027999999998856e-05, 2.1151999999999976e-05, 2.5000000000000716e-05, 2.5985999999998677e-05, 2.5012999999997343e-05, 2.118099999999859e-05, 2.212500000000131e-05, 2.594499999999944e-05, 2.6042000000000426e-05, 2.119499999999816e-05, 2.4041999999998426e-05, 2.212500000000131e-05, 2.5944000000003437e-05, 2.3083999999999605e-05, 2.212499999999784e-05, 2.213900000000088e-05, 2.311099999999927e-05, 2.5943999999999967e-05, 2.215299999999698e-05, 2.6930000000001397e-05, 2.215300000000045e-05, 2.3165999999998077e-05, 2.595899999999901e-05, 2.3028000000001325e-05, 2.691699999999783e-05, 2.4985999999997677e-05, 2.2166000000000546e-05, 2.5971999999999107e-05, 2.212500000000131e-05, 2.5971999999999107e-05, 2.213900000000088e-05, 2.5971999999999107e-05, 2.212500000000131e-05, 2.4027999999998856e-05, 2.311099999999927e-05, 2.311099999999927e-05, 2.5000000000000716e-05, 2.1180000000002586e-05, 2.116699999999902e-05, 2.405500000000199e-05, 2.3097999999999175e-05, 2.0249999999999435e-05, 2.4026999999999382e-05, 2.587500000000159e-05, 2.4098000000000175e-05, 2.212500000000131e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.271" endtime="20201115 23:02:15.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.266" endtime="20201115 23:02:15.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.276" endtime="20201115 23:02:15.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.280" endtime="20201115 23:02:15.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.278" endtime="20201115 23:02:15.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.275" endtime="20201115 23:02:15.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.908" endtime="20201115 23:02:15.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.906" endtime="20201115 23:02:15.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.905" endtime="20201115 23:02:15.301"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.303" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.312" endtime="20201115 23:02:15.333"></status>
</kw>
<msg timestamp="20201115 23:02:15.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.310" endtime="20201115 23:02:15.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.335" endtime="20201115 23:02:15.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.337" endtime="20201115 23:02:15.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.308" endtime="20201115 23:02:15.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.305" endtime="20201115 23:02:15.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.346" endtime="20201115 23:02:15.633"></status>
</kw>
<msg timestamp="20201115 23:02:15.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024788889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024797653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.345" endtime="20201115 23:02:15.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024788889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024797653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.637" endtime="20201115 23:02:15.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.646" endtime="20201115 23:02:15.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.342" endtime="20201115 23:02:15.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.340" endtime="20201115 23:02:15.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.653" level="INFO">${RESULT} = [{'time': 0.024797653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999997912e-06, 'source_diff': 8.763999999997912e-06}, {'time': 0.024827625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:15.649" endtime="20201115 23:02:15.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.668" level="INFO">${ACCURACY} = {'time': [0.024797653, 0.024827625, 0.024858681, 0.024888931, 0.024919097, 0.024949958, 0.024980486, 0.025010694, 0.025041694, 0.025072347, 0.025101972, 0.025133014, 0.025163514, 0.025194389, 0.025224...</msg>
<status status="PASS" starttime="20201115 23:02:15.654" endtime="20201115 23:02:15.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.672" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.671" endtime="20201115 23:02:15.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.675" level="INFO">VALUE: [8.763999999997912e-06, 2.59170000000003e-05, 2.3097999999999175e-05, 2.6028000000000856e-05, 2.3166000000001546e-05, 2.313900000000188e-05, 2.30969999999997e-05, 2.308300000000013e-05, 2.4040999999998952e-05, 2.4054999999998522e-05, 2.2180000000000116e-05, 2.5014000000000286e-05, 2.30969999999997e-05, 2.115299999999945e-05, 2.0208000000000725e-05, 2.212499999999784e-05, 2.12090000000012e-05, 2.4084000000000605e-05, 2.5014000000000286e-05, 2.0249999999999435e-05, 2.022299999999977e-05, 2.597300000000205e-05, 2.4056000000001465e-05, 2.3070000000000035e-05, 2.2207999999999256e-05, 2.0179999999998116e-05, 2.118100000000206e-05, 2.5013000000000812e-05, 2.30969999999997e-05, 2.212500000000131e-05, 2.4055999999997996e-05, 2.5916000000000827e-05, 2.1179999999999116e-05, 2.5070000000002035e-05, 2.12770000000001e-05, 2.6930000000001397e-05, 2.4055999999997996e-05, 2.5014000000000286e-05, 2.1193999999998686e-05, 2.30969999999997e-05, 2.404100000000242e-05, 2.212500000000131e-05, 2.594499999999944e-05, 2.5041999999999426e-05, 2.5971999999999107e-05, 2.218100000000306e-05, 2.5013999999996817e-05, 2.5000000000000716e-05, 2.211099999999827e-05, 2.1179999999999116e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.673" endtime="20201115 23:02:15.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.669" endtime="20201115 23:02:15.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.678" endtime="20201115 23:02:15.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.682" endtime="20201115 23:02:15.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.680" endtime="20201115 23:02:15.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.676" endtime="20201115 23:02:15.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.304" endtime="20201115 23:02:15.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.302" endtime="20201115 23:02:15.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.301" endtime="20201115 23:02:15.703"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.706" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.715" endtime="20201115 23:02:15.733"></status>
</kw>
<msg timestamp="20201115 23:02:15.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.713" endtime="20201115 23:02:15.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.735" endtime="20201115 23:02:15.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.738" endtime="20201115 23:02:15.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.710" endtime="20201115 23:02:15.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.708" endtime="20201115 23:02:15.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.747" endtime="20201115 23:02:16.032"></status>
</kw>
<msg timestamp="20201115 23:02:16.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024916722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024955097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.745" endtime="20201115 23:02:16.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024916722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024955097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.037" endtime="20201115 23:02:16.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.045" endtime="20201115 23:02:16.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.742" endtime="20201115 23:02:16.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.741" endtime="20201115 23:02:16.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.052" level="INFO">${RESULT} = [{'time': 0.024955097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8375000000000214e-05, 'source_diff': 3.8375000000000214e-05}, {'time': 0.024985125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:16.049" endtime="20201115 23:02:16.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.066" level="INFO">${ACCURACY} = {'time': [0.024955097, 0.024985125, 0.025016319, 0.025046653, 0.025076639, 0.025107597, 0.025137583, 0.025168347, 0.025198694, 0.025229264, 0.02525975, 0.025290764, 0.025321167, 0.025351236, 0.0253817...</msg>
<status status="PASS" starttime="20201115 23:02:16.053" endtime="20201115 23:02:16.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.070" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.069" endtime="20201115 23:02:16.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.073" level="INFO">VALUE: [3.8375000000000214e-05, 2.4042000000001895e-05, 2.4068999999998092e-05, 2.216700000000002e-05, 2.0235999999999865e-05, 2.412499999999984e-05, 2.405500000000199e-05, 2.5000000000000716e-05, 2.1250000000000435e-05, 2.308300000000013e-05, 2.116700000000249e-05, 2.211100000000174e-05, 2.118099999999859e-05, 2.116699999999902e-05, 2.1165999999999546e-05, 2.594499999999944e-05, 2.2069999999999035e-05, 2.2193999999999686e-05, 2.4985999999997677e-05, 2.308300000000013e-05, 2.4054999999998522e-05, 2.4041999999998426e-05, 2.5000000000000716e-05, 2.1194000000002156e-05, 2.1207999999998256e-05, 2.312499999999884e-05, 2.118099999999859e-05, 2.0222000000000295e-05, 2.4055999999997996e-05, 2.4054999999998522e-05, 2.313900000000188e-05, 2.311099999999927e-05, 2.4013999999999286e-05, 2.019500000000063e-05, 2.0222000000000295e-05, 2.5972000000002576e-05, 2.308300000000013e-05, 2.306900000000056e-05, 2.5014000000000286e-05, 2.6013999999997817e-05, 2.5027999999999856e-05, 2.116699999999902e-05, 2.20969999999987e-05, 2.0222000000000295e-05, 2.6915999999998358e-05, 2.0263999999999005e-05, 2.212500000000131e-05, 2.5014000000000286e-05, 2.0208000000000725e-05, 2.118100000000206e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.071" endtime="20201115 23:02:16.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.066" endtime="20201115 23:02:16.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.076" endtime="20201115 23:02:16.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.079" endtime="20201115 23:02:16.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.078" endtime="20201115 23:02:16.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.074" endtime="20201115 23:02:16.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.706" endtime="20201115 23:02:16.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.704" endtime="20201115 23:02:16.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.703" endtime="20201115 23:02:16.101"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.103" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.111" endtime="20201115 23:02:16.130"></status>
</kw>
<msg timestamp="20201115 23:02:16.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.110" endtime="20201115 23:02:16.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.132" endtime="20201115 23:02:16.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.134" endtime="20201115 23:02:16.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.107" endtime="20201115 23:02:16.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.105" endtime="20201115 23:02:16.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.144" endtime="20201115 23:02:16.432"></status>
</kw>
<msg timestamp="20201115 23:02:16.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023983889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024014639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.142" endtime="20201115 23:02:16.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023983889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024014639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.436" endtime="20201115 23:02:16.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.444" endtime="20201115 23:02:16.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.139" endtime="20201115 23:02:16.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.137" endtime="20201115 23:02:16.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.451" level="INFO">${RESULT} = [{'time': 0.024014639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.074999999999953e-05, 'source_diff': 3.074999999999953e-05}, {'time': 0.024045056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:16.448" endtime="20201115 23:02:16.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.464" level="INFO">${ACCURACY} = {'time': [0.024014639, 0.024045056, 0.024075194, 0.024106597, 0.024136417, 0.024167069, 0.024197681, 0.024227958, 0.024258347, 0.024289514, 0.024319569, 0.024350708, 0.024380528, 0.024411, 0.024442361...</msg>
<status status="PASS" starttime="20201115 23:02:16.452" endtime="20201115 23:02:16.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.469" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.468" endtime="20201115 23:02:16.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.472" level="INFO">VALUE: [3.074999999999953e-05, 2.119499999999816e-05, 2.402700000000285e-05, 2.405500000000199e-05, 2.4042000000001895e-05, 2.4040999999998952e-05, 2.0249999999999435e-05, 2.308300000000013e-05, 2.212499999999784e-05, 2.309700000000317e-05, 2.0235999999999865e-05, 2.212499999999784e-05, 2.4027999999998856e-05, 2.30969999999997e-05, 2.30969999999997e-05, 2.211099999999827e-05, 2.1165999999999546e-05, 2.405500000000199e-05, 2.208299999999913e-05, 2.3083999999999605e-05, 2.5971999999999107e-05, 2.212500000000131e-05, 2.308300000000013e-05, 2.5000000000000716e-05, 2.4028000000002325e-05, 2.0207999999997256e-05, 2.019500000000063e-05, 2.208299999999913e-05, 2.497300000000105e-05, 2.4026999999999382e-05, 2.5971999999999107e-05, 2.40970000000007e-05, 2.5014000000000286e-05, 2.305500000000099e-05, 2.5027999999999856e-05, 2.4069999999997566e-05, 2.593099999999987e-05, 2.5971999999999107e-05, 2.5014000000000286e-05, 2.5943999999999967e-05, 2.311100000000274e-05, 2.213900000000088e-05, 2.412499999999984e-05, 2.4013999999999286e-05, 2.213900000000088e-05, 2.1193999999998686e-05, 2.5041999999999426e-05, 2.5027999999999856e-05, 2.5014000000000286e-05, 2.3068999999997092e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.470" endtime="20201115 23:02:16.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.465" endtime="20201115 23:02:16.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.475" endtime="20201115 23:02:16.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.478" endtime="20201115 23:02:16.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.477" endtime="20201115 23:02:16.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.473" endtime="20201115 23:02:16.499"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.104" endtime="20201115 23:02:16.499"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.102" endtime="20201115 23:02:16.499"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.101" endtime="20201115 23:02:16.500"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.502" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.510" endtime="20201115 23:02:16.534"></status>
</kw>
<msg timestamp="20201115 23:02:16.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.509" endtime="20201115 23:02:16.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.536" endtime="20201115 23:02:16.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.539" endtime="20201115 23:02:16.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.506" endtime="20201115 23:02:16.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.504" endtime="20201115 23:02:16.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.548" endtime="20201115 23:02:16.834"></status>
</kw>
<msg timestamp="20201115 23:02:16.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026951403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026980208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.546" endtime="20201115 23:02:16.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026951403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026980208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.838" endtime="20201115 23:02:16.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.846" endtime="20201115 23:02:16.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.544" endtime="20201115 23:02:16.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.542" endtime="20201115 23:02:16.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.853" level="INFO">${RESULT} = [{'time': 0.026980208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8804999999999803e-05, 'source_diff': 2.8804999999999803e-05}, {'time': 0.027010625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:16.850" endtime="20201115 23:02:16.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.867" level="INFO">${ACCURACY} = {'time': [0.026980208, 0.027010625, 0.02704075, 0.027071917, 0.027101889, 0.027132722, 0.027163278, 0.027193472, 0.027224611, 0.027255014, 0.027285667, 0.027315486, 0.027346611, 0.027376736, 0.0274071...</msg>
<status status="PASS" starttime="20201115 23:02:16.854" endtime="20201115 23:02:16.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.871" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.870" endtime="20201115 23:02:16.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.874" level="INFO">VALUE: [2.8804999999999803e-05, 2.20969999999987e-05, 2.4055999999997996e-05, 2.694500000000044e-05, 2.5971999999999107e-05, 2.5972000000002576e-05, 2.4069999999997566e-05, 2.1193999999998686e-05, 2.308300000000013e-05, 2.211100000000174e-05, 2.3042000000000895e-05, 2.4041999999998426e-05, 2.5027999999999856e-05, 2.0207999999997256e-05, 2.3083999999999605e-05, 2.0235999999999865e-05, 2.3098000000002644e-05, 2.5027999999999856e-05, 2.4082999999997662e-05, 2.494499999999844e-05, 2.1193999999998686e-05, 2.5014000000000286e-05, 2.309700000000317e-05, 2.1151999999999976e-05, 2.4027999999998856e-05, 2.20830000000026e-05, 2.215300000000045e-05, 2.4055999999997996e-05, 2.0235999999999865e-05, 2.311100000000274e-05, 2.30969999999997e-05, 2.5068999999999092e-05, 2.5943999999999967e-05, 2.211099999999827e-05, 2.1207999999998256e-05, 2.313900000000188e-05, 2.5014000000000286e-05, 2.213900000000088e-05, 2.5971999999999107e-05, 2.30969999999997e-05, 2.4027999999998856e-05, 2.0208000000000725e-05, 2.4042000000001895e-05, 2.690299999999826e-05, 2.4041999999998426e-05, 2.5027000000000382e-05, 2.019500000000063e-05, 2.111100000000074e-05, 2.5972000000002576e-05, 2.30969999999997e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.872" endtime="20201115 23:02:16.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.868" endtime="20201115 23:02:16.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.877" endtime="20201115 23:02:16.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.880" endtime="20201115 23:02:16.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.879" endtime="20201115 23:02:16.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.875" endtime="20201115 23:02:16.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.503" endtime="20201115 23:02:16.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.501" endtime="20201115 23:02:16.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.500" endtime="20201115 23:02:16.902"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.904" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.913" endtime="20201115 23:02:16.935"></status>
</kw>
<msg timestamp="20201115 23:02:16.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.911" endtime="20201115 23:02:16.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.936" endtime="20201115 23:02:16.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.939" endtime="20201115 23:02:16.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.909" endtime="20201115 23:02:16.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.906" endtime="20201115 23:02:16.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.948" endtime="20201115 23:02:17.235"></status>
</kw>
<msg timestamp="20201115 23:02:17.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026809333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026832431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.946" endtime="20201115 23:02:17.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026809333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026832431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.239" endtime="20201115 23:02:17.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.248" endtime="20201115 23:02:17.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.944" endtime="20201115 23:02:17.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.942" endtime="20201115 23:02:17.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.255" level="INFO">${RESULT} = [{'time': 0.026832431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3097999999999175e-05, 'source_diff': 2.3097999999999175e-05}, {'time': 0.026862986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:17.251" endtime="20201115 23:02:17.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.269" level="INFO">${ACCURACY} = {'time': [0.026832431, 0.026862986, 0.026893667, 0.026923694, 0.026954528, 0.026985681, 0.027015639, 0.027046208, 0.027076736, 0.027106792, 0.027137847, 0.027168639, 0.027198333, 0.027229569, 0.027259...</msg>
<status status="PASS" starttime="20201115 23:02:17.256" endtime="20201115 23:02:17.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.274" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.273" endtime="20201115 23:02:17.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.277" level="INFO">VALUE: [2.3097999999999175e-05, 2.0207999999997256e-05, 2.3027999999997856e-05, 2.4986000000001146e-05, 2.213899999999741e-05, 2.6000000000001716e-05, 2.1208000000001725e-05, 2.4985999999997677e-05, 2.215300000000045e-05, 2.593099999999987e-05, 2.5846999999998982e-05, 2.59170000000003e-05, 2.308300000000013e-05, 2.5040999999999952e-05, 2.3055999999996996e-05, 2.013899999999888e-05, 2.59170000000003e-05, 2.30969999999997e-05, 2.6929999999997928e-05, 2.215299999999698e-05, 2.308300000000013e-05, 2.213900000000088e-05, 2.213900000000088e-05, 2.3097999999999175e-05, 2.5902000000001257e-05, 2.1165999999999546e-05, 2.3083999999999605e-05, 2.1179999999999116e-05, 2.3083999999999605e-05, 2.311099999999927e-05, 2.5986000000002146e-05, 2.5957999999999537e-05, 2.3056000000000465e-05, 2.594499999999944e-05, 2.4082999999997662e-05, 2.1179999999999116e-05, 2.0235999999999865e-05, 2.3068999999997092e-05, 2.4014000000002755e-05, 2.594499999999944e-05, 2.690300000000173e-05, 2.115299999999945e-05, 2.118099999999859e-05, 2.312499999999884e-05, 2.494500000000191e-05, 2.2180000000000116e-05, 2.30969999999997e-05, 2.309700000000317e-05, 2.212499999999784e-05, 2.311099999999927e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.275" endtime="20201115 23:02:17.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.270" endtime="20201115 23:02:17.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.280" endtime="20201115 23:02:17.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.284" endtime="20201115 23:02:17.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.282" endtime="20201115 23:02:17.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.278" endtime="20201115 23:02:17.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.905" endtime="20201115 23:02:17.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.903" endtime="20201115 23:02:17.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.902" endtime="20201115 23:02:17.305"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.307" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.315" endtime="20201115 23:02:17.336"></status>
</kw>
<msg timestamp="20201115 23:02:17.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.314" endtime="20201115 23:02:17.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.338" endtime="20201115 23:02:17.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.340" endtime="20201115 23:02:17.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.311" endtime="20201115 23:02:17.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.309" endtime="20201115 23:02:17.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.349" endtime="20201115 23:02:17.635"></status>
</kw>
<msg timestamp="20201115 23:02:17.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025442958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025464097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.348" endtime="20201115 23:02:17.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025442958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025464097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.639" endtime="20201115 23:02:17.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.648" endtime="20201115 23:02:17.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.345" endtime="20201115 23:02:17.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.343" endtime="20201115 23:02:17.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.654" level="INFO">${RESULT} = [{'time': 0.025464097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.113899999999988e-05, 'source_diff': 2.113899999999988e-05}, {'time': 0.025494583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:17.651" endtime="20201115 23:02:17.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.668" level="INFO">${ACCURACY} = {'time': [0.025464097, 0.025494583, 0.025525125, 0.025555764, 0.025585861, 0.0256165, 0.025647194, 0.025677931, 0.025708194, 0.025739278, 0.025769764, 0.025799417, 0.025830403, 0.025860611, 0.02589126...</msg>
<status status="PASS" starttime="20201115 23:02:17.655" endtime="20201115 23:02:17.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.672" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.671" endtime="20201115 23:02:17.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.675" level="INFO">VALUE: [2.113899999999988e-05, 2.0235999999999865e-05, 2.215300000000045e-05, 2.4028000000002325e-05, 2.5972000000002576e-05, 2.1222000000001295e-05, 2.2152000000000976e-05, 2.215300000000045e-05, 2.0208000000000725e-05, 2.211100000000174e-05, 2.208299999999913e-05, 2.116700000000249e-05, 2.4041999999998426e-05, 2.5985999999998677e-05, 2.308300000000013e-05, 2.2166000000000546e-05, 2.116699999999902e-05, 2.595900000000248e-05, 2.40970000000007e-05, 2.1180000000002586e-05, 2.4014000000002755e-05, 2.4042000000001895e-05, 2.212500000000131e-05, 2.5000000000000716e-05, 2.4986000000001146e-05, 2.588900000000116e-05, 2.0222000000000295e-05, 2.2152000000000976e-05, 2.215300000000045e-05, 2.212499999999784e-05, 2.4041999999998426e-05, 2.015299999999845e-05, 2.0222000000000295e-05, 2.213899999999741e-05, 2.694500000000044e-05, 2.5943999999999967e-05, 2.1180000000002586e-05, 2.4985999999997677e-05, 2.02090000000002e-05, 2.5027000000000382e-05, 2.0222000000000295e-05, 2.5013999999996817e-05, 2.1179999999999116e-05, 2.119500000000163e-05, 2.4013999999999286e-05, 2.5972000000002576e-05, 2.5971999999999107e-05, 2.308300000000013e-05, 2.12090000000012e-05, 2.5014000000000286e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.673" endtime="20201115 23:02:17.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.669" endtime="20201115 23:02:17.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.678" endtime="20201115 23:02:17.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.682" endtime="20201115 23:02:17.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.680" endtime="20201115 23:02:17.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.677" endtime="20201115 23:02:17.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.308" endtime="20201115 23:02:17.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.306" endtime="20201115 23:02:17.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.305" endtime="20201115 23:02:17.703"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.705" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.714" endtime="20201115 23:02:17.738"></status>
</kw>
<msg timestamp="20201115 23:02:17.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.712" endtime="20201115 23:02:17.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.740" endtime="20201115 23:02:17.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.742" endtime="20201115 23:02:17.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.710" endtime="20201115 23:02:17.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.708" endtime="20201115 23:02:17.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.752" endtime="20201115 23:02:18.040"></status>
</kw>
<msg timestamp="20201115 23:02:18.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024082986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024096514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.751" endtime="20201115 23:02:18.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024082986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024096514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.044" endtime="20201115 23:02:18.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.052" endtime="20201115 23:02:18.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.748" endtime="20201115 23:02:18.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.746" endtime="20201115 23:02:18.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.059" level="INFO">${RESULT} = [{'time': 0.024096514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.024127139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:18.056" endtime="20201115 23:02:18.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.072" level="INFO">${ACCURACY} = {'time': [0.024096514, 0.024127139, 0.024157542, 0.024187917, 0.024218722, 0.024249417, 0.024279903, 0.024310264, 0.024340278, 0.024370917, 0.024401472, 0.024432625, 0.024462444, 0.024493736, 0.024524...</msg>
<status status="PASS" starttime="20201115 23:02:18.060" endtime="20201115 23:02:18.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.077" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.076" endtime="20201115 23:02:18.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.080" level="INFO">VALUE: [1.3527999999998763e-05, 2.2235999999998396e-05, 2.595899999999901e-05, 2.4070000000001035e-05, 2.5972000000002576e-05, 2.5027999999999856e-05, 2.595899999999901e-05, 2.312500000000231e-05, 2.412499999999984e-05, 2.311099999999927e-05, 2.405500000000199e-05, 2.693100000000087e-05, 2.4026999999999382e-05, 2.3054999999997522e-05, 2.4027999999998856e-05, 2.1165999999999546e-05, 2.308300000000013e-05, 2.3137999999998937e-05, 2.6013999999997817e-05, 2.0235999999999865e-05, 2.0208000000000725e-05, 2.308300000000013e-05, 2.595899999999901e-05, 2.212499999999784e-05, 2.118099999999859e-05, 2.0249999999999435e-05, 2.313900000000188e-05, 2.313900000000188e-05, 2.5055999999998996e-05, 2.405500000000199e-05, 2.1151999999999976e-05, 2.4027999999998856e-05, 2.3054999999997522e-05, 2.5943999999999967e-05, 2.4986000000001146e-05, 2.6013999999997817e-05, 2.5014000000000286e-05, 2.5014000000000286e-05, 2.4042000000001895e-05, 2.593099999999987e-05, 2.213900000000088e-05, 2.3098000000002644e-05, 2.5013999999996817e-05, 2.2221999999998826e-05, 2.5999999999998247e-05, 2.309700000000317e-05, 2.2069999999999035e-05, 2.3040999999997952e-05, 2.123700000000034e-05, 2.4151999999999507e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.078" endtime="20201115 23:02:18.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.073" endtime="20201115 23:02:18.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.083" endtime="20201115 23:02:18.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.087" endtime="20201115 23:02:18.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.085" endtime="20201115 23:02:18.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.082" endtime="20201115 23:02:18.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.706" endtime="20201115 23:02:18.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.704" endtime="20201115 23:02:18.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.703" endtime="20201115 23:02:18.108"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.110" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.119" endtime="20201115 23:02:18.140"></status>
</kw>
<msg timestamp="20201115 23:02:18.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.117" endtime="20201115 23:02:18.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.141" endtime="20201115 23:02:18.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.144" endtime="20201115 23:02:18.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.114" endtime="20201115 23:02:18.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.112" endtime="20201115 23:02:18.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.153" endtime="20201115 23:02:18.439"></status>
</kw>
<msg timestamp="20201115 23:02:18.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026208514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026237361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.151" endtime="20201115 23:02:18.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026208514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026237361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.443" endtime="20201115 23:02:18.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.452" endtime="20201115 23:02:18.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.149" endtime="20201115 23:02:18.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.147" endtime="20201115 23:02:18.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.459" level="INFO">${RESULT} = [{'time': 0.026237361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8847000000001982e-05, 'source_diff': 2.8847000000001982e-05}, {'time': 0.026267542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:18.455" endtime="20201115 23:02:18.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.472" level="INFO">${ACCURACY} = {'time': [0.026237361, 0.026267542, 0.026298181, 0.026328514, 0.026359847, 0.026389569, 0.026420389, 0.026450875, 0.026481181, 0.026512014, 0.026542083, 0.026572972, 0.026603236, 0.026633639, 0.026664...</msg>
<status status="PASS" starttime="20201115 23:02:18.460" endtime="20201115 23:02:18.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.477" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.476" endtime="20201115 23:02:18.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.479" level="INFO">VALUE: [2.8847000000001982e-05, 2.118100000000206e-05, 2.412499999999984e-05, 2.5971999999999107e-05, 2.5027999999999856e-05, 1.927700000000157e-05, 2.6888999999998692e-05, 2.5957999999999537e-05, 2.3070000000000035e-05, 2.213900000000088e-05, 2.5957999999999537e-05, 2.1165999999999546e-05, 2.0222000000000295e-05, 2.5971999999999107e-05, 2.118099999999859e-05, 2.306900000000056e-05, 2.211099999999827e-05, 2.4971999999998107e-05, 2.3083999999999605e-05, 2.119499999999816e-05, 2.5971999999999107e-05, 2.404100000000242e-05, 2.1165999999999546e-05, 2.4070000000001035e-05, 2.308300000000013e-05, 2.593100000000334e-05, 2.213900000000088e-05, 2.115300000000292e-05, 2.206899999999956e-05, 2.113899999999988e-05, 2.1193999999998686e-05, 2.306900000000056e-05, 2.22090000000022e-05, 2.4054999999998522e-05, 2.4985999999997677e-05, 2.1179999999999116e-05, 2.6833000000000412e-05, 2.211099999999827e-05, 2.2180000000000116e-05, 2.0249999999999435e-05, 2.116700000000249e-05, 2.5972000000002576e-05, 2.4028000000002325e-05, 2.5027000000000382e-05, 2.116699999999902e-05, 2.4055999999997996e-05, 2.211100000000174e-05, 2.212499999999784e-05, 2.116699999999902e-05, 2.213900000000088e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.478" endtime="20201115 23:02:18.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.473" endtime="20201115 23:02:18.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.483" endtime="20201115 23:02:18.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.486" endtime="20201115 23:02:18.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.484" endtime="20201115 23:02:18.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.481" endtime="20201115 23:02:18.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.111" endtime="20201115 23:02:18.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.109" endtime="20201115 23:02:18.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.108" endtime="20201115 23:02:18.507"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.510" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.518" endtime="20201115 23:02:18.537"></status>
</kw>
<msg timestamp="20201115 23:02:18.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.516" endtime="20201115 23:02:18.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.538" endtime="20201115 23:02:18.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.541" endtime="20201115 23:02:18.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.514" endtime="20201115 23:02:18.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.512" endtime="20201115 23:02:18.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.550" endtime="20201115 23:02:18.837"></status>
</kw>
<msg timestamp="20201115 23:02:18.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023823125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023831903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.548" endtime="20201115 23:02:18.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023823125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023831903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.842" endtime="20201115 23:02:18.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.854" endtime="20201115 23:02:18.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.546" endtime="20201115 23:02:18.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.544" endtime="20201115 23:02:18.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.861" level="INFO">${RESULT} = [{'time': 0.023831903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.023862806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:18.858" endtime="20201115 23:02:18.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.876" level="INFO">${ACCURACY} = {'time': [0.023831903, 0.023862806, 0.023892778, 0.023924083, 0.023954556, 0.023985125, 0.024015444, 0.024046139, 0.024076, 0.024106417, 0.024137403, 0.024167514, 0.024198333, 0.024228806, 0.024259528...</msg>
<status status="PASS" starttime="20201115 23:02:18.862" endtime="20201115 23:02:18.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.880" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.879" endtime="20201115 23:02:18.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.883" level="INFO">VALUE: [8.778000000000952e-06, 2.4070000000001035e-05, 2.116699999999902e-05, 2.6040999999997483e-05, 2.3070000000000035e-05, 2.4986000000001146e-05, 2.211100000000174e-05, 2.5027999999999856e-05, 2.0235999999999865e-05, 2.213900000000088e-05, 2.4986000000001146e-05, 2.308300000000013e-05, 2.5971999999999107e-05, 2.02090000000002e-05, 2.495899999999801e-05, 2.0235999999999865e-05, 2.5972000000002576e-05, 2.2221999999998826e-05, 2.6985999999999677e-05, 2.5000000000000716e-05, 2.3097999999999175e-05, 2.4082999999997662e-05, 2.112500000000031e-05, 2.590300000000073e-05, 2.311099999999927e-05, 2.4096999999997232e-05, 2.3042000000000895e-05, 2.0179999999998116e-05, 2.4943999999998967e-05, 2.1193999999998686e-05, 2.2152000000000976e-05, 2.0235999999999865e-05, 2.5957999999999537e-05, 2.0235999999999865e-05, 2.1236000000000865e-05, 2.5014000000000286e-05, 2.594499999999944e-05, 2.4040999999998952e-05, 2.116699999999902e-05, 2.4040999999998952e-05, 2.2152000000000976e-05, 2.1193999999998686e-05, 2.3083999999999605e-05, 2.119499999999816e-05, 2.5957999999999537e-05, 2.2112000000001214e-05, 2.306900000000056e-05, 2.3083999999999605e-05, 2.0222000000000295e-05, 2.4041999999998426e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.881" endtime="20201115 23:02:18.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.877" endtime="20201115 23:02:18.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.886" endtime="20201115 23:02:18.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.889" endtime="20201115 23:02:18.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.888" endtime="20201115 23:02:18.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.884" endtime="20201115 23:02:18.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.510" endtime="20201115 23:02:18.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.508" endtime="20201115 23:02:18.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.508" endtime="20201115 23:02:18.911"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.913" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.921" endtime="20201115 23:02:18.944"></status>
</kw>
<msg timestamp="20201115 23:02:18.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.920" endtime="20201115 23:02:18.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.946" endtime="20201115 23:02:18.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.948" endtime="20201115 23:02:18.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.917" endtime="20201115 23:02:18.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.915" endtime="20201115 23:02:18.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.958" endtime="20201115 23:02:19.244"></status>
</kw>
<msg timestamp="20201115 23:02:19.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027360097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027376514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.956" endtime="20201115 23:02:19.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027360097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027376514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.248" endtime="20201115 23:02:19.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.256" endtime="20201115 23:02:19.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.953" endtime="20201115 23:02:19.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.951" endtime="20201115 23:02:19.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.263" level="INFO">${RESULT} = [{'time': 0.027376514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.641700000000121e-05, 'source_diff': 1.641700000000121e-05}, {'time': 0.027407556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:19.260" endtime="20201115 23:02:19.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.277" level="INFO">${ACCURACY} = {'time': [0.027376514, 0.027407556, 0.027437403, 0.027468208, 0.027498556, 0.027529347, 0.027559861, 0.027590472, 0.027621333, 0.027651042, 0.027682056, 0.027712389, 0.027742903, 0.027773931, 0.027804...</msg>
<status status="PASS" starttime="20201115 23:02:19.264" endtime="20201115 23:02:19.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.281" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.280" endtime="20201115 23:02:19.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.284" level="INFO">VALUE: [1.641700000000121e-05, 2.3083999999999605e-05, 2.3027999999997856e-05, 2.212500000000131e-05, 2.498700000000062e-05, 2.4068999999998092e-05, 2.215300000000045e-05, 2.5958000000003006e-05, 2.311100000000274e-05, 2.3097999999999175e-05, 2.118099999999859e-05, 2.30969999999997e-05, 2.215300000000045e-05, 2.69170000000013e-05, 2.4028000000002325e-05, 2.111100000000074e-05, 2.5943999999999967e-05, 2.020899999999673e-05, 2.690300000000173e-05, 2.4069999999997566e-05, 2.0222000000000295e-05, 2.5957999999999537e-05, 2.404100000000242e-05, 2.412499999999984e-05, 2.116699999999902e-05, 2.0235999999999865e-05, 2.116699999999902e-05, 2.4042000000001895e-05, 1.9292000000000614e-05, 2.6888999999998692e-05, 2.5943999999999967e-05, 2.115299999999945e-05, 2.3999999999999716e-05, 2.116699999999902e-05, 2.118099999999859e-05, 2.308300000000013e-05, 2.211100000000174e-05, 2.404100000000242e-05, 2.4042000000001895e-05, 2.5971999999999107e-05, 2.115300000000292e-05, 2.5957999999999537e-05, 2.1180000000002586e-05, 2.5027999999999856e-05, 2.30969999999997e-05, 2.4042000000001895e-05, 2.212499999999784e-05, 2.306900000000056e-05, 2.0208000000000725e-05, 2.116699999999902e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.282" endtime="20201115 23:02:19.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.277" endtime="20201115 23:02:19.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.287" endtime="20201115 23:02:19.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.290" endtime="20201115 23:02:19.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.289" endtime="20201115 23:02:19.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.285" endtime="20201115 23:02:19.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.914" endtime="20201115 23:02:19.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.912" endtime="20201115 23:02:19.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.911" endtime="20201115 23:02:19.311"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.314" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.322" endtime="20201115 23:02:19.341"></status>
</kw>
<msg timestamp="20201115 23:02:19.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.321" endtime="20201115 23:02:19.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.342" endtime="20201115 23:02:19.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.345" endtime="20201115 23:02:19.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.318" endtime="20201115 23:02:19.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.316" endtime="20201115 23:02:19.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.354" endtime="20201115 23:02:19.641"></status>
</kw>
<msg timestamp="20201115 23:02:19.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023504806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023537458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.353" endtime="20201115 23:02:19.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023504806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023537458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.645" endtime="20201115 23:02:19.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.653" endtime="20201115 23:02:19.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.350" endtime="20201115 23:02:19.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.348" endtime="20201115 23:02:19.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.660" level="INFO">${RESULT} = [{'time': 0.023537458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.265200000000107e-05, 'source_diff': 3.265200000000107e-05}, {'time': 0.023567458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:19.657" endtime="20201115 23:02:19.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.674" level="INFO">${ACCURACY} = {'time': [0.023537458, 0.023567458, 0.023598097, 0.023628167, 0.023659403, 0.02369, 0.023720069, 0.023750208, 0.023781444, 0.023811583, 0.023841681, 0.023872583, 0.023903472, 0.023933958, 0.023964403,...</msg>
<status status="PASS" starttime="20201115 23:02:19.661" endtime="20201115 23:02:19.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.678" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.677" endtime="20201115 23:02:19.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.681" level="INFO">VALUE: [3.265200000000107e-05, 2.4026999999999382e-05, 2.412499999999984e-05, 2.4041999999998426e-05, 2.5971999999999107e-05, 2.5957999999999537e-05, 2.4972000000001576e-05, 2.0193999999997686e-05, 2.5971999999999107e-05, 2.405500000000199e-05, 2.3070000000000035e-05, 2.5014000000000286e-05, 2.5943999999999967e-05, 2.0222000000000295e-05, 2.311099999999927e-05, 2.5972000000002576e-05, 2.5957999999999537e-05, 2.6930000000001397e-05, 2.212500000000131e-05, 2.5971999999999107e-05, 2.4026999999999382e-05, 2.5000000000000716e-05, 1.930500000000071e-05, 2.0292000000001614e-05, 2.6013000000001812e-05, 2.4027999999998856e-05, 2.5957999999999537e-05, 2.111100000000074e-05, 1.9249999999998435e-05, 2.116699999999902e-05, 2.406900000000156e-05, 2.590299999999726e-05, 2.119499999999816e-05, 2.4985999999997677e-05, 2.406900000000156e-05, 2.691699999999783e-05, 2.5957999999999537e-05, 2.116699999999902e-05, 2.405500000000199e-05, 2.405500000000199e-05, 2.0222000000000295e-05, 2.3097999999999175e-05, 2.0180000000001586e-05, 2.311099999999927e-05, 2.4055999999997996e-05, 2.0222000000000295e-05, 2.5000000000000716e-05, 2.3026999999998382e-05, 2.593100000000334e-05, 2.0249999999999435e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.679" endtime="20201115 23:02:19.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.675" endtime="20201115 23:02:19.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.684" endtime="20201115 23:02:19.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.687" endtime="20201115 23:02:19.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.686" endtime="20201115 23:02:19.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.682" endtime="20201115 23:02:19.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.314" endtime="20201115 23:02:19.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.313" endtime="20201115 23:02:19.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.312" endtime="20201115 23:02:19.709"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.711" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.721" endtime="20201115 23:02:19.744"></status>
</kw>
<msg timestamp="20201115 23:02:19.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.719" endtime="20201115 23:02:19.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.745" endtime="20201115 23:02:19.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.748" endtime="20201115 23:02:19.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.716" endtime="20201115 23:02:19.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.714" endtime="20201115 23:02:19.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.757" endtime="20201115 23:02:20.043"></status>
</kw>
<msg timestamp="20201115 23:02:20.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028125625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028150611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.755" endtime="20201115 23:02:20.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028125625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028150611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.047" endtime="20201115 23:02:20.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.055" endtime="20201115 23:02:20.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.753" endtime="20201115 23:02:20.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.751" endtime="20201115 23:02:20.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.062" level="INFO">${RESULT} = [{'time': 0.028150611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4985999999997677e-05, 'source_diff': 2.4985999999997677e-05}, {'time': 0.028181375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:20.059" endtime="20201115 23:02:20.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.075" level="INFO">${ACCURACY} = {'time': [0.028150611, 0.028181375, 0.028211639, 0.028242042, 0.028273278, 0.028303486, 0.028333778, 0.028364056, 0.028395222, 0.028425319, 0.028455917, 0.028486028, 0.028516875, 0.028547194, 0.028577...</msg>
<status status="PASS" starttime="20201115 23:02:20.063" endtime="20201115 23:02:20.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.080" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.079" endtime="20201115 23:02:20.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.082" level="INFO">VALUE: [2.4985999999997677e-05, 2.216700000000002e-05, 2.118099999999859e-05, 2.212499999999784e-05, 2.212499999999784e-05, 2.212499999999784e-05, 2.5971999999999107e-05, 2.5027999999999856e-05, 2.3028000000001325e-05, 2.0166000000002016e-05, 2.3999999999999716e-05, 2.215300000000045e-05, 2.5986000000002146e-05, 2.308300000000013e-05, 2.119500000000163e-05, 2.12090000000012e-05, 2.594499999999944e-05, 2.312500000000231e-05, 2.0235999999999865e-05, 2.215300000000045e-05, 2.0222000000000295e-05, 2.0235999999999865e-05, 2.3070000000000035e-05, 2.595899999999901e-05, 2.6013999999997817e-05, 2.693100000000087e-05, 2.4070000000001035e-05, 2.597299999999858e-05, 2.1179999999999116e-05, 2.304100000000142e-05, 2.6972000000000107e-05, 2.018100000000106e-05, 2.215300000000045e-05, 2.6902000000002257e-05, 2.1193999999998686e-05, 2.690300000000173e-05, 2.595899999999901e-05, 2.5055999999998996e-05, 2.115299999999945e-05, 2.3986000000000146e-05, 2.213899999999741e-05, 2.2207999999999256e-05, 2.4041999999998426e-05, 2.30969999999997e-05, 2.4999999999997247e-05, 2.115299999999945e-05, 2.595899999999901e-05, 2.4027999999998856e-05, 2.115299999999945e-05, 2.119500000000163e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.081" endtime="20201115 23:02:20.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.076" endtime="20201115 23:02:20.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.085" endtime="20201115 23:02:20.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.089" endtime="20201115 23:02:20.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.087" endtime="20201115 23:02:20.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.084" endtime="20201115 23:02:20.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.712" endtime="20201115 23:02:20.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.710" endtime="20201115 23:02:20.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.709" endtime="20201115 23:02:20.111"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.113" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.122" endtime="20201115 23:02:20.144"></status>
</kw>
<msg timestamp="20201115 23:02:20.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.120" endtime="20201115 23:02:20.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.145" endtime="20201115 23:02:20.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.148" endtime="20201115 23:02:20.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.118" endtime="20201115 23:02:20.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.116" endtime="20201115 23:02:20.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.157" endtime="20201115 23:02:20.443"></status>
</kw>
<msg timestamp="20201115 23:02:20.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028062917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028094653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.156" endtime="20201115 23:02:20.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028062917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028094653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.447" endtime="20201115 23:02:20.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.455" endtime="20201115 23:02:20.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.153" endtime="20201115 23:02:20.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.151" endtime="20201115 23:02:20.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.462" level="INFO">${RESULT} = [{'time': 0.028094653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.173600000000096e-05, 'source_diff': 3.173600000000096e-05}, {'time': 0.028125847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:20.459" endtime="20201115 23:02:20.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.520" level="INFO">${ACCURACY} = {'time': [0.028094653, 0.028125847, 0.02815625, 0.028186597, 0.028217458, 0.028247306, 0.02827825, 0.028308333, 0.028339278, 0.028369444, 0.028399556, 0.028430125, 0.028460903, 0.02849175, 0.028522597...</msg>
<status status="PASS" starttime="20201115 23:02:20.463" endtime="20201115 23:02:20.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.525" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.524" endtime="20201115 23:02:20.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.528" level="INFO">VALUE: [3.173600000000096e-05, 2.1193999999998686e-05, 2.1208000000001725e-05, 2.4013999999999286e-05, 2.405500000000199e-05, 2.595899999999901e-05, 2.213900000000088e-05, 2.1166000000003016e-05, 2.3083999999999605e-05, 2.406900000000156e-05, 2.215300000000045e-05, 2.4056000000001465e-05, 2.116699999999902e-05, 2.113899999999988e-05, 2.1208000000001725e-05, 2.4041999999998426e-05, 2.5943999999999967e-05, 2.694500000000044e-05, 2.0208000000000725e-05, 2.4040999999998952e-05, 2.115299999999945e-05, 2.4055999999997996e-05, 2.5014000000000286e-05, 2.30969999999997e-05, 2.116700000000249e-05, 2.0236000000003335e-05, 2.3999999999999716e-05, 2.215300000000045e-05, 2.0235999999999865e-05, 2.5054999999999522e-05, 2.4070000000001035e-05, 2.5971999999999107e-05, 2.218099999999959e-05, 2.0180000000001586e-05, 2.5972000000002576e-05, 2.398699999999962e-05, 2.5041999999999426e-05, 2.1250000000000435e-05, 2.315299999999798e-05, 2.5014000000000286e-05, 2.0235999999999865e-05, 2.3054999999997522e-05, 2.2112000000001214e-05, 2.5888000000001687e-05, 2.1179999999999116e-05, 2.595899999999901e-05, 2.306900000000056e-05, 2.5958000000003006e-05, 2.2055999999999465e-05, 2.406900000000156e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.526" endtime="20201115 23:02:20.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.521" endtime="20201115 23:02:20.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.531" endtime="20201115 23:02:20.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.535" endtime="20201115 23:02:20.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.533" endtime="20201115 23:02:20.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.530" endtime="20201115 23:02:20.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.114" endtime="20201115 23:02:20.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.112" endtime="20201115 23:02:20.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.111" endtime="20201115 23:02:20.556"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.558" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.567" endtime="20201115 23:02:20.587"></status>
</kw>
<msg timestamp="20201115 23:02:20.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.565" endtime="20201115 23:02:20.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.588" endtime="20201115 23:02:20.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.591" endtime="20201115 23:02:20.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.563" endtime="20201115 23:02:20.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.560" endtime="20201115 23:02:20.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.600" endtime="20201115 23:02:20.886"></status>
</kw>
<msg timestamp="20201115 23:02:20.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024864403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024889403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.599" endtime="20201115 23:02:20.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024864403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024889403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.891" endtime="20201115 23:02:20.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.899" endtime="20201115 23:02:20.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.596" endtime="20201115 23:02:20.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.594" endtime="20201115 23:02:20.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.906" level="INFO">${RESULT} = [{'time': 0.024889403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000000716e-05, 'source_diff': 2.5000000000000716e-05}, {'time': 0.024920083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:20.902" endtime="20201115 23:02:20.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.919" level="INFO">${ACCURACY} = {'time': [0.024889403, 0.024920083, 0.024951111, 0.024981139, 0.025012153, 0.025041917, 0.025072667, 0.025102875, 0.025133319, 0.025164458, 0.025194667, 0.025225431, 0.025255986, 0.025286389, 0.025316...</msg>
<status status="PASS" starttime="20201115 23:02:20.907" endtime="20201115 23:02:20.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.924" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.923" endtime="20201115 23:02:20.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.927" level="INFO">VALUE: [2.5000000000000716e-05, 2.0222000000000295e-05, 2.212500000000131e-05, 2.1236000000000865e-05, 2.30969999999997e-05, 2.211100000000174e-05, 2.215300000000045e-05, 2.1222000000001295e-05, 2.5943999999999967e-05, 2.306900000000056e-05, 2.12090000000012e-05, 2.5000000000000716e-05, 2.0208000000000725e-05, 2.118099999999859e-05, 2.308300000000013e-05, 2.5985999999998677e-05, 2.5000000000000716e-05, 2.5971999999999107e-05, 2.5972000000002576e-05, 2.5957999999999537e-05, 2.212500000000131e-05, 2.694500000000044e-05, 2.5012999999997343e-05, 2.308300000000013e-05, 2.5971999999999107e-05, 2.30969999999997e-05, 2.5916000000000827e-05, 2.3056000000000465e-05, 2.5985999999998677e-05, 2.4986000000001146e-05, 2.213899999999741e-05, 2.0250000000002905e-05, 2.1179999999999116e-05, 2.5014000000000286e-05, 2.308300000000013e-05, 2.312500000000231e-05, 2.4041999999998426e-05, 2.5957999999999537e-05, 2.30969999999997e-05, 2.4999999999997247e-05, 2.4027999999998856e-05, 2.0222000000000295e-05, 2.5957999999999537e-05, 2.5014000000000286e-05, 2.1193999999998686e-05, 2.4985999999997677e-05, 2.5027999999999856e-05, 2.015300000000192e-05, 2.40970000000007e-05, 2.5930000000000397e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.925" endtime="20201115 23:02:20.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.920" endtime="20201115 23:02:20.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.930" endtime="20201115 23:02:20.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.934" endtime="20201115 23:02:20.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.932" endtime="20201115 23:02:20.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.928" endtime="20201115 23:02:20.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.559" endtime="20201115 23:02:20.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.557" endtime="20201115 23:02:20.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.556" endtime="20201115 23:02:20.955"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.958" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.967" endtime="20201115 23:02:20.988"></status>
</kw>
<msg timestamp="20201115 23:02:20.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.965" endtime="20201115 23:02:20.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.990" endtime="20201115 23:02:20.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.992" endtime="20201115 23:02:20.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.963" endtime="20201115 23:02:20.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.960" endtime="20201115 23:02:20.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.002" endtime="20201115 23:02:21.288"></status>
</kw>
<msg timestamp="20201115 23:02:21.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027716167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027733542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.000" endtime="20201115 23:02:21.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027716167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027733542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.292" endtime="20201115 23:02:21.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.300" endtime="20201115 23:02:21.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.997" endtime="20201115 23:02:21.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.996" endtime="20201115 23:02:21.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.307" level="INFO">${RESULT} = [{'time': 0.027733542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.737500000000003e-05, 'source_diff': 1.737500000000003e-05}, {'time': 0.027764278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:21.303" endtime="20201115 23:02:21.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.321" level="INFO">${ACCURACY} = {'time': [0.027733542, 0.027764278, 0.027794236, 0.027824972, 0.027854986, 0.027886208, 0.027916778, 0.027946528, 0.027977667, 0.028008292, 0.028038611, 0.028068597, 0.02809975, 0.028130069, 0.0281609...</msg>
<status status="PASS" starttime="20201115 23:02:21.308" endtime="20201115 23:02:21.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.325" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.324" endtime="20201115 23:02:21.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.328" level="INFO">VALUE: [1.737500000000003e-05, 2.213900000000088e-05, 2.0222000000000295e-05, 2.6014000000001286e-05, 2.5958000000003006e-05, 2.1165999999999546e-05, 2.312499999999884e-05, 2.213900000000088e-05, 2.3028000000001325e-05, 2.5041999999999426e-05, 2.505500000000299e-05, 2.1179999999999116e-05, 2.5055999999998996e-05, 2.5000000000000716e-05, 2.4013999999999286e-05, 2.315300000000145e-05, 2.5055999999998996e-05, 2.209700000000217e-05, 2.594500000000291e-05, 2.3151999999998507e-05, 2.20969999999987e-05, 2.213899999999741e-05, 2.4055999999997996e-05, 2.0235999999999865e-05, 2.6888999999998692e-05, 2.4028000000002325e-05, 2.5000000000000716e-05, 2.215300000000045e-05, 2.588900000000116e-05, 2.690299999999826e-05, 2.312500000000231e-05, 2.30969999999997e-05, 2.119500000000163e-05, 2.116700000000249e-05, 2.0235999999999865e-05, 2.3083999999999605e-05, 2.5957999999999537e-05, 2.0208000000000725e-05, 2.306900000000056e-05, 2.212500000000131e-05, 2.3083999999999605e-05, 2.218099999999959e-05, 2.2207999999999256e-05, 2.597299999999858e-05, 2.687500000000259e-05, 2.0264000000002474e-05, 2.690300000000173e-05, 2.213900000000088e-05, 2.209700000000217e-05, 2.593099999999987e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.326" endtime="20201115 23:02:21.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.322" endtime="20201115 23:02:21.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.331" endtime="20201115 23:02:21.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.334" endtime="20201115 23:02:21.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.333" endtime="20201115 23:02:21.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.329" endtime="20201115 23:02:21.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.958" endtime="20201115 23:02:21.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.956" endtime="20201115 23:02:21.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.956" endtime="20201115 23:02:21.356"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.358" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.367" endtime="20201115 23:02:21.385"></status>
</kw>
<msg timestamp="20201115 23:02:21.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.366" endtime="20201115 23:02:21.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.387" endtime="20201115 23:02:21.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.389" endtime="20201115 23:02:21.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.362" endtime="20201115 23:02:21.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.360" endtime="20201115 23:02:21.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.398" endtime="20201115 23:02:21.685"></status>
</kw>
<msg timestamp="20201115 23:02:21.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023997736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024015083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.397" endtime="20201115 23:02:21.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023997736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024015083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.689" endtime="20201115 23:02:21.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.698" endtime="20201115 23:02:21.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.394" endtime="20201115 23:02:21.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.392" endtime="20201115 23:02:21.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.705" level="INFO">${RESULT} = [{'time': 0.024015083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.734700000000089e-05, 'source_diff': 1.734700000000089e-05}, {'time': 0.024046319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:21.701" endtime="20201115 23:02:21.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.718" level="INFO">${ACCURACY} = {'time': [0.024015083, 0.024046319, 0.024076, 0.024107361, 0.024137431, 0.024168167, 0.024198611, 0.024228986, 0.024259208, 0.024289694, 0.024320486, 0.024351056, 0.024381611, 0.024412014, 0.0244425, ...</msg>
<status status="PASS" starttime="20201115 23:02:21.706" endtime="20201115 23:02:21.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.723" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.722" endtime="20201115 23:02:21.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.725" level="INFO">VALUE: [1.734700000000089e-05, 2.6887999999999218e-05, 2.213900000000088e-05, 2.306900000000056e-05, 2.116700000000249e-05, 2.59170000000003e-05, 2.4041999999998426e-05, 2.5986000000002146e-05, 2.4026999999999382e-05, 2.0235999999999865e-05, 2.4068999999998092e-05, 2.022299999999977e-05, 2.0194000000001155e-05, 2.5957999999999537e-05, 2.4999999999997247e-05, 2.4054999999998522e-05, 2.6929999999997928e-05, 2.306900000000056e-05, 2.690300000000173e-05, 2.4986000000001146e-05, 2.5014000000000286e-05, 2.212499999999784e-05, 2.4055999999997996e-05, 2.4999999999997247e-05, 2.211100000000174e-05, 2.5957999999999537e-05, 2.59170000000003e-05, 2.4013999999999286e-05, 2.6860999999999552e-05, 2.4040999999998952e-05, 2.4098000000000175e-05, 2.4082999999997662e-05, 2.4929999999999397e-05, 2.6862000000002495e-05, 2.019499999999716e-05, 2.10969999999977e-05, 2.0222000000000295e-05, 2.0235999999999865e-05, 2.593099999999987e-05, 2.406900000000156e-05, 2.116699999999902e-05, 2.5943999999999967e-05, 2.115299999999945e-05, 2.4944000000002436e-05, 2.311099999999927e-05, 2.1179999999999116e-05, 2.115300000000292e-05, 2.5013999999996817e-05, 2.118100000000206e-05, 2.5943999999999967e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.724" endtime="20201115 23:02:21.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.719" endtime="20201115 23:02:21.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.729" endtime="20201115 23:02:21.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.732" endtime="20201115 23:02:21.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.731" endtime="20201115 23:02:21.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.727" endtime="20201115 23:02:21.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.359" endtime="20201115 23:02:21.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.357" endtime="20201115 23:02:21.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.356" endtime="20201115 23:02:21.753"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.756" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.765" endtime="20201115 23:02:21.788"></status>
</kw>
<msg timestamp="20201115 23:02:21.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.762" endtime="20201115 23:02:21.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.789" endtime="20201115 23:02:21.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.792" endtime="20201115 23:02:21.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.760" endtime="20201115 23:02:21.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.758" endtime="20201115 23:02:21.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.802" endtime="20201115 23:02:22.088"></status>
</kw>
<msg timestamp="20201115 23:02:22.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028338153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028354569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.800" endtime="20201115 23:02:22.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028338153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028354569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.092" endtime="20201115 23:02:22.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.101" endtime="20201115 23:02:22.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.797" endtime="20201115 23:02:22.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.795" endtime="20201115 23:02:22.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.107" level="INFO">${RESULT} = [{'time': 0.028354569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6415999999998265e-05, 'source_diff': 1.6415999999998265e-05}, {'time': 0.028385347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:22.104" endtime="20201115 23:02:22.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.122" level="INFO">${ACCURACY} = {'time': [0.028354569, 0.028385347, 0.028415556, 0.028446319, 0.028476806, 0.028507431, 0.028537458, 0.028567833, 0.028598986, 0.028629361, 0.028659708, 0.028690292, 0.028720708, 0.028751514, 0.028781...</msg>
<status status="PASS" starttime="20201115 23:02:22.108" endtime="20201115 23:02:22.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.126" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.125" endtime="20201115 23:02:22.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.129" level="INFO">VALUE: [1.6415999999998265e-05, 2.5013999999996817e-05, 2.598700000000162e-05, 2.405500000000199e-05, 2.594499999999944e-05, 2.12090000000012e-05, 2.405500000000199e-05, 2.0235999999999865e-05, 2.216700000000002e-05, 2.5014000000000286e-05, 2.4985999999997677e-05, 2.4985999999997677e-05, 2.213900000000088e-05, 2.211099999999827e-05, 2.3999999999999716e-05, 2.1151999999999976e-05, 2.0263999999999005e-05, 2.4972000000001576e-05, 2.4040999999998952e-05, 2.113899999999988e-05, 2.215300000000045e-05, 2.595899999999901e-05, 2.6930000000001397e-05, 2.12090000000012e-05, 2.4014000000002755e-05, 2.398699999999962e-05, 2.5915999999997358e-05, 2.206899999999956e-05, 2.3112000000002214e-05, 2.119500000000163e-05, 2.412499999999984e-05, 2.594499999999944e-05, 2.1194000000002156e-05, 2.4068999999998092e-05, 2.113899999999988e-05, 2.59170000000003e-05, 2.408300000000113e-05, 2.0236000000003335e-05, 2.4958000000002006e-05, 2.119500000000163e-05, 2.116699999999902e-05, 2.5985999999998677e-05, 2.0263999999999005e-05, 2.5958000000003006e-05, 2.0208000000000725e-05, 2.690299999999826e-05, 2.1193999999998686e-05, 2.022300000000324e-05, 2.112500000000031e-05, 2.111100000000074e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.128" endtime="20201115 23:02:22.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.123" endtime="20201115 23:02:22.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.132" endtime="20201115 23:02:22.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.136" endtime="20201115 23:02:22.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.134" endtime="20201115 23:02:22.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.131" endtime="20201115 23:02:22.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.756" endtime="20201115 23:02:22.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.754" endtime="20201115 23:02:22.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.754" endtime="20201115 23:02:22.157"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.159" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.167" endtime="20201115 23:02:22.190"></status>
</kw>
<msg timestamp="20201115 23:02:22.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.166" endtime="20201115 23:02:22.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.191" endtime="20201115 23:02:22.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.194" endtime="20201115 23:02:22.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.163" endtime="20201115 23:02:22.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.161" endtime="20201115 23:02:22.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.203" endtime="20201115 23:02:22.491"></status>
</kw>
<msg timestamp="20201115 23:02:22.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026728556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026742042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.202" endtime="20201115 23:02:22.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026728556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026742042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.495" endtime="20201115 23:02:22.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.503" endtime="20201115 23:02:22.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.199" endtime="20201115 23:02:22.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.197" endtime="20201115 23:02:22.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.510" level="INFO">${RESULT} = [{'time': 0.026742042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3486000000000054e-05, 'source_diff': 1.3486000000000054e-05}, {'time': 0.026772778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:22.507" endtime="20201115 23:02:22.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.524" level="INFO">${ACCURACY} = {'time': [0.026742042, 0.026772778, 0.026803417, 0.026833653, 0.026864014, 0.026894764, 0.026924792, 0.026956042, 0.026986181, 0.027016347, 0.027047319, 0.027077389, 0.027108569, 0.027138889, 0.027169...</msg>
<status status="PASS" starttime="20201115 23:02:22.511" endtime="20201115 23:02:22.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.528" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.527" endtime="20201115 23:02:22.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.531" level="INFO">VALUE: [1.3486000000000054e-05, 2.215300000000045e-05, 2.588900000000116e-05, 2.4971999999998107e-05, 2.4999999999997247e-05, 2.0292000000001614e-05, 2.594499999999944e-05, 2.5985999999998677e-05, 2.498700000000062e-05, 2.0222000000000295e-05, 2.5930000000000397e-05, 2.3042000000000895e-05, 2.5000000000000716e-05, 2.212499999999784e-05, 2.30969999999997e-05, 2.118099999999859e-05, 2.212500000000131e-05, 2.306900000000056e-05, 2.112499999999684e-05, 2.015300000000192e-05, 2.6888999999998692e-05, 2.590300000000073e-05, 2.594499999999944e-05, 2.213899999999741e-05, 2.30969999999997e-05, 2.20969999999987e-05, 2.30969999999997e-05, 2.0249999999999435e-05, 2.4056000000001465e-05, 2.119500000000163e-05, 2.208299999999913e-05, 2.3012999999998812e-05, 2.4070000000001035e-05, 2.597300000000205e-05, 2.0235999999999865e-05, 2.116699999999902e-05, 2.215300000000045e-05, 2.0249999999999435e-05, 2.5930000000000397e-05, 2.4028000000002325e-05, 2.690299999999826e-05, 2.3986000000000146e-05, 2.212499999999784e-05, 2.313899999999841e-05, 2.211099999999827e-05, 2.219499999999916e-05, 2.5915999999997358e-05, 2.0194000000001155e-05, 2.5041999999999426e-05, 2.4054999999998522e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.529" endtime="20201115 23:02:22.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.525" endtime="20201115 23:02:22.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.534" endtime="20201115 23:02:22.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.537" endtime="20201115 23:02:22.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.536" endtime="20201115 23:02:22.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.532" endtime="20201115 23:02:22.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.160" endtime="20201115 23:02:22.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.158" endtime="20201115 23:02:22.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.157" endtime="20201115 23:02:22.559"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.561" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.570" endtime="20201115 23:02:22.591"></status>
</kw>
<msg timestamp="20201115 23:02:22.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.568" endtime="20201115 23:02:22.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.593" endtime="20201115 23:02:22.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.595" endtime="20201115 23:02:22.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.566" endtime="20201115 23:02:22.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.563" endtime="20201115 23:02:22.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.605" endtime="20201115 23:02:22.892"></status>
</kw>
<msg timestamp="20201115 23:02:22.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026930528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:22.603" endtime="20201115 23:02:22.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026930528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:22.896" endtime="20201115 23:02:22.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.905" endtime="20201115 23:02:22.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.600" endtime="20201115 23:02:22.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.599" endtime="20201115 23:02:22.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.911" level="INFO">${RESULT} = [{'time': 0.026930528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.552799999999995e-05, 'source_diff': 3.552799999999995e-05}, {'time': 0.026960958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:22.908" endtime="20201115 23:02:22.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.925" level="INFO">${ACCURACY} = {'time': [0.026930528, 0.026960958, 0.026991417, 0.027022083, 0.027051931, 0.027082653, 0.02711325, 0.027143431, 0.027174486, 0.027204694, 0.027235889, 0.027266264, 0.027296681, 0.027326944, 0.0273574...</msg>
<status status="PASS" starttime="20201115 23:02:22.912" endtime="20201115 23:02:22.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.929" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.928" endtime="20201115 23:02:22.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.932" level="INFO">VALUE: [3.552799999999995e-05, 2.5040999999999952e-05, 2.3083999999999605e-05, 2.311099999999927e-05, 2.022299999999977e-05, 2.0250000000002905e-05, 2.412499999999984e-05, 2.3999999999999716e-05, 2.30969999999997e-05, 2.5986000000002146e-05, 2.4069999999997566e-05, 2.0207999999997256e-05, 2.122300000000077e-05, 2.5957999999999537e-05, 2.0237000000002808e-05, 2.30969999999997e-05, 2.0235999999999865e-05, 2.4971999999998107e-05, 2.1180000000002586e-05, 2.213899999999741e-05, 2.213899999999741e-05, 2.590299999999726e-05, 2.4068999999998092e-05, 2.5014000000000286e-05, 2.3083999999999605e-05, 2.4972000000001576e-05, 2.687500000000259e-05, 2.5971999999999107e-05, 2.5971999999999107e-05, 2.5957999999999537e-05, 2.5000000000000716e-05, 2.5000000000000716e-05, 2.5027999999999856e-05, 2.4055999999997996e-05, 2.3112000000002214e-05, 2.212499999999784e-05, 2.0235999999999865e-05, 2.0235999999999865e-05, 2.5930000000000397e-05, 2.497300000000105e-05, 2.3083999999999605e-05, 2.5027999999999856e-05, 2.5014000000000286e-05, 2.691699999999783e-05, 2.2207999999999256e-05, 2.4056000000001465e-05, 2.213900000000088e-05, 2.404100000000242e-05, 2.211099999999827e-05, 2.0235999999999865e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.931" endtime="20201115 23:02:22.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.926" endtime="20201115 23:02:22.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.935" endtime="20201115 23:02:22.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.939" endtime="20201115 23:02:22.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.937" endtime="20201115 23:02:22.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.933" endtime="20201115 23:02:22.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.562" endtime="20201115 23:02:22.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.560" endtime="20201115 23:02:22.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.559" endtime="20201115 23:02:22.960"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.963" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.971" endtime="20201115 23:02:22.999"></status>
</kw>
<msg timestamp="20201115 23:02:22.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.969" endtime="20201115 23:02:22.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.000" endtime="20201115 23:02:23.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.003" endtime="20201115 23:02:23.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.967" endtime="20201115 23:02:23.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.965" endtime="20201115 23:02:23.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.012" endtime="20201115 23:02:23.297"></status>
</kw>
<msg timestamp="20201115 23:02:23.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027138458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027179736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.011" endtime="20201115 23:02:23.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027138458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027179736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.301" endtime="20201115 23:02:23.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.310" endtime="20201115 23:02:23.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.008" endtime="20201115 23:02:23.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.006" endtime="20201115 23:02:23.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.316" level="INFO">${RESULT} = [{'time': 0.027179736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.127799999999876e-05, 'source_diff': 4.127799999999876e-05}, {'time': 0.027240556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:23.313" endtime="20201115 23:02:23.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.330" level="INFO">${ACCURACY} = {'time': [0.027179736, 0.027240556, 0.02730125, 0.027362819, 0.027423806, 0.027485167, 0.027545722, 0.027606556, 0.0276675, 0.027728403, 0.027789958, 0.027851278, 0.027911639, 0.027972944, 0.028033806...</msg>
<status status="PASS" starttime="20201115 23:02:23.317" endtime="20201115 23:02:23.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.334" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.333" endtime="20201115 23:02:23.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.337" level="INFO">VALUE: [4.127799999999876e-05, 5.658399999999841e-05, 5.179199999999842e-05, 5.3707999999999534e-05, 5.270899999999801e-05, 5.173600000000014e-05, 5.18470000000007e-05, 5.565299999999926e-05, 5.662500000000112e-05, 5.079199999999742e-05, 5.261100000000102e-05, 5.179199999999842e-05, 4.990299999999698e-05, 5.562500000000012e-05, 5.372300000000205e-05, 5.656899999999937e-05, 5.561100000000055e-05, 5.661099999999808e-05, 5.4679999999997925e-05, 5.2652000000000254e-05, 5.747299999999886e-05, 5.561100000000055e-05, 5.369500000000291e-05, 5.4694000000000964e-05, 5.658399999999841e-05, 5.2763999999996813e-05, 5.561100000000055e-05, 5.559699999999751e-05, 5.459699999999998e-05, 5.458300000000041e-05, 5.661100000000155e-05, 5.6569999999998843e-05, 5.180599999999799e-05, 5.659700000000198e-05, 5.2693999999998964e-05, 5.6499999999997524e-05, 5.661199999999755e-05, 5.562500000000012e-05, 5.086100000000274e-05, 5.6541999999999704e-05, 5.557000000000131e-05, 5.276400000000028e-05, 5.277799999999985e-05, 5.563899999999969e-05, 5.659700000000198e-05, 5.561100000000055e-05, 5.566699999999883e-05, 5.45549999999978e-05, 5.6514000000000564e-05, 5.275000000000071e-05]</msg>
<status status="PASS" starttime="20201115 23:02:23.335" endtime="20201115 23:02:23.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.331" endtime="20201115 23:02:23.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.341" endtime="20201115 23:02:23.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.344" endtime="20201115 23:02:23.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.342" endtime="20201115 23:02:23.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.339" endtime="20201115 23:02:23.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.963" endtime="20201115 23:02:23.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.961" endtime="20201115 23:02:23.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.961" endtime="20201115 23:02:23.365"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.368" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.376" endtime="20201115 23:02:23.395"></status>
</kw>
<msg timestamp="20201115 23:02:23.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.374" endtime="20201115 23:02:23.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.397" endtime="20201115 23:02:23.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.400" endtime="20201115 23:02:23.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.372" endtime="20201115 23:02:23.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.370" endtime="20201115 23:02:23.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.409" endtime="20201115 23:02:23.694"></status>
</kw>
<msg timestamp="20201115 23:02:23.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024097403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024162583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.407" endtime="20201115 23:02:23.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024097403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024162583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.698" endtime="20201115 23:02:23.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.707" endtime="20201115 23:02:23.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.405" endtime="20201115 23:02:23.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.403" endtime="20201115 23:02:23.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.714" level="INFO">${RESULT} = [{'time': 0.024162583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.518000000000149e-05, 'source_diff': 6.518000000000149e-05}, {'time': 0.024224111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:23.710" endtime="20201115 23:02:23.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.728" level="INFO">${ACCURACY} = {'time': [0.024162583, 0.024224111, 0.024284667, 0.024345944, 0.024407125, 0.024468444, 0.024528958, 0.024590208, 0.024651556, 0.024711889, 0.024773069, 0.024834653, 0.024895264, 0.024956194, 0.025017...</msg>
<status status="PASS" starttime="20201115 23:02:23.715" endtime="20201115 23:02:23.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.733" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.732" endtime="20201115 23:02:23.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.736" level="INFO">VALUE: [6.518000000000149e-05, 5.658299999999894e-05, 5.562500000000012e-05, 5.5708000000001534e-05, 5.3735999999998674e-05, 5.179099999999895e-05, 5.659699999999851e-05, 5.5693999999998495e-05, 5.469500000000044e-05, 5.3721999999999104e-05, 5.561100000000055e-05, 5.569500000000144e-05, 5.3735999999998674e-05, 5.661100000000155e-05, 5.563899999999969e-05, 5.276400000000028e-05, 5.3707999999999534e-05, 5.562500000000012e-05, 5.086100000000274e-05, 5.180599999999799e-05, 5.7542000000000704e-05, 5.08469999999997e-05, 5.277699999999691e-05, 5.276400000000028e-05, 5.08339999999996e-05, 5.276400000000028e-05, 5.565299999999926e-05, 5.658300000000241e-05, 5.559699999999751e-05, 5.182000000000103e-05, 5.180599999999799e-05, 5.4708000000000534e-05, 5.180600000000146e-05, 5.4652000000002254e-05, 5.3735999999998674e-05, 5.276400000000028e-05, 5.563899999999969e-05, 5.755499999999733e-05, 5.468100000000087e-05, 5.462500000000259e-05, 5.3721999999999104e-05, 5.465300000000173e-05, 5.2735999999997674e-05, 5.369499999999944e-05, 5.273600000000114e-05, 5.275000000000071e-05, 5.273600000000114e-05, 5.565299999999926e-05, 5.373600000000214e-05, 5.556900000000184e-05]</msg>
<status status="PASS" starttime="20201115 23:02:23.734" endtime="20201115 23:02:23.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.729" endtime="20201115 23:02:23.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.739" endtime="20201115 23:02:23.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.742" endtime="20201115 23:02:23.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.741" endtime="20201115 23:02:23.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.737" endtime="20201115 23:02:23.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.368" endtime="20201115 23:02:23.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.366" endtime="20201115 23:02:23.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.366" endtime="20201115 23:02:23.764"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.766" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.774" endtime="20201115 23:02:23.798"></status>
</kw>
<msg timestamp="20201115 23:02:23.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.773" endtime="20201115 23:02:23.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.800" endtime="20201115 23:02:23.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.802" endtime="20201115 23:02:23.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.770" endtime="20201115 23:02:23.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.768" endtime="20201115 23:02:23.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.812" endtime="20201115 23:02:24.098"></status>
</kw>
<msg timestamp="20201115 23:02:24.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027705708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027769944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.810" endtime="20201115 23:02:24.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027705708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027769944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.103" endtime="20201115 23:02:24.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.111" endtime="20201115 23:02:24.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.807" endtime="20201115 23:02:24.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.806" endtime="20201115 23:02:24.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.118" level="INFO">${RESULT} = [{'time': 0.027769944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.423600000000224e-05, 'source_diff': 6.423600000000224e-05}, {'time': 0.027830986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:24.114" endtime="20201115 23:02:24.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.132" level="INFO">${ACCURACY} = {'time': [0.027769944, 0.027830986, 0.027891625, 0.027952194, 0.028013903, 0.028074986, 0.028135861, 0.028196389, 0.028258153, 0.028319181, 0.028379778, 0.028441264, 0.028502306, 0.028563333, 0.028623...</msg>
<status status="PASS" starttime="20201115 23:02:24.119" endtime="20201115 23:02:24.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.136" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.135" endtime="20201115 23:02:24.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.139" level="INFO">VALUE: [6.423600000000224e-05, 5.463899999999869e-05, 5.465299999999826e-05, 5.08469999999997e-05, 5.563899999999969e-05, 5.665300000000026e-05, 5.363900000000116e-05, 5.082000000000003e-05, 5.7556000000000274e-05, 5.088899999999841e-05, 5.6541999999999704e-05, 5.476400000000228e-05, 5.179200000000189e-05, 5.463899999999869e-05, 5.562500000000012e-05, 5.657000000000231e-05, 5.558400000000088e-05, 5.180500000000199e-05, 5.3693999999999964e-05, 5.180500000000199e-05, 5.55549999999988e-05, 5.276400000000028e-05, 5.463900000000216e-05, 5.273700000000062e-05, 5.463900000000216e-05, 5.176399999999928e-05, 5.659700000000198e-05, 5.3707999999999534e-05, 5.082000000000003e-05, 5.665300000000026e-05, 5.7500000000001994e-05, 5.5679999999998925e-05, 5.465300000000173e-05, 5.658399999999841e-05, 5.562500000000012e-05, 5.087500000000231e-05, 5.286199999999727e-05, 5.3680000000000394e-05, 5.276400000000028e-05, 5.469500000000044e-05, 5.65549999999998e-05, 5.181900000000156e-05, 5.561099999999708e-05, 5.179200000000189e-05, 5.177800000000232e-05, 5.4665999999998355e-05, 5.086099999999927e-05, 5.6499999999997524e-05, 5.177799999999885e-05, 5.180599999999799e-05]</msg>
<status status="PASS" starttime="20201115 23:02:24.138" endtime="20201115 23:02:24.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.133" endtime="20201115 23:02:24.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.142" endtime="20201115 23:02:24.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.146" endtime="20201115 23:02:24.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.144" endtime="20201115 23:02:24.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.141" endtime="20201115 23:02:24.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.767" endtime="20201115 23:02:24.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.765" endtime="20201115 23:02:24.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.764" endtime="20201115 23:02:24.167"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.169" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.178" endtime="20201115 23:02:24.201"></status>
</kw>
<msg timestamp="20201115 23:02:24.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.176" endtime="20201115 23:02:24.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.203" endtime="20201115 23:02:24.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.205" endtime="20201115 23:02:24.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.173" endtime="20201115 23:02:24.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.171" endtime="20201115 23:02:24.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.214" endtime="20201115 23:02:24.499"></status>
</kw>
<msg timestamp="20201115 23:02:24.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026278069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026340375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.213" endtime="20201115 23:02:24.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026278069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026340375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.503" endtime="20201115 23:02:24.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.512" endtime="20201115 23:02:24.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.210" endtime="20201115 23:02:24.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.208" endtime="20201115 23:02:24.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.518" level="INFO">${RESULT} = [{'time': 0.026340375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.230599999999809e-05, 'source_diff': 6.230599999999809e-05}, {'time': 0.026400903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:24.515" endtime="20201115 23:02:24.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.532" level="INFO">${ACCURACY} = {'time': [0.026340375, 0.026400903, 0.026462403, 0.026523042, 0.026584458, 0.026645597, 0.026706472, 0.026767569, 0.026828889, 0.026889958, 0.026950361, 0.027012042, 0.027072403, 0.027134083, 0.027194...</msg>
<status status="PASS" starttime="20201115 23:02:24.519" endtime="20201115 23:02:24.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.536" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.535" endtime="20201115 23:02:24.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.539" level="INFO">VALUE: [6.230599999999809e-05, 5.369499999999944e-05, 5.7485999999998955e-05, 5.562500000000012e-05, 5.656899999999937e-05, 5.087499999999884e-05, 5.658299999999894e-05, 5.086100000000274e-05, 5.658300000000241e-05, 5.3735999999998674e-05, 5.5679999999998925e-05, 5.180600000000146e-05, 4.988899999999741e-05, 5.4651999999998785e-05, 5.2763999999996813e-05, 5.172200000000057e-05, 5.659700000000198e-05, 5.4680000000001394e-05, 5.370899999999901e-05, 5.559800000000045e-05, 5.087500000000231e-05, 5.46670000000013e-05, 5.181999999999756e-05, 5.186100000000027e-05, 5.65549999999998e-05, 5.077800000000132e-05, 5.755499999999733e-05, 5.562500000000012e-05, 5.361100000000202e-05, 5.180599999999799e-05, 5.3721999999999104e-05, 5.3693999999999964e-05, 5.182000000000103e-05, 5.46670000000013e-05, 5.276400000000028e-05, 5.5499999999999994e-05, 5.081900000000056e-05, 5.562500000000012e-05, 5.3721999999999104e-05, 5.5638000000000215e-05, 5.083300000000013e-05, 5.073599999999914e-05, 5.658400000000188e-05, 5.184800000000017e-05, 5.277799999999985e-05, 5.275000000000071e-05, 5.08469999999997e-05, 5.276400000000028e-05, 5.2749999999997244e-05, 5.177799999999885e-05]</msg>
<status status="PASS" starttime="20201115 23:02:24.538" endtime="20201115 23:02:24.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.533" endtime="20201115 23:02:24.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.542" endtime="20201115 23:02:24.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.546" endtime="20201115 23:02:24.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.544" endtime="20201115 23:02:24.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.541" endtime="20201115 23:02:24.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.170" endtime="20201115 23:02:24.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.168" endtime="20201115 23:02:24.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.167" endtime="20201115 23:02:24.567"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.569" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.577" endtime="20201115 23:02:24.597"></status>
</kw>
<msg timestamp="20201115 23:02:24.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.576" endtime="20201115 23:02:24.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.598" endtime="20201115 23:02:24.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.601" endtime="20201115 23:02:24.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.573" endtime="20201115 23:02:24.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.571" endtime="20201115 23:02:24.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.610" endtime="20201115 23:02:24.897"></status>
</kw>
<msg timestamp="20201115 23:02:24.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023314569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023354875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.608" endtime="20201115 23:02:24.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023314569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023354875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.901" endtime="20201115 23:02:24.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.910" endtime="20201115 23:02:24.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.606" endtime="20201115 23:02:24.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.604" endtime="20201115 23:02:24.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.916" level="INFO">${RESULT} = [{'time': 0.023354875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.030600000000037e-05, 'source_diff': 4.030600000000037e-05}, {'time': 0.023415847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:24.913" endtime="20201115 23:02:24.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.930" level="INFO">${ACCURACY} = {'time': [0.023354875, 0.023415847, 0.023476625, 0.023537639, 0.023599333, 0.023659722, 0.023721542, 0.023781861, 0.023842819, 0.023904417, 0.023965764, 0.024025958, 0.024087181, 0.024148639, 0.024209...</msg>
<status status="PASS" starttime="20201115 23:02:24.917" endtime="20201115 23:02:24.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.934" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.933" endtime="20201115 23:02:24.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.937" level="INFO">VALUE: [4.030600000000037e-05, 5.080500000000099e-05, 5.083300000000013e-05, 5.6569999999998843e-05, 5.3721999999999104e-05, 5.180500000000199e-05, 5.46670000000013e-05, 5.3693999999999964e-05, 5.3638000000001684e-05, 5.559800000000045e-05, 5.275000000000071e-05, 5.275000000000071e-05, 5.270899999999801e-05, 5.6528000000000134e-05, 5.66809999999994e-05, 5.2735999999997674e-05, 5.563899999999969e-05, 5.3749999999998244e-05, 5.368099999999987e-05, 5.177799999999885e-05, 5.466699999999783e-05, 5.180600000000146e-05, 5.273700000000062e-05, 5.377800000000085e-05, 5.559700000000098e-05, 5.2749999999997244e-05, 5.7528000000001134e-05, 5.372200000000257e-05, 5.659699999999851e-05, 5.181900000000156e-05, 5.177800000000232e-05, 5.563899999999969e-05, 5.5679999999998925e-05, 5.370899999999901e-05, 5.080500000000099e-05, 5.179100000000242e-05, 5.275000000000071e-05, 5.558299999999794e-05, 5.661100000000155e-05, 5.276400000000028e-05, 5.380500000000052e-05, 5.090300000000145e-05, 5.559800000000045e-05, 5.08469999999997e-05, 5.656899999999937e-05, 5.3721999999999104e-05, 5.473600000000314e-05, 5.6500000000000994e-05, 5.659700000000198e-05, 5.18340000000006e-05]</msg>
<status status="PASS" starttime="20201115 23:02:24.935" endtime="20201115 23:02:24.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.931" endtime="20201115 23:02:24.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.940" endtime="20201115 23:02:24.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.943" endtime="20201115 23:02:24.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.942" endtime="20201115 23:02:24.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.938" endtime="20201115 23:02:24.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.570" endtime="20201115 23:02:24.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.568" endtime="20201115 23:02:24.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.567" endtime="20201115 23:02:24.965"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.967" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.975" endtime="20201115 23:02:24.998"></status>
</kw>
<msg timestamp="20201115 23:02:24.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.974" endtime="20201115 23:02:24.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.000" endtime="20201115 23:02:25.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.003" endtime="20201115 23:02:25.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.971" endtime="20201115 23:02:25.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.969" endtime="20201115 23:02:25.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.012" endtime="20201115 23:02:25.297"></status>
</kw>
<msg timestamp="20201115 23:02:25.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027315347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027358542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.010" endtime="20201115 23:02:25.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027315347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027358542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.302" endtime="20201115 23:02:25.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.310" endtime="20201115 23:02:25.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.008" endtime="20201115 23:02:25.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.006" endtime="20201115 23:02:25.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.317" level="INFO">${RESULT} = [{'time': 0.027358542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3194999999999345e-05, 'source_diff': 4.3194999999999345e-05}, {'time': 0.027419569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:25.313" endtime="20201115 23:02:25.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.331" level="INFO">${ACCURACY} = {'time': [0.027358542, 0.027419569, 0.027480764, 0.027541236, 0.027601972, 0.027663486, 0.027724375, 0.027785208, 0.027846819, 0.027907847, 0.027968611, 0.028029667, 0.028090889, 0.028151653, 0.028213...</msg>
<status status="PASS" starttime="20201115 23:02:25.318" endtime="20201115 23:02:25.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.336" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.335" endtime="20201115 23:02:25.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.339" level="INFO">VALUE: [4.3194999999999345e-05, 5.275000000000071e-05, 5.08469999999997e-05, 5.65549999999998e-05, 5.277799999999985e-05, 5.563899999999969e-05, 5.461099999999955e-05, 5.1721999999997104e-05, 5.4679999999997925e-05, 5.180499999999852e-05, 5.6528000000000134e-05, 5.176400000000275e-05, 5.275000000000071e-05, 5.3735999999998674e-05, 5.280599999999899e-05, 5.3665999999997355e-05, 5.556900000000184e-05, 5.561099999999708e-05, 5.08469999999997e-05, 5.470900000000001e-05, 5.562500000000012e-05, 5.182000000000103e-05, 4.988900000000088e-05, 5.2679999999999394e-05, 5.565299999999926e-05, 5.276400000000028e-05, 5.563899999999969e-05, 5.280599999999899e-05, 5.083300000000013e-05, 5.179200000000189e-05, 5.555500000000227e-05, 5.465300000000173e-05, 5.182000000000103e-05, 5.180500000000199e-05, 5.5651999999999785e-05, 5.086099999999927e-05, 5.655600000000274e-05, 5.177699999999938e-05, 5.559800000000045e-05, 5.563899999999969e-05, 5.3693999999999964e-05, 5.275000000000071e-05, 5.562500000000012e-05, 5.4749999999999244e-05, 5.180600000000146e-05, 5.46670000000013e-05, 5.080499999999752e-05, 5.3721999999999104e-05, 5.562500000000012e-05, 5.3749999999998244e-05]</msg>
<status status="PASS" starttime="20201115 23:02:25.337" endtime="20201115 23:02:25.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.332" endtime="20201115 23:02:25.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.342" endtime="20201115 23:02:25.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.345" endtime="20201115 23:02:25.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.344" endtime="20201115 23:02:25.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.340" endtime="20201115 23:02:25.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.968" endtime="20201115 23:02:25.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.966" endtime="20201115 23:02:25.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.965" endtime="20201115 23:02:25.366"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.369" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.378" endtime="20201115 23:02:25.400"></status>
</kw>
<msg timestamp="20201115 23:02:25.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.376" endtime="20201115 23:02:25.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.401" endtime="20201115 23:02:25.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.404" endtime="20201115 23:02:25.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.373" endtime="20201115 23:02:25.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.371" endtime="20201115 23:02:25.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.413" endtime="20201115 23:02:25.699"></status>
</kw>
<msg timestamp="20201115 23:02:25.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027563792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027607917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.412" endtime="20201115 23:02:25.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027563792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027607917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.703" endtime="20201115 23:02:25.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.711" endtime="20201115 23:02:25.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.409" endtime="20201115 23:02:25.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.407" endtime="20201115 23:02:25.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.718" level="INFO">${RESULT} = [{'time': 0.027607917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4124999999999026e-05, 'source_diff': 4.4124999999999026e-05}, {'time': 0.027668528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:25.715" endtime="20201115 23:02:25.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.731" level="INFO">${ACCURACY} = {'time': [0.027607917, 0.027668528, 0.027729625, 0.027790889, 0.027852028, 0.027912181, 0.027973417, 0.028034875, 0.028096042, 0.028156403, 0.028217917, 0.028279056, 0.028340264, 0.028400486, 0.028461...</msg>
<status status="PASS" starttime="20201115 23:02:25.719" endtime="20201115 23:02:25.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.736" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.735" endtime="20201115 23:02:25.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.738" level="INFO">VALUE: [4.4124999999999026e-05, 5.180600000000146e-05, 5.172200000000057e-05, 5.465299999999826e-05, 5.369499999999944e-05, 5.468100000000087e-05, 5.182000000000103e-05, 5.362500000000159e-05, 5.559800000000045e-05, 4.990300000000045e-05, 5.6569999999998843e-05, 5.368099999999987e-05, 5.08469999999997e-05, 5.3721999999999104e-05, 5.463899999999869e-05, 5.176400000000275e-05, 5.558400000000088e-05, 5.176299999999981e-05, 5.2735999999997674e-05, 5.561200000000002e-05, 5.174999999999971e-05, 5.561100000000055e-05, 5.3680000000000394e-05, 5.3707999999999534e-05, 5.568100000000187e-05, 5.466699999999783e-05, 5.181899999999809e-05, 5.561100000000055e-05, 5.659800000000145e-05, 5.659699999999851e-05, 5.562500000000012e-05, 5.558299999999794e-05, 5.3707999999999534e-05, 5.656900000000284e-05, 5.369499999999944e-05, 5.276400000000028e-05, 5.2707999999998534e-05, 5.276400000000028e-05, 5.180600000000146e-05, 5.3721999999999104e-05, 5.179199999999842e-05, 5.656900000000284e-05, 5.465300000000173e-05, 5.561100000000055e-05, 5.275000000000071e-05, 5.277700000000038e-05, 5.275000000000071e-05, 5.558399999999741e-05, 5.087500000000231e-05, 5.368099999999987e-05]</msg>
<status status="PASS" starttime="20201115 23:02:25.737" endtime="20201115 23:02:25.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.732" endtime="20201115 23:02:25.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.742" endtime="20201115 23:02:25.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.745" endtime="20201115 23:02:25.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.744" endtime="20201115 23:02:25.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.740" endtime="20201115 23:02:25.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.369" endtime="20201115 23:02:25.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.368" endtime="20201115 23:02:25.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.367" endtime="20201115 23:02:25.767"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.769" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.777" endtime="20201115 23:02:25.798"></status>
</kw>
<msg timestamp="20201115 23:02:25.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.776" endtime="20201115 23:02:25.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.799" endtime="20201115 23:02:25.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.802" endtime="20201115 23:02:25.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.773" endtime="20201115 23:02:25.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.771" endtime="20201115 23:02:25.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.811" endtime="20201115 23:02:26.097"></status>
</kw>
<msg timestamp="20201115 23:02:26.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024500111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0245615, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:25.809" endtime="20201115 23:02:26.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024500111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0245615, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:26.101" endtime="20201115 23:02:26.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.110" endtime="20201115 23:02:26.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.807" endtime="20201115 23:02:26.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.805" endtime="20201115 23:02:26.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.116" level="INFO">${RESULT} = [{'time': 0.0245615, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.13889999999985e-05, 'source_diff': 6.13889999999985e-05}, {'time': 0.024622181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201115 23:02:26.113" endtime="20201115 23:02:26.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.130" level="INFO">${ACCURACY} = {'time': [0.0245615, 0.024622181, 0.024683208, 0.024744486, 0.024804972, 0.024866181, 0.024927361, 0.024988653, 0.025049236, 0.025110958, 0.025171139, 0.025232903, 0.025293792, 0.025354194, 0.02541608...</msg>
<status status="PASS" starttime="20201115 23:02:26.117" endtime="20201115 23:02:26.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.134" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.133" endtime="20201115 23:02:26.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.137" level="INFO">VALUE: [6.13889999999985e-05, 5.084799999999917e-05, 5.273600000000114e-05, 5.3721999999999104e-05, 5.656900000000284e-05, 5.376400000000128e-05, 5.565299999999926e-05, 5.658399999999841e-05, 5.086099999999927e-05, 5.55549999999988e-05, 5.461099999999955e-05, 5.369499999999944e-05, 5.6485999999997955e-05, 5.461099999999955e-05, 5.561100000000055e-05, 5.084800000000264e-05, 5.369499999999944e-05, 5.363900000000116e-05, 5.65549999999998e-05, 5.084799999999917e-05, 5.087499999999884e-05, 5.2735999999997674e-05, 5.461099999999955e-05, 5.08469999999997e-05, 5.662500000000112e-05, 5.08469999999997e-05, 5.4665999999998355e-05, 5.558300000000141e-05, 5.5638000000000215e-05, 5.174999999999971e-05, 5.359699999999898e-05, 5.4708000000000534e-05, 5.658300000000241e-05, 5.180499999999852e-05, 5.659699999999851e-05, 5.2693999999998964e-05, 5.558400000000088e-05, 5.3763999999997814e-05, 5.277799999999985e-05, 5.463899999999869e-05, 5.465300000000173e-05, 5.180499999999852e-05, 5.082000000000003e-05, 5.174999999999971e-05, 5.275000000000071e-05, 5.080600000000046e-05, 5.563900000000316e-05, 5.186100000000027e-05, 5.179099999999895e-05, 5.562500000000012e-05]</msg>
<status status="PASS" starttime="20201115 23:02:26.135" endtime="20201115 23:02:26.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.131" endtime="20201115 23:02:26.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.140" endtime="20201115 23:02:26.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.144" endtime="20201115 23:02:26.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.142" endtime="20201115 23:02:26.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.139" endtime="20201115 23:02:26.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.770" endtime="20201115 23:02:26.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.768" endtime="20201115 23:02:26.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.767" endtime="20201115 23:02:26.165"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.167" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.176" endtime="20201115 23:02:26.194"></status>
</kw>
<msg timestamp="20201115 23:02:26.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.174" endtime="20201115 23:02:26.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.196" endtime="20201115 23:02:26.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.199" endtime="20201115 23:02:26.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.172" endtime="20201115 23:02:26.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.170" endtime="20201115 23:02:26.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.208" endtime="20201115 23:02:26.493"></status>
</kw>
<msg timestamp="20201115 23:02:26.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.206" endtime="20201115 23:02:26.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.497" endtime="20201115 23:02:26.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.506" endtime="20201115 23:02:26.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.203" endtime="20201115 23:02:26.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.202" endtime="20201115 23:02:26.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.512" level="INFO">${RESULT} = [{'time': 0.022644222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.605499999999971e-05, 'source_diff': 4.605499999999971e-05}, {'time': 0.022705528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:26.509" endtime="20201115 23:02:26.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.526" level="INFO">${ACCURACY} = {'time': [0.022644222, 0.022705528, 0.022766167, 0.022827014, 0.022888014, 0.022949208, 0.023009903, 0.023071583, 0.023132542, 0.023193528, 0.023254542, 0.023315736, 0.023376736, 0.023437083, 0.023498...</msg>
<status status="PASS" starttime="20201115 23:02:26.513" endtime="20201115 23:02:26.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.530" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.529" endtime="20201115 23:02:26.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.533" level="INFO">VALUE: [4.605499999999971e-05, 5.08469999999997e-05, 5.451400000000203e-05, 5.277799999999985e-05, 5.180600000000146e-05, 5.073599999999914e-05, 5.179200000000189e-05, 5.3652000000001254e-05, 5.569499999999797e-05, 5.661100000000155e-05, 5.275000000000071e-05, 5.5527999999999134e-05, 5.561099999999708e-05, 5.081900000000056e-05, 5.179099999999895e-05, 5.177699999999938e-05, 5.4527999999998134e-05, 5.463899999999869e-05, 5.272200000000157e-05, 5.277799999999985e-05, 5.3693999999999964e-05, 5.263900000000016e-05, 5.6569999999998843e-05, 5.273600000000114e-05, 5.368099999999987e-05, 5.562500000000012e-05, 5.372200000000257e-05, 5.454099999999823e-05, 5.081900000000056e-05, 5.563899999999969e-05, 5.3680000000000394e-05, 5.277700000000038e-05, 5.3637999999998215e-05, 5.46670000000013e-05, 5.182000000000103e-05, 5.179100000000242e-05, 5.466699999999783e-05, 5.370899999999901e-05, 5.276400000000028e-05, 5.180600000000146e-05, 5.4666000000001824e-05, 5.1708000000001e-05, 5.656899999999937e-05, 5.465299999999826e-05, 5.275000000000071e-05, 5.55280000000026e-05, 5.272200000000157e-05, 5.4665999999998355e-05, 5.276400000000028e-05, 5.461099999999955e-05]</msg>
<status status="PASS" starttime="20201115 23:02:26.532" endtime="20201115 23:02:26.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.527" endtime="20201115 23:02:26.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.537" endtime="20201115 23:02:26.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.540" endtime="20201115 23:02:26.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.539" endtime="20201115 23:02:26.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.535" endtime="20201115 23:02:26.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.168" endtime="20201115 23:02:26.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.166" endtime="20201115 23:02:26.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.165" endtime="20201115 23:02:26.561"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.564" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.572" endtime="20201115 23:02:26.596"></status>
</kw>
<msg timestamp="20201115 23:02:26.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.570" endtime="20201115 23:02:26.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.598" endtime="20201115 23:02:26.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.600" endtime="20201115 23:02:26.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.568" endtime="20201115 23:02:26.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.566" endtime="20201115 23:02:26.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.609" endtime="20201115 23:02:26.895"></status>
</kw>
<msg timestamp="20201115 23:02:26.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028312083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028356222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.608" endtime="20201115 23:02:26.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028312083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028356222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.899" endtime="20201115 23:02:26.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.907" endtime="20201115 23:02:26.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.605" endtime="20201115 23:02:26.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.603" endtime="20201115 23:02:26.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.914" level="INFO">${RESULT} = [{'time': 0.028356222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4139000000002065e-05, 'source_diff': 4.4139000000002065e-05}, {'time': 0.028417264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:26.911" endtime="20201115 23:02:26.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.929" level="INFO">${ACCURACY} = {'time': [0.028356222, 0.028417264, 0.028478458, 0.028539917, 0.028600778, 0.028662111, 0.028723278, 0.028783875, 0.028844931, 0.028906, 0.028967194, 0.029028278, 0.029089333, 0.029150514, 0.029211556...</msg>
<status status="PASS" starttime="20201115 23:02:26.915" endtime="20201115 23:02:26.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.934" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.933" endtime="20201115 23:02:26.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.936" level="INFO">VALUE: [4.4139000000002065e-05, 5.465300000000173e-05, 5.4680000000001394e-05, 5.266700000000277e-05, 5.179200000000189e-05, 5.086099999999927e-05, 5.462500000000259e-05, 5.180600000000146e-05, 5.276400000000028e-05, 5.188899999999941e-05, 5.358300000000288e-05, 5.563899999999969e-05, 5.4651999999998785e-05, 5.083300000000013e-05, 5.359799999999845e-05, 5.087500000000231e-05, 5.465300000000173e-05, 5.469500000000044e-05, 5.373600000000214e-05, 5.561100000000055e-05, 5.357000000000278e-05, 5.3735999999998674e-05, 5.658399999999841e-05, 5.562500000000012e-05, 5.2735999999997674e-05, 5.562500000000012e-05, 5.657000000000231e-05, 5.5652000000003254e-05, 5.455500000000127e-05, 5.561100000000055e-05, 5.563899999999969e-05, 5.173600000000014e-05, 5.455500000000127e-05, 5.275000000000071e-05, 5.565299999999926e-05, 5.372200000000257e-05, 5.273600000000114e-05, 5.179199999999842e-05, 5.073600000000261e-05, 5.46670000000013e-05, 5.082000000000003e-05, 5.180500000000199e-05, 5.3680000000000394e-05, 5.174999999999971e-05, 5.276400000000028e-05, 5.176399999999928e-05, 5.3735999999998674e-05, 5.177799999999885e-05, 5.4665999999998355e-05, 4.988899999999741e-05]</msg>
<status status="PASS" starttime="20201115 23:02:26.935" endtime="20201115 23:02:26.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.930" endtime="20201115 23:02:26.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.939" endtime="20201115 23:02:26.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.943" endtime="20201115 23:02:26.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.941" endtime="20201115 23:02:26.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.938" endtime="20201115 23:02:26.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.564" endtime="20201115 23:02:26.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.562" endtime="20201115 23:02:26.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.562" endtime="20201115 23:02:26.964"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.966" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.975" endtime="20201115 23:02:26.993"></status>
</kw>
<msg timestamp="20201115 23:02:26.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.973" endtime="20201115 23:02:26.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.994" endtime="20201115 23:02:26.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.997" endtime="20201115 23:02:26.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.971" endtime="20201115 23:02:26.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.968" endtime="20201115 23:02:26.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.006" endtime="20201115 23:02:27.291"></status>
</kw>
<msg timestamp="20201115 23:02:27.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.004" endtime="20201115 23:02:27.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.296" endtime="20201115 23:02:27.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.304" endtime="20201115 23:02:27.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.002" endtime="20201115 23:02:27.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.000" endtime="20201115 23:02:27.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.311" level="INFO">${RESULT} = [{'time': 0.022594264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5111000000000456e-05, 'source_diff': 4.5111000000000456e-05}, {'time': 0.022654625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:27.308" endtime="20201115 23:02:27.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.325" level="INFO">${ACCURACY} = {'time': [0.022594264, 0.022654625, 0.022715903, 0.022776819, 0.022838361, 0.022899472, 0.022960167, 0.023021083, 0.023082458, 0.023143236, 0.02320425, 0.023265625, 0.023325972, 0.023387653, 0.0234480...</msg>
<status status="PASS" starttime="20201115 23:02:27.312" endtime="20201115 23:02:27.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.329" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.328" endtime="20201115 23:02:27.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.332" level="INFO">VALUE: [4.5111000000000456e-05, 4.990300000000045e-05, 5.176399999999928e-05, 5.2638000000000684e-05, 5.36670000000003e-05, 5.563899999999969e-05, 5.086099999999927e-05, 5.269400000000243e-05, 5.45410000000017e-05, 5.4694000000000964e-05, 5.275000000000071e-05, 5.559700000000098e-05, 5.456900000000084e-05, 5.372200000000257e-05, 5.2735999999997674e-05, 5.177800000000232e-05, 5.363900000000116e-05, 5.180500000000199e-05, 5.180499999999852e-05, 5.074999999999871e-05, 5.4680000000001394e-05, 5.180500000000199e-05, 5.465299999999826e-05, 5.561100000000055e-05, 5.176400000000275e-05, 5.455500000000127e-05, 5.180600000000146e-05, 5.179200000000189e-05, 5.561100000000055e-05, 5.2665999999999824e-05, 5.658400000000188e-05, 5.558399999999741e-05, 5.5555999999998273e-05, 5.562500000000012e-05, 5.369499999999944e-05, 5.651300000000109e-05, 5.273600000000114e-05, 5.465300000000173e-05, 5.1693999999997964e-05, 5.083400000000307e-05, 5.2735999999997674e-05, 5.083299999999666e-05, 5.462499999999912e-05, 5.080600000000046e-05, 5.2679999999999394e-05, 5.3680000000000394e-05, 5.079200000000089e-05, 5.562500000000012e-05, 5.561099999999708e-05, 5.465300000000173e-05]</msg>
<status status="PASS" starttime="20201115 23:02:27.330" endtime="20201115 23:02:27.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.325" endtime="20201115 23:02:27.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.335" endtime="20201115 23:02:27.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.338" endtime="20201115 23:02:27.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.337" endtime="20201115 23:02:27.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.333" endtime="20201115 23:02:27.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.967" endtime="20201115 23:02:27.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.965" endtime="20201115 23:02:27.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.964" endtime="20201115 23:02:27.360"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.362" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.370" endtime="20201115 23:02:27.391"></status>
</kw>
<msg timestamp="20201115 23:02:27.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.369" endtime="20201115 23:02:27.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.392" endtime="20201115 23:02:27.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.395" endtime="20201115 23:02:27.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.366" endtime="20201115 23:02:27.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.364" endtime="20201115 23:02:27.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.404" endtime="20201115 23:02:27.690"></status>
</kw>
<msg timestamp="20201115 23:02:27.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023955194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024004125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.402" endtime="20201115 23:02:27.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023955194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024004125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.694" endtime="20201115 23:02:27.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.703" endtime="20201115 23:02:27.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.400" endtime="20201115 23:02:27.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.398" endtime="20201115 23:02:27.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.710" level="INFO">${RESULT} = [{'time': 0.024004125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8931000000002056e-05, 'source_diff': 4.8931000000002056e-05}, {'time': 0.024065167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:27.706" endtime="20201115 23:02:27.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.723" level="INFO">${ACCURACY} = {'time': [0.024004125, 0.024065167, 0.024126056, 0.024186944, 0.024247778, 0.024308986, 0.024369875, 0.024431417, 0.024491667, 0.024552875, 0.024614264, 0.024675069, 0.024736111, 0.024797319, 0.024857...</msg>
<status status="PASS" starttime="20201115 23:02:27.711" endtime="20201115 23:02:27.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.728" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.727" endtime="20201115 23:02:27.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.730" level="INFO">VALUE: [4.8931000000002056e-05, 5.369499999999944e-05, 5.647300000000133e-05, 5.177699999999938e-05, 5.180600000000146e-05, 5.180500000000199e-05, 5.083300000000013e-05, 5.270900000000148e-05, 4.988900000000088e-05, 5.658299999999894e-05, 5.093100000000059e-05, 5.5638000000000215e-05, 5.3680000000000394e-05, 5.2708000000002e-05, 5.4721999999996634e-05, 5.174999999999971e-05, 5.272200000000157e-05, 5.273600000000114e-05, 4.9945000000002626e-05, 5.090300000000145e-05, 5.180499999999852e-05, 5.182000000000103e-05, 5.6528000000000134e-05, 5.086100000000274e-05, 5.466699999999783e-05, 5.563899999999969e-05, 5.665299999999679e-05, 5.661099999999808e-05, 5.4638000000002684e-05, 5.08469999999997e-05, 5.659699999999851e-05, 5.4665999999998355e-05, 5.368099999999987e-05, 5.6638000000001215e-05, 5.561200000000002e-05, 5.281899999999909e-05, 5.181900000000156e-05, 5.3777999999997383e-05, 5.662499999999765e-05, 5.661099999999808e-05, 5.475000000000271e-05, 5.661200000000102e-05, 5.461099999999955e-05, 5.377800000000085e-05, 5.662499999999765e-05, 5.7583999999999413e-05, 5.562500000000012e-05, 5.094500000000016e-05, 5.080600000000046e-05, 5.2721999999998104e-05]</msg>
<status status="PASS" starttime="20201115 23:02:27.729" endtime="20201115 23:02:27.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.724" endtime="20201115 23:02:27.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.733" endtime="20201115 23:02:27.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.737" endtime="20201115 23:02:27.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.735" endtime="20201115 23:02:27.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.732" endtime="20201115 23:02:27.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.363" endtime="20201115 23:02:27.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.361" endtime="20201115 23:02:27.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.360" endtime="20201115 23:02:27.758"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.760" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.769" endtime="20201115 23:02:27.792"></status>
</kw>
<msg timestamp="20201115 23:02:27.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.767" endtime="20201115 23:02:27.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.794" endtime="20201115 23:02:27.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.797" endtime="20201115 23:02:27.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.765" endtime="20201115 23:02:27.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.762" endtime="20201115 23:02:27.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.806" endtime="20201115 23:02:28.090"></status>
</kw>
<msg timestamp="20201115 23:02:28.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027309569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027366181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.804" endtime="20201115 23:02:28.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027309569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027366181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.094" endtime="20201115 23:02:28.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.103" endtime="20201115 23:02:28.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.802" endtime="20201115 23:02:28.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.800" endtime="20201115 23:02:28.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.110" level="INFO">${RESULT} = [{'time': 0.027366181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.661200000000102e-05, 'source_diff': 5.661200000000102e-05}, {'time': 0.027427097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:28.106" endtime="20201115 23:02:28.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.123" level="INFO">${ACCURACY} = {'time': [0.027366181, 0.027427097, 0.027488722, 0.027549681, 0.027610153, 0.027671069, 0.027732444, 0.027793875, 0.027854625, 0.027915708, 0.027976681, 0.028037528, 0.028098778, 0.028159847, 0.028220...</msg>
<status status="PASS" starttime="20201115 23:02:28.111" endtime="20201115 23:02:28.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.128" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.127" endtime="20201115 23:02:28.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.130" level="INFO">VALUE: [5.661200000000102e-05, 5.3693999999999964e-05, 5.759699999999951e-05, 5.56809999999984e-05, 5.6555999999999274e-05, 5.5651999999999785e-05, 5.561099999999708e-05, 5.2735999999997674e-05, 5.3707999999999534e-05, 5.562500000000012e-05, 5.368099999999987e-05, 5.466699999999783e-05, 5.091700000000102e-05, 5.184699999999723e-05, 5.184699999999723e-05, 5.563899999999969e-05, 5.563899999999969e-05, 5.277700000000038e-05, 5.479100000000195e-05, 5.4749999999999244e-05, 5.08469999999997e-05, 5.468100000000087e-05, 5.087499999999884e-05, 5.563899999999969e-05, 5.276400000000028e-05, 5.562500000000012e-05, 5.661099999999808e-05, 5.372299999999858e-05, 5.08469999999997e-05, 5.379100000000095e-05, 5.280599999999899e-05, 5.281900000000256e-05, 5.279200000000289e-05, 5.190299999999898e-05, 5.459799999999945e-05, 5.658300000000241e-05, 5.563899999999969e-05, 5.273600000000114e-05, 5.373600000000214e-05, 5.180600000000146e-05, 5.5693999999998495e-05, 5.656899999999937e-05, 5.180600000000146e-05, 5.179199999999842e-05, 5.7541999999997234e-05, 5.082000000000003e-05, 5.277700000000038e-05, 5.658299999999894e-05, 5.275000000000071e-05, 5.273600000000114e-05]</msg>
<status status="PASS" starttime="20201115 23:02:28.129" endtime="20201115 23:02:28.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.124" endtime="20201115 23:02:28.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.133" endtime="20201115 23:02:28.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.137" endtime="20201115 23:02:28.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.135" endtime="20201115 23:02:28.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.132" endtime="20201115 23:02:28.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.761" endtime="20201115 23:02:28.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.759" endtime="20201115 23:02:28.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.758" endtime="20201115 23:02:28.158"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.160" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.169" endtime="20201115 23:02:28.189"></status>
</kw>
<msg timestamp="20201115 23:02:28.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.168" endtime="20201115 23:02:28.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.190" endtime="20201115 23:02:28.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.193" endtime="20201115 23:02:28.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.165" endtime="20201115 23:02:28.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.162" endtime="20201115 23:02:28.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.202" endtime="20201115 23:02:28.487"></status>
</kw>
<msg timestamp="20201115 23:02:28.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024239181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024288986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.200" endtime="20201115 23:02:28.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024239181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024288986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.491" endtime="20201115 23:02:28.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.500" endtime="20201115 23:02:28.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.198" endtime="20201115 23:02:28.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.196" endtime="20201115 23:02:28.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.506" level="INFO">${RESULT} = [{'time': 0.024288986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.980499999999999e-05, 'source_diff': 4.980499999999999e-05}, {'time': 0.024350431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:28.503" endtime="20201115 23:02:28.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.521" level="INFO">${ACCURACY} = {'time': [0.024288986, 0.024350431, 0.02441125, 0.024472708, 0.024533611, 0.024594389, 0.024655028, 0.024716819, 0.024777944, 0.024838361, 0.024900042, 0.024960514, 0.025021556, 0.025082194, 0.0251441...</msg>
<status status="PASS" starttime="20201115 23:02:28.507" endtime="20201115 23:02:28.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.526" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.525" endtime="20201115 23:02:28.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.528" level="INFO">VALUE: [4.980499999999999e-05, 5.658399999999841e-05, 5.658299999999894e-05, 5.3721999999999104e-05, 5.563899999999969e-05, 5.658300000000241e-05, 5.370899999999901e-05, 5.652700000000066e-05, 5.076299999999881e-05, 5.465299999999826e-05, 5.465300000000173e-05, 5.6569999999998843e-05, 5.463899999999869e-05, 5.3707999999999534e-05, 5.177799999999885e-05, 5.273600000000114e-05, 5.081900000000056e-05, 5.7542000000000704e-05, 4.988900000000088e-05, 5.469499999999697e-05, 5.080600000000046e-05, 5.555500000000227e-05, 5.2749999999997244e-05, 5.6555999999999274e-05, 5.180599999999799e-05, 5.4679999999997925e-05, 5.4694000000000964e-05, 5.65549999999998e-05, 5.26669999999993e-05, 5.559699999999751e-05, 5.562499999999665e-05, 5.179100000000242e-05, 5.4665999999998355e-05, 5.6555999999999274e-05, 5.561100000000055e-05, 5.368099999999987e-05, 5.465300000000173e-05, 5.5651999999999785e-05, 5.656900000000284e-05, 5.659699999999851e-05, 5.177799999999885e-05, 5.179200000000189e-05, 5.3721999999999104e-05, 5.7528000000001134e-05, 5.559699999999751e-05, 5.368099999999987e-05, 5.556899999999837e-05, 5.6555999999999274e-05, 5.372200000000257e-05, 5.6514000000000564e-05]</msg>
<status status="PASS" starttime="20201115 23:02:28.527" endtime="20201115 23:02:28.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.522" endtime="20201115 23:02:28.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.531" endtime="20201115 23:02:28.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.535" endtime="20201115 23:02:28.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.533" endtime="20201115 23:02:28.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.530" endtime="20201115 23:02:28.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.161" endtime="20201115 23:02:28.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.159" endtime="20201115 23:02:28.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.158" endtime="20201115 23:02:28.556"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.559" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.567" endtime="20201115 23:02:28.587"></status>
</kw>
<msg timestamp="20201115 23:02:28.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.565" endtime="20201115 23:02:28.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.588" endtime="20201115 23:02:28.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.591" endtime="20201115 23:02:28.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.563" endtime="20201115 23:02:28.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.561" endtime="20201115 23:02:28.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.600" endtime="20201115 23:02:28.886"></status>
</kw>
<msg timestamp="20201115 23:02:28.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022860417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.598" endtime="20201115 23:02:28.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022860417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.890" endtime="20201115 23:02:28.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.899" endtime="20201115 23:02:28.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.596" endtime="20201115 23:02:28.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.594" endtime="20201115 23:02:28.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.906" level="INFO">${RESULT} = [{'time': 0.022860417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6541999999999704e-05, 'source_diff': 5.6541999999999704e-05}, {'time': 0.022921528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:28.902" endtime="20201115 23:02:28.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.919" level="INFO">${ACCURACY} = {'time': [0.022860417, 0.022921528, 0.022982736, 0.023044222, 0.023105083, 0.023165903, 0.023227139, 0.023288319, 0.023349125, 0.023409667, 0.023471319, 0.023532333, 0.023592764, 0.023654125, 0.023715...</msg>
<status status="PASS" starttime="20201115 23:02:28.907" endtime="20201115 23:02:28.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.924" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.923" endtime="20201115 23:02:28.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.927" level="INFO">VALUE: [5.6541999999999704e-05, 5.559700000000098e-05, 5.179199999999842e-05, 5.461099999999955e-05, 5.6651999999997316e-05, 5.176400000000275e-05, 5.368099999999987e-05, 5.456899999999737e-05, 5.2735999999997674e-05, 5.080599999999699e-05, 5.1708000000001e-05, 5.179099999999895e-05, 5.183299999999766e-05, 5.461100000000302e-05, 5.458300000000041e-05, 4.987499999999784e-05, 5.462500000000259e-05, 5.363899999999769e-05, 5.370899999999901e-05, 5.176400000000275e-05, 5.369499999999944e-05, 5.08469999999997e-05, 5.465300000000173e-05, 5.177800000000232e-05, 5.269400000000243e-05, 5.276400000000028e-05, 5.369499999999944e-05, 5.277799999999985e-05, 5.65549999999998e-05, 5.363900000000116e-05, 5.468100000000087e-05, 5.558300000000141e-05, 5.7485999999998955e-05, 5.177799999999885e-05, 5.369499999999944e-05, 5.658400000000188e-05, 5.26669999999993e-05, 5.081900000000056e-05, 5.279199999999942e-05, 5.659800000000145e-05, 5.5665999999999355e-05, 5.086099999999927e-05, 5.656899999999937e-05, 5.269400000000243e-05, 5.556899999999837e-05, 5.2735999999997674e-05, 5.7514000000001564e-05, 5.558300000000141e-05, 5.174999999999971e-05, 5.277700000000038e-05]</msg>
<status status="PASS" starttime="20201115 23:02:28.925" endtime="20201115 23:02:28.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.920" endtime="20201115 23:02:28.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.931" endtime="20201115 23:02:28.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.934" endtime="20201115 23:02:28.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.932" endtime="20201115 23:02:28.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.929" endtime="20201115 23:02:28.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.559" endtime="20201115 23:02:28.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.558" endtime="20201115 23:02:28.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.557" endtime="20201115 23:02:28.955"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.958" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.966" endtime="20201115 23:02:28.987"></status>
</kw>
<msg timestamp="20201115 23:02:28.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.964" endtime="20201115 23:02:28.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.989" endtime="20201115 23:02:28.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.991" endtime="20201115 23:02:28.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.962" endtime="20201115 23:02:28.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.960" endtime="20201115 23:02:28.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.000" endtime="20201115 23:02:29.286"></status>
</kw>
<msg timestamp="20201115 23:02:29.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025828181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025887611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.999" endtime="20201115 23:02:29.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025828181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025887611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.291" endtime="20201115 23:02:29.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.299" endtime="20201115 23:02:29.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.996" endtime="20201115 23:02:29.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.994" endtime="20201115 23:02:29.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.306" level="INFO">${RESULT} = [{'time': 0.025887611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9430000000002675e-05, 'source_diff': 5.9430000000002675e-05}, {'time': 0.025948778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:29.302" endtime="20201115 23:02:29.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.319" level="INFO">${ACCURACY} = {'time': [0.025887611, 0.025948778, 0.026009944, 0.026070486, 0.026131167, 0.026192722, 0.026253833, 0.026314944, 0.026375597, 0.0264365, 0.026497708, 0.026558583, 0.026620153, 0.026680417, 0.02674190...</msg>
<status status="PASS" starttime="20201115 23:02:29.307" endtime="20201115 23:02:29.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.324" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.323" endtime="20201115 23:02:29.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.330" level="INFO">VALUE: [5.9430000000002675e-05, 5.3721999999999104e-05, 5.559700000000098e-05, 5.455500000000127e-05, 5.188899999999941e-05, 5.658300000000241e-05, 5.562500000000012e-05, 5.6471999999998385e-05, 5.459699999999998e-05, 5.6458000000002284e-05, 5.556899999999837e-05, 5.177699999999938e-05, 5.370899999999901e-05, 5.080600000000046e-05, 5.363900000000116e-05, 5.36670000000003e-05, 5.081900000000056e-05, 5.659699999999851e-05, 5.081900000000056e-05, 5.55549999999988e-05, 5.359799999999845e-05, 5.277799999999985e-05, 5.083300000000013e-05, 5.4541999999997703e-05, 5.376400000000128e-05, 5.561100000000055e-05, 5.369500000000291e-05, 5.561100000000055e-05, 5.369499999999944e-05, 5.7444000000000245e-05, 5.5499999999999994e-05, 5.273600000000114e-05, 5.369499999999944e-05, 5.462499999999912e-05, 5.4679999999997925e-05, 5.179200000000189e-05, 5.179199999999842e-05, 5.454099999999823e-05, 5.180600000000146e-05, 5.468100000000087e-05, 5.169499999999744e-05, 5.658300000000241e-05, 5.168000000000186e-05, 5.561100000000055e-05, 5.465300000000173e-05, 5.565299999999926e-05, 5.3707999999999534e-05, 5.270899999999801e-05, 5.180599999999799e-05, 5.655600000000274e-05]</msg>
<status status="PASS" starttime="20201115 23:02:29.325" endtime="20201115 23:02:29.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.320" endtime="20201115 23:02:29.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.334" endtime="20201115 23:02:29.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.337" endtime="20201115 23:02:29.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.335" endtime="20201115 23:02:29.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.332" endtime="20201115 23:02:29.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.958" endtime="20201115 23:02:29.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.956" endtime="20201115 23:02:29.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.956" endtime="20201115 23:02:29.358"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.361" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.369" endtime="20201115 23:02:29.390"></status>
</kw>
<msg timestamp="20201115 23:02:29.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.367" endtime="20201115 23:02:29.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.391" endtime="20201115 23:02:29.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.394" endtime="20201115 23:02:29.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.365" endtime="20201115 23:02:29.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.363" endtime="20201115 23:02:29.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.403" endtime="20201115 23:02:29.688"></status>
</kw>
<msg timestamp="20201115 23:02:29.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024765125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024824556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.402" endtime="20201115 23:02:29.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024765125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024824556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.692" endtime="20201115 23:02:29.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.701" endtime="20201115 23:02:29.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.399" endtime="20201115 23:02:29.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.397" endtime="20201115 23:02:29.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.707" level="INFO">${RESULT} = [{'time': 0.024824556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.943100000000215e-05, 'source_diff': 5.943100000000215e-05}, {'time': 0.024885514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:29.704" endtime="20201115 23:02:29.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.721" level="INFO">${ACCURACY} = {'time': [0.024824556, 0.024885514, 0.024945833, 0.025007458, 0.025068083, 0.025129042, 0.025189903, 0.025251639, 0.025312125, 0.025373111, 0.025434208, 0.025495319, 0.025556486, 0.025617861, 0.025679...</msg>
<status status="PASS" starttime="20201115 23:02:29.709" endtime="20201115 23:02:29.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.726" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.725" endtime="20201115 23:02:29.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.728" level="INFO">VALUE: [5.943100000000215e-05, 5.5722000000001104e-05, 5.180500000000199e-05, 5.461099999999955e-05, 5.072200000000304e-05, 5.277799999999985e-05, 5.3735999999998674e-05, 5.180599999999799e-05, 5.180600000000146e-05, 5.4680000000001394e-05, 5.259700000000145e-05, 5.179099999999895e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.658399999999841e-05, 5.659700000000198e-05, 5.2721999999998104e-05, 5.5555999999998273e-05, 5.180600000000146e-05, 5.180500000000199e-05, 5.465299999999826e-05, 5.359699999999898e-05, 5.462499999999912e-05, 5.3680000000000394e-05, 5.456900000000084e-05, 5.562500000000012e-05, 5.086099999999927e-05, 5.456899999999737e-05, 5.179199999999842e-05, 5.082000000000003e-05, 5.754100000000123e-05, 5.168100000000134e-05, 5.5638000000000215e-05, 5.087499999999884e-05, 5.658299999999894e-05, 5.455600000000074e-05, 5.65549999999998e-05, 5.080500000000099e-05, 5.3708000000003e-05, 5.7528000000001134e-05, 5.468100000000087e-05, 5.658300000000241e-05, 5.369499999999944e-05, 5.362500000000159e-05, 5.562500000000012e-05, 5.363899999999769e-05, 5.1666000000002293e-05, 5.561099999999708e-05, 5.469500000000044e-05, 5.661100000000155e-05]</msg>
<status status="PASS" starttime="20201115 23:02:29.727" endtime="20201115 23:02:29.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.722" endtime="20201115 23:02:29.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.732" endtime="20201115 23:02:29.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.735" endtime="20201115 23:02:29.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.733" endtime="20201115 23:02:29.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.730" endtime="20201115 23:02:29.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.361" endtime="20201115 23:02:29.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.359" endtime="20201115 23:02:29.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.359" endtime="20201115 23:02:29.756"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.759" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.767" endtime="20201115 23:02:29.786"></status>
</kw>
<msg timestamp="20201115 23:02:29.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.765" endtime="20201115 23:02:29.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.788" endtime="20201115 23:02:29.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.791" endtime="20201115 23:02:29.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.763" endtime="20201115 23:02:29.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.761" endtime="20201115 23:02:29.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.800" endtime="20201115 23:02:30.086"></status>
</kw>
<msg timestamp="20201115 23:02:30.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023657319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237005, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:29.798" endtime="20201115 23:02:30.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023657319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237005, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:30.091" endtime="20201115 23:02:30.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.099" endtime="20201115 23:02:30.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.795" endtime="20201115 23:02:30.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.794" endtime="20201115 23:02:30.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.106" level="INFO">${RESULT} = [{'time': 0.0237005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3180999999999775e-05, 'source_diff': 4.3180999999999775e-05}, {'time': 0.023761597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:30.103" endtime="20201115 23:02:30.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.121" level="INFO">${ACCURACY} = {'time': [0.0237005, 0.023761597, 0.023822694, 0.023883542, 0.023945139, 0.024006153, 0.024067222, 0.024128208, 0.024189097, 0.024249875, 0.024311597, 0.024372431, 0.024433167, 0.024493986, 0.02455515...</msg>
<status status="PASS" starttime="20201115 23:02:30.107" endtime="20201115 23:02:30.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.125" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.124" endtime="20201115 23:02:30.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.128" level="INFO">VALUE: [4.3180999999999775e-05, 5.086099999999927e-05, 5.65549999999998e-05, 5.465300000000173e-05, 5.462499999999912e-05, 5.2735999999997674e-05, 5.4665999999998355e-05, 5.083300000000013e-05, 5.08469999999997e-05, 5.081900000000056e-05, 5.4680000000001394e-05, 5.465299999999826e-05, 5.369499999999944e-05, 5.3777999999997383e-05, 5.275000000000071e-05, 5.275000000000071e-05, 5.181899999999809e-05, 5.277799999999985e-05, 5.373700000000162e-05, 5.463899999999869e-05, 5.556899999999837e-05, 5.562500000000012e-05, 5.3707999999999534e-05, 5.086099999999927e-05, 5.7542000000000704e-05, 5.562500000000012e-05, 5.180600000000146e-05, 5.079200000000089e-05, 5.180499999999852e-05, 5.4651999999998785e-05, 5.3707999999999534e-05, 5.179200000000189e-05, 5.4680000000001394e-05, 5.656899999999937e-05, 5.3721999999999104e-05, 5.465300000000173e-05, 5.3707999999999534e-05, 5.465300000000173e-05, 5.08339999999996e-05, 5.3707999999999534e-05, 5.563899999999969e-05, 5.2735999999997674e-05, 5.4735999999999674e-05, 5.559700000000098e-05, 5.658399999999841e-05, 5.179199999999842e-05, 5.658399999999841e-05, 5.181900000000156e-05, 5.46670000000013e-05, 5.558300000000141e-05]</msg>
<status status="PASS" starttime="20201115 23:02:30.127" endtime="20201115 23:02:30.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.122" endtime="20201115 23:02:30.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.131" endtime="20201115 23:02:30.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.135" endtime="20201115 23:02:30.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.133" endtime="20201115 23:02:30.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.130" endtime="20201115 23:02:30.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.759" endtime="20201115 23:02:30.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.757" endtime="20201115 23:02:30.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.757" endtime="20201115 23:02:30.156"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.158" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.166" endtime="20201115 23:02:30.188"></status>
</kw>
<msg timestamp="20201115 23:02:30.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.165" endtime="20201115 23:02:30.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.190" endtime="20201115 23:02:30.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.192" endtime="20201115 23:02:30.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.162" endtime="20201115 23:02:30.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.160" endtime="20201115 23:02:30.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.202" endtime="20201115 23:02:30.487"></status>
</kw>
<msg timestamp="20201115 23:02:30.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026005611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026056417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.200" endtime="20201115 23:02:30.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026005611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026056417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.491" endtime="20201115 23:02:30.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.500" endtime="20201115 23:02:30.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.197" endtime="20201115 23:02:30.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.195" endtime="20201115 23:02:30.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.506" level="INFO">${RESULT} = [{'time': 0.026056417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.080599999999699e-05, 'source_diff': 5.080599999999699e-05}, {'time': 0.026116667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:30.503" endtime="20201115 23:02:30.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.520" level="INFO">${ACCURACY} = {'time': [0.026056417, 0.026116667, 0.026177917, 0.026239194, 0.026300042, 0.026361042, 0.026422403, 0.026483069, 0.026543917, 0.026605569, 0.026666236, 0.026727167, 0.026788153, 0.026849222, 0.026910...</msg>
<status status="PASS" starttime="20201115 23:02:30.507" endtime="20201115 23:02:30.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.524" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.523" endtime="20201115 23:02:30.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.527" level="INFO">VALUE: [5.080599999999699e-05, 4.990300000000045e-05, 5.558399999999741e-05, 5.2652000000000254e-05, 5.56809999999984e-05, 5.6514000000000564e-05, 5.6486000000001424e-05, 5.375000000000171e-05, 5.559800000000045e-05, 5.4651999999998785e-05, 5.276400000000028e-05, 5.5555999999998273e-05, 5.459699999999998e-05, 5.465299999999826e-05, 5.2763999999996813e-05, 5.463899999999869e-05, 5.562500000000012e-05, 5.461099999999955e-05, 5.176299999999981e-05, 5.179100000000242e-05, 5.2708000000002e-05, 5.461099999999955e-05, 5.659699999999851e-05, 5.659800000000145e-05, 5.372200000000257e-05, 5.180599999999799e-05, 5.6569999999998843e-05, 5.275000000000071e-05, 5.373699999999815e-05, 5.276400000000028e-05, 5.177800000000232e-05, 5.179199999999842e-05, 5.275000000000071e-05, 5.2707999999998534e-05, 5.5541999999998704e-05, 5.2708000000002e-05, 5.4679999999997925e-05, 5.7471999999999385e-05, 5.269400000000243e-05, 5.08469999999997e-05, 5.270900000000148e-05, 5.656899999999937e-05, 5.558300000000141e-05, 5.08469999999997e-05, 5.26669999999993e-05, 5.174999999999971e-05, 5.658299999999894e-05, 5.659700000000198e-05, 5.276400000000028e-05, 5.1721999999997104e-05]</msg>
<status status="PASS" starttime="20201115 23:02:30.525" endtime="20201115 23:02:30.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.521" endtime="20201115 23:02:30.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.530" endtime="20201115 23:02:30.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.534" endtime="20201115 23:02:30.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.532" endtime="20201115 23:02:30.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.528" endtime="20201115 23:02:30.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.159" endtime="20201115 23:02:30.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.157" endtime="20201115 23:02:30.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.156" endtime="20201115 23:02:30.555"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.557" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.565" endtime="20201115 23:02:30.589"></status>
</kw>
<msg timestamp="20201115 23:02:30.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.564" endtime="20201115 23:02:30.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.591" endtime="20201115 23:02:30.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.594" endtime="20201115 23:02:30.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.561" endtime="20201115 23:02:30.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.559" endtime="20201115 23:02:30.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.603" endtime="20201115 23:02:30.889"></status>
</kw>
<msg timestamp="20201115 23:02:30.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023962278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024017014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.601" endtime="20201115 23:02:30.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023962278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024017014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.893" endtime="20201115 23:02:30.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.901" endtime="20201115 23:02:30.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.599" endtime="20201115 23:02:30.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.597" endtime="20201115 23:02:30.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.908" level="INFO">${RESULT} = [{'time': 0.024017014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4735999999999674e-05, 'source_diff': 5.4735999999999674e-05}, {'time': 0.02407825, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:02:30.905" endtime="20201115 23:02:30.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.922" level="INFO">${ACCURACY} = {'time': [0.024017014, 0.02407825, 0.024139292, 0.024199861, 0.024260486, 0.024321903, 0.024382917, 0.024444083, 0.024505556, 0.02456575, 0.024627444, 0.024687861, 0.024749167, 0.024810083, 0.02487095...</msg>
<status status="PASS" starttime="20201115 23:02:30.909" endtime="20201115 23:02:30.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.926" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.925" endtime="20201115 23:02:30.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.929" level="INFO">VALUE: [5.4735999999999674e-05, 5.463899999999869e-05, 5.463899999999869e-05, 5.3749999999998244e-05, 5.08469999999997e-05, 5.179199999999842e-05, 5.179200000000189e-05, 5.461099999999955e-05, 5.461200000000249e-05, 5.3707999999999534e-05, 5.279099999999995e-05, 5.087499999999884e-05, 5.08339999999996e-05, 5.658299999999894e-05, 5.563899999999969e-05, 5.181899999999809e-05, 5.469500000000044e-05, 5.4708000000000534e-05, 5.272300000000105e-05, 5.3707999999999534e-05, 5.661099999999808e-05, 5.561100000000055e-05, 5.3693999999999964e-05, 5.3693999999999964e-05, 5.4722000000000104e-05, 5.273600000000114e-05, 5.46670000000013e-05, 5.559799999999698e-05, 5.561100000000055e-05, 5.7500000000001994e-05, 5.656899999999937e-05, 5.568100000000187e-05, 5.663900000000069e-05, 5.2693999999998964e-05, 5.177699999999938e-05, 5.4722000000000104e-05, 5.562500000000012e-05, 5.083400000000307e-05, 5.46670000000013e-05, 5.083300000000013e-05, 5.083300000000013e-05, 5.565299999999926e-05, 5.272299999999758e-05, 5.562499999999665e-05, 5.2735999999997674e-05, 5.758400000000288e-05, 5.561099999999708e-05, 5.179200000000189e-05, 5.179199999999842e-05, 5.381999999999956e-05]</msg>
<status status="PASS" starttime="20201115 23:02:30.927" endtime="20201115 23:02:30.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.922" endtime="20201115 23:02:30.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.932" endtime="20201115 23:02:30.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.935" endtime="20201115 23:02:30.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.934" endtime="20201115 23:02:30.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.930" endtime="20201115 23:02:30.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.558" endtime="20201115 23:02:30.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.556" endtime="20201115 23:02:30.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.555" endtime="20201115 23:02:30.957"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.959" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.968" endtime="20201115 23:02:30.988"></status>
</kw>
<msg timestamp="20201115 23:02:30.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.966" endtime="20201115 23:02:30.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.989" endtime="20201115 23:02:30.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.992" endtime="20201115 23:02:30.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.964" endtime="20201115 23:02:30.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.961" endtime="20201115 23:02:30.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.001" endtime="20201115 23:02:31.287"></status>
</kw>
<msg timestamp="20201115 23:02:31.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024218611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024266556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.999" endtime="20201115 23:02:31.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024218611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024266556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.292" endtime="20201115 23:02:31.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.300" endtime="20201115 23:02:31.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.997" endtime="20201115 23:02:31.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.995" endtime="20201115 23:02:31.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.307" level="INFO">${RESULT} = [{'time': 0.024266556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7945000000000626e-05, 'source_diff': 4.7945000000000626e-05}, {'time': 0.024327181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:31.303" endtime="20201115 23:02:31.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.320" level="INFO">${ACCURACY} = {'time': [0.024266556, 0.024327181, 0.024388667, 0.024449778, 0.024510236, 0.024571833, 0.024632014, 0.024693167, 0.024754583, 0.024815278, 0.024876694, 0.024937708, 0.024998861, 0.025059556, 0.025120...</msg>
<status status="PASS" starttime="20201115 23:02:31.308" endtime="20201115 23:02:31.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.325" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.324" endtime="20201115 23:02:31.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.327" level="INFO">VALUE: [4.7945000000000626e-05, 5.26669999999993e-05, 5.465299999999826e-05, 5.4722000000000104e-05, 5.081900000000056e-05, 5.280500000000299e-05, 4.986100000000174e-05, 5.466699999999783e-05, 5.562500000000012e-05, 5.276400000000028e-05, 5.180500000000199e-05, 5.659699999999851e-05, 5.080500000000099e-05, 5.265299999999973e-05, 5.4693999999997495e-05, 5.368099999999987e-05, 5.2735999999997674e-05, 5.3707999999999534e-05, 5.369500000000291e-05, 5.083300000000013e-05, 5.561100000000055e-05, 5.558300000000141e-05, 5.658300000000241e-05, 5.179199999999842e-05, 5.181999999999756e-05, 5.652700000000066e-05, 5.462499999999912e-05, 5.173600000000014e-05, 5.656899999999937e-05, 5.275000000000071e-05, 5.181999999999756e-05, 5.179200000000189e-05, 5.184800000000017e-05, 5.557000000000131e-05, 5.5527999999999134e-05, 5.3638000000001684e-05, 5.084700000000317e-05, 5.2707999999998534e-05, 5.465300000000173e-05, 5.176400000000275e-05, 5.4680000000001394e-05, 5.086099999999927e-05, 5.177799999999885e-05, 5.3735999999998674e-05, 5.275000000000071e-05, 5.076400000000175e-05, 5.083300000000013e-05, 5.272200000000157e-05, 5.65549999999998e-05, 5.469500000000044e-05]</msg>
<status status="PASS" starttime="20201115 23:02:31.326" endtime="20201115 23:02:31.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.321" endtime="20201115 23:02:31.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.331" endtime="20201115 23:02:31.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.334" endtime="20201115 23:02:31.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.332" endtime="20201115 23:02:31.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.329" endtime="20201115 23:02:31.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.960" endtime="20201115 23:02:31.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.958" endtime="20201115 23:02:31.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.957" endtime="20201115 23:02:31.356"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.358" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.366" endtime="20201115 23:02:31.389"></status>
</kw>
<msg timestamp="20201115 23:02:31.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.365" endtime="20201115 23:02:31.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.391" endtime="20201115 23:02:31.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.393" endtime="20201115 23:02:31.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.362" endtime="20201115 23:02:31.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.360" endtime="20201115 23:02:31.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.402" endtime="20201115 23:02:31.687"></status>
</kw>
<msg timestamp="20201115 23:02:31.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027325083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027384514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.401" endtime="20201115 23:02:31.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027325083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027384514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.691" endtime="20201115 23:02:31.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.700" endtime="20201115 23:02:31.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.398" endtime="20201115 23:02:31.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.396" endtime="20201115 23:02:31.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.706" level="INFO">${RESULT} = [{'time': 0.027384514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.943099999999868e-05, 'source_diff': 5.943099999999868e-05}, {'time': 0.027445625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:31.703" endtime="20201115 23:02:31.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.721" level="INFO">${ACCURACY} = {'time': [0.027384514, 0.027445625, 0.027506264, 0.027567597, 0.027629042, 0.027689931, 0.027750778, 0.027811681, 0.027872667, 0.027933472, 0.027994389, 0.028055861, 0.028116806, 0.028177569, 0.028239...</msg>
<status status="PASS" starttime="20201115 23:02:31.707" endtime="20201115 23:02:31.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.726" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.725" endtime="20201115 23:02:31.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.728" level="INFO">VALUE: [5.943099999999868e-05, 5.563899999999969e-05, 5.3721999999999104e-05, 5.658299999999894e-05, 5.180599999999799e-05, 5.565299999999926e-05, 5.46670000000013e-05, 5.086200000000221e-05, 5.08339999999996e-05, 5.563899999999969e-05, 5.376400000000128e-05, 5.465300000000173e-05, 5.369499999999944e-05, 5.083300000000013e-05, 5.7542000000000704e-05, 5.08339999999996e-05, 5.459699999999998e-05, 5.5651999999999785e-05, 5.468100000000087e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.3735999999998674e-05, 5.4652000000002254e-05, 5.2735999999997674e-05, 5.08469999999997e-05, 5.46670000000013e-05, 5.465300000000173e-05, 5.2749999999997244e-05, 5.2665999999999824e-05, 5.083300000000013e-05, 5.7555999999996804e-05, 5.6569999999998843e-05, 5.4651999999998785e-05, 5.174999999999971e-05, 5.656899999999937e-05, 5.4665999999998355e-05, 5.181999999999756e-05, 5.465300000000173e-05, 5.276400000000028e-05, 5.082000000000003e-05, 5.369499999999944e-05, 5.370899999999901e-05, 5.176399999999928e-05, 5.372200000000257e-05, 5.177699999999938e-05, 5.659700000000198e-05, 5.081900000000056e-05, 5.758299999999994e-05, 5.6637999999997746e-05, 5.658300000000241e-05]</msg>
<status status="PASS" starttime="20201115 23:02:31.727" endtime="20201115 23:02:31.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.722" endtime="20201115 23:02:31.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.732" endtime="20201115 23:02:31.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.735" endtime="20201115 23:02:31.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.734" endtime="20201115 23:02:31.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.730" endtime="20201115 23:02:31.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.359" endtime="20201115 23:02:31.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.357" endtime="20201115 23:02:31.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.356" endtime="20201115 23:02:31.756"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.759" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.767" endtime="20201115 23:02:31.786"></status>
</kw>
<msg timestamp="20201115 23:02:31.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.766" endtime="20201115 23:02:31.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.788" endtime="20201115 23:02:31.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.791" endtime="20201115 23:02:31.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.763" endtime="20201115 23:02:31.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.761" endtime="20201115 23:02:31.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.800" endtime="20201115 23:02:32.086"></status>
</kw>
<msg timestamp="20201115 23:02:32.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022998125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230565, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:31.798" endtime="20201115 23:02:32.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022998125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230565, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:32.091" endtime="20201115 23:02:32.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.099" endtime="20201115 23:02:32.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.795" endtime="20201115 23:02:32.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.794" endtime="20201115 23:02:32.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.106" level="INFO">${RESULT} = [{'time': 0.0230565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.83749999999994e-05, 'source_diff': 5.83749999999994e-05}, {'time': 0.023117236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201115 23:02:32.102" endtime="20201115 23:02:32.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.119" level="INFO">${ACCURACY} = {'time': [0.0230565, 0.023117236, 0.023178056, 0.023239222, 0.023299861, 0.023360944, 0.023422056, 0.023483222, 0.023544861, 0.023605972, 0.023666569, 0.023727736, 0.023789042, 0.023849514, 0.02391063...</msg>
<status status="PASS" starttime="20201115 23:02:32.107" endtime="20201115 23:02:32.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.124" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.123" endtime="20201115 23:02:32.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.127" level="INFO">VALUE: [5.83749999999994e-05, 5.3707999999999534e-05, 5.661199999999755e-05, 5.081900000000056e-05, 5.6514000000000564e-05, 5.272200000000157e-05, 5.377800000000085e-05, 5.273600000000114e-05, 5.177799999999885e-05, 5.176399999999928e-05, 5.2735999999997674e-05, 5.3721999999999104e-05, 5.36670000000003e-05, 5.077799999999785e-05, 5.373600000000214e-05, 5.186199999999974e-05, 5.279199999999942e-05, 5.468100000000087e-05, 5.173600000000014e-05, 5.08469999999997e-05, 5.368099999999987e-05, 5.174999999999971e-05, 5.174999999999971e-05, 5.369500000000291e-05, 5.279099999999995e-05, 5.561100000000055e-05, 5.6514000000000564e-05, 5.173600000000014e-05, 5.176400000000275e-05, 5.187499999999984e-05, 5.365300000000073e-05, 5.6514000000000564e-05, 5.08469999999997e-05, 5.4680000000001394e-05, 5.457000000000031e-05, 5.556900000000184e-05, 5.462500000000259e-05, 5.7471999999999385e-05, 5.5555999999998273e-05, 5.3693999999999964e-05, 5.3721999999999104e-05, 5.562500000000012e-05, 5.556999999999784e-05, 5.172200000000057e-05, 5.658300000000241e-05, 5.2721999999998104e-05, 5.077800000000132e-05, 5.6569999999998843e-05, 5.559699999999751e-05, 5.372200000000257e-05]</msg>
<status status="PASS" starttime="20201115 23:02:32.125" endtime="20201115 23:02:32.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.120" endtime="20201115 23:02:32.128"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.130" endtime="20201115 23:02:32.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.133" endtime="20201115 23:02:32.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.132" endtime="20201115 23:02:32.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.128" endtime="20201115 23:02:32.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.759" endtime="20201115 23:02:32.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.758" endtime="20201115 23:02:32.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.757" endtime="20201115 23:02:32.155"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.157" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.165" endtime="20201115 23:02:32.188"></status>
</kw>
<msg timestamp="20201115 23:02:32.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.164" endtime="20201115 23:02:32.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.189" endtime="20201115 23:02:32.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.192" endtime="20201115 23:02:32.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.161" endtime="20201115 23:02:32.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.159" endtime="20201115 23:02:32.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.201" endtime="20201115 23:02:32.486"></status>
</kw>
<msg timestamp="20201115 23:02:32.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026673, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026723903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:32.199" endtime="20201115 23:02:32.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026673, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026723903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:32.491" endtime="20201115 23:02:32.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.499" endtime="20201115 23:02:32.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.197" endtime="20201115 23:02:32.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.195" endtime="20201115 23:02:32.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.506" level="INFO">${RESULT} = [{'time': 0.026723903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.090300000000145e-05, 'source_diff': 5.090300000000145e-05}, {'time': 0.026785056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:32.502" endtime="20201115 23:02:32.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.520" level="INFO">${ACCURACY} = {'time': [0.026723903, 0.026785056, 0.026845694, 0.026907181, 0.026968292, 0.027029417, 0.027090472, 0.027151486, 0.027212375, 0.027273, 0.027334083, 0.027395167, 0.027456681, 0.027517042, 0.027577931...</msg>
<status status="PASS" starttime="20201115 23:02:32.507" endtime="20201115 23:02:32.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.524" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.523" endtime="20201115 23:02:32.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.527" level="INFO">VALUE: [5.090300000000145e-05, 5.470900000000001e-05, 5.3652000000001254e-05, 5.269499999999844e-05, 5.469500000000044e-05, 5.082000000000003e-05, 5.6514000000000564e-05, 5.55549999999988e-05, 5.6555999999999274e-05, 5.566699999999883e-05, 5.3679999999996925e-05, 5.373600000000214e-05, 5.273700000000062e-05, 5.08339999999996e-05, 5.086199999999874e-05, 5.176399999999928e-05, 5.554099999999923e-05, 5.561100000000055e-05, 5.08339999999996e-05, 5.372200000000257e-05, 5.173600000000014e-05, 5.558400000000088e-05, 5.275000000000071e-05, 5.173600000000014e-05, 5.2707999999998534e-05, 5.276400000000028e-05, 5.46670000000013e-05, 5.370899999999901e-05, 5.461099999999955e-05, 5.179099999999895e-05, 5.558299999999794e-05, 5.556999999999784e-05, 5.177800000000232e-05, 5.08469999999997e-05, 5.465300000000173e-05, 5.656900000000284e-05, 5.558300000000141e-05, 5.556899999999837e-05, 5.466699999999783e-05, 5.555600000000174e-05, 5.6514000000000564e-05, 5.180599999999799e-05, 5.181900000000156e-05, 5.5485999999996954e-05, 5.176399999999928e-05, 5.4652000000002254e-05, 5.268099999999887e-05, 5.656899999999937e-05, 5.563899999999969e-05, 5.2735999999997674e-05]</msg>
<status status="PASS" starttime="20201115 23:02:32.525" endtime="20201115 23:02:32.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.521" endtime="20201115 23:02:32.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.530" endtime="20201115 23:02:32.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.533" endtime="20201115 23:02:32.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.532" endtime="20201115 23:02:32.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.528" endtime="20201115 23:02:32.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.158" endtime="20201115 23:02:32.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.156" endtime="20201115 23:02:32.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.155" endtime="20201115 23:02:32.555"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.557" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.565" endtime="20201115 23:02:32.584"></status>
</kw>
<msg timestamp="20201115 23:02:32.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.564" endtime="20201115 23:02:32.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.586" endtime="20201115 23:02:32.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.588" endtime="20201115 23:02:32.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.561" endtime="20201115 23:02:32.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.559" endtime="20201115 23:02:32.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.597" endtime="20201115 23:02:32.883"></status>
</kw>
<msg timestamp="20201115 23:02:32.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02376675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02383, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201115 23:02:32.596" endtime="20201115 23:02:32.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02376675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02383, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201115 23:02:32.887" endtime="20201115 23:02:32.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.896" endtime="20201115 23:02:32.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.593" endtime="20201115 23:02:32.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.592" endtime="20201115 23:02:32.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.903" level="INFO">${RESULT} = [{'time': 0.02383, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.32500000000008e-05, 'source_diff': 6.32500000000008e-05}, {'time': 0.023891042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1...</msg>
<status status="PASS" starttime="20201115 23:02:32.899" endtime="20201115 23:02:32.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.916" level="INFO">${ACCURACY} = {'time': [0.02383, 0.023891042, 0.023952125, 0.024013083, 0.024074639, 0.024135028, 0.024196694, 0.02425775, 0.024318028, 0.024379042, 0.024440028, 0.024501028, 0.024562625, 0.024623556, 0.024684917, ...</msg>
<status status="PASS" starttime="20201115 23:02:32.904" endtime="20201115 23:02:32.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.921" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.920" endtime="20201115 23:02:32.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.923" level="INFO">VALUE: [6.32500000000008e-05, 5.18340000000006e-05, 5.08469999999997e-05, 5.373600000000214e-05, 5.7569999999999844e-05, 5.276400000000028e-05, 5.459699999999998e-05, 5.463900000000216e-05, 5.08469999999997e-05, 5.465300000000173e-05, 5.659699999999851e-05, 5.282000000000203e-05, 5.275000000000071e-05, 5.276400000000028e-05, 5.370899999999901e-05, 5.080500000000099e-05, 5.08339999999996e-05, 5.658399999999841e-05, 5.276400000000028e-05, 5.465300000000173e-05, 5.276299999999734e-05, 5.3693999999999964e-05, 5.559799999999698e-05, 5.2735999999997674e-05, 5.4665999999998355e-05, 5.18340000000006e-05, 5.08339999999996e-05, 5.363900000000116e-05, 5.273600000000114e-05, 5.084799999999917e-05, 5.465300000000173e-05, 5.562500000000012e-05, 5.080499999999752e-05, 5.4665999999998355e-05, 5.5665999999999355e-05, 5.3693999999999964e-05, 5.276400000000028e-05, 5.563900000000316e-05, 5.46670000000013e-05, 5.7499999999998525e-05, 5.65549999999998e-05, 5.177699999999938e-05, 5.273600000000114e-05, 5.2735999999997674e-05, 5.563899999999969e-05, 5.272200000000157e-05, 5.3708000000003e-05, 5.561100000000055e-05, 5.177800000000232e-05, 5.466699999999783e-05]</msg>
<status status="PASS" starttime="20201115 23:02:32.922" endtime="20201115 23:02:32.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.917" endtime="20201115 23:02:32.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.926" endtime="20201115 23:02:32.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.930" endtime="20201115 23:02:32.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.928" endtime="20201115 23:02:32.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.925" endtime="20201115 23:02:32.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.558" endtime="20201115 23:02:32.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.556" endtime="20201115 23:02:32.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.555" endtime="20201115 23:02:32.951"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.953" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.962" endtime="20201115 23:02:32.984"></status>
</kw>
<msg timestamp="20201115 23:02:32.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.960" endtime="20201115 23:02:32.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.985" endtime="20201115 23:02:32.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.988" endtime="20201115 23:02:32.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.958" endtime="20201115 23:02:32.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.955" endtime="20201115 23:02:32.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.998" endtime="20201115 23:02:33.284"></status>
</kw>
<msg timestamp="20201115 23:02:33.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024079611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024140917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.996" endtime="20201115 23:02:33.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024079611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024140917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.289" endtime="20201115 23:02:33.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.297" endtime="20201115 23:02:33.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.993" endtime="20201115 23:02:33.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.992" endtime="20201115 23:02:33.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.304" level="INFO">${RESULT} = [{'time': 0.024140917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.130600000000055e-05, 'source_diff': 6.130600000000055e-05}, {'time': 0.024202403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:33.301" endtime="20201115 23:02:33.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.319" level="INFO">${ACCURACY} = {'time': [0.024140917, 0.024202403, 0.024263028, 0.024324181, 0.024385194, 0.024446653, 0.024507097, 0.024568028, 0.024629292, 0.024690681, 0.02475175, 0.024811986, 0.024873278, 0.024934389, 0.0249958...</msg>
<status status="PASS" starttime="20201115 23:02:33.305" endtime="20201115 23:02:33.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.323" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.322" endtime="20201115 23:02:33.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.326" level="INFO">VALUE: [6.130600000000055e-05, 5.46670000000013e-05, 5.659699999999851e-05, 5.463899999999869e-05, 5.552699999999966e-05, 5.2749999999997244e-05, 5.176399999999928e-05, 5.643099999999915e-05, 5.372300000000205e-05, 5.559800000000045e-05, 5.2721999999998104e-05, 5.372200000000257e-05, 5.562500000000012e-05, 5.461099999999955e-05, 5.46670000000013e-05, 5.080599999999699e-05, 5.6444000000002714e-05, 5.176399999999928e-05, 5.6541999999999704e-05, 5.269499999999844e-05, 5.5679999999998925e-05, 5.086100000000274e-05, 5.658299999999894e-05, 5.181900000000156e-05, 5.555500000000227e-05, 5.173600000000014e-05, 5.176299999999981e-05, 5.556900000000184e-05, 5.279200000000289e-05, 5.558399999999741e-05, 5.080600000000046e-05, 5.082000000000003e-05, 5.5527999999999134e-05, 5.087499999999884e-05, 5.4665999999998355e-05, 5.269500000000191e-05, 5.659700000000198e-05, 5.461099999999955e-05, 5.5555999999998273e-05, 5.562500000000012e-05, 5.172300000000005e-05, 5.6471999999998385e-05, 5.466699999999783e-05, 5.557000000000131e-05, 5.368099999999987e-05, 5.652700000000066e-05, 5.461099999999955e-05, 5.083300000000013e-05, 5.080600000000046e-05, 5.555600000000174e-05]</msg>
<status status="PASS" starttime="20201115 23:02:33.324" endtime="20201115 23:02:33.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.320" endtime="20201115 23:02:33.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.329" endtime="20201115 23:02:33.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.332" endtime="20201115 23:02:33.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.331" endtime="20201115 23:02:33.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.327" endtime="20201115 23:02:33.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.954" endtime="20201115 23:02:33.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.952" endtime="20201115 23:02:33.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.951" endtime="20201115 23:02:33.353"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.356" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.364" endtime="20201115 23:02:33.384"></status>
</kw>
<msg timestamp="20201115 23:02:33.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.363" endtime="20201115 23:02:33.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.385" endtime="20201115 23:02:33.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.388" endtime="20201115 23:02:33.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.360" endtime="20201115 23:02:33.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.358" endtime="20201115 23:02:33.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.397" endtime="20201115 23:02:33.683"></status>
</kw>
<msg timestamp="20201115 23:02:33.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023574222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023626972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.396" endtime="20201115 23:02:33.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023574222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023626972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.687" endtime="20201115 23:02:33.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.695" endtime="20201115 23:02:33.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.393" endtime="20201115 23:02:33.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.392" endtime="20201115 23:02:33.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.702" level="INFO">${RESULT} = [{'time': 0.023626972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.275000000000071e-05, 'source_diff': 5.275000000000071e-05}, {'time': 0.023688278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:33.699" endtime="20201115 23:02:33.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.715" level="INFO">${ACCURACY} = {'time': [0.023626972, 0.023688278, 0.023749625, 0.023810042, 0.023871403, 0.02393275, 0.023993153, 0.024055014, 0.024115361, 0.0241765, 0.024237403, 0.024298903, 0.024360083, 0.024420514, 0.024481722...</msg>
<status status="PASS" starttime="20201115 23:02:33.703" endtime="20201115 23:02:33.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.720" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.719" endtime="20201115 23:02:33.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.723" level="INFO">VALUE: [5.275000000000071e-05, 5.666699999999983e-05, 5.562500000000012e-05, 5.276400000000028e-05, 5.276400000000028e-05, 5.2721999999998104e-05, 5.645899999999829e-05, 5.275000000000071e-05, 5.561099999999708e-05, 5.087499999999884e-05, 5.368099999999987e-05, 5.270900000000148e-05, 5.4680000000001394e-05, 5.365300000000073e-05, 5.1708000000001e-05, 5.270900000000148e-05, 5.75550000000008e-05, 5.279200000000289e-05, 5.7514000000001564e-05, 5.563899999999969e-05, 5.181900000000156e-05, 5.186100000000027e-05, 5.086099999999927e-05, 5.376400000000128e-05, 5.654100000000023e-05, 5.08469999999997e-05, 5.461100000000302e-05, 5.661099999999808e-05, 5.558400000000088e-05, 5.365299999999726e-05, 5.373700000000162e-05, 5.077799999999785e-05, 5.363899999999769e-05, 5.2749999999997244e-05, 4.983299999999913e-05, 5.181899999999809e-05, 5.082000000000003e-05, 5.172200000000057e-05, 5.0901999999998504e-05, 5.280499999999952e-05, 5.176399999999928e-05, 5.5541999999998704e-05, 5.179199999999842e-05, 5.377800000000085e-05, 5.462499999999912e-05, 5.6485999999997955e-05, 5.276400000000028e-05, 5.083300000000013e-05, 5.174999999999971e-05, 5.561100000000055e-05]</msg>
<status status="PASS" starttime="20201115 23:02:33.721" endtime="20201115 23:02:33.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.716" endtime="20201115 23:02:33.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.726" endtime="20201115 23:02:33.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.729" endtime="20201115 23:02:33.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.728" endtime="20201115 23:02:33.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.724" endtime="20201115 23:02:33.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.356" endtime="20201115 23:02:33.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.355" endtime="20201115 23:02:33.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.354" endtime="20201115 23:02:33.750"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.753" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.762" endtime="20201115 23:02:33.780"></status>
</kw>
<msg timestamp="20201115 23:02:33.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.760" endtime="20201115 23:02:33.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.782" endtime="20201115 23:02:33.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.784" endtime="20201115 23:02:33.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.757" endtime="20201115 23:02:33.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.755" endtime="20201115 23:02:33.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.793" endtime="20201115 23:02:34.079"></status>
</kw>
<msg timestamp="20201115 23:02:34.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023597083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023664125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.792" endtime="20201115 23:02:34.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023597083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023664125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.083" endtime="20201115 23:02:34.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.092" endtime="20201115 23:02:34.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.789" endtime="20201115 23:02:34.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.788" endtime="20201115 23:02:34.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.098" level="INFO">${RESULT} = [{'time': 0.023664125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.70419999999998e-05, 'source_diff': 6.70419999999998e-05}, {'time': 0.023724431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:34.095" endtime="20201115 23:02:34.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.112" level="INFO">${ACCURACY} = {'time': [0.023664125, 0.023724431, 0.023786097, 0.023846736, 0.023907389, 0.023969056, 0.024030194, 0.024090986, 0.024151597, 0.024212819, 0.024273556, 0.024335222, 0.024395833, 0.024457125, 0.024517...</msg>
<status status="PASS" starttime="20201115 23:02:34.099" endtime="20201115 23:02:34.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.116" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.115" endtime="20201115 23:02:34.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.119" level="INFO">VALUE: [6.70419999999998e-05, 5.276400000000028e-05, 5.659699999999851e-05, 5.079200000000089e-05, 5.372200000000257e-05, 5.6541999999999704e-05, 5.076300000000228e-05, 5.458300000000041e-05, 5.180500000000199e-05, 5.45410000000017e-05, 5.269500000000191e-05, 5.754100000000123e-05, 5.2707999999998534e-05, 5.179199999999842e-05, 5.259700000000145e-05, 5.65549999999998e-05, 5.373600000000214e-05, 5.6500000000000994e-05, 5.559799999999698e-05, 5.4679999999997925e-05, 5.565300000000273e-05, 5.176399999999928e-05, 5.465300000000173e-05, 5.169400000000143e-05, 5.559700000000098e-05, 5.2680000000002863e-05, 5.561100000000055e-05, 5.5638000000000215e-05, 5.179199999999842e-05, 5.2735999999997674e-05, 5.463899999999869e-05, 5.4665999999998355e-05, 5.182000000000103e-05, 5.368099999999987e-05, 5.3735999999998674e-05, 5.079199999999742e-05, 5.373600000000214e-05, 5.275000000000071e-05, 5.662500000000112e-05, 5.457000000000031e-05, 5.3707999999999534e-05, 5.086099999999927e-05, 4.984700000000217e-05, 5.7499999999998525e-05, 5.468100000000087e-05, 5.1693999999997964e-05, 5.652700000000066e-05, 5.462500000000259e-05, 5.462499999999912e-05, 5.4693999999997495e-05]</msg>
<status status="PASS" starttime="20201115 23:02:34.117" endtime="20201115 23:02:34.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.113" endtime="20201115 23:02:34.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.122" endtime="20201115 23:02:34.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.126" endtime="20201115 23:02:34.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.124" endtime="20201115 23:02:34.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.120" endtime="20201115 23:02:34.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.753" endtime="20201115 23:02:34.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.752" endtime="20201115 23:02:34.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.751" endtime="20201115 23:02:34.147"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.150" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.158" endtime="20201115 23:02:34.177"></status>
</kw>
<msg timestamp="20201115 23:02:34.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.156" endtime="20201115 23:02:34.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.179" endtime="20201115 23:02:34.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.181" endtime="20201115 23:02:34.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.154" endtime="20201115 23:02:34.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.152" endtime="20201115 23:02:34.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.190" endtime="20201115 23:02:34.477"></status>
</kw>
<msg timestamp="20201115 23:02:34.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024188028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024249389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.189" endtime="20201115 23:02:34.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024188028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024249389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.481" endtime="20201115 23:02:34.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.490" endtime="20201115 23:02:34.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.186" endtime="20201115 23:02:34.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.184" endtime="20201115 23:02:34.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.496" level="INFO">${RESULT} = [{'time': 0.024249389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.136099999999936e-05, 'source_diff': 6.136099999999936e-05}, {'time': 0.024310264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:34.493" endtime="20201115 23:02:34.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.510" level="INFO">${ACCURACY} = {'time': [0.024249389, 0.024310264, 0.02437125, 0.024432333, 0.024493597, 0.024554292, 0.024615792, 0.024676347, 0.024738208, 0.024798375, 0.024859403, 0.024921181, 0.024981542, 0.025042542, 0.0251042...</msg>
<status status="PASS" starttime="20201115 23:02:34.497" endtime="20201115 23:02:34.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.514" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.513" endtime="20201115 23:02:34.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.517" level="INFO">VALUE: [6.136099999999936e-05, 5.468100000000087e-05, 5.562500000000012e-05, 5.2693999999998964e-05, 5.561100000000055e-05, 5.658399999999841e-05, 5.468100000000087e-05, 5.4666000000001824e-05, 5.181900000000156e-05, 5.559700000000098e-05, 5.5555999999998273e-05, 5.558400000000088e-05, 5.082000000000003e-05, 5.363900000000116e-05, 5.7514000000001564e-05, 5.561100000000055e-05, 5.372200000000257e-05, 5.082000000000003e-05, 5.658400000000188e-05, 5.373600000000214e-05, 5.562500000000012e-05, 5.657000000000231e-05, 5.3680000000000394e-05, 5.1707999999997534e-05, 5.3707999999999534e-05, 5.170900000000048e-05, 5.082000000000003e-05, 5.183299999999766e-05, 5.662500000000112e-05, 5.7583999999999413e-05, 4.988900000000088e-05, 5.276400000000028e-05, 5.5555999999998273e-05, 5.08469999999997e-05, 4.987500000000131e-05, 5.6485999999997955e-05, 5.273600000000114e-05, 5.4666000000001824e-05, 5.561100000000055e-05, 5.08469999999997e-05, 5.561099999999708e-05, 5.361099999999855e-05, 5.2735999999997674e-05, 5.373600000000214e-05, 5.180499999999852e-05, 5.369500000000291e-05, 5.273600000000114e-05, 5.3721999999999104e-05, 5.082000000000003e-05, 5.562500000000012e-05]</msg>
<status status="PASS" starttime="20201115 23:02:34.515" endtime="20201115 23:02:34.518"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.511" endtime="20201115 23:02:34.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.521" endtime="20201115 23:02:34.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.525" endtime="20201115 23:02:34.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.523" endtime="20201115 23:02:34.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.519" endtime="20201115 23:02:34.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.150" endtime="20201115 23:02:34.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.148" endtime="20201115 23:02:34.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.148" endtime="20201115 23:02:34.546"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.548" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.556" endtime="20201115 23:02:34.580"></status>
</kw>
<msg timestamp="20201115 23:02:34.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.555" endtime="20201115 23:02:34.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.581" endtime="20201115 23:02:34.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.584" endtime="20201115 23:02:34.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.552" endtime="20201115 23:02:34.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.550" endtime="20201115 23:02:34.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.593" endtime="20201115 23:02:34.879"></status>
</kw>
<msg timestamp="20201115 23:02:34.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027067833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027123458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.592" endtime="20201115 23:02:34.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027067833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027123458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.883" endtime="20201115 23:02:34.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.891" endtime="20201115 23:02:34.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.589" endtime="20201115 23:02:34.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.587" endtime="20201115 23:02:34.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.898" level="INFO">${RESULT} = [{'time': 0.027123458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.562500000000012e-05, 'source_diff': 5.562500000000012e-05}, {'time': 0.027184653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:34.895" endtime="20201115 23:02:34.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.913" level="INFO">${ACCURACY} = {'time': [0.027123458, 0.027184653, 0.027245181, 0.027306556, 0.027367583, 0.027428611, 0.027489833, 0.027550833, 0.027611514, 0.027672431, 0.027733597, 0.027795319, 0.027856194, 0.027917403, 0.027978...</msg>
<status status="PASS" starttime="20201115 23:02:34.899" endtime="20201115 23:02:34.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.917" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.916" endtime="20201115 23:02:34.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.920" level="INFO">VALUE: [5.562500000000012e-05, 5.659699999999851e-05, 5.559800000000045e-05, 5.261200000000049e-05, 5.076400000000175e-05, 5.181899999999809e-05, 5.179100000000242e-05, 5.179099999999895e-05, 5.080600000000046e-05, 5.069499999999991e-05, 5.176399999999928e-05, 5.176299999999981e-05, 5.083300000000013e-05, 5.6569999999998843e-05, 5.08339999999996e-05, 5.458300000000041e-05, 5.174999999999971e-05, 5.3707999999999534e-05, 5.659700000000198e-05, 5.276300000000081e-05, 5.458299999999694e-05, 5.272300000000105e-05, 5.370900000000248e-05, 5.280599999999899e-05, 5.558299999999794e-05, 5.556900000000184e-05, 5.562500000000012e-05, 5.4679999999997925e-05, 5.468100000000087e-05, 5.455500000000127e-05, 5.084799999999917e-05, 5.3693999999999964e-05, 5.275000000000071e-05, 5.180500000000199e-05, 5.3721999999999104e-05, 5.080600000000046e-05, 5.36670000000003e-05, 5.175000000000318e-05, 5.656899999999937e-05, 5.273600000000114e-05, 5.7527999999997664e-05, 5.368099999999987e-05, 5.659699999999851e-05, 5.375000000000171e-05, 5.657000000000231e-05, 5.362500000000159e-05, 5.1708000000001e-05, 5.652700000000066e-05, 5.462499999999912e-05, 5.179200000000189e-05]</msg>
<status status="PASS" starttime="20201115 23:02:34.919" endtime="20201115 23:02:34.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.914" endtime="20201115 23:02:34.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.924" endtime="20201115 23:02:34.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.927" endtime="20201115 23:02:34.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.926" endtime="20201115 23:02:34.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.922" endtime="20201115 23:02:34.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.549" endtime="20201115 23:02:34.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.547" endtime="20201115 23:02:34.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.546" endtime="20201115 23:02:34.948"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.951" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.959" endtime="20201115 23:02:34.986"></status>
</kw>
<msg timestamp="20201115 23:02:34.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.957" endtime="20201115 23:02:34.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.988" endtime="20201115 23:02:34.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.990" endtime="20201115 23:02:34.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.955" endtime="20201115 23:02:34.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.953" endtime="20201115 23:02:34.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.000" endtime="20201115 23:02:35.285"></status>
</kw>
<msg timestamp="20201115 23:02:35.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026337417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0264265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:34.998" endtime="20201115 23:02:35.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026337417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0264265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:35.289" endtime="20201115 23:02:35.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.298" endtime="20201115 23:02:35.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.995" endtime="20201115 23:02:35.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.994" endtime="20201115 23:02:35.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:35.304" level="INFO">${RESULT} = [{'time': 0.0264265, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.908300000000022e-05, 'source_diff': 8.908300000000022e-05}, {'time': 0.0265185, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201115 23:02:35.301" endtime="20201115 23:02:35.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:35.318" level="INFO">${ACCURACY} = {'time': [0.0264265, 0.0265185, 0.026610056, 0.026701708, 0.026792931, 0.026884167, 0.026976222, 0.027067542, 0.027158847, 0.027250431, 0.027342097, 0.027434153, 0.027525625, 0.027616903, 0.027708778,...</msg>
<status status="PASS" starttime="20201115 23:02:35.306" endtime="20201115 23:02:35.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.323" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:02:35.322" endtime="20201115 23:02:35.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.325" level="INFO">VALUE: [8.908300000000022e-05, 8.611099999999983e-05, 8.526400000000156e-05, 8.723600000000095e-05, 8.420899999999829e-05, 8.14170000000003e-05, 8.43330000000024e-05, 8.334800000000045e-05, 8.14719999999991e-05, 8.718099999999868e-05, 8.515299999999754e-05, 8.720899999999782e-05, 8.611099999999983e-05, 8.622200000000038e-05, 8.526400000000156e-05, 8.531999999999984e-05, 8.42919999999997e-05, 8.623599999999995e-05, 8.14170000000003e-05, 8.61660000000021e-05, 8.242999999999792e-05, 8.432000000000231e-05, 8.227799999999813e-05, 8.43049999999998e-05, 8.5153000000001e-05, 8.623599999999995e-05, 8.423599999999795e-05, 8.615299999999854e-05, 8.622299999999986e-05, 8.620800000000081e-05, 8.138899999999769e-05, 8.425000000000099e-05, 8.71250000000004e-05, 8.234699999999998e-05, 8.523600000000242e-05, 8.42919999999997e-05, 8.801399999999737e-05, 8.623599999999995e-05, 8.618100000000115e-05, 8.144399999999996e-05, 8.141600000000082e-05, 8.524999999999852e-05, 8.431900000000284e-05, 8.52920000000007e-05, 8.718000000000267e-05, 8.142999999999692e-05, 8.61660000000021e-05, 8.238899999999869e-05, 8.430599999999927e-05, 8.138900000000115e-05]</msg>
<status status="PASS" starttime="20201115 23:02:35.324" endtime="20201115 23:02:35.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.319" endtime="20201115 23:02:35.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.329" endtime="20201115 23:02:35.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.332" endtime="20201115 23:02:35.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.330" endtime="20201115 23:02:35.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.327" endtime="20201115 23:02:35.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.951" endtime="20201115 23:02:35.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.950" endtime="20201115 23:02:35.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.949" endtime="20201115 23:02:35.353"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.356" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.364" endtime="20201115 23:02:35.384"></status>
</kw>
<msg timestamp="20201115 23:02:35.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.362" endtime="20201115 23:02:35.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.385" endtime="20201115 23:02:35.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.388" endtime="20201115 23:02:35.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.360" endtime="20201115 23:02:35.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.358" endtime="20201115 23:02:35.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.397" endtime="20201115 23:02:35.683"></status>
</kw>
<msg timestamp="20201115 23:02:35.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023444431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023532597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.396" endtime="20201115 23:02:35.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023444431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023532597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.687" endtime="20201115 23:02:35.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.696" endtime="20201115 23:02:35.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.393" endtime="20201115 23:02:35.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.391" endtime="20201115 23:02:35.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:35.703" level="INFO">${RESULT} = [{'time': 0.023532597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.816599999999716e-05, 'source_diff': 8.816599999999716e-05}, {'time': 0.023623917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:35.699" endtime="20201115 23:02:35.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:35.716" level="INFO">${ACCURACY} = {'time': [0.023532597, 0.023623917, 0.023715792, 0.023807069, 0.023898458, 0.023989889, 0.024081208, 0.024173458, 0.024264556, 0.024356167, 0.024447931, 0.024539681, 0.024630847, 0.024722, 0.024814417...</msg>
<status status="PASS" starttime="20201115 23:02:35.704" endtime="20201115 23:02:35.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.721" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:02:35.720" endtime="20201115 23:02:35.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.723" level="INFO">VALUE: [8.816599999999716e-05, 8.430600000000274e-05, 8.441699999999983e-05, 8.622200000000038e-05, 8.529100000000123e-05, 8.525000000000199e-05, 8.345799999999806e-05, 8.812499999999793e-05, 8.334800000000045e-05, 8.332000000000131e-05, 8.140300000000072e-05, 8.440300000000026e-05, 8.43330000000024e-05, 8.622200000000038e-05, 8.623599999999995e-05, 8.344399999999849e-05, 8.336100000000055e-05, 8.726399999999662e-05, 8.434799999999798e-05, 8.241599999999835e-05, 8.431900000000284e-05, 8.1458999999999e-05, 8.727799999999966e-05, 8.71120000000003e-05, 8.71799999999992e-05, 8.238900000000215e-05, 8.240299999999826e-05, 8.330600000000174e-05, 8.441699999999983e-05, 8.240200000000225e-05, 8.337500000000012e-05, 8.63059999999978e-05, 8.719400000000224e-05, 8.431999999999884e-05, 8.526400000000156e-05, 8.138900000000115e-05, 8.719399999999877e-05, 8.241600000000182e-05, 8.434700000000198e-05, 8.338899999999969e-05, 8.238899999999869e-05, 8.238900000000215e-05, 8.14170000000003e-05, 8.537500000000212e-05, 8.43469999999985e-05, 8.143000000000039e-05, 8.150000000000171e-05, 8.71669999999991e-05, 8.622299999999986e-05, 8.344399999999849e-05]</msg>
<status status="PASS" starttime="20201115 23:02:35.722" endtime="20201115 23:02:35.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.717" endtime="20201115 23:02:35.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.727" endtime="20201115 23:02:35.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.730" endtime="20201115 23:02:35.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.728" endtime="20201115 23:02:35.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.725" endtime="20201115 23:02:35.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.356" endtime="20201115 23:02:35.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.354" endtime="20201115 23:02:35.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.354" endtime="20201115 23:02:35.751"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.754" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.762" endtime="20201115 23:02:35.786"></status>
</kw>
<msg timestamp="20201115 23:02:35.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.760" endtime="20201115 23:02:35.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.787" endtime="20201115 23:02:35.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.790" endtime="20201115 23:02:35.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.758" endtime="20201115 23:02:35.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.756" endtime="20201115 23:02:35.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.799" endtime="20201115 23:02:36.085"></status>
</kw>
<msg timestamp="20201115 23:02:36.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027327639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027413944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.797" endtime="20201115 23:02:36.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027327639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027413944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.089" endtime="20201115 23:02:36.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.098" endtime="20201115 23:02:36.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.795" endtime="20201115 23:02:36.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.793" endtime="20201115 23:02:36.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:36.104" level="INFO">${RESULT} = [{'time': 0.027413944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.630499999999833e-05, 'source_diff': 8.630499999999833e-05}, {'time': 0.027505694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:36.101" endtime="20201115 23:02:36.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:36.118" level="INFO">${ACCURACY} = {'time': [0.027413944, 0.027505694, 0.027597194, 0.027688611, 0.027779986, 0.027871708, 0.027963194, 0.028054569, 0.028146389, 0.028237861, 0.028328944, 0.028420361, 0.028512264, 0.028604222, 0.028695...</msg>
<status status="PASS" starttime="20201115 23:02:36.105" endtime="20201115 23:02:36.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.123" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:02:36.121" endtime="20201115 23:02:36.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.125" level="INFO">VALUE: [8.630499999999833e-05, 8.43049999999998e-05, 8.622199999999691e-05, 8.149999999999824e-05, 8.620800000000081e-05, 8.53189999999969e-05, 8.431899999999937e-05, 8.144399999999996e-05, 8.332000000000131e-05, 8.629199999999823e-05, 8.244399999999749e-05, 8.533299999999994e-05, 8.43469999999985e-05, 8.337500000000012e-05, 8.237500000000259e-05, 8.626400000000256e-05, 8.249999999999924e-05, 8.334800000000045e-05, 8.622200000000038e-05, 8.240300000000172e-05, 8.620800000000081e-05, 8.143099999999986e-05, 8.254199999999795e-05, 8.718099999999868e-05, 8.348600000000067e-05, 8.236099999999955e-05, 8.432000000000231e-05, 8.345800000000153e-05, 8.238900000000215e-05, 8.526400000000156e-05, 8.14170000000003e-05, 8.525000000000199e-05, 8.444399999999949e-05, 8.71799999999992e-05, 8.236100000000302e-05, 8.527800000000113e-05, 8.251399999999881e-05, 8.719400000000224e-05, 8.622300000000332e-05, 8.237500000000259e-05, 8.42919999999997e-05, 8.143000000000039e-05, 8.237499999999565e-05, 8.61799999999982e-05, 8.715299999999954e-05, 8.519399999999677e-05, 8.149999999999824e-05, 8.526400000000156e-05, 8.443000000000339e-05, 8.24170000000013e-05]</msg>
<status status="PASS" starttime="20201115 23:02:36.124" endtime="20201115 23:02:36.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.119" endtime="20201115 23:02:36.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.128" endtime="20201115 23:02:36.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:36.132" endtime="20201115 23:02:36.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.130" endtime="20201115 23:02:36.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.126" endtime="20201115 23:02:36.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.754" endtime="20201115 23:02:36.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.752" endtime="20201115 23:02:36.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.752" endtime="20201115 23:02:36.153"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.155" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.163" endtime="20201115 23:02:36.187"></status>
</kw>
<msg timestamp="20201115 23:02:36.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.162" endtime="20201115 23:02:36.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.189" endtime="20201115 23:02:36.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.192" endtime="20201115 23:02:36.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.159" endtime="20201115 23:02:36.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.157" endtime="20201115 23:02:36.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.201" endtime="20201115 23:02:36.487"></status>
</kw>
<msg timestamp="20201115 23:02:36.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027667333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027754542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.199" endtime="20201115 23:02:36.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027667333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027754542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.491" endtime="20201115 23:02:36.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.499" endtime="20201115 23:02:36.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.197" endtime="20201115 23:02:36.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.195" endtime="20201115 23:02:36.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:36.506" level="INFO">${RESULT} = [{'time': 0.027754542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.720900000000129e-05, 'source_diff': 8.720900000000129e-05}, {'time': 0.027846111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:36.503" endtime="20201115 23:02:36.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:36.521" level="INFO">${ACCURACY} = {'time': [0.027754542, 0.027846111, 0.027937278, 0.028029153, 0.028120653, 0.028211944, 0.028304306, 0.028395111, 0.028486889, 0.028578764, 0.028669931, 0.028761236, 0.028853014, 0.028944764, 0.029036...</msg>
<status status="PASS" starttime="20201115 23:02:36.507" endtime="20201115 23:02:36.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.525" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:02:36.524" endtime="20201115 23:02:36.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.528" level="INFO">VALUE: [8.720900000000129e-05, 8.619400000000124e-05, 8.144499999999943e-05, 8.725000000000052e-05, 8.529199999999723e-05, 8.238799999999921e-05, 8.336200000000002e-05, 8.243000000000139e-05, 8.527800000000113e-05, 8.34309999999984e-05, 8.527799999999766e-05, 8.624999999999952e-05, 8.630600000000127e-05, 8.52920000000007e-05, 8.334800000000045e-05, 8.430600000000274e-05, 8.24720000000001e-05, 8.434700000000198e-05, 8.338800000000021e-05, 8.143099999999986e-05, 8.236099999999955e-05, 8.430599999999927e-05, 8.336099999999708e-05, 8.241599999999835e-05, 8.04719999999981e-05, 8.623599999999995e-05, 8.533399999999941e-05, 8.623599999999995e-05, 8.140299999999726e-05, 8.33330000000014e-05, 8.445799999999906e-05, 8.1458999999999e-05, 8.438899999999722e-05, 8.143099999999986e-05, 8.336100000000055e-05, 8.624999999999952e-05, 8.237499999999912e-05, 8.42919999999997e-05, 8.52920000000007e-05, 8.231900000000084e-05, 8.348600000000067e-05, 8.43049999999998e-05, 8.2459e-05, 8.526399999999462e-05, 8.726399999999662e-05, 8.807000000000259e-05, 8.529100000000123e-05, 8.240300000000172e-05, 8.52920000000007e-05, 8.336099999999708e-05]</msg>
<status status="PASS" starttime="20201115 23:02:36.526" endtime="20201115 23:02:36.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.522" endtime="20201115 23:02:36.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.531" endtime="20201115 23:02:36.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:36.534" endtime="20201115 23:02:36.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.533" endtime="20201115 23:02:36.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.529" endtime="20201115 23:02:36.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.156" endtime="20201115 23:02:36.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.154" endtime="20201115 23:02:36.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.153" endtime="20201115 23:02:36.556"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.558" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.567" endtime="20201115 23:02:36.590"></status>
</kw>
<msg timestamp="20201115 23:02:36.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.565" endtime="20201115 23:02:36.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.592" endtime="20201115 23:02:36.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.594" endtime="20201115 23:02:36.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.562" endtime="20201115 23:02:36.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.560" endtime="20201115 23:02:36.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.603" endtime="20201115 23:02:36.889"></status>
</kw>
<msg timestamp="20201115 23:02:36.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026825278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026905653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.602" endtime="20201115 23:02:36.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026825278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026905653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.893" endtime="20201115 23:02:36.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.901" endtime="20201115 23:02:36.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.599" endtime="20201115 23:02:36.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.597" endtime="20201115 23:02:36.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:36.908" level="INFO">${RESULT} = [{'time': 0.026905653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.037500000000058e-05, 'source_diff': 8.037500000000058e-05}, {'time': 0.026997167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:36.905" endtime="20201115 23:02:36.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:36.922" level="INFO">${ACCURACY} = {'time': [0.026905653, 0.026997167, 0.027088389, 0.027179597, 0.027271097, 0.027362486, 0.027454042, 0.027546181, 0.027637403, 0.027729556, 0.02782075, 0.027912278, 0.028003819, 0.028095778, 0.0281868...</msg>
<status status="PASS" starttime="20201115 23:02:36.909" endtime="20201115 23:02:36.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.926" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:02:36.925" endtime="20201115 23:02:36.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.929" level="INFO">VALUE: [8.037500000000058e-05, 8.718099999999868e-05, 8.337500000000012e-05, 8.241599999999835e-05, 8.144399999999996e-05, 8.144399999999996e-05, 8.423600000000142e-05, 8.622299999999986e-05, 8.522200000000285e-05, 8.524999999999852e-05, 8.530600000000027e-05, 8.42919999999997e-05, 8.336100000000055e-05, 8.337499999999665e-05, 8.423599999999795e-05, 8.33330000000014e-05, 8.427800000000013e-05, 8.426400000000056e-05, 8.527799999999766e-05, 8.43330000000024e-05, 8.618100000000115e-05, 8.331899999999837e-05, 8.240299999999826e-05, 8.243100000000086e-05, 8.137499999999812e-05, 8.143099999999986e-05, 8.241599999999835e-05, 8.626399999999909e-05, 8.341699999999883e-05, 8.326399999999956e-05, 8.431899999999937e-05, 8.527800000000113e-05, 8.327799999999913e-05, 8.530600000000027e-05, 8.802800000000041e-05, 8.71660000000031e-05, 8.243100000000086e-05, 8.623599999999995e-05, 8.233299999999694e-05, 8.526400000000156e-05, 8.144499999999943e-05, 8.340199999999978e-05, 8.619500000000072e-05, 8.430599999999927e-05, 8.626400000000256e-05, 8.1458999999999e-05, 8.427800000000013e-05, 8.238899999999869e-05, 8.615299999999854e-05, 8.323600000000042e-05]</msg>
<status status="PASS" starttime="20201115 23:02:36.927" endtime="20201115 23:02:36.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.923" endtime="20201115 23:02:36.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.932" endtime="20201115 23:02:36.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:36.935" endtime="20201115 23:02:36.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.934" endtime="20201115 23:02:36.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.930" endtime="20201115 23:02:36.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.559" endtime="20201115 23:02:36.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.557" endtime="20201115 23:02:36.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.556" endtime="20201115 23:02:36.957"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.959" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.967" endtime="20201115 23:02:36.992"></status>
</kw>
<msg timestamp="20201115 23:02:36.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.966" endtime="20201115 23:02:36.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.993" endtime="20201115 23:02:36.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.996" endtime="20201115 23:02:36.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.963" endtime="20201115 23:02:36.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.961" endtime="20201115 23:02:36.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.005" endtime="20201115 23:02:37.291"></status>
</kw>
<msg timestamp="20201115 23:02:37.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027922056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02800925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:37.003" endtime="20201115 23:02:37.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027922056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02800925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:37.295" endtime="20201115 23:02:37.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.303" endtime="20201115 23:02:37.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.001" endtime="20201115 23:02:37.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.999" endtime="20201115 23:02:37.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:37.310" level="INFO">${RESULT} = [{'time': 0.02800925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.719399999999877e-05, 'source_diff': 8.719399999999877e-05}, {'time': 0.028100736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:37.307" endtime="20201115 23:02:37.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:37.323" level="INFO">${ACCURACY} = {'time': [0.02800925, 0.028100736, 0.028191917, 0.028283708, 0.028375292, 0.028466472, 0.028558639, 0.028649736, 0.028741431, 0.028833264, 0.028924542, 0.029015903, 0.029108028, 0.029198708, 0.0292902...</msg>
<status status="PASS" starttime="20201115 23:02:37.311" endtime="20201115 23:02:37.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.328" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:02:37.327" endtime="20201115 23:02:37.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.331" level="INFO">VALUE: [8.719399999999877e-05, 8.624999999999952e-05, 8.623599999999995e-05, 8.53050000000008e-05, 8.249999999999924e-05, 8.527800000000113e-05, 8.813900000000097e-05, 8.719399999999877e-05, 8.622299999999986e-05, 8.240300000000172e-05, 8.238900000000215e-05, 8.620900000000029e-05, 8.709700000000126e-05, 8.14719999999991e-05, 8.527800000000113e-05, 8.336100000000055e-05, 8.334799999999698e-05, 8.434700000000198e-05, 8.341699999999883e-05, 8.143000000000039e-05, 8.71799999999992e-05, 8.525000000000199e-05, 8.718099999999868e-05, 8.708299999999822e-05, 8.333400000000088e-05, 8.249999999999924e-05, 8.526400000000156e-05, 8.529100000000123e-05, 8.622299999999986e-05, 8.143000000000039e-05, 8.144499999999943e-05, 8.141600000000082e-05, 8.526400000000156e-05, 8.333400000000088e-05, 8.433299999999894e-05, 8.337500000000012e-05, 8.334799999999698e-05, 8.252800000000532e-05, 8.144499999999943e-05, 8.527699999999472e-05, 8.527800000000113e-05, 8.523600000000242e-05, 8.143000000000039e-05, 8.6332999999994e-05, 8.334700000000445e-05, 8.240300000000172e-05, 8.237499999999565e-05, 8.722200000000485e-05, 8.625000000000299e-05, 8.716599999999963e-05]</msg>
<status status="PASS" starttime="20201115 23:02:37.329" endtime="20201115 23:02:37.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.324" endtime="20201115 23:02:37.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.334" endtime="20201115 23:02:37.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:37.338" endtime="20201115 23:02:37.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.336" endtime="20201115 23:02:37.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.333" endtime="20201115 23:02:37.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.960" endtime="20201115 23:02:37.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.958" endtime="20201115 23:02:37.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.957" endtime="20201115 23:02:37.359"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.361" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.370" endtime="20201115 23:02:37.394"></status>
</kw>
<msg timestamp="20201115 23:02:37.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.368" endtime="20201115 23:02:37.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.396" endtime="20201115 23:02:37.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.399" endtime="20201115 23:02:37.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.365" endtime="20201115 23:02:37.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.363" endtime="20201115 23:02:37.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.408" endtime="20201115 23:02:37.693"></status>
</kw>
<msg timestamp="20201115 23:02:37.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027391514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027464278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.406" endtime="20201115 23:02:37.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027391514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027464278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.697" endtime="20201115 23:02:37.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.706" endtime="20201115 23:02:37.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.404" endtime="20201115 23:02:37.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.402" endtime="20201115 23:02:37.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:37.713" level="INFO">${RESULT} = [{'time': 0.027464278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.276400000000294e-05, 'source_diff': 7.276400000000294e-05}, {'time': 0.027556347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:37.709" endtime="20201115 23:02:37.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:37.726" level="INFO">${ACCURACY} = {'time': [0.027464278, 0.027556347, 0.027647625, 0.027739597, 0.027831097, 0.027922069, 0.028014528, 0.028105389, 0.028197639, 0.028289111, 0.028380708, 0.028471375, 0.028563417, 0.028655278, 0.028746...</msg>
<status status="PASS" starttime="20201115 23:02:37.714" endtime="20201115 23:02:37.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.731" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:02:37.730" endtime="20201115 23:02:37.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.734" level="INFO">VALUE: [7.276400000000294e-05, 8.629099999999876e-05, 8.331899999999837e-05, 8.154100000000095e-05, 8.337500000000012e-05, 8.620800000000081e-05, 8.334700000000098e-05, 8.1458000000003e-05, 8.33330000000014e-05, 8.526399999999809e-05, 8.145799999999953e-05, 8.624999999999952e-05, 8.438900000000069e-05, 8.336100000000055e-05, 8.623599999999995e-05, 8.71799999999992e-05, 8.42919999999997e-05, 8.050000000000071e-05, 8.527800000000113e-05, 8.145799999999953e-05, 8.43049999999998e-05, 8.527700000000166e-05, 8.430599999999927e-05, 8.240299999999826e-05, 8.144399999999996e-05, 8.537499999999865e-05, 8.62370000000029e-05, 8.241699999999783e-05, 8.719500000000172e-05, 8.24170000000013e-05, 8.33469999999975e-05, 8.522300000000232e-05, 8.812499999999793e-05, 8.237500000000259e-05, 8.240199999999878e-05, 8.24170000000013e-05, 8.143100000000333e-05, 8.71669999999991e-05, 8.241600000000182e-05, 8.723699999999696e-05, 8.241599999999835e-05, 8.638899999999922e-05, 8.619399999999777e-05, 8.719399999999877e-05, 8.337499999999665e-05, 8.813900000000097e-05, 8.434700000000545e-05, 8.53050000000008e-05, 8.427800000000013e-05, 8.049999999999724e-05]</msg>
<status status="PASS" starttime="20201115 23:02:37.732" endtime="20201115 23:02:37.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.727" endtime="20201115 23:02:37.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.737" endtime="20201115 23:02:37.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:37.740" endtime="20201115 23:02:37.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.739" endtime="20201115 23:02:37.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.735" endtime="20201115 23:02:37.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.362" endtime="20201115 23:02:37.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.360" endtime="20201115 23:02:37.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.359" endtime="20201115 23:02:37.762"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.764" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.772" endtime="20201115 23:02:37.795"></status>
</kw>
<msg timestamp="20201115 23:02:37.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.771" endtime="20201115 23:02:37.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.796" endtime="20201115 23:02:37.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.799" endtime="20201115 23:02:37.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.768" endtime="20201115 23:02:37.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.766" endtime="20201115 23:02:37.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.808" endtime="20201115 23:02:38.093"></status>
</kw>
<msg timestamp="20201115 23:02:38.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026568403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026646028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.807" endtime="20201115 23:02:38.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026568403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026646028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.098" endtime="20201115 23:02:38.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.106" endtime="20201115 23:02:38.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.804" endtime="20201115 23:02:38.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.802" endtime="20201115 23:02:38.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:38.113" level="INFO">${RESULT} = [{'time': 0.026646028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.762499999999783e-05, 'source_diff': 7.762499999999783e-05}, {'time': 0.026737014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:38.109" endtime="20201115 23:02:38.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:38.128" level="INFO">${ACCURACY} = {'time': [0.026646028, 0.026737014, 0.026828653, 0.026920597, 0.027011597, 0.027103139, 0.027195333, 0.027287083, 0.027378222, 0.027469361, 0.027561458, 0.027652611, 0.027744736, 0.027835486, 0.027927...</msg>
<status status="PASS" starttime="20201115 23:02:38.114" endtime="20201115 23:02:38.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.132" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:02:38.131" endtime="20201115 23:02:38.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.135" level="INFO">VALUE: [7.762499999999783e-05, 8.051400000000028e-05, 8.243100000000086e-05, 8.626400000000256e-05, 8.145799999999953e-05, 8.431999999999884e-05, 8.340199999999978e-05, 8.429100000000023e-05, 8.336100000000055e-05, 8.336100000000055e-05, 8.526400000000156e-05, 8.245800000000053e-05, 8.81800000000002e-05, 8.051400000000028e-05, 8.719400000000224e-05, 8.243100000000086e-05, 8.81670000000001e-05, 8.047300000000104e-05, 8.336100000000055e-05, 8.433299999999894e-05, 8.337500000000012e-05, 8.623599999999995e-05, 8.240199999999878e-05, 8.33469999999975e-05, 8.337500000000012e-05, 8.143100000000333e-05, 8.143000000000039e-05, 8.1458000000003e-05, 8.238900000000215e-05, 8.151400000000128e-05, 8.719399999999877e-05, 8.52920000000007e-05, 8.143099999999986e-05, 8.24170000000013e-05, 8.619400000000124e-05, 8.340299999999926e-05, 8.52920000000007e-05, 8.147200000000257e-05, 8.33469999999975e-05, 8.234699999999998e-05, 8.52920000000007e-05, 8.620900000000029e-05, 8.24170000000013e-05, 8.718099999999868e-05, 8.333399999999741e-05, 8.71669999999991e-05, 8.71669999999991e-05, 8.433399999999841e-05, 8.144399999999996e-05, 8.819499999999925e-05]</msg>
<status status="PASS" starttime="20201115 23:02:38.133" endtime="20201115 23:02:38.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.129" endtime="20201115 23:02:38.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.138" endtime="20201115 23:02:38.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:38.142" endtime="20201115 23:02:38.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.140" endtime="20201115 23:02:38.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.136" endtime="20201115 23:02:38.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.765" endtime="20201115 23:02:38.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.763" endtime="20201115 23:02:38.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.762" endtime="20201115 23:02:38.163"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.165" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.173" endtime="20201115 23:02:38.198"></status>
</kw>
<msg timestamp="20201115 23:02:38.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.172" endtime="20201115 23:02:38.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.199" endtime="20201115 23:02:38.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.202" endtime="20201115 23:02:38.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.169" endtime="20201115 23:02:38.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.167" endtime="20201115 23:02:38.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.211" endtime="20201115 23:02:38.496"></status>
</kw>
<msg timestamp="20201115 23:02:38.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027474597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027566556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.210" endtime="20201115 23:02:38.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027474597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027566556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.500" endtime="20201115 23:02:38.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.509" endtime="20201115 23:02:38.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.207" endtime="20201115 23:02:38.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.205" endtime="20201115 23:02:38.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:38.516" level="INFO">${RESULT} = [{'time': 0.027566556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.19589999999991e-05, 'source_diff': 9.19589999999991e-05}, {'time': 0.027657889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:38.513" endtime="20201115 23:02:38.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:38.529" level="INFO">${ACCURACY} = {'time': [0.027566556, 0.027657889, 0.027749903, 0.027841528, 0.027932861, 0.028024792, 0.028116028, 0.028207486, 0.028299514, 0.0283905, 0.028482278, 0.028573806, 0.0286655, 0.028756292, 0.028848458,...</msg>
<status status="PASS" starttime="20201115 23:02:38.517" endtime="20201115 23:02:38.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.534" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:02:38.533" endtime="20201115 23:02:38.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.536" level="INFO">VALUE: [9.19589999999991e-05, 8.337500000000012e-05, 8.333400000000088e-05, 8.24170000000013e-05, 8.442999999999992e-05, 8.437500000000112e-05, 8.623599999999995e-05, 8.622200000000038e-05, 8.33330000000014e-05, 8.249999999999924e-05, 8.14170000000003e-05, 8.42919999999997e-05, 8.143099999999986e-05, 8.155599999999999e-05, 8.336100000000055e-05, 8.53189999999969e-05, 8.53050000000008e-05, 8.141600000000082e-05, 8.633300000000094e-05, 8.331900000000184e-05, 8.431999999999884e-05, 8.727799999999966e-05, 8.144399999999996e-05, 8.632000000000084e-05, 8.42919999999997e-05, 8.234800000000292e-05, 8.716599999999963e-05, 8.240300000000172e-05, 8.423600000000142e-05, 8.725000000000052e-05, 8.150000000000171e-05, 8.623600000000342e-05, 8.620800000000081e-05, 8.42919999999997e-05, 8.815300000000054e-05, 8.14170000000003e-05, 8.241699999999783e-05, 8.622200000000038e-05, 8.433299999999894e-05, 8.61799999999982e-05, 8.33469999999975e-05, 8.527800000000113e-05, 8.431899999999937e-05, 8.431899999999937e-05, 8.144499999999943e-05, 8.431999999999884e-05, 8.43049999999998e-05, 8.527799999999419e-05, 8.431899999999937e-05, 8.723599999999748e-05]</msg>
<status status="PASS" starttime="20201115 23:02:38.535" endtime="20201115 23:02:38.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.530" endtime="20201115 23:02:38.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.540" endtime="20201115 23:02:38.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:38.543" endtime="20201115 23:02:38.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.542" endtime="20201115 23:02:38.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.538" endtime="20201115 23:02:38.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.166" endtime="20201115 23:02:38.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.164" endtime="20201115 23:02:38.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.163" endtime="20201115 23:02:38.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.484" endtime="20201115 23:02:38.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:38.569" endtime="20201115 23:02:38.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.567" endtime="20201115 23:02:38.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.566" endtime="20201115 23:02:38.589"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:58.408" endtime="20201115 23:02:38.590" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:01:16.983" endtime="20201115 23:02:38.594"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 23:01:14.959" endtime="20201115 23:02:38.606"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
