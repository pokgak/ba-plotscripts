<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201117 14:46:50.488" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.053" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:46:51.061" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:46:52.165" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:46:51.052" endtime="20201117 14:46:52.166"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.169" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:46:52.167" endtime="20201117 14:46:52.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.050" endtime="20201117 14:46:52.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:52.172" endtime="20201117 14:46:52.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.170" endtime="20201117 14:46:52.385"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.412" endtime="20201117 14:46:52.428"></status>
</kw>
<msg timestamp="20201117 14:46:52.429" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:52.408" endtime="20201117 14:46:52.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.431" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:52.430" endtime="20201117 14:46:52.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.435" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:52.433" endtime="20201117 14:46:52.435"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:52.403" endtime="20201117 14:46:52.436"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:52.399" endtime="20201117 14:46:52.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.396" endtime="20201117 14:46:52.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:52.440" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:52.440" endtime="20201117 14:46:52.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.437" endtime="20201117 14:46:52.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.394" endtime="20201117 14:46:52.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.393" endtime="20201117 14:46:52.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.442" endtime="20201117 14:46:52.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.390" endtime="20201117 14:46:52.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.445" endtime="20201117 14:46:52.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.386" endtime="20201117 14:46:52.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.048" endtime="20201117 14:46:52.447"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:52.454" endtime="20201117 14:46:52.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.452" endtime="20201117 14:46:52.474"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.489" endtime="20201117 14:46:52.503"></status>
</kw>
<msg timestamp="20201117 14:46:52.503" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:52.486" endtime="20201117 14:46:52.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.506" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:52.504" endtime="20201117 14:46:52.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.509" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:52.507" endtime="20201117 14:46:52.509"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:52.483" endtime="20201117 14:46:52.509"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:52.481" endtime="20201117 14:46:52.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.479" endtime="20201117 14:46:52.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:52.514" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:52.513" endtime="20201117 14:46:52.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.511" endtime="20201117 14:46:52.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.478" endtime="20201117 14:46:52.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.477" endtime="20201117 14:46:52.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.516" endtime="20201117 14:46:52.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.476" endtime="20201117 14:46:52.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.474" endtime="20201117 14:46:52.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.451" endtime="20201117 14:46:52.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.525" endtime="20201117 14:46:52.536"></status>
</kw>
<msg timestamp="20201117 14:46:52.537" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:52.524" endtime="20201117 14:46:52.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.539" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:52.538" endtime="20201117 14:46:52.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.540" endtime="20201117 14:46:52.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.521" endtime="20201117 14:46:52.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.519" endtime="20201117 14:46:52.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.547" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201117 14:46:52.546" endtime="20201117 14:46:52.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.549" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201117 14:46:52.548" endtime="20201117 14:46:52.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.544" endtime="20201117 14:46:52.550"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:46:52.448" endtime="20201117 14:46:52.551" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:46:50.601" endtime="20201117 14:46:52.553"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.605" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:46:52.613" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:46:53.774" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:46:52.604" endtime="20201117 14:46:53.775"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.777" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:46:53.776" endtime="20201117 14:46:53.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.603" endtime="20201117 14:46:53.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:53.781" endtime="20201117 14:46:54.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.779" endtime="20201117 14:46:54.044"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.056" endtime="20201117 14:46:54.070"></status>
</kw>
<msg timestamp="20201117 14:46:54.071" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.055" endtime="20201117 14:46:54.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.073" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.072" endtime="20201117 14:46:54.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.076" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:54.074" endtime="20201117 14:46:54.076"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:54.052" endtime="20201117 14:46:54.077"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:54.050" endtime="20201117 14:46:54.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.049" endtime="20201117 14:46:54.078"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:54.082" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:54.081" endtime="20201117 14:46:54.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.079" endtime="20201117 14:46:54.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.048" endtime="20201117 14:46:54.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.047" endtime="20201117 14:46:54.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.083" endtime="20201117 14:46:54.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.046" endtime="20201117 14:46:54.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.086" endtime="20201117 14:46:54.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.045" endtime="20201117 14:46:54.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.601" endtime="20201117 14:46:54.089"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:54.095" endtime="20201117 14:46:54.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.093" endtime="20201117 14:46:54.116"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.129" endtime="20201117 14:46:54.143"></status>
</kw>
<msg timestamp="20201117 14:46:54.143" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.127" endtime="20201117 14:46:54.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.146" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.145" endtime="20201117 14:46:54.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.150" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:54.148" endtime="20201117 14:46:54.150"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:54.125" endtime="20201117 14:46:54.150"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:54.122" endtime="20201117 14:46:54.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.121" endtime="20201117 14:46:54.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:54.155" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:54.154" endtime="20201117 14:46:54.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.152" endtime="20201117 14:46:54.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.120" endtime="20201117 14:46:54.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.120" endtime="20201117 14:46:54.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.157" endtime="20201117 14:46:54.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.118" endtime="20201117 14:46:54.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.116" endtime="20201117 14:46:54.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.092" endtime="20201117 14:46:54.160"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.163" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.173" endtime="20201117 14:46:54.187"></status>
</kw>
<msg timestamp="20201117 14:46:54.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.170" endtime="20201117 14:46:54.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.189" endtime="20201117 14:46:54.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.191" endtime="20201117 14:46:54.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.167" endtime="20201117 14:46:54.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.165" endtime="20201117 14:46:54.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.200" endtime="20201117 14:46:54.492"></status>
</kw>
<msg timestamp="20201117 14:46:54.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069240792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069255597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.199" endtime="20201117 14:46:54.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069240792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069255597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.496" endtime="20201117 14:46:54.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.504" endtime="20201117 14:46:54.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.196" endtime="20201117 14:46:54.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.194" endtime="20201117 14:46:54.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:54.511" level="INFO">${RESULT} = [{'time': 0.069255597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4805000000006618e-05, 'source_diff': 1.4805000000006618e-05}, {'time': 0.069274375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:54.508" endtime="20201117 14:46:54.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:54.525" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:46:54.512" endtime="20201117 14:46:54.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.529" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:46:54.528" endtime="20201117 14:46:54.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.532" level="INFO">VALUE: [1.4805000000006618e-05, 1.3597000000004078e-05, 1.4208000000001664e-05, 1.4110999999997209e-05, 1.4110999999997209e-05, 1.3861000000003898e-05, 1.4194000000009033e-05, 1.381899999999825e-05, 1.3861000000003898e-05, 1.4027999999999263e-05, 1.4167000000009367e-05, 1.3693999999994655e-05, 1.4209000000001137e-05, 1.4250000000007312e-05, 1.3791999999998583e-05, 1.4221999999994295e-05, 1.3750000000006812e-05, 1.3985999999993615e-05, 1.4236000000000804e-05, 1.4110999999997209e-05, 1.3986000000007492e-05, 1.3791999999998583e-05, 1.3958000000008353e-05, 1.4097000000004578e-05, 1.4263999999999943e-05, 1.3986000000007492e-05, 1.3902999999995669e-05, 1.4181000000001998e-05, 1.3750000000006812e-05, 1.3750000000006812e-05, 1.4221999999994295e-05, 1.3834000000004232e-05, 1.3805999999991214e-05, 1.4249999999993435e-05, 1.3902999999995669e-05, 1.408400000001142e-05, 1.4249999999993435e-05, 1.4013999999992754e-05, 1.4028000000013141e-05, 1.4041999999991894e-05, 1.4027999999999263e-05, 1.3819999999997723e-05, 1.3834000000004232e-05, 1.3985999999993615e-05, 1.3763999999999443e-05, 1.4069999999991034e-05, 1.3917000000002178e-05, 1.4027999999999263e-05, 1.4111999999996683e-05, 1.4000000000000123e-05]</msg>
<status status="PASS" starttime="20201117 14:46:54.530" endtime="20201117 14:46:54.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.526" endtime="20201117 14:46:54.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.535" endtime="20201117 14:46:54.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:54.540" endtime="20201117 14:46:54.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.538" endtime="20201117 14:46:54.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.533" endtime="20201117 14:46:54.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.164" endtime="20201117 14:46:54.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.162" endtime="20201117 14:46:54.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.161" endtime="20201117 14:46:54.561"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.563" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.574" endtime="20201117 14:46:54.590"></status>
</kw>
<msg timestamp="20201117 14:46:54.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.572" endtime="20201117 14:46:54.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.592" endtime="20201117 14:46:54.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.595" endtime="20201117 14:46:54.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.569" endtime="20201117 14:46:54.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.566" endtime="20201117 14:46:54.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.604" endtime="20201117 14:46:54.910"></status>
</kw>
<msg timestamp="20201117 14:46:54.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028257625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028272, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:46:54.602" endtime="20201117 14:46:54.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028257625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028272, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:46:54.914" endtime="20201117 14:46:54.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.923" endtime="20201117 14:46:54.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.600" endtime="20201117 14:46:54.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.598" endtime="20201117 14:46:54.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:54.929" level="INFO">${RESULT} = [{'time': 0.028272, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.028291847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:46:54.926" endtime="20201117 14:46:54.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:54.943" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:46:54.930" endtime="20201117 14:46:54.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.947" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:46:54.946" endtime="20201117 14:46:54.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.950" level="INFO">VALUE: [1.4374999999997029e-05, 1.40689999999985e-05, 1.4193999999998624e-05, 1.3999999999996654e-05, 1.3915999999999235e-05, 1.4083000000001539e-05, 1.3749999999999873e-05, 1.40689999999985e-05, 1.3833000000001289e-05, 1.4152999999999388e-05, 1.4250000000000373e-05, 1.3694000000001594e-05, 1.3957999999997944e-05, 1.3833000000001289e-05, 1.3929999999998804e-05, 1.4125000000000248e-05, 1.4235999999997334e-05, 1.4222000000001234e-05, 1.4110999999997209e-05, 1.3819000000001719e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.4042000000002303e-05, 1.3722000000000734e-05, 1.4125000000000248e-05, 1.4125000000000248e-05, 1.4000000000000123e-05, 1.4180999999998528e-05, 1.3958000000001414e-05, 1.3861000000000429e-05, 1.3972000000000984e-05, 1.4055999999998403e-05, 1.3833000000001289e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.3861000000000429e-05, 1.3943999999998374e-05, 1.4069000000001969e-05, 1.4277999999999513e-05, 1.4111000000000679e-05, 1.3957999999997944e-05, 1.3888999999999568e-05, 1.4250000000000373e-05, 1.4041999999998833e-05, 1.3888999999999568e-05, 1.4291999999999083e-05, 1.3901999999999665e-05, 1.3972000000000984e-05, 1.383299999999782e-05, 1.3945000000001317e-05]</msg>
<status status="PASS" starttime="20201117 14:46:54.948" endtime="20201117 14:46:54.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.944" endtime="20201117 14:46:54.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.953" endtime="20201117 14:46:54.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:54.956" endtime="20201117 14:46:54.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.955" endtime="20201117 14:46:54.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.951" endtime="20201117 14:46:54.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.564" endtime="20201117 14:46:54.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.562" endtime="20201117 14:46:54.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.561" endtime="20201117 14:46:54.978"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.980" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.988" endtime="20201117 14:46:55.004"></status>
</kw>
<msg timestamp="20201117 14:46:55.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.987" endtime="20201117 14:46:55.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.005" endtime="20201117 14:46:55.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.008" endtime="20201117 14:46:55.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.984" endtime="20201117 14:46:55.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.982" endtime="20201117 14:46:55.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.017" endtime="20201117 14:46:55.303"></status>
</kw>
<msg timestamp="20201117 14:46:55.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025216264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025230653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.015" endtime="20201117 14:46:55.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025216264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025230653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.307" endtime="20201117 14:46:55.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.315" endtime="20201117 14:46:55.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.013" endtime="20201117 14:46:55.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.011" endtime="20201117 14:46:55.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:55.322" level="INFO">${RESULT} = [{'time': 0.025230653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000000068e-05, 'source_diff': 1.4389000000000068e-05}, {'time': 0.025250528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:55.319" endtime="20201117 14:46:55.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:55.336" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:46:55.323" endtime="20201117 14:46:55.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.341" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:46:55.340" endtime="20201117 14:46:55.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.343" level="INFO">VALUE: [1.4389000000000068e-05, 1.4153000000002858e-05, 1.4070000000001442e-05, 1.4180999999998528e-05, 1.4125000000000248e-05, 1.4055999999998403e-05, 1.3791999999998583e-05, 1.3694000000001594e-05, 1.4263999999999943e-05, 1.3708000000001164e-05, 1.3666999999998458e-05, 1.3749999999999873e-05, 1.4180999999998528e-05, 1.3986000000000554e-05, 1.3693999999998124e-05, 1.4222000000001234e-05, 1.4055999999998403e-05, 1.4097000000001109e-05, 1.4139000000003288e-05, 1.4305999999998653e-05, 1.4027999999999263e-05, 1.3721999999997264e-05, 1.3903000000002608e-05, 1.4152999999999388e-05, 1.3806000000001623e-05, 1.4236000000000804e-05, 1.4027999999999263e-05, 1.3945000000001317e-05, 1.4167000000002428e-05, 1.4125000000000248e-05, 1.4152999999999388e-05, 1.3888999999999568e-05, 1.3917000000002178e-05, 1.3944000000001844e-05, 1.4084000000001012e-05, 1.3917000000002178e-05, 1.4152999999999388e-05, 1.3943999999998374e-05, 1.4152999999999388e-05, 1.4042000000002303e-05, 1.4083999999997543e-05, 1.3861000000000429e-05, 1.3973000000000457e-05, 1.3834000000000762e-05, 1.4083999999997543e-05, 1.426300000000047e-05, 1.3638999999999318e-05, 1.3848000000000332e-05, 1.4222999999997238e-05, 1.3777999999999013e-05]</msg>
<status status="PASS" starttime="20201117 14:46:55.342" endtime="20201117 14:46:55.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.337" endtime="20201117 14:46:55.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.346" endtime="20201117 14:46:55.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:55.350" endtime="20201117 14:46:55.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.348" endtime="20201117 14:46:55.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.345" endtime="20201117 14:46:55.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.981" endtime="20201117 14:46:55.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.979" endtime="20201117 14:46:55.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.978" endtime="20201117 14:46:55.371"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.373" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.381" endtime="20201117 14:46:55.396"></status>
</kw>
<msg timestamp="20201117 14:46:55.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.380" endtime="20201117 14:46:55.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.397" endtime="20201117 14:46:55.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.400" endtime="20201117 14:46:55.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.377" endtime="20201117 14:46:55.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.375" endtime="20201117 14:46:55.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.409" endtime="20201117 14:46:55.722"></status>
</kw>
<msg timestamp="20201117 14:46:55.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023913556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023928375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.408" endtime="20201117 14:46:55.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023913556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023928375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.727" endtime="20201117 14:46:55.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.735" endtime="20201117 14:46:55.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.405" endtime="20201117 14:46:55.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.404" endtime="20201117 14:46:55.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:55.742" level="INFO">${RESULT} = [{'time': 0.023928375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4819000000002719e-05, 'source_diff': 1.4819000000002719e-05}, {'time': 0.023948181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:55.738" endtime="20201117 14:46:55.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:55.755" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:46:55.743" endtime="20201117 14:46:55.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.760" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:46:55.759" endtime="20201117 14:46:55.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.762" level="INFO">VALUE: [1.4819000000002719e-05, 1.4125000000000248e-05, 1.4098000000000582e-05, 1.4069999999997973e-05, 1.4209000000001137e-05, 1.3819999999997723e-05, 1.3945000000001317e-05, 1.4179999999999054e-05, 1.3973000000000457e-05, 1.4013999999999693e-05, 1.4277999999999513e-05, 1.4028000000002733e-05, 1.404099999999936e-05, 1.3736000000000304e-05, 1.4013999999999693e-05, 1.4250000000000373e-05, 1.3709000000000637e-05, 1.3861000000000429e-05, 1.4152999999999388e-05, 1.3944000000001844e-05, 1.379099999999911e-05, 1.4000000000000123e-05, 1.3874999999999998e-05, 1.405499999999893e-05, 1.3901999999999665e-05, 1.3972000000000984e-05, 1.4179999999999054e-05, 1.404099999999936e-05, 1.383299999999782e-05, 1.4151999999999915e-05, 1.4000000000000123e-05, 1.4056000000001873e-05, 1.3819000000001719e-05, 1.3820000000001192e-05, 1.4180000000002524e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.379099999999911e-05, 1.4013999999999693e-05, 1.4125000000000248e-05, 1.3861000000000429e-05, 1.3777999999999013e-05, 1.380499999999868e-05, 1.40689999999985e-05, 1.4111000000000679e-05, 1.3805000000002149e-05, 1.4166999999998958e-05, 1.4125000000000248e-05, 1.3902999999999138e-05, 1.4180000000002524e-05]</msg>
<status status="PASS" starttime="20201117 14:46:55.761" endtime="20201117 14:46:55.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.756" endtime="20201117 14:46:55.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.765" endtime="20201117 14:46:55.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:55.769" endtime="20201117 14:46:55.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.767" endtime="20201117 14:46:55.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.764" endtime="20201117 14:46:55.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.374" endtime="20201117 14:46:55.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.372" endtime="20201117 14:46:55.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.371" endtime="20201117 14:46:55.790"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.792" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.802" endtime="20201117 14:46:55.816"></status>
</kw>
<msg timestamp="20201117 14:46:55.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.800" endtime="20201117 14:46:55.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.817" endtime="20201117 14:46:55.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.820" endtime="20201117 14:46:55.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.798" endtime="20201117 14:46:55.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.795" endtime="20201117 14:46:55.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.830" endtime="20201117 14:46:56.116"></status>
</kw>
<msg timestamp="20201117 14:46:56.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025366014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025381069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.829" endtime="20201117 14:46:56.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025366014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025381069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.120" endtime="20201117 14:46:56.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.128" endtime="20201117 14:46:56.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.826" endtime="20201117 14:46:56.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.824" endtime="20201117 14:46:56.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:56.135" level="INFO">${RESULT} = [{'time': 0.025381069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.505499999999993e-05, 'source_diff': 1.505499999999993e-05}, {'time': 0.025400931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:56.132" endtime="20201117 14:46:56.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:56.148" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:46:56.136" endtime="20201117 14:46:56.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.153" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:46:56.152" endtime="20201117 14:46:56.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.155" level="INFO">VALUE: [1.505499999999993e-05, 1.4195000000001567e-05, 1.3861000000000429e-05, 1.3916999999998708e-05, 1.426300000000047e-05, 1.3848000000000332e-05, 1.3791999999998583e-05, 1.3749999999999873e-05, 1.431899999999875e-05, 1.4167000000002428e-05, 1.4291999999999083e-05, 1.3778000000002483e-05, 1.3693999999998124e-05, 1.4000000000000123e-05, 1.3833999999997293e-05, 1.3987000000000027e-05, 1.4235999999997334e-05, 1.3971999999997514e-05, 1.4222999999997238e-05, 1.4291999999999083e-05, 1.3902999999999138e-05, 1.3749999999999873e-05, 1.401299999999675e-05, 1.4263999999999943e-05, 1.3736000000000304e-05, 1.381899999999825e-05, 1.426300000000047e-05, 1.4125000000000248e-05, 1.3944000000001844e-05, 1.3722000000000734e-05, 1.4236000000000804e-05, 1.4013999999999693e-05, 1.3819000000001719e-05, 1.3707999999997694e-05, 1.3902999999999138e-05, 1.4222000000001234e-05, 1.3749999999999873e-05, 1.377699999999954e-05, 1.4222000000001234e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.4000000000000123e-05, 1.4111000000000679e-05, 1.4125000000000248e-05, 1.4221999999997764e-05, 1.3722000000000734e-05, 1.4000000000000123e-05, 1.3638999999999318e-05, 1.3707999999997694e-05, 1.3736000000000304e-05]</msg>
<status status="PASS" starttime="20201117 14:46:56.154" endtime="20201117 14:46:56.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.149" endtime="20201117 14:46:56.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.159" endtime="20201117 14:46:56.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:56.162" endtime="20201117 14:46:56.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.160" endtime="20201117 14:46:56.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.157" endtime="20201117 14:46:56.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.793" endtime="20201117 14:46:56.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.791" endtime="20201117 14:46:56.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.790" endtime="20201117 14:46:56.184"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.186" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.194" endtime="20201117 14:46:56.209"></status>
</kw>
<msg timestamp="20201117 14:46:56.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.193" endtime="20201117 14:46:56.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.210" endtime="20201117 14:46:56.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.213" endtime="20201117 14:46:56.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.190" endtime="20201117 14:46:56.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.188" endtime="20201117 14:46:56.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.222" endtime="20201117 14:46:56.507"></status>
</kw>
<msg timestamp="20201117 14:46:56.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024000139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024014528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.220" endtime="20201117 14:46:56.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024000139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024014528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.512" endtime="20201117 14:46:56.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.520" endtime="20201117 14:46:56.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.218" endtime="20201117 14:46:56.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.216" endtime="20201117 14:46:56.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:56.527" level="INFO">${RESULT} = [{'time': 0.024014528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000000068e-05, 'source_diff': 1.4389000000000068e-05}, {'time': 0.024034347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:56.523" endtime="20201117 14:46:56.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:56.540" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:46:56.528" endtime="20201117 14:46:56.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.545" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:46:56.544" endtime="20201117 14:46:56.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.547" level="INFO">VALUE: [1.4389000000000068e-05, 1.4402999999999638e-05, 1.3861000000000429e-05, 1.4041999999998833e-05, 1.4111000000000679e-05, 1.4027999999999263e-05, 1.4277999999999513e-05, 1.3777999999999013e-05, 1.3943999999998374e-05, 1.3861000000000429e-05, 1.4153000000002858e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.405499999999893e-05, 1.4250000000000373e-05, 1.3973000000000457e-05, 1.3791999999998583e-05, 1.4277999999999513e-05, 1.4263999999999943e-05, 1.3763999999999443e-05, 1.3944000000001844e-05, 1.3931000000001748e-05, 1.3861000000000429e-05, 1.384699999999739e-05, 1.4152999999999388e-05, 1.3874999999999998e-05, 1.4055999999998403e-05, 1.3959000000000887e-05, 1.4222000000001234e-05, 1.4194000000002094e-05, 1.3847000000000859e-05, 1.4070000000001442e-05, 1.3861000000000429e-05, 1.4250000000000373e-05, 1.3791999999998583e-05, 1.4209000000001137e-05, 1.4138999999999818e-05, 1.3874999999999998e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.4013999999999693e-05, 1.4209000000001137e-05, 1.4125000000000248e-05, 1.4041999999998833e-05, 1.3709000000000637e-05, 1.4027999999999263e-05, 1.3972000000000984e-05, 1.3791999999998583e-05, 1.3722000000000734e-05, 1.3749999999999873e-05]</msg>
<status status="PASS" starttime="20201117 14:46:56.546" endtime="20201117 14:46:56.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.541" endtime="20201117 14:46:56.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.551" endtime="20201117 14:46:56.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:56.554" endtime="20201117 14:46:56.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.553" endtime="20201117 14:46:56.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.549" endtime="20201117 14:46:56.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.187" endtime="20201117 14:46:56.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.185" endtime="20201117 14:46:56.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.184" endtime="20201117 14:46:56.575"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.578" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.586" endtime="20201117 14:46:56.601"></status>
</kw>
<msg timestamp="20201117 14:46:56.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.584" endtime="20201117 14:46:56.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.603" endtime="20201117 14:46:56.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.605" endtime="20201117 14:46:56.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.582" endtime="20201117 14:46:56.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.580" endtime="20201117 14:46:56.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.614" endtime="20201117 14:46:56.900"></status>
</kw>
<msg timestamp="20201117 14:46:56.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024832486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024847431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.613" endtime="20201117 14:46:56.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024832486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024847431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.904" endtime="20201117 14:46:56.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.912" endtime="20201117 14:46:56.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.610" endtime="20201117 14:46:56.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.609" endtime="20201117 14:46:56.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:56.919" level="INFO">${RESULT} = [{'time': 0.024847431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4944999999998848e-05, 'source_diff': 1.4944999999998848e-05}, {'time': 0.024867264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:56.916" endtime="20201117 14:46:56.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:56.934" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:46:56.920" endtime="20201117 14:46:56.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.938" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:46:56.937" endtime="20201117 14:46:56.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.941" level="INFO">VALUE: [1.4944999999998848e-05, 1.4070000000001442e-05, 1.4181000000001998e-05, 1.3847000000000859e-05, 1.4138999999999818e-05, 1.3791999999998583e-05, 1.4013999999999693e-05, 1.3708000000001164e-05, 1.4138999999999818e-05, 1.4221999999997764e-05, 1.4195000000001567e-05, 1.4166999999998958e-05, 1.4098000000000582e-05, 1.427700000000004e-05, 1.3736000000000304e-05, 1.3805999999998153e-05, 1.3945000000001317e-05, 1.4041999999998833e-05, 1.3847000000000859e-05, 1.4000000000000123e-05, 1.3874999999999998e-05, 1.3820000000001192e-05, 1.3874999999999998e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3959000000000887e-05, 1.3763999999999443e-05, 1.4291999999999083e-05, 1.3930999999998278e-05, 1.3959000000000887e-05, 1.4138999999999818e-05, 1.379099999999911e-05, 1.3833000000001289e-05, 1.3723000000000207e-05, 1.3944000000001844e-05, 1.3944999999997848e-05, 1.3874999999999998e-05, 1.405499999999893e-05, 1.3749999999999873e-05, 1.3902999999999138e-05, 1.4235999999997334e-05, 1.3860999999996959e-05, 1.376299999999997e-05, 1.3931000000001748e-05, 1.402699999999979e-05, 1.377699999999954e-05, 1.3972000000000984e-05, 1.4139000000003288e-05, 1.4250000000000373e-05, 1.4055000000002399e-05]</msg>
<status status="PASS" starttime="20201117 14:46:56.939" endtime="20201117 14:46:56.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.935" endtime="20201117 14:46:56.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.944" endtime="20201117 14:46:56.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:56.948" endtime="20201117 14:46:56.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.946" endtime="20201117 14:46:56.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.943" endtime="20201117 14:46:56.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.578" endtime="20201117 14:46:56.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.576" endtime="20201117 14:46:56.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.576" endtime="20201117 14:46:56.969"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.971" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.979" endtime="20201117 14:46:56.994"></status>
</kw>
<msg timestamp="20201117 14:46:56.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.978" endtime="20201117 14:46:56.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.995" endtime="20201117 14:46:56.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.998" endtime="20201117 14:46:56.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.975" endtime="20201117 14:46:57.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.973" endtime="20201117 14:46:57.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.007" endtime="20201117 14:46:57.292"></status>
</kw>
<msg timestamp="20201117 14:46:57.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023962194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023977139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.005" endtime="20201117 14:46:57.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023962194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023977139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.297" endtime="20201117 14:46:57.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.305" endtime="20201117 14:46:57.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.003" endtime="20201117 14:46:57.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.001" endtime="20201117 14:46:57.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:57.312" level="INFO">${RESULT} = [{'time': 0.023977139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4945000000002318e-05, 'source_diff': 1.4945000000002318e-05}, {'time': 0.023996986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:57.308" endtime="20201117 14:46:57.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:57.325" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:46:57.313" endtime="20201117 14:46:57.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.330" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:46:57.329" endtime="20201117 14:46:57.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.332" level="INFO">VALUE: [1.4945000000002318e-05, 1.4236000000000804e-05, 1.3972000000000984e-05, 1.3847000000000859e-05, 1.3874999999999998e-05, 1.3903000000002608e-05, 1.4236000000000804e-05, 1.3888999999999568e-05, 1.3777999999999013e-05, 1.4236000000000804e-05, 1.381899999999825e-05, 1.3958999999997418e-05, 1.4138999999999818e-05, 1.4180999999998528e-05, 1.4194000000002094e-05, 1.4083000000001539e-05, 1.3764000000002913e-05, 1.4000000000000123e-05, 1.3917000000002178e-05, 1.3972000000000984e-05, 1.4125000000000248e-05, 1.3986000000000554e-05, 1.3972000000000984e-05, 1.4138999999999818e-05, 1.4181000000001998e-05, 1.4263999999999943e-05, 1.4416999999999208e-05, 1.3611000000000179e-05, 1.3749999999999873e-05, 1.4263999999999943e-05, 1.4236000000000804e-05, 1.4222000000001234e-05, 1.3736000000000304e-05, 1.4125000000000248e-05, 1.3930000000002274e-05, 1.401300000000022e-05, 1.4277999999999513e-05, 1.4056000000001873e-05, 1.3971999999997514e-05, 1.3709000000000637e-05, 1.4000000000000123e-05, 1.405499999999893e-05, 1.3848000000000332e-05, 1.3986000000000554e-05, 1.4028000000002733e-05, 1.4235999999997334e-05, 1.4193999999998624e-05, 1.3944999999997848e-05, 1.3986000000000554e-05, 1.3986000000000554e-05]</msg>
<status status="PASS" starttime="20201117 14:46:57.331" endtime="20201117 14:46:57.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.326" endtime="20201117 14:46:57.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.336" endtime="20201117 14:46:57.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:57.339" endtime="20201117 14:46:57.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.337" endtime="20201117 14:46:57.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.334" endtime="20201117 14:46:57.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.972" endtime="20201117 14:46:57.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.970" endtime="20201117 14:46:57.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.969" endtime="20201117 14:46:57.360"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.363" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.371" endtime="20201117 14:46:57.386"></status>
</kw>
<msg timestamp="20201117 14:46:57.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.369" endtime="20201117 14:46:57.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.387" endtime="20201117 14:46:57.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.390" endtime="20201117 14:46:57.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.367" endtime="20201117 14:46:57.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.365" endtime="20201117 14:46:57.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.399" endtime="20201117 14:46:57.685"></status>
</kw>
<msg timestamp="20201117 14:46:57.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023941972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023956667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.398" endtime="20201117 14:46:57.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023941972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023956667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.689" endtime="20201117 14:46:57.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.698" endtime="20201117 14:46:57.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.395" endtime="20201117 14:46:57.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.393" endtime="20201117 14:46:57.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:57.705" level="INFO">${RESULT} = [{'time': 0.023956667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4695000000002068e-05, 'source_diff': 1.4695000000002068e-05}, {'time': 0.023976472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:57.701" endtime="20201117 14:46:57.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:57.718" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:46:57.706" endtime="20201117 14:46:57.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.723" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:46:57.722" endtime="20201117 14:46:57.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.725" level="INFO">VALUE: [1.4695000000002068e-05, 1.408299999999807e-05, 1.3972000000000984e-05, 1.3860999999996959e-05, 1.4236000000000804e-05, 1.3903000000002608e-05, 1.4098000000000582e-05, 1.3874999999999998e-05, 1.3763999999999443e-05, 1.3931000000001748e-05, 1.3721999999997264e-05, 1.3749999999999873e-05, 1.4180999999998528e-05, 1.408299999999807e-05, 1.4138999999999818e-05, 1.4250000000000373e-05, 1.3847000000000859e-05, 1.4111000000000679e-05, 1.3764000000002913e-05, 1.3986000000000554e-05, 1.3806000000001623e-05, 1.3819999999997723e-05, 1.3736000000000304e-05, 1.4083999999997543e-05, 1.3972000000000984e-05, 1.3707999999997694e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.4222000000001234e-05, 1.3847000000000859e-05, 1.4125000000000248e-05, 1.4194999999998098e-05, 1.4152999999999388e-05, 1.380499999999868e-05, 1.3958000000001414e-05, 1.4167000000002428e-05, 1.4221999999997764e-05, 1.4013999999999693e-05, 1.4152999999999388e-05, 1.3959000000000887e-05, 1.4111000000000679e-05, 1.3931000000001748e-05, 1.3721999999997264e-05, 1.4180999999998528e-05, 1.4194999999998098e-05, 1.4125000000000248e-05, 1.3931000000001748e-05, 1.4098000000000582e-05, 1.3667000000001928e-05, 1.4194999999998098e-05]</msg>
<status status="PASS" starttime="20201117 14:46:57.724" endtime="20201117 14:46:57.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.719" endtime="20201117 14:46:57.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.728" endtime="20201117 14:46:57.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:57.732" endtime="20201117 14:46:57.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.730" endtime="20201117 14:46:57.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.727" endtime="20201117 14:46:57.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.363" endtime="20201117 14:46:57.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.361" endtime="20201117 14:46:57.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.361" endtime="20201117 14:46:57.753"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.755" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.764" endtime="20201117 14:46:57.779"></status>
</kw>
<msg timestamp="20201117 14:46:57.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.762" endtime="20201117 14:46:57.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.780" endtime="20201117 14:46:57.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.783" endtime="20201117 14:46:57.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.759" endtime="20201117 14:46:57.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.757" endtime="20201117 14:46:57.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.792" endtime="20201117 14:46:58.078"></status>
</kw>
<msg timestamp="20201117 14:46:58.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024023, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024037819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:46:57.790" endtime="20201117 14:46:58.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024023, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024037819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:46:58.082" endtime="20201117 14:46:58.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.090" endtime="20201117 14:46:58.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.787" endtime="20201117 14:46:58.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.786" endtime="20201117 14:46:58.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:58.097" level="INFO">${RESULT} = [{'time': 0.024037819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.481899999999925e-05, 'source_diff': 1.481899999999925e-05}, {'time': 0.024057667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:58.094" endtime="20201117 14:46:58.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:58.111" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:46:58.098" endtime="20201117 14:46:58.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.115" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:46:58.114" endtime="20201117 14:46:58.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.118" level="INFO">VALUE: [1.481899999999925e-05, 1.4223000000000707e-05, 1.4041999999998833e-05, 1.4070000000001442e-05, 1.4111000000000679e-05, 1.4084000000001012e-05, 1.3749999999999873e-05, 1.3972000000000984e-05, 1.3820000000001192e-05, 1.4084000000001012e-05, 1.4194000000002094e-05, 1.4056000000001873e-05, 1.3791999999998583e-05, 1.4027999999999263e-05, 1.3819999999997723e-05, 1.4013999999999693e-05, 1.3763999999999443e-05, 1.4084000000001012e-05, 1.3723000000000207e-05, 1.4098000000000582e-05, 1.4042000000002303e-05, 1.3861000000000429e-05, 1.402699999999979e-05, 1.4098000000000582e-05, 1.3986000000000554e-05, 1.3833999999997293e-05, 1.3917000000002178e-05, 1.4028000000002733e-05, 1.4111000000000679e-05, 1.3943999999998374e-05, 1.4222000000001234e-05, 1.4277999999999513e-05, 1.3874999999999998e-05, 1.3957999999997944e-05, 1.3777999999999013e-05, 1.3736000000000304e-05, 1.404099999999936e-05, 1.3763999999999443e-05, 1.4194000000002094e-05, 1.402699999999979e-05, 1.4151999999999915e-05, 1.3972000000000984e-05, 1.4263999999999943e-05, 1.3736000000000304e-05, 1.3888999999999568e-05, 1.3847000000000859e-05, 1.4153000000002858e-05, 1.4069000000001969e-05, 1.3888999999999568e-05, 1.4236000000000804e-05]</msg>
<status status="PASS" starttime="20201117 14:46:58.116" endtime="20201117 14:46:58.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.111" endtime="20201117 14:46:58.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.121" endtime="20201117 14:46:58.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:58.124" endtime="20201117 14:46:58.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.123" endtime="20201117 14:46:58.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.119" endtime="20201117 14:46:58.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.756" endtime="20201117 14:46:58.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.754" endtime="20201117 14:46:58.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.753" endtime="20201117 14:46:58.145"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.148" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.156" endtime="20201117 14:46:58.172"></status>
</kw>
<msg timestamp="20201117 14:46:58.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.154" endtime="20201117 14:46:58.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.173" endtime="20201117 14:46:58.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.176" endtime="20201117 14:46:58.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.152" endtime="20201117 14:46:58.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.150" endtime="20201117 14:46:58.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.185" endtime="20201117 14:46:58.470"></status>
</kw>
<msg timestamp="20201117 14:46:58.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025150347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025165833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.184" endtime="20201117 14:46:58.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025150347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025165833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.475" endtime="20201117 14:46:58.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.483" endtime="20201117 14:46:58.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.181" endtime="20201117 14:46:58.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.179" endtime="20201117 14:46:58.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:58.490" level="INFO">${RESULT} = [{'time': 0.025165833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5485999999998584e-05, 'source_diff': 1.5485999999998584e-05}, {'time': 0.025186667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:58.487" endtime="20201117 14:46:58.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:58.505" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:46:58.491" endtime="20201117 14:46:58.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.509" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:46:58.508" endtime="20201117 14:46:58.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.512" level="INFO">VALUE: [1.5485999999998584e-05, 1.5124999999997779e-05, 1.5263999999997474e-05, 1.4875000000000999e-05, 1.4971999999998514e-05, 1.5194999999999098e-05, 1.5277999999997044e-05, 1.5166999999999958e-05, 1.481899999999925e-05, 1.4957999999998944e-05, 1.4903000000000138e-05, 1.479100000000011e-05, 1.4957999999998944e-05, 1.5138000000001345e-05, 1.5153000000000388e-05, 1.479100000000011e-05, 1.5112000000001152e-05, 1.4916999999999708e-05, 1.5151999999997445e-05, 1.4875000000000999e-05, 1.5180000000000055e-05, 1.5125000000001249e-05, 1.481899999999925e-05, 1.5193999999999624e-05, 1.505499999999993e-05, 1.484699999999839e-05, 1.480499999999968e-05, 1.486099999999796e-05, 1.5014000000000693e-05, 1.4778000000000013e-05, 1.5207999999999194e-05, 1.508299999999907e-05, 1.5125000000001249e-05, 1.4971999999998514e-05, 1.480499999999968e-05, 1.4888999999997099e-05, 1.5125000000001249e-05, 1.486099999999796e-05, 1.4999999999997654e-05, 1.4833000000002289e-05, 1.4833000000002289e-05, 1.5166999999999958e-05, 1.509699999999864e-05, 1.5264000000000943e-05, 1.5097000000002109e-05, 1.481899999999925e-05, 1.4875000000000999e-05, 1.4999999999997654e-05, 1.4972000000001984e-05, 1.5166999999999958e-05]</msg>
<status status="PASS" starttime="20201117 14:46:58.511" endtime="20201117 14:46:58.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.506" endtime="20201117 14:46:58.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.515" endtime="20201117 14:46:58.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:58.519" endtime="20201117 14:46:58.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.517" endtime="20201117 14:46:58.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.513" endtime="20201117 14:46:58.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.148" endtime="20201117 14:46:58.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.146" endtime="20201117 14:46:58.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.146" endtime="20201117 14:46:58.540"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.542" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.551" endtime="20201117 14:46:58.565"></status>
</kw>
<msg timestamp="20201117 14:46:58.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.549" endtime="20201117 14:46:58.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.567" endtime="20201117 14:46:58.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.569" endtime="20201117 14:46:58.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.547" endtime="20201117 14:46:58.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.544" endtime="20201117 14:46:58.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.578" endtime="20201117 14:46:58.864"></status>
</kw>
<msg timestamp="20201117 14:46:58.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025168722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025185236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.577" endtime="20201117 14:46:58.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025168722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025185236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.869" endtime="20201117 14:46:58.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.877" endtime="20201117 14:46:58.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.574" endtime="20201117 14:46:58.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.573" endtime="20201117 14:46:58.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:58.884" level="INFO">${RESULT} = [{'time': 0.025185236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6513999999998724e-05, 'source_diff': 1.6513999999998724e-05}, {'time': 0.025207056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:58.880" endtime="20201117 14:46:58.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:58.897" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:46:58.885" endtime="20201117 14:46:58.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.902" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:46:58.901" endtime="20201117 14:46:58.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.904" level="INFO">VALUE: [1.6513999999998724e-05, 1.613899999999835e-05, 1.5806000000000153e-05, 1.5833999999999293e-05, 1.60690000000005e-05, 1.5971999999999514e-05, 1.6195000000000098e-05, 1.587499999999853e-05, 1.6181000000000528e-05, 1.5749999999998404e-05, 1.5985999999999084e-05, 1.6152000000001915e-05, 1.611099999999921e-05, 1.604100000000136e-05, 1.588900000000157e-05, 1.609699999999964e-05, 1.579100000000111e-05, 1.5930000000000805e-05, 1.60690000000005e-05, 1.627700000000204e-05, 1.577700000000154e-05, 1.5764000000001444e-05, 1.5957999999999944e-05, 1.609699999999964e-05, 1.583299999999982e-05, 1.5901999999998195e-05, 1.611099999999921e-05, 1.613900000000182e-05, 1.583299999999982e-05, 1.604099999999789e-05, 1.5721999999999264e-05, 1.6013999999998224e-05, 1.5778000000001013e-05, 1.605500000000093e-05, 1.580500000000068e-05, 1.5792000000000583e-05, 1.6194000000000625e-05, 1.586099999999896e-05, 1.6221999999999764e-05, 1.6235999999999334e-05, 1.6208999999999668e-05, 1.583299999999982e-05, 1.584700000000286e-05, 1.583300000000329e-05, 1.591700000000071e-05, 1.5944000000000375e-05, 1.5985999999999084e-05, 1.6264000000001944e-05, 1.5792000000000583e-05, 1.6221999999999764e-05]</msg>
<status status="PASS" starttime="20201117 14:46:58.903" endtime="20201117 14:46:58.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.898" endtime="20201117 14:46:58.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.907" endtime="20201117 14:46:58.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:58.911" endtime="20201117 14:46:58.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.909" endtime="20201117 14:46:58.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.905" endtime="20201117 14:46:58.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.543" endtime="20201117 14:46:58.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.541" endtime="20201117 14:46:58.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.540" endtime="20201117 14:46:58.932"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.934" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.943" endtime="20201117 14:46:58.958"></status>
</kw>
<msg timestamp="20201117 14:46:58.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.941" endtime="20201117 14:46:58.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.960" endtime="20201117 14:46:58.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.962" endtime="20201117 14:46:58.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.939" endtime="20201117 14:46:58.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.936" endtime="20201117 14:46:58.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.971" endtime="20201117 14:46:59.258"></status>
</kw>
<msg timestamp="20201117 14:46:59.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024210931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024228542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.970" endtime="20201117 14:46:59.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024210931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024228542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.262" endtime="20201117 14:46:59.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.270" endtime="20201117 14:46:59.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.967" endtime="20201117 14:46:59.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.966" endtime="20201117 14:46:59.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:59.277" level="INFO">${RESULT} = [{'time': 0.024228542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.761099999999724e-05, 'source_diff': 1.761099999999724e-05}, {'time': 0.024251375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:59.273" endtime="20201117 14:46:59.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:59.290" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:46:59.278" endtime="20201117 14:46:59.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.295" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:46:59.294" endtime="20201117 14:46:59.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.297" level="INFO">VALUE: [1.761099999999724e-05, 1.715299999999892e-05, 1.711100000000021e-05, 1.7027999999998794e-05, 1.6986000000000084e-05, 1.6971999999997045e-05, 1.690300000000214e-05, 1.7041999999998364e-05, 1.6735999999999834e-05, 1.6792000000001583e-05, 1.7014000000002694e-05, 1.702700000000279e-05, 1.6972000000000514e-05, 1.6750000000002874e-05, 1.6819999999997254e-05, 1.7263999999999474e-05, 1.691700000000171e-05, 1.693099999999781e-05, 1.7195000000001098e-05, 1.7027999999998794e-05, 1.7055999999997934e-05, 1.6861999999999433e-05, 1.7249999999999904e-05, 1.691699999999824e-05, 1.7027999999998794e-05, 1.691700000000171e-05, 1.6735999999999834e-05, 1.7070000000000973e-05, 1.7098000000000113e-05, 1.7070000000000973e-05, 1.6945000000000848e-05, 1.7278000000002514e-05, 1.6695000000000598e-05, 1.7084000000000543e-05, 1.6764000000002444e-05, 1.6763999999998974e-05, 1.712499999999978e-05, 1.6792000000001583e-05, 1.6957999999997475e-05, 1.686099999999996e-05, 1.705500000000193e-05, 1.7263e-05, 1.705500000000193e-05, 1.708300000000107e-05, 1.691700000000171e-05, 1.708300000000107e-05, 1.67629999999995e-05, 1.681899999999778e-05, 1.6749999999999404e-05, 1.715299999999892e-05]</msg>
<status status="PASS" starttime="20201117 14:46:59.296" endtime="20201117 14:46:59.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.291" endtime="20201117 14:46:59.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.305" endtime="20201117 14:46:59.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:59.309" endtime="20201117 14:46:59.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.307" endtime="20201117 14:46:59.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.303" endtime="20201117 14:46:59.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.935" endtime="20201117 14:46:59.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.933" endtime="20201117 14:46:59.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.932" endtime="20201117 14:46:59.330"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.332" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.341" endtime="20201117 14:46:59.356"></status>
</kw>
<msg timestamp="20201117 14:46:59.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.339" endtime="20201117 14:46:59.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.357" endtime="20201117 14:46:59.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.360" endtime="20201117 14:46:59.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.336" endtime="20201117 14:46:59.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.334" endtime="20201117 14:46:59.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.369" endtime="20201117 14:46:59.655"></status>
</kw>
<msg timestamp="20201117 14:46:59.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024815917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024835014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.367" endtime="20201117 14:46:59.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024815917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024835014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.659" endtime="20201117 14:46:59.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.667" endtime="20201117 14:46:59.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.365" endtime="20201117 14:46:59.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.363" endtime="20201117 14:46:59.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:59.674" level="INFO">${RESULT} = [{'time': 0.024835014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.909699999999917e-05, 'source_diff': 1.909699999999917e-05}, {'time': 0.024858819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:59.671" endtime="20201117 14:46:59.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:59.687" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:46:59.675" endtime="20201117 14:46:59.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.692" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:46:59.691" endtime="20201117 14:46:59.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.695" level="INFO">VALUE: [1.909699999999917e-05, 1.8250000000000904e-05, 1.7707999999998225e-05, 1.8264000000000474e-05, 1.8221999999998295e-05, 1.7986000000001084e-05, 1.808300000000207e-05, 1.8193999999999155e-05, 1.805499999999946e-05, 1.8263000000001e-05, 1.783299999999835e-05, 1.829100000000014e-05, 1.805499999999946e-05, 1.786099999999749e-05, 1.779099999999964e-05, 1.7943999999998905e-05, 1.80829999999986e-05, 1.7902000000000196e-05, 1.7792000000002584e-05, 1.8264000000000474e-05, 1.7707999999998225e-05, 1.8319999999998754e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7777999999999544e-05, 1.8166000000000015e-05, 1.8027999999999794e-05, 1.7972000000001515e-05, 1.7736000000000834e-05, 1.7763999999999974e-05, 1.7736000000000834e-05, 1.8263999999997005e-05, 1.784700000000139e-05, 1.809699999999817e-05, 1.811099999999774e-05, 1.7943999999998905e-05, 1.8000000000000654e-05, 1.7763999999999974e-05, 1.8166000000000015e-05, 1.790299999999967e-05, 1.7958000000001945e-05, 1.809699999999817e-05, 1.7777999999999544e-05, 1.8235999999997865e-05, 1.811099999999774e-05, 1.7986000000001084e-05, 1.78890000000001e-05, 1.8221999999998295e-05, 1.7929999999999335e-05, 1.7986000000001084e-05]</msg>
<status status="PASS" starttime="20201117 14:46:59.693" endtime="20201117 14:46:59.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.688" endtime="20201117 14:46:59.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.698" endtime="20201117 14:46:59.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:59.702" endtime="20201117 14:46:59.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.700" endtime="20201117 14:46:59.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.696" endtime="20201117 14:46:59.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.333" endtime="20201117 14:46:59.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.331" endtime="20201117 14:46:59.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.330" endtime="20201117 14:46:59.723"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.725" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.733" endtime="20201117 14:46:59.750"></status>
</kw>
<msg timestamp="20201117 14:46:59.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.732" endtime="20201117 14:46:59.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.751" endtime="20201117 14:46:59.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.754" endtime="20201117 14:46:59.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.729" endtime="20201117 14:46:59.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.727" endtime="20201117 14:46:59.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.763" endtime="20201117 14:47:00.049"></status>
</kw>
<msg timestamp="20201117 14:47:00.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02524125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025261083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:46:59.761" endtime="20201117 14:47:00.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02524125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025261083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:00.053" endtime="20201117 14:47:00.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.061" endtime="20201117 14:47:00.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.759" endtime="20201117 14:47:00.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.757" endtime="20201117 14:47:00.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:00.068" level="INFO">${RESULT} = [{'time': 0.025261083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.983300000000035e-05, 'source_diff': 1.983300000000035e-05}, {'time': 0.025284931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:00.065" endtime="20201117 14:47:00.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:00.083" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:00.070" endtime="20201117 14:47:00.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.088" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:47:00.087" endtime="20201117 14:47:00.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.090" level="INFO">VALUE: [1.983300000000035e-05, 1.8528000000000294e-05, 1.9069999999999504e-05, 1.88890000000011e-05, 1.895899999999895e-05, 1.897299999999852e-05, 1.887499999999806e-05, 1.880499999999674e-05, 1.9000000000001654e-05, 1.894500000000285e-05, 1.887500000000153e-05, 1.8902000000001196e-05, 1.8930000000000335e-05, 1.9138000000001876e-05, 1.88890000000011e-05, 1.8901999999997726e-05, 1.92769999999981e-05, 1.85829999999991e-05, 1.883299999999935e-05, 1.9250000000001904e-05, 1.8736000000001835e-05, 1.9013999999997755e-05, 1.9194000000000155e-05, 1.890300000000067e-05, 1.8735999999998365e-05, 1.887499999999806e-05, 1.893099999999981e-05, 1.8999999999998185e-05, 1.9208000000003195e-05, 1.9014000000001224e-05, 1.8722000000002265e-05, 1.8972000000002515e-05, 1.8971999999999045e-05, 1.9000000000001654e-05, 1.8778000000000544e-05, 1.881899999999978e-05, 1.8764000000000974e-05, 1.912499999999831e-05, 1.880500000000021e-05, 1.905499999999699e-05, 1.9264000000001474e-05, 1.912499999999831e-05, 1.9264000000001474e-05, 1.8792000000000114e-05, 1.894499999999938e-05, 1.8778000000000544e-05, 1.909699999999917e-05, 1.8778000000000544e-05, 1.8957999999999475e-05, 1.9028000000000794e-05]</msg>
<status status="PASS" starttime="20201117 14:47:00.089" endtime="20201117 14:47:00.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.084" endtime="20201117 14:47:00.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.093" endtime="20201117 14:47:00.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:00.097" endtime="20201117 14:47:00.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.095" endtime="20201117 14:47:00.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.092" endtime="20201117 14:47:00.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.726" endtime="20201117 14:47:00.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.724" endtime="20201117 14:47:00.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.723" endtime="20201117 14:47:00.118"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.120" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.128" endtime="20201117 14:47:00.143"></status>
</kw>
<msg timestamp="20201117 14:47:00.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.127" endtime="20201117 14:47:00.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.145" endtime="20201117 14:47:00.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.148" endtime="20201117 14:47:00.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.124" endtime="20201117 14:47:00.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.122" endtime="20201117 14:47:00.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.157" endtime="20201117 14:47:00.441"></status>
</kw>
<msg timestamp="20201117 14:47:00.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024557417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024578431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.155" endtime="20201117 14:47:00.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024557417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024578431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.445" endtime="20201117 14:47:00.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.454" endtime="20201117 14:47:00.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.153" endtime="20201117 14:47:00.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.151" endtime="20201117 14:47:00.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:00.461" level="INFO">${RESULT} = [{'time': 0.024578431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1013999999999755e-05, 'source_diff': 2.1013999999999755e-05}, {'time': 0.024604264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:00.457" endtime="20201117 14:47:00.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:00.474" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:00.462" endtime="20201117 14:47:00.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.479" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:47:00.478" endtime="20201117 14:47:00.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.481" level="INFO">VALUE: [2.1013999999999755e-05, 2.037499999999956e-05, 1.9985999999999615e-05, 1.995899999999995e-05, 1.9847999999999394e-05, 2.0013999999998755e-05, 1.9806000000000684e-05, 2.0249999999999435e-05, 1.9750000000002405e-05, 2.015299999999845e-05, 1.995899999999995e-05, 1.972299999999927e-05, 2.0097999999999644e-05, 1.977700000000207e-05, 2.0151999999998976e-05, 1.987499999999906e-05, 2.011099999999974e-05, 1.9820000000000254e-05, 2.0084000000000074e-05, 2.013899999999888e-05, 1.991699999999777e-05, 2.005500000000146e-05, 2.0014000000002224e-05, 2.02090000000002e-05, 2.02769999999991e-05, 2.0222000000000295e-05, 2.00830000000006e-05, 1.977700000000207e-05, 1.9736000000002835e-05, 1.983300000000035e-05, 2.011099999999974e-05, 2.002699999999885e-05, 2.0165999999998546e-05, 1.9708000000000225e-05, 1.984699999999992e-05, 1.9735999999999365e-05, 2.0235999999999865e-05, 1.979100000000164e-05, 2.013900000000235e-05, 1.9957999999997006e-05, 2.016700000000149e-05, 1.9972000000000045e-05, 1.9721999999999795e-05, 2.00830000000006e-05, 1.984700000000339e-05, 1.9721999999999795e-05, 2.0207999999997256e-05, 1.9792000000001114e-05, 2.012499999999931e-05, 2.0222000000000295e-05]</msg>
<status status="PASS" starttime="20201117 14:47:00.480" endtime="20201117 14:47:00.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.475" endtime="20201117 14:47:00.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.484" endtime="20201117 14:47:00.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:00.488" endtime="20201117 14:47:00.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.486" endtime="20201117 14:47:00.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.483" endtime="20201117 14:47:00.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.121" endtime="20201117 14:47:00.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.119" endtime="20201117 14:47:00.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.118" endtime="20201117 14:47:00.509"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.512" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.520" endtime="20201117 14:47:00.535"></status>
</kw>
<msg timestamp="20201117 14:47:00.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.518" endtime="20201117 14:47:00.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.536" endtime="20201117 14:47:00.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.539" endtime="20201117 14:47:00.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.516" endtime="20201117 14:47:00.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.514" endtime="20201117 14:47:00.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.548" endtime="20201117 14:47:00.834"></status>
</kw>
<msg timestamp="20201117 14:47:00.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024226431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024248028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.546" endtime="20201117 14:47:00.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024226431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024248028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.839" endtime="20201117 14:47:00.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.847" endtime="20201117 14:47:00.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.544" endtime="20201117 14:47:00.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.542" endtime="20201117 14:47:00.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:00.854" level="INFO">${RESULT} = [{'time': 0.024248028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.159700000000167e-05, 'source_diff': 2.159700000000167e-05}, {'time': 0.024274861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:00.850" endtime="20201117 14:47:00.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:00.867" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:00.855" endtime="20201117 14:47:00.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.872" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:47:00.871" endtime="20201117 14:47:00.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.874" level="INFO">VALUE: [2.159700000000167e-05, 2.1291999999999145e-05, 2.111100000000074e-05, 2.0778000000002544e-05, 2.1084000000001074e-05, 2.094500000000138e-05, 2.0805999999998215e-05, 2.0722000000000795e-05, 2.109700000000117e-05, 2.106900000000203e-05, 2.1193999999998686e-05, 2.0972000000001045e-05, 2.087500000000006e-05, 2.1070000000001504e-05, 2.094499999999791e-05, 2.1041999999998895e-05, 2.09029999999992e-05, 2.0763999999999505e-05, 2.07090000000007e-05, 2.112500000000031e-05, 2.1264000000000005e-05, 2.088899999999963e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.112500000000031e-05, 2.097300000000052e-05, 2.091700000000224e-05, 2.0778000000002544e-05, 2.1000000000000185e-05, 2.1264000000000005e-05, 2.105500000000246e-05, 2.0749999999999935e-05, 2.1042000000002364e-05, 2.118099999999859e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.105500000000246e-05, 2.086100000000049e-05, 2.088899999999963e-05, 2.112500000000031e-05, 2.0694000000001656e-05, 2.1264000000000005e-05, 2.1193999999998686e-05, 2.1208000000001725e-05, 2.0763999999999505e-05, 2.0915999999999296e-05, 2.1194000000002156e-05, 2.088899999999963e-05, 2.1208000000001725e-05, 2.0763999999999505e-05]</msg>
<status status="PASS" starttime="20201117 14:47:00.873" endtime="20201117 14:47:00.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.868" endtime="20201117 14:47:00.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.877" endtime="20201117 14:47:00.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:00.881" endtime="20201117 14:47:00.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.879" endtime="20201117 14:47:00.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.876" endtime="20201117 14:47:00.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.512" endtime="20201117 14:47:00.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.510" endtime="20201117 14:47:00.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.510" endtime="20201117 14:47:00.902"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.904" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.913" endtime="20201117 14:47:00.927"></status>
</kw>
<msg timestamp="20201117 14:47:00.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.911" endtime="20201117 14:47:00.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.929" endtime="20201117 14:47:00.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.932" endtime="20201117 14:47:00.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.908" endtime="20201117 14:47:00.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.906" endtime="20201117 14:47:00.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.941" endtime="20201117 14:47:01.227"></status>
</kw>
<msg timestamp="20201117 14:47:01.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023997681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02402075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:00.939" endtime="20201117 14:47:01.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023997681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02402075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:01.232" endtime="20201117 14:47:01.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.240" endtime="20201117 14:47:01.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.937" endtime="20201117 14:47:01.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.935" endtime="20201117 14:47:01.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:01.247" level="INFO">${RESULT} = [{'time': 0.02402075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.306900000000056e-05, 'source_diff': 2.306900000000056e-05}, {'time': 0.024048597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:01.243" endtime="20201117 14:47:01.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:01.260" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:01.247" endtime="20201117 14:47:01.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.264" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:47:01.263" endtime="20201117 14:47:01.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.267" level="INFO">VALUE: [2.306900000000056e-05, 2.238900000000113e-05, 2.1972000000002045e-05, 2.1791999999999645e-05, 2.2180000000000116e-05, 2.181900000000278e-05, 2.2250000000001435e-05, 2.1985999999998146e-05, 2.2028000000000325e-05, 2.2333999999998855e-05, 2.186100000000149e-05, 2.2207999999999256e-05, 2.2235999999998396e-05, 2.2056000000002934e-05, 2.2028000000000325e-05, 2.187500000000106e-05, 2.181899999999931e-05, 2.184699999999845e-05, 2.2236000000001865e-05, 2.209700000000217e-05, 2.1707999999998756e-05, 2.1750000000000935e-05, 2.2264000000001005e-05, 2.1555999999998965e-05, 2.208299999999913e-05, 2.184699999999845e-05, 2.188900000000063e-05, 2.2014000000000755e-05, 2.1805999999999215e-05, 2.2278000000000575e-05, 2.2028000000000325e-05, 2.194500000000238e-05, 2.215300000000045e-05, 2.2028000000000325e-05, 2.2083999999998605e-05, 2.184700000000192e-05, 2.1971999999998576e-05, 2.168099999999909e-05, 2.197299999999805e-05, 2.219499999999916e-05, 2.1820000000002254e-05, 2.218099999999959e-05, 2.2097999999998175e-05, 2.2262999999998062e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.179100000000017e-05, 2.1749999999997466e-05, 2.195900000000195e-05, 2.1694000000002656e-05]</msg>
<status status="PASS" starttime="20201117 14:47:01.266" endtime="20201117 14:47:01.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.261" endtime="20201117 14:47:01.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.270" endtime="20201117 14:47:01.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:01.274" endtime="20201117 14:47:01.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.272" endtime="20201117 14:47:01.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.269" endtime="20201117 14:47:01.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.905" endtime="20201117 14:47:01.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.903" endtime="20201117 14:47:01.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.902" endtime="20201117 14:47:01.295"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.297" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.306" endtime="20201117 14:47:01.322"></status>
</kw>
<msg timestamp="20201117 14:47:01.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.304" endtime="20201117 14:47:01.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.323" endtime="20201117 14:47:01.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.326" endtime="20201117 14:47:01.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.302" endtime="20201117 14:47:01.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.299" endtime="20201117 14:47:01.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.335" endtime="20201117 14:47:01.622"></status>
</kw>
<msg timestamp="20201117 14:47:01.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025794014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025818125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.334" endtime="20201117 14:47:01.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025794014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025818125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.626" endtime="20201117 14:47:01.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.634" endtime="20201117 14:47:01.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.331" endtime="20201117 14:47:01.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.329" endtime="20201117 14:47:01.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:01.643" level="INFO">${RESULT} = [{'time': 0.025818125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.025846972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:01.639" endtime="20201117 14:47:01.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:01.660" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:01.644" endtime="20201117 14:47:01.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.666" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:47:01.664" endtime="20201117 14:47:01.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.669" level="INFO">VALUE: [2.411100000000027e-05, 2.3472000000000076e-05, 2.3208000000000256e-05, 2.3249999999998966e-05, 2.2778000000001075e-05, 2.2707999999999756e-05, 2.284699999999945e-05, 2.313900000000188e-05, 2.306900000000056e-05, 2.3042000000000895e-05, 2.29030000000012e-05, 2.283299999999988e-05, 2.311100000000274e-05, 2.3277999999998106e-05, 2.3278000000001575e-05, 2.3263999999998536e-05, 2.2749999999998466e-05, 2.290299999999773e-05, 2.2944000000000436e-05, 2.2985999999999146e-05, 2.312499999999884e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.30969999999997e-05, 2.3332999999996912e-05, 2.3028000000001325e-05, 2.3056000000000465e-05, 2.2735999999998896e-05, 2.2750000000001935e-05, 2.3070000000000035e-05, 2.320899999999973e-05, 2.3070000000000035e-05, 2.29030000000012e-05, 2.288899999999816e-05, 2.308300000000013e-05, 2.312500000000231e-05, 2.2763999999998036e-05, 2.3097999999999175e-05, 2.29169999999973e-05, 2.305500000000099e-05, 2.3221999999999826e-05, 2.2999999999998716e-05, 2.2958000000000006e-05, 2.288900000000163e-05, 2.2847999999998925e-05, 2.304100000000142e-05, 2.304100000000142e-05, 2.312500000000231e-05, 2.281900000000031e-05, 2.2958000000000006e-05]</msg>
<status status="PASS" starttime="20201117 14:47:01.667" endtime="20201117 14:47:01.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.661" endtime="20201117 14:47:01.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.674" endtime="20201117 14:47:01.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:01.681" endtime="20201117 14:47:01.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.678" endtime="20201117 14:47:01.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.672" endtime="20201117 14:47:01.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.298" endtime="20201117 14:47:01.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.296" endtime="20201117 14:47:01.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.295" endtime="20201117 14:47:01.703"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.706" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.715" endtime="20201117 14:47:01.731"></status>
</kw>
<msg timestamp="20201117 14:47:01.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.713" endtime="20201117 14:47:01.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.732" endtime="20201117 14:47:01.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.735" endtime="20201117 14:47:01.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.711" endtime="20201117 14:47:01.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.709" endtime="20201117 14:47:01.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.744" endtime="20201117 14:47:02.029"></status>
</kw>
<msg timestamp="20201117 14:47:02.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026099486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026124181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.742" endtime="20201117 14:47:02.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026099486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026124181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.033" endtime="20201117 14:47:02.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.041" endtime="20201117 14:47:02.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.740" endtime="20201117 14:47:02.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.738" endtime="20201117 14:47:02.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:02.048" level="INFO">${RESULT} = [{'time': 0.026124181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.469499999999819e-05, 'source_diff': 2.469499999999819e-05}, {'time': 0.026153042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:02.045" endtime="20201117 14:47:02.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:02.062" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:02.049" endtime="20201117 14:47:02.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.066" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:47:02.065" endtime="20201117 14:47:02.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.069" level="INFO">VALUE: [2.469499999999819e-05, 2.3597999999999675e-05, 2.3763999999999036e-05, 2.4263999999999536e-05, 2.3819999999997316e-05, 2.3806000000001215e-05, 2.3778000000002075e-05, 2.4013999999999286e-05, 2.4013999999999286e-05, 2.39030000000022e-05, 2.363899999999891e-05, 2.388899999999916e-05, 2.3806000000001215e-05, 2.388899999999916e-05, 2.4236000000000396e-05, 2.3834000000000355e-05, 2.4236000000000396e-05, 2.3763999999999036e-05, 2.423699999999987e-05, 2.4082999999997662e-05, 2.4070000000001035e-05, 2.413900000000288e-05, 2.3804999999998272e-05, 2.388899999999916e-05, 2.4277999999999106e-05, 2.3722000000000326e-05, 2.4290999999999202e-05, 2.3582999999997162e-05, 2.4012999999999812e-05, 2.3972000000000576e-05, 2.4040999999998952e-05, 2.4137999999999937e-05, 2.4277999999999106e-05, 2.3777999999998606e-05, 2.3749999999999466e-05, 2.3694000000001186e-05, 2.415300000000245e-05, 2.384700000000045e-05, 2.3749999999999466e-05, 2.3999999999999716e-05, 2.381900000000131e-05, 2.3708000000000756e-05, 2.3818999999997842e-05, 2.416699999999855e-05, 2.4236000000000396e-05, 2.3722000000000326e-05, 2.380500000000174e-05, 2.384700000000045e-05, 2.3777999999998606e-05, 2.380500000000174e-05]</msg>
<status status="PASS" starttime="20201117 14:47:02.067" endtime="20201117 14:47:02.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.062" endtime="20201117 14:47:02.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.072" endtime="20201117 14:47:02.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.076" endtime="20201117 14:47:02.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.074" endtime="20201117 14:47:02.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.071" endtime="20201117 14:47:02.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.707" endtime="20201117 14:47:02.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.704" endtime="20201117 14:47:02.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.703" endtime="20201117 14:47:02.097"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.099" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.107" endtime="20201117 14:47:02.122"></status>
</kw>
<msg timestamp="20201117 14:47:02.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.106" endtime="20201117 14:47:02.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.124" endtime="20201117 14:47:02.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.126" endtime="20201117 14:47:02.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.103" endtime="20201117 14:47:02.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.101" endtime="20201117 14:47:02.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.136" endtime="20201117 14:47:02.422"></status>
</kw>
<msg timestamp="20201117 14:47:02.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024094278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024119861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.134" endtime="20201117 14:47:02.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024094278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024119861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.427" endtime="20201117 14:47:02.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.435" endtime="20201117 14:47:02.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.131" endtime="20201117 14:47:02.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.130" endtime="20201117 14:47:02.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:02.442" level="INFO">${RESULT} = [{'time': 0.024119861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5582999999999162e-05, 'source_diff': 2.5582999999999162e-05}, {'time': 0.024150736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:02.438" endtime="20201117 14:47:02.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:02.455" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:02.443" endtime="20201117 14:47:02.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.460" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:47:02.459" endtime="20201117 14:47:02.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.463" level="INFO">VALUE: [2.5582999999999162e-05, 2.512499999999737e-05, 2.5208000000002256e-05, 2.4944000000002436e-05, 2.5068999999999092e-05, 2.5208000000002256e-05, 2.5222000000001826e-05, 2.5166000000000077e-05, 2.4986000000001146e-05, 2.50970000000017e-05, 2.4943999999998967e-05, 2.515299999999998e-05, 2.4846999999997982e-05, 2.5278000000000106e-05, 2.4736000000000896e-05, 2.4722000000001326e-05, 2.5027999999999856e-05, 2.4750000000000466e-05, 2.5096999999998232e-05, 2.513900000000041e-05, 2.5250000000000966e-05, 2.488900000000016e-05, 2.50970000000017e-05, 2.5291999999999676e-05, 2.487500000000059e-05, 2.5014000000000286e-05, 2.4957999999998537e-05, 2.490299999999973e-05, 2.5055999999998996e-05, 2.5096999999998232e-05, 2.484700000000145e-05, 2.5055999999998996e-05, 2.487500000000059e-05, 2.515299999999998e-05, 2.5221999999998357e-05, 2.486100000000102e-05, 2.490299999999973e-05, 2.523700000000087e-05, 2.4806000000002215e-05, 2.5014000000000286e-05, 2.516700000000302e-05, 2.5000000000000716e-05, 2.518099999999912e-05, 2.518100000000259e-05, 2.508300000000213e-05, 2.4749999999996997e-05, 2.487500000000059e-05, 2.4805999999998746e-05, 2.515299999999998e-05, 2.4862000000000495e-05]</msg>
<status status="PASS" starttime="20201117 14:47:02.461" endtime="20201117 14:47:02.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.456" endtime="20201117 14:47:02.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.466" endtime="20201117 14:47:02.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.469" endtime="20201117 14:47:02.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.468" endtime="20201117 14:47:02.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.464" endtime="20201117 14:47:02.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.100" endtime="20201117 14:47:02.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.098" endtime="20201117 14:47:02.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.097" endtime="20201117 14:47:02.490"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.493" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.501" endtime="20201117 14:47:02.516"></status>
</kw>
<msg timestamp="20201117 14:47:02.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.499" endtime="20201117 14:47:02.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.518" endtime="20201117 14:47:02.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.520" endtime="20201117 14:47:02.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.497" endtime="20201117 14:47:02.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.495" endtime="20201117 14:47:02.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.530" endtime="20201117 14:47:02.818"></status>
</kw>
<msg timestamp="20201117 14:47:02.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024038917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024065569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.529" endtime="20201117 14:47:02.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024038917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024065569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.822" endtime="20201117 14:47:02.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.830" endtime="20201117 14:47:02.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.526" endtime="20201117 14:47:02.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.524" endtime="20201117 14:47:02.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:02.837" level="INFO">${RESULT} = [{'time': 0.024065569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6651999999998538e-05, 'source_diff': 2.6651999999998538e-05}, {'time': 0.024097403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:02.833" endtime="20201117 14:47:02.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:02.851" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:02.838" endtime="20201117 14:47:02.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.855" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:47:02.854" endtime="20201117 14:47:02.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.858" level="INFO">VALUE: [2.6651999999998538e-05, 2.6374999999998622e-05, 2.5860999999998552e-05, 2.5792000000000176e-05, 2.6277999999997637e-05, 2.6112000000001745e-05, 2.6069999999999566e-05, 2.590300000000073e-05, 2.612500000000184e-05, 2.587500000000159e-05, 2.613900000000141e-05, 2.5862000000001495e-05, 2.6042000000000426e-05, 2.620899999999926e-05, 2.593099999999987e-05, 2.5971999999999107e-05, 2.5707999999999287e-05, 2.6180000000000647e-05, 2.5735999999998427e-05, 2.5972000000002576e-05, 2.5818999999999842e-05, 2.5791000000000702e-05, 2.588900000000116e-05, 2.6306000000000246e-05, 2.6235999999998927e-05, 2.6194000000000217e-05, 2.6069000000000092e-05, 2.59170000000003e-05, 2.6235999999998927e-05, 2.6041999999996956e-05, 2.5846999999998982e-05, 2.5790999999997233e-05, 2.6110999999998802e-05, 2.5971999999999107e-05, 2.6292000000000676e-05, 2.6292000000000676e-05, 2.590300000000073e-05, 2.5707999999999287e-05, 2.613900000000141e-05, 2.59170000000003e-05, 2.5735999999998427e-05, 2.6263999999998067e-05, 2.5806000000003215e-05, 2.6096999999999232e-05, 2.6000000000001716e-05, 2.6069999999999566e-05, 2.6028000000000856e-05, 2.593099999999987e-05, 2.593099999999987e-05, 2.6055999999999996e-05]</msg>
<status status="PASS" starttime="20201117 14:47:02.856" endtime="20201117 14:47:02.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.852" endtime="20201117 14:47:02.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.861" endtime="20201117 14:47:02.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.864" endtime="20201117 14:47:02.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.863" endtime="20201117 14:47:02.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.859" endtime="20201117 14:47:02.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.493" endtime="20201117 14:47:02.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.492" endtime="20201117 14:47:02.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.491" endtime="20201117 14:47:02.885"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.888" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.896" endtime="20201117 14:47:02.912"></status>
</kw>
<msg timestamp="20201117 14:47:02.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.894" endtime="20201117 14:47:02.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.913" endtime="20201117 14:47:02.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.916" endtime="20201117 14:47:02.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.892" endtime="20201117 14:47:02.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.890" endtime="20201117 14:47:02.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.925" endtime="20201117 14:47:03.210"></status>
</kw>
<msg timestamp="20201117 14:47:03.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024855486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024883194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.923" endtime="20201117 14:47:03.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024855486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024883194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.214" endtime="20201117 14:47:03.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.222" endtime="20201117 14:47:03.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.921" endtime="20201117 14:47:03.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.919" endtime="20201117 14:47:03.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:03.229" level="INFO">${RESULT} = [{'time': 0.024883194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7708000000001287e-05, 'source_diff': 2.7708000000001287e-05}, {'time': 0.024916042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:03.226" endtime="20201117 14:47:03.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:03.244" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:03.230" endtime="20201117 14:47:03.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.248" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:47:03.247" endtime="20201117 14:47:03.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.251" level="INFO">VALUE: [2.7708000000001287e-05, 2.7138999999998942e-05, 2.693100000000087e-05, 2.6806000000000746e-05, 2.715299999999851e-05, 2.6763999999998567e-05, 2.718100000000112e-05, 2.6735999999999427e-05, 2.6736000000002896e-05, 2.7110999999999802e-05, 2.691699999999783e-05, 2.7056000000000996e-05, 2.718100000000112e-05, 2.697300000000305e-05, 2.7054999999998053e-05, 2.7097999999999706e-05, 2.7137999999999468e-05, 2.6860999999999552e-05, 2.6777000000002132e-05, 2.6985999999999677e-05, 2.7276999999999163e-05, 2.6999999999999247e-05, 2.6930000000001397e-05, 2.7193999999997748e-05, 2.6790999999998233e-05, 2.7165999999998608e-05, 2.6999999999999247e-05, 2.6860999999999552e-05, 2.6874999999999122e-05, 2.715299999999851e-05, 2.7208000000000787e-05, 2.6874999999999122e-05, 2.7083000000000662e-05, 2.6763999999998567e-05, 2.7179999999998178e-05, 2.6735999999999427e-05, 2.7083000000000662e-05, 2.6806000000000746e-05, 2.7138999999998942e-05, 2.7263999999999067e-05, 2.6763999999998567e-05, 2.7235999999999927e-05, 2.6972000000000107e-05, 2.7207999999997318e-05, 2.7110999999999802e-05, 2.7028000000001856e-05, 2.6972000000000107e-05, 2.720900000000026e-05, 2.6805999999997276e-05, 2.694500000000044e-05]</msg>
<status status="PASS" starttime="20201117 14:47:03.249" endtime="20201117 14:47:03.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.245" endtime="20201117 14:47:03.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.254" endtime="20201117 14:47:03.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:03.257" endtime="20201117 14:47:03.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.256" endtime="20201117 14:47:03.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.252" endtime="20201117 14:47:03.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.888" endtime="20201117 14:47:03.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.886" endtime="20201117 14:47:03.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.886" endtime="20201117 14:47:03.279"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.281" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.289" endtime="20201117 14:47:03.306"></status>
</kw>
<msg timestamp="20201117 14:47:03.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.288" endtime="20201117 14:47:03.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.307" endtime="20201117 14:47:03.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.310" endtime="20201117 14:47:03.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.285" endtime="20201117 14:47:03.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.283" endtime="20201117 14:47:03.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.319" endtime="20201117 14:47:03.606"></status>
</kw>
<msg timestamp="20201117 14:47:03.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024130347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024159528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.317" endtime="20201117 14:47:03.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024130347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024159528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.610" endtime="20201117 14:47:03.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.619" endtime="20201117 14:47:03.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.315" endtime="20201117 14:47:03.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.313" endtime="20201117 14:47:03.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:03.625" level="INFO">${RESULT} = [{'time': 0.024159528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.918099999999965e-05, 'source_diff': 2.918099999999965e-05}, {'time': 0.024193389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:03.622" endtime="20201117 14:47:03.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:03.639" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:03.626" endtime="20201117 14:47:03.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.643" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:47:03.642" endtime="20201117 14:47:03.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.646" level="INFO">VALUE: [2.918099999999965e-05, 2.8319999999998346e-05, 2.8179999999999178e-05, 2.7958000000001537e-05, 2.7999999999996777e-05, 2.8277999999999637e-05, 2.8222000000001357e-05, 2.768099999999815e-05, 2.8042000000002426e-05, 2.7749999999999997e-05, 2.7778000000002606e-05, 2.8152999999999512e-05, 2.7776999999999663e-05, 2.7861000000000552e-05, 2.8084000000001136e-05, 2.8097999999997236e-05, 2.7875000000000122e-05, 2.7736000000000427e-05, 2.7847000000000982e-05, 2.822299999999736e-05, 2.793100000000187e-05, 2.816699999999908e-05, 2.7777999999999137e-05, 2.7862000000000026e-05, 2.8291999999999207e-05, 2.8027999999999387e-05, 2.7944000000001967e-05, 2.8041999999998957e-05, 2.822300000000083e-05, 2.8138999999999942e-05, 2.7861000000000552e-05, 2.772300000000033e-05, 2.8097000000001232e-05, 2.8179999999999178e-05, 2.8304999999999303e-05, 2.8125000000000372e-05, 2.7888999999999692e-05, 2.7929999999998928e-05, 2.7805000000002272e-05, 2.8221999999997888e-05, 2.7638999999999442e-05, 2.8152999999999512e-05, 2.7875000000000122e-05, 2.7971999999997638e-05, 2.8111000000000802e-05, 2.7929999999998928e-05, 2.7972000000001107e-05, 2.7929999999998928e-05, 2.8055000000002522e-05, 2.8207999999998318e-05]</msg>
<status status="PASS" starttime="20201117 14:47:03.644" endtime="20201117 14:47:03.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.640" endtime="20201117 14:47:03.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.649" endtime="20201117 14:47:03.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:03.652" endtime="20201117 14:47:03.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.651" endtime="20201117 14:47:03.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.647" endtime="20201117 14:47:03.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.282" endtime="20201117 14:47:03.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.280" endtime="20201117 14:47:03.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.279" endtime="20201117 14:47:03.673"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.676" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.684" endtime="20201117 14:47:03.699"></status>
</kw>
<msg timestamp="20201117 14:47:03.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.682" endtime="20201117 14:47:03.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.701" endtime="20201117 14:47:03.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.704" endtime="20201117 14:47:03.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.680" endtime="20201117 14:47:03.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.678" endtime="20201117 14:47:03.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.713" endtime="20201117 14:47:03.999"></status>
</kw>
<msg timestamp="20201117 14:47:04.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023881333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023911, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:03.711" endtime="20201117 14:47:04.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023881333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023911, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:04.003" endtime="20201117 14:47:04.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.011" endtime="20201117 14:47:04.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.709" endtime="20201117 14:47:04.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.707" endtime="20201117 14:47:04.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:04.018" level="INFO">${RESULT} = [{'time': 0.023911, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9667000000000582e-05, 'source_diff': 2.9667000000000582e-05}, {'time': 0.023944778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:04.015" endtime="20201117 14:47:04.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:04.032" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:04.019" endtime="20201117 14:47:04.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.036" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:47:04.035" endtime="20201117 14:47:04.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.039" level="INFO">VALUE: [2.9667000000000582e-05, 2.8486000000001177e-05, 2.897299999999811e-05, 2.9125000000001372e-05, 2.8986000000001677e-05, 2.919499999999922e-05, 2.8819999999998847e-05, 2.870899999999829e-05, 2.8834000000001886e-05, 2.920899999999879e-05, 2.8764000000000567e-05, 2.9069999999999097e-05, 2.920899999999879e-05, 2.9250000000001497e-05, 2.8832999999998943e-05, 2.8861000000001552e-05, 2.8929999999999928e-05, 2.9110999999998333e-05, 2.9041000000000483e-05, 2.8916000000000358e-05, 2.9041000000000483e-05, 2.8888999999997222e-05, 2.9291000000000733e-05, 2.8929999999999928e-05, 2.8846999999998513e-05, 2.8916000000000358e-05, 2.9055000000000053e-05, 2.9250000000001497e-05, 2.8818999999999373e-05, 2.8764000000000567e-05, 2.922300000000183e-05, 2.9193999999999748e-05, 2.8929999999999928e-05, 2.8971999999998638e-05, 2.9249999999998028e-05, 2.9264000000001067e-05, 2.9236000000001927e-05, 2.8861000000001552e-05, 2.9221999999998888e-05, 2.9235999999998458e-05, 2.9111000000001802e-05, 2.9028000000000387e-05, 2.9110999999998333e-05, 2.8985999999998208e-05, 2.9222000000002357e-05, 2.919500000000269e-05, 2.8736000000001427e-05, 2.8889000000000692e-05, 2.9125000000001372e-05, 2.9153000000000512e-05]</msg>
<status status="PASS" starttime="20201117 14:47:04.037" endtime="20201117 14:47:04.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.033" endtime="20201117 14:47:04.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.042" endtime="20201117 14:47:04.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:04.045" endtime="20201117 14:47:04.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.044" endtime="20201117 14:47:04.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.040" endtime="20201117 14:47:04.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.676" endtime="20201117 14:47:04.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.675" endtime="20201117 14:47:04.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.674" endtime="20201117 14:47:04.066"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.069" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.077" endtime="20201117 14:47:04.094"></status>
</kw>
<msg timestamp="20201117 14:47:04.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.076" endtime="20201117 14:47:04.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.095" endtime="20201117 14:47:04.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.098" endtime="20201117 14:47:04.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.073" endtime="20201117 14:47:04.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.071" endtime="20201117 14:47:04.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.107" endtime="20201117 14:47:04.392"></status>
</kw>
<msg timestamp="20201117 14:47:04.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024992, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025023208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:04.105" endtime="20201117 14:47:04.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024992, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025023208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:04.396" endtime="20201117 14:47:04.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.405" endtime="20201117 14:47:04.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.103" endtime="20201117 14:47:04.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.101" endtime="20201117 14:47:04.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:04.411" level="INFO">${RESULT} = [{'time': 0.025023208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.120800000000132e-05, 'source_diff': 3.120800000000132e-05}, {'time': 0.025059042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:04.408" endtime="20201117 14:47:04.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:04.425" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:04.412" endtime="20201117 14:47:04.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.429" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:47:04.428" endtime="20201117 14:47:04.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.432" level="INFO">VALUE: [3.120800000000132e-05, 3.044500000000047e-05, 3.019500000000022e-05, 2.9875000000002122e-05, 2.969499999999972e-05, 3.0042000000000957e-05, 3.0055000000001053e-05, 3.0194000000000748e-05, 2.9847999999998986e-05, 3.0054999999997584e-05, 2.988799999999875e-05, 2.997299999999911e-05, 3.0249999999999028e-05, 2.9805000000000803e-05, 2.9777000000001663e-05, 2.9860999999999083e-05, 2.9860999999999083e-05, 3.0291000000001733e-05, 2.9736000000002427e-05, 3.0194000000000748e-05, 3.0138999999998473e-05, 3.0249999999999028e-05, 2.9694000000000248e-05, 2.9999999999998778e-05, 2.9902999999997792e-05, 2.9721999999999388e-05, 2.9749999999998528e-05, 2.9819000000000373e-05, 3.0277999999998167e-05, 3.0263999999998598e-05, 2.9944000000000498e-05, 3.0278000000001637e-05, 3.0125000000002372e-05, 2.9707999999999818e-05, 2.9792000000000707e-05, 3.0083999999999667e-05, 2.9735999999998958e-05, 2.9874999999998653e-05, 3.0138999999998473e-05, 2.9916999999997362e-05, 3.0208000000000318e-05, 3.0097999999999236e-05, 3.0221999999999888e-05, 3.0235999999999458e-05, 2.9778000000001137e-05, 2.9874999999998653e-05, 3.020899999999979e-05, 3.0000000000002247e-05, 3.0181000000000652e-05, 2.9819999999999847e-05]</msg>
<status status="PASS" starttime="20201117 14:47:04.430" endtime="20201117 14:47:04.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.426" endtime="20201117 14:47:04.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.435" endtime="20201117 14:47:04.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:04.446" endtime="20201117 14:47:04.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.437" endtime="20201117 14:47:04.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.433" endtime="20201117 14:47:04.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.069" endtime="20201117 14:47:04.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.067" endtime="20201117 14:47:04.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.067" endtime="20201117 14:47:04.467"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.469" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.477" endtime="20201117 14:47:04.494"></status>
</kw>
<msg timestamp="20201117 14:47:04.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.476" endtime="20201117 14:47:04.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.495" endtime="20201117 14:47:04.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.498" endtime="20201117 14:47:04.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.473" endtime="20201117 14:47:04.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.471" endtime="20201117 14:47:04.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.507" endtime="20201117 14:47:04.793"></status>
</kw>
<msg timestamp="20201117 14:47:04.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024851083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024882847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.505" endtime="20201117 14:47:04.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024851083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024882847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.797" endtime="20201117 14:47:04.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.805" endtime="20201117 14:47:04.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.503" endtime="20201117 14:47:04.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.501" endtime="20201117 14:47:04.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:04.812" level="INFO">${RESULT} = [{'time': 0.024882847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.17640000000001e-05, 'source_diff': 3.17640000000001e-05}, {'time': 0.024919667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:04.808" endtime="20201117 14:47:04.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:04.826" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:04.813" endtime="20201117 14:47:04.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.831" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:47:04.830" endtime="20201117 14:47:04.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.833" level="INFO">VALUE: [3.17640000000001e-05, 3.1098000000000237e-05, 3.119500000000122e-05, 3.122300000000036e-05, 3.111100000000033e-05, 3.101400000000282e-05, 3.104199999999849e-05, 3.082000000000085e-05, 3.097200000000064e-05, 3.106999999999763e-05, 3.066700000000158e-05, 3.108300000000119e-05, 3.123600000000046e-05, 3.1138e-05, 3.1276999999999694e-05, 3.119399999999828e-05, 3.095800000000107e-05, 3.0818999999997904e-05, 3.073599999999996e-05, 3.122200000000089e-05, 3.1096999999997293e-05, 3.07639999999991e-05, 3.08050000000018e-05, 3.115299999999904e-05, 3.122200000000089e-05, 3.0804999999998334e-05, 3.097200000000064e-05, 3.084700000000051e-05, 3.0804999999998334e-05, 3.123600000000046e-05, 3.086100000000008e-05, 3.094399999999803e-05, 3.090299999999879e-05, 3.087499999999965e-05, 3.0832999999997474e-05, 3.081900000000137e-05, 3.127800000000264e-05, 3.113899999999947e-05, 3.094500000000097e-05, 3.087500000000312e-05, 3.086100000000008e-05, 3.102800000000239e-05, 3.120799999999785e-05, 3.122300000000036e-05, 3.083400000000042e-05, 3.074999999999953e-05, 3.113899999999947e-05, 3.125000000000003e-05, 3.13050000000023e-05, 3.1026999999999444e-05]</msg>
<status status="PASS" starttime="20201117 14:47:04.832" endtime="20201117 14:47:04.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.827" endtime="20201117 14:47:04.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.837" endtime="20201117 14:47:04.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:04.840" endtime="20201117 14:47:04.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.839" endtime="20201117 14:47:04.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.835" endtime="20201117 14:47:04.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.470" endtime="20201117 14:47:04.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.468" endtime="20201117 14:47:04.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.467" endtime="20201117 14:47:04.861"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.864" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.872" endtime="20201117 14:47:04.888"></status>
</kw>
<msg timestamp="20201117 14:47:04.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.870" endtime="20201117 14:47:04.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.890" endtime="20201117 14:47:04.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.892" endtime="20201117 14:47:04.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.868" endtime="20201117 14:47:04.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.866" endtime="20201117 14:47:04.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.901" endtime="20201117 14:47:05.187"></status>
</kw>
<msg timestamp="20201117 14:47:05.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024314153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024347014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.900" endtime="20201117 14:47:05.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024314153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024347014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.192" endtime="20201117 14:47:05.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.200" endtime="20201117 14:47:05.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.897" endtime="20201117 14:47:05.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.895" endtime="20201117 14:47:05.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.207" level="INFO">${RESULT} = [{'time': 0.024347014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2860999999998614e-05, 'source_diff': 3.2860999999998614e-05}, {'time': 0.024384861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:05.203" endtime="20201117 14:47:05.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:05.220" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:05.208" endtime="20201117 14:47:05.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.224" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:47:05.223" endtime="20201117 14:47:05.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.227" level="INFO">VALUE: [3.2860999999998614e-05, 3.219399999999928e-05, 3.21250000000009e-05, 3.1860999999997613e-05, 3.20839999999982e-05, 3.2096999999998294e-05, 3.179199999999924e-05, 3.192999999999946e-05, 3.186100000000108e-05, 3.199999999999731e-05, 3.205599999999906e-05, 3.1860999999997613e-05, 3.187500000000065e-05, 3.175000000000053e-05, 3.219499999999875e-05, 3.227800000000017e-05, 3.190299999999979e-05, 3.190299999999979e-05, 3.194500000000197e-05, 3.186100000000108e-05, 3.201400000000035e-05, 3.180599999999881e-05, 3.216600000000014e-05, 3.19310000000024e-05, 3.204199999999949e-05, 3.181999999999838e-05, 3.183400000000142e-05, 3.195900000000154e-05, 3.22640000000006e-05, 3.216699999999961e-05, 3.183400000000142e-05, 3.215300000000004e-05, 3.216699999999961e-05, 3.198700000000068e-05, 3.2068999999999154e-05, 3.190200000000032e-05, 3.2041000000000014e-05, 3.197199999999817e-05, 3.187500000000065e-05, 3.216600000000014e-05, 3.2276999999997225e-05, 3.19579999999986e-05, 3.233400000000192e-05, 3.180599999999881e-05, 3.213900000000047e-05, 3.1832999999998474e-05, 3.222200000000189e-05, 3.223600000000146e-05, 3.17640000000001e-05, 3.170800000000182e-05]</msg>
<status status="PASS" starttime="20201117 14:47:05.226" endtime="20201117 14:47:05.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.221" endtime="20201117 14:47:05.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.231" endtime="20201117 14:47:05.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.234" endtime="20201117 14:47:05.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.232" endtime="20201117 14:47:05.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.229" endtime="20201117 14:47:05.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.864" endtime="20201117 14:47:05.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.862" endtime="20201117 14:47:05.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.862" endtime="20201117 14:47:05.255"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.258" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.266" endtime="20201117 14:47:05.282"></status>
</kw>
<msg timestamp="20201117 14:47:05.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.264" endtime="20201117 14:47:05.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.284" endtime="20201117 14:47:05.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.286" endtime="20201117 14:47:05.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.262" endtime="20201117 14:47:05.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.260" endtime="20201117 14:47:05.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.295" endtime="20201117 14:47:05.581"></status>
</kw>
<msg timestamp="20201117 14:47:05.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024015069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024048653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.294" endtime="20201117 14:47:05.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024015069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024048653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.585" endtime="20201117 14:47:05.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.593" endtime="20201117 14:47:05.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.291" endtime="20201117 14:47:05.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.289" endtime="20201117 14:47:05.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.600" level="INFO">${RESULT} = [{'time': 0.024048653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.35839999999997e-05, 'source_diff': 3.35839999999997e-05}, {'time': 0.024086583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:05.596" endtime="20201117 14:47:05.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:05.613" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:05.601" endtime="20201117 14:47:05.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.618" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:47:05.617" endtime="20201117 14:47:05.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.621" level="INFO">VALUE: [3.35839999999997e-05, 3.266600000000064e-05, 3.273599999999849e-05, 3.3012999999998405e-05, 3.315300000000104e-05, 3.269499999999925e-05, 3.322199999999942e-05, 3.302799999999745e-05, 3.3110999999998864e-05, 3.3110999999998864e-05, 3.3277000000001694e-05, 3.27640000000011e-05, 3.283400000000242e-05, 3.283400000000242e-05, 3.302800000000092e-05, 3.297299999999864e-05, 3.277800000000067e-05, 3.323599999999899e-05, 3.319499999999975e-05, 3.306999999999963e-05, 3.319499999999975e-05, 3.330600000000031e-05, 3.29449999999995e-05, 3.269399999999978e-05, 3.294400000000003e-05, 3.3138000000002e-05, 3.315200000000157e-05, 3.2777000000001194e-05, 3.294400000000003e-05, 3.300000000000178e-05, 3.300000000000178e-05, 3.2860999999998614e-05, 3.2791000000000764e-05, 3.3110999999998864e-05, 3.291600000000089e-05, 3.3055000000000584e-05, 3.316699999999714e-05, 3.324999999999856e-05, 3.27779999999972e-05, 3.331999999999988e-05, 3.291599999999742e-05, 3.300000000000178e-05, 3.319400000000028e-05, 3.284700000000251e-05, 3.31250000000019e-05, 3.302799999999745e-05, 3.268099999999968e-05, 3.319400000000028e-05, 3.2777000000001194e-05, 3.294400000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:47:05.619" endtime="20201117 14:47:05.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.614" endtime="20201117 14:47:05.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.624" endtime="20201117 14:47:05.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.627" endtime="20201117 14:47:05.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.626" endtime="20201117 14:47:05.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.622" endtime="20201117 14:47:05.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.258" endtime="20201117 14:47:05.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.256" endtime="20201117 14:47:05.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.255" endtime="20201117 14:47:05.648"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.651" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.659" endtime="20201117 14:47:05.674"></status>
</kw>
<msg timestamp="20201117 14:47:05.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.657" endtime="20201117 14:47:05.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.676" endtime="20201117 14:47:05.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.678" endtime="20201117 14:47:05.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.655" endtime="20201117 14:47:05.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.653" endtime="20201117 14:47:05.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.687" endtime="20201117 14:47:05.973"></status>
</kw>
<msg timestamp="20201117 14:47:05.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024379653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024414736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.686" endtime="20201117 14:47:05.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024379653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024414736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.977" endtime="20201117 14:47:05.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.986" endtime="20201117 14:47:05.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.683" endtime="20201117 14:47:05.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.681" endtime="20201117 14:47:05.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.993" level="INFO">${RESULT} = [{'time': 0.024414736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5082999999998254e-05, 'source_diff': 3.5082999999998254e-05}, {'time': 0.024454583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:05.990" endtime="20201117 14:47:05.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:06.006" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:05.994" endtime="20201117 14:47:06.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.011" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:47:06.010" endtime="20201117 14:47:06.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.014" level="INFO">VALUE: [3.5082999999998254e-05, 3.420799999999738e-05, 3.4040999999998545e-05, 3.3847000000000044e-05, 3.374999999999906e-05, 3.3874999999999184e-05, 3.3888999999998753e-05, 3.424999999999956e-05, 3.39580000000006e-05, 3.422200000000042e-05, 3.4097000000000294e-05, 3.374999999999906e-05, 3.4097000000000294e-05, 3.401400000000235e-05, 3.3805000000001334e-05, 3.424999999999956e-05, 3.4152999999998573e-05, 3.3847000000000044e-05, 3.42640000000026e-05, 3.420799999999738e-05, 3.395799999999713e-05, 3.388900000000222e-05, 3.426399999999913e-05, 3.373600000000296e-05, 3.419499999999728e-05, 3.420900000000032e-05, 3.373599999999949e-05, 3.4110999999999864e-05, 3.369500000000025e-05, 3.4263000000003124e-05, 3.376399999999863e-05, 3.401399999999888e-05, 3.37640000000021e-05, 3.4124999999999434e-05, 3.372299999999939e-05, 3.4083000000000724e-05, 3.3874999999999184e-05, 3.390300000000179e-05, 3.390299999999832e-05, 3.376399999999863e-05, 3.4069000000001154e-05, 3.416600000000214e-05, 3.417999999999824e-05, 3.4068999999997684e-05, 3.382000000000038e-05, 3.399999999999931e-05, 3.3805000000001334e-05, 3.4054999999998115e-05, 3.419400000000128e-05, 3.397200000000017e-05]</msg>
<status status="PASS" starttime="20201117 14:47:06.012" endtime="20201117 14:47:06.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.007" endtime="20201117 14:47:06.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.017" endtime="20201117 14:47:06.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:06.020" endtime="20201117 14:47:06.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.019" endtime="20201117 14:47:06.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.015" endtime="20201117 14:47:06.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.651" endtime="20201117 14:47:06.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.649" endtime="20201117 14:47:06.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.649" endtime="20201117 14:47:06.041"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.044" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.052" endtime="20201117 14:47:06.069"></status>
</kw>
<msg timestamp="20201117 14:47:06.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.050" endtime="20201117 14:47:06.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.070" endtime="20201117 14:47:06.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.073" endtime="20201117 14:47:06.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.048" endtime="20201117 14:47:06.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.046" endtime="20201117 14:47:06.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.082" endtime="20201117 14:47:06.367"></status>
</kw>
<msg timestamp="20201117 14:47:06.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024773819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02480925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:06.080" endtime="20201117 14:47:06.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024773819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02480925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:06.371" endtime="20201117 14:47:06.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.379" endtime="20201117 14:47:06.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.077" endtime="20201117 14:47:06.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.076" endtime="20201117 14:47:06.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:06.386" level="INFO">${RESULT} = [{'time': 0.02480925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.543100000000243e-05, 'source_diff': 3.543100000000243e-05}, {'time': 0.024849097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:06.383" endtime="20201117 14:47:06.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:06.401" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:06.387" endtime="20201117 14:47:06.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.405" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:47:06.404" endtime="20201117 14:47:06.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.408" level="INFO">VALUE: [3.543100000000243e-05, 3.452799999999895e-05, 3.498599999999727e-05, 3.49580000000016e-05, 3.5068999999998685e-05, 3.4861000000000614e-05, 3.4846999999997574e-05, 3.4861000000000614e-05, 3.467999999999874e-05, 3.4888999999999754e-05, 3.502799999999945e-05, 3.502799999999945e-05, 3.5110999999997394e-05, 3.494400000000203e-05, 3.519399999999881e-05, 3.490300000000279e-05, 3.491699999999889e-05, 3.525000000000056e-05, 3.469499999999778e-05, 3.498600000000074e-05, 3.525000000000056e-05, 3.507000000000163e-05, 3.522299999999742e-05, 3.497200000000117e-05, 3.504199999999902e-05, 3.498600000000074e-05, 3.4902999999999323e-05, 3.484800000000052e-05, 3.479199999999877e-05, 3.520800000000185e-05, 3.475000000000006e-05, 3.518100000000218e-05, 3.520899999999785e-05, 3.477800000000267e-05, 3.506999999999816e-05, 3.4875000000000184e-05, 3.525000000000056e-05, 3.494399999999856e-05, 3.4819000000001904e-05, 3.5055000000002584e-05, 3.525000000000056e-05, 3.4832999999998004e-05, 3.4847000000001044e-05, 3.5110999999997394e-05, 3.5054999999999115e-05, 3.525000000000056e-05, 3.4652999999999073e-05, 3.526400000000013e-05, 3.475000000000006e-05, 3.47640000000031e-05]</msg>
<status status="PASS" starttime="20201117 14:47:06.406" endtime="20201117 14:47:06.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.402" endtime="20201117 14:47:06.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.411" endtime="20201117 14:47:06.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:06.414" endtime="20201117 14:47:06.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.413" endtime="20201117 14:47:06.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.409" endtime="20201117 14:47:06.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.044" endtime="20201117 14:47:06.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.042" endtime="20201117 14:47:06.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.042" endtime="20201117 14:47:06.435"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.438" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.446" endtime="20201117 14:47:06.461"></status>
</kw>
<msg timestamp="20201117 14:47:06.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.444" endtime="20201117 14:47:06.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.463" endtime="20201117 14:47:06.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.466" endtime="20201117 14:47:06.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.442" endtime="20201117 14:47:06.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.440" endtime="20201117 14:47:06.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.475" endtime="20201117 14:47:06.761"></status>
</kw>
<msg timestamp="20201117 14:47:06.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023948, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023984972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:06.473" endtime="20201117 14:47:06.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023948, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023984972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:06.765" endtime="20201117 14:47:06.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.774" endtime="20201117 14:47:06.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.471" endtime="20201117 14:47:06.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.469" endtime="20201117 14:47:06.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:06.780" level="INFO">${RESULT} = [{'time': 0.023984972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.69719999999997e-05, 'source_diff': 3.69719999999997e-05}, {'time': 0.024026819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:06.777" endtime="20201117 14:47:06.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:06.794" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:06.781" endtime="20201117 14:47:06.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.798" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:47:06.797" endtime="20201117 14:47:06.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.801" level="INFO">VALUE: [3.69719999999997e-05, 3.6347000000002544e-05, 3.590200000000085e-05, 3.6361000000002114e-05, 3.595799999999913e-05, 3.6139000000001004e-05, 3.5777000000000725e-05, 3.61520000000011e-05, 3.5832999999999005e-05, 3.615199999999763e-05, 3.6054999999996645e-05, 3.567999999999974e-05, 3.5791000000000295e-05, 3.5832999999999005e-05, 3.595799999999913e-05, 3.622200000000242e-05, 3.576400000000063e-05, 3.601400000000088e-05, 3.5846999999998574e-05, 3.6124999999997964e-05, 3.626400000000113e-05, 3.576400000000063e-05, 3.573600000000149e-05, 3.5903000000000324e-05, 3.595799999999913e-05, 3.626400000000113e-05, 3.579199999999977e-05, 3.620799999999938e-05, 3.6139000000001004e-05, 3.620799999999938e-05, 3.601400000000088e-05, 3.572200000000192e-05, 3.6318999999999935e-05, 3.594499999999903e-05, 3.5916999999999893e-05, 3.600000000000131e-05, 3.584800000000152e-05, 3.5875000000001184e-05, 3.627799999999723e-05, 3.5818999999999435e-05, 3.5791000000000295e-05, 3.6291000000000795e-05, 3.5777000000000725e-05, 3.6276999999997755e-05, 3.588799999999781e-05, 3.6125000000001434e-05, 3.5818999999999435e-05, 3.6055000000000115e-05, 3.592999999999999e-05, 3.5875000000001184e-05]</msg>
<status status="PASS" starttime="20201117 14:47:06.799" endtime="20201117 14:47:06.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.795" endtime="20201117 14:47:06.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.804" endtime="20201117 14:47:06.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:06.807" endtime="20201117 14:47:06.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.806" endtime="20201117 14:47:06.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.802" endtime="20201117 14:47:06.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.438" endtime="20201117 14:47:06.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.437" endtime="20201117 14:47:06.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.436" endtime="20201117 14:47:06.828"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.831" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.839" endtime="20201117 14:47:06.856"></status>
</kw>
<msg timestamp="20201117 14:47:06.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.838" endtime="20201117 14:47:06.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.857" endtime="20201117 14:47:06.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.860" endtime="20201117 14:47:06.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.835" endtime="20201117 14:47:06.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.833" endtime="20201117 14:47:06.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.869" endtime="20201117 14:47:07.155"></status>
</kw>
<msg timestamp="20201117 14:47:07.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024936931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024975167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.867" endtime="20201117 14:47:07.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024936931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024975167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.160" endtime="20201117 14:47:07.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.168" endtime="20201117 14:47:07.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.865" endtime="20201117 14:47:07.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.863" endtime="20201117 14:47:07.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.174" level="INFO">${RESULT} = [{'time': 0.024975167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.823600000000052e-05, 'source_diff': 3.823600000000052e-05}, {'time': 0.025018014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:07.171" endtime="20201117 14:47:07.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.188" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:07.175" endtime="20201117 14:47:07.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.192" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.191" endtime="20201117 14:47:07.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.195" level="INFO">VALUE: [3.823600000000052e-05, 3.720800000000038e-05, 3.705599999999712e-05, 3.6860999999999144e-05, 3.704199999999755e-05, 3.707000000000016e-05, 3.6874999999998714e-05, 3.69719999999997e-05, 3.70979999999993e-05, 3.6819000000000435e-05, 3.698699999999874e-05, 3.7333000000000505e-05, 3.6667000000000644e-05, 3.720900000000332e-05, 3.720800000000038e-05, 3.715199999999863e-05, 3.7054999999997645e-05, 3.698699999999874e-05, 3.723599999999952e-05, 3.6805000000000865e-05, 3.6805000000000865e-05, 3.69719999999997e-05, 3.716600000000167e-05, 3.7277000000002225e-05, 3.727799999999823e-05, 3.676399999999816e-05, 3.690199999999838e-05, 3.71659999999982e-05, 3.673599999999902e-05, 3.7110999999999394e-05, 3.67780000000012e-05, 3.6819000000000435e-05, 3.7138999999998534e-05, 3.726399999999866e-05, 3.679200000000077e-05, 3.727799999999823e-05, 3.708399999999973e-05, 3.6889000000001754e-05, 3.7111000000002864e-05, 3.6916999999997424e-05, 3.707000000000016e-05, 3.676399999999816e-05, 3.680600000000034e-05, 3.673599999999902e-05, 3.698599999999927e-05, 3.672299999999892e-05, 3.70979999999993e-05, 3.675000000000206e-05, 3.723600000000299e-05, 3.6944999999996564e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.194" endtime="20201117 14:47:07.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.189" endtime="20201117 14:47:07.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.198" endtime="20201117 14:47:07.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.201" endtime="20201117 14:47:07.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.200" endtime="20201117 14:47:07.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.196" endtime="20201117 14:47:07.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.831" endtime="20201117 14:47:07.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.829" endtime="20201117 14:47:07.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.829" endtime="20201117 14:47:07.223"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.225" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.234" endtime="20201117 14:47:07.250"></status>
</kw>
<msg timestamp="20201117 14:47:07.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.232" endtime="20201117 14:47:07.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.251" endtime="20201117 14:47:07.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.254" endtime="20201117 14:47:07.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.229" endtime="20201117 14:47:07.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.227" endtime="20201117 14:47:07.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.263" endtime="20201117 14:47:07.548"></status>
</kw>
<msg timestamp="20201117 14:47:07.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024704403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024743486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.261" endtime="20201117 14:47:07.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024704403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024743486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.552" endtime="20201117 14:47:07.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.561" endtime="20201117 14:47:07.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.259" endtime="20201117 14:47:07.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.257" endtime="20201117 14:47:07.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.567" level="INFO">${RESULT} = [{'time': 0.024743486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9082999999998785e-05, 'source_diff': 3.9082999999998785e-05}, {'time': 0.024787319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:07.564" endtime="20201117 14:47:07.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.581" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:07.568" endtime="20201117 14:47:07.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.585" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.584" endtime="20201117 14:47:07.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.588" level="INFO">VALUE: [3.9082999999998785e-05, 3.8026999999999506e-05, 3.7833000000001005e-05, 3.8138999999999534e-05, 3.825000000000009e-05, 3.7819000000001435e-05, 3.823600000000052e-05, 3.7861000000000145e-05, 3.793000000000199e-05, 3.819399999999834e-05, 3.8097000000000825e-05, 3.773600000000002e-05, 3.7888999999999284e-05, 3.805600000000159e-05, 3.779200000000177e-05, 3.822199999999748e-05, 3.826399999999966e-05, 3.7819000000001435e-05, 3.798600000000027e-05, 3.805600000000159e-05, 3.825000000000009e-05, 3.7916999999998424e-05, 3.7681000000001214e-05, 3.802799999999898e-05, 3.823600000000052e-05, 3.8167000000002144e-05, 3.77919999999983e-05, 3.8124999999999964e-05, 3.782000000000091e-05, 3.808399999999726e-05, 3.8181000000001714e-05, 3.80980000000003e-05, 3.808400000000073e-05, 3.7861000000000145e-05, 3.822300000000042e-05, 3.7681000000001214e-05, 3.795800000000113e-05, 3.819399999999834e-05, 3.804199999999855e-05, 3.820799999999791e-05, 3.815199999999963e-05, 3.8305000000002365e-05, 3.770799999999741e-05, 3.826399999999966e-05, 3.8139000000003004e-05, 3.7861000000000145e-05, 3.826399999999966e-05, 3.7554999999998145e-05, 3.7804999999998395e-05, 3.8055000000002115e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.586" endtime="20201117 14:47:07.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.582" endtime="20201117 14:47:07.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.591" endtime="20201117 14:47:07.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.595" endtime="20201117 14:47:07.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.593" endtime="20201117 14:47:07.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.590" endtime="20201117 14:47:07.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.226" endtime="20201117 14:47:07.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.224" endtime="20201117 14:47:07.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.223" endtime="20201117 14:47:07.616"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.619" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.627" endtime="20201117 14:47:07.644"></status>
</kw>
<msg timestamp="20201117 14:47:07.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.625" endtime="20201117 14:47:07.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.646" endtime="20201117 14:47:07.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.648" endtime="20201117 14:47:07.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.623" endtime="20201117 14:47:07.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.621" endtime="20201117 14:47:07.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.657" endtime="20201117 14:47:07.942"></status>
</kw>
<msg timestamp="20201117 14:47:07.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025364792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025404806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.656" endtime="20201117 14:47:07.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025364792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025404806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.947" endtime="20201117 14:47:07.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.955" endtime="20201117 14:47:07.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.653" endtime="20201117 14:47:07.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.651" endtime="20201117 14:47:07.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.962" level="INFO">${RESULT} = [{'time': 0.025404806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.001399999999794e-05, 'source_diff': 4.001399999999794e-05}, {'time': 0.025449639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:07.958" endtime="20201117 14:47:07.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.976" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:07.963" endtime="20201117 14:47:07.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.981" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.980" endtime="20201117 14:47:07.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.984" level="INFO">VALUE: [4.001399999999794e-05, 3.930599999999937e-05, 3.877799999999973e-05, 3.925000000000109e-05, 3.920799999999891e-05, 3.901400000000041e-05, 3.8861000000001145e-05, 3.8694999999998314e-05, 3.877799999999973e-05, 3.907000000000216e-05, 3.922199999999848e-05, 3.926400000000066e-05, 3.907000000000216e-05, 3.87919999999993e-05, 3.9083000000002255e-05, 3.8944999999998564e-05, 3.9054999999999646e-05, 3.89720000000017e-05, 3.8763000000000686e-05, 3.915200000000063e-05, 3.9040999999996606e-05, 3.9013000000000936e-05, 3.922199999999848e-05, 3.9139000000000534e-05, 3.919399999999934e-05, 3.920799999999891e-05, 3.869400000000231e-05, 3.904199999999955e-05, 3.9166999999999674e-05, 3.89720000000017e-05, 3.9068999999999215e-05, 3.874999999999712e-05, 3.904199999999955e-05, 3.922199999999848e-05, 3.92919999999998e-05, 3.8847000000001575e-05, 3.8889000000000284e-05, 3.926399999999719e-05, 3.920800000000238e-05, 3.89859999999978e-05, 3.8874999999997245e-05, 3.870800000000188e-05, 3.9139000000000534e-05, 3.9166999999999674e-05, 3.8875000000000715e-05, 3.881999999999844e-05, 3.923599999999805e-05, 3.9111000000001395e-05, 3.904199999999955e-05, 3.9223000000001423e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.982" endtime="20201117 14:47:07.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.977" endtime="20201117 14:47:07.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.987" endtime="20201117 14:47:07.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.990" endtime="20201117 14:47:08.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.989" endtime="20201117 14:47:08.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.985" endtime="20201117 14:47:08.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.619" endtime="20201117 14:47:08.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.617" endtime="20201117 14:47:08.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.617" endtime="20201117 14:47:08.011"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.014" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.022" endtime="20201117 14:47:08.037"></status>
</kw>
<msg timestamp="20201117 14:47:08.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.020" endtime="20201117 14:47:08.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.039" endtime="20201117 14:47:08.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.041" endtime="20201117 14:47:08.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.018" endtime="20201117 14:47:08.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.016" endtime="20201117 14:47:08.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.050" endtime="20201117 14:47:08.337"></status>
</kw>
<msg timestamp="20201117 14:47:08.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024255056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024296083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.049" endtime="20201117 14:47:08.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024255056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024296083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.341" endtime="20201117 14:47:08.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.349" endtime="20201117 14:47:08.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.046" endtime="20201117 14:47:08.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.045" endtime="20201117 14:47:08.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:08.356" level="INFO">${RESULT} = [{'time': 0.024296083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1026999999999036e-05, 'source_diff': 4.1026999999999036e-05}, {'time': 0.024341931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:08.353" endtime="20201117 14:47:08.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:08.370" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:08.358" endtime="20201117 14:47:08.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.375" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:47:08.374" endtime="20201117 14:47:08.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.377" level="INFO">VALUE: [4.1026999999999036e-05, 4.0375000000002215e-05, 4.02920000000008e-05, 4.0139000000001535e-05, 3.9875000000001715e-05, 3.97920000000003e-05, 3.9875000000001715e-05, 4.006999999999969e-05, 4.0194999999999814e-05, 4.0138999999998065e-05, 3.975000000000159e-05, 3.9846999999999105e-05, 3.999999999999837e-05, 3.9832999999999535e-05, 4.015199999999816e-05, 4.016599999999773e-05, 3.973600000000202e-05, 4.002800000000098e-05, 3.9875000000001715e-05, 4.001400000000141e-05, 3.9805000000000396e-05, 3.9889000000001285e-05, 4.0153000000001104e-05, 4.0082999999999785e-05, 3.9917000000000424e-05, 4.0124999999998495e-05, 3.9903000000000854e-05, 4.027800000000123e-05, 3.977800000000073e-05, 4.0194999999999814e-05, 4.0181000000000244e-05, 4.023599999999905e-05, 4.025000000000209e-05, 4.004200000000055e-05, 4.0181000000000244e-05, 3.9874999999998245e-05, 4.0125000000001965e-05, 3.9709000000002354e-05, 3.983400000000248e-05, 3.983400000000248e-05, 4.0208999999999384e-05, 4.008399999999926e-05, 3.9958999999999134e-05, 3.973599999999855e-05, 4.019400000000034e-05, 4.006999999999969e-05, 3.9930999999999994e-05, 4.009799999999883e-05, 4.0124999999998495e-05, 3.9903000000000854e-05]</msg>
<status status="PASS" starttime="20201117 14:47:08.376" endtime="20201117 14:47:08.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.371" endtime="20201117 14:47:08.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.380" endtime="20201117 14:47:08.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:08.384" endtime="20201117 14:47:08.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.382" endtime="20201117 14:47:08.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.379" endtime="20201117 14:47:08.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.014" endtime="20201117 14:47:08.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.013" endtime="20201117 14:47:08.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.012" endtime="20201117 14:47:08.405"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.407" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.415" endtime="20201117 14:47:08.432"></status>
</kw>
<msg timestamp="20201117 14:47:08.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.414" endtime="20201117 14:47:08.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.433" endtime="20201117 14:47:08.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.436" endtime="20201117 14:47:08.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.411" endtime="20201117 14:47:08.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.409" endtime="20201117 14:47:08.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.445" endtime="20201117 14:47:08.731"></status>
</kw>
<msg timestamp="20201117 14:47:08.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023941722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023983903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.444" endtime="20201117 14:47:08.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023941722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023983903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.735" endtime="20201117 14:47:08.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.744" endtime="20201117 14:47:08.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.441" endtime="20201117 14:47:08.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.439" endtime="20201117 14:47:08.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:08.751" level="INFO">${RESULT} = [{'time': 0.023983903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2181000000002244e-05, 'source_diff': 4.2181000000002244e-05}, {'time': 0.024030806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:08.747" endtime="20201117 14:47:08.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:08.764" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:08.752" endtime="20201117 14:47:08.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.769" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:47:08.768" endtime="20201117 14:47:08.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.771" level="INFO">VALUE: [4.2181000000002244e-05, 4.1458999999997165e-05, 4.122200000000048e-05, 4.070799999999694e-05, 4.12920000000018e-05, 4.077799999999826e-05, 4.072199999999998e-05, 4.082000000000044e-05, 4.08059999999974e-05, 4.104200000000155e-05, 4.123600000000005e-05, 4.080600000000087e-05, 4.073599999999955e-05, 4.124999999999962e-05, 4.086199999999915e-05, 4.107000000000069e-05, 4.0847000000000105e-05, 4.073599999999955e-05, 4.083400000000001e-05, 4.080600000000087e-05, 4.075000000000259e-05, 4.1276999999999286e-05, 4.092999999999805e-05, 4.116599999999873e-05, 4.1069000000001216e-05, 4.1012999999999467e-05, 4.116599999999873e-05, 4.081999999999697e-05, 4.072199999999998e-05, 4.122200000000048e-05, 4.1153000000002105e-05, 4.093000000000152e-05, 4.122200000000048e-05, 4.1110999999999925e-05, 4.073599999999955e-05, 4.104199999999808e-05, 4.070800000000041e-05, 4.126400000000266e-05, 4.127799999999876e-05, 4.1083000000000786e-05, 4.124999999999962e-05, 4.07920000000013e-05, 4.080600000000087e-05, 4.0860999999999675e-05, 4.124999999999962e-05, 4.0860999999999675e-05, 4.0888999999998815e-05, 4.072199999999998e-05, 4.1167000000001674e-05, 4.0860999999999675e-05]</msg>
<status status="PASS" starttime="20201117 14:47:08.770" endtime="20201117 14:47:08.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.765" endtime="20201117 14:47:08.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.774" endtime="20201117 14:47:08.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:08.778" endtime="20201117 14:47:08.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.776" endtime="20201117 14:47:08.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.773" endtime="20201117 14:47:08.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.408" endtime="20201117 14:47:08.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.406" endtime="20201117 14:47:08.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.405" endtime="20201117 14:47:08.799"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.801" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.810" endtime="20201117 14:47:08.826"></status>
</kw>
<msg timestamp="20201117 14:47:08.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.808" endtime="20201117 14:47:08.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.828" endtime="20201117 14:47:08.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.830" endtime="20201117 14:47:08.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.805" endtime="20201117 14:47:08.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.803" endtime="20201117 14:47:08.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.840" endtime="20201117 14:47:09.126"></status>
</kw>
<msg timestamp="20201117 14:47:09.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024173333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024215722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.838" endtime="20201117 14:47:09.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024173333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024215722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.130" endtime="20201117 14:47:09.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.138" endtime="20201117 14:47:09.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.835" endtime="20201117 14:47:09.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.833" endtime="20201117 14:47:09.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.145" level="INFO">${RESULT} = [{'time': 0.024215722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2388999999996846e-05, 'source_diff': 4.2388999999996846e-05}, {'time': 0.024263597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:09.142" endtime="20201117 14:47:09.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.159" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:09.146" endtime="20201117 14:47:09.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.163" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.162" endtime="20201117 14:47:09.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.166" level="INFO">VALUE: [4.2388999999996846e-05, 4.2083000000001786e-05, 4.1709000000000884e-05, 4.202799999999951e-05, 4.1931000000001994e-05, 4.1902999999999385e-05, 4.176399999999969e-05, 4.1861000000000675e-05, 4.2069000000002216e-05, 4.21799999999993e-05, 4.175000000000012e-05, 4.1818999999998496e-05, 4.2110999999997456e-05, 4.191599999999948e-05, 4.1903000000002855e-05, 4.225000000000062e-05, 4.198599999999733e-05, 4.175000000000012e-05, 4.1916999999998955e-05, 4.220800000000191e-05, 4.2082999999998316e-05, 4.176399999999969e-05, 4.173599999999708e-05, 4.194400000000209e-05, 4.1847000000001106e-05, 4.177800000000273e-05, 4.1903000000002855e-05, 4.1888999999999815e-05, 4.220799999999844e-05, 4.225000000000062e-05, 4.2110999999997456e-05, 4.2111000000000925e-05, 4.2139000000000065e-05, 4.1959000000001134e-05, 4.18059999999984e-05, 4.201300000000047e-05, 4.204199999999908e-05, 4.2209000000001384e-05, 4.2139000000000065e-05, 4.19999999999969e-05, 4.222200000000148e-05, 4.2054999999999176e-05, 4.226400000000019e-05, 4.225000000000062e-05, 4.215200000000016e-05, 4.2068999999998746e-05, 4.195800000000166e-05, 4.222199999999801e-05, 4.2290999999999856e-05, 4.2290999999999856e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.164" endtime="20201117 14:47:09.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.160" endtime="20201117 14:47:09.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.169" endtime="20201117 14:47:09.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.172" endtime="20201117 14:47:09.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.171" endtime="20201117 14:47:09.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.167" endtime="20201117 14:47:09.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.802" endtime="20201117 14:47:09.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.800" endtime="20201117 14:47:09.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.799" endtime="20201117 14:47:09.193"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.196" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.204" endtime="20201117 14:47:09.221"></status>
</kw>
<msg timestamp="20201117 14:47:09.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.202" endtime="20201117 14:47:09.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.223" endtime="20201117 14:47:09.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.226" endtime="20201117 14:47:09.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.200" endtime="20201117 14:47:09.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.198" endtime="20201117 14:47:09.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.235" endtime="20201117 14:47:09.520"></status>
</kw>
<msg timestamp="20201117 14:47:09.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024853819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024897542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.233" endtime="20201117 14:47:09.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024853819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024897542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.524" endtime="20201117 14:47:09.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.533" endtime="20201117 14:47:09.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.231" endtime="20201117 14:47:09.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.229" endtime="20201117 14:47:09.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.539" level="INFO">${RESULT} = [{'time': 0.024897542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3723000000002454e-05, 'source_diff': 4.3723000000002454e-05}, {'time': 0.024946417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:09.536" endtime="20201117 14:47:09.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.554" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:09.540" endtime="20201117 14:47:09.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.559" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.558" endtime="20201117 14:47:09.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.561" level="INFO">VALUE: [4.3723000000002454e-05, 4.3110999999998456e-05, 4.304200000000008e-05, 4.3096999999998886e-05, 4.323599999999858e-05, 4.29860000000018e-05, 4.277800000000026e-05, 4.277800000000026e-05, 4.329200000000033e-05, 4.300000000000137e-05, 4.2930999999999525e-05, 4.2695000000002314e-05, 4.319399999999987e-05, 4.326399999999772e-05, 4.3194999999999345e-05, 4.326400000000119e-05, 4.329200000000033e-05, 4.2889000000000815e-05, 4.3222999999998485e-05, 4.323599999999858e-05, 4.31120000000014e-05, 4.2959000000002134e-05, 4.2875000000001245e-05, 4.3124999999998026e-05, 4.2930999999999525e-05, 4.2846999999998636e-05, 4.2791000000000357e-05, 4.276300000000122e-05, 4.2875000000001245e-05, 4.319399999999987e-05, 4.31800000000003e-05, 4.295800000000266e-05, 4.302700000000104e-05, 4.301400000000094e-05, 4.323599999999858e-05, 4.304200000000008e-05, 4.2805000000003396e-05, 4.3139000000001065e-05, 4.3068999999999746e-05, 4.275000000000112e-05, 4.3096999999998886e-05, 4.294400000000309e-05, 4.302800000000051e-05, 4.2818999999999496e-05, 4.3110999999998456e-05, 4.3180999999999775e-05, 4.295800000000266e-05, 4.320799999999944e-05, 4.2846999999998636e-05, 4.329200000000033e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.560" endtime="20201117 14:47:09.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.555" endtime="20201117 14:47:09.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.564" endtime="20201117 14:47:09.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.568" endtime="20201117 14:47:09.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.566" endtime="20201117 14:47:09.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.563" endtime="20201117 14:47:09.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.196" endtime="20201117 14:47:09.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.195" endtime="20201117 14:47:09.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.194" endtime="20201117 14:47:09.589"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.591" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.604" endtime="20201117 14:47:09.621"></status>
</kw>
<msg timestamp="20201117 14:47:09.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.602" endtime="20201117 14:47:09.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.622" endtime="20201117 14:47:09.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.625" endtime="20201117 14:47:09.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.596" endtime="20201117 14:47:09.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.593" endtime="20201117 14:47:09.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.635" endtime="20201117 14:47:09.921"></status>
</kw>
<msg timestamp="20201117 14:47:09.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028965319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029010403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.633" endtime="20201117 14:47:09.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028965319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029010403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.925" endtime="20201117 14:47:09.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.933" endtime="20201117 14:47:09.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.631" endtime="20201117 14:47:09.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.629" endtime="20201117 14:47:09.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.940" level="INFO">${RESULT} = [{'time': 0.029010403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.508400000000079e-05, 'source_diff': 4.508400000000079e-05}, {'time': 0.029060236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:09.936" endtime="20201117 14:47:09.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.953" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:09.941" endtime="20201117 14:47:09.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.958" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.957" endtime="20201117 14:47:09.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.960" level="INFO">VALUE: [4.508400000000079e-05, 4.4374999999999276e-05, 4.376399999999822e-05, 4.4124999999999026e-05, 4.405600000000065e-05, 4.379200000000083e-05, 4.429200000000133e-05, 4.3986999999998805e-05, 4.380599999999693e-05, 4.420800000000044e-05, 4.376399999999822e-05, 4.383399999999954e-05, 4.404199999999761e-05, 4.398599999999933e-05, 4.404200000000108e-05, 4.4167000000001205e-05, 4.400000000000237e-05, 4.3945000000000095e-05, 4.4223000000002954e-05, 4.3972999999999235e-05, 4.3945000000000095e-05, 4.413799999999912e-05, 4.424999999999915e-05, 4.4110999999999456e-05, 4.426299999999925e-05, 4.4125000000002496e-05, 4.379100000000136e-05, 4.370799999999994e-05, 4.41939999999974e-05, 4.402699999999857e-05, 4.400000000000237e-05, 4.3888999999998346e-05, 4.4167000000001205e-05, 4.395800000000019e-05, 4.4083000000000316e-05, 4.3958999999999665e-05, 4.3874999999998776e-05, 4.4096999999999886e-05, 4.377799999999779e-05, 4.4138999999998596e-05, 4.423599999999958e-05, 4.4166999999997736e-05, 4.426399999999872e-05, 4.398599999999933e-05, 4.4181000000000775e-05, 4.376400000000169e-05, 4.411099999999599e-05, 4.3860999999999206e-05, 4.38060000000004e-05, 4.3846999999999636e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.959" endtime="20201117 14:47:09.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.954" endtime="20201117 14:47:09.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.963" endtime="20201117 14:47:09.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.967" endtime="20201117 14:47:09.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.965" endtime="20201117 14:47:09.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.962" endtime="20201117 14:47:09.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.592" endtime="20201117 14:47:09.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.590" endtime="20201117 14:47:09.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.589" endtime="20201117 14:47:09.988"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.991" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.999" endtime="20201117 14:47:10.014"></status>
</kw>
<msg timestamp="20201117 14:47:10.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.997" endtime="20201117 14:47:10.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.016" endtime="20201117 14:47:10.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.018" endtime="20201117 14:47:10.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.995" endtime="20201117 14:47:10.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.993" endtime="20201117 14:47:10.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.027" endtime="20201117 14:47:10.313"></status>
</kw>
<msg timestamp="20201117 14:47:10.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024595917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024641722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.026" endtime="20201117 14:47:10.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024595917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024641722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.317" endtime="20201117 14:47:10.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.325" endtime="20201117 14:47:10.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.023" endtime="20201117 14:47:10.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.022" endtime="20201117 14:47:10.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.332" level="INFO">${RESULT} = [{'time': 0.024641722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.580500000000293e-05, 'source_diff': 4.580500000000293e-05}, {'time': 0.024691597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:10.328" endtime="20201117 14:47:10.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.345" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:10.333" endtime="20201117 14:47:10.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.350" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.349" endtime="20201117 14:47:10.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.352" level="INFO">VALUE: [4.580500000000293e-05, 4.4610999999999956e-05, 4.4569000000001247e-05, 4.51939999999984e-05, 4.4847000000000636e-05, 4.525000000000015e-05, 4.491599999999901e-05, 4.46800000000018e-05, 4.5125000000000026e-05, 4.497200000000076e-05, 4.5083000000001316e-05, 4.494399999999815e-05, 4.476399999999922e-05, 4.5138999999999596e-05, 4.4833000000001066e-05, 4.502800000000251e-05, 4.495799999999772e-05, 4.4931000000001525e-05, 4.49999999999999e-05, 4.4874999999999776e-05, 4.4874999999999776e-05, 4.5111000000000456e-05, 4.497200000000076e-05, 4.497200000000076e-05, 4.484800000000011e-05, 4.4874999999999776e-05, 4.4945000000001095e-05, 4.4930999999998056e-05, 4.474999999999965e-05, 4.5208999999997446e-05, 4.477799999999879e-05, 4.48060000000014e-05, 4.498600000000033e-05, 4.4959000000000665e-05, 4.492999999999858e-05, 4.519400000000187e-05, 4.4833000000001066e-05, 4.506899999999828e-05, 4.49999999999999e-05, 4.491600000000248e-05, 4.504099999999914e-05, 4.5125000000000026e-05, 4.480499999999846e-05, 4.502799999999904e-05, 4.516599999999926e-05, 4.492999999999858e-05, 4.525000000000015e-05, 4.5138999999999596e-05, 4.4874999999999776e-05, 4.479200000000183e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.351" endtime="20201117 14:47:10.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.346" endtime="20201117 14:47:10.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.356" endtime="20201117 14:47:10.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.359" endtime="20201117 14:47:10.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.358" endtime="20201117 14:47:10.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.354" endtime="20201117 14:47:10.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.991" endtime="20201117 14:47:10.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.989" endtime="20201117 14:47:10.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.989" endtime="20201117 14:47:10.380"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.383" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.391" endtime="20201117 14:47:10.408"></status>
</kw>
<msg timestamp="20201117 14:47:10.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.389" endtime="20201117 14:47:10.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.410" endtime="20201117 14:47:10.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.412" endtime="20201117 14:47:10.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.387" endtime="20201117 14:47:10.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.385" endtime="20201117 14:47:10.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.421" endtime="20201117 14:47:10.708"></status>
</kw>
<msg timestamp="20201117 14:47:10.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024047931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024094292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.420" endtime="20201117 14:47:10.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024047931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024094292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.712" endtime="20201117 14:47:10.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.721" endtime="20201117 14:47:10.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.417" endtime="20201117 14:47:10.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.415" endtime="20201117 14:47:10.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.727" level="INFO">${RESULT} = [{'time': 0.024094292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.636099999999824e-05, 'source_diff': 4.636099999999824e-05}, {'time': 0.024146139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:10.724" endtime="20201117 14:47:10.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.741" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:10.728" endtime="20201117 14:47:10.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.745" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.744" endtime="20201117 14:47:10.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.748" level="INFO">VALUE: [4.636099999999824e-05, 4.6180999999999306e-05, 4.579199999999936e-05, 4.626399999999725e-05, 4.6153000000000166e-05, 4.609799999999789e-05, 4.608399999999832e-05, 4.622200000000201e-05, 4.58199999999985e-05, 4.5987000000000805e-05, 4.6111000000001456e-05, 4.577799999999979e-05, 4.586099999999774e-05, 4.6125000000001026e-05, 4.580499999999946e-05, 4.577799999999979e-05, 4.595800000000219e-05, 4.629100000000039e-05, 4.612499999999756e-05, 4.598600000000133e-05, 4.5875000000000776e-05, 4.574999999999718e-05, 4.579099999999989e-05, 4.620799999999897e-05, 4.577799999999979e-05, 4.5889000000000346e-05, 4.605499999999971e-05, 4.626400000000072e-05, 4.608399999999832e-05, 4.605499999999971e-05, 4.5945000000002095e-05, 4.5833000000002067e-05, 4.580599999999893e-05, 4.579199999999936e-05, 4.598600000000133e-05, 4.579199999999936e-05, 4.58060000000024e-05, 4.582000000000197e-05, 4.580599999999893e-05, 4.573599999999761e-05, 4.573600000000108e-05, 4.5889000000000346e-05, 4.597200000000176e-05, 4.601400000000047e-05, 4.609699999999842e-05, 4.5972999999997766e-05, 4.601400000000047e-05, 4.625000000000115e-05, 4.580599999999893e-05, 4.597200000000176e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.746" endtime="20201117 14:47:10.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.742" endtime="20201117 14:47:10.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.752" endtime="20201117 14:47:10.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.755" endtime="20201117 14:47:10.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.753" endtime="20201117 14:47:10.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.750" endtime="20201117 14:47:10.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.383" endtime="20201117 14:47:10.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.382" endtime="20201117 14:47:10.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.381" endtime="20201117 14:47:10.776"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.778" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.787" endtime="20201117 14:47:10.803"></status>
</kw>
<msg timestamp="20201117 14:47:10.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.785" endtime="20201117 14:47:10.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.805" endtime="20201117 14:47:10.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.807" endtime="20201117 14:47:10.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.783" endtime="20201117 14:47:10.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.780" endtime="20201117 14:47:10.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.816" endtime="20201117 14:47:11.103"></status>
</kw>
<msg timestamp="20201117 14:47:11.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024947069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024994514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.815" endtime="20201117 14:47:11.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024947069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024994514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.107" endtime="20201117 14:47:11.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.115" endtime="20201117 14:47:11.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.812" endtime="20201117 14:47:11.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.811" endtime="20201117 14:47:11.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.122" level="INFO">${RESULT} = [{'time': 0.024994514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7445000000000126e-05, 'source_diff': 4.7445000000000126e-05}, {'time': 0.025046306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:11.118" endtime="20201117 14:47:11.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.137" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:11.123" endtime="20201117 14:47:11.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.141" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.140" endtime="20201117 14:47:11.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.144" level="INFO">VALUE: [4.7445000000000126e-05, 4.656999999999925e-05, 4.6987000000001805e-05, 4.6875000000001776e-05, 4.691600000000101e-05, 4.70000000000019e-05, 4.6861000000002206e-05, 4.66939999999999e-05, 4.70000000000019e-05, 4.672199999999904e-05, 4.727800000000129e-05, 4.698599999999886e-05, 4.686099999999874e-05, 4.673599999999861e-05, 4.713899999999813e-05, 4.693000000000058e-05, 4.679200000000036e-05, 4.720799999999997e-05, 4.672200000000251e-05, 4.68329999999996e-05, 4.711099999999899e-05, 4.707000000000322e-05, 4.7194999999999876e-05, 4.729100000000139e-05, 4.6875000000001776e-05, 4.727800000000129e-05, 4.727800000000129e-05, 4.701400000000147e-05, 4.6958999999999196e-05, 4.706900000000028e-05, 4.7208999999999446e-05, 4.7181000000000306e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.679100000000089e-05, 4.674999999999818e-05, 4.699999999999843e-05, 4.727699999999835e-05, 4.661099999999849e-05, 4.691599999999754e-05, 4.723599999999911e-05, 4.727800000000129e-05, 4.679099999999742e-05, 4.672199999999904e-05, 4.727800000000129e-05, 4.688899999999788e-05, 4.695799999999972e-05, 4.6847000000002637e-05, 4.720799999999997e-05, 4.680599999999993e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.142" endtime="20201117 14:47:11.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.138" endtime="20201117 14:47:11.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.147" endtime="20201117 14:47:11.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.150" endtime="20201117 14:47:11.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.149" endtime="20201117 14:47:11.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.145" endtime="20201117 14:47:11.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.779" endtime="20201117 14:47:11.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.777" endtime="20201117 14:47:11.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.776" endtime="20201117 14:47:11.171"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.174" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.182" endtime="20201117 14:47:11.199"></status>
</kw>
<msg timestamp="20201117 14:47:11.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.181" endtime="20201117 14:47:11.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.200" endtime="20201117 14:47:11.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.203" endtime="20201117 14:47:11.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.178" endtime="20201117 14:47:11.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.176" endtime="20201117 14:47:11.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.212" endtime="20201117 14:47:11.497"></status>
</kw>
<msg timestamp="20201117 14:47:11.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023996458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024044917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.210" endtime="20201117 14:47:11.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023996458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024044917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.501" endtime="20201117 14:47:11.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.510" endtime="20201117 14:47:11.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.208" endtime="20201117 14:47:11.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.206" endtime="20201117 14:47:11.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.517" level="INFO">${RESULT} = [{'time': 0.024044917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8459000000000696e-05, 'source_diff': 4.8459000000000696e-05}, {'time': 0.02409875, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:11.513" endtime="20201117 14:47:11.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.530" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:11.518" endtime="20201117 14:47:11.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.534" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.533" endtime="20201117 14:47:11.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.537" level="INFO">VALUE: [4.8459000000000696e-05, 4.805599999999771e-05, 4.804199999999814e-05, 4.777800000000179e-05, 4.801400000000247e-05, 4.806999999999728e-05, 4.827799999999882e-05, 4.823600000000011e-05, 4.776400000000222e-05, 4.776400000000222e-05, 4.826399999999925e-05, 4.7736999999999086e-05, 4.8209000000000446e-05, 4.809799999999989e-05, 4.791699999999802e-05, 4.781899999999756e-05, 4.777800000000179e-05, 4.808299999999738e-05, 4.787499999999931e-05, 4.774999999999918e-05, 4.809700000000042e-05, 4.824999999999968e-05, 4.804099999999867e-05, 4.822200000000054e-05, 4.823600000000011e-05, 4.808299999999738e-05, 4.78330000000006e-05, 4.768000000000133e-05, 4.777800000000179e-05, 4.790299999999845e-05, 4.773599999999961e-05, 4.798599999999986e-05, 4.824999999999968e-05, 4.791699999999802e-05, 4.790299999999845e-05, 4.7917000000001486e-05, 4.812499999999956e-05, 4.773600000000308e-05, 4.797200000000029e-05, 4.7722999999999516e-05, 4.7945000000000626e-05, 4.8013999999999e-05, 4.823600000000011e-05, 4.826299999999978e-05, 4.7917000000001486e-05, 4.8209000000000446e-05, 4.766699999999777e-05, 4.804099999999867e-05, 4.78330000000006e-05, 4.779100000000189e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.536" endtime="20201117 14:47:11.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.531" endtime="20201117 14:47:11.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.540" endtime="20201117 14:47:11.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.544" endtime="20201117 14:47:11.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.542" endtime="20201117 14:47:11.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.538" endtime="20201117 14:47:11.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.174" endtime="20201117 14:47:11.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.173" endtime="20201117 14:47:11.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.172" endtime="20201117 14:47:11.565"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.567" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.575" endtime="20201117 14:47:11.592"></status>
</kw>
<msg timestamp="20201117 14:47:11.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.574" endtime="20201117 14:47:11.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.593" endtime="20201117 14:47:11.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.596" endtime="20201117 14:47:11.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.571" endtime="20201117 14:47:11.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.569" endtime="20201117 14:47:11.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.605" endtime="20201117 14:47:11.891"></status>
</kw>
<msg timestamp="20201117 14:47:11.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023956625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024006333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.603" endtime="20201117 14:47:11.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023956625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024006333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.895" endtime="20201117 14:47:11.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.904" endtime="20201117 14:47:11.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.601" endtime="20201117 14:47:11.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.599" endtime="20201117 14:47:11.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.911" level="INFO">${RESULT} = [{'time': 0.024006333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.970800000000247e-05, 'source_diff': 4.970800000000247e-05}, {'time': 0.024061153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:11.907" endtime="20201117 14:47:11.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.924" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:11.912" endtime="20201117 14:47:11.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.929" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.928" endtime="20201117 14:47:11.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.931" level="INFO">VALUE: [4.970800000000247e-05, 4.919499999999841e-05, 4.883400000000107e-05, 4.923599999999764e-05, 4.8959000000001196e-05, 4.881999999999803e-05, 4.912500000000056e-05, 4.8707999999998e-05, 4.88200000000015e-05, 4.892999999999911e-05, 4.900000000000043e-05, 4.880499999999899e-05, 4.906900000000228e-05, 4.925000000000068e-05, 4.906900000000228e-05, 4.873600000000061e-05, 4.888899999999988e-05, 4.888899999999988e-05, 4.923599999999764e-05, 4.911100000000099e-05, 4.904199999999914e-05, 4.884700000000117e-05, 4.898599999999739e-05, 4.91529999999997e-05, 4.890299999999945e-05, 4.887500000000031e-05, 4.876399999999975e-05, 4.905600000000218e-05, 4.913900000000013e-05, 4.91529999999997e-05, 4.904199999999914e-05, 4.890299999999945e-05, 4.891699999999902e-05, 4.905599999999871e-05, 4.912500000000056e-05, 4.919499999999841e-05, 4.8959000000001196e-05, 4.90270000000001e-05, 4.875000000000018e-05, 4.913800000000065e-05, 4.881900000000203e-05, 4.92079999999985e-05, 4.874999999999671e-05, 4.909699999999795e-05, 4.905499999999924e-05, 4.917999999999936e-05, 4.881899999999856e-05, 4.881899999999856e-05, 4.879199999999889e-05, 4.91529999999997e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.930" endtime="20201117 14:47:11.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.925" endtime="20201117 14:47:11.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.934" endtime="20201117 14:47:11.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.938" endtime="20201117 14:47:11.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.936" endtime="20201117 14:47:11.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.933" endtime="20201117 14:47:11.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.568" endtime="20201117 14:47:11.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.566" endtime="20201117 14:47:11.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.565" endtime="20201117 14:47:11.959"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.961" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.970" endtime="20201117 14:47:11.985"></status>
</kw>
<msg timestamp="20201117 14:47:11.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.968" endtime="20201117 14:47:11.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.987" endtime="20201117 14:47:11.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.990" endtime="20201117 14:47:11.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.965" endtime="20201117 14:47:11.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.963" endtime="20201117 14:47:11.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.999" endtime="20201117 14:47:12.285"></status>
</kw>
<msg timestamp="20201117 14:47:12.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024005542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024056042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.997" endtime="20201117 14:47:12.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024005542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024056042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.289" endtime="20201117 14:47:12.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.297" endtime="20201117 14:47:12.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.995" endtime="20201117 14:47:12.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.993" endtime="20201117 14:47:12.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.304" level="INFO">${RESULT} = [{'time': 0.024056042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.049999999999846e-05, 'source_diff': 5.049999999999846e-05}, {'time': 0.024110875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:12.301" endtime="20201117 14:47:12.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.318" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:12.305" endtime="20201117 14:47:12.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.322" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.321" endtime="20201117 14:47:12.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.325" level="INFO">VALUE: [5.049999999999846e-05, 4.950000000000093e-05, 4.977800000000032e-05, 5.005599999999971e-05, 5.022200000000254e-05, 5.027800000000082e-05, 5.011099999999852e-05, 4.977800000000032e-05, 4.98339999999986e-05, 4.969499999999891e-05, 5.004200000000014e-05, 4.976400000000075e-05, 5.024999999999821e-05, 4.988900000000088e-05, 4.9972999999998297e-05, 5.01669999999968e-05, 5.019399999999993e-05, 5.015200000000122e-05, 5.019399999999993e-05, 4.981899999999956e-05, 4.986099999999827e-05, 4.976399999999728e-05, 4.994399999999968e-05, 5.01530000000007e-05, 5.011099999999852e-05, 4.988900000000088e-05, 4.988899999999741e-05, 5.0014000000001e-05, 5.029200000000039e-05, 4.972200000000204e-05, 4.997199999999882e-05, 5.023599999999864e-05, 4.986100000000174e-05, 5.011099999999852e-05, 5.008399999999885e-05, 4.981999999999903e-05, 4.963900000000063e-05, 4.981999999999903e-05, 5.0014000000001e-05, 5.002800000000057e-05, 5.018099999999984e-05, 4.994399999999968e-05, 4.973599999999814e-05, 4.974999999999771e-05, 5.025000000000168e-05, 5.025000000000168e-05, 4.975000000000118e-05, 4.995799999999925e-05, 4.9887999999997934e-05, 5.012499999999809e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.323" endtime="20201117 14:47:12.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.319" endtime="20201117 14:47:12.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.328" endtime="20201117 14:47:12.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.331" endtime="20201117 14:47:12.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.330" endtime="20201117 14:47:12.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.326" endtime="20201117 14:47:12.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.962" endtime="20201117 14:47:12.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.960" endtime="20201117 14:47:12.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.959" endtime="20201117 14:47:12.353"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.355" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.364" endtime="20201117 14:47:12.381"></status>
</kw>
<msg timestamp="20201117 14:47:12.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.362" endtime="20201117 14:47:12.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.382" endtime="20201117 14:47:12.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.385" endtime="20201117 14:47:12.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.359" endtime="20201117 14:47:12.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.357" endtime="20201117 14:47:12.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.394" endtime="20201117 14:47:12.679"></status>
</kw>
<msg timestamp="20201117 14:47:12.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025532514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.392" endtime="20201117 14:47:12.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025532514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.683" endtime="20201117 14:47:12.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.691" endtime="20201117 14:47:12.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.390" endtime="20201117 14:47:12.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.388" endtime="20201117 14:47:12.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.698" level="INFO">${RESULT} = [{'time': 0.025532514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.206999999999781e-05, 'source_diff': 5.206999999999781e-05}, {'time': 0.025589347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:12.694" endtime="20201117 14:47:12.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.712" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:12.699" endtime="20201117 14:47:12.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.717" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.716" endtime="20201117 14:47:12.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.719" level="INFO">VALUE: [5.206999999999781e-05, 5.123599999999964e-05, 5.080600000000046e-05, 5.10279999999981e-05, 5.073599999999914e-05, 5.080600000000046e-05, 5.10279999999981e-05, 5.08469999999997e-05, 5.123599999999964e-05, 5.112500000000256e-05, 5.127800000000182e-05, 5.090299999999798e-05, 5.088900000000188e-05, 5.104199999999767e-05, 5.119500000000041e-05, 5.098599999999939e-05, 5.08339999999996e-05, 5.124999999999921e-05, 5.082000000000003e-05, 5.087500000000231e-05, 5.1237000000002586e-05, 5.109699999999995e-05, 5.109699999999995e-05, 5.108300000000038e-05, 5.073599999999914e-05, 5.113899999999866e-05, 5.094400000000068e-05, 5.105500000000124e-05, 5.074999999999871e-05, 5.086100000000274e-05, 5.10279999999981e-05, 5.126399999999878e-05, 5.083300000000013e-05, 5.112499999999909e-05, 5.119400000000093e-05, 5.090300000000145e-05, 5.113900000000213e-05, 5.076400000000175e-05, 5.094500000000016e-05, 5.102800000000157e-05, 5.122200000000007e-05, 5.08339999999996e-05, 5.073599999999914e-05, 5.079200000000089e-05, 5.107000000000028e-05, 5.123599999999964e-05, 5.080500000000099e-05, 5.076300000000228e-05, 5.1179999999997894e-05, 5.127799999999835e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.718" endtime="20201117 14:47:12.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.713" endtime="20201117 14:47:12.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.723" endtime="20201117 14:47:12.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.726" endtime="20201117 14:47:12.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.724" endtime="20201117 14:47:12.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.721" endtime="20201117 14:47:12.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.355" endtime="20201117 14:47:12.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.354" endtime="20201117 14:47:12.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.353" endtime="20201117 14:47:12.748"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.750" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.758" endtime="20201117 14:47:12.774"></status>
</kw>
<msg timestamp="20201117 14:47:12.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.757" endtime="20201117 14:47:12.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.776" endtime="20201117 14:47:12.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.779" endtime="20201117 14:47:12.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.754" endtime="20201117 14:47:12.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.752" endtime="20201117 14:47:12.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.788" endtime="20201117 14:47:13.073"></status>
</kw>
<msg timestamp="20201117 14:47:13.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024478403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024530944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.786" endtime="20201117 14:47:13.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024478403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024530944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.077" endtime="20201117 14:47:13.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.085" endtime="20201117 14:47:13.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.784" endtime="20201117 14:47:13.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.782" endtime="20201117 14:47:13.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.092" level="INFO">${RESULT} = [{'time': 0.024530944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.25409999999997e-05, 'source_diff': 5.25409999999997e-05}, {'time': 0.024588847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:13.088" endtime="20201117 14:47:13.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.105" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:13.093" endtime="20201117 14:47:13.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.110" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.109" endtime="20201117 14:47:13.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.112" level="INFO">VALUE: [5.25409999999997e-05, 5.2165999999999324e-05, 5.1915999999999074e-05, 5.207000000000128e-05, 5.18340000000006e-05, 5.223700000000012e-05, 5.218099999999837e-05, 5.172200000000057e-05, 5.193099999999812e-05, 5.2151999999999754e-05, 5.225000000000021e-05, 5.223600000000064e-05, 5.208300000000138e-05, 5.199999999999996e-05, 5.211100000000052e-05, 5.177799999999885e-05, 5.20409999999992e-05, 5.191699999999855e-05, 5.212500000000009e-05, 5.199999999999996e-05, 5.194400000000168e-05, 5.176399999999928e-05, 5.197200000000082e-05, 5.218100000000184e-05, 5.186100000000027e-05, 5.180599999999799e-05, 5.199999999999996e-05, 5.191699999999855e-05, 5.227800000000282e-05, 5.225000000000021e-05, 5.222200000000107e-05, 5.220899999999751e-05, 5.187499999999984e-05, 5.179200000000189e-05, 5.199999999999996e-05, 5.18340000000006e-05, 5.195899999999726e-05, 5.198699999999987e-05, 5.201300000000006e-05, 5.223700000000012e-05, 5.222200000000107e-05, 5.191699999999855e-05, 5.2179999999998894e-05, 5.198600000000039e-05, 5.2221999999997604e-05, 5.218000000000236e-05, 5.1721999999997104e-05, 5.1943999999998214e-05, 5.18470000000007e-05, 5.198600000000039e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.111" endtime="20201117 14:47:13.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.106" endtime="20201117 14:47:13.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.116" endtime="20201117 14:47:13.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.119" endtime="20201117 14:47:13.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.118" endtime="20201117 14:47:13.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.114" endtime="20201117 14:47:13.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.751" endtime="20201117 14:47:13.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.749" endtime="20201117 14:47:13.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.748" endtime="20201117 14:47:13.141"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.143" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.151" endtime="20201117 14:47:13.169"></status>
</kw>
<msg timestamp="20201117 14:47:13.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.150" endtime="20201117 14:47:13.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.170" endtime="20201117 14:47:13.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.173" endtime="20201117 14:47:13.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.147" endtime="20201117 14:47:13.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.145" endtime="20201117 14:47:13.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.182" endtime="20201117 14:47:13.467"></status>
</kw>
<msg timestamp="20201117 14:47:13.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024408264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024461917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.180" endtime="20201117 14:47:13.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024408264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024461917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.471" endtime="20201117 14:47:13.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.479" endtime="20201117 14:47:13.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.178" endtime="20201117 14:47:13.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.176" endtime="20201117 14:47:13.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.486" level="INFO">${RESULT} = [{'time': 0.024461917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.365300000000073e-05, 'source_diff': 5.365300000000073e-05}, {'time': 0.024520764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:13.483" endtime="20201117 14:47:13.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.499" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:13.487" endtime="20201117 14:47:13.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.504" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.503" endtime="20201117 14:47:13.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.507" level="INFO">VALUE: [5.365300000000073e-05, 5.344499999999919e-05, 5.291699999999955e-05, 5.279199999999942e-05, 5.326400000000078e-05, 5.320899999999851e-05, 5.315300000000023e-05, 5.331899999999959e-05, 5.323600000000164e-05, 5.32080000000025e-05, 5.315300000000023e-05, 5.304199999999967e-05, 5.315300000000023e-05, 5.304199999999967e-05, 5.2943999999999214e-05, 5.3138000000001184e-05, 5.3235999999998174e-05, 5.283300000000213e-05, 5.2971999999998354e-05, 5.2749999999997244e-05, 5.287500000000084e-05, 5.305499999999977e-05, 5.2707999999998534e-05, 5.298600000000139e-05, 5.3179999999999894e-05, 5.322200000000207e-05, 5.322200000000207e-05, 5.284699999999823e-05, 5.2707999999998534e-05, 5.301400000000053e-05, 5.325000000000121e-05, 5.287499999999737e-05, 5.277799999999985e-05, 5.294499999999869e-05, 5.315300000000023e-05, 5.327800000000035e-05, 5.287500000000084e-05, 5.284699999999823e-05, 5.305600000000271e-05, 5.322300000000155e-05, 5.311099999999805e-05, 5.309700000000195e-05, 5.307000000000228e-05, 5.265299999999973e-05, 5.3137999999997715e-05, 5.2902000000000504e-05, 5.301300000000106e-05, 5.312499999999762e-05, 5.297200000000182e-05, 5.2943999999999214e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.505" endtime="20201117 14:47:13.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.500" endtime="20201117 14:47:13.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.510" endtime="20201117 14:47:13.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.514" endtime="20201117 14:47:13.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.512" endtime="20201117 14:47:13.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.508" endtime="20201117 14:47:13.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.143" endtime="20201117 14:47:13.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.142" endtime="20201117 14:47:13.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.141" endtime="20201117 14:47:13.535"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.537" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.545" endtime="20201117 14:47:13.562"></status>
</kw>
<msg timestamp="20201117 14:47:13.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.544" endtime="20201117 14:47:13.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.563" endtime="20201117 14:47:13.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.566" endtime="20201117 14:47:13.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.541" endtime="20201117 14:47:13.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.539" endtime="20201117 14:47:13.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.575" endtime="20201117 14:47:13.861"></status>
</kw>
<msg timestamp="20201117 14:47:13.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024336431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024390694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.573" endtime="20201117 14:47:13.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024336431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024390694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.865" endtime="20201117 14:47:13.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.873" endtime="20201117 14:47:13.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.571" endtime="20201117 14:47:13.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.569" endtime="20201117 14:47:13.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.880" level="INFO">${RESULT} = [{'time': 0.024390694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.426300000000231e-05, 'source_diff': 5.426300000000231e-05}, {'time': 0.024450542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:13.877" endtime="20201117 14:47:13.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.894" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:13.881" endtime="20201117 14:47:13.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.899" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.897" endtime="20201117 14:47:13.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.901" level="INFO">VALUE: [5.426300000000231e-05, 5.411099999999905e-05, 5.394499999999969e-05, 5.4027999999997633e-05, 5.402699999999816e-05, 5.401299999999859e-05, 5.408299999999991e-05, 5.405599999999677e-05, 5.401400000000153e-05, 5.3887999999998465e-05, 5.3944000000000214e-05, 5.383299999999966e-05, 5.408300000000338e-05, 5.379100000000095e-05, 5.423600000000264e-05, 5.3985999999998924e-05, 5.388900000000141e-05, 5.3944000000000214e-05, 5.3985999999998924e-05, 5.3985999999998924e-05, 5.4027999999997633e-05, 5.405600000000024e-05, 5.387500000000184e-05, 5.393100000000012e-05, 5.419499999999994e-05, 5.412499999999862e-05, 5.381900000000009e-05, 5.3985999999998924e-05, 5.40280000000011e-05, 5.40280000000011e-05, 5.427800000000135e-05, 5.4263999999998314e-05, 5.4013999999998064e-05, 5.418100000000037e-05, 5.427800000000135e-05, 5.412499999999862e-05, 5.411199999999852e-05, 5.4235999999999174e-05, 5.383299999999966e-05, 5.409699999999948e-05, 5.4179999999997425e-05, 5.4221999999999604e-05, 5.423600000000264e-05, 5.3944000000000214e-05, 5.390299999999751e-05, 5.391699999999708e-05, 5.397200000000282e-05, 5.3957999999999784e-05, 5.3971999999999354e-05, 5.425000000000221e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.900" endtime="20201117 14:47:13.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.895" endtime="20201117 14:47:13.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.904" endtime="20201117 14:47:13.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.908" endtime="20201117 14:47:13.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.906" endtime="20201117 14:47:13.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.903" endtime="20201117 14:47:13.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.538" endtime="20201117 14:47:13.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.536" endtime="20201117 14:47:13.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.535" endtime="20201117 14:47:13.929"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.931" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.939" endtime="20201117 14:47:13.957"></status>
</kw>
<msg timestamp="20201117 14:47:13.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.938" endtime="20201117 14:47:13.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.958" endtime="20201117 14:47:13.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.961" endtime="20201117 14:47:13.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.935" endtime="20201117 14:47:13.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.933" endtime="20201117 14:47:13.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.970" endtime="20201117 14:47:14.257"></status>
</kw>
<msg timestamp="20201117 14:47:14.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024949583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025005569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.969" endtime="20201117 14:47:14.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024949583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025005569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.261" endtime="20201117 14:47:14.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.270" endtime="20201117 14:47:14.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.966" endtime="20201117 14:47:14.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.964" endtime="20201117 14:47:14.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.276" level="INFO">${RESULT} = [{'time': 0.025005569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5985999999997454e-05, 'source_diff': 5.5985999999997454e-05}, {'time': 0.025066389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:14.273" endtime="20201117 14:47:14.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:14.291" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:14.277" endtime="20201117 14:47:14.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.296" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:47:14.295" endtime="20201117 14:47:14.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.298" level="INFO">VALUE: [5.5985999999997454e-05, 5.526400000000278e-05, 5.491699999999808e-05, 5.51809999999979e-05, 5.493100000000112e-05, 5.511100000000005e-05, 5.5013999999999064e-05, 5.495900000000026e-05, 5.519500000000094e-05, 5.4972000000000354e-05, 5.482000000000056e-05, 5.5194000000001464e-05, 5.480500000000152e-05, 5.5165999999998855e-05, 5.477800000000185e-05, 5.515300000000223e-05, 5.4972000000000354e-05, 5.512499999999962e-05, 5.4943999999997745e-05, 5.4930000000001644e-05, 5.4944000000001214e-05, 5.513900000000266e-05, 5.495900000000026e-05, 5.5222000000000604e-05, 5.512499999999962e-05, 5.512499999999962e-05, 5.512499999999962e-05, 5.483300000000066e-05, 5.4958000000000784e-05, 5.5194000000001464e-05, 5.511100000000005e-05, 5.4972000000000354e-05, 5.487500000000284e-05, 5.507000000000081e-05, 5.513899999999919e-05, 5.504200000000167e-05, 5.495899999999679e-05, 5.5222000000000604e-05, 5.4749999999999244e-05, 5.509799999999995e-05, 5.4972000000000354e-05, 5.4722000000000104e-05, 5.5208000000001034e-05, 5.4902000000002504e-05, 5.5179999999998425e-05, 5.4763999999998814e-05, 5.4944000000001214e-05, 5.4999999999999494e-05, 5.5222000000000604e-05, 5.4694000000000964e-05]</msg>
<status status="PASS" starttime="20201117 14:47:14.297" endtime="20201117 14:47:14.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.292" endtime="20201117 14:47:14.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.301" endtime="20201117 14:47:14.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.305" endtime="20201117 14:47:14.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.303" endtime="20201117 14:47:14.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.300" endtime="20201117 14:47:14.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.932" endtime="20201117 14:47:14.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.930" endtime="20201117 14:47:14.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.929" endtime="20201117 14:47:14.326"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.329" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.337" endtime="20201117 14:47:14.354"></status>
</kw>
<msg timestamp="20201117 14:47:14.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.335" endtime="20201117 14:47:14.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.356" endtime="20201117 14:47:14.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.358" endtime="20201117 14:47:14.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.333" endtime="20201117 14:47:14.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.331" endtime="20201117 14:47:14.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.368" endtime="20201117 14:47:14.654"></status>
</kw>
<msg timestamp="20201117 14:47:14.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024504917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024561792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.366" endtime="20201117 14:47:14.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024504917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024561792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.659" endtime="20201117 14:47:14.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.667" endtime="20201117 14:47:14.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.363" endtime="20201117 14:47:14.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.361" endtime="20201117 14:47:14.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.674" level="INFO">${RESULT} = [{'time': 0.024561792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.68749999999979e-05, 'source_diff': 5.68749999999979e-05}, {'time': 0.024622639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:14.670" endtime="20201117 14:47:14.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:14.687" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:14.675" endtime="20201117 14:47:14.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.692" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:47:14.691" endtime="20201117 14:47:14.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.699" level="INFO">VALUE: [5.68749999999979e-05, 5.558300000000141e-05, 5.5805999999998523e-05, 5.6152000000000285e-05, 5.6277999999999884e-05, 5.563899999999969e-05, 5.613900000000019e-05, 5.608399999999791e-05, 5.5986000000000924e-05, 5.6055999999998773e-05, 5.586099999999733e-05, 5.6236000000001174e-05, 5.6263999999996844e-05, 5.590299999999951e-05, 5.591699999999908e-05, 5.5915999999999605e-05, 5.5736000000000674e-05, 5.588899999999994e-05, 5.6179999999999425e-05, 5.6165999999999855e-05, 5.5722000000001104e-05, 5.5999999999997024e-05, 5.584700000000123e-05, 5.5929999999999175e-05, 5.5944000000002214e-05, 5.5957999999998315e-05, 5.5986000000000924e-05, 5.591699999999908e-05, 5.604200000000267e-05, 5.611099999999758e-05, 5.577800000000285e-05, 5.6250000000000744e-05, 5.630600000000249e-05, 5.616699999999933e-05, 5.5763999999999814e-05, 5.570900000000101e-05, 5.577700000000338e-05, 5.613900000000019e-05, 5.583399999999766e-05, 5.622300000000108e-05, 5.5750000000000244e-05, 5.6263999999996844e-05, 5.5805999999998523e-05, 5.6263999999996844e-05, 5.6250000000000744e-05, 5.5721999999997635e-05, 5.6264000000000314e-05, 5.554099999999923e-05, 5.6014000000000064e-05, 5.6264000000000314e-05]</msg>
<status status="PASS" starttime="20201117 14:47:14.693" endtime="20201117 14:47:14.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.688" endtime="20201117 14:47:14.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.703" endtime="20201117 14:47:14.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.707" endtime="20201117 14:47:14.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.705" endtime="20201117 14:47:14.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.701" endtime="20201117 14:47:14.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.329" endtime="20201117 14:47:14.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.327" endtime="20201117 14:47:14.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.327" endtime="20201117 14:47:14.729"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.731" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.740" endtime="20201117 14:47:14.759"></status>
</kw>
<msg timestamp="20201117 14:47:14.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.738" endtime="20201117 14:47:14.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.762" endtime="20201117 14:47:14.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.769" endtime="20201117 14:47:14.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.735" endtime="20201117 14:47:14.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.733" endtime="20201117 14:47:14.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.789" endtime="20201117 14:47:15.084"></status>
</kw>
<msg timestamp="20201117 14:47:15.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024603625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024661292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.785" endtime="20201117 14:47:15.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024603625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024661292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.089" endtime="20201117 14:47:15.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.097" endtime="20201117 14:47:15.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.779" endtime="20201117 14:47:15.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.776" endtime="20201117 14:47:15.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.104" level="INFO">${RESULT} = [{'time': 0.024661292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.766700000000083e-05, 'source_diff': 5.766700000000083e-05}, {'time': 0.024723125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:15.101" endtime="20201117 14:47:15.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.118" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:15.105" endtime="20201117 14:47:15.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.124" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.122" endtime="20201117 14:47:15.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.126" level="INFO">VALUE: [5.766700000000083e-05, 5.656899999999937e-05, 5.713900000000119e-05, 5.711100000000205e-05, 5.708299999999944e-05, 5.7249999999998274e-05, 5.6778000000000384e-05, 5.6999999999998024e-05, 5.7042000000000204e-05, 5.7028000000000634e-05, 5.6791999999999954e-05, 5.6819999999999093e-05, 5.672299999999811e-05, 5.7306000000000024e-05, 5.712500000000162e-05, 5.7069999999999343e-05, 5.7069999999999343e-05, 5.679100000000048e-05, 5.677700000000091e-05, 5.6707999999999065e-05, 5.6887999999997996e-05, 5.706899999999987e-05, 5.7180000000000425e-05, 5.706899999999987e-05, 5.6735999999998205e-05, 5.6957999999999315e-05, 5.7249999999998274e-05, 5.7264000000001314e-05, 5.715300000000076e-05, 5.6985999999998455e-05, 5.697299999999836e-05, 5.7249999999998274e-05, 5.6707999999999065e-05, 5.688900000000094e-05, 5.7042000000000204e-05, 5.695899999999879e-05, 5.709699999999901e-05, 5.6735999999998205e-05, 5.709800000000195e-05, 5.720900000000251e-05, 5.722300000000208e-05, 5.666699999999983e-05, 5.691700000000008e-05, 5.7083999999998913e-05, 5.7083999999998913e-05, 5.6929999999996705e-05, 5.6736000000001674e-05, 5.7236000000002174e-05, 5.7000000000001494e-05, 5.683299999999919e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.125" endtime="20201117 14:47:15.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.119" endtime="20201117 14:47:15.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.130" endtime="20201117 14:47:15.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.133" endtime="20201117 14:47:15.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.132" endtime="20201117 14:47:15.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.128" endtime="20201117 14:47:15.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.732" endtime="20201117 14:47:15.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.730" endtime="20201117 14:47:15.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.729" endtime="20201117 14:47:15.155"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.157" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.167" endtime="20201117 14:47:15.183"></status>
</kw>
<msg timestamp="20201117 14:47:15.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.165" endtime="20201117 14:47:15.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.185" endtime="20201117 14:47:15.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.188" endtime="20201117 14:47:15.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.162" endtime="20201117 14:47:15.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.159" endtime="20201117 14:47:15.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.197" endtime="20201117 14:47:15.482"></status>
</kw>
<msg timestamp="20201117 14:47:15.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025513167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025572167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.195" endtime="20201117 14:47:15.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025513167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025572167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.487" endtime="20201117 14:47:15.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.495" endtime="20201117 14:47:15.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.193" endtime="20201117 14:47:15.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.191" endtime="20201117 14:47:15.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.502" level="INFO">${RESULT} = [{'time': 0.025572167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9000000000000025e-05, 'source_diff': 5.9000000000000025e-05}, {'time': 0.025636056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:15.499" endtime="20201117 14:47:15.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.516" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:15.503" endtime="20201117 14:47:15.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.521" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.520" endtime="20201117 14:47:15.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.524" level="INFO">VALUE: [5.9000000000000025e-05, 5.8292000000001454e-05, 5.811099999999958e-05, 5.7806000000000524e-05, 5.809700000000001e-05, 5.8097999999999483e-05, 5.7971999999999885e-05, 5.78610000000028e-05, 5.8055999999997304e-05, 5.809700000000001e-05, 5.794500000000022e-05, 5.78749999999989e-05, 5.769499999999997e-05, 5.8014000000002064e-05, 5.780500000000105e-05, 5.797300000000283e-05, 5.7929999999997706e-05, 5.812500000000262e-05, 5.8165999999998386e-05, 5.7944000000000745e-05, 5.8208000000000565e-05, 5.7735999999999205e-05, 5.7944000000000745e-05, 5.786099999999933e-05, 5.813899999999872e-05, 5.8235999999999705e-05, 5.816700000000133e-05, 5.7749999999998775e-05, 5.788900000000194e-05, 5.8235999999999705e-05, 5.8264000000002314e-05, 5.790299999999804e-05, 5.8194999999997e-05, 5.7735999999999205e-05, 5.7999999999999025e-05, 5.8013999999998594e-05, 5.8249999999999275e-05, 5.815300000000176e-05, 5.795899999999979e-05, 5.815300000000176e-05, 5.795899999999979e-05, 5.818099999999743e-05, 5.794500000000022e-05, 5.809700000000001e-05, 5.7902000000002035e-05, 5.781900000000062e-05, 5.779100000000148e-05, 5.8179999999997956e-05, 5.809700000000001e-05, 5.786099999999933e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.522" endtime="20201117 14:47:15.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.517" endtime="20201117 14:47:15.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.528" endtime="20201117 14:47:15.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.531" endtime="20201117 14:47:15.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.530" endtime="20201117 14:47:15.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.526" endtime="20201117 14:47:15.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.158" endtime="20201117 14:47:15.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.156" endtime="20201117 14:47:15.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.155" endtime="20201117 14:47:15.553"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.556" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.564" endtime="20201117 14:47:15.582"></status>
</kw>
<msg timestamp="20201117 14:47:15.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.562" endtime="20201117 14:47:15.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.584" endtime="20201117 14:47:15.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.587" endtime="20201117 14:47:15.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.560" endtime="20201117 14:47:15.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.558" endtime="20201117 14:47:15.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.596" endtime="20201117 14:47:15.885"></status>
</kw>
<msg timestamp="20201117 14:47:15.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025840917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025900653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.594" endtime="20201117 14:47:15.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025840917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025900653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.889" endtime="20201117 14:47:15.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.897" endtime="20201117 14:47:15.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.592" endtime="20201117 14:47:15.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.590" endtime="20201117 14:47:15.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.905" level="INFO">${RESULT} = [{'time': 0.025900653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9735999999997735e-05, 'source_diff': 5.9735999999997735e-05}, {'time': 0.025964472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:15.901" endtime="20201117 14:47:15.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.920" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:15.906" endtime="20201117 14:47:15.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.925" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.924" endtime="20201117 14:47:15.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.928" level="INFO">VALUE: [5.9735999999997735e-05, 5.855499999999833e-05, 5.8708000000001065e-05, 5.8792000000001954e-05, 5.886100000000033e-05, 5.911100000000058e-05, 5.8721999999997165e-05, 5.8763999999999345e-05, 5.891699999999861e-05, 5.9069999999997874e-05, 5.8806000000001524e-05, 5.897299999999689e-05, 5.8972000000000885e-05, 5.86949999999975e-05, 5.8986000000000455e-05, 5.888899999999947e-05, 5.8819999999997624e-05, 5.9179999999998956e-05, 5.886100000000033e-05, 5.9070000000001344e-05, 5.8972000000000885e-05, 5.8901999999999566e-05, 5.88749999999999e-05, 5.8777999999998914e-05, 5.9194000000001995e-05, 5.8901999999999566e-05, 5.8708000000001065e-05, 5.9194000000001995e-05, 5.908299999999797e-05, 5.911100000000058e-05, 5.909700000000101e-05, 5.888899999999947e-05, 5.8848000000000233e-05, 5.9221999999997665e-05, 5.888899999999947e-05, 5.912500000000015e-05, 5.9235999999997235e-05, 5.869500000000097e-05, 5.9027999999999164e-05, 5.9027999999999164e-05, 5.895900000000079e-05, 5.890299999999904e-05, 5.906900000000187e-05, 5.9194999999998e-05, 5.9222000000001135e-05, 5.888899999999947e-05, 5.8749999999999775e-05, 5.9250000000000275e-05, 5.9250000000000275e-05, 5.911099999999711e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.927" endtime="20201117 14:47:15.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.921" endtime="20201117 14:47:15.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.932" endtime="20201117 14:47:15.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.935" endtime="20201117 14:47:15.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.934" endtime="20201117 14:47:15.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.930" endtime="20201117 14:47:15.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.556" endtime="20201117 14:47:15.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.554" endtime="20201117 14:47:15.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.553" endtime="20201117 14:47:15.957"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.959" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.968" endtime="20201117 14:47:15.984"></status>
</kw>
<msg timestamp="20201117 14:47:15.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.966" endtime="20201117 14:47:15.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.986" endtime="20201117 14:47:15.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.988" endtime="20201117 14:47:15.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.963" endtime="20201117 14:47:15.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.961" endtime="20201117 14:47:15.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.998" endtime="20201117 14:47:16.283"></status>
</kw>
<msg timestamp="20201117 14:47:16.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024650083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024711417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.996" endtime="20201117 14:47:16.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024650083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024711417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.288" endtime="20201117 14:47:16.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.296" endtime="20201117 14:47:16.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.993" endtime="20201117 14:47:16.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.992" endtime="20201117 14:47:16.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:16.303" level="INFO">${RESULT} = [{'time': 0.024711417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.13339999999997e-05, 'source_diff': 6.13339999999997e-05}, {'time': 0.024777236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:16.300" endtime="20201117 14:47:16.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:16.317" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:16.304" endtime="20201117 14:47:16.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.322" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:47:16.321" endtime="20201117 14:47:16.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.326" level="INFO">VALUE: [6.13339999999997e-05, 6.0514000000001095e-05, 5.9708000000002065e-05, 6.011100000000158e-05, 6.0208000000002565e-05, 5.988900000000047e-05, 5.993099999999918e-05, 6.0193999999999526e-05, 5.98750000000009e-05, 6.009700000000201e-05, 6.011099999999811e-05, 6.008300000000244e-05, 6.0291999999999984e-05, 5.9750000000000775e-05, 5.9764000000000345e-05, 5.991699999999961e-05, 6.0083999999998444e-05, 6.0221999999998665e-05, 5.98750000000009e-05, 6.0098000000001484e-05, 5.988900000000047e-05, 6.0208000000002565e-05, 6.001300000000112e-05, 6.0278000000000415e-05, 5.95689999999989e-05, 5.988900000000047e-05, 5.980499999999958e-05, 5.9985999999997985e-05, 6.0236000000001705e-05, 5.9736000000001205e-05, 6.0056000000002774e-05, 5.9888999999997e-05, 5.988900000000047e-05, 5.9971999999998415e-05, 5.9985999999997985e-05, 6.0250000000001275e-05, 6.012500000000115e-05, 5.9735999999997735e-05, 5.9943999999999276e-05, 6.009700000000201e-05, 6.011099999999811e-05, 6.0250000000001275e-05, 5.9820000000002094e-05, 6.0278000000000415e-05, 5.9735999999997735e-05, 6.0305999999999554e-05, 6.009699999999854e-05, 5.994499999999875e-05, 5.9888000000000996e-05, 6.0235999999998235e-05]</msg>
<status status="PASS" starttime="20201117 14:47:16.324" endtime="20201117 14:47:16.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.318" endtime="20201117 14:47:16.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.329" endtime="20201117 14:47:16.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:16.333" endtime="20201117 14:47:16.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.331" endtime="20201117 14:47:16.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.327" endtime="20201117 14:47:16.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.960" endtime="20201117 14:47:16.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.958" endtime="20201117 14:47:16.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.957" endtime="20201117 14:47:16.354"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.356" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.365" endtime="20201117 14:47:16.383"></status>
</kw>
<msg timestamp="20201117 14:47:16.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.364" endtime="20201117 14:47:16.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.384" endtime="20201117 14:47:16.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.387" endtime="20201117 14:47:16.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.361" endtime="20201117 14:47:16.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.359" endtime="20201117 14:47:16.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.396" endtime="20201117 14:47:16.682"></status>
</kw>
<msg timestamp="20201117 14:47:16.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024714917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024776306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.395" endtime="20201117 14:47:16.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024714917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024776306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.686" endtime="20201117 14:47:16.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.694" endtime="20201117 14:47:16.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.392" endtime="20201117 14:47:16.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.390" endtime="20201117 14:47:16.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:16.701" level="INFO">${RESULT} = [{'time': 0.024776306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.138900000000197e-05, 'source_diff': 6.138900000000197e-05}, {'time': 0.024843125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:16.697" endtime="20201117 14:47:16.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:16.715" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:16.702" endtime="20201117 14:47:16.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.719" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:47:16.718" endtime="20201117 14:47:16.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.722" level="INFO">VALUE: [6.138900000000197e-05, 6.108299999999997e-05, 6.0985999999998985e-05, 6.127800000000141e-05, 6.0764000000001345e-05, 6.112499999999868e-05, 6.094499999999975e-05, 6.093100000000018e-05, 6.0819999999999624e-05, 6.116700000000086e-05, 6.0847999999998764e-05, 6.080500000000058e-05, 6.0819999999999624e-05, 6.086099999999886e-05, 6.084699999999929e-05, 6.079100000000101e-05, 6.127699999999847e-05, 6.0777999999997445e-05, 6.130500000000108e-05, 6.0985999999998985e-05, 6.113899999999825e-05, 6.065300000000079e-05, 6.0957999999999846e-05, 6.111099999999911e-05, 6.113899999999825e-05, 6.087499999999843e-05, 6.123599999999924e-05, 6.084699999999929e-05, 6.118099999999696e-05, 6.088900000000147e-05, 6.0819999999999624e-05, 6.0819999999999624e-05, 6.0971999999999416e-05, 6.1013999999998125e-05, 6.0749999999998305e-05, 6.1027999999997695e-05, 6.10560000000003e-05, 6.112499999999868e-05, 6.119400000000053e-05, 6.116699999999739e-05, 6.102699999999822e-05, 6.0985999999998985e-05, 6.10690000000004e-05, 6.109699999999954e-05, 6.119399999999706e-05, 6.0972000000002885e-05, 6.0792000000000485e-05, 6.0985999999998985e-05, 6.086099999999886e-05, 6.0721999999999166e-05]</msg>
<status status="PASS" starttime="20201117 14:47:16.720" endtime="20201117 14:47:16.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.716" endtime="20201117 14:47:16.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.726" endtime="20201117 14:47:16.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:16.730" endtime="20201117 14:47:16.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.729" endtime="20201117 14:47:16.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.724" endtime="20201117 14:47:16.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.357" endtime="20201117 14:47:16.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.355" endtime="20201117 14:47:16.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.354" endtime="20201117 14:47:16.752"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.754" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.763" endtime="20201117 14:47:16.780"></status>
</kw>
<msg timestamp="20201117 14:47:16.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.761" endtime="20201117 14:47:16.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.781" endtime="20201117 14:47:16.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.784" endtime="20201117 14:47:16.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.759" endtime="20201117 14:47:16.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.756" endtime="20201117 14:47:16.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.794" endtime="20201117 14:47:17.097"></status>
</kw>
<msg timestamp="20201117 14:47:17.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024877153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024939486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.792" endtime="20201117 14:47:17.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024877153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024939486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.102" endtime="20201117 14:47:17.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.110" endtime="20201117 14:47:17.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.789" endtime="20201117 14:47:17.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.787" endtime="20201117 14:47:17.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.117" level="INFO">${RESULT} = [{'time': 0.024939486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.233300000000122e-05, 'source_diff': 6.233300000000122e-05}, {'time': 0.025007347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:17.114" endtime="20201117 14:47:17.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.130" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:17.118" endtime="20201117 14:47:17.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.135" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.134" endtime="20201117 14:47:17.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.137" level="INFO">VALUE: [6.233300000000122e-05, 6.237499999999993e-05, 6.183300000000072e-05, 6.17499999999993e-05, 6.183300000000072e-05, 6.217999999999849e-05, 6.195800000000085e-05, 6.208300000000097e-05, 6.217999999999849e-05, 6.216699999999839e-05, 6.216700000000186e-05, 6.212500000000315e-05, 6.177799999999845e-05, 6.207000000000087e-05, 6.209700000000054e-05, 6.22219999999972e-05, 6.179200000000148e-05, 6.223600000000024e-05, 6.200000000000302e-05, 6.187499999999943e-05, 6.201299999999965e-05, 6.180600000000105e-05, 6.222300000000014e-05, 6.223600000000024e-05, 6.180500000000158e-05, 6.22080000000011e-05, 6.180499999999811e-05, 6.222200000000067e-05, 6.175000000000277e-05, 6.230600000000155e-05, 6.22219999999972e-05, 6.212499999999968e-05, 6.181900000000115e-05, 6.211100000000011e-05, 6.169400000000103e-05, 6.165300000000179e-05, 6.22499999999998e-05, 6.20699999999974e-05, 6.198599999999999e-05, 6.223600000000024e-05, 6.212499999999968e-05, 6.22499999999998e-05, 6.190299999999857e-05, 6.20140000000026e-05, 6.20279999999987e-05, 6.208400000000044e-05, 6.195800000000085e-05, 6.219400000000153e-05, 6.216599999999892e-05, 6.202699999999922e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.136" endtime="20201117 14:47:17.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.131" endtime="20201117 14:47:17.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.140" endtime="20201117 14:47:17.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.144" endtime="20201117 14:47:17.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.142" endtime="20201117 14:47:17.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.139" endtime="20201117 14:47:17.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.755" endtime="20201117 14:47:17.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.753" endtime="20201117 14:47:17.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.752" endtime="20201117 14:47:17.165"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.167" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.175" endtime="20201117 14:47:17.193"></status>
</kw>
<msg timestamp="20201117 14:47:17.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.174" endtime="20201117 14:47:17.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.194" endtime="20201117 14:47:17.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.197" endtime="20201117 14:47:17.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.171" endtime="20201117 14:47:17.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.169" endtime="20201117 14:47:17.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.206" endtime="20201117 14:47:17.492"></status>
</kw>
<msg timestamp="20201117 14:47:17.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024691472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024755347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.204" endtime="20201117 14:47:17.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024691472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024755347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.496" endtime="20201117 14:47:17.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.504" endtime="20201117 14:47:17.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.202" endtime="20201117 14:47:17.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.200" endtime="20201117 14:47:17.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.511" level="INFO">${RESULT} = [{'time': 0.024755347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.387500000000143e-05, 'source_diff': 6.387500000000143e-05}, {'time': 0.024824167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:17.508" endtime="20201117 14:47:17.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.526" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:17.512" endtime="20201117 14:47:17.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.530" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.529" endtime="20201117 14:47:17.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.532" level="INFO">VALUE: [6.387500000000143e-05, 6.318100000000243e-05, 6.323700000000071e-05, 6.318100000000243e-05, 6.273600000000074e-05, 6.299999999999709e-05, 6.291599999999967e-05, 6.301400000000013e-05, 6.276399999999988e-05, 6.312500000000068e-05, 6.317999999999949e-05, 6.2889e-05, 6.327799999999995e-05, 6.318099999999896e-05, 6.298600000000099e-05, 6.293099999999871e-05, 6.281899999999868e-05, 6.293100000000218e-05, 6.329200000000298e-05, 6.32500000000008e-05, 6.316699999999939e-05, 6.324999999999734e-05, 6.28340000000012e-05, 6.315299999999982e-05, 6.294500000000175e-05, 6.318099999999896e-05, 6.27500000000003e-05, 6.319499999999853e-05, 6.312499999999721e-05, 6.283300000000172e-05, 6.302700000000022e-05, 6.269400000000203e-05, 6.317999999999949e-05, 6.292999999999924e-05, 6.317999999999949e-05, 6.286100000000086e-05, 6.269399999999856e-05, 6.295799999999838e-05, 6.287500000000043e-05, 6.276399999999988e-05, 6.295800000000185e-05, 6.324999999999734e-05, 6.326400000000038e-05, 6.30699999999984e-05, 6.290300000000304e-05, 6.334699999999832e-05, 6.323599999999777e-05, 6.327799999999995e-05, 6.297299999999742e-05, 6.280600000000205e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.531" endtime="20201117 14:47:17.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.526" endtime="20201117 14:47:17.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.536" endtime="20201117 14:47:17.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.539" endtime="20201117 14:47:17.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.537" endtime="20201117 14:47:17.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.534" endtime="20201117 14:47:17.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.168" endtime="20201117 14:47:17.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.166" endtime="20201117 14:47:17.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.165" endtime="20201117 14:47:17.560"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.562" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.571" endtime="20201117 14:47:17.588"></status>
</kw>
<msg timestamp="20201117 14:47:17.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.569" endtime="20201117 14:47:17.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.589" endtime="20201117 14:47:17.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.592" endtime="20201117 14:47:17.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.566" endtime="20201117 14:47:17.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.564" endtime="20201117 14:47:17.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.601" endtime="20201117 14:47:17.899"></status>
</kw>
<msg timestamp="20201117 14:47:17.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023893569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023958431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.600" endtime="20201117 14:47:17.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023893569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023958431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.903" endtime="20201117 14:47:17.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.912" endtime="20201117 14:47:17.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.597" endtime="20201117 14:47:17.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.595" endtime="20201117 14:47:17.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.918" level="INFO">${RESULT} = [{'time': 0.023958431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.486199999999887e-05, 'source_diff': 6.486199999999887e-05}, {'time': 0.024028264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:17.915" endtime="20201117 14:47:17.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.932" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:17.919" endtime="20201117 14:47:17.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.936" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.935" endtime="20201117 14:47:17.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.938" level="INFO">VALUE: [6.486199999999887e-05, 6.430600000000009e-05, 6.37219999999987e-05, 6.424999999999834e-05, 6.40699999999994e-05, 6.40699999999994e-05, 6.423600000000224e-05, 6.427800000000095e-05, 6.408399999999898e-05, 6.397199999999895e-05, 6.42089999999991e-05, 6.388899999999753e-05, 6.409699999999907e-05, 6.416600000000092e-05, 6.381899999999968e-05, 6.3889000000001e-05, 6.377800000000045e-05, 6.415299999999735e-05, 6.386099999999839e-05, 6.424999999999834e-05, 6.427800000000095e-05, 6.40829999999995e-05, 6.422299999999867e-05, 6.415300000000082e-05, 6.416700000000039e-05, 6.37500000000013e-05, 6.398600000000199e-05, 6.376400000000088e-05, 6.412500000000168e-05, 6.400000000000156e-05, 6.380499999999664e-05, 6.415299999999735e-05, 6.39029999999971e-05, 6.423700000000171e-05, 6.397300000000189e-05, 6.372300000000164e-05, 6.401300000000165e-05, 6.404100000000079e-05, 6.399999999999809e-05, 6.42080000000031e-05, 6.384700000000229e-05, 6.422200000000267e-05, 6.423599999999877e-05, 6.384699999999882e-05, 6.429200000000052e-05, 6.430599999999662e-05, 6.412500000000168e-05, 6.42219999999992e-05, 6.387500000000143e-05, 6.420799999999963e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.937" endtime="20201117 14:47:17.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.932" endtime="20201117 14:47:17.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.942" endtime="20201117 14:47:17.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.945" endtime="20201117 14:47:17.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.943" endtime="20201117 14:47:17.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.940" endtime="20201117 14:47:17.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.563" endtime="20201117 14:47:17.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.561" endtime="20201117 14:47:17.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.561" endtime="20201117 14:47:17.966"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.968" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.977" endtime="20201117 14:47:17.994"></status>
</kw>
<msg timestamp="20201117 14:47:17.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.975" endtime="20201117 14:47:17.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.996" endtime="20201117 14:47:17.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.998" endtime="20201117 14:47:18.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.972" endtime="20201117 14:47:18.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.970" endtime="20201117 14:47:18.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.007" endtime="20201117 14:47:18.293"></status>
</kw>
<msg timestamp="20201117 14:47:18.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02447925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024544639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:18.006" endtime="20201117 14:47:18.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02447925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024544639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:18.297" endtime="20201117 14:47:18.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.306" endtime="20201117 14:47:18.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.003" endtime="20201117 14:47:18.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.002" endtime="20201117 14:47:18.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.313" level="INFO">${RESULT} = [{'time': 0.024544639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.538899999999903e-05, 'source_diff': 6.538899999999903e-05}, {'time': 0.024615514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:18.309" endtime="20201117 14:47:18.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.326" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:18.313" endtime="20201117 14:47:18.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.330" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.329" endtime="20201117 14:47:18.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.333" level="INFO">VALUE: [6.538899999999903e-05, 6.512500000000268e-05, 6.497199999999995e-05, 6.473599999999927e-05, 6.477800000000145e-05, 6.47219999999997e-05, 6.502799999999823e-05, 6.477799999999798e-05, 6.529199999999805e-05, 6.495899999999985e-05, 6.520800000000063e-05, 6.490300000000157e-05, 6.523599999999977e-05, 6.495799999999691e-05, 6.50419999999978e-05, 6.47219999999997e-05, 6.473599999999927e-05, 6.499999999999909e-05, 6.491700000000114e-05, 6.512499999999921e-05, 6.484800000000276e-05, 6.498599999999952e-05, 6.497199999999995e-05, 6.49440000000008e-05, 6.50830000000005e-05, 6.519400000000106e-05, 6.519500000000053e-05, 6.518000000000149e-05, 6.473599999999927e-05, 6.495899999999985e-05, 6.519400000000106e-05, 6.484699999999982e-05, 6.491700000000114e-05, 6.487500000000243e-05, 6.479200000000102e-05, 6.494499999999681e-05, 6.491699999999767e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.52220000000002e-05, 6.511099999999964e-05, 6.491700000000114e-05, 6.493100000000071e-05, 6.473599999999927e-05, 6.49440000000008e-05, 6.486199999999887e-05, 6.519400000000106e-05, 6.49020000000021e-05, 6.493000000000124e-05, 6.493000000000124e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.331" endtime="20201117 14:47:18.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.327" endtime="20201117 14:47:18.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.336" endtime="20201117 14:47:18.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.339" endtime="20201117 14:47:18.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.338" endtime="20201117 14:47:18.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.334" endtime="20201117 14:47:18.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.969" endtime="20201117 14:47:18.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.967" endtime="20201117 14:47:18.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.966" endtime="20201117 14:47:18.361"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.363" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.371" endtime="20201117 14:47:18.389"></status>
</kw>
<msg timestamp="20201117 14:47:18.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.370" endtime="20201117 14:47:18.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.390" endtime="20201117 14:47:18.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.393" endtime="20201117 14:47:18.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.367" endtime="20201117 14:47:18.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.365" endtime="20201117 14:47:18.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.402" endtime="20201117 14:47:18.687"></status>
</kw>
<msg timestamp="20201117 14:47:18.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024466639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024533208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.400" endtime="20201117 14:47:18.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024466639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024533208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.692" endtime="20201117 14:47:18.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.700" endtime="20201117 14:47:18.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.398" endtime="20201117 14:47:18.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.396" endtime="20201117 14:47:18.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.706" level="INFO">${RESULT} = [{'time': 0.024533208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.656900000000243e-05, 'source_diff': 6.656900000000243e-05}, {'time': 0.024605042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:18.703" endtime="20201117 14:47:18.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.720" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:18.707" endtime="20201117 14:47:18.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.724" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.723" endtime="20201117 14:47:18.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.727" level="INFO">VALUE: [6.656900000000243e-05, 6.597300000000042e-05, 6.591600000000267e-05, 6.594399999999834e-05, 6.580500000000211e-05, 6.616700000000239e-05, 6.611100000000064e-05, 6.57769999999995e-05, 6.574999999999984e-05, 6.617999999999902e-05, 6.627799999999948e-05, 6.591600000000267e-05, 6.604099999999932e-05, 6.57639999999994e-05, 6.57220000000007e-05, 6.613899999999978e-05, 6.615300000000282e-05, 6.598600000000052e-05, 6.584700000000082e-05, 6.580599999999812e-05, 6.608400000000098e-05, 6.620899999999763e-05, 6.619500000000153e-05, 6.580600000000159e-05, 6.602799999999923e-05, 6.612500000000021e-05, 6.591699999999867e-05, 6.613800000000031e-05, 6.59029999999991e-05, 6.576299999999993e-05, 6.615199999999988e-05, 6.583300000000125e-05, 6.573600000000027e-05, 6.580499999999864e-05, 6.620800000000163e-05, 6.620799999999816e-05, 6.57639999999994e-05, 6.581899999999821e-05, 6.601399999999966e-05, 6.593100000000171e-05, 6.597200000000095e-05, 6.600000000000009e-05, 6.604200000000227e-05, 6.577799999999898e-05, 6.615299999999935e-05, 6.623600000000077e-05, 6.60700000000014e-05, 6.62639999999999e-05, 6.574999999999984e-05, 6.62639999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.725" endtime="20201117 14:47:18.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.721" endtime="20201117 14:47:18.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.730" endtime="20201117 14:47:18.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.734" endtime="20201117 14:47:18.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.732" endtime="20201117 14:47:18.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.729" endtime="20201117 14:47:18.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.364" endtime="20201117 14:47:18.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.362" endtime="20201117 14:47:18.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.361" endtime="20201117 14:47:18.761"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.764" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.772" endtime="20201117 14:47:18.792"></status>
</kw>
<msg timestamp="20201117 14:47:18.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.771" endtime="20201117 14:47:18.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.793" endtime="20201117 14:47:18.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.796" endtime="20201117 14:47:18.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.768" endtime="20201117 14:47:18.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.766" endtime="20201117 14:47:18.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.805" endtime="20201117 14:47:19.090"></status>
</kw>
<msg timestamp="20201117 14:47:19.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032142819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032210653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.803" endtime="20201117 14:47:19.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032142819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032210653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.094" endtime="20201117 14:47:19.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.102" endtime="20201117 14:47:19.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.801" endtime="20201117 14:47:19.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.799" endtime="20201117 14:47:19.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.109" level="INFO">${RESULT} = [{'time': 0.032210653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.783399999999579e-05, 'source_diff': 6.783399999999579e-05}, {'time': 0.032283486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.106" endtime="20201117 14:47:19.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.124" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:19.110" endtime="20201117 14:47:19.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.128" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.127" endtime="20201117 14:47:19.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.131" level="INFO">VALUE: [6.783399999999579e-05, 6.74030000000006e-05, 6.691699999999967e-05, 6.709699999999513e-05, 6.716699999999992e-05, 6.70830000000025e-05, 6.716699999999992e-05, 6.677800000000345e-05, 6.718100000000643e-05, 6.698599999999805e-05, 6.693099999999924e-05, 6.681999999999522e-05, 6.72359999999983e-05, 6.723600000000524e-05, 6.65979999999941e-05, 6.676399999999694e-05, 6.715200000000088e-05, 6.706899999999599e-05, 6.686100000000139e-05, 6.729100000000404e-05, 6.669399999999909e-05, 6.694399999999934e-05, 6.670799999999866e-05, 6.669399999999909e-05, 6.704200000000327e-05, 6.692999999999977e-05, 6.684700000000182e-05, 6.686100000000139e-05, 6.716699999999992e-05, 6.694399999999934e-05, 6.729200000000352e-05, 6.679199999999608e-05, 6.683400000000173e-05, 6.72359999999983e-05, 6.715300000000035e-05, 6.719399999999959e-05, 6.715200000000088e-05, 6.719399999999959e-05, 6.704100000000379e-05, 6.719399999999959e-05, 6.72359999999983e-05, 6.718000000000002e-05, 6.688900000000053e-05, 6.67909999999966e-05, 6.683300000000225e-05, 6.677799999999651e-05, 6.686100000000139e-05, 6.727800000000395e-05, 6.688900000000053e-05, 6.695799999999891e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.129" endtime="20201117 14:47:19.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.125" endtime="20201117 14:47:19.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.134" endtime="20201117 14:47:19.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.137" endtime="20201117 14:47:19.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.136" endtime="20201117 14:47:19.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.133" endtime="20201117 14:47:19.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.764" endtime="20201117 14:47:19.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.762" endtime="20201117 14:47:19.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.762" endtime="20201117 14:47:19.159"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.161" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.169" endtime="20201117 14:47:19.188"></status>
</kw>
<msg timestamp="20201117 14:47:19.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.167" endtime="20201117 14:47:19.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.191" endtime="20201117 14:47:19.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.196" endtime="20201117 14:47:19.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.165" endtime="20201117 14:47:19.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.163" endtime="20201117 14:47:19.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.215" endtime="20201117 14:47:19.507"></status>
</kw>
<msg timestamp="20201117 14:47:19.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023804681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023873222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.212" endtime="20201117 14:47:19.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023804681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023873222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.511" endtime="20201117 14:47:19.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.519" endtime="20201117 14:47:19.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.206" endtime="20201117 14:47:19.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.203" endtime="20201117 14:47:19.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.526" level="INFO">${RESULT} = [{'time': 0.023873222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.854099999999835e-05, 'source_diff': 6.854099999999835e-05}, {'time': 0.023947111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.522" endtime="20201117 14:47:19.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.539" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:19.527" endtime="20201117 14:47:19.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.544" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.543" endtime="20201117 14:47:19.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.546" level="INFO">VALUE: [6.854099999999835e-05, 6.813900000000178e-05, 6.825000000000234e-05, 6.77770000000015e-05, 6.77640000000014e-05, 6.822199999999973e-05, 6.783300000000325e-05, 6.786100000000239e-05, 6.781900000000021e-05, 6.797200000000295e-05, 6.806900000000046e-05, 6.773600000000227e-05, 6.788900000000153e-05, 6.818000000000102e-05, 6.802800000000123e-05, 6.820899999999963e-05, 6.780600000000012e-05, 6.783400000000273e-05, 6.794499999999981e-05, 6.773600000000227e-05, 6.809800000000255e-05, 6.812500000000221e-05, 6.822300000000267e-05, 6.815300000000135e-05, 6.775000000000184e-05, 6.815200000000188e-05, 6.815199999999841e-05, 6.829100000000157e-05, 6.79160000000012e-05, 6.804100000000132e-05, 6.82220000000032e-05, 6.806900000000046e-05, 6.787499999999849e-05, 6.812500000000221e-05, 6.779200000000055e-05, 6.827799999999801e-05, 6.818100000000049e-05, 6.781900000000021e-05, 6.79030000000011e-05, 6.825000000000234e-05, 6.78480000000023e-05, 6.813900000000178e-05, 6.781900000000021e-05, 6.802700000000175e-05, 6.811100000000264e-05, 6.775000000000184e-05, 6.794400000000034e-05, 6.826300000000243e-05, 6.819400000000059e-05, 6.805500000000089e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.545" endtime="20201117 14:47:19.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.540" endtime="20201117 14:47:19.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.549" endtime="20201117 14:47:19.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.553" endtime="20201117 14:47:19.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.551" endtime="20201117 14:47:19.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.548" endtime="20201117 14:47:19.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.161" endtime="20201117 14:47:19.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.160" endtime="20201117 14:47:19.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.159" endtime="20201117 14:47:19.574"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.576" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.584" endtime="20201117 14:47:19.602"></status>
</kw>
<msg timestamp="20201117 14:47:19.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.583" endtime="20201117 14:47:19.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.604" endtime="20201117 14:47:19.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.606" endtime="20201117 14:47:19.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.580" endtime="20201117 14:47:19.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.578" endtime="20201117 14:47:19.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.615" endtime="20201117 14:47:19.901"></status>
</kw>
<msg timestamp="20201117 14:47:19.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023833972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023903278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.613" endtime="20201117 14:47:19.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023833972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023903278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.905" endtime="20201117 14:47:19.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.917" endtime="20201117 14:47:19.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.611" endtime="20201117 14:47:19.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.609" endtime="20201117 14:47:19.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.924" level="INFO">${RESULT} = [{'time': 0.023903278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.930600000000162e-05, 'source_diff': 6.930600000000162e-05}, {'time': 0.023978181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.921" endtime="20201117 14:47:19.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.937" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:19.925" endtime="20201117 14:47:19.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.942" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.941" endtime="20201117 14:47:19.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.944" level="INFO">VALUE: [6.930600000000162e-05, 6.937499999999999e-05, 6.912499999999974e-05, 6.877800000000198e-05, 6.911100000000017e-05, 6.908300000000103e-05, 6.915300000000235e-05, 6.904199999999833e-05, 6.90840000000005e-05, 6.90420000000018e-05, 6.872200000000023e-05, 6.926399999999944e-05, 6.893000000000177e-05, 6.874999999999937e-05, 6.913899999999931e-05, 6.877699999999903e-05, 6.89169999999982e-05, 6.877699999999903e-05, 6.920800000000116e-05, 6.917999999999855e-05, 6.927800000000248e-05, 6.924999999999987e-05, 6.913899999999931e-05, 6.881900000000121e-05, 6.915300000000235e-05, 6.915299999999888e-05, 6.916700000000192e-05, 6.90840000000005e-05, 6.888899999999906e-05, 6.870900000000013e-05, 6.922200000000073e-05, 6.912499999999974e-05, 6.90559999999979e-05, 6.929200000000205e-05, 6.920900000000063e-05, 6.894399999999787e-05, 6.917999999999855e-05, 6.887499999999949e-05, 6.877699999999903e-05, 6.884700000000035e-05, 6.902799999999876e-05, 6.887499999999949e-05, 6.870799999999719e-05, 6.872200000000023e-05, 6.924999999999987e-05, 6.927800000000248e-05, 6.92360000000003e-05, 6.918100000000149e-05, 6.875000000000284e-05, 6.902799999999876e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.943" endtime="20201117 14:47:19.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.938" endtime="20201117 14:47:19.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.947" endtime="20201117 14:47:19.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.951" endtime="20201117 14:47:19.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.949" endtime="20201117 14:47:19.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.946" endtime="20201117 14:47:19.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.577" endtime="20201117 14:47:19.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.575" endtime="20201117 14:47:19.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.574" endtime="20201117 14:47:19.972"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.974" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.982" endtime="20201117 14:47:20.000"></status>
</kw>
<msg timestamp="20201117 14:47:20.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.981" endtime="20201117 14:47:20.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.001" endtime="20201117 14:47:20.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.004" endtime="20201117 14:47:20.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.978" endtime="20201117 14:47:20.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.976" endtime="20201117 14:47:20.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.013" endtime="20201117 14:47:20.299"></status>
</kw>
<msg timestamp="20201117 14:47:20.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024224806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024295917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.011" endtime="20201117 14:47:20.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024224806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024295917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.303" endtime="20201117 14:47:20.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.311" endtime="20201117 14:47:20.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.009" endtime="20201117 14:47:20.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.007" endtime="20201117 14:47:20.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:20.318" level="INFO">${RESULT} = [{'time': 0.024295917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.11109999999987e-05, 'source_diff': 7.11109999999987e-05}, {'time': 0.024371764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:20.314" endtime="20201117 14:47:20.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:20.331" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:20.319" endtime="20201117 14:47:20.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.335" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:47:20.334" endtime="20201117 14:47:20.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.338" level="INFO">VALUE: [7.11109999999987e-05, 7.013900000000031e-05, 7.020900000000163e-05, 7.011100000000117e-05, 7.018099999999902e-05, 6.984699999999788e-05, 7.006999999999847e-05, 6.976399999999994e-05, 7.013900000000031e-05, 6.990299999999963e-05, 7.013900000000031e-05, 7.025000000000087e-05, 7.013799999999737e-05, 7.02360000000013e-05, 7.008299999999856e-05, 6.984700000000135e-05, 6.980599999999865e-05, 6.977700000000003e-05, 6.990299999999963e-05, 7.029199999999958e-05, 6.972200000000123e-05, 6.995799999999844e-05, 6.995800000000191e-05, 6.99169999999992e-05, 6.99169999999992e-05, 6.983300000000178e-05, 7.016699999999945e-05, 7.019500000000206e-05, 7.004199999999933e-05, 6.982000000000169e-05, 7.008300000000203e-05, 6.977700000000003e-05, 7.026300000000096e-05, 7.001400000000019e-05, 7.029199999999958e-05, 7.030499999999967e-05, 6.987500000000049e-05, 6.984700000000135e-05, 6.984699999999788e-05, 7.022200000000173e-05, 6.990299999999963e-05, 7.029199999999958e-05, 6.988900000000006e-05, 7.030600000000262e-05, 6.976399999999994e-05, 6.983300000000178e-05, 6.997200000000148e-05, 6.997199999999801e-05, 7.00970000000016e-05, 7.015299999999988e-05]</msg>
<status status="PASS" starttime="20201117 14:47:20.337" endtime="20201117 14:47:20.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.332" endtime="20201117 14:47:20.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.341" endtime="20201117 14:47:20.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.344" endtime="20201117 14:47:20.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.343" endtime="20201117 14:47:20.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.339" endtime="20201117 14:47:20.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.975" endtime="20201117 14:47:20.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.973" endtime="20201117 14:47:20.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.972" endtime="20201117 14:47:20.365"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.368" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.376" endtime="20201117 14:47:20.395"></status>
</kw>
<msg timestamp="20201117 14:47:20.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.374" endtime="20201117 14:47:20.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.396" endtime="20201117 14:47:20.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.399" endtime="20201117 14:47:20.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.372" endtime="20201117 14:47:20.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.370" endtime="20201117 14:47:20.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.408" endtime="20201117 14:47:20.694"></status>
</kw>
<msg timestamp="20201117 14:47:20.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0250065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025078208, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:20.407" endtime="20201117 14:47:20.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0250065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025078208, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:20.698" endtime="20201117 14:47:20.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.707" endtime="20201117 14:47:20.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.404" endtime="20201117 14:47:20.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.402" endtime="20201117 14:47:20.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:20.713" level="INFO">${RESULT} = [{'time': 0.025078208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.170800000000019e-05, 'source_diff': 7.170800000000019e-05}, {'time': 0.025155056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:20.710" endtime="20201117 14:47:20.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:20.728" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:20.714" endtime="20201117 14:47:20.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.732" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:47:20.731" endtime="20201117 14:47:20.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.735" level="INFO">VALUE: [7.170800000000019e-05, 7.140299999999766e-05, 7.126400000000144e-05, 7.091600000000073e-05, 7.111100000000217e-05, 7.101300000000171e-05, 7.115200000000141e-05, 7.084699999999888e-05, 7.10559999999999e-05, 7.069399999999962e-05, 7.088900000000106e-05, 7.075000000000137e-05, 7.101399999999772e-05, 7.11109999999987e-05, 7.125000000000187e-05, 7.104200000000033e-05, 7.126399999999797e-05, 7.084700000000235e-05, 7.119400000000012e-05, 7.077800000000051e-05, 7.087500000000149e-05, 7.10979999999986e-05, 7.087499999999802e-05, 7.119400000000012e-05, 7.07499999999979e-05, 7.086100000000192e-05, 7.1069e-05, 7.094399999999987e-05, 7.075000000000137e-05, 7.075000000000137e-05, 7.076399999999747e-05, 7.127799999999754e-05, 7.120799999999969e-05, 7.125000000000187e-05, 7.070799999999919e-05, 7.098599999999858e-05, 7.102800000000076e-05, 7.073599999999833e-05, 7.081999999999922e-05, 7.118100000000002e-05, 7.088900000000106e-05, 7.081999999999922e-05, 7.098600000000205e-05, 7.102800000000076e-05, 7.106999999999947e-05, 7.079200000000008e-05, 7.12360000000023e-05, 7.09170000000002e-05, 7.070800000000266e-05, 7.101300000000171e-05]</msg>
<status status="PASS" starttime="20201117 14:47:20.733" endtime="20201117 14:47:20.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.729" endtime="20201117 14:47:20.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.738" endtime="20201117 14:47:20.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.741" endtime="20201117 14:47:20.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.740" endtime="20201117 14:47:20.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.736" endtime="20201117 14:47:20.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.368" endtime="20201117 14:47:20.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.367" endtime="20201117 14:47:20.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.366" endtime="20201117 14:47:20.762"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.765" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.773" endtime="20201117 14:47:20.791"></status>
</kw>
<msg timestamp="20201117 14:47:20.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.772" endtime="20201117 14:47:20.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.792" endtime="20201117 14:47:20.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.795" endtime="20201117 14:47:20.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.769" endtime="20201117 14:47:20.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.767" endtime="20201117 14:47:20.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.804" endtime="20201117 14:47:21.090"></status>
</kw>
<msg timestamp="20201117 14:47:21.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024272861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024345986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.803" endtime="20201117 14:47:21.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024272861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024345986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.094" endtime="20201117 14:47:21.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.102" endtime="20201117 14:47:21.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.800" endtime="20201117 14:47:21.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.798" endtime="20201117 14:47:21.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.109" level="INFO">${RESULT} = [{'time': 0.024345986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.312500000000027e-05, 'source_diff': 7.312500000000027e-05}, {'time': 0.024423861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:21.105" endtime="20201117 14:47:21.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.122" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:21.110" endtime="20201117 14:47:21.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.126" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.125" endtime="20201117 14:47:21.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.129" level="INFO">VALUE: [7.312500000000027e-05, 7.231900000000124e-05, 7.216599999999851e-05, 7.176399999999847e-05, 7.2069000000001e-05, 7.215300000000188e-05, 7.222200000000026e-05, 7.176399999999847e-05, 7.177800000000151e-05, 7.227799999999854e-05, 7.213900000000231e-05, 7.186099999999945e-05, 7.186100000000292e-05, 7.20560000000009e-05, 7.186099999999945e-05, 7.220900000000016e-05, 7.208400000000004e-05, 7.202800000000176e-05, 7.22499999999994e-05, 7.212500000000274e-05, 7.190299999999816e-05, 7.177799999999804e-05, 7.22369999999993e-05, 7.220800000000069e-05, 7.208300000000056e-05, 7.208300000000056e-05, 7.223599999999983e-05, 7.177699999999856e-05, 7.222200000000026e-05, 7.195800000000044e-05, 7.176400000000194e-05, 7.181900000000074e-05, 7.188899999999859e-05, 7.173599999999933e-05, 7.17499999999989e-05, 7.177699999999856e-05, 7.198599999999958e-05, 7.186099999999945e-05, 7.227800000000201e-05, 7.184699999999988e-05, 7.212499999999927e-05, 7.213899999999884e-05, 7.173599999999933e-05, 7.188799999999912e-05, 7.17230000000027e-05, 7.205500000000142e-05, 7.198599999999958e-05, 7.191599999999826e-05, 7.21109999999997e-05, 7.198599999999958e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.128" endtime="20201117 14:47:21.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.123" endtime="20201117 14:47:21.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.132" endtime="20201117 14:47:21.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.135" endtime="20201117 14:47:21.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.134" endtime="20201117 14:47:21.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.130" endtime="20201117 14:47:21.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.765" endtime="20201117 14:47:21.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.763" endtime="20201117 14:47:21.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.763" endtime="20201117 14:47:21.157"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.159" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.167" endtime="20201117 14:47:21.185"></status>
</kw>
<msg timestamp="20201117 14:47:21.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.166" endtime="20201117 14:47:21.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.186" endtime="20201117 14:47:21.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.189" endtime="20201117 14:47:21.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.163" endtime="20201117 14:47:21.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.161" endtime="20201117 14:47:21.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.198" endtime="20201117 14:47:21.484"></status>
</kw>
<msg timestamp="20201117 14:47:21.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024391444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024465764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.196" endtime="20201117 14:47:21.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024391444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024465764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.488" endtime="20201117 14:47:21.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.496" endtime="20201117 14:47:21.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.194" endtime="20201117 14:47:21.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.192" endtime="20201117 14:47:21.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.502" level="INFO">${RESULT} = [{'time': 0.024465764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.431999999999925e-05, 'source_diff': 7.431999999999925e-05}, {'time': 0.024544583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:21.499" endtime="20201117 14:47:21.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.516" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:21.503" endtime="20201117 14:47:21.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.520" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.519" endtime="20201117 14:47:21.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.523" level="INFO">VALUE: [7.431999999999925e-05, 7.349999999999718e-05, 7.313800000000037e-05, 7.272200000000076e-05, 7.329099999999963e-05, 7.329099999999963e-05, 7.300000000000015e-05, 7.319400000000212e-05, 7.313899999999984e-05, 7.309700000000113e-05, 7.298600000000058e-05, 7.266699999999848e-05, 7.286100000000045e-05, 7.300000000000015e-05, 7.308400000000104e-05, 7.294499999999787e-05, 7.279200000000208e-05, 7.329199999999911e-05, 7.301399999999972e-05, 7.300000000000015e-05, 7.313899999999984e-05, 7.327700000000006e-05, 7.316599999999951e-05, 7.297200000000101e-05, 7.302699999999981e-05, 7.301399999999972e-05, 7.295800000000144e-05, 7.287500000000002e-05, 7.326399999999997e-05, 7.326399999999997e-05, 7.27499999999999e-05, 7.290299999999916e-05, 7.32500000000004e-05, 7.315299999999941e-05, 7.298600000000058e-05, 7.323599999999736e-05, 7.320799999999822e-05, 7.327799999999954e-05, 7.320899999999769e-05, 7.30560000000019e-05, 7.322299999999726e-05, 7.32500000000004e-05, 7.304099999999938e-05, 7.315299999999941e-05, 7.329199999999911e-05, 7.291599999999926e-05, 7.323600000000083e-05, 7.28049999999987e-05, 7.302799999999929e-05, 7.322199999999779e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.521" endtime="20201117 14:47:21.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.517" endtime="20201117 14:47:21.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.526" endtime="20201117 14:47:21.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.530" endtime="20201117 14:47:21.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.528" endtime="20201117 14:47:21.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.525" endtime="20201117 14:47:21.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.160" endtime="20201117 14:47:21.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.158" endtime="20201117 14:47:21.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.157" endtime="20201117 14:47:21.551"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.553" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.561" endtime="20201117 14:47:21.578"></status>
</kw>
<msg timestamp="20201117 14:47:21.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.560" endtime="20201117 14:47:21.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.580" endtime="20201117 14:47:21.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.582" endtime="20201117 14:47:21.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.557" endtime="20201117 14:47:21.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.555" endtime="20201117 14:47:21.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.591" endtime="20201117 14:47:21.877"></status>
</kw>
<msg timestamp="20201117 14:47:21.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023877236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023952458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.590" endtime="20201117 14:47:21.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023877236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023952458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.881" endtime="20201117 14:47:21.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.890" endtime="20201117 14:47:21.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.587" endtime="20201117 14:47:21.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.585" endtime="20201117 14:47:21.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.896" level="INFO">${RESULT} = [{'time': 0.023952458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.522199999999979e-05, 'source_diff': 7.522199999999979e-05}, {'time': 0.024032361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:21.893" endtime="20201117 14:47:21.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.909" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:21.897" endtime="20201117 14:47:21.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.914" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.913" endtime="20201117 14:47:21.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.917" level="INFO">VALUE: [7.522199999999979e-05, 7.451399999999775e-05, 7.416600000000051e-05, 7.368100000000252e-05, 7.412500000000127e-05, 7.373600000000133e-05, 7.379100000000013e-05, 7.404100000000038e-05, 7.423599999999836e-05, 7.395799999999897e-05, 7.418000000000008e-05, 7.381900000000274e-05, 7.384700000000188e-05, 7.422199999999879e-05, 7.381899999999927e-05, 7.409700000000213e-05, 7.4069999999999e-05, 7.430599999999968e-05, 7.358300000000206e-05, 7.427800000000054e-05, 7.42639999999975e-05, 7.388800000000112e-05, 7.405599999999943e-05, 7.400000000000115e-05, 7.380599999999918e-05, 7.394499999999887e-05, 7.379100000000013e-05, 7.413800000000137e-05, 7.372199999999829e-05, 7.38049999999997e-05, 7.406899999999952e-05, 7.423599999999836e-05, 7.38049999999997e-05, 7.37500000000009e-05, 7.390300000000016e-05, 7.386099999999798e-05, 7.41249999999978e-05, 7.405599999999943e-05, 7.4069999999999e-05, 7.395900000000191e-05, 7.407000000000247e-05, 7.387500000000102e-05, 7.415300000000041e-05, 7.380599999999918e-05, 7.420799999999922e-05, 7.383299999999884e-05, 7.399999999999768e-05, 7.390300000000016e-05, 7.395800000000244e-05, 7.404100000000038e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.915" endtime="20201117 14:47:21.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.910" endtime="20201117 14:47:21.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.920" endtime="20201117 14:47:21.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.923" endtime="20201117 14:47:21.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.922" endtime="20201117 14:47:21.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.918" endtime="20201117 14:47:21.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.554" endtime="20201117 14:47:21.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.552" endtime="20201117 14:47:21.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.551" endtime="20201117 14:47:21.944"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.947" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.955" endtime="20201117 14:47:21.973"></status>
</kw>
<msg timestamp="20201117 14:47:21.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.953" endtime="20201117 14:47:21.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.974" endtime="20201117 14:47:21.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.977" endtime="20201117 14:47:21.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.951" endtime="20201117 14:47:21.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.949" endtime="20201117 14:47:21.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.986" endtime="20201117 14:47:22.270"></status>
</kw>
<msg timestamp="20201117 14:47:22.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024666181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024741569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.984" endtime="20201117 14:47:22.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024666181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024741569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.274" endtime="20201117 14:47:22.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.282" endtime="20201117 14:47:22.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.982" endtime="20201117 14:47:22.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.980" endtime="20201117 14:47:22.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:22.289" level="INFO">${RESULT} = [{'time': 0.024741569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.538800000000262e-05, 'source_diff': 7.538800000000262e-05}, {'time': 0.024822403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:22.286" endtime="20201117 14:47:22.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:22.304" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:22.290" endtime="20201117 14:47:22.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.309" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:47:22.307" endtime="20201117 14:47:22.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.311" level="INFO">VALUE: [7.538800000000262e-05, 7.54310000000008e-05, 7.527799999999807e-05, 7.476400000000147e-05, 7.490199999999822e-05, 7.504200000000086e-05, 7.505500000000095e-05, 7.473599999999886e-05, 7.483299999999984e-05, 7.493000000000083e-05, 7.486099999999898e-05, 7.498599999999911e-05, 7.519400000000065e-05, 7.520800000000022e-05, 7.501400000000172e-05, 7.519400000000065e-05, 7.507e-05, 7.509699999999966e-05, 7.49310000000003e-05, 7.516700000000098e-05, 7.516700000000098e-05, 7.483399999999932e-05, 7.498600000000258e-05, 7.486099999999898e-05, 7.502800000000129e-05, 7.470899999999919e-05, 7.470899999999919e-05, 7.476400000000147e-05, 7.498600000000258e-05, 7.513900000000184e-05, 7.526400000000197e-05, 7.500000000000215e-05, 7.520799999999675e-05, 7.52500000000024e-05, 7.511099999999923e-05, 7.513900000000184e-05, 7.502799999999782e-05, 7.50830000000001e-05, 7.508299999999662e-05, 7.519399999999718e-05, 7.488899999999812e-05, 7.472199999999929e-05, 7.49029999999977e-05, 7.494499999999987e-05, 7.483400000000279e-05, 7.495799999999997e-05, 7.470900000000266e-05, 7.491699999999726e-05, 7.523699999999883e-05, 7.474999999999843e-05]</msg>
<status status="PASS" starttime="20201117 14:47:22.310" endtime="20201117 14:47:22.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.305" endtime="20201117 14:47:22.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.314" endtime="20201117 14:47:22.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:22.317" endtime="20201117 14:47:22.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.316" endtime="20201117 14:47:22.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.312" endtime="20201117 14:47:22.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.947" endtime="20201117 14:47:22.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.946" endtime="20201117 14:47:22.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.945" endtime="20201117 14:47:22.339"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.341" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.349" endtime="20201117 14:47:22.367"></status>
</kw>
<msg timestamp="20201117 14:47:22.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.347" endtime="20201117 14:47:22.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.368" endtime="20201117 14:47:22.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.371" endtime="20201117 14:47:22.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.345" endtime="20201117 14:47:22.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.343" endtime="20201117 14:47:22.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.379" endtime="20201117 14:47:22.666"></status>
</kw>
<msg timestamp="20201117 14:47:22.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023863292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023940056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.378" endtime="20201117 14:47:22.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023863292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023940056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.670" endtime="20201117 14:47:22.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.678" endtime="20201117 14:47:22.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.375" endtime="20201117 14:47:22.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.374" endtime="20201117 14:47:22.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:22.685" level="INFO">${RESULT} = [{'time': 0.023940056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.6764e-05, 'source_diff': 7.6764e-05}, {'time': 0.024021861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.630499999999873e-...</msg>
<status status="PASS" starttime="20201117 14:47:22.682" endtime="20201117 14:47:22.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:22.698" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:22.686" endtime="20201117 14:47:22.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.703" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:47:22.702" endtime="20201117 14:47:22.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.705" level="INFO">VALUE: [7.6764e-05, 7.630499999999873e-05, 7.595800000000097e-05, 7.623600000000036e-05, 7.620800000000122e-05, 7.624999999999993e-05, 7.57769999999991e-05, 7.602800000000229e-05, 7.601399999999925e-05, 7.617999999999861e-05, 7.611100000000023e-05, 7.597300000000001e-05, 7.584700000000041e-05, 7.629200000000211e-05, 7.590199999999922e-05, 7.60830000000011e-05, 7.601399999999925e-05, 7.611100000000023e-05, 7.598600000000011e-05, 7.617999999999861e-05, 7.587499999999955e-05, 7.59029999999987e-05, 7.604199999999839e-05, 7.604200000000186e-05, 7.630599999999821e-05, 7.573599999999986e-05, 7.6070000000001e-05, 7.62769999999996e-05, 7.601399999999925e-05, 7.627799999999907e-05, 7.570900000000019e-05, 7.61249999999998e-05, 7.620900000000069e-05, 7.620800000000122e-05, 7.605600000000143e-05, 7.615199999999947e-05, 7.615199999999947e-05, 7.592999999999836e-05, 7.608299999999762e-05, 7.613899999999937e-05, 7.570800000000072e-05, 7.60969999999972e-05, 7.602799999999882e-05, 7.584700000000041e-05, 7.62639999999995e-05, 7.586099999999998e-05, 7.573599999999986e-05, 7.619500000000112e-05, 7.583300000000084e-05, 7.580600000000118e-05]</msg>
<status status="PASS" starttime="20201117 14:47:22.704" endtime="20201117 14:47:22.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.699" endtime="20201117 14:47:22.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.708" endtime="20201117 14:47:22.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:22.712" endtime="20201117 14:47:22.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.710" endtime="20201117 14:47:22.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.707" endtime="20201117 14:47:22.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.342" endtime="20201117 14:47:22.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.340" endtime="20201117 14:47:22.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.339" endtime="20201117 14:47:22.733"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.735" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.743" endtime="20201117 14:47:22.762"></status>
</kw>
<msg timestamp="20201117 14:47:22.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.742" endtime="20201117 14:47:22.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.763" endtime="20201117 14:47:22.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.766" endtime="20201117 14:47:22.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.739" endtime="20201117 14:47:22.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.737" endtime="20201117 14:47:22.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.775" endtime="20201117 14:47:23.061"></status>
</kw>
<msg timestamp="20201117 14:47:23.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024225069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024302986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.773" endtime="20201117 14:47:23.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024225069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024302986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.066" endtime="20201117 14:47:23.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.074" endtime="20201117 14:47:23.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.771" endtime="20201117 14:47:23.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.769" endtime="20201117 14:47:23.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.080" level="INFO">${RESULT} = [{'time': 0.024302986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.791700000000026e-05, 'source_diff': 7.791700000000026e-05}, {'time': 0.024385792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:23.077" endtime="20201117 14:47:23.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.094" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:23.081" endtime="20201117 14:47:23.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.098" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.097" endtime="20201117 14:47:23.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.101" level="INFO">VALUE: [7.791700000000026e-05, 7.729199999999964e-05, 7.704199999999939e-05, 7.701400000000025e-05, 7.716600000000004e-05, 7.725000000000093e-05, 7.726300000000103e-05, 7.668000000000258e-05, 7.688900000000012e-05, 7.688900000000012e-05, 7.691599999999979e-05, 7.713900000000037e-05, 7.715299999999994e-05, 7.677799999999957e-05, 7.686200000000046e-05, 7.711100000000123e-05, 7.718099999999908e-05, 7.673599999999739e-05, 7.711100000000123e-05, 7.669499999999815e-05, 7.725000000000093e-05, 7.719499999999865e-05, 7.672199999999782e-05, 7.711100000000123e-05, 7.706999999999853e-05, 7.702799999999982e-05, 7.719499999999865e-05, 7.722200000000179e-05, 7.675000000000043e-05, 7.709700000000166e-05, 7.67770000000001e-05, 7.675000000000043e-05, 7.706900000000252e-05, 7.720799999999875e-05, 7.68189999999988e-05, 7.691699999999926e-05, 7.697199999999807e-05, 7.704200000000286e-05, 7.70969999999982e-05, 7.673600000000086e-05, 7.698600000000111e-05, 7.680599999999871e-05, 7.711100000000123e-05, 7.704199999999939e-05, 7.701400000000025e-05, 7.6764e-05, 7.68189999999988e-05, 7.718099999999908e-05, 7.715200000000047e-05, 7.695800000000197e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.099" endtime="20201117 14:47:23.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.095" endtime="20201117 14:47:23.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.104" endtime="20201117 14:47:23.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.107" endtime="20201117 14:47:23.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.106" endtime="20201117 14:47:23.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.102" endtime="20201117 14:47:23.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.736" endtime="20201117 14:47:23.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.734" endtime="20201117 14:47:23.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.733" endtime="20201117 14:47:23.128"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.130" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.138" endtime="20201117 14:47:23.157"></status>
</kw>
<msg timestamp="20201117 14:47:23.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.137" endtime="20201117 14:47:23.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.159" endtime="20201117 14:47:23.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.162" endtime="20201117 14:47:23.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.134" endtime="20201117 14:47:23.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.132" endtime="20201117 14:47:23.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.171" endtime="20201117 14:47:23.455"></status>
</kw>
<msg timestamp="20201117 14:47:23.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024089472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024168667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.169" endtime="20201117 14:47:23.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024089472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024168667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.460" endtime="20201117 14:47:23.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.468" endtime="20201117 14:47:23.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.166" endtime="20201117 14:47:23.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.165" endtime="20201117 14:47:23.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.475" level="INFO">${RESULT} = [{'time': 0.024168667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.919500000000065e-05, 'source_diff': 7.919500000000065e-05}, {'time': 0.024252486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:23.471" endtime="20201117 14:47:23.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.488" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:23.476" endtime="20201117 14:47:23.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.492" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.491" endtime="20201117 14:47:23.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.495" level="INFO">VALUE: [7.919500000000065e-05, 7.843000000000086e-05, 7.783299999999937e-05, 7.786099999999851e-05, 7.783299999999937e-05, 7.802799999999735e-05, 7.830600000000021e-05, 7.779100000000067e-05, 7.793099999999983e-05, 7.775000000000143e-05, 7.780599999999971e-05, 7.788899999999765e-05, 7.812499999999833e-05, 7.80129999999983e-05, 7.800000000000168e-05, 7.82770000000016e-05, 7.775000000000143e-05, 7.791600000000079e-05, 7.82640000000015e-05, 7.779100000000067e-05, 7.812499999999833e-05, 7.791700000000026e-05, 7.780599999999971e-05, 7.80969999999992e-05, 7.784699999999894e-05, 7.813900000000137e-05, 7.827800000000107e-05, 7.802800000000082e-05, 7.808400000000257e-05, 7.805600000000343e-05, 7.829200000000064e-05, 7.802800000000082e-05, 7.79579999999995e-05, 7.77770000000011e-05, 7.827699999999813e-05, 7.786099999999851e-05, 7.81389999999979e-05, 7.820799999999975e-05, 7.825000000000193e-05, 7.823599999999889e-05, 7.763900000000087e-05, 7.819499999999965e-05, 7.788899999999765e-05, 7.79030000000007e-05, 7.786099999999851e-05, 7.79449999999994e-05, 7.790299999999722e-05, 7.818100000000008e-05, 7.80969999999992e-05, 7.790199999999775e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.493" endtime="20201117 14:47:23.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.489" endtime="20201117 14:47:23.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.498" endtime="20201117 14:47:23.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.501" endtime="20201117 14:47:23.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.500" endtime="20201117 14:47:23.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.496" endtime="20201117 14:47:23.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.131" endtime="20201117 14:47:23.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.129" endtime="20201117 14:47:23.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.128" endtime="20201117 14:47:23.522"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.525" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.533" endtime="20201117 14:47:23.552"></status>
</kw>
<msg timestamp="20201117 14:47:23.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.532" endtime="20201117 14:47:23.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.553" endtime="20201117 14:47:23.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.556" endtime="20201117 14:47:23.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.529" endtime="20201117 14:47:23.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.527" endtime="20201117 14:47:23.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.565" endtime="20201117 14:47:23.851"></status>
</kw>
<msg timestamp="20201117 14:47:23.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025516708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025596597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.563" endtime="20201117 14:47:23.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025516708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025596597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.855" endtime="20201117 14:47:23.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.863" endtime="20201117 14:47:23.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.561" endtime="20201117 14:47:23.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.559" endtime="20201117 14:47:23.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.869" level="INFO">${RESULT} = [{'time': 0.025596597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.988899999999965e-05, 'source_diff': 7.988899999999965e-05}, {'time': 0.025681458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:23.866" endtime="20201117 14:47:23.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.884" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:23.870" endtime="20201117 14:47:23.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.888" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.887" endtime="20201117 14:47:23.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.891" level="INFO">VALUE: [7.988899999999965e-05, 7.905500000000149e-05, 7.894399999999746e-05, 7.874999999999896e-05, 7.911099999999976e-05, 7.879100000000167e-05, 7.877800000000157e-05, 7.922200000000032e-05, 7.900000000000268e-05, 7.89169999999978e-05, 7.920800000000075e-05, 7.91389999999989e-05, 7.879200000000114e-05, 7.905600000000096e-05, 7.922200000000032e-05, 7.902799999999835e-05, 7.907000000000053e-05, 7.879200000000114e-05, 7.888899999999865e-05, 7.924999999999946e-05, 7.882000000000028e-05, 7.882000000000028e-05, 7.897200000000007e-05, 7.887499999999908e-05, 7.901400000000225e-05, 7.902800000000182e-05, 7.89580000000005e-05, 7.888899999999865e-05, 7.905599999999749e-05, 7.916700000000151e-05, 7.916700000000151e-05, 7.915300000000194e-05, 7.877800000000157e-05, 7.891700000000126e-05, 7.895899999999997e-05, 7.87779999999981e-05, 7.891700000000126e-05, 7.911099999999976e-05, 7.920900000000022e-05, 7.898599999999964e-05, 7.888899999999865e-05, 7.915299999999847e-05, 7.897200000000007e-05, 7.91380000000029e-05, 7.901400000000225e-05, 7.923599999999989e-05, 7.920799999999728e-05, 7.887499999999908e-05, 7.893000000000136e-05, 7.893000000000136e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.890" endtime="20201117 14:47:23.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.885" endtime="20201117 14:47:23.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.894" endtime="20201117 14:47:23.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.897" endtime="20201117 14:47:23.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.896" endtime="20201117 14:47:23.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.892" endtime="20201117 14:47:23.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.525" endtime="20201117 14:47:23.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.524" endtime="20201117 14:47:23.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.523" endtime="20201117 14:47:23.919"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.921" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.929" endtime="20201117 14:47:23.947"></status>
</kw>
<msg timestamp="20201117 14:47:23.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.928" endtime="20201117 14:47:23.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.948" endtime="20201117 14:47:23.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.951" endtime="20201117 14:47:23.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.925" endtime="20201117 14:47:23.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.923" endtime="20201117 14:47:23.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.960" endtime="20201117 14:47:24.246"></status>
</kw>
<msg timestamp="20201117 14:47:24.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024732431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024813458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.958" endtime="20201117 14:47:24.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024732431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024813458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.250" endtime="20201117 14:47:24.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.258" endtime="20201117 14:47:24.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.956" endtime="20201117 14:47:24.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.954" endtime="20201117 14:47:24.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:24.264" level="INFO">${RESULT} = [{'time': 0.024813458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.102700000000088e-05, 'source_diff': 8.102700000000088e-05}, {'time': 0.024899306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:24.261" endtime="20201117 14:47:24.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:24.278" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:24.265" endtime="20201117 14:47:24.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.282" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:47:24.281" endtime="20201117 14:47:24.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.285" level="INFO">VALUE: [8.102700000000088e-05, 8.037500000000058e-05, 7.99580000000015e-05, 7.99719999999976e-05, 8.00970000000012e-05, 8.017999999999914e-05, 8.005500000000249e-05, 8.025000000000046e-05, 7.968000000000211e-05, 7.992999999999889e-05, 8.015299999999947e-05, 8.027800000000307e-05, 8.025000000000046e-05, 7.993100000000183e-05, 8.002699999999988e-05, 8.019500000000165e-05, 8.025000000000046e-05, 7.966699999999854e-05, 8.022299999999732e-05, 8.012500000000033e-05, 7.979199999999867e-05, 7.99450000000014e-05, 8.019500000000165e-05, 8.022199999999785e-05, 8.031899999999884e-05, 8.025000000000046e-05, 8.004100000000292e-05, 7.988899999999965e-05, 8.029199999999917e-05, 7.973600000000039e-05, 8.008300000000163e-05, 7.98329999999979e-05, 8.016699999999904e-05, 8.019500000000165e-05, 7.986099999999705e-05, 8.01389999999999e-05, 7.97779999999991e-05, 7.986100000000051e-05, 8.024999999999699e-05, 8.026400000000003e-05, 8.012500000000033e-05, 8.017999999999914e-05, 7.977699999999963e-05, 7.970800000000125e-05, 8.019399999999871e-05, 7.995799999999803e-05, 8.011100000000076e-05, 7.980499999999877e-05, 7.980500000000224e-05, 8.02779999999996e-05]</msg>
<status status="PASS" starttime="20201117 14:47:24.283" endtime="20201117 14:47:24.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.279" endtime="20201117 14:47:24.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.288" endtime="20201117 14:47:24.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:24.292" endtime="20201117 14:47:24.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.290" endtime="20201117 14:47:24.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.286" endtime="20201117 14:47:24.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.922" endtime="20201117 14:47:24.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.920" endtime="20201117 14:47:24.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.919" endtime="20201117 14:47:24.313"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.315" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.323" endtime="20201117 14:47:24.341"></status>
</kw>
<msg timestamp="20201117 14:47:24.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.322" endtime="20201117 14:47:24.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.342" endtime="20201117 14:47:24.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.345" endtime="20201117 14:47:24.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.319" endtime="20201117 14:47:24.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.317" endtime="20201117 14:47:24.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.354" endtime="20201117 14:47:24.640"></status>
</kw>
<msg timestamp="20201117 14:47:24.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023875472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023957625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.352" endtime="20201117 14:47:24.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023875472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023957625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.644" endtime="20201117 14:47:24.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.652" endtime="20201117 14:47:24.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.350" endtime="20201117 14:47:24.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.348" endtime="20201117 14:47:24.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:24.658" level="INFO">${RESULT} = [{'time': 0.023957625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.215300000000147e-05, 'source_diff': 8.215300000000147e-05}, {'time': 0.024044472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:24.655" endtime="20201117 14:47:24.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:24.672" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:24.659" endtime="20201117 14:47:24.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.676" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:47:24.675" endtime="20201117 14:47:24.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.679" level="INFO">VALUE: [8.215300000000147e-05, 8.134700000000245e-05, 8.126399999999756e-05, 8.098599999999817e-05, 8.112500000000133e-05, 8.123600000000189e-05, 8.075000000000096e-05, 8.079199999999967e-05, 8.129200000000017e-05, 8.093099999999936e-05, 8.11109999999983e-05, 8.12230000000018e-05, 8.118100000000308e-05, 8.101400000000078e-05, 8.080499999999977e-05, 8.105500000000002e-05, 8.116700000000004e-05, 8.088900000000065e-05, 8.122199999999885e-05, 8.087500000000108e-05, 8.111100000000177e-05, 8.083399999999838e-05, 8.115300000000047e-05, 8.119399999999971e-05, 8.084700000000195e-05, 8.098600000000164e-05, 8.108299999999916e-05, 8.108299999999916e-05, 8.09169999999998e-05, 8.086100000000151e-05, 8.075000000000096e-05, 8.126400000000103e-05, 8.107000000000253e-05, 8.083399999999838e-05, 8.093099999999936e-05, 8.129200000000017e-05, 8.066699999999954e-05, 8.1152999999997e-05, 8.076299999999759e-05, 8.069400000000268e-05, 8.09169999999998e-05, 8.100000000000121e-05, 8.118100000000308e-05, 8.112500000000133e-05, 8.116700000000004e-05, 8.106999999999906e-05, 8.12780000000006e-05, 8.065299999999997e-05, 8.090300000000022e-05, 8.122199999999885e-05]</msg>
<status status="PASS" starttime="20201117 14:47:24.677" endtime="20201117 14:47:24.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.673" endtime="20201117 14:47:24.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.682" endtime="20201117 14:47:24.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:24.686" endtime="20201117 14:47:24.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.684" endtime="20201117 14:47:24.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.681" endtime="20201117 14:47:24.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.316" endtime="20201117 14:47:24.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.314" endtime="20201117 14:47:24.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.313" endtime="20201117 14:47:24.707"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.709" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.717" endtime="20201117 14:47:24.735"></status>
</kw>
<msg timestamp="20201117 14:47:24.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.715" endtime="20201117 14:47:24.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.737" endtime="20201117 14:47:24.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.739" endtime="20201117 14:47:24.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.713" endtime="20201117 14:47:24.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.711" endtime="20201117 14:47:24.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.748" endtime="20201117 14:47:25.034"></status>
</kw>
<msg timestamp="20201117 14:47:25.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023827111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023910167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.747" endtime="20201117 14:47:25.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023827111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023910167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.038" endtime="20201117 14:47:25.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.046" endtime="20201117 14:47:25.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.744" endtime="20201117 14:47:25.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.742" endtime="20201117 14:47:25.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.053" level="INFO">${RESULT} = [{'time': 0.023910167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.305599999999802e-05, 'source_diff': 8.305599999999802e-05}, {'time': 0.023997986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:25.049" endtime="20201117 14:47:25.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.070" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:25.057" endtime="20201117 14:47:25.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.074" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.073" endtime="20201117 14:47:25.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.077" level="INFO">VALUE: [8.305599999999802e-05, 8.245800000000053e-05, 8.19719999999996e-05, 8.18329999999999e-05, 8.195800000000003e-05, 8.19589999999995e-05, 8.212499999999887e-05, 8.207000000000006e-05, 8.186099999999905e-05, 8.179200000000067e-05, 8.202799999999788e-05, 8.184799999999895e-05, 8.186199999999852e-05, 8.204100000000145e-05, 8.204099999999798e-05, 8.208300000000016e-05, 8.204100000000145e-05, 8.222199999999985e-05, 8.172199999999935e-05, 8.215300000000147e-05, 8.194400000000046e-05, 8.229200000000117e-05, 8.17780000000011e-05, 8.176400000000153e-05, 8.175000000000196e-05, 8.198699999999864e-05, 8.179200000000067e-05, 8.172200000000282e-05, 8.230600000000074e-05, 8.166700000000054e-05, 8.208300000000016e-05, 8.197300000000254e-05, 8.206899999999712e-05, 8.21109999999993e-05, 8.20970000000032e-05, 8.192999999999742e-05, 8.188899999999819e-05, 8.21109999999993e-05, 8.174999999999849e-05, 8.170799999999978e-05, 8.193000000000089e-05, 8.205600000000049e-05, 8.219400000000071e-05, 8.190299999999776e-05, 8.207000000000006e-05, 8.20979999999992e-05, 8.207000000000006e-05, 8.222199999999985e-05, 8.176400000000153e-05, 8.218100000000061e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.075" endtime="20201117 14:47:25.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.071" endtime="20201117 14:47:25.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.080" endtime="20201117 14:47:25.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.083" endtime="20201117 14:47:25.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.082" endtime="20201117 14:47:25.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.078" endtime="20201117 14:47:25.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.710" endtime="20201117 14:47:25.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.708" endtime="20201117 14:47:25.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.707" endtime="20201117 14:47:25.104"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.107" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.115" endtime="20201117 14:47:25.134"></status>
</kw>
<msg timestamp="20201117 14:47:25.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.113" endtime="20201117 14:47:25.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.135" endtime="20201117 14:47:25.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.138" endtime="20201117 14:47:25.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.111" endtime="20201117 14:47:25.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.109" endtime="20201117 14:47:25.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.147" endtime="20201117 14:47:25.432"></status>
</kw>
<msg timestamp="20201117 14:47:25.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024743639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024827625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.145" endtime="20201117 14:47:25.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024743639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024827625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.436" endtime="20201117 14:47:25.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.444" endtime="20201117 14:47:25.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.143" endtime="20201117 14:47:25.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.141" endtime="20201117 14:47:25.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.451" level="INFO">${RESULT} = [{'time': 0.024827625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.39859999999977e-05, 'source_diff': 8.39859999999977e-05}, {'time': 0.024915458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:25.448" endtime="20201117 14:47:25.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.465" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:25.452" endtime="20201117 14:47:25.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.470" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.469" endtime="20201117 14:47:25.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.472" level="INFO">VALUE: [8.39859999999977e-05, 8.259700000000023e-05, 8.329099999999923e-05, 8.319400000000171e-05, 8.29720000000006e-05, 8.276399999999906e-05, 8.274999999999949e-05, 8.301400000000278e-05, 8.30980000000002e-05, 8.295800000000103e-05, 8.319500000000118e-05, 8.330500000000227e-05, 8.274999999999949e-05, 8.323600000000042e-05, 8.309699999999726e-05, 8.287499999999962e-05, 8.29170000000018e-05, 8.281900000000134e-05, 8.311199999999977e-05, 8.331899999999837e-05, 8.31110000000003e-05, 8.288899999999919e-05, 8.301399999999931e-05, 8.304100000000245e-05, 8.276399999999906e-05, 8.286100000000005e-05, 8.299999999999974e-05, 8.312500000000334e-05, 8.306999999999759e-05, 8.309700000000073e-05, 8.281999999999734e-05, 8.277799999999863e-05, 8.276399999999906e-05, 8.326400000000303e-05, 8.27780000000021e-05, 8.283400000000038e-05, 8.316600000000257e-05, 8.324999999999999e-05, 8.304099999999898e-05, 8.27780000000021e-05, 8.298600000000017e-05, 8.276399999999906e-05, 8.286100000000005e-05, 8.31110000000003e-05, 8.301399999999931e-05, 8.31390000000029e-05, 8.3152999999999e-05, 8.316699999999858e-05, 8.280600000000124e-05, 8.286100000000005e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.471" endtime="20201117 14:47:25.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.466" endtime="20201117 14:47:25.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.475" endtime="20201117 14:47:25.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.479" endtime="20201117 14:47:25.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.477" endtime="20201117 14:47:25.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.474" endtime="20201117 14:47:25.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.107" endtime="20201117 14:47:25.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.105" endtime="20201117 14:47:25.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.105" endtime="20201117 14:47:25.500"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.502" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.510" endtime="20201117 14:47:25.528"></status>
</kw>
<msg timestamp="20201117 14:47:25.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.509" endtime="20201117 14:47:25.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.530" endtime="20201117 14:47:25.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.532" endtime="20201117 14:47:25.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.506" endtime="20201117 14:47:25.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.504" endtime="20201117 14:47:25.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.541" endtime="20201117 14:47:25.827"></status>
</kw>
<msg timestamp="20201117 14:47:25.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024172833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024258028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.539" endtime="20201117 14:47:25.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024172833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024258028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.831" endtime="20201117 14:47:25.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.839" endtime="20201117 14:47:25.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.537" endtime="20201117 14:47:25.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.535" endtime="20201117 14:47:25.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.846" level="INFO">${RESULT} = [{'time': 0.024258028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.519499999999972e-05, 'source_diff': 8.519499999999972e-05}, {'time': 0.024347875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:25.842" endtime="20201117 14:47:25.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.859" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:25.847" endtime="20201117 14:47:25.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.864" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.863" endtime="20201117 14:47:25.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.867" level="INFO">VALUE: [8.519499999999972e-05, 8.420800000000228e-05, 8.404199999999945e-05, 8.406899999999912e-05, 8.408300000000216e-05, 8.372199999999788e-05, 8.425000000000099e-05, 8.416699999999958e-05, 8.386099999999758e-05, 8.366700000000254e-05, 8.427700000000066e-05, 8.375000000000049e-05, 8.372200000000135e-05, 8.383299999999844e-05, 8.420799999999881e-05, 8.373600000000092e-05, 8.36659999999996e-05, 8.405599999999902e-05, 8.384700000000148e-05, 8.38330000000019e-05, 8.4153e-05, 8.427800000000013e-05, 8.424999999999752e-05, 8.42919999999997e-05, 8.375000000000049e-05, 8.398600000000117e-05, 8.422199999999838e-05, 8.387500000000062e-05, 8.372300000000082e-05, 8.372300000000082e-05, 8.426400000000056e-05, 8.415199999999706e-05, 8.391599999999985e-05, 8.402700000000041e-05, 8.429100000000023e-05, 8.427800000000013e-05, 8.417999999999967e-05, 8.422200000000185e-05, 8.367999999999917e-05, 8.412500000000087e-05, 8.413900000000044e-05, 8.386100000000105e-05, 8.401400000000031e-05, 8.388900000000019e-05, 8.400000000000074e-05, 8.4153e-05, 8.411099999999783e-05, 8.388900000000019e-05, 8.384799999999748e-05, 8.427700000000066e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.865" endtime="20201117 14:47:25.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.860" endtime="20201117 14:47:25.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.870" endtime="20201117 14:47:25.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.873" endtime="20201117 14:47:25.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.872" endtime="20201117 14:47:25.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.868" endtime="20201117 14:47:25.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.503" endtime="20201117 14:47:25.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.501" endtime="20201117 14:47:25.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.500" endtime="20201117 14:47:25.894"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.897" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.905" endtime="20201117 14:47:25.924"></status>
</kw>
<msg timestamp="20201117 14:47:25.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.903" endtime="20201117 14:47:25.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.925" endtime="20201117 14:47:25.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.928" endtime="20201117 14:47:25.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.901" endtime="20201117 14:47:25.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.899" endtime="20201117 14:47:25.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.937" endtime="20201117 14:47:26.222"></status>
</kw>
<msg timestamp="20201117 14:47:26.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024008903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024094375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.936" endtime="20201117 14:47:26.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024008903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024094375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.226" endtime="20201117 14:47:26.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.235" endtime="20201117 14:47:26.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.933" endtime="20201117 14:47:26.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.932" endtime="20201117 14:47:26.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:26.241" level="INFO">${RESULT} = [{'time': 0.024094375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.547199999999963e-05, 'source_diff': 8.547199999999963e-05}, {'time': 0.024184222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:26.238" endtime="20201117 14:47:26.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:26.255" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:26.242" endtime="20201117 14:47:26.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.259" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:47:26.258" endtime="20201117 14:47:26.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.262" level="INFO">VALUE: [8.547199999999963e-05, 8.456899999999962e-05, 8.505500000000055e-05, 8.525000000000199e-05, 8.519400000000024e-05, 8.505600000000002e-05, 8.523599999999895e-05, 8.49309999999999e-05, 8.488899999999772e-05, 8.523599999999895e-05, 8.505600000000002e-05, 8.506900000000012e-05, 8.487500000000162e-05, 8.515200000000153e-05, 8.494499999999947e-05, 8.505600000000002e-05, 8.524999999999852e-05, 8.477799999999716e-05, 8.49309999999999e-05, 8.490299999999729e-05, 8.481999999999934e-05, 8.484700000000248e-05, 8.513900000000144e-05, 8.47920000000002e-05, 8.487500000000162e-05, 8.497199999999913e-05, 8.51249999999984e-05, 8.477800000000063e-05, 8.509699999999926e-05, 8.518100000000015e-05, 8.480599999999977e-05, 8.494499999999947e-05, 8.524999999999852e-05, 8.483399999999891e-05, 8.506900000000012e-05, 8.47920000000002e-05, 8.483299999999944e-05, 8.498600000000217e-05, 8.469399999999974e-05, 8.500000000000174e-05, 8.48050000000003e-05, 8.502800000000088e-05, 8.502800000000088e-05, 8.476400000000106e-05, 8.480599999999977e-05, 8.487499999999815e-05, 8.511099999999883e-05, 8.498600000000217e-05, 8.501400000000131e-05, 8.472300000000182e-05]</msg>
<status status="PASS" starttime="20201117 14:47:26.260" endtime="20201117 14:47:26.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.255" endtime="20201117 14:47:26.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.265" endtime="20201117 14:47:26.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:26.268" endtime="20201117 14:47:26.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.266" endtime="20201117 14:47:26.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.263" endtime="20201117 14:47:26.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.897" endtime="20201117 14:47:26.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.896" endtime="20201117 14:47:26.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.895" endtime="20201117 14:47:26.289"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.291" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.300" endtime="20201117 14:47:26.318"></status>
</kw>
<msg timestamp="20201117 14:47:26.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.298" endtime="20201117 14:47:26.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.319" endtime="20201117 14:47:26.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.322" endtime="20201117 14:47:26.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.295" endtime="20201117 14:47:26.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.293" endtime="20201117 14:47:26.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.331" endtime="20201117 14:47:26.616"></status>
</kw>
<msg timestamp="20201117 14:47:26.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024285347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024372542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.329" endtime="20201117 14:47:26.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024285347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024372542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.621" endtime="20201117 14:47:26.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.629" endtime="20201117 14:47:26.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.327" endtime="20201117 14:47:26.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.325" endtime="20201117 14:47:26.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:26.636" level="INFO">${RESULT} = [{'time': 0.024372542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.719500000000172e-05, 'source_diff': 8.719500000000172e-05}, {'time': 0.024463361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:26.632" endtime="20201117 14:47:26.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:26.649" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:26.637" endtime="20201117 14:47:26.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.653" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:47:26.652" endtime="20201117 14:47:26.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.656" level="INFO">VALUE: [8.719500000000172e-05, 8.561099999999933e-05, 8.57920000000012e-05, 8.591700000000133e-05, 8.623699999999943e-05, 8.590299999999829e-05, 8.574999999999902e-05, 8.609700000000026e-05, 8.570800000000031e-05, 8.620900000000029e-05, 8.600000000000274e-05, 8.570899999999979e-05, 8.595900000000004e-05, 8.582000000000034e-05, 8.626299999999962e-05, 8.583300000000044e-05, 8.595800000000056e-05, 8.626399999999909e-05, 8.572199999999988e-05, 8.616700000000158e-05, 8.583300000000044e-05, 8.587499999999915e-05, 8.590299999999829e-05, 8.579199999999773e-05, 8.619500000000072e-05, 8.611099999999983e-05, 8.575000000000249e-05, 8.595799999999709e-05, 8.5847e-05, 8.586099999999958e-05, 8.602800000000188e-05, 8.577800000000163e-05, 8.622200000000038e-05, 8.5847e-05, 8.624999999999952e-05, 8.599999999999927e-05, 8.570800000000031e-05, 8.58050000000013e-05, 8.591599999999838e-05, 8.629199999999823e-05, 8.619400000000124e-05, 8.601399999999884e-05, 8.595800000000056e-05, 8.6153000000002e-05, 8.579100000000173e-05, 8.595800000000056e-05, 8.580600000000077e-05, 8.572299999999936e-05, 8.608400000000016e-05, 8.604200000000145e-05]</msg>
<status status="PASS" starttime="20201117 14:47:26.654" endtime="20201117 14:47:26.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.650" endtime="20201117 14:47:26.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.659" endtime="20201117 14:47:26.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:26.662" endtime="20201117 14:47:26.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.661" endtime="20201117 14:47:26.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.657" endtime="20201117 14:47:26.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.292" endtime="20201117 14:47:26.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.290" endtime="20201117 14:47:26.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.289" endtime="20201117 14:47:26.684"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.686" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.694" endtime="20201117 14:47:26.713"></status>
</kw>
<msg timestamp="20201117 14:47:26.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.693" endtime="20201117 14:47:26.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.714" endtime="20201117 14:47:26.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.717" endtime="20201117 14:47:26.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.690" endtime="20201117 14:47:26.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.688" endtime="20201117 14:47:26.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.726" endtime="20201117 14:47:27.011"></status>
</kw>
<msg timestamp="20201117 14:47:27.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025149375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025237403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.724" endtime="20201117 14:47:27.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025149375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025237403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.015" endtime="20201117 14:47:27.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.024" endtime="20201117 14:47:27.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.722" endtime="20201117 14:47:27.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.720" endtime="20201117 14:47:27.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.030" level="INFO">${RESULT} = [{'time': 0.025237403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.802799999999694e-05, 'source_diff': 8.802799999999694e-05}, {'time': 0.02533025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:27.027" endtime="20201117 14:47:27.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.045" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:27.031" endtime="20201117 14:47:27.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.049" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.048" endtime="20201117 14:47:27.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.052" level="INFO">VALUE: [8.802799999999694e-05, 8.745799999999859e-05, 8.708300000000169e-05, 8.718100000000215e-05, 8.727799999999966e-05, 8.718099999999868e-05, 8.723600000000095e-05, 8.684800000000048e-05, 8.687500000000015e-05, 8.7153000000003e-05, 8.695899999999757e-05, 8.683400000000091e-05, 8.707000000000159e-05, 8.726300000000062e-05, 8.702699999999994e-05, 8.709700000000126e-05, 8.677799999999916e-05, 8.715299999999954e-05, 8.700000000000027e-05, 8.715299999999954e-05, 8.718099999999868e-05, 8.71250000000004e-05, 8.704200000000245e-05, 8.704199999999898e-05, 8.669500000000122e-05, 8.69860000000007e-05, 8.718100000000215e-05, 8.687500000000015e-05, 8.725000000000052e-05, 8.68189999999984e-05, 8.713800000000049e-05, 8.684699999999754e-05, 8.709700000000126e-05, 8.727799999999966e-05, 8.709700000000126e-05, 8.700000000000027e-05, 8.69860000000007e-05, 8.725000000000052e-05, 8.725000000000052e-05, 8.71250000000004e-05, 8.68189999999984e-05, 8.697200000000113e-05, 8.723600000000095e-05, 8.729199999999923e-05, 8.711100000000083e-05, 8.69310000000019e-05, 8.697199999999766e-05, 8.729199999999923e-05, 8.705599999999855e-05, 8.720800000000181e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.050" endtime="20201117 14:47:27.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.046" endtime="20201117 14:47:27.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.055" endtime="20201117 14:47:27.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.059" endtime="20201117 14:47:27.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.057" endtime="20201117 14:47:27.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.054" endtime="20201117 14:47:27.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.687" endtime="20201117 14:47:27.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.685" endtime="20201117 14:47:27.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.684" endtime="20201117 14:47:27.080"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.082" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.090" endtime="20201117 14:47:27.109"></status>
</kw>
<msg timestamp="20201117 14:47:27.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.089" endtime="20201117 14:47:27.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.110" endtime="20201117 14:47:27.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.113" endtime="20201117 14:47:27.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.086" endtime="20201117 14:47:27.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.084" endtime="20201117 14:47:27.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.122" endtime="20201117 14:47:27.407"></status>
</kw>
<msg timestamp="20201117 14:47:27.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023877417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023966, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:27.120" endtime="20201117 14:47:27.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023877417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023966, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:27.411" endtime="20201117 14:47:27.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.419" endtime="20201117 14:47:27.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.117" endtime="20201117 14:47:27.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.116" endtime="20201117 14:47:27.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.426" level="INFO">${RESULT} = [{'time': 0.023966, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.858299999999972e-05, 'source_diff': 8.858299999999972e-05}, {'time': 0.024058819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:27.423" endtime="20201117 14:47:27.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.439" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:27.427" endtime="20201117 14:47:27.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.444" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.443" endtime="20201117 14:47:27.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.447" level="INFO">VALUE: [8.858299999999972e-05, 8.756899999999915e-05, 8.811100000000183e-05, 8.786100000000158e-05, 8.784699999999854e-05, 8.776399999999712e-05, 8.819399999999977e-05, 8.794399999999952e-05, 8.809699999999879e-05, 8.831999999999937e-05, 8.777800000000016e-05, 8.811100000000183e-05, 8.824999999999805e-05, 8.7944999999999e-05, 8.783400000000191e-05, 8.773600000000145e-05, 8.790300000000029e-05, 8.787499999999768e-05, 8.823600000000195e-05, 8.797200000000213e-05, 8.790300000000029e-05, 8.787499999999768e-05, 8.779100000000026e-05, 8.815300000000054e-05, 8.798599999999823e-05, 8.822199999999891e-05, 8.825000000000152e-05, 8.788900000000072e-05, 8.83059999999998e-05, 8.804199999999998e-05, 8.826400000000109e-05, 8.83059999999998e-05, 8.806999999999912e-05, 8.790300000000029e-05, 8.779100000000026e-05, 8.800000000000127e-05, 8.81250000000014e-05, 8.802699999999747e-05, 8.798599999999823e-05, 8.826400000000109e-05, 8.815200000000106e-05, 8.779100000000026e-05, 8.815299999999707e-05, 8.804199999999998e-05, 8.808300000000269e-05, 8.783299999999897e-05, 8.81670000000001e-05, 8.794399999999952e-05, 8.813900000000097e-05, 8.81389999999975e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.445" endtime="20201117 14:47:27.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.440" endtime="20201117 14:47:27.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.450" endtime="20201117 14:47:27.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.453" endtime="20201117 14:47:27.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.452" endtime="20201117 14:47:27.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.448" endtime="20201117 14:47:27.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.083" endtime="20201117 14:47:27.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.081" endtime="20201117 14:47:27.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.080" endtime="20201117 14:47:27.474"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.476" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.485" endtime="20201117 14:47:27.502"></status>
</kw>
<msg timestamp="20201117 14:47:27.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.483" endtime="20201117 14:47:27.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.504" endtime="20201117 14:47:27.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.506" endtime="20201117 14:47:27.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.481" endtime="20201117 14:47:27.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.478" endtime="20201117 14:47:27.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.515" endtime="20201117 14:47:27.801"></status>
</kw>
<msg timestamp="20201117 14:47:27.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023773514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023863194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.514" endtime="20201117 14:47:27.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023773514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023863194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.805" endtime="20201117 14:47:27.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.813" endtime="20201117 14:47:27.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.511" endtime="20201117 14:47:27.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.509" endtime="20201117 14:47:27.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.819" level="INFO">${RESULT} = [{'time': 0.023863194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.96800000000017e-05, 'source_diff': 8.96800000000017e-05}, {'time': 0.023958028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:27.816" endtime="20201117 14:47:27.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.833" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:27.821" endtime="20201117 14:47:27.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.838" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.837" endtime="20201117 14:47:27.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.840" level="INFO">VALUE: [8.96800000000017e-05, 8.94450000000005e-05, 8.876399999999812e-05, 8.916699999999764e-05, 8.888899999999825e-05, 8.88060000000003e-05, 8.870799999999984e-05, 8.898599999999923e-05, 8.912499999999893e-05, 8.886099999999911e-05, 8.877799999999769e-05, 8.915300000000154e-05, 8.88190000000004e-05, 8.877800000000116e-05, 8.891700000000086e-05, 8.883299999999997e-05, 8.883299999999997e-05, 8.904200000000098e-05, 8.91250000000024e-05, 8.8945e-05, 8.906900000000065e-05, 8.8945e-05, 8.922299999999939e-05, 8.916699999999764e-05, 8.888799999999877e-05, 8.926399999999862e-05, 8.892999999999748e-05, 8.922199999999991e-05, 8.93060000000008e-05, 8.901399999999837e-05, 8.876400000000159e-05, 8.918100000000068e-05, 8.93060000000008e-05, 8.879200000000073e-05, 8.886099999999911e-05, 8.924999999999905e-05, 8.927799999999819e-05, 8.933300000000047e-05, 8.873600000000245e-05, 8.920899999999982e-05, 8.934700000000004e-05, 8.879200000000073e-05, 8.881899999999693e-05, 8.922199999999991e-05, 8.879099999999779e-05, 8.887499999999868e-05, 8.929200000000123e-05, 8.886099999999911e-05, 8.877799999999769e-05, 8.884699999999954e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.839" endtime="20201117 14:47:27.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.834" endtime="20201117 14:47:27.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.843" endtime="20201117 14:47:27.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.847" endtime="20201117 14:47:27.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.845" endtime="20201117 14:47:27.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.842" endtime="20201117 14:47:27.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.477" endtime="20201117 14:47:27.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.475" endtime="20201117 14:47:27.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.474" endtime="20201117 14:47:27.868"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.870" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.878" endtime="20201117 14:47:27.897"></status>
</kw>
<msg timestamp="20201117 14:47:27.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.877" endtime="20201117 14:47:27.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.899" endtime="20201117 14:47:27.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.901" endtime="20201117 14:47:27.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.874" endtime="20201117 14:47:27.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.872" endtime="20201117 14:47:27.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.910" endtime="20201117 14:47:28.196"></status>
</kw>
<msg timestamp="20201117 14:47:28.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023870028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023960486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.909" endtime="20201117 14:47:28.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023870028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023960486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.200" endtime="20201117 14:47:28.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.208" endtime="20201117 14:47:28.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.906" endtime="20201117 14:47:28.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.904" endtime="20201117 14:47:28.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:28.215" level="INFO">${RESULT} = [{'time': 0.023960486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.045799999999812e-05, 'source_diff': 9.045799999999812e-05}, {'time': 0.024056333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:28.212" endtime="20201117 14:47:28.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:28.228" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:28.216" endtime="20201117 14:47:28.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.233" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:47:28.232" endtime="20201117 14:47:28.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.235" level="INFO">VALUE: [9.045799999999812e-05, 9.047199999999769e-05, 9.01800000000022e-05, 8.980499999999836e-05, 8.967999999999823e-05, 8.976399999999912e-05, 9.020900000000082e-05, 8.977799999999869e-05, 9.008300000000122e-05, 8.98060000000013e-05, 8.98199999999974e-05, 9.026399999999962e-05, 9.008400000000069e-05, 8.997200000000066e-05, 9.007000000000112e-05, 8.9945000000001e-05, 9.009800000000026e-05, 9.01389999999995e-05, 9.019400000000177e-05, 8.970800000000084e-05, 9.029199999999876e-05, 8.995800000000109e-05, 9.023600000000048e-05, 9.008300000000122e-05, 8.977800000000216e-05, 8.993099999999796e-05, 9.015299999999907e-05, 9.007000000000112e-05, 8.983400000000044e-05, 9.004199999999851e-05, 8.979200000000173e-05, 9.004199999999851e-05, 8.993100000000143e-05, 9.005600000000155e-05, 9.027699999999972e-05, 8.977799999999869e-05, 9.004099999999904e-05, 8.992999999999848e-05, 9.034700000000104e-05, 8.99999999999998e-05, 9.006899999999818e-05, 9.023600000000048e-05, 9.009700000000079e-05, 9.025000000000005e-05, 8.982000000000087e-05, 9.011100000000036e-05, 8.972199999999694e-05, 8.998600000000023e-05, 9.002699999999947e-05, 9.019500000000125e-05]</msg>
<status status="PASS" starttime="20201117 14:47:28.234" endtime="20201117 14:47:28.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.229" endtime="20201117 14:47:28.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.238" endtime="20201117 14:47:28.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:28.242" endtime="20201117 14:47:28.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.240" endtime="20201117 14:47:28.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.237" endtime="20201117 14:47:28.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.871" endtime="20201117 14:47:28.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.869" endtime="20201117 14:47:28.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.868" endtime="20201117 14:47:28.263"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.265" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.273" endtime="20201117 14:47:28.293"></status>
</kw>
<msg timestamp="20201117 14:47:28.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.272" endtime="20201117 14:47:28.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.294" endtime="20201117 14:47:28.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.297" endtime="20201117 14:47:28.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.269" endtime="20201117 14:47:28.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.267" endtime="20201117 14:47:28.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.306" endtime="20201117 14:47:28.590"></status>
</kw>
<msg timestamp="20201117 14:47:28.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024632639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024724833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.304" endtime="20201117 14:47:28.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024632639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024724833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.594" endtime="20201117 14:47:28.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.602" endtime="20201117 14:47:28.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.302" endtime="20201117 14:47:28.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.300" endtime="20201117 14:47:28.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:28.609" level="INFO">${RESULT} = [{'time': 0.024724833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.21940000000003e-05, 'source_diff': 9.21940000000003e-05}, {'time': 0.024821667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:28.606" endtime="20201117 14:47:28.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:28.624" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:28.610" endtime="20201117 14:47:28.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.628" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:47:28.627" endtime="20201117 14:47:28.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.631" level="INFO">VALUE: [9.21940000000003e-05, 9.140300000000032e-05, 9.084800000000101e-05, 9.08190000000024e-05, 9.080499999999936e-05, 9.126300000000115e-05, 9.106899999999918e-05, 9.073600000000098e-05, 9.10000000000008e-05, 9.092999999999948e-05, 9.075000000000055e-05, 9.104199999999951e-05, 9.094400000000252e-05, 9.080599999999883e-05, 9.115300000000007e-05, 9.072200000000141e-05, 9.069499999999828e-05, 9.125000000000105e-05, 9.087500000000068e-05, 9.079199999999926e-05, 9.091699999999939e-05, 9.108299999999875e-05, 9.115300000000007e-05, 9.072200000000141e-05, 9.092999999999948e-05, 9.116600000000016e-05, 9.075000000000055e-05, 9.105599999999908e-05, 9.122200000000191e-05, 9.087500000000068e-05, 9.120800000000234e-05, 9.126400000000062e-05, 9.080599999999883e-05, 9.125000000000105e-05, 9.079099999999979e-05, 9.123599999999801e-05, 9.127800000000019e-05, 9.105599999999908e-05, 9.079099999999979e-05, 9.10130000000009e-05, 9.10000000000008e-05, 9.093000000000295e-05, 9.097199999999819e-05, 9.087499999999721e-05, 9.105499999999961e-05, 9.122199999999844e-05, 9.094400000000252e-05, 9.126400000000062e-05, 9.077799999999969e-05, 9.086100000000111e-05]</msg>
<status status="PASS" starttime="20201117 14:47:28.629" endtime="20201117 14:47:28.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.624" endtime="20201117 14:47:28.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.634" endtime="20201117 14:47:28.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:28.637" endtime="20201117 14:47:28.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.635" endtime="20201117 14:47:28.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.632" endtime="20201117 14:47:28.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.266" endtime="20201117 14:47:28.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.264" endtime="20201117 14:47:28.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.263" endtime="20201117 14:47:28.658"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.660" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.668" endtime="20201117 14:47:28.687"></status>
</kw>
<msg timestamp="20201117 14:47:28.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.667" endtime="20201117 14:47:28.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.689" endtime="20201117 14:47:28.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.692" endtime="20201117 14:47:28.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.664" endtime="20201117 14:47:28.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.662" endtime="20201117 14:47:28.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.701" endtime="20201117 14:47:28.987"></status>
</kw>
<msg timestamp="20201117 14:47:28.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023826931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023920056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.700" endtime="20201117 14:47:28.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023826931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023920056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.991" endtime="20201117 14:47:28.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.999" endtime="20201117 14:47:29.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.697" endtime="20201117 14:47:29.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.695" endtime="20201117 14:47:29.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.006" level="INFO">${RESULT} = [{'time': 0.023920056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.312499999999946e-05, 'source_diff': 9.312499999999946e-05}, {'time': 0.024017903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:29.002" endtime="20201117 14:47:29.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.019" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:29.007" endtime="20201117 14:47:29.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.024" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.023" endtime="20201117 14:47:29.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.026" level="INFO">VALUE: [9.312499999999946e-05, 9.208399999999922e-05, 9.172199999999894e-05, 9.220899999999935e-05, 9.218100000000021e-05, 9.176299999999818e-05, 9.19719999999992e-05, 9.198699999999824e-05, 9.170799999999937e-05, 9.195799999999962e-05, 9.227800000000119e-05, 9.173600000000198e-05, 9.225000000000205e-05, 9.162500000000143e-05, 9.198599999999876e-05, 9.179200000000026e-05, 9.191700000000039e-05, 9.208299999999975e-05, 9.223599999999901e-05, 9.191700000000039e-05, 9.222300000000239e-05, 9.188900000000125e-05, 9.176400000000112e-05, 9.208399999999922e-05, 9.177800000000069e-05, 9.179100000000079e-05, 9.229200000000076e-05, 9.211099999999889e-05, 9.202799999999747e-05, 9.192999999999701e-05, 9.194400000000005e-05, 9.18199999999994e-05, 9.21940000000003e-05, 9.18199999999994e-05, 9.180599999999983e-05, 9.226399999999815e-05, 9.168099999999971e-05, 9.183399999999897e-05, 9.206999999999965e-05, 9.215300000000107e-05, 9.219500000000325e-05, 9.213800000000202e-05, 9.179200000000026e-05, 9.181899999999993e-05, 9.175000000000155e-05, 9.186099999999864e-05, 9.227799999999772e-05, 9.184699999999907e-05, 9.218000000000073e-05, 9.198599999999876e-05]</msg>
<status status="PASS" starttime="20201117 14:47:29.025" endtime="20201117 14:47:29.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.020" endtime="20201117 14:47:29.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.029" endtime="20201117 14:47:29.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.033" endtime="20201117 14:47:29.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.031" endtime="20201117 14:47:29.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.027" endtime="20201117 14:47:29.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.661" endtime="20201117 14:47:29.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.659" endtime="20201117 14:47:29.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.658" endtime="20201117 14:47:29.054"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.056" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.064" endtime="20201117 14:47:29.083"></status>
</kw>
<msg timestamp="20201117 14:47:29.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.063" endtime="20201117 14:47:29.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.084" endtime="20201117 14:47:29.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.087" endtime="20201117 14:47:29.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.060" endtime="20201117 14:47:29.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.058" endtime="20201117 14:47:29.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.095" endtime="20201117 14:47:29.381"></status>
</kw>
<msg timestamp="20201117 14:47:29.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024315667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024409833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.094" endtime="20201117 14:47:29.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024315667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024409833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.385" endtime="20201117 14:47:29.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.393" endtime="20201117 14:47:29.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.091" endtime="20201117 14:47:29.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.090" endtime="20201117 14:47:29.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.400" level="INFO">${RESULT} = [{'time': 0.024409833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.41659999999997e-05, 'source_diff': 9.41659999999997e-05}, {'time': 0.024508681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:29.396" endtime="20201117 14:47:29.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.413" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:29.401" endtime="20201117 14:47:29.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.417" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.416" endtime="20201117 14:47:29.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.420" level="INFO">VALUE: [9.41659999999997e-05, 9.315300000000207e-05, 9.286099999999964e-05, 9.319500000000078e-05, 9.297299999999967e-05, 9.28879999999993e-05, 9.299999999999933e-05, 9.322200000000044e-05, 9.302800000000194e-05, 9.290299999999835e-05, 9.301400000000237e-05, 9.276400000000212e-05, 9.316699999999817e-05, 9.330599999999786e-05, 9.31529999999986e-05, 9.297299999999967e-05, 9.307000000000065e-05, 9.324999999999958e-05, 9.302799999999847e-05, 9.311099999999989e-05, 9.307000000000065e-05, 9.318100000000121e-05, 9.299999999999933e-05, 9.280499999999789e-05, 9.301299999999943e-05, 9.313899999999903e-05, 9.294400000000105e-05, 9.292999999999801e-05, 9.30139999999989e-05, 9.326399999999915e-05, 9.261099999999939e-05, 9.308300000000075e-05, 9.316700000000164e-05, 9.302799999999847e-05, 9.279199999999779e-05, 9.294399999999758e-05, 9.322299999999992e-05, 9.276400000000212e-05, 9.322299999999992e-05, 9.304099999999857e-05, 9.293000000000148e-05, 9.322200000000044e-05, 9.28330000000005e-05, 9.286099999999964e-05, 9.32079999999974e-05, 9.31940000000013e-05, 9.277799999999822e-05, 9.318100000000121e-05, 9.29720000000002e-05, 9.28330000000005e-05]</msg>
<status status="PASS" starttime="20201117 14:47:29.418" endtime="20201117 14:47:29.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.414" endtime="20201117 14:47:29.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.423" endtime="20201117 14:47:29.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.426" endtime="20201117 14:47:29.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.425" endtime="20201117 14:47:29.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.421" endtime="20201117 14:47:29.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.056" endtime="20201117 14:47:29.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.055" endtime="20201117 14:47:29.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.054" endtime="20201117 14:47:29.448"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.450" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.458" endtime="20201117 14:47:29.476"></status>
</kw>
<msg timestamp="20201117 14:47:29.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.457" endtime="20201117 14:47:29.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.478" endtime="20201117 14:47:29.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.481" endtime="20201117 14:47:29.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.454" endtime="20201117 14:47:29.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.452" endtime="20201117 14:47:29.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.490" endtime="20201117 14:47:29.775"></status>
</kw>
<msg timestamp="20201117 14:47:29.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024359625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024453944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.488" endtime="20201117 14:47:29.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024359625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024453944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.779" endtime="20201117 14:47:29.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.787" endtime="20201117 14:47:29.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.485" endtime="20201117 14:47:29.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.484" endtime="20201117 14:47:29.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.794" level="INFO">${RESULT} = [{'time': 0.024453944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.431899999999896e-05, 'source_diff': 9.431899999999896e-05}, {'time': 0.024553792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:29.791" endtime="20201117 14:47:29.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.807" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:29.795" endtime="20201117 14:47:29.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.812" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.811" endtime="20201117 14:47:29.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.814" level="INFO">VALUE: [9.431899999999896e-05, 9.425000000000058e-05, 9.40139999999999e-05, 9.380599999999836e-05, 9.415200000000012e-05, 9.373600000000051e-05, 9.38469999999976e-05, 9.391600000000291e-05, 9.40139999999999e-05, 9.381900000000193e-05, 9.409699999999785e-05, 9.388899999999978e-05, 9.423599999999754e-05, 9.38330000000015e-05, 9.376399999999965e-05, 9.39720000000012e-05, 9.430600000000233e-05, 9.429199999999929e-05, 9.383400000000097e-05, 9.408400000000122e-05, 9.387499999999674e-05, 9.379199999999879e-05, 9.400000000000033e-05, 9.425000000000058e-05, 9.41659999999997e-05, 9.388899999999978e-05, 9.406899999999871e-05, 9.375000000000008e-05, 9.375000000000008e-05, 9.391699999999892e-05, 9.425000000000058e-05, 9.391699999999892e-05, 9.398600000000076e-05, 9.388899999999978e-05, 9.380600000000183e-05, 9.36529999999991e-05, 9.422300000000092e-05, 9.376399999999965e-05, 9.394400000000205e-05, 9.394400000000205e-05, 9.39720000000012e-05, 9.408299999999828e-05, 9.395800000000162e-05, 9.400000000000033e-05, 9.395800000000162e-05, 9.387500000000021e-05, 9.376399999999965e-05, 9.375000000000008e-05, 9.41529999999996e-05, 9.427799999999972e-05]</msg>
<status status="PASS" starttime="20201117 14:47:29.813" endtime="20201117 14:47:29.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.808" endtime="20201117 14:47:29.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.818" endtime="20201117 14:47:29.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.821" endtime="20201117 14:47:29.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.820" endtime="20201117 14:47:29.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.816" endtime="20201117 14:47:29.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.451" endtime="20201117 14:47:29.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.449" endtime="20201117 14:47:29.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.448" endtime="20201117 14:47:29.842"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.845" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.853" endtime="20201117 14:47:29.872"></status>
</kw>
<msg timestamp="20201117 14:47:29.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.851" endtime="20201117 14:47:29.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.874" endtime="20201117 14:47:29.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.876" endtime="20201117 14:47:29.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.849" endtime="20201117 14:47:29.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.847" endtime="20201117 14:47:29.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.885" endtime="20201117 14:47:30.171"></status>
</kw>
<msg timestamp="20201117 14:47:30.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024802694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024898403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.884" endtime="20201117 14:47:30.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024802694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024898403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.175" endtime="20201117 14:47:30.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.184" endtime="20201117 14:47:30.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.881" endtime="20201117 14:47:30.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.880" endtime="20201117 14:47:30.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:30.190" level="INFO">${RESULT} = [{'time': 0.024898403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.570899999999938e-05, 'source_diff': 9.570899999999938e-05}, {'time': 0.024998208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:30.187" endtime="20201117 14:47:30.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:30.205" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:30.191" endtime="20201117 14:47:30.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.209" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:47:30.208" endtime="20201117 14:47:30.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.216" level="INFO">VALUE: [9.570899999999938e-05, 9.455499999999964e-05, 9.518000000000026e-05, 9.518000000000026e-05, 9.494399999999958e-05, 9.495800000000262e-05, 9.519399999999983e-05, 9.493099999999949e-05, 9.52079999999994e-05, 9.519500000000278e-05, 9.527800000000072e-05, 9.468099999999924e-05, 9.488899999999731e-05, 9.470900000000185e-05, 9.502800000000047e-05, 9.475000000000108e-05, 9.490200000000087e-05, 9.488799999999784e-05, 9.525000000000158e-05, 9.498600000000176e-05, 9.524999999999811e-05, 9.476399999999718e-05, 9.506899999999971e-05, 9.493000000000001e-05, 9.516700000000017e-05, 9.493100000000296e-05, 9.523600000000201e-05, 9.529200000000029e-05, 9.520899999999888e-05, 9.48339999999985e-05, 9.476399999999718e-05, 9.51530000000006e-05, 9.52079999999994e-05, 9.506899999999971e-05, 9.518000000000026e-05, 9.505500000000014e-05, 9.511100000000189e-05, 9.475000000000108e-05, 9.523599999999854e-05, 9.529200000000029e-05, 9.529200000000029e-05, 9.483299999999903e-05, 9.509699999999885e-05, 9.511099999999842e-05, 9.52079999999994e-05, 9.504200000000004e-05, 9.495899999999863e-05, 9.484800000000154e-05, 9.525000000000158e-05, 9.458299999999878e-05]</msg>
<status status="PASS" starttime="20201117 14:47:30.210" endtime="20201117 14:47:30.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.206" endtime="20201117 14:47:30.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.219" endtime="20201117 14:47:30.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:30.222" endtime="20201117 14:47:30.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.221" endtime="20201117 14:47:30.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.217" endtime="20201117 14:47:30.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.845" endtime="20201117 14:47:30.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.844" endtime="20201117 14:47:30.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.843" endtime="20201117 14:47:30.243"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.246" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.254" endtime="20201117 14:47:30.273"></status>
</kw>
<msg timestamp="20201117 14:47:30.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.252" endtime="20201117 14:47:30.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.274" endtime="20201117 14:47:30.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.277" endtime="20201117 14:47:30.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.250" endtime="20201117 14:47:30.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.248" endtime="20201117 14:47:30.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.286" endtime="20201117 14:47:30.571"></status>
</kw>
<msg timestamp="20201117 14:47:30.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023770069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023867111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.284" endtime="20201117 14:47:30.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023770069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023867111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.575" endtime="20201117 14:47:30.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.583" endtime="20201117 14:47:30.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.282" endtime="20201117 14:47:30.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.280" endtime="20201117 14:47:30.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:30.590" level="INFO">${RESULT} = [{'time': 0.023867111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.704199999999857e-05, 'source_diff': 9.704199999999857e-05}, {'time': 0.023967986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:30.587" endtime="20201117 14:47:30.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:30.604" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:30.591" endtime="20201117 14:47:30.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.608" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:47:30.607" endtime="20201117 14:47:30.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.611" level="INFO">VALUE: [9.704199999999857e-05, 9.561099999999892e-05, 9.622199999999997e-05, 9.586099999999917e-05, 9.600000000000233e-05, 9.587500000000221e-05, 9.613899999999856e-05, 9.61530000000016e-05, 9.594500000000006e-05, 9.588899999999831e-05, 9.61669999999977e-05, 9.58339999999995e-05, 9.6027999999998e-05, 9.579200000000079e-05, 9.595899999999963e-05, 9.615199999999866e-05, 9.594400000000058e-05, 9.572199999999947e-05, 9.618000000000126e-05, 9.588900000000178e-05, 9.613900000000203e-05, 9.626400000000215e-05, 9.583300000000003e-05, 9.579200000000079e-05, 9.594400000000058e-05, 9.586099999999917e-05, 9.590299999999788e-05, 9.612499999999899e-05, 9.620899999999988e-05, 9.568100000000024e-05, 9.612499999999899e-05, 9.573599999999904e-05, 9.580500000000089e-05, 9.591700000000092e-05, 9.577700000000175e-05, 9.613899999999856e-05, 9.583300000000003e-05, 9.61530000000016e-05, 9.623600000000301e-05, 9.594400000000058e-05, 9.626399999999868e-05, 9.595800000000015e-05, 9.601399999999843e-05, 9.599999999999886e-05, 9.622199999999997e-05, 9.573599999999904e-05, 9.627799999999825e-05, 9.587499999999874e-05, 9.613899999999856e-05, 9.579100000000132e-05]</msg>
<status status="PASS" starttime="20201117 14:47:30.609" endtime="20201117 14:47:30.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.605" endtime="20201117 14:47:30.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.614" endtime="20201117 14:47:30.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:30.617" endtime="20201117 14:47:30.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.616" endtime="20201117 14:47:30.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.612" endtime="20201117 14:47:30.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.246" endtime="20201117 14:47:30.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.245" endtime="20201117 14:47:30.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.244" endtime="20201117 14:47:30.638"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.641" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.649" endtime="20201117 14:47:30.668"></status>
</kw>
<msg timestamp="20201117 14:47:30.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.647" endtime="20201117 14:47:30.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.669" endtime="20201117 14:47:30.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.672" endtime="20201117 14:47:30.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.645" endtime="20201117 14:47:30.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.643" endtime="20201117 14:47:30.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.681" endtime="20201117 14:47:30.967"></status>
</kw>
<msg timestamp="20201117 14:47:30.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024016042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024113833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.679" endtime="20201117 14:47:30.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024016042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024113833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.971" endtime="20201117 14:47:30.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.979" endtime="20201117 14:47:30.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.676" endtime="20201117 14:47:30.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.675" endtime="20201117 14:47:30.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:30.986" level="INFO">${RESULT} = [{'time': 0.024113833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.779099999999985e-05, 'source_diff': 9.779099999999985e-05}, {'time': 0.024216667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:30.983" endtime="20201117 14:47:30.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:30.999" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:30.987" endtime="20201117 14:47:31.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.004" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.003" endtime="20201117 14:47:31.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.006" level="INFO">VALUE: [9.779099999999985e-05, 9.72920000000023e-05, 9.713799999999662e-05, 9.701299999999996e-05, 9.695900000000063e-05, 9.69860000000003e-05, 9.693000000000201e-05, 9.677700000000275e-05, 9.695799999999768e-05, 9.705499999999867e-05, 9.67920000000018e-05, 9.681899999999799e-05, 9.712499999999999e-05, 9.694400000000158e-05, 9.73470000000011e-05, 9.7027999999999e-05, 9.686100000000017e-05, 9.70140000000029e-05, 9.690299999999888e-05, 9.708400000000075e-05, 9.719499999999784e-05, 9.707000000000118e-05, 9.712499999999999e-05, 9.686100000000017e-05, 9.719400000000183e-05, 9.726399999999968e-05, 9.722200000000097e-05, 9.681900000000146e-05, 9.726399999999968e-05, 9.677799999999875e-05, 9.701399999999943e-05, 9.712499999999999e-05, 9.669500000000081e-05, 9.716700000000217e-05, 9.701299999999996e-05, 9.701399999999943e-05, 9.726300000000021e-05, 9.701299999999996e-05, 9.712499999999999e-05, 9.715299999999913e-05, 9.70409999999991e-05, 9.701399999999943e-05, 9.690300000000235e-05, 9.720799999999793e-05, 9.699999999999986e-05, 9.680499999999842e-05, 9.709700000000085e-05, 9.67080000000009e-05, 9.723600000000054e-05, 9.725000000000011e-05]</msg>
<status status="PASS" starttime="20201117 14:47:31.005" endtime="20201117 14:47:31.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.000" endtime="20201117 14:47:31.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.009" endtime="20201117 14:47:31.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.013" endtime="20201117 14:47:31.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.011" endtime="20201117 14:47:31.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.008" endtime="20201117 14:47:31.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.641" endtime="20201117 14:47:31.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.639" endtime="20201117 14:47:31.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.638" endtime="20201117 14:47:31.034"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.036" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.044" endtime="20201117 14:47:31.063"></status>
</kw>
<msg timestamp="20201117 14:47:31.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.043" endtime="20201117 14:47:31.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.064" endtime="20201117 14:47:31.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.067" endtime="20201117 14:47:31.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.040" endtime="20201117 14:47:31.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.038" endtime="20201117 14:47:31.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.076" endtime="20201117 14:47:31.362"></status>
</kw>
<msg timestamp="20201117 14:47:31.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024039014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024137806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.074" endtime="20201117 14:47:31.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024039014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024137806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.366" endtime="20201117 14:47:31.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.374" endtime="20201117 14:47:31.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.072" endtime="20201117 14:47:31.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.070" endtime="20201117 14:47:31.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.381" level="INFO">${RESULT} = [{'time': 0.024137806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.879200000000032e-05, 'source_diff': 9.879200000000032e-05}, {'time': 0.024241653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:31.378" endtime="20201117 14:47:31.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.394" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:31.382" endtime="20201117 14:47:31.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.399" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.398" endtime="20201117 14:47:31.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.401" level="INFO">VALUE: [9.879200000000032e-05, 9.824999999999764e-05, 9.791599999999998e-05, 9.806999999999871e-05, 9.782000000000193e-05, 9.8028e-05, 9.82219999999985e-05, 9.833299999999906e-05, 9.825000000000111e-05, 9.812499999999752e-05, 9.77080000000019e-05, 9.816600000000023e-05, 9.775000000000061e-05, 9.800000000000086e-05, 9.795799999999869e-05, 9.809700000000185e-05, 9.794499999999859e-05, 9.781999999999846e-05, 9.812500000000099e-05, 9.790299999999988e-05, 9.788900000000031e-05, 9.798700000000077e-05, 9.818099999999927e-05, 9.787500000000074e-05, 9.809700000000185e-05, 9.773599999999757e-05, 9.805499999999967e-05, 9.812500000000099e-05, 9.823599999999807e-05, 9.786100000000117e-05, 9.805599999999914e-05, 9.827800000000025e-05, 9.78059999999989e-05, 9.801400000000043e-05, 9.78470000000016e-05, 9.78340000000015e-05, 9.772299999999748e-05, 9.815300000000013e-05, 9.823599999999807e-05, 9.795899999999816e-05, 9.801300000000096e-05, 9.80410000000001e-05, 9.787499999999727e-05, 9.819399999999937e-05, 9.792999999999955e-05, 9.781999999999846e-05, 9.794399999999912e-05, 9.774999999999714e-05, 9.805499999999967e-05, 9.787499999999727e-05]</msg>
<status status="PASS" starttime="20201117 14:47:31.400" endtime="20201117 14:47:31.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.395" endtime="20201117 14:47:31.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.404" endtime="20201117 14:47:31.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.408" endtime="20201117 14:47:31.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.406" endtime="20201117 14:47:31.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.403" endtime="20201117 14:47:31.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.037" endtime="20201117 14:47:31.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.035" endtime="20201117 14:47:31.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.034" endtime="20201117 14:47:31.429"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.431" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.439" endtime="20201117 14:47:31.459"></status>
</kw>
<msg timestamp="20201117 14:47:31.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.437" endtime="20201117 14:47:31.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.460" endtime="20201117 14:47:31.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.463" endtime="20201117 14:47:31.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.435" endtime="20201117 14:47:31.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.433" endtime="20201117 14:47:31.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.472" endtime="20201117 14:47:31.757"></status>
</kw>
<msg timestamp="20201117 14:47:31.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024787292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024887472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.470" endtime="20201117 14:47:31.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024787292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024887472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.762" endtime="20201117 14:47:31.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.770" endtime="20201117 14:47:31.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.468" endtime="20201117 14:47:31.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.466" endtime="20201117 14:47:31.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.776" level="INFO">${RESULT} = [{'time': 0.024887472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001001800000000018, 'source_diff': 0.0001001800000000018}, {'time': 0.024992319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:31.773" endtime="20201117 14:47:31.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.791" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:31.777" endtime="20201117 14:47:31.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.795" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.794" endtime="20201117 14:47:31.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.798" level="INFO">VALUE: [0.0001001800000000018, 9.926299999999874e-05, 9.90549999999972e-05, 9.888899999999784e-05, 9.927800000000125e-05, 9.887500000000174e-05, 9.887500000000174e-05, 9.905500000000067e-05, 9.8721999999999e-05, 9.875000000000161e-05, 9.873599999999857e-05, 9.874999999999814e-05, 9.888900000000131e-05, 9.933300000000006e-05, 9.923599999999907e-05, 9.877799999999728e-05, 9.877800000000075e-05, 9.89730000000022e-05, 9.913900000000156e-05, 9.900000000000186e-05, 9.877800000000075e-05, 9.92219999999995e-05, 9.90410000000011e-05, 9.91800000000008e-05, 9.888899999999784e-05, 9.93060000000004e-05, 9.915299999999766e-05, 9.8721999999999e-05, 9.888899999999784e-05, 9.882000000000293e-05, 9.913900000000156e-05, 9.9028000000001e-05, 9.873599999999857e-05, 9.897299999999873e-05, 9.880500000000042e-05, 9.924999999999864e-05, 9.912499999999852e-05, 9.900000000000186e-05, 9.901399999999796e-05, 9.879199999999685e-05, 9.909699999999938e-05, 9.892999999999708e-05, 9.897200000000272e-05, 9.872200000000247e-05, 9.89860000000023e-05, 9.91670000000007e-05, 9.912499999999852e-05, 9.873599999999857e-05, 9.912500000000199e-05, 9.894499999999959e-05]</msg>
<status status="PASS" starttime="20201117 14:47:31.796" endtime="20201117 14:47:31.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.792" endtime="20201117 14:47:31.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.801" endtime="20201117 14:47:31.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.804" endtime="20201117 14:47:31.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.803" endtime="20201117 14:47:31.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.799" endtime="20201117 14:47:31.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.432" endtime="20201117 14:47:31.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.430" endtime="20201117 14:47:31.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.429" endtime="20201117 14:47:31.825"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.828" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.836" endtime="20201117 14:47:31.855"></status>
</kw>
<msg timestamp="20201117 14:47:31.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.835" endtime="20201117 14:47:31.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.856" endtime="20201117 14:47:31.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.859" endtime="20201117 14:47:31.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.832" endtime="20201117 14:47:31.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.830" endtime="20201117 14:47:31.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.868" endtime="20201117 14:47:32.154"></status>
</kw>
<msg timestamp="20201117 14:47:32.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024306292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02440725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:31.866" endtime="20201117 14:47:32.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024306292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02440725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:32.158" endtime="20201117 14:47:32.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.166" endtime="20201117 14:47:32.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.864" endtime="20201117 14:47:32.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.862" endtime="20201117 14:47:32.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:32.173" level="INFO">${RESULT} = [{'time': 0.02440725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010095799999999822, 'source_diff': 0.00010095799999999822}, {'time': 0.024513097, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:32.169" endtime="20201117 14:47:32.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:32.186" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:32.174" endtime="20201117 14:47:32.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.190" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:47:32.189" endtime="20201117 14:47:32.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.193" level="INFO">VALUE: [0.00010095799999999822, 0.0001001800000000018, 9.997200000000026e-05, 9.99999999999994e-05, 0.00010019400000000137, 9.98609999999997e-05, 9.983300000000056e-05, 0.00010012499999999952, 9.995800000000069e-05, 0.00010008400000000028, 0.00010015299999999866, 9.98060000000009e-05, 9.99999999999994e-05, 0.00010001299999999949, 0.00010012499999999952, 9.976300000000271e-05, 0.0001002220000000005, 9.98609999999997e-05, 9.995800000000069e-05, 0.00010029199999999835, 9.998599999999983e-05, 9.998599999999983e-05, 0.00010002799999999853, 9.995800000000069e-05, 0.000100028000000002, 0.00010027799999999878, 9.990299999999841e-05, 0.00010020900000000041, 9.977799999999828e-05, 9.988899999999884e-05, 9.979199999999785e-05, 9.994399999999765e-05, 9.994399999999765e-05, 0.0001000549999999982, 9.995800000000069e-05, 9.977800000000175e-05, 9.9722e-05, 9.98609999999997e-05, 9.993100000000102e-05, 0.00010018100000000127, 0.00010020800000000094, 0.00010012499999999952, 0.00010026399999999921, 0.0001001809999999978, 0.00010012499999999952, 0.00010022299999999998, 0.00010004099999999863, 9.973599999999957e-05, 0.0001000549999999982, 0.00010020800000000094]</msg>
<status status="PASS" starttime="20201117 14:47:32.191" endtime="20201117 14:47:32.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.187" endtime="20201117 14:47:32.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.196" endtime="20201117 14:47:32.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:32.199" endtime="20201117 14:47:32.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.198" endtime="20201117 14:47:32.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.194" endtime="20201117 14:47:32.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.828" endtime="20201117 14:47:32.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.826" endtime="20201117 14:47:32.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.826" endtime="20201117 14:47:32.221"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.223" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.231" endtime="20201117 14:47:32.250"></status>
</kw>
<msg timestamp="20201117 14:47:32.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.230" endtime="20201117 14:47:32.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.252" endtime="20201117 14:47:32.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.254" endtime="20201117 14:47:32.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.227" endtime="20201117 14:47:32.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.225" endtime="20201117 14:47:32.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.263" endtime="20201117 14:47:32.549"></status>
</kw>
<msg timestamp="20201117 14:47:32.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024217181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024319167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.262" endtime="20201117 14:47:32.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024217181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024319167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.553" endtime="20201117 14:47:32.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.561" endtime="20201117 14:47:32.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.259" endtime="20201117 14:47:32.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.257" endtime="20201117 14:47:32.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:32.567" level="INFO">${RESULT} = [{'time': 0.024319167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010198599999999836, 'source_diff': 0.00010198599999999836}, {'time': 0.024426069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:32.564" endtime="20201117 14:47:32.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:32.580" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:32.568" endtime="20201117 14:47:32.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.585" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:47:32.584" endtime="20201117 14:47:32.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.587" level="INFO">VALUE: [0.00010198599999999836, 0.00010137500000000077, 0.00010107000000000171, 0.00010084699999999766, 0.00010076399999999971, 0.00010073600000000058, 0.00010088800000000037, 0.00010095799999999822, 0.00010090199999999994, 0.00010115299999999966, 0.0001010000000000004, 0.00010084699999999766, 0.00010091699999999898, 0.00010083299999999809, 0.00010098600000000083, 0.00010083299999999809, 0.00010106900000000224, 0.00010080599999999842, 0.0001008610000000007, 0.00010088899999999984, 0.00010107000000000171, 0.0001011809999999988, 0.00010070900000000091, 0.00010081899999999852, 0.00010111100000000095, 0.0001010549999999992, 0.00010125000000000065, 0.00010090299999999941, 0.00010120800000000194, 0.00010126400000000021, 0.00010094400000000212, 0.00010113900000000009, 0.00010095800000000169, 0.00010130599999999892, 0.0001008610000000007, 0.00010076399999999971, 0.0001010549999999992, 0.00010113900000000009, 0.00010112500000000052, 0.00010106899999999877, 0.00010092999999999908, 0.00010077699999999981, 0.00010095800000000169, 0.00010127800000000325, 0.00010105599999999867, 0.00010115299999999966, 0.00010120799999999847, 0.00010076399999999971, 0.00010115299999999966, 0.0001007359999999971]</msg>
<status status="PASS" starttime="20201117 14:47:32.586" endtime="20201117 14:47:32.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.581" endtime="20201117 14:47:32.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.591" endtime="20201117 14:47:32.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:32.594" endtime="20201117 14:47:32.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.593" endtime="20201117 14:47:32.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.589" endtime="20201117 14:47:32.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.223" endtime="20201117 14:47:32.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.222" endtime="20201117 14:47:32.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.221" endtime="20201117 14:47:32.615"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.617" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.626" endtime="20201117 14:47:32.645"></status>
</kw>
<msg timestamp="20201117 14:47:32.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.624" endtime="20201117 14:47:32.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.646" endtime="20201117 14:47:32.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.649" endtime="20201117 14:47:32.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.622" endtime="20201117 14:47:32.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.620" endtime="20201117 14:47:32.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.658" endtime="20201117 14:47:32.943"></status>
</kw>
<msg timestamp="20201117 14:47:32.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024157708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024260792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.656" endtime="20201117 14:47:32.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024157708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024260792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.947" endtime="20201117 14:47:32.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.955" endtime="20201117 14:47:32.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.654" endtime="20201117 14:47:32.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.652" endtime="20201117 14:47:32.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:32.962" level="INFO">${RESULT} = [{'time': 0.024260792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010308399999999981, 'source_diff': 0.00010308399999999981}, {'time': 0.024368625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:32.958" endtime="20201117 14:47:32.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:32.975" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:32.963" endtime="20201117 14:47:32.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.980" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:47:32.979" endtime="20201117 14:47:32.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.983" level="INFO">VALUE: [0.00010308399999999981, 0.00010238900000000134, 0.00010176400000000071, 0.0001021939999999999, 0.00010179199999999985, 0.0001020139999999975, 0.00010226400000000122, 0.00010208300000000281, 0.00010215300000000066, 0.00010183399999999856, 0.00010193099999999955, 0.00010227800000000078, 0.0001018610000000017, 0.00010170799999999897, 0.00010208299999999934, 0.0001020000000000014, 0.00010176400000000071, 0.00010225000000000165, 0.0001022359999999986, 0.00010206999999999924, 0.00010230500000000045, 0.00010212500000000152, 0.00010233399999999906, 0.00010222199999999904, 0.00010202799999999707, 0.00010193099999999955, 0.00010188900000000084, 0.00010172299999999801, 0.00010202800000000053, 0.0001022359999999986, 0.00010227700000000131, 0.000101722000000002, 0.00010194399999999965, 0.00010188900000000084, 0.0001021809999999998, 0.00010224999999999818, 0.00010218100000000327, 0.00010208299999999934, 0.00010191699999999998, 0.0001021809999999998, 0.00010173600000000158, 0.00010198599999999836, 0.00010213899999999762, 0.00010191699999999998, 0.00010197300000000173, 0.00010177700000000081, 0.00010218000000000033, 0.00010199999999999793, 0.00010193099999999955, 0.00010179100000000038]</msg>
<status status="PASS" starttime="20201117 14:47:32.981" endtime="20201117 14:47:32.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.976" endtime="20201117 14:47:32.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.986" endtime="20201117 14:47:32.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:32.989" endtime="20201117 14:47:33.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.988" endtime="20201117 14:47:33.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.984" endtime="20201117 14:47:33.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.618" endtime="20201117 14:47:33.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.616" endtime="20201117 14:47:33.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.615" endtime="20201117 14:47:33.011"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.013" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.021" endtime="20201117 14:47:33.041"></status>
</kw>
<msg timestamp="20201117 14:47:33.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.019" endtime="20201117 14:47:33.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.043" endtime="20201117 14:47:33.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.045" endtime="20201117 14:47:33.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.017" endtime="20201117 14:47:33.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.015" endtime="20201117 14:47:33.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.054" endtime="20201117 14:47:33.340"></status>
</kw>
<msg timestamp="20201117 14:47:33.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024799153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024903097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.053" endtime="20201117 14:47:33.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024799153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024903097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.344" endtime="20201117 14:47:33.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.351" endtime="20201117 14:47:33.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.050" endtime="20201117 14:47:33.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.048" endtime="20201117 14:47:33.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.358" level="INFO">${RESULT} = [{'time': 0.024903097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010394399999999818, 'source_diff': 0.00010394399999999818}, {'time': 0.025011931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:33.355" endtime="20201117 14:47:33.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.373" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:33.359" endtime="20201117 14:47:33.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.377" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.376" endtime="20201117 14:47:33.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.380" level="INFO">VALUE: [0.00010394399999999818, 0.00010329200000000135, 0.00010279100000000138, 0.00010270799999999997, 0.000103207999999997, 0.00010290299999999794, 0.00010291699999999751, 0.00010320800000000047, 0.0001030550000000012, 0.00010320800000000047, 0.00010305600000000067, 0.00010298599999999936, 0.00010274999999999868, 0.00010277800000000128, 0.00010316700000000123, 0.00010315300000000166, 0.00010305600000000067, 0.00010324999999999918, 0.00010295800000000022, 0.00010305499999999773, 0.00010324999999999918, 0.00010298699999999883, 0.0001028749999999988, 0.00010277800000000128, 0.00010284699999999966, 0.00010281900000000052, 0.00010295800000000022, 0.00010327800000000179, 0.00010307000000000024, 0.00010312500000000252, 0.00010324999999999918, 0.0001028610000000027, 0.00010276299999999877, 0.00010320899999999994, 0.00010327699999999884, 0.0001028749999999988, 0.00010290199999999847, 0.00010312499999999905, 0.00010280500000000095, 0.0001030139999999985, 0.00010327800000000179, 0.00010320800000000047, 0.0001032359999999996, 0.00010295899999999969, 0.0001030420000000011, 0.00010319500000000037, 0.00010276400000000172, 0.00010322299999999951, 0.00010307000000000024, 0.00010291599999999804]</msg>
<status status="PASS" starttime="20201117 14:47:33.378" endtime="20201117 14:47:33.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.374" endtime="20201117 14:47:33.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.383" endtime="20201117 14:47:33.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.386" endtime="20201117 14:47:33.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.385" endtime="20201117 14:47:33.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.381" endtime="20201117 14:47:33.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.013" endtime="20201117 14:47:33.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.012" endtime="20201117 14:47:33.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.011" endtime="20201117 14:47:33.407"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.410" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.418" endtime="20201117 14:47:33.437"></status>
</kw>
<msg timestamp="20201117 14:47:33.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.416" endtime="20201117 14:47:33.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.439" endtime="20201117 14:47:33.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.441" endtime="20201117 14:47:33.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.414" endtime="20201117 14:47:33.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.412" endtime="20201117 14:47:33.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.450" endtime="20201117 14:47:33.736"></status>
</kw>
<msg timestamp="20201117 14:47:33.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024101292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024205708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.449" endtime="20201117 14:47:33.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024101292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024205708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.740" endtime="20201117 14:47:33.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.749" endtime="20201117 14:47:33.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.446" endtime="20201117 14:47:33.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.445" endtime="20201117 14:47:33.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.755" level="INFO">${RESULT} = [{'time': 0.024205708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010441599999999954, 'source_diff': 0.00010441599999999954}, {'time': 0.024315569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:33.752" endtime="20201117 14:47:33.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.768" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:33.756" endtime="20201117 14:47:33.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.773" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.772" endtime="20201117 14:47:33.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.775" level="INFO">VALUE: [0.00010441599999999954, 0.00010440199999999997, 0.0001038619999999997, 0.00010422200000000104, 0.00010405499999999873, 0.00010383300000000109, 0.00010413899999999962, 0.00010376399999999925, 0.00010384700000000066, 0.00010406900000000177, 0.00010430599999999846, 0.00010362499999999955, 0.00010429199999999889, 0.00010374999999999968, 0.00010374999999999968, 0.00010427799999999932, 0.00010398600000000036, 0.00010416700000000223, 0.00010374999999999968, 0.00010393000000000208, 0.00010390199999999947, 0.00010391599999999904, 0.0001037360000000001, 0.0001037360000000001, 0.00010415299999999919, 0.00010391700000000198, 0.00010397199999999732, 0.00010366699999999826, 0.0001040420000000021, 0.00010395800000000122, 0.00010398600000000036, 0.00010413899999999962, 0.00010380599999999796, 0.00010395900000000069, 0.00010399999999999993, 0.00010372200000000054, 0.00010379100000000238, 0.00010405499999999873, 0.00010415299999999919, 0.0001040139999999995, 0.00010381899999999805, 0.00010430600000000192, 0.00010377800000000229, 0.00010429199999999889, 0.00010407000000000124, 0.0001037360000000001, 0.00010427799999999932, 0.00010419500000000137, 0.00010399999999999993, 0.00010386100000000023]</msg>
<status status="PASS" starttime="20201117 14:47:33.774" endtime="20201117 14:47:33.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.769" endtime="20201117 14:47:33.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.778" endtime="20201117 14:47:33.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.782" endtime="20201117 14:47:33.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.780" endtime="20201117 14:47:33.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.776" endtime="20201117 14:47:33.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.410" endtime="20201117 14:47:33.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.409" endtime="20201117 14:47:33.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.408" endtime="20201117 14:47:33.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.160" endtime="20201117 14:47:33.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.807" endtime="20201117 14:47:33.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.806" endtime="20201117 14:47:33.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.804" endtime="20201117 14:47:33.828"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:46:54.089" endtime="20201117 14:47:33.829" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.837" endtime="20201117 14:47:33.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.835" endtime="20201117 14:47:33.857"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.871" endtime="20201117 14:47:33.884"></status>
</kw>
<msg timestamp="20201117 14:47:33.885" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.869" endtime="20201117 14:47:33.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.888" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.886" endtime="20201117 14:47:33.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.891" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:47:33.889" endtime="20201117 14:47:33.892"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:33.867" endtime="20201117 14:47:33.892"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:33.864" endtime="20201117 14:47:33.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.862" endtime="20201117 14:47:33.893"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:47:33.897" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:47:33.896" endtime="20201117 14:47:33.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.894" endtime="20201117 14:47:33.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.861" endtime="20201117 14:47:33.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.861" endtime="20201117 14:47:33.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.899" endtime="20201117 14:47:33.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.859" endtime="20201117 14:47:33.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.858" endtime="20201117 14:47:33.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.834" endtime="20201117 14:47:33.902"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.905" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.914" endtime="20201117 14:47:33.929"></status>
</kw>
<msg timestamp="20201117 14:47:33.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.912" endtime="20201117 14:47:33.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.930" endtime="20201117 14:47:33.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.933" endtime="20201117 14:47:33.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.909" endtime="20201117 14:47:33.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.907" endtime="20201117 14:47:33.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.943" endtime="20201117 14:47:34.229"></status>
</kw>
<msg timestamp="20201117 14:47:34.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069066736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069089444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.941" endtime="20201117 14:47:34.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069066736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069089444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.233" endtime="20201117 14:47:34.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.241" endtime="20201117 14:47:34.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.938" endtime="20201117 14:47:34.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.936" endtime="20201117 14:47:34.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.248" level="INFO">${RESULT} = [{'time': 0.069089444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2707999999996287e-05, 'source_diff': 2.2707999999996287e-05}, {'time': 0.069113444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:34.244" endtime="20201117 14:47:34.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.261" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:34.249" endtime="20201117 14:47:34.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.266" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.265" endtime="20201117 14:47:34.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.268" level="INFO">VALUE: [2.2707999999996287e-05, 2.206899999999956e-05, 2.1986000000001615e-05, 2.201300000000128e-05, 2.1834000000012233e-05, 2.211100000000521e-05, 2.1834000000012233e-05, 2.268099999999662e-05, 2.1943999999995967e-05, 2.2000000000008124e-05, 2.1958000000002476e-05, 2.268099999999662e-05, 2.1833999999998355e-05, 2.201300000000128e-05, 2.2638000000005376e-05, 2.1902999999989792e-05, 2.1973000000008458e-05, 2.194499999999544e-05, 2.2542000000000395e-05, 2.1833999999998355e-05, 2.17770000000006e-05, 2.1846999999991512e-05, 2.180499999999974e-05, 2.252700000000829e-05, 2.20969999999987e-05, 2.204100000000042e-05, 2.201300000000128e-05, 2.1944000000009845e-05, 2.19169999999963e-05, 2.1819999999991846e-05, 2.2582999999992692e-05, 2.2054999999993052e-05, 2.2694000000003656e-05, 2.1958000000002476e-05, 2.1901999999990318e-05, 2.212500000001172e-05, 2.1971999999995107e-05, 2.1763999999993566e-05, 2.188899999999716e-05, 2.268099999999662e-05, 2.2110999999991332e-05, 2.205500000000693e-05, 2.205500000000693e-05, 2.190300000000367e-05, 2.180499999999974e-05, 2.2554999999993552e-05, 2.25969999999992e-05, 2.2694000000003656e-05, 2.188899999999716e-05, 2.261100000000571e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.267" endtime="20201117 14:47:34.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.262" endtime="20201117 14:47:34.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.271" endtime="20201117 14:47:34.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.275" endtime="20201117 14:47:34.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.273" endtime="20201117 14:47:34.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.270" endtime="20201117 14:47:34.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.906" endtime="20201117 14:47:34.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.904" endtime="20201117 14:47:34.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.903" endtime="20201117 14:47:34.296"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.299" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.307" endtime="20201117 14:47:34.322"></status>
</kw>
<msg timestamp="20201117 14:47:34.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.306" endtime="20201117 14:47:34.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.323" endtime="20201117 14:47:34.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.326" endtime="20201117 14:47:34.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.303" endtime="20201117 14:47:34.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.301" endtime="20201117 14:47:34.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.336" endtime="20201117 14:47:34.621"></status>
</kw>
<msg timestamp="20201117 14:47:34.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024818708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024841208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.333" endtime="20201117 14:47:34.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024818708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024841208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.625" endtime="20201117 14:47:34.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.634" endtime="20201117 14:47:34.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.331" endtime="20201117 14:47:34.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.329" endtime="20201117 14:47:34.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.641" level="INFO">${RESULT} = [{'time': 0.024841208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2500000000001685e-05, 'source_diff': 2.2500000000001685e-05}, {'time': 0.024865194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:34.637" endtime="20201117 14:47:34.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.654" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:34.642" endtime="20201117 14:47:34.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.658" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.657" endtime="20201117 14:47:34.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.661" level="INFO">VALUE: [2.2500000000001685e-05, 2.1888000000001157e-05, 2.204100000000042e-05, 2.208299999999913e-05, 2.2680000000000616e-05, 2.1888000000001157e-05, 2.256900000000006e-05, 2.213900000000088e-05, 2.184699999999845e-05, 2.238899999999766e-05, 2.183299999999888e-05, 2.1957999999999006e-05, 2.1929999999999866e-05, 2.184700000000192e-05, 2.1929999999999866e-05, 2.1986000000001615e-05, 2.2540999999997452e-05, 2.2028000000000325e-05, 2.263900000000138e-05, 2.261099999999877e-05, 2.180499999999974e-05, 2.2040999999996952e-05, 2.1999999999997716e-05, 2.211100000000174e-05, 2.20830000000026e-05, 2.2000000000001185e-05, 2.2707999999999756e-05, 2.2708000000003226e-05, 2.184700000000192e-05, 2.1764000000000505e-05, 2.2000000000001185e-05, 2.236100000000199e-05, 2.191699999999977e-05, 2.211099999999827e-05, 2.2555999999999965e-05, 2.27229999999988e-05, 2.187500000000106e-05, 2.256900000000006e-05, 2.1958000000002476e-05, 2.2721999999999326e-05, 2.2542000000000395e-05, 2.2069999999999035e-05, 2.211100000000174e-05, 2.2014000000000755e-05, 2.2721999999999326e-05, 2.2098000000001644e-05, 2.20830000000026e-05, 2.186100000000149e-05, 2.262500000000181e-05, 2.262499999999834e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.659" endtime="20201117 14:47:34.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.655" endtime="20201117 14:47:34.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.664" endtime="20201117 14:47:34.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.667" endtime="20201117 14:47:34.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.666" endtime="20201117 14:47:34.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.662" endtime="20201117 14:47:34.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.299" endtime="20201117 14:47:34.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.297" endtime="20201117 14:47:34.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.296" endtime="20201117 14:47:34.688"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.691" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.699" endtime="20201117 14:47:34.714"></status>
</kw>
<msg timestamp="20201117 14:47:34.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.697" endtime="20201117 14:47:34.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.715" endtime="20201117 14:47:34.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.718" endtime="20201117 14:47:34.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.694" endtime="20201117 14:47:34.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.692" endtime="20201117 14:47:34.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.730" endtime="20201117 14:47:35.017"></status>
</kw>
<msg timestamp="20201117 14:47:35.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024012278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024034139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.727" endtime="20201117 14:47:35.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024012278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024034139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.022" endtime="20201117 14:47:35.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.030" endtime="20201117 14:47:35.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.724" endtime="20201117 14:47:35.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.722" endtime="20201117 14:47:35.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.037" level="INFO">${RESULT} = [{'time': 0.024034139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.186099999999802e-05, 'source_diff': 2.186099999999802e-05}, {'time': 0.024058111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:35.033" endtime="20201117 14:47:35.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.051" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:35.038" endtime="20201117 14:47:35.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.056" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.055" endtime="20201117 14:47:35.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.058" level="INFO">VALUE: [2.186099999999802e-05, 2.187500000000106e-05, 2.2707999999999756e-05, 2.188900000000063e-05, 2.2736000000002365e-05, 2.270899999999923e-05, 2.261099999999877e-05, 2.19030000000002e-05, 2.2513999999997786e-05, 2.263900000000138e-05, 2.1778000000000075e-05, 2.270899999999923e-05, 2.188900000000063e-05, 2.2069999999999035e-05, 2.186099999999802e-05, 2.194499999999891e-05, 2.2041999999999895e-05, 2.1750000000000935e-05, 2.1778000000000075e-05, 2.261099999999877e-05, 2.187499999999759e-05, 2.197300000000152e-05, 2.2736000000002365e-05, 2.1806000000002684e-05, 2.2028000000000325e-05, 2.1736000000001365e-05, 2.1805999999999215e-05, 2.193099999999934e-05, 2.2750000000001935e-05, 2.1736000000001365e-05, 2.2598000000002144e-05, 2.268100000000009e-05, 2.180499999999974e-05, 2.2084000000002074e-05, 2.180499999999974e-05, 2.187500000000106e-05, 2.2000000000001185e-05, 2.198700000000109e-05, 2.2598000000002144e-05, 2.184699999999845e-05, 2.2680000000000616e-05, 2.197300000000152e-05, 2.1971999999998576e-05, 2.206899999999956e-05, 2.180499999999974e-05, 2.2638000000001907e-05, 2.180499999999974e-05, 2.236099999999852e-05, 2.187500000000106e-05, 2.25969999999992e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.057" endtime="20201117 14:47:35.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.052" endtime="20201117 14:47:35.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.061" endtime="20201117 14:47:35.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.065" endtime="20201117 14:47:35.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.063" endtime="20201117 14:47:35.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.060" endtime="20201117 14:47:35.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.691" endtime="20201117 14:47:35.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.689" endtime="20201117 14:47:35.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.689" endtime="20201117 14:47:35.086"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.088" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.096" endtime="20201117 14:47:35.112"></status>
</kw>
<msg timestamp="20201117 14:47:35.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.095" endtime="20201117 14:47:35.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.114" endtime="20201117 14:47:35.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.116" endtime="20201117 14:47:35.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.092" endtime="20201117 14:47:35.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.090" endtime="20201117 14:47:35.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.125" endtime="20201117 14:47:35.412"></status>
</kw>
<msg timestamp="20201117 14:47:35.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024198417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024220986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.124" endtime="20201117 14:47:35.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024198417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024220986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.416" endtime="20201117 14:47:35.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.425" endtime="20201117 14:47:35.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.121" endtime="20201117 14:47:35.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.119" endtime="20201117 14:47:35.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.431" level="INFO">${RESULT} = [{'time': 0.024220986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.256900000000006e-05, 'source_diff': 2.256900000000006e-05}, {'time': 0.024245972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:35.428" endtime="20201117 14:47:35.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.444" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:35.432" endtime="20201117 14:47:35.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.449" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.448" endtime="20201117 14:47:35.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.451" level="INFO">VALUE: [2.256900000000006e-05, 2.2528000000000825e-05, 2.263900000000138e-05, 2.2014000000000755e-05, 2.1791999999999645e-05, 2.205499999999999e-05, 2.187500000000106e-05, 2.211099999999827e-05, 2.258299999999963e-05, 2.191699999999977e-05, 2.193099999999934e-05, 2.2041999999999895e-05, 2.183299999999888e-05, 2.2750000000001935e-05, 2.258299999999963e-05, 2.1971999999998576e-05, 2.25969999999992e-05, 2.262500000000181e-05, 2.1764000000000505e-05, 2.237500000000156e-05, 2.2750000000001935e-05, 2.2499999999998216e-05, 2.266700000000052e-05, 2.1778000000000075e-05, 2.2028000000000325e-05, 2.193099999999934e-05, 2.2070000000002504e-05, 2.2721999999999326e-05, 2.187500000000106e-05, 2.263899999999791e-05, 2.2528000000000825e-05, 2.262500000000181e-05, 2.195899999999848e-05, 2.20969999999987e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.2555999999999965e-05, 2.2707999999999756e-05, 2.261100000000224e-05, 2.2014000000000755e-05, 2.19030000000002e-05, 2.201300000000128e-05, 2.237499999999809e-05, 2.2597999999998675e-05, 2.188900000000063e-05, 2.1902000000000726e-05, 2.1819999999998785e-05, 2.2361999999997995e-05, 2.1805999999999215e-05, 2.2707999999999756e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.450" endtime="20201117 14:47:35.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.445" endtime="20201117 14:47:35.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.454" endtime="20201117 14:47:35.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.458" endtime="20201117 14:47:35.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.456" endtime="20201117 14:47:35.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.453" endtime="20201117 14:47:35.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.089" endtime="20201117 14:47:35.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.087" endtime="20201117 14:47:35.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.086" endtime="20201117 14:47:35.479"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.487" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.496" endtime="20201117 14:47:35.511"></status>
</kw>
<msg timestamp="20201117 14:47:35.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.494" endtime="20201117 14:47:35.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.512" endtime="20201117 14:47:35.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.514" endtime="20201117 14:47:35.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.492" endtime="20201117 14:47:35.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.490" endtime="20201117 14:47:35.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.523" endtime="20201117 14:47:35.810"></status>
</kw>
<msg timestamp="20201117 14:47:35.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030134292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030156417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.522" endtime="20201117 14:47:35.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030134292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030156417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.814" endtime="20201117 14:47:35.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.822" endtime="20201117 14:47:35.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.519" endtime="20201117 14:47:35.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.518" endtime="20201117 14:47:35.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.829" level="INFO">${RESULT} = [{'time': 0.030156417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.212500000000131e-05, 'source_diff': 2.212500000000131e-05}, {'time': 0.030180389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:35.825" endtime="20201117 14:47:35.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.842" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:35.830" endtime="20201117 14:47:35.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.846" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.845" endtime="20201117 14:47:35.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.849" level="INFO">VALUE: [2.212500000000131e-05, 2.1763999999997036e-05, 2.2528000000000825e-05, 2.266700000000052e-05, 2.2028000000000325e-05, 2.1764000000000505e-05, 2.270899999999923e-05, 2.2013999999997286e-05, 2.186099999999802e-05, 2.188900000000063e-05, 2.2013999999997286e-05, 2.265299999999748e-05, 2.1763999999997036e-05, 2.197300000000152e-05, 2.261099999999877e-05, 2.187499999999759e-05, 2.1749999999997466e-05, 2.2749999999998466e-05, 2.1985999999998146e-05, 2.1985999999998146e-05, 2.256900000000006e-05, 2.265300000000095e-05, 2.2583999999999105e-05, 2.1848000000001394e-05, 2.212500000000131e-05, 2.1750000000000935e-05, 2.2707999999999756e-05, 2.2598000000002144e-05, 2.2680000000000616e-05, 2.262499999999834e-05, 2.187499999999759e-05, 2.255500000000049e-05, 2.183299999999888e-05, 2.2694000000000186e-05, 2.25969999999992e-05, 2.1985999999998146e-05, 2.2028000000000325e-05, 2.2666000000001046e-05, 2.1985999999998146e-05, 2.1957999999999006e-05, 2.1957999999999006e-05, 2.256900000000006e-05, 2.186099999999802e-05, 2.2028000000000325e-05, 2.187499999999759e-05, 2.1819999999998785e-05, 2.206899999999956e-05, 2.183299999999888e-05, 2.2528000000000825e-05, 2.187499999999759e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.847" endtime="20201117 14:47:35.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.843" endtime="20201117 14:47:35.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.852" endtime="20201117 14:47:35.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.856" endtime="20201117 14:47:35.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.854" endtime="20201117 14:47:35.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.850" endtime="20201117 14:47:35.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.488" endtime="20201117 14:47:35.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.480" endtime="20201117 14:47:35.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.479" endtime="20201117 14:47:35.877"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.879" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.887" endtime="20201117 14:47:35.903"></status>
</kw>
<msg timestamp="20201117 14:47:35.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.886" endtime="20201117 14:47:35.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.904" endtime="20201117 14:47:35.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.906" endtime="20201117 14:47:35.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.883" endtime="20201117 14:47:35.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.881" endtime="20201117 14:47:35.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.915" endtime="20201117 14:47:36.203"></status>
</kw>
<msg timestamp="20201117 14:47:36.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024405583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024427486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.914" endtime="20201117 14:47:36.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024405583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024427486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.207" endtime="20201117 14:47:36.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.215" endtime="20201117 14:47:36.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.911" endtime="20201117 14:47:36.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.910" endtime="20201117 14:47:36.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.222" level="INFO">${RESULT} = [{'time': 0.024427486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.19030000000002e-05, 'source_diff': 2.19030000000002e-05}, {'time': 0.024451486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:36.218" endtime="20201117 14:47:36.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.235" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:36.223" endtime="20201117 14:47:36.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.239" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.238" endtime="20201117 14:47:36.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.242" level="INFO">VALUE: [2.19030000000002e-05, 2.188900000000063e-05, 2.1999999999997716e-05, 2.261099999999877e-05, 2.2735999999998896e-05, 2.211099999999827e-05, 2.2013999999997286e-05, 2.2721999999999326e-05, 2.238899999999766e-05, 2.1791999999999645e-05, 2.237500000000156e-05, 2.256900000000006e-05, 2.2055999999999465e-05, 2.1778000000000075e-05, 2.186100000000149e-05, 2.19030000000002e-05, 2.25969999999992e-05, 2.1986000000001615e-05, 2.183300000000235e-05, 2.1985999999998146e-05, 2.261100000000224e-05, 2.183300000000235e-05, 2.2472000000002545e-05, 2.2555999999999965e-05, 2.2583999999999105e-05, 2.2597999999998675e-05, 2.211099999999827e-05, 2.212499999999784e-05, 2.211099999999827e-05, 2.266700000000052e-05, 2.261099999999877e-05, 2.272300000000227e-05, 2.195900000000195e-05, 2.19030000000002e-05, 2.195899999999848e-05, 2.270899999999923e-05, 2.269499999999966e-05, 2.2028000000000325e-05, 2.1750000000000935e-05, 2.2028000000000325e-05, 2.2583999999999105e-05, 2.259700000000267e-05, 2.2055999999999465e-05, 2.2735999999998896e-05, 2.2679999999997147e-05, 2.2387999999998187e-05, 2.195899999999848e-05, 2.191699999999977e-05, 2.1986000000001615e-05, 2.1888000000001157e-05]</msg>
<status status="PASS" starttime="20201117 14:47:36.240" endtime="20201117 14:47:36.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.236" endtime="20201117 14:47:36.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.245" endtime="20201117 14:47:36.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.249" endtime="20201117 14:47:36.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.247" endtime="20201117 14:47:36.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.244" endtime="20201117 14:47:36.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.880" endtime="20201117 14:47:36.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.878" endtime="20201117 14:47:36.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.877" endtime="20201117 14:47:36.270"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.272" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.280" endtime="20201117 14:47:36.295"></status>
</kw>
<msg timestamp="20201117 14:47:36.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.279" endtime="20201117 14:47:36.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.296" endtime="20201117 14:47:36.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.299" endtime="20201117 14:47:36.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.276" endtime="20201117 14:47:36.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.274" endtime="20201117 14:47:36.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.308" endtime="20201117 14:47:36.594"></status>
</kw>
<msg timestamp="20201117 14:47:36.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023887778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02390975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:36.306" endtime="20201117 14:47:36.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023887778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02390975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:36.599" endtime="20201117 14:47:36.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.607" endtime="20201117 14:47:36.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.304" endtime="20201117 14:47:36.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.302" endtime="20201117 14:47:36.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.613" level="INFO">${RESULT} = [{'time': 0.02390975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1972000000002045e-05, 'source_diff': 2.1972000000002045e-05}, {'time': 0.023933736, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:36.610" endtime="20201117 14:47:36.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.628" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:36.614" endtime="20201117 14:47:36.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.632" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.631" endtime="20201117 14:47:36.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.635" level="INFO">VALUE: [2.1972000000002045e-05, 2.180499999999974e-05, 2.1778000000000075e-05, 2.187500000000106e-05, 2.262500000000181e-05, 2.1929999999999866e-05, 2.258299999999963e-05, 2.1833999999998355e-05, 2.193099999999934e-05, 2.2707999999999756e-05, 2.1791999999999645e-05, 2.261100000000224e-05, 2.2555999999999965e-05, 2.1943999999999436e-05, 2.2014000000000755e-05, 2.2680000000000616e-05, 2.2056000000002934e-05, 2.25969999999992e-05, 2.270899999999923e-05, 2.2014000000000755e-05, 2.263900000000138e-05, 2.211099999999827e-05, 2.2028000000000325e-05, 2.269499999999966e-05, 2.2637999999998437e-05, 2.193099999999934e-05, 2.2014000000000755e-05, 2.2707999999999756e-05, 2.188900000000063e-05, 2.2014000000000755e-05, 2.2528000000000825e-05, 2.272300000000227e-05, 2.2098000000001644e-05, 2.2736000000002365e-05, 2.2388000000001657e-05, 2.2736000000002365e-05, 2.2055999999999465e-05, 2.1778000000000075e-05, 2.1791999999999645e-05, 2.19030000000002e-05, 2.2055999999999465e-05, 2.268100000000009e-05, 2.1778000000000075e-05, 2.265300000000095e-05, 2.27229999999988e-05, 2.2583999999999105e-05, 2.2680000000000616e-05, 2.256900000000006e-05, 2.2652000000001477e-05, 2.186100000000149e-05]</msg>
<status status="PASS" starttime="20201117 14:47:36.633" endtime="20201117 14:47:36.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.629" endtime="20201117 14:47:36.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.638" endtime="20201117 14:47:36.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.642" endtime="20201117 14:47:36.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.640" endtime="20201117 14:47:36.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.637" endtime="20201117 14:47:36.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.273" endtime="20201117 14:47:36.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.271" endtime="20201117 14:47:36.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.270" endtime="20201117 14:47:36.663"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.665" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.673" endtime="20201117 14:47:36.689"></status>
</kw>
<msg timestamp="20201117 14:47:36.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.672" endtime="20201117 14:47:36.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.690" endtime="20201117 14:47:36.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.692" endtime="20201117 14:47:36.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.669" endtime="20201117 14:47:36.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.667" endtime="20201117 14:47:36.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.701" endtime="20201117 14:47:36.988"></status>
</kw>
<msg timestamp="20201117 14:47:36.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024411097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024433097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.700" endtime="20201117 14:47:36.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024411097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024433097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.992" endtime="20201117 14:47:36.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.000" endtime="20201117 14:47:37.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.697" endtime="20201117 14:47:37.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.696" endtime="20201117 14:47:37.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.007" level="INFO">${RESULT} = [{'time': 0.024433097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2000000000001185e-05, 'source_diff': 2.2000000000001185e-05}, {'time': 0.024457083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:37.004" endtime="20201117 14:47:37.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.021" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:37.008" endtime="20201117 14:47:37.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.026" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.025" endtime="20201117 14:47:37.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.028" level="INFO">VALUE: [2.2000000000001185e-05, 2.209700000000217e-05, 2.1929999999999866e-05, 2.2736000000002365e-05, 2.186100000000149e-05, 2.212500000000131e-05, 2.188900000000063e-05, 2.2707999999999756e-05, 2.1916000000000296e-05, 2.2722000000002796e-05, 2.1943999999999436e-05, 2.2014000000000755e-05, 2.2694000000000186e-05, 2.265299999999748e-05, 2.183299999999888e-05, 2.2000000000001185e-05, 2.191699999999977e-05, 2.183299999999888e-05, 2.1805999999999215e-05, 2.2028000000000325e-05, 2.186099999999802e-05, 2.1971999999998576e-05, 2.1971999999998576e-05, 2.1999999999997716e-05, 2.2028000000000325e-05, 2.186100000000149e-05, 2.1778000000000075e-05, 2.195899999999848e-05, 2.265300000000095e-05, 2.194500000000238e-05, 2.187500000000106e-05, 2.2542000000000395e-05, 2.191699999999977e-05, 2.2055999999999465e-05, 2.1986000000001615e-05, 2.2736000000002365e-05, 2.1805999999999215e-05, 2.2028000000000325e-05, 2.2750000000001935e-05, 2.1943999999999436e-05, 2.266700000000052e-05, 2.1791999999999645e-05, 2.263900000000138e-05, 2.1778000000000075e-05, 2.2014000000000755e-05, 2.211100000000174e-05, 2.2598000000002144e-05, 2.2583999999999105e-05, 2.1792000000003114e-05, 2.1791999999999645e-05]</msg>
<status status="PASS" starttime="20201117 14:47:37.027" endtime="20201117 14:47:37.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.022" endtime="20201117 14:47:37.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.032" endtime="20201117 14:47:37.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.035" endtime="20201117 14:47:37.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.033" endtime="20201117 14:47:37.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.030" endtime="20201117 14:47:37.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.666" endtime="20201117 14:47:37.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.664" endtime="20201117 14:47:37.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.663" endtime="20201117 14:47:37.056"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.058" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.066" endtime="20201117 14:47:37.081"></status>
</kw>
<msg timestamp="20201117 14:47:37.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.065" endtime="20201117 14:47:37.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.083" endtime="20201117 14:47:37.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.085" endtime="20201117 14:47:37.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.062" endtime="20201117 14:47:37.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.060" endtime="20201117 14:47:37.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.094" endtime="20201117 14:47:37.382"></status>
</kw>
<msg timestamp="20201117 14:47:37.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024120944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024143639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.093" endtime="20201117 14:47:37.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024120944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024143639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.386" endtime="20201117 14:47:37.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.395" endtime="20201117 14:47:37.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.090" endtime="20201117 14:47:37.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.088" endtime="20201117 14:47:37.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.401" level="INFO">${RESULT} = [{'time': 0.024143639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.269500000000313e-05, 'source_diff': 2.269500000000313e-05}, {'time': 0.024167625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:37.398" endtime="20201117 14:47:37.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.415" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:37.402" endtime="20201117 14:47:37.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.419" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.418" endtime="20201117 14:47:37.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.422" level="INFO">VALUE: [2.269500000000313e-05, 2.186100000000149e-05, 2.263899999999791e-05, 2.208299999999913e-05, 2.2028000000000325e-05, 2.2028000000000325e-05, 2.1986000000001615e-05, 2.188900000000063e-05, 2.1971999999998576e-05, 2.208299999999913e-05, 2.1791999999999645e-05, 2.186099999999802e-05, 2.2013999999997286e-05, 2.268100000000009e-05, 2.266700000000052e-05, 2.262500000000181e-05, 2.2014000000000755e-05, 2.2583999999999105e-05, 2.1862000000000964e-05, 2.216700000000002e-05, 2.2584000000002574e-05, 2.1986000000001615e-05, 2.2000000000001185e-05, 2.2598000000002144e-05, 2.2000000000001185e-05, 2.2500000000001685e-05, 2.195900000000195e-05, 2.213900000000088e-05, 2.262500000000181e-05, 2.2569999999999535e-05, 2.183299999999888e-05, 2.1944000000002906e-05, 2.1806000000002684e-05, 2.2028000000000325e-05, 2.1862000000000964e-05, 2.258299999999963e-05, 2.27229999999988e-05, 2.213900000000088e-05, 2.1971999999998576e-05, 2.1929999999999866e-05, 2.2000000000001185e-05, 2.184699999999845e-05, 2.2680000000000616e-05, 2.211100000000174e-05, 2.2000000000001185e-05, 2.2666000000001046e-05, 2.1943999999999436e-05, 2.204100000000042e-05, 2.2694000000000186e-05, 2.2665999999997577e-05]</msg>
<status status="PASS" starttime="20201117 14:47:37.420" endtime="20201117 14:47:37.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.415" endtime="20201117 14:47:37.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.425" endtime="20201117 14:47:37.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.428" endtime="20201117 14:47:37.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.426" endtime="20201117 14:47:37.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.423" endtime="20201117 14:47:37.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.059" endtime="20201117 14:47:37.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.057" endtime="20201117 14:47:37.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.056" endtime="20201117 14:47:37.449"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.451" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.460" endtime="20201117 14:47:37.474"></status>
</kw>
<msg timestamp="20201117 14:47:37.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.458" endtime="20201117 14:47:37.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.476" endtime="20201117 14:47:37.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.478" endtime="20201117 14:47:37.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.456" endtime="20201117 14:47:37.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.454" endtime="20201117 14:47:37.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.488" endtime="20201117 14:47:37.775"></status>
</kw>
<msg timestamp="20201117 14:47:37.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024056264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024078097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.486" endtime="20201117 14:47:37.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024056264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024078097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.779" endtime="20201117 14:47:37.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.787" endtime="20201117 14:47:37.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.483" endtime="20201117 14:47:37.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.482" endtime="20201117 14:47:37.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.794" level="INFO">${RESULT} = [{'time': 0.024078097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.183299999999888e-05, 'source_diff': 2.183299999999888e-05}, {'time': 0.024103097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:37.791" endtime="20201117 14:47:37.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.807" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:37.795" endtime="20201117 14:47:37.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.812" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.811" endtime="20201117 14:47:37.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.814" level="INFO">VALUE: [2.183299999999888e-05, 2.2680000000000616e-05, 2.263900000000138e-05, 2.2540999999997452e-05, 2.1971999999998576e-05, 2.212500000000131e-05, 2.193099999999934e-05, 2.191699999999977e-05, 2.262499999999834e-05, 2.25830000000031e-05, 2.258299999999963e-05, 2.2777999999997606e-05, 2.181899999999931e-05, 2.183300000000235e-05, 2.1943999999999436e-05, 2.193100000000281e-05, 2.184700000000192e-05, 2.261100000000224e-05, 2.184700000000192e-05, 2.268100000000009e-05, 2.186100000000149e-05, 2.2056000000002934e-05, 2.186100000000149e-05, 2.2070000000002504e-05, 2.2069999999999035e-05, 2.186100000000149e-05, 2.2041999999999895e-05, 2.2707999999999756e-05, 2.211100000000174e-05, 2.191699999999977e-05, 2.27229999999988e-05, 2.194499999999891e-05, 2.269499999999966e-05, 2.2055999999999465e-05, 2.266700000000052e-05, 2.261099999999877e-05, 2.266699999999705e-05, 2.180500000000321e-05, 2.2707999999999756e-05, 2.188900000000063e-05, 2.2097999999998175e-05, 2.2597999999998675e-05, 2.2597999999998675e-05, 2.1805999999999215e-05, 2.181899999999931e-05, 2.2026999999997382e-05, 2.184699999999845e-05, 2.184700000000192e-05, 2.273699999999837e-05, 2.187499999999759e-05]</msg>
<status status="PASS" starttime="20201117 14:47:37.813" endtime="20201117 14:47:37.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.808" endtime="20201117 14:47:37.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.817" endtime="20201117 14:47:37.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.821" endtime="20201117 14:47:37.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.819" endtime="20201117 14:47:37.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.815" endtime="20201117 14:47:37.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.452" endtime="20201117 14:47:37.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.450" endtime="20201117 14:47:37.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.449" endtime="20201117 14:47:37.842"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.844" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.852" endtime="20201117 14:47:37.867"></status>
</kw>
<msg timestamp="20201117 14:47:37.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.850" endtime="20201117 14:47:37.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.869" endtime="20201117 14:47:37.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.872" endtime="20201117 14:47:37.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.848" endtime="20201117 14:47:37.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.846" endtime="20201117 14:47:37.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.881" endtime="20201117 14:47:38.168"></status>
</kw>
<msg timestamp="20201117 14:47:38.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024315583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024338944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.879" endtime="20201117 14:47:38.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024315583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024338944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.172" endtime="20201117 14:47:38.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.180" endtime="20201117 14:47:38.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.877" endtime="20201117 14:47:38.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.875" endtime="20201117 14:47:38.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.187" level="INFO">${RESULT} = [{'time': 0.024338944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.336099999999952e-05, 'source_diff': 2.336099999999952e-05}, {'time': 0.024363944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:38.184" endtime="20201117 14:47:38.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.204" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:38.189" endtime="20201117 14:47:38.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.209" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.208" endtime="20201117 14:47:38.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.211" level="INFO">VALUE: [2.336099999999952e-05, 2.284699999999945e-05, 2.287499999999859e-05, 2.2762999999998562e-05, 2.3014000000001755e-05, 2.3708000000000756e-05, 2.3665999999998577e-05, 2.2971999999999576e-05, 2.283299999999988e-05, 2.2971999999999576e-05, 2.287499999999859e-05, 2.284699999999945e-05, 2.30969999999997e-05, 2.3735999999999896e-05, 2.308300000000013e-05, 2.2944000000000436e-05, 2.279100000000117e-05, 2.284700000000292e-05, 2.3041999999997426e-05, 2.358300000000063e-05, 2.3000000000002185e-05, 2.283299999999988e-05, 2.308300000000013e-05, 2.3013999999998286e-05, 2.2944000000000436e-05, 2.291700000000077e-05, 2.358300000000063e-05, 2.368100000000109e-05, 2.2999999999998716e-05, 2.3513999999998786e-05, 2.2806000000000215e-05, 2.2971999999999576e-05, 2.3735999999999896e-05, 2.365300000000195e-05, 2.3083999999999605e-05, 2.358300000000063e-05, 2.2792000000000645e-05, 2.337499999999909e-05, 2.3028000000001325e-05, 2.363899999999891e-05, 2.308300000000013e-05, 2.280500000000074e-05, 2.3070000000000035e-05, 2.286099999999902e-05, 2.362499999999934e-05, 2.3042000000000895e-05, 2.368100000000109e-05, 2.3597999999999675e-05, 2.366699999999805e-05, 2.365300000000195e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.210" endtime="20201117 14:47:38.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.205" endtime="20201117 14:47:38.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.214" endtime="20201117 14:47:38.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.218" endtime="20201117 14:47:38.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.216" endtime="20201117 14:47:38.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.213" endtime="20201117 14:47:38.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.845" endtime="20201117 14:47:38.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.843" endtime="20201117 14:47:38.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.842" endtime="20201117 14:47:38.239"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.241" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.250" endtime="20201117 14:47:38.266"></status>
</kw>
<msg timestamp="20201117 14:47:38.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.248" endtime="20201117 14:47:38.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.267" endtime="20201117 14:47:38.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.270" endtime="20201117 14:47:38.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.246" endtime="20201117 14:47:38.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.243" endtime="20201117 14:47:38.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.278" endtime="20201117 14:47:38.564"></status>
</kw>
<msg timestamp="20201117 14:47:38.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024745681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024770111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.277" endtime="20201117 14:47:38.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024745681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024770111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.568" endtime="20201117 14:47:38.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.576" endtime="20201117 14:47:38.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.274" endtime="20201117 14:47:38.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.273" endtime="20201117 14:47:38.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.583" level="INFO">${RESULT} = [{'time': 0.024770111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4430000000002366e-05, 'source_diff': 2.4430000000002366e-05}, {'time': 0.024796111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:38.579" endtime="20201117 14:47:38.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.596" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:38.584" endtime="20201117 14:47:38.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.600" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.599" endtime="20201117 14:47:38.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.603" level="INFO">VALUE: [2.4430000000002366e-05, 2.3763999999999036e-05, 2.4042000000001895e-05, 2.4736000000000896e-05, 2.39169999999983e-05, 2.3763999999999036e-05, 2.4721999999997857e-05, 2.461100000000077e-05, 2.4750000000000466e-05, 2.4096999999997232e-05, 2.4596999999997732e-05, 2.45970000000012e-05, 2.4055999999997996e-05, 2.462500000000034e-05, 2.4584000000001105e-05, 2.4069999999997566e-05, 2.413899999999941e-05, 2.468099999999862e-05, 2.4027999999998856e-05, 2.463899999999991e-05, 2.4722000000001326e-05, 2.412499999999984e-05, 2.462500000000034e-05, 2.387499999999959e-05, 2.4056000000001465e-05, 2.4527999999999356e-05, 2.388899999999916e-05, 2.437500000000009e-05, 2.465299999999948e-05, 2.388899999999916e-05, 2.3861999999999495e-05, 2.3958000000001006e-05, 2.4541999999998926e-05, 2.4056000000001465e-05, 2.3999999999999716e-05, 2.3944000000001436e-05, 2.4013999999999286e-05, 2.3915999999998827e-05, 2.388899999999916e-05, 2.4708000000001756e-05, 2.391700000000177e-05, 2.465299999999948e-05, 2.4736000000000896e-05, 2.3958000000001006e-05, 2.462500000000034e-05, 2.380500000000174e-05, 2.4693999999998717e-05, 2.4596999999997732e-05, 2.4638000000000437e-05, 2.40970000000007e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.602" endtime="20201117 14:47:38.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.597" endtime="20201117 14:47:38.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.606" endtime="20201117 14:47:38.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.610" endtime="20201117 14:47:38.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.608" endtime="20201117 14:47:38.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.604" endtime="20201117 14:47:38.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.242" endtime="20201117 14:47:38.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.240" endtime="20201117 14:47:38.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.239" endtime="20201117 14:47:38.631"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.633" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.641" endtime="20201117 14:47:38.656"></status>
</kw>
<msg timestamp="20201117 14:47:38.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.640" endtime="20201117 14:47:38.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.658" endtime="20201117 14:47:38.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.660" endtime="20201117 14:47:38.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.637" endtime="20201117 14:47:38.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.635" endtime="20201117 14:47:38.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.669" endtime="20201117 14:47:38.957"></status>
</kw>
<msg timestamp="20201117 14:47:38.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024092722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024117639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.668" endtime="20201117 14:47:38.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024092722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024117639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.961" endtime="20201117 14:47:38.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.970" endtime="20201117 14:47:38.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.665" endtime="20201117 14:47:38.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.663" endtime="20201117 14:47:38.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.976" level="INFO">${RESULT} = [{'time': 0.024117639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.49169999999993e-05, 'source_diff': 2.49169999999993e-05}, {'time': 0.024145625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:38.973" endtime="20201117 14:47:38.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.989" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:38.977" endtime="20201117 14:47:38.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.994" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.993" endtime="20201117 14:47:38.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.996" level="INFO">VALUE: [2.49169999999993e-05, 2.5596999999998732e-05, 2.4764000000000036e-05, 2.495900000000148e-05, 2.565299999999701e-05, 2.50970000000017e-05, 2.484700000000145e-05, 2.4805999999998746e-05, 2.5041999999999426e-05, 2.5000000000000716e-05, 2.4986000000001146e-05, 2.5541999999999926e-05, 2.4764000000000036e-05, 2.569499999999919e-05, 2.561100000000177e-05, 2.5570000000002535e-05, 2.4764000000000036e-05, 2.570899999999876e-05, 2.565300000000048e-05, 2.5612000000001245e-05, 2.566700000000005e-05, 2.488900000000016e-05, 2.4805999999998746e-05, 2.5597999999998206e-05, 2.4999999999997247e-05, 2.5041999999999426e-05, 2.5722000000002326e-05, 2.5693999999999717e-05, 2.4777000000000132e-05, 2.562500000000134e-05, 2.4888000000000687e-05, 2.5555000000000022e-05, 2.4888000000000687e-05, 2.5068999999999092e-05, 2.483300000000188e-05, 2.5694000000003187e-05, 2.488900000000016e-05, 2.5708000000002756e-05, 2.5568999999999592e-05, 2.486100000000102e-05, 2.5110999999997802e-05, 2.4860999999997552e-05, 2.563900000000091e-05, 2.4777000000000132e-05, 2.5596999999998732e-05, 2.4804999999999272e-05, 2.556900000000306e-05, 2.4986000000001146e-05, 2.5027999999999856e-05, 2.5555000000000022e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.995" endtime="20201117 14:47:38.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.990" endtime="20201117 14:47:38.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.000" endtime="20201117 14:47:39.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.003" endtime="20201117 14:47:39.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.002" endtime="20201117 14:47:39.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.998" endtime="20201117 14:47:39.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.634" endtime="20201117 14:47:39.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.632" endtime="20201117 14:47:39.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.631" endtime="20201117 14:47:39.024"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.027" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.035" endtime="20201117 14:47:39.050"></status>
</kw>
<msg timestamp="20201117 14:47:39.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.033" endtime="20201117 14:47:39.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.052" endtime="20201117 14:47:39.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.055" endtime="20201117 14:47:39.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.031" endtime="20201117 14:47:39.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.029" endtime="20201117 14:47:39.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.064" endtime="20201117 14:47:39.351"></status>
</kw>
<msg timestamp="20201117 14:47:39.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024068653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024094861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.062" endtime="20201117 14:47:39.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024068653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024094861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.356" endtime="20201117 14:47:39.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.364" endtime="20201117 14:47:39.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.060" endtime="20201117 14:47:39.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.058" endtime="20201117 14:47:39.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.371" level="INFO">${RESULT} = [{'time': 0.024094861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6207999999999787e-05, 'source_diff': 2.6207999999999787e-05}, {'time': 0.024123861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:39.367" endtime="20201117 14:47:39.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.384" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:39.372" endtime="20201117 14:47:39.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.388" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.387" endtime="20201117 14:47:39.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.391" level="INFO">VALUE: [2.6207999999999787e-05, 2.6721999999999857e-05, 2.661100000000277e-05, 2.593099999999987e-05, 2.6749999999998997e-05, 2.5846999999998982e-05, 2.6680000000001147e-05, 2.6069999999999566e-05, 2.5778000000000606e-05, 2.6583000000000162e-05, 2.6596999999999732e-05, 2.6000000000001716e-05, 2.5874999999998122e-05, 2.6542000000000926e-05, 2.6000000000001716e-05, 2.594499999999944e-05, 2.666699999999758e-05, 2.668100000000062e-05, 2.5792000000000176e-05, 2.6721999999999857e-05, 2.669500000000019e-05, 2.590300000000073e-05, 2.5833999999998886e-05, 2.6597999999999206e-05, 2.670900000000323e-05, 2.5999999999998247e-05, 2.6069999999999566e-05, 2.5792000000000176e-05, 2.6610999999999302e-05, 2.6610999999999302e-05, 2.588899999999769e-05, 2.6570000000000066e-05, 2.5985999999998677e-05, 2.669500000000019e-05, 2.5777000000001132e-05, 2.668099999999715e-05, 2.669500000000019e-05, 2.6000000000001716e-05, 2.588900000000116e-05, 2.6597999999999206e-05, 2.6097999999998706e-05, 2.5792000000000176e-05, 2.6721999999999857e-05, 2.5777000000001132e-05, 2.5943999999999967e-05, 2.5750000000001466e-05, 2.5971999999999107e-05, 2.6568999999997123e-05, 2.6040999999997483e-05, 2.6555000000001022e-05]</msg>
<status status="PASS" starttime="20201117 14:47:39.389" endtime="20201117 14:47:39.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.385" endtime="20201117 14:47:39.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.394" endtime="20201117 14:47:39.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.398" endtime="20201117 14:47:39.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.396" endtime="20201117 14:47:39.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.393" endtime="20201117 14:47:39.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.027" endtime="20201117 14:47:39.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.025" endtime="20201117 14:47:39.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.025" endtime="20201117 14:47:39.419"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.421" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.429" endtime="20201117 14:47:39.444"></status>
</kw>
<msg timestamp="20201117 14:47:39.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.428" endtime="20201117 14:47:39.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.446" endtime="20201117 14:47:39.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.448" endtime="20201117 14:47:39.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.425" endtime="20201117 14:47:39.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.423" endtime="20201117 14:47:39.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.457" endtime="20201117 14:47:39.744"></status>
</kw>
<msg timestamp="20201117 14:47:39.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024144708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.456" endtime="20201117 14:47:39.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024144708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.749" endtime="20201117 14:47:39.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.757" endtime="20201117 14:47:39.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.453" endtime="20201117 14:47:39.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.451" endtime="20201117 14:47:39.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.764" level="INFO">${RESULT} = [{'time': 0.024144708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6860999999999552e-05, 'source_diff': 2.6860999999999552e-05}, {'time': 0.024173694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:39.760" endtime="20201117 14:47:39.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.779" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:39.765" endtime="20201117 14:47:39.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.783" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.782" endtime="20201117 14:47:39.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.786" level="INFO">VALUE: [2.6860999999999552e-05, 2.7026999999998913e-05, 2.6860999999999552e-05, 2.6972000000000107e-05, 2.7637999999999968e-05, 2.765300000000248e-05, 2.7652000000003008e-05, 2.6846999999999982e-05, 2.6999999999999247e-05, 2.7596999999997263e-05, 2.6833000000000412e-05, 2.7124999999999372e-05, 2.7679999999998678e-05, 2.6930000000001397e-05, 2.7040999999998483e-05, 2.765300000000248e-05, 2.7568999999998123e-05, 2.7679999999998678e-05, 2.7040999999998483e-05, 2.6833000000000412e-05, 2.7055000000001522e-05, 2.7624999999999872e-05, 2.6764000000002036e-05, 2.7069000000001092e-05, 2.768100000000162e-05, 2.7068999999997623e-05, 2.763900000000291e-05, 2.7541999999998457e-05, 2.690300000000173e-05, 2.7055999999997526e-05, 2.7042000000001426e-05, 2.6778000000001606e-05, 2.7638999999999442e-05, 2.6806000000000746e-05, 2.7624999999999872e-05, 2.7638999999999442e-05, 2.7097000000000232e-05, 2.7555999999998027e-05, 2.768100000000162e-05, 2.6805999999997276e-05, 2.7638999999999442e-05, 2.7084000000000136e-05, 2.6874999999999122e-05, 2.6833999999999886e-05, 2.7084000000000136e-05, 2.6860999999999552e-05, 2.7735999999996958e-05, 2.6999999999999247e-05, 2.6888999999998692e-05, 2.7070000000000566e-05]</msg>
<status status="PASS" starttime="20201117 14:47:39.784" endtime="20201117 14:47:39.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.780" endtime="20201117 14:47:39.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.789" endtime="20201117 14:47:39.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.792" endtime="20201117 14:47:39.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.791" endtime="20201117 14:47:39.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.787" endtime="20201117 14:47:39.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.422" endtime="20201117 14:47:39.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.420" endtime="20201117 14:47:39.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.419" endtime="20201117 14:47:39.813"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.815" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.824" endtime="20201117 14:47:39.840"></status>
</kw>
<msg timestamp="20201117 14:47:39.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.822" endtime="20201117 14:47:39.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.841" endtime="20201117 14:47:39.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.844" endtime="20201117 14:47:39.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.820" endtime="20201117 14:47:39.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.817" endtime="20201117 14:47:39.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.853" endtime="20201117 14:47:40.138"></status>
</kw>
<msg timestamp="20201117 14:47:40.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024386403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024414944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.851" endtime="20201117 14:47:40.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024386403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024414944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.142" endtime="20201117 14:47:40.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.151" endtime="20201117 14:47:40.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.849" endtime="20201117 14:47:40.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.847" endtime="20201117 14:47:40.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.157" level="INFO">${RESULT} = [{'time': 0.024414944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8540999999999983e-05, 'source_diff': 2.8540999999999983e-05}, {'time': 0.024445958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:40.154" endtime="20201117 14:47:40.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.170" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:40.158" endtime="20201117 14:47:40.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.175" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.174" endtime="20201117 14:47:40.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.177" level="INFO">VALUE: [2.8540999999999983e-05, 2.8540999999999983e-05, 2.7819999999997846e-05, 2.8569999999998597e-05, 2.8653000000000012e-05, 2.7763000000000093e-05, 2.7901999999999788e-05, 2.8068999999998623e-05, 2.8026999999999913e-05, 2.791699999999883e-05, 2.7902000000003258e-05, 2.8596999999998263e-05, 2.7790999999999233e-05, 2.8110999999997333e-05, 2.7791000000002702e-05, 2.7790999999999233e-05, 2.8000000000000247e-05, 2.7847000000000982e-05, 2.8639000000000442e-05, 2.7846999999997513e-05, 2.7916000000002827e-05, 2.8708000000002287e-05, 2.8653000000000012e-05, 2.791699999999883e-05, 2.8639000000000442e-05, 2.7930000000002397e-05, 2.7929999999998928e-05, 2.8736000000001427e-05, 2.7888999999999692e-05, 2.8084000000001136e-05, 2.8013999999999817e-05, 2.8653000000000012e-05, 2.8138999999999942e-05, 2.8556000000002496e-05, 2.7791999999998707e-05, 2.8625000000000872e-05, 2.8596999999998263e-05, 2.8375000000000622e-05, 2.8750000000000997e-05, 2.8013999999999817e-05, 2.794500000000144e-05, 2.7861000000000552e-05, 2.795899999999754e-05, 2.8070000000001566e-05, 2.8653000000000012e-05, 2.79309999999984e-05, 2.868099999999915e-05, 2.8610999999997833e-05, 2.8666999999999582e-05, 2.8028000000002856e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.176" endtime="20201117 14:47:40.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.171" endtime="20201117 14:47:40.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.181" endtime="20201117 14:47:40.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.184" endtime="20201117 14:47:40.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.182" endtime="20201117 14:47:40.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.179" endtime="20201117 14:47:40.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.816" endtime="20201117 14:47:40.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.814" endtime="20201117 14:47:40.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.813" endtime="20201117 14:47:40.205"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.207" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.215" endtime="20201117 14:47:40.231"></status>
</kw>
<msg timestamp="20201117 14:47:40.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.214" endtime="20201117 14:47:40.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.233" endtime="20201117 14:47:40.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.235" endtime="20201117 14:47:40.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.211" endtime="20201117 14:47:40.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.209" endtime="20201117 14:47:40.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.245" endtime="20201117 14:47:40.531"></status>
</kw>
<msg timestamp="20201117 14:47:40.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024351056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024380764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.243" endtime="20201117 14:47:40.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024351056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024380764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.535" endtime="20201117 14:47:40.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.544" endtime="20201117 14:47:40.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.240" endtime="20201117 14:47:40.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.238" endtime="20201117 14:47:40.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.550" level="INFO">${RESULT} = [{'time': 0.024380764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9707999999999818e-05, 'source_diff': 2.9707999999999818e-05}, {'time': 0.024411736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:40.547" endtime="20201117 14:47:40.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.564" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:40.551" endtime="20201117 14:47:40.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.568" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.567" endtime="20201117 14:47:40.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.571" level="INFO">VALUE: [2.9707999999999818e-05, 2.8832999999998943e-05, 2.9068999999999623e-05, 2.9068999999999623e-05, 2.8889000000000692e-05, 2.9639000000001442e-05, 2.9625000000001872e-05, 2.9153000000000512e-05, 2.8889000000000692e-05, 2.9555000000000553e-05, 2.9582999999999693e-05, 2.9000000000001247e-05, 2.9041999999999957e-05, 2.8750000000000997e-05, 2.8778000000000137e-05, 2.9625000000001872e-05, 2.9028000000000387e-05, 2.9124999999997903e-05, 2.9055999999999527e-05, 2.898699999999768e-05, 2.9597000000002732e-05, 2.9028000000000387e-05, 2.9652999999997542e-05, 2.8847000000001982e-05, 2.9028000000000387e-05, 2.894499999999897e-05, 2.9014000000000817e-05, 2.9111000000001802e-05, 2.8778000000000137e-05, 2.8999999999997778e-05, 2.89309999999994e-05, 2.9110999999998333e-05, 2.9749999999998528e-05, 2.9360999999998583e-05, 2.8749999999997528e-05, 2.9527999999997417e-05, 2.8833999999998416e-05, 2.9110999999998333e-05, 2.9694000000000248e-05, 2.894499999999897e-05, 2.8985999999998208e-05, 2.8778000000000137e-05, 2.9083999999998666e-05, 2.9749999999998528e-05, 2.9680000000000678e-05, 2.9598000000002206e-05, 2.9610999999998833e-05, 2.8833000000002412e-05, 2.9596999999999263e-05, 2.9680000000000678e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.569" endtime="20201117 14:47:40.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.564" endtime="20201117 14:47:40.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.574" endtime="20201117 14:47:40.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.577" endtime="20201117 14:47:40.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.575" endtime="20201117 14:47:40.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.572" endtime="20201117 14:47:40.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.208" endtime="20201117 14:47:40.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.206" endtime="20201117 14:47:40.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.205" endtime="20201117 14:47:40.598"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.600" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.608" endtime="20201117 14:47:40.624"></status>
</kw>
<msg timestamp="20201117 14:47:40.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.607" endtime="20201117 14:47:40.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.626" endtime="20201117 14:47:40.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.632" endtime="20201117 14:47:40.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.604" endtime="20201117 14:47:40.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.602" endtime="20201117 14:47:40.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.641" endtime="20201117 14:47:40.928"></status>
</kw>
<msg timestamp="20201117 14:47:40.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024151931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024182611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.640" endtime="20201117 14:47:40.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024151931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024182611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.932" endtime="20201117 14:47:40.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.941" endtime="20201117 14:47:40.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.637" endtime="20201117 14:47:40.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.636" endtime="20201117 14:47:40.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.947" level="INFO">${RESULT} = [{'time': 0.024182611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.067999999999821e-05, 'source_diff': 3.067999999999821e-05}, {'time': 0.024215611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:40.944" endtime="20201117 14:47:40.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.960" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:40.948" endtime="20201117 14:47:40.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.965" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.964" endtime="20201117 14:47:40.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.967" level="INFO">VALUE: [3.067999999999821e-05, 3.059700000000026e-05, 3.073599999999996e-05, 3.0000000000002247e-05, 2.9792000000000707e-05, 3.073599999999996e-05, 2.9792000000000707e-05, 2.9875000000002122e-05, 3.072200000000039e-05, 2.9874999999998653e-05, 3.0013999999998348e-05, 2.9792000000000707e-05, 2.9791999999997237e-05, 2.9985999999999208e-05, 3.066700000000158e-05, 2.9971999999999638e-05, 3.0360999999999583e-05, 2.9971999999999638e-05, 2.995899999999954e-05, 2.9875000000002122e-05, 2.9972000000003107e-05, 3.0110999999999333e-05, 2.9833999999999417e-05, 3.055600000000103e-05, 3.06249999999994e-05, 2.9874999999998653e-05, 3.072299999999986e-05, 3.072299999999986e-05, 3.0056000000000527e-05, 3.0069000000000623e-05, 3.056900000000112e-05, 2.9889000000001692e-05, 3.0584000000000167e-05, 3.0027999999997917e-05, 3.061099999999983e-05, 2.992999999999746e-05, 3.059700000000026e-05, 2.9999999999998778e-05, 3.067999999999821e-05, 3.0027000000001913e-05, 2.9736000000002427e-05, 3.06249999999994e-05, 2.9944000000000498e-05, 3.059700000000026e-05, 2.9889000000001692e-05, 3.0027999999997917e-05, 2.9931000000000402e-05, 3.069400000000125e-05, 2.9777999999997667e-05, 3.066600000000211e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.966" endtime="20201117 14:47:40.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.961" endtime="20201117 14:47:40.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.970" endtime="20201117 14:47:40.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.974" endtime="20201117 14:47:40.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.972" endtime="20201117 14:47:40.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.969" endtime="20201117 14:47:40.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.601" endtime="20201117 14:47:40.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.599" endtime="20201117 14:47:40.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.598" endtime="20201117 14:47:40.995"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.997" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.006" endtime="20201117 14:47:41.021"></status>
</kw>
<msg timestamp="20201117 14:47:41.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.004" endtime="20201117 14:47:41.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.022" endtime="20201117 14:47:41.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.025" endtime="20201117 14:47:41.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.002" endtime="20201117 14:47:41.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.999" endtime="20201117 14:47:41.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.034" endtime="20201117 14:47:41.321"></status>
</kw>
<msg timestamp="20201117 14:47:41.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024987472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025018556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.032" endtime="20201117 14:47:41.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024987472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025018556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.325" endtime="20201117 14:47:41.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.333" endtime="20201117 14:47:41.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.030" endtime="20201117 14:47:41.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.028" endtime="20201117 14:47:41.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.340" level="INFO">${RESULT} = [{'time': 0.025018556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.108400000000067e-05, 'source_diff': 3.108400000000067e-05}, {'time': 0.025052556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:41.336" endtime="20201117 14:47:41.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.354" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:41.341" endtime="20201117 14:47:41.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.359" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.358" endtime="20201117 14:47:41.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.361" level="INFO">VALUE: [3.108400000000067e-05, 3.172300000000086e-05, 3.090299999999879e-05, 3.113899999999947e-05, 3.1040999999999014e-05, 3.081900000000137e-05, 3.101399999999935e-05, 3.087499999999965e-05, 3.11249999999999e-05, 3.083300000000094e-05, 3.166599999999964e-05, 3.167999999999921e-05, 3.106900000000162e-05, 3.111100000000033e-05, 3.173600000000096e-05, 3.163899999999997e-05, 3.09579999999976e-05, 3.084700000000051e-05, 3.097199999999717e-05, 3.168099999999868e-05, 3.16250000000004e-05, 3.098600000000021e-05, 3.074999999999953e-05, 3.091599999999889e-05, 3.090299999999879e-05, 3.0832999999997474e-05, 3.165299999999954e-05, 3.108300000000119e-05, 3.1096999999997293e-05, 3.101399999999935e-05, 3.100000000000325e-05, 3.163899999999997e-05, 3.169499999999825e-05, 3.169399999999878e-05, 3.101400000000282e-05, 3.11249999999999e-05, 3.095800000000107e-05, 3.101399999999935e-05, 3.099999999999978e-05, 3.159700000000126e-05, 3.088899999999922e-05, 3.094500000000097e-05, 3.095899999999707e-05, 3.159700000000126e-05, 3.077799999999867e-05, 3.105600000000153e-05, 3.161100000000083e-05, 3.088899999999922e-05, 3.077799999999867e-05, 3.080599999999781e-05]</msg>
<status status="PASS" starttime="20201117 14:47:41.360" endtime="20201117 14:47:41.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.355" endtime="20201117 14:47:41.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.364" endtime="20201117 14:47:41.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.368" endtime="20201117 14:47:41.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.366" endtime="20201117 14:47:41.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.363" endtime="20201117 14:47:41.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.998" endtime="20201117 14:47:41.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.996" endtime="20201117 14:47:41.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.995" endtime="20201117 14:47:41.389"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.392" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.400" endtime="20201117 14:47:41.417"></status>
</kw>
<msg timestamp="20201117 14:47:41.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.398" endtime="20201117 14:47:41.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.419" endtime="20201117 14:47:41.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.421" endtime="20201117 14:47:41.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.396" endtime="20201117 14:47:41.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.394" endtime="20201117 14:47:41.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.430" endtime="20201117 14:47:41.715"></status>
</kw>
<msg timestamp="20201117 14:47:41.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024107792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024140333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.429" endtime="20201117 14:47:41.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024107792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024140333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.720" endtime="20201117 14:47:41.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.728" endtime="20201117 14:47:41.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.426" endtime="20201117 14:47:41.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.424" endtime="20201117 14:47:41.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.735" level="INFO">${RESULT} = [{'time': 0.024140333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2541000000000514e-05, 'source_diff': 3.2541000000000514e-05}, {'time': 0.024175333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:41.731" endtime="20201117 14:47:41.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.748" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:41.735" endtime="20201117 14:47:41.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.752" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.751" endtime="20201117 14:47:41.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.755" level="INFO">VALUE: [3.2541000000000514e-05, 3.27640000000011e-05, 3.191599999999989e-05, 3.1818999999998904e-05, 3.205500000000305e-05, 3.198600000000121e-05, 3.19579999999986e-05, 3.194399999999903e-05, 3.188900000000022e-05, 3.209700000000176e-05, 3.200000000000078e-05, 3.186100000000108e-05, 3.2096999999998294e-05, 3.272199999999892e-05, 3.254199999999999e-05, 3.266700000000011e-05, 3.270799999999935e-05, 3.194500000000197e-05, 3.19310000000024e-05, 3.206900000000262e-05, 3.202799999999992e-05, 3.17640000000001e-05, 3.191699999999936e-05, 3.2624999999997933e-05, 3.25839999999987e-05, 3.180599999999881e-05, 3.179199999999924e-05, 3.17640000000001e-05, 3.254199999999999e-05, 3.191699999999936e-05, 3.19579999999986e-05, 3.190299999999979e-05, 3.182000000000185e-05, 3.273700000000143e-05, 3.202799999999992e-05, 3.266700000000011e-05, 3.193099999999893e-05, 3.195899999999807e-05, 3.206999999999863e-05, 3.265299999999707e-05, 3.266700000000011e-05, 3.190299999999979e-05, 3.179199999999924e-05, 3.19579999999986e-05, 3.188800000000075e-05, 3.197199999999817e-05, 3.188800000000075e-05, 3.216700000000308e-05, 3.26380000000015e-05, 3.1804999999999334e-05]</msg>
<status status="PASS" starttime="20201117 14:47:41.753" endtime="20201117 14:47:41.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.749" endtime="20201117 14:47:41.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.758" endtime="20201117 14:47:41.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.762" endtime="20201117 14:47:41.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.760" endtime="20201117 14:47:41.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.757" endtime="20201117 14:47:41.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.392" endtime="20201117 14:47:41.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.390" endtime="20201117 14:47:41.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.390" endtime="20201117 14:47:41.783"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.785" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.793" endtime="20201117 14:47:41.808"></status>
</kw>
<msg timestamp="20201117 14:47:41.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.792" endtime="20201117 14:47:41.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.810" endtime="20201117 14:47:41.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.812" endtime="20201117 14:47:41.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.789" endtime="20201117 14:47:41.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.787" endtime="20201117 14:47:41.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.821" endtime="20201117 14:47:42.108"></status>
</kw>
<msg timestamp="20201117 14:47:42.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024105861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024139056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.819" endtime="20201117 14:47:42.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024105861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024139056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.112" endtime="20201117 14:47:42.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.120" endtime="20201117 14:47:42.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.817" endtime="20201117 14:47:42.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.815" endtime="20201117 14:47:42.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.127" level="INFO">${RESULT} = [{'time': 0.024139056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.319499999999975e-05, 'source_diff': 3.319499999999975e-05}, {'time': 0.024174097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:42.124" endtime="20201117 14:47:42.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.140" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:42.128" endtime="20201117 14:47:42.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.145" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.144" endtime="20201117 14:47:42.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.148" level="INFO">VALUE: [3.319499999999975e-05, 3.2846999999999044e-05, 3.302800000000092e-05, 3.36250000000024e-05, 3.283400000000242e-05, 3.2791000000000764e-05, 3.284799999999852e-05, 3.299999999999831e-05, 3.374999999999906e-05, 3.3596999999999794e-05, 3.3554999999997615e-05, 3.2846999999999044e-05, 3.3069000000000154e-05, 3.299999999999831e-05, 3.300000000000178e-05, 3.3569000000000654e-05, 3.309700000000276e-05, 3.298600000000221e-05, 3.295800000000307e-05, 3.2860999999998614e-05, 3.2874999999998183e-05, 3.288899999999775e-05, 3.3124999999998433e-05, 3.301399999999788e-05, 3.3110999999998864e-05, 3.294400000000003e-05, 3.2805000000000334e-05, 3.3624999999998934e-05, 3.366699999999764e-05, 3.3138999999998e-05, 3.3596999999999794e-05, 3.295899999999907e-05, 3.291700000000036e-05, 3.269400000000325e-05, 3.3082999999999724e-05, 3.286100000000208e-05, 3.290299999999732e-05, 3.35839999999997e-05, 3.375000000000253e-05, 3.3082999999999724e-05, 3.290300000000079e-05, 3.369500000000025e-05, 3.357000000000013e-05, 3.370899999999982e-05, 3.355600000000056e-05, 3.374999999999906e-05, 3.30839999999992e-05, 3.291700000000036e-05, 3.35839999999997e-05, 3.372299999999939e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.146" endtime="20201117 14:47:42.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.141" endtime="20201117 14:47:42.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.151" endtime="20201117 14:47:42.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.154" endtime="20201117 14:47:42.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.153" endtime="20201117 14:47:42.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.149" endtime="20201117 14:47:42.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.786" endtime="20201117 14:47:42.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.784" endtime="20201117 14:47:42.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.783" endtime="20201117 14:47:42.175"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.177" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.186" endtime="20201117 14:47:42.201"></status>
</kw>
<msg timestamp="20201117 14:47:42.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.184" endtime="20201117 14:47:42.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.203" endtime="20201117 14:47:42.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.205" endtime="20201117 14:47:42.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.182" endtime="20201117 14:47:42.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.180" endtime="20201117 14:47:42.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.214" endtime="20201117 14:47:42.500"></status>
</kw>
<msg timestamp="20201117 14:47:42.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024052917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024087028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.213" endtime="20201117 14:47:42.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024052917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024087028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.505" endtime="20201117 14:47:42.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.513" endtime="20201117 14:47:42.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.210" endtime="20201117 14:47:42.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.208" endtime="20201117 14:47:42.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.519" level="INFO">${RESULT} = [{'time': 0.024087028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4110999999999864e-05, 'source_diff': 3.4110999999999864e-05}, {'time': 0.024124014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:42.516" endtime="20201117 14:47:42.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.533" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:42.521" endtime="20201117 14:47:42.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.537" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.536" endtime="20201117 14:47:42.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.540" level="INFO">VALUE: [3.4110999999999864e-05, 3.4611000000000364e-05, 3.457000000000113e-05, 3.407000000000063e-05, 3.397200000000017e-05, 3.4597000000000794e-05, 3.391700000000136e-05, 3.379200000000124e-05, 3.3860999999999614e-05, 3.455600000000156e-05, 3.473600000000049e-05, 3.454199999999852e-05, 3.397299999999964e-05, 3.4776999999999725e-05, 3.472300000000039e-05, 3.470900000000082e-05, 3.379200000000124e-05, 3.397200000000017e-05, 3.383399999999995e-05, 3.377800000000167e-05, 3.391699999999789e-05, 3.3847000000000044e-05, 3.4568999999998185e-05, 3.469400000000178e-05, 3.4110999999999864e-05, 3.4083000000000724e-05, 3.4097000000000294e-05, 3.4124999999999434e-05, 3.393000000000146e-05, 3.398599999999974e-05, 3.4110999999999864e-05, 3.3819000000000904e-05, 3.397200000000017e-05, 3.4083000000000724e-05, 3.390299999999832e-05, 3.472200000000092e-05, 3.4096999999996824e-05, 3.37779999999982e-05, 3.391699999999789e-05, 3.469499999999778e-05, 3.394400000000103e-05, 3.3832999999997004e-05, 3.399999999999931e-05, 3.394400000000103e-05, 3.387500000000265e-05, 3.4388999999999253e-05, 3.4097000000000294e-05, 3.473600000000049e-05, 3.370800000000035e-05, 3.373599999999949e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.539" endtime="20201117 14:47:42.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.534" endtime="20201117 14:47:42.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.543" endtime="20201117 14:47:42.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.547" endtime="20201117 14:47:42.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.545" endtime="20201117 14:47:42.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.541" endtime="20201117 14:47:42.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.178" endtime="20201117 14:47:42.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.176" endtime="20201117 14:47:42.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.176" endtime="20201117 14:47:42.568"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.570" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.578" endtime="20201117 14:47:42.594"></status>
</kw>
<msg timestamp="20201117 14:47:42.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.576" endtime="20201117 14:47:42.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.596" endtime="20201117 14:47:42.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.598" endtime="20201117 14:47:42.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.574" endtime="20201117 14:47:42.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.572" endtime="20201117 14:47:42.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.607" endtime="20201117 14:47:42.894"></status>
</kw>
<msg timestamp="20201117 14:47:42.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02446425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024499347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:42.605" endtime="20201117 14:47:42.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02446425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024499347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:42.898" endtime="20201117 14:47:42.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.907" endtime="20201117 14:47:42.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.603" endtime="20201117 14:47:42.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.601" endtime="20201117 14:47:42.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.914" level="INFO">${RESULT} = [{'time': 0.024499347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5097000000001294e-05, 'source_diff': 3.5097000000001294e-05}, {'time': 0.024536361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:42.910" endtime="20201117 14:47:42.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.928" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:42.915" endtime="20201117 14:47:42.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.933" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.932" endtime="20201117 14:47:42.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.935" level="INFO">VALUE: [3.5097000000001294e-05, 3.491699999999889e-05, 3.4861000000000614e-05, 3.493100000000193e-05, 3.4818999999998435e-05, 3.5582999999998755e-05, 3.491700000000236e-05, 3.501399999999988e-05, 3.5096999999997824e-05, 3.498600000000074e-05, 3.5639000000000504e-05, 3.575000000000106e-05, 3.501399999999988e-05, 3.5596999999998324e-05, 3.480600000000181e-05, 3.573599999999802e-05, 3.547200000000167e-05, 3.5083000000001724e-05, 3.484800000000052e-05, 3.501399999999988e-05, 3.572200000000192e-05, 3.508399999999773e-05, 3.555599999999909e-05, 3.497300000000064e-05, 3.495900000000107e-05, 3.568099999999921e-05, 3.491700000000236e-05, 3.504200000000249e-05, 3.5096999999997824e-05, 3.554199999999952e-05, 3.505600000000206e-05, 3.479199999999877e-05, 3.559800000000127e-05, 3.4804999999998865e-05, 3.5111000000000864e-05, 3.4888999999999754e-05, 3.479200000000224e-05, 3.4833000000001474e-05, 3.573600000000149e-05, 3.490199999999985e-05, 3.5596999999998324e-05, 3.5040999999999545e-05, 3.5583000000002224e-05, 3.500000000000031e-05, 3.4888999999999754e-05, 3.5610999999997894e-05, 3.498600000000074e-05, 3.5625000000000934e-05, 3.5597000000001794e-05, 3.5625000000000934e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.934" endtime="20201117 14:47:42.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.929" endtime="20201117 14:47:42.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.938" endtime="20201117 14:47:42.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.942" endtime="20201117 14:47:42.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.940" endtime="20201117 14:47:42.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.937" endtime="20201117 14:47:42.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.571" endtime="20201117 14:47:42.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.569" endtime="20201117 14:47:42.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.568" endtime="20201117 14:47:42.963"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.965" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.973" endtime="20201117 14:47:42.988"></status>
</kw>
<msg timestamp="20201117 14:47:42.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.972" endtime="20201117 14:47:42.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.990" endtime="20201117 14:47:42.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.992" endtime="20201117 14:47:42.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.969" endtime="20201117 14:47:42.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.967" endtime="20201117 14:47:42.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.002" endtime="20201117 14:47:43.287"></status>
</kw>
<msg timestamp="20201117 14:47:43.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024061819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024098278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.000" endtime="20201117 14:47:43.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024061819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024098278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.291" endtime="20201117 14:47:43.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.300" endtime="20201117 14:47:43.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.997" endtime="20201117 14:47:43.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.995" endtime="20201117 14:47:43.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.306" level="INFO">${RESULT} = [{'time': 0.024098278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.64589999999991e-05, 'source_diff': 3.64589999999991e-05}, {'time': 0.024136292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:43.303" endtime="20201117 14:47:43.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.319" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:43.307" endtime="20201117 14:47:43.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.324" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.323" endtime="20201117 14:47:43.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.327" level="INFO">VALUE: [3.64589999999991e-05, 3.609800000000177e-05, 3.651400000000138e-05, 3.6596999999999325e-05, 3.669499999999978e-05, 3.583399999999848e-05, 3.586199999999762e-05, 3.608399999999873e-05, 3.6638999999998034e-05, 3.6639000000001504e-05, 3.600000000000131e-05, 3.575000000000106e-05, 3.658399999999923e-05, 3.59719999999987e-05, 3.598700000000121e-05, 3.597300000000164e-05, 3.666600000000117e-05, 3.6055000000000115e-05, 3.66520000000016e-05, 3.6596999999999325e-05, 3.5804999999999865e-05, 3.59580000000026e-05, 3.6681000000000213e-05, 3.6125000000001434e-05, 3.6096999999998824e-05, 3.5791000000000295e-05, 3.6652999999997604e-05, 3.666600000000117e-05, 3.6639000000001504e-05, 3.670799999999988e-05, 3.604200000000002e-05, 3.669399999999684e-05, 3.5847000000002044e-05, 3.5833000000002474e-05, 3.579199999999977e-05, 3.6167000000000143e-05, 3.5846999999998574e-05, 3.606999999999916e-05, 3.579199999999977e-05, 3.656999999999966e-05, 3.6096999999998824e-05, 3.57780000000002e-05, 3.670899999999935e-05, 3.6611000000002364e-05, 3.656999999999966e-05, 3.672299999999892e-05, 3.669400000000031e-05, 3.670900000000282e-05, 3.6624999999998464e-05, 3.658399999999923e-05]</msg>
<status status="PASS" starttime="20201117 14:47:43.325" endtime="20201117 14:47:43.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.320" endtime="20201117 14:47:43.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.330" endtime="20201117 14:47:43.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.333" endtime="20201117 14:47:43.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.332" endtime="20201117 14:47:43.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.328" endtime="20201117 14:47:43.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.966" endtime="20201117 14:47:43.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.964" endtime="20201117 14:47:43.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.963" endtime="20201117 14:47:43.354"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.356" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.364" endtime="20201117 14:47:43.381"></status>
</kw>
<msg timestamp="20201117 14:47:43.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.363" endtime="20201117 14:47:43.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.382" endtime="20201117 14:47:43.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.385" endtime="20201117 14:47:43.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.361" endtime="20201117 14:47:43.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.358" endtime="20201117 14:47:43.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.394" endtime="20201117 14:47:43.680"></status>
</kw>
<msg timestamp="20201117 14:47:43.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023920764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023957833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.392" endtime="20201117 14:47:43.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023920764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023957833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.684" endtime="20201117 14:47:43.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.692" endtime="20201117 14:47:43.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.390" endtime="20201117 14:47:43.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.388" endtime="20201117 14:47:43.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.699" level="INFO">${RESULT} = [{'time': 0.023957833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7069000000000685e-05, 'source_diff': 3.7069000000000685e-05}, {'time': 0.023997833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:43.696" endtime="20201117 14:47:43.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.712" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:43.700" endtime="20201117 14:47:43.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.717" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.716" endtime="20201117 14:47:43.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.719" level="INFO">VALUE: [3.7069000000000685e-05, 3.76659999999987e-05, 3.7625000000002934e-05, 3.6833000000000005e-05, 3.6833000000000005e-05, 3.6846999999999575e-05, 3.675000000000206e-05, 3.69719999999997e-05, 3.6888999999998284e-05, 3.769400000000131e-05, 3.7083000000000255e-05, 3.774999999999959e-05, 3.695800000000013e-05, 3.7638999999999034e-05, 3.702799999999798e-05, 3.704200000000102e-05, 3.7625000000002934e-05, 3.7583000000000755e-05, 3.7680999999997744e-05, 3.698599999999927e-05, 3.701399999999841e-05, 3.705600000000059e-05, 3.705599999999712e-05, 3.7083000000000255e-05, 3.676399999999816e-05, 3.6903000000001324e-05, 3.7597000000000325e-05, 3.773600000000002e-05, 3.6889000000001754e-05, 3.770900000000035e-05, 3.683399999999948e-05, 3.6917000000000894e-05, 3.75979999999998e-05, 3.6889000000001754e-05, 3.7124999999998964e-05, 3.680600000000034e-05, 3.7610999999999895e-05, 3.695800000000013e-05, 3.709800000000277e-05, 3.772200000000045e-05, 3.7096999999999825e-05, 3.774999999999959e-05, 3.6833000000000005e-05, 3.769400000000131e-05, 3.690199999999838e-05, 3.701399999999841e-05, 3.7110999999999394e-05, 3.695800000000013e-05, 3.773600000000002e-05, 3.668000000000074e-05]</msg>
<status status="PASS" starttime="20201117 14:47:43.718" endtime="20201117 14:47:43.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.713" endtime="20201117 14:47:43.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.722" endtime="20201117 14:47:43.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.726" endtime="20201117 14:47:43.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.724" endtime="20201117 14:47:43.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.721" endtime="20201117 14:47:43.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.357" endtime="20201117 14:47:43.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.355" endtime="20201117 14:47:43.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.354" endtime="20201117 14:47:43.747"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.749" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.758" endtime="20201117 14:47:43.774"></status>
</kw>
<msg timestamp="20201117 14:47:43.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.756" endtime="20201117 14:47:43.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.775" endtime="20201117 14:47:43.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.778" endtime="20201117 14:47:43.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.754" endtime="20201117 14:47:43.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.751" endtime="20201117 14:47:43.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.787" endtime="20201117 14:47:44.073"></status>
</kw>
<msg timestamp="20201117 14:47:44.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024780833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024819028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.785" endtime="20201117 14:47:44.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024780833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024819028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.077" endtime="20201117 14:47:44.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.086" endtime="20201117 14:47:44.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.783" endtime="20201117 14:47:44.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.781" endtime="20201117 14:47:44.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.093" level="INFO">${RESULT} = [{'time': 0.024819028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8195000000001283e-05, 'source_diff': 3.8195000000001283e-05}, {'time': 0.024859014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:44.089" endtime="20201117 14:47:44.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.106" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:44.093" endtime="20201117 14:47:44.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.110" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.109" endtime="20201117 14:47:44.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.113" level="INFO">VALUE: [3.8195000000001283e-05, 3.804199999999855e-05, 3.801399999999941e-05, 3.872200000000145e-05, 3.8625000000000465e-05, 3.807000000000116e-05, 3.806999999999769e-05, 3.8124999999999964e-05, 3.806999999999769e-05, 3.7945000000001033e-05, 3.8361000000000645e-05, 3.804200000000202e-05, 3.8582999999998285e-05, 3.855599999999862e-05, 3.7931000000001464e-05, 3.777799999999873e-05, 3.8666999999999174e-05, 3.7917000000001894e-05, 3.86659999999997e-05, 3.79859999999968e-05, 3.8611000000000895e-05, 3.870800000000188e-05, 3.7790999999998826e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.7832999999997535e-05, 3.79720000000007e-05, 3.867999999999927e-05, 3.7889000000002754e-05, 3.8597000000001325e-05, 3.804199999999855e-05, 3.7819000000001435e-05, 3.8124999999999964e-05, 3.794400000000156e-05, 3.8568999999998715e-05, 3.7818999999997965e-05, 3.8069000000001685e-05, 3.799999999999984e-05, 3.8625000000000465e-05, 3.777799999999873e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.8680999999998744e-05, 3.8402999999999354e-05, 3.77919999999983e-05, 3.845799999999816e-05, 3.842999999999902e-05, 3.782000000000091e-05, 3.7916999999998424e-05]</msg>
<status status="PASS" starttime="20201117 14:47:44.111" endtime="20201117 14:47:44.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.107" endtime="20201117 14:47:44.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.116" endtime="20201117 14:47:44.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.120" endtime="20201117 14:47:44.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.118" endtime="20201117 14:47:44.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.114" endtime="20201117 14:47:44.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.750" endtime="20201117 14:47:44.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.748" endtime="20201117 14:47:44.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.747" endtime="20201117 14:47:44.142"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.144" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.152" endtime="20201117 14:47:44.168"></status>
</kw>
<msg timestamp="20201117 14:47:44.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.151" endtime="20201117 14:47:44.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.169" endtime="20201117 14:47:44.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.172" endtime="20201117 14:47:44.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.148" endtime="20201117 14:47:44.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.146" endtime="20201117 14:47:44.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.181" endtime="20201117 14:47:44.467"></status>
</kw>
<msg timestamp="20201117 14:47:44.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024189681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024229, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:44.179" endtime="20201117 14:47:44.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024189681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024229, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:44.471" endtime="20201117 14:47:44.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.479" endtime="20201117 14:47:44.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.176" endtime="20201117 14:47:44.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.175" endtime="20201117 14:47:44.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.486" level="INFO">${RESULT} = [{'time': 0.024229, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9318999999999465e-05, 'source_diff': 3.9318999999999465e-05}, {'time': 0.024271014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:44.483" endtime="20201117 14:47:44.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.500" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:44.487" endtime="20201117 14:47:44.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.505" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.504" endtime="20201117 14:47:44.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.507" level="INFO">VALUE: [3.9318999999999465e-05, 3.9625000000001465e-05, 3.8847000000001575e-05, 3.87919999999993e-05, 3.9610999999998425e-05, 3.8846999999998105e-05, 3.89859999999978e-05, 3.9680999999999744e-05, 3.873600000000102e-05, 3.8875000000000715e-05, 3.972200000000245e-05, 3.906999999999869e-05, 3.8916999999999424e-05, 3.8874999999997245e-05, 3.880599999999887e-05, 3.90980000000013e-05, 3.906999999999869e-05, 3.901400000000041e-05, 3.876400000000016e-05, 3.90980000000013e-05, 3.9625000000001465e-05, 3.898700000000074e-05, 3.954200000000005e-05, 3.900000000000084e-05, 3.9597000000002325e-05, 3.8790999999999826e-05, 3.8763000000000686e-05, 3.9555000000000146e-05, 3.894399999999909e-05, 3.9054999999999646e-05, 3.875000000000059e-05, 3.8833000000002005e-05, 3.9054999999999646e-05, 3.96660000000007e-05, 3.9639000000001035e-05, 3.8804999999999396e-05, 3.892999999999952e-05, 3.904200000000302e-05, 3.8889000000000284e-05, 3.8902999999999854e-05, 3.904199999999955e-05, 3.9054999999999646e-05, 3.9653000000000604e-05, 3.905599999999912e-05, 3.972199999999898e-05, 3.8931000000002464e-05, 3.8847000000001575e-05, 3.9139000000000534e-05, 3.895799999999866e-05, 3.908400000000173e-05]</msg>
<status status="PASS" starttime="20201117 14:47:44.506" endtime="20201117 14:47:44.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.501" endtime="20201117 14:47:44.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.511" endtime="20201117 14:47:44.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.514" endtime="20201117 14:47:44.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.513" endtime="20201117 14:47:44.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.509" endtime="20201117 14:47:44.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.145" endtime="20201117 14:47:44.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.143" endtime="20201117 14:47:44.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.142" endtime="20201117 14:47:44.535"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.538" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.546" endtime="20201117 14:47:44.562"></status>
</kw>
<msg timestamp="20201117 14:47:44.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.544" endtime="20201117 14:47:44.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.563" endtime="20201117 14:47:44.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.565" endtime="20201117 14:47:44.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.542" endtime="20201117 14:47:44.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.540" endtime="20201117 14:47:44.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.574" endtime="20201117 14:47:44.860"></status>
</kw>
<msg timestamp="20201117 14:47:44.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024263208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024303708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.573" endtime="20201117 14:47:44.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024263208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024303708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.864" endtime="20201117 14:47:44.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.872" endtime="20201117 14:47:44.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.570" endtime="20201117 14:47:44.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.569" endtime="20201117 14:47:44.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.879" level="INFO">${RESULT} = [{'time': 0.024303708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.049999999999887e-05, 'source_diff': 4.049999999999887e-05}, {'time': 0.024345722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:44.876" endtime="20201117 14:47:44.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.892" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:44.880" endtime="20201117 14:47:44.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.897" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.896" endtime="20201117 14:47:44.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.900" level="INFO">VALUE: [4.049999999999887e-05, 3.9846999999999105e-05, 4.0027000000001506e-05, 4.0124999999998495e-05, 4.0097000000002825e-05, 4.0652999999998135e-05, 3.995799999999966e-05, 3.975000000000159e-05, 4.0360999999999175e-05, 4.0374999999998745e-05, 3.970799999999941e-05, 3.9805000000000396e-05, 4.0666999999997705e-05, 4.0610999999999425e-05, 3.97920000000003e-05, 4.006999999999969e-05, 4.0568999999997246e-05, 3.997199999999923e-05, 3.9930999999999994e-05, 4.002799999999751e-05, 4.001399999999794e-05, 3.97920000000003e-05, 4.001400000000141e-05, 4.0708999999999884e-05, 3.980599999999987e-05, 3.990200000000138e-05, 4.0124999999998495e-05, 4.0681000000000744e-05, 4.006999999999969e-05, 3.995799999999966e-05, 3.9889000000001285e-05, 4.058399999999976e-05, 4.01119999999984e-05, 3.9874999999998245e-05, 3.999999999999837e-05, 3.997199999999923e-05, 4.0082999999999785e-05, 3.993000000000052e-05, 4.068000000000127e-05, 3.9874999999998245e-05, 4.070800000000041e-05, 3.976400000000116e-05, 4.068000000000127e-05, 4.0583000000000286e-05, 3.99859999999988e-05, 3.994400000000009e-05, 4.070800000000041e-05, 3.9875000000001715e-05, 4.0555000000001146e-05, 4.0082999999999785e-05]</msg>
<status status="PASS" starttime="20201117 14:47:44.898" endtime="20201117 14:47:44.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.893" endtime="20201117 14:47:44.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.903" endtime="20201117 14:47:44.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.906" endtime="20201117 14:47:44.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.905" endtime="20201117 14:47:44.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.901" endtime="20201117 14:47:44.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.538" endtime="20201117 14:47:44.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.537" endtime="20201117 14:47:44.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.536" endtime="20201117 14:47:44.927"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.930" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.938" endtime="20201117 14:47:44.953"></status>
</kw>
<msg timestamp="20201117 14:47:44.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.936" endtime="20201117 14:47:44.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.955" endtime="20201117 14:47:44.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.957" endtime="20201117 14:47:44.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.934" endtime="20201117 14:47:44.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.932" endtime="20201117 14:47:44.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.966" endtime="20201117 14:47:45.253"></status>
</kw>
<msg timestamp="20201117 14:47:45.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024066833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024107917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.965" endtime="20201117 14:47:45.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024066833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024107917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.258" endtime="20201117 14:47:45.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.266" endtime="20201117 14:47:45.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.962" endtime="20201117 14:47:45.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.961" endtime="20201117 14:47:45.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.272" level="INFO">${RESULT} = [{'time': 0.024107917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.108400000000026e-05, 'source_diff': 4.108400000000026e-05}, {'time': 0.024151889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:45.269" endtime="20201117 14:47:45.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:45.286" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:45.274" endtime="20201117 14:47:45.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.291" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:47:45.290" endtime="20201117 14:47:45.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.293" level="INFO">VALUE: [4.108400000000026e-05, 4.154199999999858e-05, 4.108400000000026e-05, 4.108400000000026e-05, 4.1667000000002175e-05, 4.1110999999999925e-05, 4.138799999999984e-05, 4.104200000000155e-05, 4.1652999999999135e-05, 4.0959000000000134e-05, 4.106999999999722e-05, 4.159800000000033e-05, 4.1695000000001314e-05, 4.1694999999997845e-05, 4.172200000000098e-05, 4.158400000000076e-05, 4.0847000000000105e-05, 4.092999999999805e-05, 4.176399999999969e-05, 4.0931000000000994e-05, 4.101399999999894e-05, 4.0874999999999245e-05, 4.074999999999912e-05, 4.0847000000000105e-05, 4.108400000000026e-05, 4.0819000000000966e-05, 4.176399999999969e-05, 4.0874999999999245e-05, 4.0861000000003145e-05, 4.1624999999999995e-05, 4.09859999999998e-05, 4.175000000000012e-05, 4.0903000000001855e-05, 4.1068999999997746e-05, 4.104200000000155e-05, 4.0931000000000994e-05, 4.155600000000162e-05, 4.073600000000302e-05, 4.07920000000013e-05, 4.156999999999772e-05, 4.1667000000002175e-05, 4.0902999999998385e-05, 4.1638999999999565e-05, 4.099999999999937e-05, 4.1097000000000355e-05, 4.0903000000001855e-05, 4.106999999999722e-05, 4.099999999999937e-05, 4.158400000000076e-05, 4.0959000000000134e-05]</msg>
<status status="PASS" starttime="20201117 14:47:45.292" endtime="20201117 14:47:45.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.287" endtime="20201117 14:47:45.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.296" endtime="20201117 14:47:45.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:45.300" endtime="20201117 14:47:45.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.298" endtime="20201117 14:47:45.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.294" endtime="20201117 14:47:45.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.930" endtime="20201117 14:47:45.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.929" endtime="20201117 14:47:45.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.928" endtime="20201117 14:47:45.321"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.323" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.331" endtime="20201117 14:47:45.347"></status>
</kw>
<msg timestamp="20201117 14:47:45.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.330" endtime="20201117 14:47:45.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.349" endtime="20201117 14:47:45.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.351" endtime="20201117 14:47:45.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.327" endtime="20201117 14:47:45.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.325" endtime="20201117 14:47:45.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.361" endtime="20201117 14:47:45.670"></status>
</kw>
<msg timestamp="20201117 14:47:45.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024407931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024450472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.359" endtime="20201117 14:47:45.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024407931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024450472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.674" endtime="20201117 14:47:45.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.695" endtime="20201117 14:47:45.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.357" endtime="20201117 14:47:45.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.355" endtime="20201117 14:47:45.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.702" level="INFO">${RESULT} = [{'time': 0.024450472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2541000000000107e-05, 'source_diff': 4.2541000000000107e-05}, {'time': 0.024494444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:45.699" endtime="20201117 14:47:45.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:45.716" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:45.703" endtime="20201117 14:47:45.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.721" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:47:45.720" endtime="20201117 14:47:45.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.724" level="INFO">VALUE: [4.2541000000000107e-05, 4.19860000000008e-05, 4.2082999999998316e-05, 4.174999999999665e-05, 4.1902999999999385e-05, 4.2068999999998746e-05, 4.273599999999808e-05, 4.1888999999999815e-05, 4.2054999999999176e-05, 4.190199999999991e-05, 4.1833000000001536e-05, 4.2054999999999176e-05, 4.192999999999905e-05, 4.177800000000273e-05, 4.194399999999862e-05, 4.200000000000037e-05, 4.273600000000155e-05, 4.182000000000144e-05, 4.2680999999999275e-05, 4.2097000000001356e-05, 4.201399999999994e-05, 4.1819000000001966e-05, 4.204199999999908e-05, 4.173599999999708e-05, 4.205600000000212e-05, 4.18059999999984e-05, 4.204199999999908e-05, 4.1931000000001994e-05, 4.2083000000001786e-05, 4.179199999999883e-05, 4.2666999999999705e-05, 4.2666999999999705e-05, 4.1888999999999815e-05, 4.2625000000000995e-05, 4.1875000000000245e-05, 4.200000000000037e-05, 4.259800000000133e-05, 4.182000000000144e-05, 4.2610999999997956e-05, 4.1972999999997235e-05, 4.205600000000212e-05, 4.2653000000000135e-05, 4.179199999999883e-05, 4.194399999999862e-05, 4.2569000000002716e-05, 4.1833000000001536e-05, 4.2139000000000065e-05, 4.2610999999997956e-05, 4.2083000000001786e-05, 4.2638999999997096e-05]</msg>
<status status="PASS" starttime="20201117 14:47:45.722" endtime="20201117 14:47:45.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.717" endtime="20201117 14:47:45.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.728" endtime="20201117 14:47:45.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:45.731" endtime="20201117 14:47:45.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.730" endtime="20201117 14:47:45.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.726" endtime="20201117 14:47:45.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.324" endtime="20201117 14:47:45.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.322" endtime="20201117 14:47:45.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.321" endtime="20201117 14:47:45.753"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.755" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.764" endtime="20201117 14:47:45.780"></status>
</kw>
<msg timestamp="20201117 14:47:45.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.762" endtime="20201117 14:47:45.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.782" endtime="20201117 14:47:45.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.784" endtime="20201117 14:47:45.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.759" endtime="20201117 14:47:45.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.757" endtime="20201117 14:47:45.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.794" endtime="20201117 14:47:46.082"></status>
</kw>
<msg timestamp="20201117 14:47:46.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024862097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024905472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.792" endtime="20201117 14:47:46.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024862097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024905472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.087" endtime="20201117 14:47:46.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.095" endtime="20201117 14:47:46.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.790" endtime="20201117 14:47:46.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.788" endtime="20201117 14:47:46.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.102" level="INFO">${RESULT} = [{'time': 0.024905472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3375000000001745e-05, 'source_diff': 4.3375000000001745e-05}, {'time': 0.024951486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:46.099" endtime="20201117 14:47:46.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.117" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:46.103" endtime="20201117 14:47:46.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.122" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.121" endtime="20201117 14:47:46.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.126" level="INFO">VALUE: [4.3375000000001745e-05, 4.372199999999951e-05, 4.3582999999999816e-05, 4.294399999999962e-05, 4.277800000000026e-05, 4.3096999999998886e-05, 4.3096999999998886e-05, 4.2903000000000385e-05, 4.305599999999965e-05, 4.372199999999951e-05, 4.3639000000001565e-05, 4.3096999999998886e-05, 4.2708999999998415e-05, 4.28059999999994e-05, 4.3694999999999845e-05, 4.298599999999833e-05, 4.302800000000051e-05, 4.306999999999922e-05, 4.2916999999999955e-05, 4.29999999999979e-05, 4.3610999999998956e-05, 4.2944999999999095e-05, 4.309799999999836e-05, 4.3681000000000275e-05, 4.3082999999999316e-05, 4.275000000000112e-05, 4.3694999999999845e-05, 4.3709000000002884e-05, 4.291600000000048e-05, 4.2832999999999066e-05, 4.291600000000048e-05, 4.288800000000134e-05, 4.2804999999999926e-05, 4.302800000000051e-05, 4.2804999999999926e-05, 4.3639000000001565e-05, 4.300000000000137e-05, 4.291600000000048e-05, 4.3097000000002356e-05, 4.3055000000000176e-05, 4.3055000000000176e-05, 4.3055000000000176e-05, 4.273600000000155e-05, 4.3596999999999386e-05, 4.2916999999999955e-05, 4.370799999999994e-05, 4.28059999999994e-05, 4.3638999999998096e-05, 4.295800000000266e-05, 4.305599999999965e-05]</msg>
<status status="PASS" starttime="20201117 14:47:46.124" endtime="20201117 14:47:46.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.118" endtime="20201117 14:47:46.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.129" endtime="20201117 14:47:46.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.133" endtime="20201117 14:47:46.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.131" endtime="20201117 14:47:46.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.127" endtime="20201117 14:47:46.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.756" endtime="20201117 14:47:46.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.754" endtime="20201117 14:47:46.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.753" endtime="20201117 14:47:46.154"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.157" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.166" endtime="20201117 14:47:46.182"></status>
</kw>
<msg timestamp="20201117 14:47:46.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.164" endtime="20201117 14:47:46.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.184" endtime="20201117 14:47:46.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.187" endtime="20201117 14:47:46.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.161" endtime="20201117 14:47:46.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.159" endtime="20201117 14:47:46.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.196" endtime="20201117 14:47:46.483"></status>
</kw>
<msg timestamp="20201117 14:47:46.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025770014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025814389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.195" endtime="20201117 14:47:46.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025770014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025814389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.487" endtime="20201117 14:47:46.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.495" endtime="20201117 14:47:46.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.192" endtime="20201117 14:47:46.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.190" endtime="20201117 14:47:46.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.502" level="INFO">${RESULT} = [{'time': 0.025814389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4374999999999276e-05, 'source_diff': 4.4374999999999276e-05}, {'time': 0.025860458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:46.499" endtime="20201117 14:47:46.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.515" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:46.503" endtime="20201117 14:47:46.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.520" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.519" endtime="20201117 14:47:46.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.522" level="INFO">VALUE: [4.4374999999999276e-05, 4.397199999999976e-05, 4.4638999999999096e-05, 4.477799999999879e-05, 4.459699999999692e-05, 4.3917000000000955e-05, 4.4694999999997376e-05, 4.383399999999954e-05, 4.377800000000126e-05, 4.4681000000001275e-05, 4.408399999999979e-05, 4.38060000000004e-05, 4.472199999999704e-05, 4.379200000000083e-05, 4.397199999999976e-05, 4.4125000000002496e-05, 4.4083000000000316e-05, 4.4096999999999886e-05, 4.4597000000000386e-05, 4.470800000000094e-05, 4.46800000000018e-05, 4.4638999999999096e-05, 4.4639000000002566e-05, 4.466599999999876e-05, 4.39999999999989e-05, 4.467999999999833e-05, 4.3819000000000496e-05, 4.4597000000000386e-05, 4.3903000000001385e-05, 4.4709000000000415e-05, 4.4722999999999985e-05, 4.46800000000018e-05, 4.4681000000001275e-05, 4.398599999999933e-05, 4.455600000000115e-05, 4.4624999999999526e-05, 4.405600000000065e-05, 4.4625000000002996e-05, 4.39999999999989e-05, 4.3860999999999206e-05, 4.376400000000169e-05, 4.457000000000072e-05, 4.381999999999997e-05, 4.39860000000028e-05, 4.458400000000029e-05, 4.455600000000115e-05, 4.380599999999693e-05, 4.38060000000004e-05, 4.376400000000169e-05, 4.4111000000002926e-05]</msg>
<status status="PASS" starttime="20201117 14:47:46.521" endtime="20201117 14:47:46.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.516" endtime="20201117 14:47:46.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.525" endtime="20201117 14:47:46.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.529" endtime="20201117 14:47:46.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.527" endtime="20201117 14:47:46.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.524" endtime="20201117 14:47:46.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.158" endtime="20201117 14:47:46.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.156" endtime="20201117 14:47:46.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.155" endtime="20201117 14:47:46.550"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.552" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.561" endtime="20201117 14:47:46.577"></status>
</kw>
<msg timestamp="20201117 14:47:46.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.560" endtime="20201117 14:47:46.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.579" endtime="20201117 14:47:46.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.581" endtime="20201117 14:47:46.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.557" endtime="20201117 14:47:46.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.554" endtime="20201117 14:47:46.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.590" endtime="20201117 14:47:46.877"></status>
</kw>
<msg timestamp="20201117 14:47:46.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024931625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024977111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.589" endtime="20201117 14:47:46.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024931625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024977111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.881" endtime="20201117 14:47:46.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.890" endtime="20201117 14:47:46.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.586" endtime="20201117 14:47:46.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.584" endtime="20201117 14:47:46.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.897" level="INFO">${RESULT} = [{'time': 0.024977111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.548600000000083e-05, 'source_diff': 4.548600000000083e-05}, {'time': 0.025024097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:46.893" endtime="20201117 14:47:46.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.910" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:46.897" endtime="20201117 14:47:46.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.914" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.913" endtime="20201117 14:47:46.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.917" level="INFO">VALUE: [4.548600000000083e-05, 4.4861000000000206e-05, 4.5069000000001747e-05, 4.4931000000001525e-05, 4.56939999999989e-05, 4.479199999999836e-05, 4.501399999999947e-05, 4.5611000000000956e-05, 4.4902999999998916e-05, 4.4888999999999346e-05, 4.5639000000000096e-05, 4.5680999999998806e-05, 4.501400000000294e-05, 4.5597000000001386e-05, 4.5652999999999666e-05, 4.477799999999879e-05, 4.5111000000000456e-05, 4.519400000000187e-05, 4.479200000000183e-05, 4.498599999999686e-05, 4.476399999999922e-05, 4.554199999999911e-05, 4.479199999999836e-05, 4.486199999999968e-05, 4.570800000000194e-05, 4.5138999999999596e-05, 4.559800000000086e-05, 4.5666999999999236e-05, 4.5652999999999666e-05, 4.480500000000193e-05, 4.5652999999999666e-05, 4.570800000000194e-05, 4.49999999999999e-05, 4.4874999999999776e-05, 4.4861000000000206e-05, 4.497200000000076e-05, 4.558299999999835e-05, 4.5388999999999846e-05, 4.508299999999785e-05, 4.494400000000162e-05, 4.573600000000108e-05, 4.479199999999836e-05, 4.4861000000000206e-05, 4.5639000000000096e-05, 4.536099999999724e-05, 4.4917000000001955e-05, 4.5639000000000096e-05, 4.4861000000000206e-05, 4.479200000000183e-05, 4.494399999999815e-05]</msg>
<status status="PASS" starttime="20201117 14:47:46.915" endtime="20201117 14:47:46.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.911" endtime="20201117 14:47:46.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.920" endtime="20201117 14:47:46.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.924" endtime="20201117 14:47:46.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.922" endtime="20201117 14:47:46.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.918" endtime="20201117 14:47:46.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.553" endtime="20201117 14:47:46.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.551" endtime="20201117 14:47:46.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.550" endtime="20201117 14:47:46.949"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.954" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.971" endtime="20201117 14:47:46.991"></status>
</kw>
<msg timestamp="20201117 14:47:46.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.968" endtime="20201117 14:47:46.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.994" endtime="20201117 14:47:46.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.000" endtime="20201117 14:47:47.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.962" endtime="20201117 14:47:47.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.958" endtime="20201117 14:47:47.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.019" endtime="20201117 14:47:47.311"></status>
</kw>
<msg timestamp="20201117 14:47:47.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040911736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040958181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.016" endtime="20201117 14:47:47.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040911736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040958181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.315" endtime="20201117 14:47:47.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.323" endtime="20201117 14:47:47.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.010" endtime="20201117 14:47:47.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.006" endtime="20201117 14:47:47.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.330" level="INFO">${RESULT} = [{'time': 0.040958181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6445000000006065e-05, 'source_diff': 4.6445000000006065e-05}, {'time': 0.041007167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:47.327" endtime="20201117 14:47:47.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.343" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:47.331" endtime="20201117 14:47:47.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.348" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:47:47.347" endtime="20201117 14:47:47.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.350" level="INFO">VALUE: [4.6445000000006065e-05, 4.6667000000000236e-05, 4.600000000000437e-05, 4.5695000000005315e-05, 4.58060000000024e-05, 4.602700000000404e-05, 4.611200000000093e-05, 4.672199999999904e-05, 4.655600000000315e-05, 4.599999999999743e-05, 4.5889000000000346e-05, 4.579199999999589e-05, 4.5889000000000346e-05, 4.5875000000000776e-05, 4.6625000000001526e-05, 4.576399999999675e-05, 4.6625000000001526e-05, 4.579099999999642e-05, 4.601400000000394e-05, 4.606899999999581e-05, 4.665299999999373e-05, 4.58060000000024e-05, 4.579200000000283e-05, 4.6611000000001956e-05, 4.673600000000555e-05, 4.677800000000426e-05, 4.677800000000426e-05, 4.5902999999999916e-05, 4.5902999999999916e-05, 4.5833000000002067e-05, 4.6708999999998946e-05, 4.675000000000512e-05, 4.6153000000000166e-05, 4.6597000000002387e-05, 4.672199999999904e-05, 4.583400000000154e-05, 4.605600000000265e-05, 4.608400000000179e-05, 4.6653000000000666e-05, 4.670799999999947e-05, 4.599999999999743e-05, 4.58060000000024e-05, 4.665200000000119e-05, 4.5861000000001206e-05, 4.5902999999999916e-05, 4.668000000000033e-05, 4.665200000000119e-05, 4.579099999999642e-05, 4.5847000000001636e-05, 4.6139000000000596e-05]</msg>
<status status="PASS" starttime="20201117 14:47:47.349" endtime="20201117 14:47:47.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.344" endtime="20201117 14:47:47.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.354" endtime="20201117 14:47:47.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:47.357" endtime="20201117 14:47:47.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.356" endtime="20201117 14:47:47.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.352" endtime="20201117 14:47:47.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.955" endtime="20201117 14:47:47.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.951" endtime="20201117 14:47:47.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.949" endtime="20201117 14:47:47.379"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.381" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.389" endtime="20201117 14:47:47.405"></status>
</kw>
<msg timestamp="20201117 14:47:47.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.387" endtime="20201117 14:47:47.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.407" endtime="20201117 14:47:47.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.409" endtime="20201117 14:47:47.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.385" endtime="20201117 14:47:47.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.383" endtime="20201117 14:47:47.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.418" endtime="20201117 14:47:47.705"></status>
</kw>
<msg timestamp="20201117 14:47:47.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024586569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024634222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.417" endtime="20201117 14:47:47.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024586569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024634222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.709" endtime="20201117 14:47:47.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.718" endtime="20201117 14:47:47.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.414" endtime="20201117 14:47:47.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.413" endtime="20201117 14:47:47.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.724" level="INFO">${RESULT} = [{'time': 0.024634222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7653000000001666e-05, 'source_diff': 4.7653000000001666e-05}, {'time': 0.024683222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:47.721" endtime="20201117 14:47:47.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.739" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:47.725" endtime="20201117 14:47:47.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.744" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:47:47.743" endtime="20201117 14:47:47.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.747" level="INFO">VALUE: [4.7653000000001666e-05, 4.6875000000001776e-05, 4.691600000000101e-05, 4.766699999999777e-05, 4.7013999999998e-05, 4.676400000000122e-05, 4.6903000000000916e-05, 4.697199999999929e-05, 4.698600000000233e-05, 4.684699999999917e-05, 4.705600000000018e-05, 4.698600000000233e-05, 4.679100000000089e-05, 4.7695000000000376e-05, 4.7681000000000806e-05, 4.677800000000079e-05, 4.6903000000000916e-05, 4.763899999999863e-05, 4.711099999999899e-05, 4.677700000000132e-05, 4.709800000000236e-05, 4.6875000000001776e-05, 4.676400000000122e-05, 4.701400000000147e-05, 4.7667000000001236e-05, 4.713899999999813e-05, 4.754100000000164e-05, 4.697199999999929e-05, 4.755500000000121e-05, 4.765200000000219e-05, 4.708299999999985e-05, 4.676399999999775e-05, 4.676399999999775e-05, 4.752799999999807e-05, 4.7611000000002957e-05, 4.693000000000058e-05, 4.6847000000002637e-05, 4.6861000000002206e-05, 4.761099999999949e-05, 4.684699999999917e-05, 4.70000000000019e-05, 4.761099999999949e-05, 4.770800000000047e-05, 4.737499999999881e-05, 4.6917000000000486e-05, 4.706999999999975e-05, 4.7111000000002456e-05, 4.6903000000000916e-05, 4.755600000000068e-05, 4.755600000000068e-05]</msg>
<status status="PASS" starttime="20201117 14:47:47.745" endtime="20201117 14:47:47.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.740" endtime="20201117 14:47:47.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.750" endtime="20201117 14:47:47.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:47.754" endtime="20201117 14:47:47.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.752" endtime="20201117 14:47:47.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.748" endtime="20201117 14:47:47.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.382" endtime="20201117 14:47:47.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.380" endtime="20201117 14:47:47.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.379" endtime="20201117 14:47:47.775"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.777" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.785" endtime="20201117 14:47:47.801"></status>
</kw>
<msg timestamp="20201117 14:47:47.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.784" endtime="20201117 14:47:47.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.803" endtime="20201117 14:47:47.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.805" endtime="20201117 14:47:47.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.781" endtime="20201117 14:47:47.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.779" endtime="20201117 14:47:47.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.814" endtime="20201117 14:47:48.100"></status>
</kw>
<msg timestamp="20201117 14:47:48.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024151528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024199389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.813" endtime="20201117 14:47:48.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024151528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024199389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.105" endtime="20201117 14:47:48.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.113" endtime="20201117 14:47:48.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.810" endtime="20201117 14:47:48.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.809" endtime="20201117 14:47:48.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:48.120" level="INFO">${RESULT} = [{'time': 0.024199389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7861000000003207e-05, 'source_diff': 4.7861000000003207e-05}, {'time': 0.024250375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:48.116" endtime="20201117 14:47:48.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.133" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:48.121" endtime="20201117 14:47:48.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.138" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.137" endtime="20201117 14:47:48.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.140" level="INFO">VALUE: [4.7861000000003207e-05, 4.858300000000135e-05, 4.855600000000168e-05, 4.811099999999999e-05, 4.779199999999789e-05, 4.8681000000001806e-05, 4.784700000000017e-05, 4.779200000000136e-05, 4.7959000000000196e-05, 4.859800000000039e-05, 4.7972999999999766e-05, 4.7903000000001916e-05, 4.8708999999997477e-05, 4.875000000000018e-05, 4.875000000000018e-05, 4.867999999999886e-05, 4.8667000000002236e-05, 4.783299999999713e-05, 4.786199999999921e-05, 4.779099999999842e-05, 4.808300000000085e-05, 4.865199999999972e-05, 4.809700000000042e-05, 4.8707999999998e-05, 4.804099999999867e-05, 4.875000000000018e-05, 4.791600000000201e-05, 4.862500000000006e-05, 4.795800000000072e-05, 4.80000000000029e-05, 4.787499999999931e-05, 4.793000000000158e-05, 4.858300000000135e-05, 4.7889000000002346e-05, 4.811099999999999e-05, 4.8709000000000946e-05, 4.786099999999974e-05, 4.857000000000125e-05, 4.875000000000018e-05, 4.779200000000136e-05, 4.780600000000093e-05, 4.799999999999943e-05, 4.788899999999888e-05, 4.8653000000002666e-05, 4.862500000000006e-05, 4.7945000000000626e-05, 4.855600000000168e-05, 4.859799999999692e-05, 4.8709000000000946e-05, 4.863899999999963e-05]</msg>
<status status="PASS" starttime="20201117 14:47:48.139" endtime="20201117 14:47:48.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.134" endtime="20201117 14:47:48.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.144" endtime="20201117 14:47:48.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.147" endtime="20201117 14:47:48.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.146" endtime="20201117 14:47:48.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.142" endtime="20201117 14:47:48.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.778" endtime="20201117 14:47:48.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.776" endtime="20201117 14:47:48.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.775" endtime="20201117 14:47:48.168"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.171" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.180" endtime="20201117 14:47:48.196"></status>
</kw>
<msg timestamp="20201117 14:47:48.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.178" endtime="20201117 14:47:48.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.197" endtime="20201117 14:47:48.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.200" endtime="20201117 14:47:48.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.175" endtime="20201117 14:47:48.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.173" endtime="20201117 14:47:48.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.209" endtime="20201117 14:47:48.495"></status>
</kw>
<msg timestamp="20201117 14:47:48.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02549675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025545764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:48.207" endtime="20201117 14:47:48.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02549675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025545764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:48.500" endtime="20201117 14:47:48.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.508" endtime="20201117 14:47:48.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.205" endtime="20201117 14:47:48.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.203" endtime="20201117 14:47:48.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:48.515" level="INFO">${RESULT} = [{'time': 0.025545764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9014e-05, 'source_diff': 4.9014e-05}, {'time': 0.025596764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.886100000000074e-...</msg>
<status status="PASS" starttime="20201117 14:47:48.512" endtime="20201117 14:47:48.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.528" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:48.516" endtime="20201117 14:47:48.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.533" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.532" endtime="20201117 14:47:48.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.535" level="INFO">VALUE: [4.9014e-05, 4.886100000000074e-05, 4.906999999999828e-05, 4.959699999999845e-05, 4.88469999999977e-05, 4.974999999999771e-05, 4.883400000000107e-05, 4.888899999999988e-05, 4.976400000000075e-05, 4.961199999999749e-05, 4.895800000000172e-05, 4.887500000000031e-05, 4.876399999999975e-05, 4.954199999999964e-05, 4.88200000000015e-05, 4.972200000000204e-05, 4.876300000000028e-05, 4.972199999999857e-05, 4.976399999999728e-05, 4.877699999999985e-05, 4.876400000000322e-05, 4.963900000000063e-05, 4.9014e-05, 4.902799999999957e-05, 4.911100000000099e-05, 4.894399999999868e-05, 4.904199999999914e-05, 4.88330000000016e-05, 4.959700000000192e-05, 4.895799999999825e-05, 4.907000000000175e-05, 4.875000000000018e-05, 4.975000000000118e-05, 4.877799999999932e-05, 4.913900000000013e-05, 4.876399999999975e-05, 4.9695000000002376e-05, 4.897200000000129e-05, 4.966699999999977e-05, 4.873600000000061e-05, 4.913900000000013e-05, 4.96530000000002e-05, 4.881999999999803e-05, 4.963900000000063e-05, 4.969499999999891e-05, 4.959699999999845e-05, 4.884700000000117e-05, 4.9681000000002806e-05, 4.961100000000149e-05, 4.873600000000061e-05]</msg>
<status status="PASS" starttime="20201117 14:47:48.534" endtime="20201117 14:47:48.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.529" endtime="20201117 14:47:48.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.539" endtime="20201117 14:47:48.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.542" endtime="20201117 14:47:48.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.541" endtime="20201117 14:47:48.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.537" endtime="20201117 14:47:48.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.171" endtime="20201117 14:47:48.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.169" endtime="20201117 14:47:48.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.169" endtime="20201117 14:47:48.563"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.566" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.574" endtime="20201117 14:47:48.590"></status>
</kw>
<msg timestamp="20201117 14:47:48.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.572" endtime="20201117 14:47:48.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.592" endtime="20201117 14:47:48.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.594" endtime="20201117 14:47:48.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.570" endtime="20201117 14:47:48.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.568" endtime="20201117 14:47:48.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.604" endtime="20201117 14:47:48.891"></status>
</kw>
<msg timestamp="20201117 14:47:48.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024227125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024277597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.602" endtime="20201117 14:47:48.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024227125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024277597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.895" endtime="20201117 14:47:48.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.903" endtime="20201117 14:47:48.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.599" endtime="20201117 14:47:48.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.598" endtime="20201117 14:47:48.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:48.910" level="INFO">${RESULT} = [{'time': 0.024277597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.047200000000279e-05, 'source_diff': 5.047200000000279e-05}, {'time': 0.024329583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:48.907" endtime="20201117 14:47:48.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.923" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:48.911" endtime="20201117 14:47:48.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.928" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.927" endtime="20201117 14:47:48.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.930" level="INFO">VALUE: [5.047200000000279e-05, 4.995799999999925e-05, 5.074999999999871e-05, 5.011099999999852e-05, 5.008299999999938e-05, 4.997199999999882e-05, 4.988900000000088e-05, 5.001399999999753e-05, 5.076399999999828e-05, 4.988900000000088e-05, 5.06530000000012e-05, 4.995799999999925e-05, 4.98469999999987e-05, 4.98469999999987e-05, 5.004200000000014e-05, 5.066700000000077e-05, 5.004200000000014e-05, 5.008299999999938e-05, 4.98339999999986e-05, 4.977800000000032e-05, 5.002699999999763e-05, 4.994499999999916e-05, 4.999999999999796e-05, 5.069499999999991e-05, 4.988900000000088e-05, 5.005500000000024e-05, 4.993099999999959e-05, 5.004100000000067e-05, 5.06530000000012e-05, 5.01530000000007e-05, 5.066700000000077e-05, 5.054199999999717e-05, 4.980499999999999e-05, 5.012499999999809e-05, 5.072199999999957e-05, 5.063899999999816e-05, 4.987499999999784e-05, 4.987500000000131e-05, 5.00270000000011e-05, 4.9707999999999e-05, 5.001399999999753e-05, 5.050000000000193e-05, 5.002800000000057e-05, 4.997199999999882e-05, 5.069400000000043e-05, 4.994399999999968e-05, 5.000000000000143e-05, 4.980599999999946e-05, 5.062500000000206e-05, 5.076399999999828e-05]</msg>
<status status="PASS" starttime="20201117 14:47:48.929" endtime="20201117 14:47:48.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.924" endtime="20201117 14:47:48.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.934" endtime="20201117 14:47:48.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.937" endtime="20201117 14:47:48.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.935" endtime="20201117 14:47:48.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.932" endtime="20201117 14:47:48.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.566" endtime="20201117 14:47:48.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.564" endtime="20201117 14:47:48.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.564" endtime="20201117 14:47:48.958"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.960" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.969" endtime="20201117 14:47:48.985"></status>
</kw>
<msg timestamp="20201117 14:47:48.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.967" endtime="20201117 14:47:48.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.986" endtime="20201117 14:47:48.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.989" endtime="20201117 14:47:48.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.965" endtime="20201117 14:47:48.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.963" endtime="20201117 14:47:48.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.998" endtime="20201117 14:47:49.284"></status>
</kw>
<msg timestamp="20201117 14:47:49.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024442278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024493736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.997" endtime="20201117 14:47:49.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024442278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024493736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.288" endtime="20201117 14:47:49.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.297" endtime="20201117 14:47:49.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.994" endtime="20201117 14:47:49.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.992" endtime="20201117 14:47:49.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.303" level="INFO">${RESULT} = [{'time': 0.024493736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1457999999997284e-05, 'source_diff': 5.1457999999997284e-05}, {'time': 0.024546722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:49.300" endtime="20201117 14:47:49.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:49.318" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:49.304" endtime="20201117 14:47:49.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.323" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:47:49.322" endtime="20201117 14:47:49.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.325" level="INFO">VALUE: [5.1457999999997284e-05, 5.079100000000142e-05, 5.155499999999827e-05, 5.174999999999971e-05, 5.1708000000001e-05, 5.158300000000088e-05, 5.102800000000157e-05, 5.109699999999995e-05, 5.158300000000088e-05, 5.163899999999916e-05, 5.161100000000002e-05, 5.11530000000017e-05, 5.099999999999896e-05, 5.108399999999985e-05, 5.087499999999884e-05, 5.08469999999997e-05, 5.170900000000048e-05, 5.087499999999884e-05, 5.079199999999742e-05, 5.108399999999985e-05, 5.155600000000121e-05, 5.163899999999916e-05, 5.091700000000102e-05, 5.107000000000028e-05, 5.1708000000001e-05, 5.136199999999924e-05, 5.172200000000057e-05, 5.159700000000045e-05, 5.177800000000232e-05, 5.0902000000001973e-05, 5.109699999999995e-05, 5.087499999999884e-05, 5.168000000000186e-05, 5.1014000000002e-05, 5.083300000000013e-05, 5.173600000000014e-05, 5.088900000000188e-05, 5.1708000000001e-05, 5.140299999999848e-05, 5.1679999999998394e-05, 5.097199999999982e-05, 5.081900000000056e-05, 5.161100000000002e-05, 5.087499999999884e-05, 5.104199999999767e-05, 5.1151999999998754e-05, 5.082000000000003e-05, 5.161100000000002e-05, 5.161100000000002e-05, 5.080600000000046e-05]</msg>
<status status="PASS" starttime="20201117 14:47:49.324" endtime="20201117 14:47:49.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.319" endtime="20201117 14:47:49.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.328" endtime="20201117 14:47:49.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:49.332" endtime="20201117 14:47:49.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.330" endtime="20201117 14:47:49.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.327" endtime="20201117 14:47:49.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.961" endtime="20201117 14:47:49.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.959" endtime="20201117 14:47:49.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.958" endtime="20201117 14:47:49.353"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.355" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.364" endtime="20201117 14:47:49.380"></status>
</kw>
<msg timestamp="20201117 14:47:49.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.363" endtime="20201117 14:47:49.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.382" endtime="20201117 14:47:49.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.384" endtime="20201117 14:47:49.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.360" endtime="20201117 14:47:49.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.357" endtime="20201117 14:47:49.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.393" endtime="20201117 14:47:49.679"></status>
</kw>
<msg timestamp="20201117 14:47:49.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02491675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024968667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:49.392" endtime="20201117 14:47:49.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02491675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024968667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:49.684" endtime="20201117 14:47:49.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.692" endtime="20201117 14:47:49.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.389" endtime="20201117 14:47:49.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.387" endtime="20201117 14:47:49.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.699" level="INFO">${RESULT} = [{'time': 0.024968667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.191699999999855e-05, 'source_diff': 5.191699999999855e-05}, {'time': 0.025023653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:49.695" endtime="20201117 14:47:49.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:49.712" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:49.700" endtime="20201117 14:47:49.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.717" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:47:49.716" endtime="20201117 14:47:49.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.719" level="INFO">VALUE: [5.191699999999855e-05, 5.259700000000145e-05, 5.193099999999812e-05, 5.263900000000016e-05, 5.182000000000103e-05, 5.172300000000005e-05, 5.211100000000052e-05, 5.262500000000059e-05, 5.205500000000224e-05, 5.265299999999973e-05, 5.2166000000002793e-05, 5.275000000000071e-05, 5.1901999999999504e-05, 5.184699999999723e-05, 5.198600000000039e-05, 5.273600000000114e-05, 5.187499999999984e-05, 5.2708000000002e-05, 5.1929999999998644e-05, 5.180599999999799e-05, 5.181899999999809e-05, 5.187499999999984e-05, 5.262500000000059e-05, 5.180499999999852e-05, 5.258299999999841e-05, 5.213899999999966e-05, 5.187499999999984e-05, 5.194500000000116e-05, 5.268099999999887e-05, 5.240299999999948e-05, 5.265299999999973e-05, 5.263900000000016e-05, 5.201399999999953e-05, 5.268100000000234e-05, 5.187499999999984e-05, 5.256999999999831e-05, 5.2707999999998534e-05, 5.255600000000221e-05, 5.170900000000048e-05, 5.198699999999987e-05, 5.262500000000059e-05, 5.187499999999984e-05, 5.262499999999712e-05, 5.177699999999938e-05, 5.173600000000014e-05, 5.256899999999884e-05, 5.201399999999953e-05, 5.262500000000059e-05, 5.176399999999928e-05, 5.180500000000199e-05]</msg>
<status status="PASS" starttime="20201117 14:47:49.718" endtime="20201117 14:47:49.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.713" endtime="20201117 14:47:49.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.722" endtime="20201117 14:47:49.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:49.726" endtime="20201117 14:47:49.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.724" endtime="20201117 14:47:49.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.721" endtime="20201117 14:47:49.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.356" endtime="20201117 14:47:49.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.354" endtime="20201117 14:47:49.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.353" endtime="20201117 14:47:49.747"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.750" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.758" endtime="20201117 14:47:49.775"></status>
</kw>
<msg timestamp="20201117 14:47:49.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.756" endtime="20201117 14:47:49.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.777" endtime="20201117 14:47:49.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.779" endtime="20201117 14:47:49.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.754" endtime="20201117 14:47:49.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.752" endtime="20201117 14:47:49.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.788" endtime="20201117 14:47:50.076"></status>
</kw>
<msg timestamp="20201117 14:47:50.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025150278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025203792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.787" endtime="20201117 14:47:50.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025150278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025203792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.080" endtime="20201117 14:47:50.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.088" endtime="20201117 14:47:50.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.784" endtime="20201117 14:47:50.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.783" endtime="20201117 14:47:50.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:50.095" level="INFO">${RESULT} = [{'time': 0.025203792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3513999999997564e-05, 'source_diff': 5.3513999999997564e-05}, {'time': 0.025258792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:50.091" endtime="20201117 14:47:50.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:50.108" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:50.096" endtime="20201117 14:47:50.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.113" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.112" endtime="20201117 14:47:50.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.115" level="INFO">VALUE: [5.3513999999997564e-05, 5.288899999999694e-05, 5.288900000000041e-05, 5.373600000000214e-05, 5.363899999999769e-05, 5.287500000000084e-05, 5.305499999999977e-05, 5.35410000000007e-05, 5.276300000000081e-05, 5.3680000000000394e-05, 5.356899999999984e-05, 5.3735999999998674e-05, 5.281899999999909e-05, 5.300000000000096e-05, 5.356899999999984e-05, 5.373600000000214e-05, 5.3707999999999534e-05, 5.276400000000028e-05, 5.304199999999967e-05, 5.281899999999909e-05, 5.363900000000116e-05, 5.294499999999869e-05, 5.290299999999998e-05, 5.361099999999855e-05, 5.306999999999881e-05, 5.311099999999805e-05, 5.294500000000216e-05, 5.283399999999813e-05, 5.309799999999795e-05, 5.3735999999998674e-05, 5.361200000000149e-05, 5.365300000000073e-05, 5.301400000000053e-05, 5.369499999999944e-05, 5.298600000000139e-05, 5.356899999999984e-05, 5.356899999999984e-05, 5.365300000000073e-05, 5.283300000000213e-05, 5.305499999999977e-05, 5.287500000000084e-05, 5.311099999999805e-05, 5.3693999999999964e-05, 5.3721999999999104e-05, 5.356899999999984e-05, 5.355500000000027e-05, 5.3680000000000394e-05, 5.3680000000000394e-05, 5.2943999999999214e-05, 5.36670000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:47:50.114" endtime="20201117 14:47:50.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.109" endtime="20201117 14:47:50.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.119" endtime="20201117 14:47:50.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:50.122" endtime="20201117 14:47:50.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.121" endtime="20201117 14:47:50.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.117" endtime="20201117 14:47:50.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.750" endtime="20201117 14:47:50.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.749" endtime="20201117 14:47:50.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.748" endtime="20201117 14:47:50.143"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.146" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.154" endtime="20201117 14:47:50.171"></status>
</kw>
<msg timestamp="20201117 14:47:50.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.152" endtime="20201117 14:47:50.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.172" endtime="20201117 14:47:50.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.175" endtime="20201117 14:47:50.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.150" endtime="20201117 14:47:50.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.148" endtime="20201117 14:47:50.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.184" endtime="20201117 14:47:50.471"></status>
</kw>
<msg timestamp="20201117 14:47:50.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024159125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024213847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.182" endtime="20201117 14:47:50.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024159125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024213847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.475" endtime="20201117 14:47:50.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.483" endtime="20201117 14:47:50.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.180" endtime="20201117 14:47:50.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.178" endtime="20201117 14:47:50.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:50.490" level="INFO">${RESULT} = [{'time': 0.024213847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4722000000000104e-05, 'source_diff': 5.4722000000000104e-05}, {'time': 0.024269847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:50.487" endtime="20201117 14:47:50.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:50.504" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:50.491" endtime="20201117 14:47:50.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.508" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.507" endtime="20201117 14:47:50.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.511" level="INFO">VALUE: [5.4722000000000104e-05, 5.386100000000227e-05, 5.451299999999909e-05, 5.475000000000271e-05, 5.4651999999998785e-05, 5.459699999999998e-05, 5.3957999999999784e-05, 5.3693999999999964e-05, 5.398600000000239e-05, 5.3999999999998494e-05, 5.4722000000000104e-05, 5.4680000000001394e-05, 5.3930000000000644e-05, 5.438900000000191e-05, 5.3749999999998244e-05, 5.458300000000041e-05, 5.3930000000000644e-05, 5.391700000000055e-05, 5.4735999999999674e-05, 5.383299999999966e-05, 5.4013999999998064e-05, 5.461099999999955e-05, 5.469499999999697e-05, 5.463899999999869e-05, 5.409699999999948e-05, 5.465300000000173e-05, 5.3777999999997383e-05, 5.405600000000024e-05, 5.411099999999905e-05, 5.432000000000006e-05, 5.3999999999998494e-05, 5.405500000000077e-05, 5.454099999999823e-05, 5.41670000000008e-05, 5.41670000000008e-05, 5.3999999999998494e-05, 5.479200000000142e-05, 5.4693999999997495e-05, 5.380500000000052e-05, 5.4666000000001824e-05, 5.438900000000191e-05, 5.387499999999837e-05, 5.412499999999862e-05, 5.479200000000142e-05, 5.438899999999844e-05, 5.45549999999978e-05, 5.406900000000034e-05, 5.3971999999999354e-05, 5.4735999999999674e-05, 5.386100000000227e-05]</msg>
<status status="PASS" starttime="20201117 14:47:50.509" endtime="20201117 14:47:50.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.504" endtime="20201117 14:47:50.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.514" endtime="20201117 14:47:50.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:50.518" endtime="20201117 14:47:50.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.516" endtime="20201117 14:47:50.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.513" endtime="20201117 14:47:50.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.146" endtime="20201117 14:47:50.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.145" endtime="20201117 14:47:50.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.144" endtime="20201117 14:47:50.539"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.541" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.550" endtime="20201117 14:47:50.566"></status>
</kw>
<msg timestamp="20201117 14:47:50.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.548" endtime="20201117 14:47:50.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.568" endtime="20201117 14:47:50.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.571" endtime="20201117 14:47:50.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.545" endtime="20201117 14:47:50.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.543" endtime="20201117 14:47:50.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.580" endtime="20201117 14:47:50.867"></status>
</kw>
<msg timestamp="20201117 14:47:50.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024365278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024420958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.578" endtime="20201117 14:47:50.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024365278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024420958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.871" endtime="20201117 14:47:50.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.879" endtime="20201117 14:47:50.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.575" endtime="20201117 14:47:50.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.574" endtime="20201117 14:47:50.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:50.886" level="INFO">${RESULT} = [{'time': 0.024420958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5679999999998925e-05, 'source_diff': 5.5679999999998925e-05}, {'time': 0.024477958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:50.882" endtime="20201117 14:47:50.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:50.906" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:50.892" endtime="20201117 14:47:50.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.910" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.909" endtime="20201117 14:47:50.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.913" level="INFO">VALUE: [5.5679999999998925e-05, 5.483300000000066e-05, 5.500000000000296e-05, 5.5736000000000674e-05, 5.559700000000098e-05, 5.565299999999926e-05, 5.555500000000227e-05, 5.481899999999762e-05, 5.5736000000000674e-05, 5.5708000000001534e-05, 5.577699999999991e-05, 5.569500000000144e-05, 5.568100000000187e-05, 5.48609999999998e-05, 5.565300000000273e-05, 5.561100000000055e-05, 5.476400000000228e-05, 5.483400000000013e-05, 5.5722000000001104e-05, 5.5013999999999064e-05, 5.509799999999995e-05, 5.4763999999998814e-05, 5.537499999999987e-05, 5.493100000000112e-05, 5.507000000000081e-05, 5.5665999999999355e-05, 5.483300000000066e-05, 5.4958000000000784e-05, 5.4999999999999494e-05, 5.555500000000227e-05, 5.565299999999926e-05, 5.5679999999998925e-05, 5.4930000000001644e-05, 5.565299999999926e-05, 5.477800000000185e-05, 5.4999999999999494e-05, 5.559700000000098e-05, 5.512499999999962e-05, 5.480500000000152e-05, 5.5013999999999064e-05, 5.4763999999998814e-05, 5.566699999999883e-05, 5.556900000000184e-05, 5.4999999999999494e-05, 5.495900000000026e-05, 5.501400000000253e-05, 5.561100000000055e-05, 5.559700000000098e-05, 5.48609999999998e-05, 5.506899999999787e-05]</msg>
<status status="PASS" starttime="20201117 14:47:50.911" endtime="20201117 14:47:50.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.907" endtime="20201117 14:47:50.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.916" endtime="20201117 14:47:50.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:50.919" endtime="20201117 14:47:50.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.918" endtime="20201117 14:47:50.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.914" endtime="20201117 14:47:50.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.542" endtime="20201117 14:47:50.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.540" endtime="20201117 14:47:50.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.539" endtime="20201117 14:47:50.941"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.943" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.951" endtime="20201117 14:47:50.969"></status>
</kw>
<msg timestamp="20201117 14:47:50.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.950" endtime="20201117 14:47:50.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.970" endtime="20201117 14:47:50.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.973" endtime="20201117 14:47:50.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.947" endtime="20201117 14:47:50.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.945" endtime="20201117 14:47:50.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.982" endtime="20201117 14:47:51.268"></status>
</kw>
<msg timestamp="20201117 14:47:51.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024373861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024430069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.980" endtime="20201117 14:47:51.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024373861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024430069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.272" endtime="20201117 14:47:51.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.281" endtime="20201117 14:47:51.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.977" endtime="20201117 14:47:51.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.976" endtime="20201117 14:47:51.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.288" level="INFO">${RESULT} = [{'time': 0.024430069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6207999999998565e-05, 'source_diff': 5.6207999999998565e-05}, {'time': 0.024488028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:51.284" endtime="20201117 14:47:51.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:51.301" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:51.289" endtime="20201117 14:47:51.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.305" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:47:51.304" endtime="20201117 14:47:51.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.308" level="INFO">VALUE: [5.6207999999998565e-05, 5.5763999999999814e-05, 5.58480000000007e-05, 5.6041999999999204e-05, 5.670899999999854e-05, 5.669499999999897e-05, 5.661099999999808e-05, 5.612500000000062e-05, 5.6041999999999204e-05, 5.60549999999993e-05, 5.662500000000112e-05, 5.587500000000037e-05, 5.613900000000019e-05, 5.609700000000148e-05, 5.5957999999998315e-05, 5.609700000000148e-05, 5.6707999999999065e-05, 5.619500000000194e-05, 5.615299999999976e-05, 5.581900000000209e-05, 5.5986000000000924e-05, 5.605600000000224e-05, 5.6735999999998205e-05, 5.5763999999999814e-05, 5.5986000000000924e-05, 5.661100000000155e-05, 5.594499999999822e-05, 5.658399999999841e-05, 5.590299999999951e-05, 5.659800000000145e-05, 5.662500000000112e-05, 5.58480000000007e-05, 5.6791999999999954e-05, 5.58749999999969e-05, 5.637500000000087e-05, 5.595900000000126e-05, 5.6014000000000064e-05, 5.6000000000000494e-05, 5.5958000000001784e-05, 5.6000000000000494e-05, 5.6666000000000355e-05, 5.663900000000069e-05, 5.587500000000037e-05, 5.5915999999999605e-05, 5.608299999999844e-05, 5.5930000000002644e-05, 5.584700000000123e-05, 5.6693999999999495e-05, 5.588899999999994e-05, 5.6014000000000064e-05]</msg>
<status status="PASS" starttime="20201117 14:47:51.307" endtime="20201117 14:47:51.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.302" endtime="20201117 14:47:51.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.311" endtime="20201117 14:47:51.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:51.315" endtime="20201117 14:47:51.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.313" endtime="20201117 14:47:51.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.310" endtime="20201117 14:47:51.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.944" endtime="20201117 14:47:51.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.942" endtime="20201117 14:47:51.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.941" endtime="20201117 14:47:51.336"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.338" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.346" endtime="20201117 14:47:51.364"></status>
</kw>
<msg timestamp="20201117 14:47:51.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.345" endtime="20201117 14:47:51.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.365" endtime="20201117 14:47:51.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.368" endtime="20201117 14:47:51.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.342" endtime="20201117 14:47:51.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.340" endtime="20201117 14:47:51.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.377" endtime="20201117 14:47:51.664"></status>
</kw>
<msg timestamp="20201117 14:47:51.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02422275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024279833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:51.375" endtime="20201117 14:47:51.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02422275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024279833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:51.669" endtime="20201117 14:47:51.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.677" endtime="20201117 14:47:51.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.373" endtime="20201117 14:47:51.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.371" endtime="20201117 14:47:51.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.684" level="INFO">${RESULT} = [{'time': 0.024279833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708299999999944e-05, 'source_diff': 5.708299999999944e-05}, {'time': 0.024338819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:51.680" endtime="20201117 14:47:51.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:51.697" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:51.685" endtime="20201117 14:47:51.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.702" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:47:51.701" endtime="20201117 14:47:51.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.704" level="INFO">VALUE: [5.708299999999944e-05, 5.6972000000002354e-05, 5.7721999999999635e-05, 5.684699999999876e-05, 5.709699999999901e-05, 5.6915999999997136e-05, 5.754099999999776e-05, 5.704100000000073e-05, 5.688900000000094e-05, 5.683299999999919e-05, 5.6916000000000605e-05, 5.758299999999994e-05, 5.686099999999833e-05, 5.7028000000000634e-05, 5.7569999999999844e-05, 5.765300000000126e-05, 5.7708000000000065e-05, 5.6721999999998635e-05, 5.762499999999865e-05, 5.763900000000169e-05, 5.7014000000001064e-05, 5.7055999999999774e-05, 5.7556000000000274e-05, 5.763900000000169e-05, 5.772299999999911e-05, 5.691700000000008e-05, 5.7583999999999413e-05, 5.687500000000137e-05, 5.6805999999999524e-05, 5.763900000000169e-05, 5.682000000000256e-05, 5.680500000000005e-05, 5.755499999999733e-05, 5.6943999999999745e-05, 5.6943999999999745e-05, 5.711100000000205e-05, 5.754099999999776e-05, 5.7680000000000925e-05, 5.762500000000212e-05, 5.680500000000005e-05, 5.75550000000008e-05, 5.7014000000001064e-05, 5.7778000000001384e-05, 5.686099999999833e-05, 5.7042000000000204e-05, 5.761099999999908e-05, 5.759699999999951e-05, 5.6764000000000814e-05, 5.715300000000076e-05, 5.7556000000000274e-05]</msg>
<status status="PASS" starttime="20201117 14:47:51.703" endtime="20201117 14:47:51.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.698" endtime="20201117 14:47:51.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.707" endtime="20201117 14:47:51.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:51.711" endtime="20201117 14:47:51.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.709" endtime="20201117 14:47:51.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.706" endtime="20201117 14:47:51.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.339" endtime="20201117 14:47:51.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.337" endtime="20201117 14:47:51.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.336" endtime="20201117 14:47:51.732"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.734" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.742" endtime="20201117 14:47:51.759"></status>
</kw>
<msg timestamp="20201117 14:47:51.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.741" endtime="20201117 14:47:51.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.761" endtime="20201117 14:47:51.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.764" endtime="20201117 14:47:51.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.738" endtime="20201117 14:47:51.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.736" endtime="20201117 14:47:51.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.773" endtime="20201117 14:47:52.060"></status>
</kw>
<msg timestamp="20201117 14:47:52.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024260764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024318611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.771" endtime="20201117 14:47:52.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024260764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024318611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.064" endtime="20201117 14:47:52.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.072" endtime="20201117 14:47:52.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.769" endtime="20201117 14:47:52.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.767" endtime="20201117 14:47:52.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.079" level="INFO">${RESULT} = [{'time': 0.024318611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.784699999999976e-05, 'source_diff': 5.784699999999976e-05}, {'time': 0.024379611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:52.076" endtime="20201117 14:47:52.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.092" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:52.080" endtime="20201117 14:47:52.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.097" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.096" endtime="20201117 14:47:52.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.099" level="INFO">VALUE: [5.784699999999976e-05, 5.8736000000000205e-05, 5.788899999999847e-05, 5.862500000000312e-05, 5.7985999999999455e-05, 5.794500000000022e-05, 5.7958000000000315e-05, 5.7778000000001384e-05, 5.8041999999997734e-05, 5.786099999999933e-05, 5.766700000000083e-05, 5.865299999999879e-05, 5.784799999999923e-05, 5.811099999999958e-05, 5.788900000000194e-05, 5.808300000000044e-05, 5.793100000000065e-05, 5.787500000000237e-05, 5.8679999999998456e-05, 5.779100000000148e-05, 5.8000000000002494e-05, 5.809700000000001e-05, 5.8736000000000205e-05, 5.7943999999997275e-05, 5.8027999999998164e-05, 5.7792000000000954e-05, 5.863899999999922e-05, 5.8694000000001495e-05, 5.7958000000000315e-05, 5.783300000000019e-05, 5.812499999999915e-05, 5.7792000000000954e-05, 5.78610000000028e-05, 5.861100000000008e-05, 5.858299999999747e-05, 5.7806000000000524e-05, 5.870900000000054e-05, 5.809700000000001e-05, 5.791699999999761e-05, 5.8070000000000344e-05, 5.787500000000237e-05, 5.8708000000001065e-05, 5.7792000000000954e-05, 5.78480000000027e-05, 5.865299999999879e-05, 5.8000000000002494e-05, 5.802699999999869e-05, 5.7971999999999885e-05, 5.8777999999998914e-05, 5.7901999999998566e-05]</msg>
<status status="PASS" starttime="20201117 14:47:52.098" endtime="20201117 14:47:52.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.093" endtime="20201117 14:47:52.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.103" endtime="20201117 14:47:52.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.106" endtime="20201117 14:47:52.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.105" endtime="20201117 14:47:52.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.101" endtime="20201117 14:47:52.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.735" endtime="20201117 14:47:52.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.733" endtime="20201117 14:47:52.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.732" endtime="20201117 14:47:52.127"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.130" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.138" endtime="20201117 14:47:52.155"></status>
</kw>
<msg timestamp="20201117 14:47:52.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.137" endtime="20201117 14:47:52.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.157" endtime="20201117 14:47:52.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.160" endtime="20201117 14:47:52.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.134" endtime="20201117 14:47:52.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.132" endtime="20201117 14:47:52.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.169" endtime="20201117 14:47:52.456"></status>
</kw>
<msg timestamp="20201117 14:47:52.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024870097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024929278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.167" endtime="20201117 14:47:52.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024870097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024929278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.460" endtime="20201117 14:47:52.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.469" endtime="20201117 14:47:52.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.164" endtime="20201117 14:47:52.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.163" endtime="20201117 14:47:52.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.475" level="INFO">${RESULT} = [{'time': 0.024929278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.918099999999843e-05, 'source_diff': 5.918099999999843e-05}, {'time': 0.024991292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:52.472" endtime="20201117 14:47:52.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.490" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:52.476" endtime="20201117 14:47:52.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.495" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.493" endtime="20201117 14:47:52.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.497" level="INFO">VALUE: [5.918099999999843e-05, 5.96949999999985e-05, 5.888899999999947e-05, 5.9069999999997874e-05, 5.88749999999999e-05, 5.9638000000000746e-05, 5.9028000000002634e-05, 5.969500000000197e-05, 5.8943999999998276e-05, 5.9612000000000553e-05, 5.888899999999947e-05, 5.88749999999999e-05, 5.879099999999901e-05, 5.8915999999999136e-05, 5.9777999999999915e-05, 5.887500000000337e-05, 5.8958000000001315e-05, 5.958299999999847e-05, 5.8749999999999775e-05, 5.9027999999999164e-05, 5.8777999999998914e-05, 5.909700000000101e-05, 5.9750000000000775e-05, 5.962499999999718e-05, 5.8694000000001495e-05, 5.96810000000024e-05, 5.9555999999998804e-05, 5.965299999999979e-05, 5.968099999999893e-05, 5.8834000000000664e-05, 5.891699999999861e-05, 5.890300000000251e-05, 5.908300000000144e-05, 5.891700000000208e-05, 5.9750000000000775e-05, 5.880499999999858e-05, 5.8930000000002175e-05, 5.8722000000000635e-05, 5.9721999999998165e-05, 5.8986000000000455e-05, 5.908300000000144e-05, 5.90550000000023e-05, 5.9013999999999595e-05, 5.912500000000015e-05, 5.879099999999901e-05, 5.955499999999933e-05, 5.888900000000294e-05, 5.881899999999815e-05, 5.9735999999997735e-05, 5.880500000000205e-05]</msg>
<status status="PASS" starttime="20201117 14:47:52.496" endtime="20201117 14:47:52.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.491" endtime="20201117 14:47:52.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.500" endtime="20201117 14:47:52.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.504" endtime="20201117 14:47:52.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.502" endtime="20201117 14:47:52.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.499" endtime="20201117 14:47:52.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.130" endtime="20201117 14:47:52.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.128" endtime="20201117 14:47:52.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.128" endtime="20201117 14:47:52.525"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.528" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.536" endtime="20201117 14:47:52.553"></status>
</kw>
<msg timestamp="20201117 14:47:52.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.534" endtime="20201117 14:47:52.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.555" endtime="20201117 14:47:52.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.557" endtime="20201117 14:47:52.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.532" endtime="20201117 14:47:52.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.530" endtime="20201117 14:47:52.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.566" endtime="20201117 14:47:52.851"></status>
</kw>
<msg timestamp="20201117 14:47:52.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024606597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024667333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.565" endtime="20201117 14:47:52.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024606597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024667333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.856" endtime="20201117 14:47:52.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.864" endtime="20201117 14:47:52.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.562" endtime="20201117 14:47:52.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.560" endtime="20201117 14:47:52.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.871" level="INFO">${RESULT} = [{'time': 0.024667333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0735999999998735e-05, 'source_diff': 6.0735999999998735e-05}, {'time': 0.024729333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:52.867" endtime="20201117 14:47:52.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.884" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:52.872" endtime="20201117 14:47:52.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.889" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.888" endtime="20201117 14:47:52.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.891" level="INFO">VALUE: [6.0735999999998735e-05, 5.977700000000044e-05, 6.005499999999983e-05, 5.9791999999999484e-05, 6.054099999999729e-05, 6.0679999999996986e-05, 6.0707999999999596e-05, 5.9820000000002094e-05, 6.058299999999947e-05, 5.9985999999997985e-05, 5.9777999999999915e-05, 6.0193999999999526e-05, 6.066700000000036e-05, 6.068099999999993e-05, 6.065299999999732e-05, 6.008300000000244e-05, 5.990300000000004e-05, 5.98750000000009e-05, 5.984699999999829e-05, 5.9805999999999054e-05, 6.063900000000122e-05, 6.0750000000001775e-05, 6.06949999999995e-05, 6.015300000000029e-05, 6.0583999999998944e-05, 6.001300000000112e-05, 6.0750000000001775e-05, 6.0028000000000165e-05, 6.055500000000033e-05, 6.013900000000072e-05, 5.981899999999915e-05, 6.052700000000119e-05, 6.0694000000000026e-05, 5.984699999999829e-05, 5.986099999999786e-05, 5.9749999999997305e-05, 6.066700000000036e-05, 5.9943999999999276e-05, 5.9777999999999915e-05, 6.0764000000001345e-05, 5.9819999999998624e-05, 6.0750000000001775e-05, 6.065299999999732e-05, 5.98750000000009e-05, 6.062500000000165e-05, 5.990300000000004e-05, 6.069500000000297e-05, 6.070899999999907e-05, 6.0597999999998514e-05, 5.9749999999997305e-05]</msg>
<status status="PASS" starttime="20201117 14:47:52.890" endtime="20201117 14:47:52.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.885" endtime="20201117 14:47:52.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.895" endtime="20201117 14:47:52.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.898" endtime="20201117 14:47:52.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.897" endtime="20201117 14:47:52.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.893" endtime="20201117 14:47:52.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.528" endtime="20201117 14:47:52.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.526" endtime="20201117 14:47:52.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.526" endtime="20201117 14:47:52.919"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.922" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.930" endtime="20201117 14:47:52.947"></status>
</kw>
<msg timestamp="20201117 14:47:52.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.928" endtime="20201117 14:47:52.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.948" endtime="20201117 14:47:52.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.951" endtime="20201117 14:47:52.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.926" endtime="20201117 14:47:52.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.924" endtime="20201117 14:47:52.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.960" endtime="20201117 14:47:53.247"></status>
</kw>
<msg timestamp="20201117 14:47:53.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024777806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024839361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.958" endtime="20201117 14:47:53.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024777806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024839361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.252" endtime="20201117 14:47:53.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.260" endtime="20201117 14:47:53.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.956" endtime="20201117 14:47:53.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.954" endtime="20201117 14:47:53.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.267" level="INFO">${RESULT} = [{'time': 0.024839361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.155500000000133e-05, 'source_diff': 6.155500000000133e-05}, {'time': 0.024902347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:53.264" endtime="20201117 14:47:53.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.280" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:53.268" endtime="20201117 14:47:53.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.285" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.284" endtime="20201117 14:47:53.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.288" level="INFO">VALUE: [6.155500000000133e-05, 6.137499999999893e-05, 6.145800000000035e-05, 6.169400000000103e-05, 6.10690000000004e-05, 6.172200000000017e-05, 6.158300000000047e-05, 6.163899999999875e-05, 6.177799999999845e-05, 6.0999999999998555e-05, 6.0736000000002205e-05, 6.162500000000265e-05, 6.0985999999998985e-05, 6.0806000000000054e-05, 6.0764000000001345e-05, 6.0764000000001345e-05, 6.108399999999944e-05, 6.15560000000008e-05, 6.173599999999974e-05, 6.098700000000193e-05, 6.162499999999918e-05, 6.161099999999961e-05, 6.083299999999972e-05, 6.108299999999997e-05, 6.17080000000006e-05, 6.0916000000001136e-05, 6.158300000000047e-05, 6.0764000000001345e-05, 6.0985999999998985e-05, 6.168000000000146e-05, 6.109699999999954e-05, 6.0792000000000485e-05, 6.112500000000215e-05, 6.1000000000002025e-05, 6.162499999999918e-05, 6.0985999999998985e-05, 6.157000000000037e-05, 6.111100000000258e-05, 6.159700000000004e-05, 6.0985999999998985e-05, 6.166600000000189e-05, 6.0806000000000054e-05, 6.091699999999714e-05, 6.161099999999961e-05, 6.093100000000018e-05, 6.0764000000001345e-05, 6.0820000000003094e-05, 6.0915999999997666e-05, 6.0999999999998555e-05, 6.162500000000265e-05]</msg>
<status status="PASS" starttime="20201117 14:47:53.286" endtime="20201117 14:47:53.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.281" endtime="20201117 14:47:53.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.291" endtime="20201117 14:47:53.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.294" endtime="20201117 14:47:53.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.293" endtime="20201117 14:47:53.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.289" endtime="20201117 14:47:53.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.922" endtime="20201117 14:47:53.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.921" endtime="20201117 14:47:53.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.920" endtime="20201117 14:47:53.315"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.318" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.326" endtime="20201117 14:47:53.343"></status>
</kw>
<msg timestamp="20201117 14:47:53.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.325" endtime="20201117 14:47:53.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.344" endtime="20201117 14:47:53.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.347" endtime="20201117 14:47:53.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.322" endtime="20201117 14:47:53.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.320" endtime="20201117 14:47:53.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.356" endtime="20201117 14:47:53.641"></status>
</kw>
<msg timestamp="20201117 14:47:53.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024473458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024535597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.354" endtime="20201117 14:47:53.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024473458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024535597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.645" endtime="20201117 14:47:53.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.654" endtime="20201117 14:47:53.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.352" endtime="20201117 14:47:53.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.350" endtime="20201117 14:47:53.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.660" level="INFO">${RESULT} = [{'time': 0.024535597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.213899999999925e-05, 'source_diff': 6.213899999999925e-05}, {'time': 0.024600611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:53.657" endtime="20201117 14:47:53.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.674" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:53.662" endtime="20201117 14:47:53.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.679" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.678" endtime="20201117 14:47:53.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.681" level="INFO">VALUE: [6.213899999999925e-05, 6.265300000000279e-05, 6.201399999999913e-05, 6.213900000000272e-05, 6.265299999999932e-05, 6.276399999999988e-05, 6.273600000000074e-05, 6.186099999999986e-05, 6.265300000000279e-05, 6.184700000000029e-05, 6.209700000000054e-05, 6.262500000000018e-05, 6.268099999999846e-05, 6.20560000000013e-05, 6.20560000000013e-05, 6.198699999999946e-05, 6.272299999999717e-05, 6.198699999999946e-05, 6.27089999999976e-05, 6.265200000000332e-05, 6.192999999999824e-05, 6.213899999999925e-05, 6.250000000000006e-05, 6.180500000000158e-05, 6.195799999999738e-05, 6.266700000000236e-05, 6.265299999999932e-05, 6.261100000000061e-05, 6.18750000000029e-05, 6.1888999999999e-05, 6.27500000000003e-05, 6.19439999999978e-05, 6.259700000000104e-05, 6.208300000000097e-05, 6.2582999999998e-05, 6.257000000000137e-05, 6.212499999999968e-05, 6.18340000000002e-05, 6.179199999999802e-05, 6.241599999999917e-05, 6.204200000000173e-05, 6.211100000000011e-05, 6.266699999999889e-05, 6.207000000000087e-05, 6.20560000000013e-05, 6.269399999999856e-05, 6.259699999999757e-05, 6.209700000000054e-05, 6.187499999999943e-05, 6.181900000000115e-05]</msg>
<status status="PASS" starttime="20201117 14:47:53.680" endtime="20201117 14:47:53.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.675" endtime="20201117 14:47:53.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.684" endtime="20201117 14:47:53.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.688" endtime="20201117 14:47:53.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.686" endtime="20201117 14:47:53.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.683" endtime="20201117 14:47:53.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.319" endtime="20201117 14:47:53.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.317" endtime="20201117 14:47:53.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.316" endtime="20201117 14:47:53.709"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.711" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.719" endtime="20201117 14:47:53.737"></status>
</kw>
<msg timestamp="20201117 14:47:53.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.718" endtime="20201117 14:47:53.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.738" endtime="20201117 14:47:53.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.741" endtime="20201117 14:47:53.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.715" endtime="20201117 14:47:53.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.713" endtime="20201117 14:47:53.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.750" endtime="20201117 14:47:54.037"></status>
</kw>
<msg timestamp="20201117 14:47:54.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024623458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024686986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.748" endtime="20201117 14:47:54.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024623458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024686986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.041" endtime="20201117 14:47:54.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.050" endtime="20201117 14:47:54.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.746" endtime="20201117 14:47:54.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.744" endtime="20201117 14:47:54.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.056" level="INFO">${RESULT} = [{'time': 0.024686986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.35280000000002e-05, 'source_diff': 6.35280000000002e-05}, {'time': 0.024752986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:54.053" endtime="20201117 14:47:54.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:54.071" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:54.057" endtime="20201117 14:47:54.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.076" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.075" endtime="20201117 14:47:54.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.078" level="INFO">VALUE: [6.35280000000002e-05, 6.359700000000204e-05, 6.293099999999871e-05, 6.306899999999893e-05, 6.284700000000129e-05, 6.297200000000142e-05, 6.373599999999827e-05, 6.308399999999798e-05, 6.284700000000129e-05, 6.366699999999989e-05, 6.287500000000043e-05, 6.301400000000013e-05, 6.280500000000258e-05, 6.36950000000025e-05, 6.336200000000083e-05, 6.311100000000111e-05, 6.29020000000001e-05, 6.27630000000004e-05, 6.288800000000053e-05, 6.287499999999696e-05, 6.370799999999913e-05, 6.363899999999728e-05, 6.287500000000043e-05, 6.277799999999945e-05, 6.286100000000086e-05, 6.2889e-05, 6.284700000000129e-05, 6.369399999999956e-05, 6.356899999999943e-05, 6.359700000000204e-05, 6.3582999999999e-05, 6.369499999999903e-05, 6.304100000000326e-05, 6.284699999999782e-05, 6.308400000000144e-05, 6.30699999999984e-05, 6.287499999999696e-05, 6.305499999999936e-05, 6.284800000000076e-05, 6.297299999999742e-05, 6.281899999999868e-05, 6.366699999999989e-05, 6.277699999999997e-05, 6.361099999999814e-05, 6.309699999999807e-05, 6.363900000000075e-05, 6.301400000000013e-05, 6.365199999999738e-05, 6.312500000000068e-05, 6.366600000000042e-05]</msg>
<status status="PASS" starttime="20201117 14:47:54.077" endtime="20201117 14:47:54.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.072" endtime="20201117 14:47:54.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.081" endtime="20201117 14:47:54.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.085" endtime="20201117 14:47:54.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.083" endtime="20201117 14:47:54.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.080" endtime="20201117 14:47:54.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.712" endtime="20201117 14:47:54.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.710" endtime="20201117 14:47:54.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.709" endtime="20201117 14:47:54.106"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.108" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.116" endtime="20201117 14:47:54.133"></status>
</kw>
<msg timestamp="20201117 14:47:54.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.115" endtime="20201117 14:47:54.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.135" endtime="20201117 14:47:54.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.137" endtime="20201117 14:47:54.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.112" endtime="20201117 14:47:54.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.110" endtime="20201117 14:47:54.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.146" endtime="20201117 14:47:54.432"></status>
</kw>
<msg timestamp="20201117 14:47:54.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024643806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024707764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.144" endtime="20201117 14:47:54.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024643806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024707764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.436" endtime="20201117 14:47:54.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.445" endtime="20201117 14:47:54.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.142" endtime="20201117 14:47:54.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.140" endtime="20201117 14:47:54.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.451" level="INFO">${RESULT} = [{'time': 0.024707764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.395799999999938e-05, 'source_diff': 6.395799999999938e-05}, {'time': 0.024773778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:54.448" endtime="20201117 14:47:54.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:54.465" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:54.452" endtime="20201117 14:47:54.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.469" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.468" endtime="20201117 14:47:54.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.472" level="INFO">VALUE: [6.395799999999938e-05, 6.384699999999882e-05, 6.3889000000001e-05, 6.413899999999778e-05, 6.386099999999839e-05, 6.383399999999873e-05, 6.401400000000113e-05, 6.40280000000007e-05, 6.468000000000099e-05, 6.387500000000143e-05, 6.459800000000251e-05, 6.47219999999997e-05, 6.397199999999895e-05, 6.411099999999864e-05, 6.466600000000142e-05, 6.390300000000057e-05, 6.47219999999997e-05, 6.401400000000113e-05, 6.380599999999959e-05, 6.461099999999914e-05, 6.39439999999998e-05, 6.468100000000046e-05, 6.465300000000132e-05, 6.458399999999948e-05, 6.391700000000014e-05, 6.391700000000014e-05, 6.390300000000057e-05, 6.386100000000186e-05, 6.387500000000143e-05, 6.470800000000013e-05, 6.461099999999914e-05, 6.47089999999996e-05, 6.397300000000189e-05, 6.483300000000025e-05, 6.386100000000186e-05, 6.400000000000156e-05, 6.401300000000165e-05, 6.380500000000011e-05, 6.40829999999995e-05, 6.393000000000024e-05, 6.398599999999852e-05, 6.466700000000089e-05, 6.469400000000056e-05, 6.377800000000045e-05, 6.386099999999839e-05, 6.4583e-05, 6.4583e-05, 6.387500000000143e-05, 6.47219999999997e-05, 6.40829999999995e-05]</msg>
<status status="PASS" starttime="20201117 14:47:54.470" endtime="20201117 14:47:54.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.466" endtime="20201117 14:47:54.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.475" endtime="20201117 14:47:54.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.479" endtime="20201117 14:47:54.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.477" endtime="20201117 14:47:54.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.473" endtime="20201117 14:47:54.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.109" endtime="20201117 14:47:54.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.107" endtime="20201117 14:47:54.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.106" endtime="20201117 14:47:54.500"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.502" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.510" endtime="20201117 14:47:54.528"></status>
</kw>
<msg timestamp="20201117 14:47:54.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.509" endtime="20201117 14:47:54.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.529" endtime="20201117 14:47:54.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.532" endtime="20201117 14:47:54.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.506" endtime="20201117 14:47:54.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.504" endtime="20201117 14:47:54.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.541" endtime="20201117 14:47:54.833"></status>
</kw>
<msg timestamp="20201117 14:47:54.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024190778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024255653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.540" endtime="20201117 14:47:54.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024190778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024255653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.842" endtime="20201117 14:47:54.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.860" endtime="20201117 14:47:54.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.537" endtime="20201117 14:47:54.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.535" endtime="20201117 14:47:54.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.874" level="INFO">${RESULT} = [{'time': 0.024255653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.487499999999896e-05, 'source_diff': 6.487499999999896e-05}, {'time': 0.024322653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:54.867" endtime="20201117 14:47:54.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:54.904" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:54.877" endtime="20201117 14:47:54.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.913" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.911" endtime="20201117 14:47:54.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.919" level="INFO">VALUE: [6.487499999999896e-05, 6.493100000000071e-05, 6.554200000000177e-05, 6.497199999999995e-05, 6.555600000000134e-05, 6.563899999999928e-05, 6.505600000000084e-05, 6.495899999999985e-05, 6.495800000000038e-05, 6.511099999999964e-05, 6.562499999999971e-05, 6.47639999999984e-05, 6.513899999999878e-05, 6.483300000000025e-05, 6.474999999999884e-05, 6.568000000000199e-05, 6.502799999999823e-05, 6.569399999999809e-05, 6.487500000000243e-05, 6.502799999999823e-05, 6.561100000000014e-05, 6.555599999999787e-05, 6.480600000000059e-05, 6.512499999999921e-05, 6.569500000000103e-05, 6.566700000000189e-05, 6.486099999999939e-05, 6.504099999999832e-05, 6.494500000000028e-05, 6.565299999999885e-05, 6.566600000000242e-05, 6.506999999999694e-05, 6.576299999999993e-05, 6.49020000000021e-05, 6.487499999999896e-05, 6.481900000000068e-05, 6.504100000000179e-05, 6.500000000000256e-05, 6.483300000000025e-05, 6.509700000000007e-05, 6.50280000000017e-05, 6.498599999999952e-05, 6.555500000000186e-05, 6.565300000000232e-05, 6.481900000000068e-05, 6.491700000000114e-05, 6.474999999999884e-05, 6.494500000000028e-05, 6.483300000000025e-05, 6.563900000000275e-05]</msg>
<status status="PASS" starttime="20201117 14:47:54.916" endtime="20201117 14:47:54.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.906" endtime="20201117 14:47:54.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.923" endtime="20201117 14:47:54.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.926" endtime="20201117 14:47:54.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.925" endtime="20201117 14:47:54.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.921" endtime="20201117 14:47:54.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.503" endtime="20201117 14:47:54.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.501" endtime="20201117 14:47:54.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.500" endtime="20201117 14:47:54.947"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.950" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.958" endtime="20201117 14:47:54.975"></status>
</kw>
<msg timestamp="20201117 14:47:54.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.957" endtime="20201117 14:47:54.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.976" endtime="20201117 14:47:54.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.979" endtime="20201117 14:47:54.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.954" endtime="20201117 14:47:54.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.952" endtime="20201117 14:47:54.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.988" endtime="20201117 14:47:55.275"></status>
</kw>
<msg timestamp="20201117 14:47:55.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024555292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024621222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.987" endtime="20201117 14:47:55.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024555292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024621222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.279" endtime="20201117 14:47:55.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.288" endtime="20201117 14:47:55.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.984" endtime="20201117 14:47:55.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.982" endtime="20201117 14:47:55.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:55.295" level="INFO">${RESULT} = [{'time': 0.024621222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.593000000000224e-05, 'source_diff': 6.593000000000224e-05}, {'time': 0.024689181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:55.291" endtime="20201117 14:47:55.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.308" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:55.296" endtime="20201117 14:47:55.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.312" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.311" endtime="20201117 14:47:55.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.315" level="INFO">VALUE: [6.593000000000224e-05, 6.58480000000003e-05, 6.659700000000157e-05, 6.669399999999909e-05, 6.652700000000025e-05, 6.59029999999991e-05, 6.600000000000009e-05, 6.666599999999995e-05, 6.670799999999866e-05, 6.604200000000227e-05, 6.601399999999966e-05, 6.667999999999952e-05, 6.674999999999737e-05, 6.579100000000254e-05, 6.586100000000039e-05, 6.579200000000202e-05, 6.577799999999898e-05, 6.597200000000095e-05, 6.600000000000009e-05, 6.605599999999837e-05, 6.65280000000032e-05, 6.593099999999824e-05, 6.670899999999813e-05, 6.666699999999942e-05, 6.665299999999985e-05, 6.612500000000021e-05, 6.668099999999899e-05, 6.574999999999984e-05, 6.605599999999837e-05, 6.594499999999781e-05, 6.581900000000168e-05, 6.611100000000064e-05, 6.672199999999823e-05, 6.577799999999898e-05, 6.609700000000107e-05, 6.602699999999975e-05, 6.587499999999996e-05, 6.592999999999877e-05, 6.600000000000009e-05, 6.665299999999985e-05, 6.65419999999993e-05, 6.674999999999737e-05, 6.668100000000246e-05, 6.608299999999803e-05, 6.669499999999856e-05, 6.593100000000171e-05, 6.57639999999994e-05, 6.669499999999856e-05, 6.608400000000098e-05, 6.57639999999994e-05]</msg>
<status status="PASS" starttime="20201117 14:47:55.313" endtime="20201117 14:47:55.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.309" endtime="20201117 14:47:55.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.318" endtime="20201117 14:47:55.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.321" endtime="20201117 14:47:55.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.320" endtime="20201117 14:47:55.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.316" endtime="20201117 14:47:55.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.950" endtime="20201117 14:47:55.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.949" endtime="20201117 14:47:55.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.948" endtime="20201117 14:47:55.343"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.345" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.353" endtime="20201117 14:47:55.370"></status>
</kw>
<msg timestamp="20201117 14:47:55.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.352" endtime="20201117 14:47:55.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.371" endtime="20201117 14:47:55.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.374" endtime="20201117 14:47:55.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.349" endtime="20201117 14:47:55.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.347" endtime="20201117 14:47:55.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.383" endtime="20201117 14:47:55.680"></status>
</kw>
<msg timestamp="20201117 14:47:55.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024556903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024624667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.381" endtime="20201117 14:47:55.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024556903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024624667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.689" endtime="20201117 14:47:55.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.708" endtime="20201117 14:47:55.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.379" endtime="20201117 14:47:55.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.377" endtime="20201117 14:47:55.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:55.722" level="INFO">${RESULT} = [{'time': 0.024624667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.776399999999794e-05, 'source_diff': 6.776399999999794e-05}, {'time': 0.024693681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:55.714" endtime="20201117 14:47:55.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.741" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:55.724" endtime="20201117 14:47:55.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.746" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.745" endtime="20201117 14:47:55.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.748" level="INFO">VALUE: [6.776399999999794e-05, 6.712499999999774e-05, 6.711200000000112e-05, 6.698600000000152e-05, 6.752799999999726e-05, 6.677799999999998e-05, 6.712500000000121e-05, 6.692999999999977e-05, 6.697199999999848e-05, 6.695799999999891e-05, 6.756899999999996e-05, 6.705499999999989e-05, 6.67640000000004e-05, 6.774999999999837e-05, 6.686099999999792e-05, 6.75969999999991e-05, 6.681899999999921e-05, 6.694399999999934e-05, 6.693099999999924e-05, 6.697200000000195e-05, 6.765300000000085e-05, 6.700000000000109e-05, 6.70419999999998e-05, 6.780500000000064e-05, 6.766700000000042e-05, 6.67640000000004e-05, 6.69030000000001e-05, 6.695799999999891e-05, 6.755599999999987e-05, 6.712500000000121e-05, 6.766700000000042e-05, 6.695799999999891e-05, 6.695799999999891e-05, 6.769400000000009e-05, 6.75969999999991e-05, 6.758299999999953e-05, 6.750000000000159e-05, 6.694399999999934e-05, 6.765300000000085e-05, 6.769400000000009e-05, 6.70419999999998e-05, 6.683300000000225e-05, 6.711099999999817e-05, 6.683299999999878e-05, 6.755599999999987e-05, 6.680599999999912e-05, 6.762499999999824e-05, 6.687499999999749e-05, 6.774999999999837e-05, 6.697199999999848e-05]</msg>
<status status="PASS" starttime="20201117 14:47:55.747" endtime="20201117 14:47:55.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.742" endtime="20201117 14:47:55.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.752" endtime="20201117 14:47:55.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.755" endtime="20201117 14:47:55.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.754" endtime="20201117 14:47:55.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.750" endtime="20201117 14:47:55.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.346" endtime="20201117 14:47:55.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.344" endtime="20201117 14:47:55.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.343" endtime="20201117 14:47:55.776"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.779" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.787" endtime="20201117 14:47:55.805"></status>
</kw>
<msg timestamp="20201117 14:47:55.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.785" endtime="20201117 14:47:55.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.806" endtime="20201117 14:47:55.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.809" endtime="20201117 14:47:55.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.783" endtime="20201117 14:47:55.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.781" endtime="20201117 14:47:55.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.817" endtime="20201117 14:47:56.103"></status>
</kw>
<msg timestamp="20201117 14:47:56.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024092889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024160889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.816" endtime="20201117 14:47:56.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024092889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024160889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.107" endtime="20201117 14:47:56.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.115" endtime="20201117 14:47:56.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.813" endtime="20201117 14:47:56.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.812" endtime="20201117 14:47:56.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.122" level="INFO">${RESULT} = [{'time': 0.024160889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.800000000000209e-05, 'source_diff': 6.800000000000209e-05}, {'time': 0.024230889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:56.118" endtime="20201117 14:47:56.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.135" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:56.123" endtime="20201117 14:47:56.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.139" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.138" endtime="20201117 14:47:56.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.147" level="INFO">VALUE: [6.800000000000209e-05, 6.79169999999972e-05, 6.781999999999969e-05, 6.808300000000003e-05, 6.80969999999996e-05, 6.784699999999935e-05, 6.877800000000198e-05, 6.783399999999926e-05, 6.777800000000098e-05, 6.791700000000067e-05, 6.787500000000196e-05, 6.80969999999996e-05, 6.806900000000046e-05, 6.788799999999859e-05, 6.85970000000001e-05, 6.866600000000195e-05, 6.808300000000003e-05, 6.855500000000139e-05, 6.781900000000021e-05, 6.811100000000264e-05, 6.77640000000014e-05, 6.776399999999794e-05, 6.78480000000023e-05, 6.786099999999892e-05, 6.869400000000109e-05, 6.85970000000001e-05, 6.85420000000013e-05, 6.870900000000013e-05, 6.872200000000023e-05, 6.865300000000185e-05, 6.862499999999924e-05, 6.812499999999874e-05, 6.783399999999926e-05, 6.868099999999752e-05, 6.856900000000096e-05, 6.804100000000132e-05, 6.780500000000064e-05, 6.795799999999991e-05, 6.799999999999862e-05, 6.806900000000046e-05, 6.794400000000034e-05, 6.80969999999996e-05, 6.798599999999905e-05, 6.863899999999881e-05, 6.794499999999981e-05, 6.813899999999831e-05, 6.856900000000096e-05, 6.809799999999908e-05, 6.775000000000184e-05, 6.87770000000025e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.140" endtime="20201117 14:47:56.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.136" endtime="20201117 14:47:56.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.150" endtime="20201117 14:47:56.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.154" endtime="20201117 14:47:56.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.152" endtime="20201117 14:47:56.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.149" endtime="20201117 14:47:56.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.779" endtime="20201117 14:47:56.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.777" endtime="20201117 14:47:56.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.777" endtime="20201117 14:47:56.175"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.177" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.185" endtime="20201117 14:47:56.203"></status>
</kw>
<msg timestamp="20201117 14:47:56.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.184" endtime="20201117 14:47:56.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.204" endtime="20201117 14:47:56.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.207" endtime="20201117 14:47:56.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.181" endtime="20201117 14:47:56.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.179" endtime="20201117 14:47:56.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.215" endtime="20201117 14:47:56.503"></status>
</kw>
<msg timestamp="20201117 14:47:56.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024185306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024254194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.214" endtime="20201117 14:47:56.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024185306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024254194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.507" endtime="20201117 14:47:56.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.515" endtime="20201117 14:47:56.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.211" endtime="20201117 14:47:56.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.210" endtime="20201117 14:47:56.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.522" level="INFO">${RESULT} = [{'time': 0.024254194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888799999999959e-05, 'source_diff': 6.888799999999959e-05}, {'time': 0.024326194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:56.518" endtime="20201117 14:47:56.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.535" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:56.523" endtime="20201117 14:47:56.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.540" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.539" endtime="20201117 14:47:56.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.542" level="INFO">VALUE: [6.888799999999959e-05, 6.967999999999905e-05, 6.894400000000134e-05, 6.956899999999849e-05, 6.898600000000005e-05, 6.965299999999938e-05, 6.899999999999962e-05, 6.884700000000035e-05, 6.90420000000018e-05, 6.972199999999776e-05, 6.895800000000091e-05, 6.895799999999744e-05, 6.963900000000328e-05, 6.90840000000005e-05, 6.891700000000167e-05, 6.886200000000287e-05, 6.90840000000005e-05, 6.97360000000008e-05, 6.90420000000018e-05, 6.901299999999971e-05, 6.894500000000081e-05, 6.956999999999797e-05, 6.911199999999965e-05, 6.967999999999905e-05, 6.876300000000293e-05, 6.89299999999983e-05, 6.895800000000091e-05, 6.968099999999852e-05, 6.887500000000296e-05, 6.902799999999876e-05, 6.958300000000153e-05, 6.905499999999842e-05, 6.908300000000103e-05, 6.962500000000024e-05, 6.969499999999809e-05, 6.891700000000167e-05, 6.887499999999949e-05, 6.898600000000005e-05, 6.968099999999852e-05, 6.883300000000078e-05, 6.880599999999765e-05, 6.876399999999894e-05, 6.94160000000027e-05, 6.884700000000035e-05, 6.902800000000223e-05, 6.913899999999931e-05, 6.9584000000001e-05, 6.955500000000239e-05, 6.967999999999905e-05, 6.87770000000025e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.541" endtime="20201117 14:47:56.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.536" endtime="20201117 14:47:56.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.545" endtime="20201117 14:47:56.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.549" endtime="20201117 14:47:56.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.547" endtime="20201117 14:47:56.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.544" endtime="20201117 14:47:56.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.178" endtime="20201117 14:47:56.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.176" endtime="20201117 14:47:56.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.175" endtime="20201117 14:47:56.570"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.572" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.580" endtime="20201117 14:47:56.597"></status>
</kw>
<msg timestamp="20201117 14:47:56.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.579" endtime="20201117 14:47:56.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.598" endtime="20201117 14:47:56.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.601" endtime="20201117 14:47:56.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.576" endtime="20201117 14:47:56.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.574" endtime="20201117 14:47:56.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.610" endtime="20201117 14:47:56.897"></status>
</kw>
<msg timestamp="20201117 14:47:56.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024066097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024136597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.608" endtime="20201117 14:47:56.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024066097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024136597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.901" endtime="20201117 14:47:56.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.909" endtime="20201117 14:47:56.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.606" endtime="20201117 14:47:56.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.604" endtime="20201117 14:47:56.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.916" level="INFO">${RESULT} = [{'time': 0.024136597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.049999999999765e-05, 'source_diff': 7.049999999999765e-05}, {'time': 0.024208597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:56.913" endtime="20201117 14:47:56.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.929" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:56.917" endtime="20201117 14:47:56.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.934" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.933" endtime="20201117 14:47:56.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.936" level="INFO">VALUE: [7.049999999999765e-05, 6.988900000000006e-05, 7.004099999999985e-05, 7.077800000000051e-05, 6.990299999999963e-05, 6.980499999999917e-05, 6.994400000000234e-05, 7.004199999999933e-05, 7.063900000000081e-05, 7.012500000000074e-05, 7.054199999999983e-05, 7.073700000000127e-05, 6.987500000000049e-05, 7.070799999999919e-05, 6.993099999999877e-05, 6.976399999999994e-05, 6.979199999999908e-05, 7.058299999999906e-05, 6.988900000000006e-05, 7.011100000000117e-05, 6.990299999999963e-05, 6.987499999999702e-05, 6.980500000000264e-05, 7.055499999999992e-05, 6.983299999999831e-05, 6.986099999999745e-05, 6.99160000000032e-05, 7.072200000000223e-05, 7.012500000000074e-05, 6.998599999999758e-05, 7.058299999999906e-05, 7.05559999999994e-05, 7.008300000000203e-05, 6.983300000000178e-05, 7.062500000000124e-05, 7.000000000000062e-05, 6.99169999999992e-05, 6.980600000000212e-05, 7.061200000000115e-05, 7.057000000000244e-05, 6.988900000000006e-05, 6.994399999999887e-05, 7.063900000000081e-05, 6.987499999999702e-05, 6.983300000000178e-05, 7.05689999999995e-05, 6.981899999999874e-05, 6.984699999999788e-05, 6.998600000000105e-05, 7.000000000000062e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.935" endtime="20201117 14:47:56.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.930" endtime="20201117 14:47:56.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.939" endtime="20201117 14:47:56.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.943" endtime="20201117 14:47:56.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.941" endtime="20201117 14:47:56.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.938" endtime="20201117 14:47:56.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.573" endtime="20201117 14:47:56.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.571" endtime="20201117 14:47:56.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.570" endtime="20201117 14:47:56.964"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.966" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.974" endtime="20201117 14:47:56.991"></status>
</kw>
<msg timestamp="20201117 14:47:56.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.973" endtime="20201117 14:47:56.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.993" endtime="20201117 14:47:56.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.995" endtime="20201117 14:47:56.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.970" endtime="20201117 14:47:56.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.968" endtime="20201117 14:47:56.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.005" endtime="20201117 14:47:57.290"></status>
</kw>
<msg timestamp="20201117 14:47:57.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023917708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023988597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.003" endtime="20201117 14:47:57.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023917708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023988597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.295" endtime="20201117 14:47:57.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.303" endtime="20201117 14:47:57.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.000" endtime="20201117 14:47:57.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.998" endtime="20201117 14:47:57.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.310" level="INFO">${RESULT} = [{'time': 0.023988597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.088900000000106e-05, 'source_diff': 7.088900000000106e-05}, {'time': 0.024061569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:57.307" endtime="20201117 14:47:57.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.368" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:57.311" endtime="20201117 14:47:57.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.372" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.371" endtime="20201117 14:47:57.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.375" level="INFO">VALUE: [7.088900000000106e-05, 7.100000000000162e-05, 7.158300000000006e-05, 7.097199999999901e-05, 7.081899999999974e-05, 7.162500000000224e-05, 7.10559999999999e-05, 7.083299999999931e-05, 7.159699999999963e-05, 7.1069e-05, 7.09170000000002e-05, 7.087500000000149e-05, 7.084699999999888e-05, 7.106999999999947e-05, 7.112499999999827e-05, 7.084799999999836e-05, 7.098600000000205e-05, 7.093099999999977e-05, 7.156999999999997e-05, 7.08620000000014e-05, 7.115200000000141e-05, 7.084800000000183e-05, 7.111200000000165e-05, 7.077700000000103e-05, 7.104099999999738e-05, 7.090200000000116e-05, 7.138899999999809e-05, 7.104100000000085e-05, 7.086100000000192e-05, 7.095799999999944e-05, 7.165299999999791e-05, 7.098599999999858e-05, 7.162499999999877e-05, 7.1069e-05, 7.109699999999913e-05, 7.098599999999858e-05, 7.113900000000131e-05, 7.172199999999976e-05, 7.097200000000248e-05, 7.165299999999791e-05, 7.112499999999827e-05, 7.10840000000025e-05, 7.10979999999986e-05, 7.170899999999966e-05, 7.088799999999812e-05, 7.173700000000227e-05, 7.081899999999974e-05, 7.10559999999999e-05, 7.163899999999834e-05, 7.167999999999758e-05]</msg>
<status status="PASS" starttime="20201117 14:47:57.373" endtime="20201117 14:47:57.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.369" endtime="20201117 14:47:57.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.378" endtime="20201117 14:47:57.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.381" endtime="20201117 14:47:57.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.380" endtime="20201117 14:47:57.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.376" endtime="20201117 14:47:57.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.967" endtime="20201117 14:47:57.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.965" endtime="20201117 14:47:57.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.964" endtime="20201117 14:47:57.402"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.405" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.413" endtime="20201117 14:47:57.431"></status>
</kw>
<msg timestamp="20201117 14:47:57.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.411" endtime="20201117 14:47:57.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.432" endtime="20201117 14:47:57.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.435" endtime="20201117 14:47:57.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.409" endtime="20201117 14:47:57.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.407" endtime="20201117 14:47:57.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.444" endtime="20201117 14:47:57.730"></status>
</kw>
<msg timestamp="20201117 14:47:57.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024570167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024642417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.443" endtime="20201117 14:47:57.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024570167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024642417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.734" endtime="20201117 14:47:57.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.742" endtime="20201117 14:47:57.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.440" endtime="20201117 14:47:57.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.438" endtime="20201117 14:47:57.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.749" level="INFO">${RESULT} = [{'time': 0.024642417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.22499999999994e-05, 'source_diff': 7.22499999999994e-05}, {'time': 0.024716375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:57.746" endtime="20201117 14:47:57.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.762" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:57.750" endtime="20201117 14:47:57.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.766" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.765" endtime="20201117 14:47:57.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.769" level="INFO">VALUE: [7.22499999999994e-05, 7.213899999999884e-05, 7.182000000000022e-05, 7.205500000000142e-05, 7.25690000000015e-05, 7.194400000000087e-05, 7.209700000000013e-05, 7.17499999999989e-05, 7.179200000000108e-05, 7.187500000000249e-05, 7.212500000000274e-05, 7.195899999999991e-05, 7.170899999999966e-05, 7.176399999999847e-05, 7.177799999999804e-05, 7.177800000000151e-05, 7.17230000000027e-05, 7.258400000000054e-05, 7.187500000000249e-05, 7.272199999999729e-05, 7.272200000000076e-05, 7.277799999999904e-05, 7.195800000000044e-05, 7.272200000000076e-05, 7.190300000000163e-05, 7.199999999999915e-05, 7.183300000000031e-05, 7.266700000000195e-05, 7.255499999999845e-05, 7.187500000000249e-05, 7.179200000000108e-05, 7.191699999999773e-05, 7.201399999999872e-05, 7.177800000000151e-05, 7.191699999999773e-05, 7.266700000000195e-05, 7.268099999999805e-05, 7.268100000000152e-05, 7.269500000000109e-05, 7.198699999999905e-05, 7.191699999999773e-05, 7.172199999999976e-05, 7.181900000000074e-05, 7.209700000000013e-05, 7.183300000000031e-05, 7.199999999999915e-05, 7.26110000000002e-05, 7.176399999999847e-05, 7.205500000000142e-05, 7.186100000000292e-05]</msg>
<status status="PASS" starttime="20201117 14:47:57.768" endtime="20201117 14:47:57.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.763" endtime="20201117 14:47:57.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.772" endtime="20201117 14:47:57.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.776" endtime="20201117 14:47:57.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.774" endtime="20201117 14:47:57.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.771" endtime="20201117 14:47:57.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.405" endtime="20201117 14:47:57.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.404" endtime="20201117 14:47:57.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.403" endtime="20201117 14:47:57.797"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.799" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.808" endtime="20201117 14:47:57.826"></status>
</kw>
<msg timestamp="20201117 14:47:57.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.807" endtime="20201117 14:47:57.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.828" endtime="20201117 14:47:57.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.831" endtime="20201117 14:47:57.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.804" endtime="20201117 14:47:57.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.801" endtime="20201117 14:47:57.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.840" endtime="20201117 14:47:58.125"></status>
</kw>
<msg timestamp="20201117 14:47:58.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025837014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025910736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.838" endtime="20201117 14:47:58.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025837014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025910736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.129" endtime="20201117 14:47:58.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.137" endtime="20201117 14:47:58.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.835" endtime="20201117 14:47:58.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.834" endtime="20201117 14:47:58.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.144" level="INFO">${RESULT} = [{'time': 0.025910736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.372200000000176e-05, 'source_diff': 7.372200000000176e-05}, {'time': 0.025986736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:58.140" endtime="20201117 14:47:58.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.157" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:58.145" endtime="20201117 14:47:58.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.161" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.160" endtime="20201117 14:47:58.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.164" level="INFO">VALUE: [7.372200000000176e-05, 7.359699999999816e-05, 7.302800000000276e-05, 7.300000000000015e-05, 7.350000000000065e-05, 7.300000000000015e-05, 7.293100000000177e-05, 7.363900000000034e-05, 7.282000000000122e-05, 7.290299999999916e-05, 7.277799999999904e-05, 7.282000000000122e-05, 7.288899999999959e-05, 7.283300000000131e-05, 7.352799999999979e-05, 7.304099999999938e-05, 7.370799999999872e-05, 7.365299999999991e-05, 7.288899999999959e-05, 7.29439999999984e-05, 7.300000000000015e-05, 7.291599999999926e-05, 7.337500000000052e-05, 7.300000000000015e-05, 7.290299999999916e-05, 7.305599999999843e-05, 7.300000000000015e-05, 7.300000000000015e-05, 7.350000000000065e-05, 7.294499999999787e-05, 7.304200000000233e-05, 7.301399999999972e-05, 7.366699999999948e-05, 7.359800000000111e-05, 7.293100000000177e-05, 7.359700000000163e-05, 7.366699999999948e-05, 7.294400000000187e-05, 7.354100000000335e-05, 7.367999999999958e-05, 7.288899999999959e-05, 7.290199999999969e-05, 7.362500000000077e-05, 7.356899999999902e-05, 7.28049999999987e-05, 7.305500000000242e-05, 7.277799999999904e-05, 7.31110000000007e-05, 7.286100000000045e-05, 7.337500000000052e-05]</msg>
<status status="PASS" starttime="20201117 14:47:58.162" endtime="20201117 14:47:58.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.158" endtime="20201117 14:47:58.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.167" endtime="20201117 14:47:58.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.170" endtime="20201117 14:47:58.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.169" endtime="20201117 14:47:58.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.165" endtime="20201117 14:47:58.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.800" endtime="20201117 14:47:58.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.798" endtime="20201117 14:47:58.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.797" endtime="20201117 14:47:58.192"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.194" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.203" endtime="20201117 14:47:58.220"></status>
</kw>
<msg timestamp="20201117 14:47:58.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.202" endtime="20201117 14:47:58.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.222" endtime="20201117 14:47:58.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.224" endtime="20201117 14:47:58.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.198" endtime="20201117 14:47:58.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.196" endtime="20201117 14:47:58.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.233" endtime="20201117 14:47:58.518"></status>
</kw>
<msg timestamp="20201117 14:47:58.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025397806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025472097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.231" endtime="20201117 14:47:58.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025397806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025472097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.522" endtime="20201117 14:47:58.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.530" endtime="20201117 14:47:58.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.229" endtime="20201117 14:47:58.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.227" endtime="20201117 14:47:58.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.537" level="INFO">${RESULT} = [{'time': 0.025472097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429100000000063e-05, 'source_diff': 7.429100000000063e-05}, {'time': 0.025548097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:58.534" endtime="20201117 14:47:58.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.550" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:58.538" endtime="20201117 14:47:58.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.555" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.554" endtime="20201117 14:47:58.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.557" level="INFO">VALUE: [7.429100000000063e-05, 7.381899999999927e-05, 7.465299999999744e-05, 7.401399999999725e-05, 7.386100000000145e-05, 7.45829999999996e-05, 7.398599999999811e-05, 7.391699999999973e-05, 7.387500000000102e-05, 7.455599999999993e-05, 7.409700000000213e-05, 7.4069999999999e-05, 7.459800000000211e-05, 7.462500000000177e-05, 7.382000000000222e-05, 7.477700000000156e-05, 7.461099999999873e-05, 7.472199999999929e-05, 7.391599999999679e-05, 7.452699999999784e-05, 7.466600000000101e-05, 7.387500000000102e-05, 7.466600000000101e-05, 7.384699999999841e-05, 7.409699999999866e-05, 7.379199999999961e-05, 7.404199999999986e-05, 7.400000000000115e-05, 7.404199999999986e-05, 7.47500000000019e-05, 7.472299999999876e-05, 7.368099999999905e-05, 7.46110000000022e-05, 7.387500000000102e-05, 7.462500000000177e-05, 7.45699999999995e-05, 7.37370000000008e-05, 7.41110000000017e-05, 7.388900000000059e-05, 7.412500000000127e-05, 7.473600000000233e-05, 7.468000000000058e-05, 7.455499999999698e-05, 7.463899999999787e-05, 7.472199999999929e-05, 7.45829999999996e-05, 7.466600000000101e-05, 7.470799999999972e-05, 7.468000000000058e-05, 7.404199999999986e-05]</msg>
<status status="PASS" starttime="20201117 14:47:58.556" endtime="20201117 14:47:58.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.551" endtime="20201117 14:47:58.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.561" endtime="20201117 14:47:58.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.564" endtime="20201117 14:47:58.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.563" endtime="20201117 14:47:58.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.559" endtime="20201117 14:47:58.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.195" endtime="20201117 14:47:58.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.193" endtime="20201117 14:47:58.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.192" endtime="20201117 14:47:58.585"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.588" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.596" endtime="20201117 14:47:58.614"></status>
</kw>
<msg timestamp="20201117 14:47:58.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.594" endtime="20201117 14:47:58.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.616" endtime="20201117 14:47:58.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.619" endtime="20201117 14:47:58.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.592" endtime="20201117 14:47:58.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.590" endtime="20201117 14:47:58.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.627" endtime="20201117 14:47:58.913"></status>
</kw>
<msg timestamp="20201117 14:47:58.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025159514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025234833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.626" endtime="20201117 14:47:58.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025159514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025234833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.917" endtime="20201117 14:47:58.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.926" endtime="20201117 14:47:58.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.623" endtime="20201117 14:47:58.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.622" endtime="20201117 14:47:58.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.932" level="INFO">${RESULT} = [{'time': 0.025234833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.531900000000077e-05, 'source_diff': 7.531900000000077e-05}, {'time': 0.025311833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:58.929" endtime="20201117 14:47:58.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.946" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:58.933" endtime="20201117 14:47:58.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.951" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.950" endtime="20201117 14:47:58.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.954" level="INFO">VALUE: [7.531900000000077e-05, 7.538899999999862e-05, 7.563899999999887e-05, 7.55830000000006e-05, 7.559700000000016e-05, 7.565300000000191e-05, 7.486099999999898e-05, 7.506900000000052e-05, 7.490300000000116e-05, 7.569400000000115e-05, 7.545800000000047e-05, 7.481900000000027e-05, 7.486099999999898e-05, 7.509699999999966e-05, 7.488900000000159e-05, 7.566699999999801e-05, 7.4763999999998e-05, 7.477799999999757e-05, 7.513899999999837e-05, 7.555600000000093e-05, 7.511099999999923e-05, 7.491700000000073e-05, 7.48050000000007e-05, 7.483299999999984e-05, 7.481900000000027e-05, 7.493000000000083e-05, 7.55969999999967e-05, 7.491600000000126e-05, 7.48050000000007e-05, 7.572200000000029e-05, 7.574999999999943e-05, 7.495799999999997e-05, 7.563899999999887e-05, 7.499999999999868e-05, 7.477800000000104e-05, 7.488900000000159e-05, 7.56249999999993e-05, 7.49310000000003e-05, 7.49029999999977e-05, 7.509799999999914e-05, 7.476400000000147e-05, 7.487500000000202e-05, 7.476400000000147e-05, 7.49029999999977e-05, 7.566599999999854e-05, 7.566599999999854e-05, 7.56249999999993e-05, 7.565200000000244e-05, 7.497199999999954e-05, 7.569400000000115e-05]</msg>
<status status="PASS" starttime="20201117 14:47:58.952" endtime="20201117 14:47:58.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.947" endtime="20201117 14:47:58.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.957" endtime="20201117 14:47:58.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.960" endtime="20201117 14:47:58.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.959" endtime="20201117 14:47:58.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.955" endtime="20201117 14:47:58.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.588" endtime="20201117 14:47:58.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.586" endtime="20201117 14:47:58.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.586" endtime="20201117 14:47:58.982"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.984" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.992" endtime="20201117 14:47:59.011"></status>
</kw>
<msg timestamp="20201117 14:47:59.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.991" endtime="20201117 14:47:59.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.012" endtime="20201117 14:47:59.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.015" endtime="20201117 14:47:59.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.988" endtime="20201117 14:47:59.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.986" endtime="20201117 14:47:59.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.024" endtime="20201117 14:47:59.309"></status>
</kw>
<msg timestamp="20201117 14:47:59.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025013375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025089319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.022" endtime="20201117 14:47:59.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025013375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025089319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.314" endtime="20201117 14:47:59.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.322" endtime="20201117 14:47:59.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.019" endtime="20201117 14:47:59.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.018" endtime="20201117 14:47:59.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.328" level="INFO">${RESULT} = [{'time': 0.025089319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.594399999999793e-05, 'source_diff': 7.594399999999793e-05}, {'time': 0.025167292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:59.325" endtime="20201117 14:47:59.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.343" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:59.330" endtime="20201117 14:47:59.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.347" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.346" endtime="20201117 14:47:59.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.350" level="INFO">VALUE: [7.594399999999793e-05, 7.587499999999955e-05, 7.661100000000073e-05, 7.665299999999944e-05, 7.66250000000003e-05, 7.588899999999912e-05, 7.586099999999998e-05, 7.611100000000023e-05, 7.583400000000032e-05, 7.669500000000162e-05, 7.591600000000226e-05, 7.666700000000248e-05, 7.598600000000011e-05, 7.611100000000023e-05, 7.669400000000215e-05, 7.672199999999782e-05, 7.655499999999898e-05, 7.604099999999892e-05, 7.673599999999739e-05, 7.581900000000127e-05, 7.656899999999855e-05, 7.668100000000205e-05, 7.613899999999937e-05, 7.587500000000302e-05, 7.599999999999968e-05, 7.601399999999925e-05, 7.580599999999771e-05, 7.580600000000118e-05, 7.5763999999999e-05, 7.586199999999946e-05, 7.61249999999998e-05, 7.582000000000075e-05, 7.594500000000087e-05, 7.582000000000075e-05, 7.588799999999965e-05, 7.588899999999912e-05, 7.661100000000073e-05, 7.584700000000041e-05, 7.638899999999962e-05, 7.670799999999825e-05, 7.61249999999998e-05, 7.606899999999805e-05, 7.602800000000229e-05, 7.674999999999696e-05, 7.606899999999805e-05, 7.672200000000129e-05, 7.677799999999957e-05, 7.579200000000161e-05, 7.591699999999826e-05, 7.590300000000216e-05]</msg>
<status status="PASS" starttime="20201117 14:47:59.349" endtime="20201117 14:47:59.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.344" endtime="20201117 14:47:59.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.353" endtime="20201117 14:47:59.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.356" endtime="20201117 14:47:59.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.355" endtime="20201117 14:47:59.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.351" endtime="20201117 14:47:59.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.984" endtime="20201117 14:47:59.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.983" endtime="20201117 14:47:59.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.982" endtime="20201117 14:47:59.377"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.380" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.388" endtime="20201117 14:47:59.406"></status>
</kw>
<msg timestamp="20201117 14:47:59.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.386" endtime="20201117 14:47:59.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.407" endtime="20201117 14:47:59.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.410" endtime="20201117 14:47:59.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.384" endtime="20201117 14:47:59.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.382" endtime="20201117 14:47:59.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.419" endtime="20201117 14:47:59.704"></status>
</kw>
<msg timestamp="20201117 14:47:59.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024199083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024276458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.417" endtime="20201117 14:47:59.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024199083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024276458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.709" endtime="20201117 14:47:59.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.717" endtime="20201117 14:47:59.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.415" endtime="20201117 14:47:59.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.413" endtime="20201117 14:47:59.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.724" level="INFO">${RESULT} = [{'time': 0.024276458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.737500000000105e-05, 'source_diff': 7.737500000000105e-05}, {'time': 0.024356472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:59.721" endtime="20201117 14:47:59.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.737" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:47:59.725" endtime="20201117 14:47:59.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.742" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.741" endtime="20201117 14:47:59.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.744" level="INFO">VALUE: [7.737500000000105e-05, 7.770799999999925e-05, 7.766600000000054e-05, 7.691599999999979e-05, 7.677799999999957e-05, 7.686099999999751e-05, 7.692999999999936e-05, 7.677799999999957e-05, 7.691700000000273e-05, 7.675000000000043e-05, 7.761100000000173e-05, 7.76250000000013e-05, 7.688900000000012e-05, 7.75839999999986e-05, 7.677799999999957e-05, 7.763900000000087e-05, 7.691700000000273e-05, 7.683400000000132e-05, 7.759800000000164e-05, 7.76250000000013e-05, 7.761100000000173e-05, 7.690200000000022e-05, 7.704099999999992e-05, 7.758299999999912e-05, 7.777800000000057e-05, 7.758299999999912e-05, 7.691599999999979e-05, 7.704199999999939e-05, 7.680599999999871e-05, 7.763900000000087e-05, 7.769399999999968e-05, 7.768099999999958e-05, 7.69449999999984e-05, 7.691699999999926e-05, 7.686100000000098e-05, 7.684700000000141e-05, 7.684799999999742e-05, 7.702799999999982e-05, 7.775000000000143e-05, 7.758400000000207e-05, 7.683300000000184e-05, 7.691599999999979e-05, 7.766600000000054e-05, 7.670799999999825e-05, 7.698600000000111e-05, 7.767999999999664e-05, 7.779200000000014e-05, 7.698600000000111e-05, 7.688900000000012e-05, 7.701400000000025e-05]</msg>
<status status="PASS" starttime="20201117 14:47:59.743" endtime="20201117 14:47:59.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.738" endtime="20201117 14:47:59.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.747" endtime="20201117 14:47:59.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.751" endtime="20201117 14:47:59.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.749" endtime="20201117 14:47:59.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.746" endtime="20201117 14:47:59.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.381" endtime="20201117 14:47:59.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.379" endtime="20201117 14:47:59.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.378" endtime="20201117 14:47:59.772"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.774" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.782" endtime="20201117 14:47:59.800"></status>
</kw>
<msg timestamp="20201117 14:47:59.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.781" endtime="20201117 14:47:59.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.802" endtime="20201117 14:47:59.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.805" endtime="20201117 14:47:59.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.778" endtime="20201117 14:47:59.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.776" endtime="20201117 14:47:59.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.814" endtime="20201117 14:48:00.100"></status>
</kw>
<msg timestamp="20201117 14:48:00.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024941319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025019333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.812" endtime="20201117 14:48:00.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024941319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025019333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.104" endtime="20201117 14:48:00.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.112" endtime="20201117 14:48:00.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.809" endtime="20201117 14:48:00.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.808" endtime="20201117 14:48:00.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.119" level="INFO">${RESULT} = [{'time': 0.025019333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.801400000000125e-05, 'source_diff': 7.801400000000125e-05}, {'time': 0.025099333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:00.116" endtime="20201117 14:48:00.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.132" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:00.120" endtime="20201117 14:48:00.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.137" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.136" endtime="20201117 14:48:00.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.139" level="INFO">VALUE: [7.801400000000125e-05, 7.779100000000067e-05, 7.866599999999807e-05, 7.787499999999808e-05, 7.837499999999858e-05, 7.80969999999992e-05, 7.797199999999907e-05, 7.776399999999753e-05, 7.855600000000046e-05, 7.786099999999851e-05, 7.798599999999864e-05, 7.795899999999897e-05, 7.86250000000023e-05, 7.798600000000211e-05, 7.781999999999928e-05, 7.777800000000057e-05, 7.79030000000007e-05, 7.808400000000257e-05, 7.872199999999982e-05, 7.85969999999997e-05, 7.801300000000178e-05, 7.856900000000056e-05, 7.811100000000223e-05, 7.79030000000007e-05, 7.855499999999752e-05, 7.793000000000036e-05, 7.856900000000056e-05, 7.773600000000186e-05, 7.869500000000015e-05, 7.800000000000168e-05, 7.872300000000276e-05, 7.855600000000046e-05, 7.85839999999996e-05, 7.880500000000124e-05, 7.786099999999851e-05, 7.784799999999842e-05, 7.783299999999937e-05, 7.870899999999972e-05, 7.802699999999788e-05, 7.779100000000067e-05, 7.808299999999962e-05, 7.869500000000015e-05, 7.806900000000006e-05, 7.801400000000125e-05, 7.788900000000112e-05, 7.869399999999721e-05, 7.783299999999937e-05, 7.876399999999853e-05, 7.793000000000036e-05, 7.779200000000014e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.138" endtime="20201117 14:48:00.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.133" endtime="20201117 14:48:00.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.142" endtime="20201117 14:48:00.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.146" endtime="20201117 14:48:00.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.144" endtime="20201117 14:48:00.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.141" endtime="20201117 14:48:00.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.775" endtime="20201117 14:48:00.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.773" endtime="20201117 14:48:00.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.772" endtime="20201117 14:48:00.167"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.169" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.177" endtime="20201117 14:48:00.196"></status>
</kw>
<msg timestamp="20201117 14:48:00.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.176" endtime="20201117 14:48:00.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.197" endtime="20201117 14:48:00.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.200" endtime="20201117 14:48:00.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.173" endtime="20201117 14:48:00.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.171" endtime="20201117 14:48:00.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.209" endtime="20201117 14:48:00.496"></status>
</kw>
<msg timestamp="20201117 14:48:00.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024912417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024991306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.208" endtime="20201117 14:48:00.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024912417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024991306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.500" endtime="20201117 14:48:00.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.508" endtime="20201117 14:48:00.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.205" endtime="20201117 14:48:00.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.204" endtime="20201117 14:48:00.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.515" level="INFO">${RESULT} = [{'time': 0.024991306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.888900000000212e-05, 'source_diff': 7.888900000000212e-05}, {'time': 0.025072319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:00.512" endtime="20201117 14:48:00.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.529" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:00.516" endtime="20201117 14:48:00.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.534" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.533" endtime="20201117 14:48:00.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.536" level="INFO">VALUE: [7.888900000000212e-05, 7.899999999999921e-05, 7.884799999999942e-05, 7.906900000000106e-05, 7.912499999999933e-05, 7.965200000000297e-05, 7.969399999999821e-05, 7.958299999999766e-05, 7.940299999999872e-05, 7.908300000000063e-05, 7.954199999999842e-05, 7.968099999999811e-05, 7.898599999999964e-05, 7.965299999999897e-05, 7.900000000000268e-05, 7.890299999999822e-05, 7.972200000000082e-05, 7.894499999999693e-05, 7.97230000000003e-05, 7.95840000000006e-05, 7.888899999999865e-05, 7.955599999999799e-05, 7.89450000000004e-05, 7.884799999999942e-05, 7.881899999999734e-05, 7.883300000000037e-05, 7.972199999999735e-05, 7.880500000000124e-05, 7.973600000000039e-05, 7.961100000000026e-05, 7.888899999999865e-05, 7.898599999999964e-05, 7.912499999999933e-05, 7.963900000000287e-05, 7.89580000000005e-05, 7.969500000000115e-05, 7.977699999999963e-05, 7.969499999999768e-05, 7.965299999999897e-05, 7.95840000000006e-05, 7.95840000000006e-05, 7.894399999999746e-05, 7.887499999999908e-05, 7.879200000000114e-05, 7.881999999999681e-05, 7.963799999999993e-05, 7.8764000000002e-05, 7.906899999999759e-05, 7.954100000000242e-05, 7.95970000000007e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.535" endtime="20201117 14:48:00.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.530" endtime="20201117 14:48:00.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.539" endtime="20201117 14:48:00.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.543" endtime="20201117 14:48:00.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.541" endtime="20201117 14:48:00.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.538" endtime="20201117 14:48:00.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.170" endtime="20201117 14:48:00.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.168" endtime="20201117 14:48:00.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.167" endtime="20201117 14:48:00.564"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.566" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.575" endtime="20201117 14:48:00.592"></status>
</kw>
<msg timestamp="20201117 14:48:00.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.573" endtime="20201117 14:48:00.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.593" endtime="20201117 14:48:00.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.596" endtime="20201117 14:48:00.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.570" endtime="20201117 14:48:00.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.568" endtime="20201117 14:48:00.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.605" endtime="20201117 14:48:00.890"></status>
</kw>
<msg timestamp="20201117 14:48:00.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024498111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024578875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.603" endtime="20201117 14:48:00.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024498111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024578875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.894" endtime="20201117 14:48:00.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.902" endtime="20201117 14:48:00.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.601" endtime="20201117 14:48:00.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.599" endtime="20201117 14:48:00.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.909" level="INFO">${RESULT} = [{'time': 0.024578875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.076400000000053e-05, 'source_diff': 8.076400000000053e-05}, {'time': 0.024661889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:00.906" endtime="20201117 14:48:00.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.922" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:00.910" endtime="20201117 14:48:00.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.927" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.926" endtime="20201117 14:48:00.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.929" level="INFO">VALUE: [8.076400000000053e-05, 8.058299999999866e-05, 7.993100000000183e-05, 7.974999999999996e-05, 7.990299999999922e-05, 8.059699999999823e-05, 7.99450000000014e-05, 8.019400000000218e-05, 8.076299999999759e-05, 7.983300000000138e-05, 8.055499999999952e-05, 8.06520000000005e-05, 8.009699999999773e-05, 8.000000000000021e-05, 8.03329999999984e-05, 7.986100000000051e-05, 7.984700000000094e-05, 8.004200000000239e-05, 7.97779999999991e-05, 7.976399999999953e-05, 8.002799999999935e-05, 8.062500000000083e-05, 8.008299999999816e-05, 7.998600000000064e-05, 8.057000000000203e-05, 8.011100000000076e-05, 8.055599999999899e-05, 8.06390000000004e-05, 7.984800000000042e-05, 7.980499999999877e-05, 8.063799999999746e-05, 7.97909999999992e-05, 7.991599999999932e-05, 7.973600000000039e-05, 8.075000000000096e-05, 7.988899999999965e-05, 7.986100000000051e-05, 7.986100000000051e-05, 8.07780000000001e-05, 8.01109999999973e-05, 7.99169999999988e-05, 7.998599999999717e-05, 8.005600000000196e-05, 8.061100000000126e-05, 8.061100000000126e-05, 8.066699999999954e-05, 8.070899999999825e-05, 8.062499999999737e-05, 8.05840000000016e-05, 7.998700000000011e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.928" endtime="20201117 14:48:00.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.923" endtime="20201117 14:48:00.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.932" endtime="20201117 14:48:00.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.936" endtime="20201117 14:48:00.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.934" endtime="20201117 14:48:00.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.931" endtime="20201117 14:48:00.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.567" endtime="20201117 14:48:00.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.565" endtime="20201117 14:48:00.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.564" endtime="20201117 14:48:00.957"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.960" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.968" endtime="20201117 14:48:00.985"></status>
</kw>
<msg timestamp="20201117 14:48:00.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.966" endtime="20201117 14:48:00.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.987" endtime="20201117 14:48:00.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.989" endtime="20201117 14:48:00.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.964" endtime="20201117 14:48:00.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.962" endtime="20201117 14:48:00.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.998" endtime="20201117 14:48:01.283"></status>
</kw>
<msg timestamp="20201117 14:48:01.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024512347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024593458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.997" endtime="20201117 14:48:01.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024512347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024593458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.288" endtime="20201117 14:48:01.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.296" endtime="20201117 14:48:01.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.994" endtime="20201117 14:48:01.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.993" endtime="20201117 14:48:01.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.302" level="INFO">${RESULT} = [{'time': 0.024593458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.11109999999983e-05, 'source_diff': 8.11109999999983e-05}, {'time': 0.024676458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:01.299" endtime="20201117 14:48:01.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.316" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:01.303" endtime="20201117 14:48:01.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.320" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.319" endtime="20201117 14:48:01.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.323" level="INFO">VALUE: [8.11109999999983e-05, 8.10269999999974e-05, 8.087499999999762e-05, 8.16109999999988e-05, 8.09719999999986e-05, 8.10970000000022e-05, 8.11390000000009e-05, 8.154099999999748e-05, 8.102800000000035e-05, 8.090300000000022e-05, 8.108299999999916e-05, 8.090300000000022e-05, 8.098599999999817e-05, 8.165300000000097e-05, 8.087499999999762e-05, 8.155599999999999e-05, 8.108399999999863e-05, 8.09169999999998e-05, 8.155599999999999e-05, 8.170799999999978e-05, 8.09169999999998e-05, 8.108299999999916e-05, 8.090200000000075e-05, 8.086099999999805e-05, 8.159699999999923e-05, 8.168100000000011e-05, 8.094399999999946e-05, 8.088900000000065e-05, 8.090300000000022e-05, 8.087500000000108e-05, 8.15970000000027e-05, 8.116700000000004e-05, 8.082000000000228e-05, 8.162500000000183e-05, 8.097200000000207e-05, 8.111100000000177e-05, 8.105599999999949e-05, 8.097299999999807e-05, 8.165300000000097e-05, 8.168100000000011e-05, 8.16529999999975e-05, 8.163899999999794e-05, 8.163799999999846e-05, 8.077700000000063e-05, 8.162499999999837e-05, 8.081899999999934e-05, 8.086099999999805e-05, 8.109699999999873e-05, 8.090300000000022e-05, 8.097200000000207e-05]</msg>
<status status="PASS" starttime="20201117 14:48:01.321" endtime="20201117 14:48:01.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.317" endtime="20201117 14:48:01.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.332" endtime="20201117 14:48:01.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.335" endtime="20201117 14:48:01.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.334" endtime="20201117 14:48:01.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.330" endtime="20201117 14:48:01.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.960" endtime="20201117 14:48:01.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.958" endtime="20201117 14:48:01.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.957" endtime="20201117 14:48:01.356"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.359" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.368" endtime="20201117 14:48:01.386"></status>
</kw>
<msg timestamp="20201117 14:48:01.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.366" endtime="20201117 14:48:01.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.387" endtime="20201117 14:48:01.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.390" endtime="20201117 14:48:01.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.363" endtime="20201117 14:48:01.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.361" endtime="20201117 14:48:01.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.399" endtime="20201117 14:48:01.684"></status>
</kw>
<msg timestamp="20201117 14:48:01.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025204361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025287069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.397" endtime="20201117 14:48:01.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025204361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025287069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.688" endtime="20201117 14:48:01.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.696" endtime="20201117 14:48:01.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.395" endtime="20201117 14:48:01.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.393" endtime="20201117 14:48:01.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.703" level="INFO">${RESULT} = [{'time': 0.025287069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.270799999999731e-05, 'source_diff': 8.270799999999731e-05}, {'time': 0.025371097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:01.699" endtime="20201117 14:48:01.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.717" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:01.704" endtime="20201117 14:48:01.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.723" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.722" endtime="20201117 14:48:01.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.726" level="INFO">VALUE: [8.270799999999731e-05, 8.176399999999806e-05, 8.209699999999973e-05, 8.258300000000066e-05, 8.181899999999687e-05, 8.26109999999998e-05, 8.266700000000154e-05, 8.174999999999849e-05, 8.201399999999831e-05, 8.188800000000218e-05, 8.202800000000135e-05, 8.184699999999948e-05, 8.19170000000008e-05, 8.207000000000006e-05, 8.181999999999981e-05, 8.17780000000011e-05, 8.195800000000003e-05, 8.190300000000122e-05, 8.186200000000199e-05, 8.255499999999805e-05, 8.272200000000035e-05, 8.198600000000264e-05, 8.208300000000016e-05, 8.199999999999874e-05, 8.204200000000092e-05, 8.195800000000003e-05, 8.212500000000234e-05, 8.190299999999776e-05, 8.194399999999699e-05, 8.184699999999948e-05, 8.262499999999937e-05, 8.270799999999731e-05, 8.181999999999981e-05, 8.180600000000024e-05, 8.186100000000252e-05, 8.211100000000277e-05, 8.186099999999905e-05, 8.180600000000024e-05, 8.186199999999852e-05, 8.208300000000016e-05, 8.272199999999688e-05, 8.199999999999874e-05, 8.205499999999755e-05, 8.193000000000089e-05, 8.198599999999917e-05, 8.267999999999817e-05, 8.177799999999763e-05, 8.258300000000066e-05, 8.186100000000252e-05, 8.254199999999795e-05]</msg>
<status status="PASS" starttime="20201117 14:48:01.724" endtime="20201117 14:48:01.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.718" endtime="20201117 14:48:01.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.730" endtime="20201117 14:48:01.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.735" endtime="20201117 14:48:01.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.733" endtime="20201117 14:48:01.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.728" endtime="20201117 14:48:01.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.360" endtime="20201117 14:48:01.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.358" endtime="20201117 14:48:01.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.357" endtime="20201117 14:48:01.757"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.760" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.771" endtime="20201117 14:48:01.790"></status>
</kw>
<msg timestamp="20201117 14:48:01.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.769" endtime="20201117 14:48:01.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.791" endtime="20201117 14:48:01.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.794" endtime="20201117 14:48:01.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.766" endtime="20201117 14:48:01.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.763" endtime="20201117 14:48:01.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.803" endtime="20201117 14:48:02.089"></status>
</kw>
<msg timestamp="20201117 14:48:02.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029631681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029715056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.801" endtime="20201117 14:48:02.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029631681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029715056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.093" endtime="20201117 14:48:02.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.101" endtime="20201117 14:48:02.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.799" endtime="20201117 14:48:02.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.797" endtime="20201117 14:48:02.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.108" level="INFO">${RESULT} = [{'time': 0.029715056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.337500000000012e-05, 'source_diff': 8.337500000000012e-05}, {'time': 0.029800056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:02.104" endtime="20201117 14:48:02.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.122" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:02.109" endtime="20201117 14:48:02.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.127" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.126" endtime="20201117 14:48:02.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.129" level="INFO">VALUE: [8.337500000000012e-05, 8.298699999999964e-05, 8.308300000000116e-05, 8.316699999999858e-05, 8.290199999999928e-05, 8.304199999999845e-05, 8.295800000000103e-05, 8.305500000000202e-05, 8.281899999999787e-05, 8.308300000000116e-05, 8.308300000000116e-05, 8.276399999999906e-05, 8.338899999999969e-05, 8.279200000000167e-05, 8.295799999999756e-05, 8.291699999999833e-05, 8.27780000000021e-05, 8.299999999999974e-05, 8.308400000000063e-05, 8.290299999999876e-05, 8.276399999999906e-05, 8.294500000000093e-05, 8.37370000000004e-05, 8.356899999999862e-05, 8.287500000000309e-05, 8.366599999999613e-05, 8.298600000000017e-05, 8.36390000000034e-05, 8.297199999999366e-05, 8.291599999999538e-05, 8.372200000000135e-05, 8.295800000000103e-05, 8.298600000000017e-05, 8.373600000000092e-05, 8.301399999999931e-05, 8.293100000000136e-05, 8.286099999999658e-05, 8.29590000000005e-05, 8.31390000000029e-05, 8.282000000000428e-05, 8.369499999999475e-05, 8.363799999999699e-05, 8.369500000000168e-05, 8.288899999999572e-05, 8.370800000000178e-05, 8.362500000000384e-05, 8.311099999999683e-05, 8.299999999999974e-05, 8.288900000000265e-05, 8.356900000000556e-05]</msg>
<status status="PASS" starttime="20201117 14:48:02.128" endtime="20201117 14:48:02.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.123" endtime="20201117 14:48:02.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.132" endtime="20201117 14:48:02.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.136" endtime="20201117 14:48:02.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.134" endtime="20201117 14:48:02.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.131" endtime="20201117 14:48:02.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.761" endtime="20201117 14:48:02.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.758" endtime="20201117 14:48:02.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.757" endtime="20201117 14:48:02.157"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.159" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.167" endtime="20201117 14:48:02.186"></status>
</kw>
<msg timestamp="20201117 14:48:02.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.166" endtime="20201117 14:48:02.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.187" endtime="20201117 14:48:02.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.190" endtime="20201117 14:48:02.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.163" endtime="20201117 14:48:02.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.161" endtime="20201117 14:48:02.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.199" endtime="20201117 14:48:02.484"></status>
</kw>
<msg timestamp="20201117 14:48:02.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02442875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024513153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:02.197" endtime="20201117 14:48:02.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02442875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024513153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:02.489" endtime="20201117 14:48:02.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.497" endtime="20201117 14:48:02.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.195" endtime="20201117 14:48:02.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.193" endtime="20201117 14:48:02.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.504" level="INFO">${RESULT} = [{'time': 0.024513153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.440300000000026e-05, 'source_diff': 8.440300000000026e-05}, {'time': 0.024599167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:02.501" endtime="20201117 14:48:02.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.517" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:02.505" endtime="20201117 14:48:02.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.522" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.521" endtime="20201117 14:48:02.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.524" level="INFO">VALUE: [8.440300000000026e-05, 8.398600000000117e-05, 8.391699999999933e-05, 8.441600000000035e-05, 8.45980000000017e-05, 8.388900000000019e-05, 8.395899999999804e-05, 8.398600000000117e-05, 8.377700000000016e-05, 8.391599999999985e-05, 8.406899999999912e-05, 8.461099999999833e-05, 8.398600000000117e-05, 8.46530000000005e-05, 8.46110000000018e-05, 8.386100000000105e-05, 8.388900000000019e-05, 8.407000000000206e-05, 8.46249999999979e-05, 8.391699999999933e-05, 8.388900000000019e-05, 8.388900000000019e-05, 8.37919999999992e-05, 8.402799999999988e-05, 8.412500000000087e-05, 8.438900000000069e-05, 8.454100000000048e-05, 8.397199999999813e-05, 8.384700000000148e-05, 8.376300000000059e-05, 8.472200000000235e-05, 8.463900000000094e-05, 8.406899999999912e-05, 8.459699999999876e-05, 8.476400000000106e-05, 8.390299999999976e-05, 8.381900000000234e-05, 8.466700000000008e-05, 8.408300000000216e-05, 8.397199999999813e-05, 8.469499999999922e-05, 8.399999999999727e-05, 8.468099999999965e-05, 8.393100000000236e-05, 8.466700000000008e-05, 8.46249999999979e-05, 8.408300000000216e-05, 8.472200000000235e-05, 8.406899999999912e-05, 8.406899999999912e-05]</msg>
<status status="PASS" starttime="20201117 14:48:02.523" endtime="20201117 14:48:02.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.518" endtime="20201117 14:48:02.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.527" endtime="20201117 14:48:02.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.531" endtime="20201117 14:48:02.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.529" endtime="20201117 14:48:02.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.526" endtime="20201117 14:48:02.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.160" endtime="20201117 14:48:02.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.158" endtime="20201117 14:48:02.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.157" endtime="20201117 14:48:02.552"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.554" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.562" endtime="20201117 14:48:02.580"></status>
</kw>
<msg timestamp="20201117 14:48:02.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.561" endtime="20201117 14:48:02.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.582" endtime="20201117 14:48:02.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.584" endtime="20201117 14:48:02.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.558" endtime="20201117 14:48:02.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.556" endtime="20201117 14:48:02.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.594" endtime="20201117 14:48:02.879"></status>
</kw>
<msg timestamp="20201117 14:48:02.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024050597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024135736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.592" endtime="20201117 14:48:02.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024050597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024135736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.883" endtime="20201117 14:48:02.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.891" endtime="20201117 14:48:02.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.589" endtime="20201117 14:48:02.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.587" endtime="20201117 14:48:02.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.898" level="INFO">${RESULT} = [{'time': 0.024135736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.513900000000144e-05, 'source_diff': 8.513900000000144e-05}, {'time': 0.024222708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:02.895" endtime="20201117 14:48:02.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.911" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:02.899" endtime="20201117 14:48:02.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.916" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.915" endtime="20201117 14:48:02.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.918" level="INFO">VALUE: [8.513900000000144e-05, 8.509699999999926e-05, 8.499999999999827e-05, 8.505500000000055e-05, 8.56530000000015e-05, 8.568000000000117e-05, 8.488900000000119e-05, 8.574999999999902e-05, 8.504200000000045e-05, 8.558300000000019e-05, 8.566700000000108e-05, 8.570900000000325e-05, 8.495899999999904e-05, 8.576399999999859e-05, 8.487499999999815e-05, 8.566700000000108e-05, 8.513899999999797e-05, 8.500000000000174e-05, 8.561099999999933e-05, 8.490200000000128e-05, 8.488900000000119e-05, 8.505500000000055e-05, 8.501399999999784e-05, 8.556900000000062e-05, 8.568100000000065e-05, 8.566700000000108e-05, 8.568100000000065e-05, 8.562500000000237e-05, 8.476399999999759e-05, 8.565299999999804e-05, 8.483399999999891e-05, 8.477800000000063e-05, 8.504200000000045e-05, 8.538899999999822e-05, 8.49729999999986e-05, 8.561200000000227e-05, 8.513900000000144e-05, 8.495799999999956e-05, 8.576399999999859e-05, 8.494399999999999e-05, 8.559699999999976e-05, 8.479100000000073e-05, 8.49859999999987e-05, 8.572199999999988e-05, 8.487500000000162e-05, 8.518100000000015e-05, 8.569500000000022e-05, 8.477800000000063e-05, 8.51249999999984e-05, 8.483399999999891e-05]</msg>
<status status="PASS" starttime="20201117 14:48:02.917" endtime="20201117 14:48:02.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.912" endtime="20201117 14:48:02.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.921" endtime="20201117 14:48:02.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.925" endtime="20201117 14:48:02.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.923" endtime="20201117 14:48:02.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.920" endtime="20201117 14:48:02.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.554" endtime="20201117 14:48:02.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.553" endtime="20201117 14:48:02.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.552" endtime="20201117 14:48:02.946"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.948" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.956" endtime="20201117 14:48:02.975"></status>
</kw>
<msg timestamp="20201117 14:48:02.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.955" endtime="20201117 14:48:02.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.976" endtime="20201117 14:48:02.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.979" endtime="20201117 14:48:02.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.952" endtime="20201117 14:48:02.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.950" endtime="20201117 14:48:02.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.988" endtime="20201117 14:48:03.274"></status>
</kw>
<msg timestamp="20201117 14:48:03.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023947111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024033875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.987" endtime="20201117 14:48:03.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023947111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024033875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.278" endtime="20201117 14:48:03.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.286" endtime="20201117 14:48:03.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.984" endtime="20201117 14:48:03.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.982" endtime="20201117 14:48:03.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.293" level="INFO">${RESULT} = [{'time': 0.024033875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.676399999999959e-05, 'source_diff': 8.676399999999959e-05}, {'time': 0.024122875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:03.289" endtime="20201117 14:48:03.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.306" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:03.294" endtime="20201117 14:48:03.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.310" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.309" endtime="20201117 14:48:03.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.313" level="INFO">VALUE: [8.676399999999959e-05, 8.672199999999741e-05, 8.597200000000013e-05, 8.655600000000152e-05, 8.604199999999798e-05, 8.59859999999997e-05, 8.637499999999965e-05, 8.586099999999958e-05, 8.608400000000016e-05, 8.654199999999848e-05, 8.608300000000069e-05, 8.611200000000277e-05, 8.599999999999927e-05, 8.656900000000162e-05, 8.588799999999924e-05, 8.659700000000076e-05, 8.595799999999709e-05, 8.676399999999959e-05, 8.659700000000076e-05, 8.584800000000295e-05, 8.661100000000033e-05, 8.597200000000013e-05, 8.661100000000033e-05, 8.588899999999872e-05, 8.663900000000294e-05, 8.602799999999841e-05, 8.577800000000163e-05, 8.66669999999986e-05, 8.57920000000012e-05, 8.588900000000219e-05, 8.661100000000033e-05, 8.590300000000176e-05, 8.66119999999998e-05, 8.586099999999958e-05, 8.661100000000033e-05, 8.595800000000056e-05, 8.591599999999838e-05, 8.572199999999988e-05, 8.602800000000188e-05, 8.609700000000026e-05, 8.602799999999841e-05, 8.613899999999897e-05, 8.597200000000013e-05, 8.606899999999765e-05, 8.601399999999884e-05, 8.597200000000013e-05, 8.581999999999687e-05, 8.637499999999965e-05, 8.609799999999973e-05, 8.58059999999973e-05]</msg>
<status status="PASS" starttime="20201117 14:48:03.311" endtime="20201117 14:48:03.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.307" endtime="20201117 14:48:03.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.316" endtime="20201117 14:48:03.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.319" endtime="20201117 14:48:03.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.318" endtime="20201117 14:48:03.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.314" endtime="20201117 14:48:03.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.949" endtime="20201117 14:48:03.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.947" endtime="20201117 14:48:03.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.946" endtime="20201117 14:48:03.340"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.343" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.351" endtime="20201117 14:48:03.370"></status>
</kw>
<msg timestamp="20201117 14:48:03.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.350" endtime="20201117 14:48:03.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.372" endtime="20201117 14:48:03.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.374" endtime="20201117 14:48:03.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.347" endtime="20201117 14:48:03.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.345" endtime="20201117 14:48:03.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.383" endtime="20201117 14:48:03.669"></status>
</kw>
<msg timestamp="20201117 14:48:03.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025443278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025530806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.382" endtime="20201117 14:48:03.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025443278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025530806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.673" endtime="20201117 14:48:03.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.681" endtime="20201117 14:48:03.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.379" endtime="20201117 14:48:03.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.377" endtime="20201117 14:48:03.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.688" level="INFO">${RESULT} = [{'time': 0.025530806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.752799999999991e-05, 'source_diff': 8.752799999999991e-05}, {'time': 0.025619819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:03.685" endtime="20201117 14:48:03.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.702" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:03.689" endtime="20201117 14:48:03.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.707" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.706" endtime="20201117 14:48:03.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.709" level="INFO">VALUE: [8.752799999999991e-05, 8.690199999999981e-05, 8.690299999999929e-05, 8.679099999999926e-05, 8.708300000000169e-05, 8.761100000000133e-05, 8.756899999999915e-05, 8.76799999999997e-05, 8.702699999999994e-05, 8.691700000000233e-05, 8.693099999999843e-05, 8.676400000000306e-05, 8.682000000000134e-05, 8.761099999999786e-05, 8.690300000000276e-05, 8.737500000000065e-05, 8.701399999999984e-05, 8.690299999999929e-05, 8.688800000000024e-05, 8.772299999999789e-05, 8.683400000000091e-05, 8.706900000000212e-05, 8.680499999999883e-05, 8.69860000000007e-05, 8.6847000000001e-05, 8.691599999999938e-05, 8.705499999999908e-05, 8.775000000000102e-05, 8.770799999999884e-05, 8.754199999999948e-05, 8.777800000000016e-05, 8.700000000000027e-05, 8.768099999999918e-05, 8.775000000000102e-05, 8.691699999999886e-05, 8.709800000000073e-05, 8.700000000000027e-05, 8.759699999999829e-05, 8.772199999999841e-05, 8.708400000000116e-05, 8.76799999999997e-05, 8.763800000000099e-05, 8.683299999999797e-05, 8.687500000000015e-05, 8.687500000000015e-05, 8.686099999999711e-05, 8.701399999999984e-05, 8.769399999999927e-05, 8.698599999999723e-05, 8.755600000000252e-05]</msg>
<status status="PASS" starttime="20201117 14:48:03.708" endtime="20201117 14:48:03.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.703" endtime="20201117 14:48:03.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.712" endtime="20201117 14:48:03.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.716" endtime="20201117 14:48:03.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.714" endtime="20201117 14:48:03.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.711" endtime="20201117 14:48:03.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.343" endtime="20201117 14:48:03.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.342" endtime="20201117 14:48:03.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.341" endtime="20201117 14:48:03.737"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.739" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.748" endtime="20201117 14:48:03.766"></status>
</kw>
<msg timestamp="20201117 14:48:03.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.746" endtime="20201117 14:48:03.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.767" endtime="20201117 14:48:03.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.770" endtime="20201117 14:48:03.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.743" endtime="20201117 14:48:03.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.741" endtime="20201117 14:48:03.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.779" endtime="20201117 14:48:04.064"></status>
</kw>
<msg timestamp="20201117 14:48:04.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0245435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024631292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:03.777" endtime="20201117 14:48:04.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0245435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024631292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:04.068" endtime="20201117 14:48:04.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.076" endtime="20201117 14:48:04.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.774" endtime="20201117 14:48:04.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.773" endtime="20201117 14:48:04.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.083" level="INFO">${RESULT} = [{'time': 0.024631292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.779199999999973e-05, 'source_diff': 8.779199999999973e-05}, {'time': 0.024721292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:04.080" endtime="20201117 14:48:04.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.096" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:04.084" endtime="20201117 14:48:04.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.101" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.100" endtime="20201117 14:48:04.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.103" level="INFO">VALUE: [8.779199999999973e-05, 8.779199999999973e-05, 8.861099999999886e-05, 8.777700000000069e-05, 8.797299999999814e-05, 8.79860000000017e-05, 8.802800000000041e-05, 8.861099999999886e-05, 8.865299999999757e-05, 8.790300000000029e-05, 8.804100000000051e-05, 8.874999999999855e-05, 8.783299999999897e-05, 8.79310000000029e-05, 8.873599999999898e-05, 8.865300000000104e-05, 8.773599999999798e-05, 8.805599999999955e-05, 8.787500000000115e-05, 8.868100000000018e-05, 8.801399999999737e-05, 8.790300000000029e-05, 8.870799999999984e-05, 8.808299999999922e-05, 8.86519999999981e-05, 8.779100000000026e-05, 8.868100000000018e-05, 8.873599999999898e-05, 8.811099999999836e-05, 8.786099999999811e-05, 8.776400000000059e-05, 8.791699999999986e-05, 8.788900000000072e-05, 8.802800000000041e-05, 8.79860000000017e-05, 8.784700000000201e-05, 8.865300000000104e-05, 8.78059999999993e-05, 8.865300000000104e-05, 8.847299999999864e-05, 8.816600000000063e-05, 8.790200000000081e-05, 8.86519999999981e-05, 8.790200000000081e-05, 8.870799999999984e-05, 8.787500000000115e-05, 8.774999999999755e-05, 8.861099999999886e-05, 8.788899999999725e-05, 8.798599999999823e-05]</msg>
<status status="PASS" starttime="20201117 14:48:04.102" endtime="20201117 14:48:04.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.097" endtime="20201117 14:48:04.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.107" endtime="20201117 14:48:04.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.110" endtime="20201117 14:48:04.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.109" endtime="20201117 14:48:04.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.105" endtime="20201117 14:48:04.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.740" endtime="20201117 14:48:04.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.738" endtime="20201117 14:48:04.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.737" endtime="20201117 14:48:04.131"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.134" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.142" endtime="20201117 14:48:04.160"></status>
</kw>
<msg timestamp="20201117 14:48:04.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.140" endtime="20201117 14:48:04.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.162" endtime="20201117 14:48:04.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.164" endtime="20201117 14:48:04.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.138" endtime="20201117 14:48:04.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.136" endtime="20201117 14:48:04.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.173" endtime="20201117 14:48:04.459"></status>
</kw>
<msg timestamp="20201117 14:48:04.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023975194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024064847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.172" endtime="20201117 14:48:04.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023975194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024064847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.464" endtime="20201117 14:48:04.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.472" endtime="20201117 14:48:04.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.169" endtime="20201117 14:48:04.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.168" endtime="20201117 14:48:04.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.478" level="INFO">${RESULT} = [{'time': 0.024064847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.965300000000204e-05, 'source_diff': 8.965300000000204e-05}, {'time': 0.024156875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:04.475" endtime="20201117 14:48:04.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.492" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:04.479" endtime="20201117 14:48:04.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.496" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.495" endtime="20201117 14:48:04.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.499" level="INFO">VALUE: [8.965300000000204e-05, 8.977800000000216e-05, 8.908300000000022e-05, 8.901300000000237e-05, 8.908300000000022e-05, 8.897199999999966e-05, 8.901400000000184e-05, 8.9638999999999e-05, 8.893100000000043e-05, 8.913900000000197e-05, 8.8945e-05, 8.89999999999988e-05, 8.913799999999902e-05, 8.870899999999932e-05, 8.890200000000181e-05, 8.895800000000009e-05, 8.900000000000227e-05, 8.962499999999943e-05, 8.906900000000065e-05, 8.967999999999823e-05, 8.887499999999868e-05, 8.961099999999986e-05, 8.897199999999966e-05, 8.89999999999988e-05, 8.908399999999969e-05, 8.883299999999997e-05, 8.8945e-05, 8.901400000000184e-05, 8.954199999999801e-05, 8.970800000000084e-05, 8.965299999999857e-05, 8.897299999999914e-05, 8.887500000000215e-05, 8.908300000000022e-05, 8.9638999999999e-05, 8.969400000000127e-05, 8.89860000000027e-05, 8.89860000000027e-05, 8.883299999999997e-05, 8.877800000000116e-05, 8.884699999999954e-05, 8.913900000000197e-05, 8.958300000000072e-05, 8.972200000000041e-05, 8.9638999999999e-05, 8.904199999999751e-05, 8.968100000000118e-05, 8.916600000000163e-05, 8.912499999999893e-05, 8.88190000000004e-05]</msg>
<status status="PASS" starttime="20201117 14:48:04.497" endtime="20201117 14:48:04.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.492" endtime="20201117 14:48:04.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.502" endtime="20201117 14:48:04.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.506" endtime="20201117 14:48:04.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.504" endtime="20201117 14:48:04.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.501" endtime="20201117 14:48:04.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.134" endtime="20201117 14:48:04.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.132" endtime="20201117 14:48:04.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.132" endtime="20201117 14:48:04.527"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.529" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.537" endtime="20201117 14:48:04.556"></status>
</kw>
<msg timestamp="20201117 14:48:04.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.536" endtime="20201117 14:48:04.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.558" endtime="20201117 14:48:04.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.560" endtime="20201117 14:48:04.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.533" endtime="20201117 14:48:04.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.531" endtime="20201117 14:48:04.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.569" endtime="20201117 14:48:04.854"></status>
</kw>
<msg timestamp="20201117 14:48:04.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024676458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024766958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.568" endtime="20201117 14:48:04.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024676458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024766958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.859" endtime="20201117 14:48:04.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.867" endtime="20201117 14:48:04.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.565" endtime="20201117 14:48:04.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.563" endtime="20201117 14:48:04.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.873" level="INFO">${RESULT} = [{'time': 0.024766958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.05000000000003e-05, 'source_diff': 9.05000000000003e-05}, {'time': 0.024858958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:04.870" endtime="20201117 14:48:04.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.887" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:04.875" endtime="20201117 14:48:04.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.892" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.891" endtime="20201117 14:48:04.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.894" level="INFO">VALUE: [9.05000000000003e-05, 9.009700000000079e-05, 9.072199999999794e-05, 8.995800000000109e-05, 9.008299999999775e-05, 8.990299999999882e-05, 9.06939999999988e-05, 8.995800000000109e-05, 8.991699999999839e-05, 8.987499999999968e-05, 9.038899999999975e-05, 9.005600000000155e-05, 9.066699999999914e-05, 9.068099999999871e-05, 8.98190000000014e-05, 9.069499999999828e-05, 9.066599999999966e-05, 9.011100000000036e-05, 9.011099999999689e-05, 9.055499999999911e-05, 8.998600000000023e-05, 9.059699999999782e-05, 8.977800000000216e-05, 9.006899999999818e-05, 9.062500000000043e-05, 9.058300000000172e-05, 9.002799999999894e-05, 8.993100000000143e-05, 9.062499999999696e-05, 8.979200000000173e-05, 9.011100000000036e-05, 8.983400000000044e-05, 8.994399999999805e-05, 8.984800000000001e-05, 9.066599999999966e-05, 8.993000000000195e-05, 9.06520000000001e-05, 8.981899999999793e-05, 8.983300000000097e-05, 9.073599999999751e-05, 9.059699999999782e-05, 9.062500000000043e-05, 9.01389999999995e-05, 8.974999999999955e-05, 8.986100000000011e-05, 9.037500000000018e-05, 9.068099999999871e-05, 8.979200000000173e-05, 9.012499999999993e-05, 8.98060000000013e-05]</msg>
<status status="PASS" starttime="20201117 14:48:04.893" endtime="20201117 14:48:04.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.888" endtime="20201117 14:48:04.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.897" endtime="20201117 14:48:04.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.901" endtime="20201117 14:48:04.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.899" endtime="20201117 14:48:04.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.896" endtime="20201117 14:48:04.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.530" endtime="20201117 14:48:04.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.528" endtime="20201117 14:48:04.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.527" endtime="20201117 14:48:04.922"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.924" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.932" endtime="20201117 14:48:04.951"></status>
</kw>
<msg timestamp="20201117 14:48:04.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.931" endtime="20201117 14:48:04.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.953" endtime="20201117 14:48:04.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.955" endtime="20201117 14:48:04.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.928" endtime="20201117 14:48:04.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.926" endtime="20201117 14:48:04.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.964" endtime="20201117 14:48:05.250"></status>
</kw>
<msg timestamp="20201117 14:48:05.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025006181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025097319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.963" endtime="20201117 14:48:05.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025006181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025097319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.254" endtime="20201117 14:48:05.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.262" endtime="20201117 14:48:05.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.960" endtime="20201117 14:48:05.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.959" endtime="20201117 14:48:05.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.269" level="INFO">${RESULT} = [{'time': 0.025097319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.113800000000102e-05, 'source_diff': 9.113800000000102e-05}, {'time': 0.025190306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:05.266" endtime="20201117 14:48:05.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.283" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:05.270" endtime="20201117 14:48:05.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.288" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.287" endtime="20201117 14:48:05.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.290" level="INFO">VALUE: [9.113800000000102e-05, 9.109799999999779e-05, 9.08329999999985e-05, 9.16939999999998e-05, 9.106900000000265e-05, 9.141699999999989e-05, 9.16939999999998e-05, 9.073600000000098e-05, 9.076400000000012e-05, 9.091699999999939e-05, 9.083300000000197e-05, 9.108299999999875e-05, 9.102799999999994e-05, 9.10000000000008e-05, 9.166700000000014e-05, 9.087500000000068e-05, 9.162500000000143e-05, 9.09589999999981e-05, 9.156999999999915e-05, 9.166700000000014e-05, 9.155500000000011e-05, 9.163800000000152e-05, 9.16939999999998e-05, 9.173600000000198e-05, 9.173600000000198e-05, 9.108299999999875e-05, 9.173599999999851e-05, 9.106999999999865e-05, 9.149999999999783e-05, 9.109699999999832e-05, 9.084700000000154e-05, 9.155600000000305e-05, 9.105599999999908e-05, 9.09589999999981e-05, 9.168099999999971e-05, 9.091699999999939e-05, 9.093100000000243e-05, 9.154200000000001e-05, 9.174999999999808e-05, 9.098600000000123e-05, 9.162500000000143e-05, 9.083300000000197e-05, 9.077799999999969e-05, 9.166700000000014e-05, 9.159699999999882e-05, 9.165300000000057e-05, 9.173599999999851e-05, 9.104199999999951e-05, 9.10139999999969e-05, 9.086100000000111e-05]</msg>
<status status="PASS" starttime="20201117 14:48:05.289" endtime="20201117 14:48:05.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.284" endtime="20201117 14:48:05.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.293" endtime="20201117 14:48:05.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.297" endtime="20201117 14:48:05.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.295" endtime="20201117 14:48:05.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.292" endtime="20201117 14:48:05.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.925" endtime="20201117 14:48:05.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.923" endtime="20201117 14:48:05.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.922" endtime="20201117 14:48:05.318"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.320" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.328" endtime="20201117 14:48:05.346"></status>
</kw>
<msg timestamp="20201117 14:48:05.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.327" endtime="20201117 14:48:05.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.348" endtime="20201117 14:48:05.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.350" endtime="20201117 14:48:05.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.324" endtime="20201117 14:48:05.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.322" endtime="20201117 14:48:05.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.360" endtime="20201117 14:48:05.645"></status>
</kw>
<msg timestamp="20201117 14:48:05.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024161306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024254042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.357" endtime="20201117 14:48:05.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024161306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024254042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.649" endtime="20201117 14:48:05.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.658" endtime="20201117 14:48:05.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.355" endtime="20201117 14:48:05.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.353" endtime="20201117 14:48:05.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.664" level="INFO">${RESULT} = [{'time': 0.024254042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.273599999999951e-05, 'source_diff': 9.273599999999951e-05}, {'time': 0.024349083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:05.661" endtime="20201117 14:48:05.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.678" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:05.665" endtime="20201117 14:48:05.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.682" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.681" endtime="20201117 14:48:05.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.685" level="INFO">VALUE: [9.273599999999951e-05, 9.280500000000136e-05, 9.273699999999899e-05, 9.259799999999929e-05, 9.262500000000243e-05, 9.199999999999833e-05, 9.26940000000008e-05, 9.199999999999833e-05, 9.213899999999803e-05, 9.208299999999975e-05, 9.179200000000026e-05, 9.181899999999993e-05, 9.188900000000125e-05, 9.261100000000286e-05, 9.195800000000309e-05, 9.268100000000071e-05, 9.268100000000071e-05, 9.204200000000051e-05, 9.212500000000193e-05, 9.265300000000157e-05, 9.182000000000287e-05, 9.274999999999908e-05, 9.197299999999867e-05, 9.181899999999993e-05, 9.256900000000068e-05, 9.209699999999932e-05, 9.26940000000008e-05, 9.195799999999962e-05, 9.268000000000123e-05, 9.208299999999975e-05, 9.184699999999907e-05, 9.269399999999733e-05, 9.212499999999846e-05, 9.209700000000279e-05, 9.262499999999896e-05, 9.175000000000155e-05, 9.273599999999951e-05, 9.262499999999896e-05, 9.183399999999897e-05, 9.190299999999735e-05, 9.266700000000114e-05, 9.179200000000026e-05, 9.273600000000298e-05, 9.274999999999908e-05, 9.266600000000166e-05, 9.180500000000036e-05, 9.211099999999889e-05, 9.272199999999994e-05, 9.208299999999975e-05, 9.181899999999993e-05]</msg>
<status status="PASS" starttime="20201117 14:48:05.683" endtime="20201117 14:48:05.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.679" endtime="20201117 14:48:05.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.688" endtime="20201117 14:48:05.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.691" endtime="20201117 14:48:05.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.690" endtime="20201117 14:48:05.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.686" endtime="20201117 14:48:05.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.321" endtime="20201117 14:48:05.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.319" endtime="20201117 14:48:05.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.318" endtime="20201117 14:48:05.712"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.714" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.723" endtime="20201117 14:48:05.742"></status>
</kw>
<msg timestamp="20201117 14:48:05.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.721" endtime="20201117 14:48:05.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.743" endtime="20201117 14:48:05.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.746" endtime="20201117 14:48:05.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.719" endtime="20201117 14:48:05.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.716" endtime="20201117 14:48:05.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.755" endtime="20201117 14:48:06.040"></status>
</kw>
<msg timestamp="20201117 14:48:06.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023996917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024090264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.754" endtime="20201117 14:48:06.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023996917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024090264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.045" endtime="20201117 14:48:06.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.053" endtime="20201117 14:48:06.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.751" endtime="20201117 14:48:06.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.749" endtime="20201117 14:48:06.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.059" level="INFO">${RESULT} = [{'time': 0.024090264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.334700000000057e-05, 'source_diff': 9.334700000000057e-05}, {'time': 0.024186208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:06.056" endtime="20201117 14:48:06.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.073" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:06.060" endtime="20201117 14:48:06.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.077" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.076" endtime="20201117 14:48:06.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.080" level="INFO">VALUE: [9.334700000000057e-05, 9.373600000000051e-05, 9.284700000000007e-05, 9.276399999999865e-05, 9.374999999999661e-05, 9.305499999999814e-05, 9.29720000000002e-05, 9.30000000000028e-05, 9.281900000000093e-05, 9.362499999999996e-05, 9.290299999999835e-05, 9.298599999999976e-05, 9.286099999999964e-05, 9.355599999999811e-05, 9.291700000000139e-05, 9.312499999999946e-05, 9.313899999999903e-05, 9.370800000000137e-05, 9.355500000000211e-05, 9.279099999999832e-05, 9.366600000000266e-05, 9.280500000000136e-05, 9.304200000000151e-05, 9.309700000000032e-05, 9.369399999999833e-05, 9.31529999999986e-05, 9.275000000000255e-05, 9.370800000000137e-05, 9.299999999999933e-05, 9.291600000000191e-05, 9.276399999999865e-05, 9.318000000000173e-05, 9.291599999999844e-05, 9.312499999999946e-05, 9.363899999999953e-05, 9.365199999999962e-05, 9.288899999999878e-05, 9.299999999999933e-05, 9.287499999999921e-05, 9.375000000000008e-05, 9.312499999999946e-05, 9.373600000000051e-05, 9.36529999999991e-05, 9.358300000000125e-05, 9.279200000000126e-05, 9.309700000000032e-05, 9.362499999999996e-05, 9.283399999999997e-05, 9.290299999999835e-05, 9.36940000000018e-05]</msg>
<status status="PASS" starttime="20201117 14:48:06.078" endtime="20201117 14:48:06.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.074" endtime="20201117 14:48:06.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.083" endtime="20201117 14:48:06.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.086" endtime="20201117 14:48:06.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.085" endtime="20201117 14:48:06.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.081" endtime="20201117 14:48:06.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.715" endtime="20201117 14:48:06.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.713" endtime="20201117 14:48:06.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.712" endtime="20201117 14:48:06.107"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.110" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.118" endtime="20201117 14:48:06.137"></status>
</kw>
<msg timestamp="20201117 14:48:06.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.117" endtime="20201117 14:48:06.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.139" endtime="20201117 14:48:06.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.141" endtime="20201117 14:48:06.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.114" endtime="20201117 14:48:06.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.112" endtime="20201117 14:48:06.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.150" endtime="20201117 14:48:06.436"></status>
</kw>
<msg timestamp="20201117 14:48:06.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024622347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024716556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.149" endtime="20201117 14:48:06.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024622347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024716556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.441" endtime="20201117 14:48:06.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.449" endtime="20201117 14:48:06.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.146" endtime="20201117 14:48:06.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.145" endtime="20201117 14:48:06.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.456" level="INFO">${RESULT} = [{'time': 0.024716556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.420900000000135e-05, 'source_diff': 9.420900000000135e-05}, {'time': 0.024812569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:06.453" endtime="20201117 14:48:06.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.469" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:06.457" endtime="20201117 14:48:06.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.474" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.473" endtime="20201117 14:48:06.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.476" level="INFO">VALUE: [9.420900000000135e-05, 9.390199999999987e-05, 9.473599999999804e-05, 9.390199999999987e-05, 9.472199999999847e-05, 9.392999999999901e-05, 9.383299999999803e-05, 9.40139999999999e-05, 9.472200000000194e-05, 9.456899999999921e-05, 9.379199999999879e-05, 9.46530000000001e-05, 9.39720000000012e-05, 9.393099999999849e-05, 9.458399999999825e-05, 9.468099999999924e-05, 9.407000000000165e-05, 9.398700000000024e-05, 9.469499999999881e-05, 9.459700000000182e-05, 9.384700000000107e-05, 9.400000000000033e-05, 9.40139999999999e-05, 9.38330000000015e-05, 9.46530000000001e-05, 9.391699999999892e-05, 9.398600000000076e-05, 9.398600000000076e-05, 9.46530000000001e-05, 9.463900000000053e-05, 9.402799999999947e-05, 9.408299999999828e-05, 9.473599999999804e-05, 9.411100000000089e-05, 9.40139999999999e-05, 9.384799999999707e-05, 9.408400000000122e-05, 9.437500000000071e-05, 9.405599999999861e-05, 9.472200000000194e-05, 9.459700000000182e-05, 9.380499999999889e-05, 9.394399999999858e-05, 9.388899999999978e-05, 9.402799999999947e-05, 9.476399999999718e-05, 9.376399999999965e-05, 9.465200000000062e-05, 9.408299999999828e-05, 9.391700000000239e-05]</msg>
<status status="PASS" starttime="20201117 14:48:06.475" endtime="20201117 14:48:06.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.470" endtime="20201117 14:48:06.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.479" endtime="20201117 14:48:06.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.483" endtime="20201117 14:48:06.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.481" endtime="20201117 14:48:06.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.477" endtime="20201117 14:48:06.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.110" endtime="20201117 14:48:06.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.108" endtime="20201117 14:48:06.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.107" endtime="20201117 14:48:06.511"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.513" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.521" endtime="20201117 14:48:06.540"></status>
</kw>
<msg timestamp="20201117 14:48:06.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.520" endtime="20201117 14:48:06.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.541" endtime="20201117 14:48:06.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.544" endtime="20201117 14:48:06.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.517" endtime="20201117 14:48:06.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.515" endtime="20201117 14:48:06.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.553" endtime="20201117 14:48:06.838"></status>
</kw>
<msg timestamp="20201117 14:48:06.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031851431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031946667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.551" endtime="20201117 14:48:06.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031851431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031946667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.842" endtime="20201117 14:48:06.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.850" endtime="20201117 14:48:06.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.549" endtime="20201117 14:48:06.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.547" endtime="20201117 14:48:06.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.857" level="INFO">${RESULT} = [{'time': 0.031946667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.523599999999854e-05, 'source_diff': 9.523599999999854e-05}, {'time': 0.032043667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:06.854" endtime="20201117 14:48:06.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.871" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:06.858" endtime="20201117 14:48:06.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.876" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.875" endtime="20201117 14:48:06.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.878" level="INFO">VALUE: [9.523599999999854e-05, 9.5027999999997e-05, 9.491699999999992e-05, 9.495899999999863e-05, 9.569499999999981e-05, 9.506899999999624e-05, 9.558299999999631e-05, 9.5027999999997e-05, 9.48059999999959e-05, 9.56660000000012e-05, 9.480499999999642e-05, 9.566699999999373e-05, 9.491699999999992e-05, 9.495799999999915e-05, 9.569400000000033e-05, 9.499999999999786e-05, 9.569499999999981e-05, 9.508400000000222e-05, 9.56530000000011e-05, 9.505599999999614e-05, 9.493000000000001e-05, 9.486200000000111e-05, 9.573599999999904e-05, 9.480499999999642e-05, 9.479099999999685e-05, 9.56530000000011e-05, 9.484699999999513e-05, 9.493000000000001e-05, 9.57079999999999e-05, 9.48330000000025e-05, 9.51530000000006e-05, 9.483299999999556e-05, 9.561099999999545e-05, 9.572199999999947e-05, 9.511100000000189e-05, 9.479199999999632e-05, 9.505599999999614e-05, 9.487500000000121e-05, 9.504200000000351e-05, 9.555599999999664e-05, 9.494399999999958e-05, 9.559700000000282e-05, 9.487500000000121e-05, 9.573599999999904e-05, 9.49859999999983e-05, 9.506899999999624e-05, 9.48609999999947e-05, 9.479199999999632e-05, 9.476399999999718e-05, 9.556899999999674e-05]</msg>
<status status="PASS" starttime="20201117 14:48:06.877" endtime="20201117 14:48:06.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.872" endtime="20201117 14:48:06.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.882" endtime="20201117 14:48:06.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.885" endtime="20201117 14:48:06.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.884" endtime="20201117 14:48:06.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.880" endtime="20201117 14:48:06.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.514" endtime="20201117 14:48:06.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.512" endtime="20201117 14:48:06.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.511" endtime="20201117 14:48:06.906"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.909" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.917" endtime="20201117 14:48:06.935"></status>
</kw>
<msg timestamp="20201117 14:48:06.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.915" endtime="20201117 14:48:06.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.937" endtime="20201117 14:48:06.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.939" endtime="20201117 14:48:06.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.913" endtime="20201117 14:48:06.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.911" endtime="20201117 14:48:06.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.948" endtime="20201117 14:48:07.235"></status>
</kw>
<msg timestamp="20201117 14:48:07.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024171611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024268042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.947" endtime="20201117 14:48:07.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024171611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024268042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.239" endtime="20201117 14:48:07.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.247" endtime="20201117 14:48:07.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.944" endtime="20201117 14:48:07.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.943" endtime="20201117 14:48:07.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.254" level="INFO">${RESULT} = [{'time': 0.024268042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.643100000000099e-05, 'source_diff': 9.643100000000099e-05}, {'time': 0.024366056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:07.251" endtime="20201117 14:48:07.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.267" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:07.255" endtime="20201117 14:48:07.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.272" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.271" endtime="20201117 14:48:07.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.274" level="INFO">VALUE: [9.643100000000099e-05, 9.599999999999886e-05, 9.655499999999817e-05, 9.597199999999972e-05, 9.575000000000208e-05, 9.674999999999961e-05, 9.583300000000003e-05, 9.604100000000157e-05, 9.58469999999996e-05, 9.613900000000203e-05, 9.595799999999668e-05, 9.66669999999982e-05, 9.669500000000081e-05, 9.599999999999886e-05, 9.672200000000047e-05, 9.608399999999975e-05, 9.59859999999993e-05, 9.581999999999993e-05, 9.609799999999932e-05, 9.661099999999992e-05, 9.657000000000068e-05, 9.59859999999993e-05, 9.682000000000093e-05, 9.588899999999831e-05, 9.601399999999843e-05, 9.663900000000253e-05, 9.579199999999732e-05, 9.677799999999875e-05, 9.590300000000135e-05, 9.579199999999732e-05, 9.591699999999745e-05, 9.594500000000006e-05, 9.588899999999831e-05, 9.662500000000296e-05, 9.672299999999995e-05, 9.608399999999975e-05, 9.665299999999863e-05, 9.591600000000144e-05, 9.6721999999997e-05, 9.609699999999985e-05, 9.609699999999985e-05, 9.654100000000207e-05, 9.673600000000004e-05, 9.59859999999993e-05, 9.608399999999975e-05, 9.591700000000092e-05, 9.670799999999743e-05, 9.666700000000167e-05, 9.672200000000047e-05, 9.597199999999972e-05]</msg>
<status status="PASS" starttime="20201117 14:48:07.273" endtime="20201117 14:48:07.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.268" endtime="20201117 14:48:07.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.278" endtime="20201117 14:48:07.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.281" endtime="20201117 14:48:07.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.280" endtime="20201117 14:48:07.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.276" endtime="20201117 14:48:07.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.909" endtime="20201117 14:48:07.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.907" endtime="20201117 14:48:07.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.907" endtime="20201117 14:48:07.302"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.305" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.313" endtime="20201117 14:48:07.332"></status>
</kw>
<msg timestamp="20201117 14:48:07.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.311" endtime="20201117 14:48:07.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.333" endtime="20201117 14:48:07.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.336" endtime="20201117 14:48:07.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.309" endtime="20201117 14:48:07.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.307" endtime="20201117 14:48:07.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.344" endtime="20201117 14:48:07.631"></status>
</kw>
<msg timestamp="20201117 14:48:07.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024071444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024168806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.343" endtime="20201117 14:48:07.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024071444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024168806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.635" endtime="20201117 14:48:07.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.643" endtime="20201117 14:48:07.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.341" endtime="20201117 14:48:07.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.339" endtime="20201117 14:48:07.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.650" level="INFO">${RESULT} = [{'time': 0.024168806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.736200000000014e-05, 'source_diff': 9.736200000000014e-05}, {'time': 0.02426775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:48:07.647" endtime="20201117 14:48:07.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.664" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:07.651" endtime="20201117 14:48:07.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.668" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.667" endtime="20201117 14:48:07.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.671" level="INFO">VALUE: [9.736200000000014e-05, 9.676400000000265e-05, 9.708299999999781e-05, 9.759700000000135e-05, 9.76669999999992e-05, 9.706999999999771e-05, 9.702699999999953e-05, 9.68059999999979e-05, 9.683300000000103e-05, 9.705499999999867e-05, 9.679099999999885e-05, 9.688899999999931e-05, 9.681999999999746e-05, 9.76799999999993e-05, 9.709700000000085e-05, 9.706899999999824e-05, 9.697200000000072e-05, 9.758300000000178e-05, 9.770799999999843e-05, 9.708300000000128e-05, 9.758400000000125e-05, 9.709699999999738e-05, 9.704199999999857e-05, 9.768099999999877e-05, 9.706900000000171e-05, 9.76799999999993e-05, 9.698699999999977e-05, 9.762500000000049e-05, 9.686100000000017e-05, 9.680500000000189e-05, 9.712499999999999e-05, 9.706900000000171e-05, 9.75279999999995e-05, 9.73609999999972e-05, 9.763900000000006e-05, 9.68470000000006e-05, 9.715299999999913e-05, 9.76669999999992e-05, 9.695900000000063e-05, 9.704199999999857e-05, 9.702800000000247e-05, 9.763900000000006e-05, 9.677799999999875e-05, 9.736200000000014e-05, 9.70409999999991e-05, 9.777799999999975e-05, 9.769400000000233e-05, 9.681899999999799e-05, 9.704100000000257e-05, 9.695799999999768e-05]</msg>
<status status="PASS" starttime="20201117 14:48:07.669" endtime="20201117 14:48:07.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.665" endtime="20201117 14:48:07.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.674" endtime="20201117 14:48:07.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.677" endtime="20201117 14:48:07.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.676" endtime="20201117 14:48:07.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.672" endtime="20201117 14:48:07.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.305" endtime="20201117 14:48:07.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.303" endtime="20201117 14:48:07.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.303" endtime="20201117 14:48:07.698"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.700" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.709" endtime="20201117 14:48:07.728"></status>
</kw>
<msg timestamp="20201117 14:48:07.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.707" endtime="20201117 14:48:07.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.730" endtime="20201117 14:48:07.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.732" endtime="20201117 14:48:07.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.705" endtime="20201117 14:48:07.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.702" endtime="20201117 14:48:07.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.741" endtime="20201117 14:48:08.026"></status>
</kw>
<msg timestamp="20201117 14:48:08.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024132347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024230069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.740" endtime="20201117 14:48:08.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024132347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024230069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.031" endtime="20201117 14:48:08.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.039" endtime="20201117 14:48:08.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.737" endtime="20201117 14:48:08.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.735" endtime="20201117 14:48:08.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.046" level="INFO">${RESULT} = [{'time': 0.024230069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.772200000000147e-05, 'source_diff': 9.772200000000147e-05}, {'time': 0.024331097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:08.043" endtime="20201117 14:48:08.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.059" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:08.047" endtime="20201117 14:48:08.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.064" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.063" endtime="20201117 14:48:08.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.066" level="INFO">VALUE: [9.772200000000147e-05, 9.86800000000003e-05, 9.859699999999888e-05, 9.783299999999856e-05, 9.788900000000031e-05, 9.793099999999902e-05, 9.786100000000117e-05, 9.858299999999931e-05, 9.791699999999945e-05, 9.808399999999828e-05, 9.79860000000013e-05, 9.800000000000086e-05, 9.858400000000225e-05, 9.866600000000073e-05, 9.795900000000163e-05, 9.798700000000077e-05, 9.863899999999759e-05, 9.798599999999782e-05, 9.787500000000074e-05, 9.797200000000172e-05, 9.812499999999752e-05, 9.805499999999967e-05, 9.791699999999945e-05, 9.782000000000193e-05, 9.794399999999912e-05, 9.791699999999945e-05, 9.858399999999878e-05, 9.859699999999888e-05, 9.809699999999838e-05, 9.793100000000249e-05, 9.791599999999998e-05, 9.869399999999987e-05, 9.792999999999955e-05, 9.876399999999771e-05, 9.86800000000003e-05, 9.858299999999931e-05, 9.859700000000235e-05, 9.8721999999999e-05, 9.791599999999998e-05, 9.807000000000218e-05, 9.773599999999757e-05, 9.777800000000322e-05, 9.868099999999977e-05, 9.811100000000142e-05, 9.79860000000013e-05, 9.812499999999752e-05, 9.812500000000099e-05, 9.808400000000175e-05, 9.866600000000073e-05, 9.851400000000093e-05]</msg>
<status status="PASS" starttime="20201117 14:48:08.065" endtime="20201117 14:48:08.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.060" endtime="20201117 14:48:08.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.069" endtime="20201117 14:48:08.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.073" endtime="20201117 14:48:08.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.071" endtime="20201117 14:48:08.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.068" endtime="20201117 14:48:08.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.701" endtime="20201117 14:48:08.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.699" endtime="20201117 14:48:08.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.699" endtime="20201117 14:48:08.094"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.096" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.104" endtime="20201117 14:48:08.124"></status>
</kw>
<msg timestamp="20201117 14:48:08.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.103" endtime="20201117 14:48:08.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.125" endtime="20201117 14:48:08.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.128" endtime="20201117 14:48:08.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.100" endtime="20201117 14:48:08.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.098" endtime="20201117 14:48:08.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.137" endtime="20201117 14:48:08.422"></status>
</kw>
<msg timestamp="20201117 14:48:08.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024902111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025001208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.135" endtime="20201117 14:48:08.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024902111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025001208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.426" endtime="20201117 14:48:08.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.435" endtime="20201117 14:48:08.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.133" endtime="20201117 14:48:08.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.131" endtime="20201117 14:48:08.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.441" level="INFO">${RESULT} = [{'time': 0.025001208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.909699999999938e-05, 'source_diff': 9.909699999999938e-05}, {'time': 0.025102208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:08.438" endtime="20201117 14:48:08.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.456" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:08.442" endtime="20201117 14:48:08.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.460" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.459" endtime="20201117 14:48:08.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.463" level="INFO">VALUE: [9.909699999999938e-05, 9.90410000000011e-05, 9.913900000000156e-05, 9.909699999999938e-05, 9.887499999999827e-05, 9.908399999999928e-05, 9.888899999999784e-05, 9.968100000000077e-05, 9.965300000000163e-05, 9.900000000000186e-05, 9.88470000000026e-05, 9.962499999999902e-05, 9.891700000000045e-05, 9.874999999999814e-05, 9.904200000000057e-05, 9.963900000000206e-05, 9.965299999999816e-05, 9.901299999999849e-05, 9.909699999999938e-05, 9.879100000000085e-05, 9.891700000000045e-05, 9.887499999999827e-05, 9.884699999999913e-05, 9.96800000000013e-05, 9.888900000000131e-05, 9.959699999999988e-05, 9.957000000000021e-05, 9.963900000000206e-05, 9.962500000000249e-05, 9.893100000000002e-05, 9.969400000000087e-05, 9.876400000000118e-05, 9.911200000000189e-05, 9.879100000000085e-05, 9.901300000000196e-05, 9.965199999999869e-05, 9.966699999999773e-05, 9.888900000000131e-05, 9.876400000000118e-05, 9.908299999999981e-05, 9.881899999999999e-05, 9.900000000000186e-05, 9.89860000000023e-05, 9.887500000000174e-05, 9.873600000000204e-05, 9.907000000000318e-05, 9.911100000000242e-05, 9.962499999999902e-05, 9.909699999999938e-05, 9.879200000000032e-05]</msg>
<status status="PASS" starttime="20201117 14:48:08.462" endtime="20201117 14:48:08.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.457" endtime="20201117 14:48:08.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.467" endtime="20201117 14:48:08.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.470" endtime="20201117 14:48:08.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.469" endtime="20201117 14:48:08.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.465" endtime="20201117 14:48:08.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.097" endtime="20201117 14:48:08.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.095" endtime="20201117 14:48:08.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.094" endtime="20201117 14:48:08.492"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.494" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.502" endtime="20201117 14:48:08.521"></status>
</kw>
<msg timestamp="20201117 14:48:08.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.501" endtime="20201117 14:48:08.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.523" endtime="20201117 14:48:08.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.526" endtime="20201117 14:48:08.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.498" endtime="20201117 14:48:08.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.496" endtime="20201117 14:48:08.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.535" endtime="20201117 14:48:08.819"></status>
</kw>
<msg timestamp="20201117 14:48:08.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024386653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024487361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.533" endtime="20201117 14:48:08.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024386653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024487361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.823" endtime="20201117 14:48:08.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.831" endtime="20201117 14:48:08.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.531" endtime="20201117 14:48:08.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.529" endtime="20201117 14:48:08.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.837" level="INFO">${RESULT} = [{'time': 0.024487361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010070799999999797, 'source_diff': 0.00010070799999999797}, {'time': 0.024589375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:08.834" endtime="20201117 14:48:08.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.850" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:08.838" endtime="20201117 14:48:08.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.855" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.854" endtime="20201117 14:48:08.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.857" level="INFO">VALUE: [0.00010070799999999797, 9.99999999999994e-05, 9.986100000000317e-05, 0.00010063899999999959, 9.988900000000231e-05, 0.00010001399999999896, 0.00010073600000000058, 0.0001006809999999983, 0.00010005600000000114, 0.00010059700000000088, 9.98609999999997e-05, 0.00010008300000000081, 0.00010066600000000273, 0.00010059700000000088, 0.00010056900000000174, 9.99999999999994e-05, 0.00010063899999999959, 0.00010063899999999959, 9.995799999999722e-05, 0.0001006670000000022, 9.98060000000009e-05, 0.00010059700000000088, 9.977800000000175e-05, 0.0001006809999999983, 9.993100000000102e-05, 9.997299999999973e-05, 9.998599999999983e-05, 9.977800000000175e-05, 0.00010006899999999777, 9.994400000000112e-05, 0.00010073600000000058, 9.997299999999973e-05, 0.00010056899999999827, 0.00010063899999999959, 0.00010066699999999873, 0.00010063899999999959, 9.981900000000099e-05, 0.000100028000000002, 9.991699999999798e-05, 0.0001006670000000022, 0.00010058400000000078, 0.00010059800000000035, 9.99999999999994e-05, 0.000100028000000002, 9.988799999999937e-05, 0.00010051299999999999, 0.00010007000000000071, 9.981900000000099e-05, 0.000100722000000001, 0.00010002799999999853]</msg>
<status status="PASS" starttime="20201117 14:48:08.856" endtime="20201117 14:48:08.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.851" endtime="20201117 14:48:08.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.861" endtime="20201117 14:48:08.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.864" endtime="20201117 14:48:08.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.862" endtime="20201117 14:48:08.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.859" endtime="20201117 14:48:08.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.495" endtime="20201117 14:48:08.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.493" endtime="20201117 14:48:08.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.492" endtime="20201117 14:48:08.885"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.887" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.896" endtime="20201117 14:48:08.915"></status>
</kw>
<msg timestamp="20201117 14:48:08.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.894" endtime="20201117 14:48:08.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.916" endtime="20201117 14:48:08.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.919" endtime="20201117 14:48:08.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.891" endtime="20201117 14:48:08.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.889" endtime="20201117 14:48:08.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.928" endtime="20201117 14:48:09.214"></status>
</kw>
<msg timestamp="20201117 14:48:09.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024475944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024577667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.926" endtime="20201117 14:48:09.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024475944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024577667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.218" endtime="20201117 14:48:09.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.226" endtime="20201117 14:48:09.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.924" endtime="20201117 14:48:09.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.922" endtime="20201117 14:48:09.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.232" level="INFO">${RESULT} = [{'time': 0.024577667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010172300000000148, 'source_diff': 0.00010172300000000148}, {'time': 0.024681667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:09.229" endtime="20201117 14:48:09.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.245" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:09.233" endtime="20201117 14:48:09.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.250" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.249" endtime="20201117 14:48:09.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.252" level="INFO">VALUE: [0.00010172300000000148, 0.00010169500000000234, 0.00010088899999999984, 0.0001017359999999981, 0.00010083299999999809, 0.00010098600000000083, 0.00010176399999999725, 0.00010094399999999865, 0.00010116699999999923, 0.00010077799999999928, 0.00010102799999999953, 0.00010112500000000052, 0.00010165300000000016, 0.0001016809999999993, 0.0001010419999999991, 0.00010166699999999973, 0.00010095800000000169, 0.00010159800000000135, 0.00010173600000000158, 0.00010137500000000077, 0.00010174999999999768, 0.00010079099999999938, 0.00010084700000000113, 0.00010102700000000006, 0.00010173600000000158, 0.0001010000000000004, 0.00010098599999999736, 0.00010094400000000212, 0.00010162500000000102, 0.00010080499999999895, 0.00010108400000000128, 0.00010155600000000264, 0.000100819999999998, 0.00010084700000000113, 0.00010104200000000257, 0.00010158400000000178, 0.00010169499999999887, 0.000100819999999998, 0.0001011939999999989, 0.00010102700000000006, 0.00010083299999999809, 0.0001010410000000031, 0.00010156900000000274, 0.00010156900000000274, 0.00010165300000000016, 0.0001010419999999991, 0.00010087500000000027, 0.00010105599999999867, 0.00010095899999999769, 0.00010105600000000214]</msg>
<status status="PASS" starttime="20201117 14:48:09.251" endtime="20201117 14:48:09.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.246" endtime="20201117 14:48:09.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.255" endtime="20201117 14:48:09.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.259" endtime="20201117 14:48:09.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.257" endtime="20201117 14:48:09.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.254" endtime="20201117 14:48:09.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.888" endtime="20201117 14:48:09.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.886" endtime="20201117 14:48:09.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.885" endtime="20201117 14:48:09.280"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.283" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.291" endtime="20201117 14:48:09.310"></status>
</kw>
<msg timestamp="20201117 14:48:09.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.289" endtime="20201117 14:48:09.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.311" endtime="20201117 14:48:09.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.314" endtime="20201117 14:48:09.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.287" endtime="20201117 14:48:09.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.285" endtime="20201117 14:48:09.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.323" endtime="20201117 14:48:09.609"></status>
</kw>
<msg timestamp="20201117 14:48:09.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024639167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024741792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.321" endtime="20201117 14:48:09.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024639167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024741792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.613" endtime="20201117 14:48:09.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.621" endtime="20201117 14:48:09.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.319" endtime="20201117 14:48:09.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.317" endtime="20201117 14:48:09.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.628" level="INFO">${RESULT} = [{'time': 0.024741792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010262499999999855, 'source_diff': 0.00010262499999999855}, {'time': 0.024845806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:09.625" endtime="20201117 14:48:09.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.641" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:09.629" endtime="20201117 14:48:09.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.645" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.644" endtime="20201117 14:48:09.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.648" level="INFO">VALUE: [0.00010262499999999855, 0.00010212500000000152, 0.00010202800000000053, 0.00010252699999999809, 0.00010195799999999922, 0.0001020420000000001, 0.00010180499999999995, 0.0001017359999999981, 0.00010205599999999967, 0.00010238900000000134, 0.00010197199999999879, 0.00010206899999999977, 0.00010259799999999888, 0.00010273600000000258, 0.00010184700000000213, 0.00010273700000000205, 0.00010184699999999866, 0.00010190300000000041, 0.00010179199999999985, 0.00010261199999999845, 0.00010193000000000008, 0.00010172199999999854, 0.00010272199999999954, 0.00010202799999999707, 0.00010261099999999898, 0.00010272199999999954, 0.00010256900000000027, 0.00010272199999999954, 0.000101819999999999, 0.00010256999999999974, 0.0001020420000000001, 0.00010177800000000028, 0.00010179199999999985, 0.00010179199999999985, 0.00010265300000000116, 0.00010201300000000149, 0.00010274999999999868, 0.00010180499999999995, 0.00010176400000000071, 0.00010190200000000094, 0.00010268000000000083, 0.00010201400000000097, 0.00010198600000000183, 0.00010194399999999965, 0.00010266700000000073, 0.00010187500000000127, 0.00010194500000000259, 0.00010266700000000073, 0.00010179199999999985, 0.00010193099999999955]</msg>
<status status="PASS" starttime="20201117 14:48:09.646" endtime="20201117 14:48:09.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.642" endtime="20201117 14:48:09.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.651" endtime="20201117 14:48:09.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.655" endtime="20201117 14:48:09.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.653" endtime="20201117 14:48:09.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.650" endtime="20201117 14:48:09.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.283" endtime="20201117 14:48:09.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.281" endtime="20201117 14:48:09.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.281" endtime="20201117 14:48:09.676"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.678" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.686" endtime="20201117 14:48:09.707"></status>
</kw>
<msg timestamp="20201117 14:48:09.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.685" endtime="20201117 14:48:09.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.708" endtime="20201117 14:48:09.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.711" endtime="20201117 14:48:09.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.682" endtime="20201117 14:48:09.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.680" endtime="20201117 14:48:09.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.720" endtime="20201117 14:48:10.005"></status>
</kw>
<msg timestamp="20201117 14:48:10.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025133361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025236264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.718" endtime="20201117 14:48:10.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025133361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025236264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.009" endtime="20201117 14:48:10.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.017" endtime="20201117 14:48:10.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.716" endtime="20201117 14:48:10.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.714" endtime="20201117 14:48:10.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.023" level="INFO">${RESULT} = [{'time': 0.025236264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010290300000000141, 'source_diff': 0.00010290300000000141}, {'time': 0.025342278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:10.020" endtime="20201117 14:48:10.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.037" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:10.024" endtime="20201117 14:48:10.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.042" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.041" endtime="20201117 14:48:10.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.045" level="INFO">VALUE: [0.00010290300000000141, 0.00010372200000000054, 0.00010302800000000154, 0.0001030420000000011, 0.00010308400000000328, 0.00010279200000000085, 0.00010359700000000041, 0.00010305600000000067, 0.00010366599999999879, 0.00010295800000000022, 0.00010372199999999707, 0.00010308300000000034, 0.00010363899999999912, 0.0001030139999999985, 0.00010291700000000098, 0.00010279199999999739, 0.00010301400000000197, 0.00010361199999999945, 0.0001030139999999985, 0.00010361099999999998, 0.00010286200000000217, 0.00010311099999999948, 0.00010368000000000183, 0.0001028879999999989, 0.00010356900000000127, 0.00010298599999999936, 0.00010280500000000095, 0.00010276399999999825, 0.00010283300000000009, 0.00010291700000000098, 0.00010358299999999737, 0.00010313900000000209, 0.00010295800000000022, 0.00010277800000000128, 0.00010277800000000128, 0.00010359700000000041, 0.00010302800000000154, 0.00010365299999999869, 0.00010294400000000065, 0.00010366699999999826, 0.00010295800000000022, 0.0001028749999999988, 0.0001036940000000014, 0.00010363899999999912, 0.00010372200000000054, 0.00010281900000000052, 0.00010370800000000097, 0.0001030139999999985, 0.00010337500000000277, 0.00010297200000000326]</msg>
<status status="PASS" starttime="20201117 14:48:10.043" endtime="20201117 14:48:10.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.038" endtime="20201117 14:48:10.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.048" endtime="20201117 14:48:10.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.051" endtime="20201117 14:48:10.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.050" endtime="20201117 14:48:10.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.046" endtime="20201117 14:48:10.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.679" endtime="20201117 14:48:10.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.677" endtime="20201117 14:48:10.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.676" endtime="20201117 14:48:10.072"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.075" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.083" endtime="20201117 14:48:10.102"></status>
</kw>
<msg timestamp="20201117 14:48:10.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.081" endtime="20201117 14:48:10.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.104" endtime="20201117 14:48:10.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.106" endtime="20201117 14:48:10.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.079" endtime="20201117 14:48:10.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.077" endtime="20201117 14:48:10.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.115" endtime="20201117 14:48:10.401"></status>
</kw>
<msg timestamp="20201117 14:48:10.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023967236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024071042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.114" endtime="20201117 14:48:10.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023967236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024071042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.405" endtime="20201117 14:48:10.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.413" endtime="20201117 14:48:10.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.111" endtime="20201117 14:48:10.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.109" endtime="20201117 14:48:10.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.420" level="INFO">${RESULT} = [{'time': 0.024071042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010380600000000142, 'source_diff': 0.00010380600000000142}, {'time': 0.024178042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:10.416" endtime="20201117 14:48:10.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.433" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:10.421" endtime="20201117 14:48:10.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.437" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.436" endtime="20201117 14:48:10.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.440" level="INFO">VALUE: [0.00010380600000000142, 0.00010457000000000174, 0.00010466699999999926, 0.00010411100000000048, 0.00010394399999999818, 0.00010472199999999807, 0.0001046940000000024, 0.00010380499999999848, 0.00010394400000000165, 0.00010391699999999851, 0.00010380600000000142, 0.00010395800000000122, 0.00010465299999999969, 0.0001047360000000011, 0.00010407000000000124, 0.00010408400000000081, 0.00010475000000000068, 0.00010450000000000043, 0.00010411199999999995, 0.00010404099999999916, 0.00010466599999999979, 0.00010409700000000091, 0.0001047360000000011, 0.00010388899999999937, 0.00010411100000000048, 0.00010393100000000155, 0.00010380500000000195, 0.0001045559999999987, 0.0001038749999999998, 0.00010462500000000055, 0.00010394499999999765, 0.0001040559999999982, 0.00010475000000000068, 0.00010473599999999764, 0.00010393000000000208, 0.00010467999999999936, 0.00010437499999999683, 0.00010409700000000091, 0.00010467999999999936, 0.00010395800000000122, 0.00010468099999999883, 0.00010467999999999936, 0.00010412500000000005, 0.00010395799999999775, 0.00010388899999999937, 0.00010377799999999882, 0.00010457000000000174, 0.00010457000000000174, 0.00010479099999999991, 0.00010468099999999883]</msg>
<status status="PASS" starttime="20201117 14:48:10.439" endtime="20201117 14:48:10.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.434" endtime="20201117 14:48:10.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.443" endtime="20201117 14:48:10.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.446" endtime="20201117 14:48:10.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.445" endtime="20201117 14:48:10.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.441" endtime="20201117 14:48:10.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.075" endtime="20201117 14:48:10.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.074" endtime="20201117 14:48:10.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.073" endtime="20201117 14:48:10.467"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.470" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.478" endtime="20201117 14:48:10.498"></status>
</kw>
<msg timestamp="20201117 14:48:10.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.476" endtime="20201117 14:48:10.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.500" endtime="20201117 14:48:10.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.502" endtime="20201117 14:48:10.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.474" endtime="20201117 14:48:10.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.472" endtime="20201117 14:48:10.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.512" endtime="20201117 14:48:10.798"></status>
</kw>
<msg timestamp="20201117 14:48:10.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024501667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024607097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.510" endtime="20201117 14:48:10.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024501667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024607097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.802" endtime="20201117 14:48:10.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.810" endtime="20201117 14:48:10.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.508" endtime="20201117 14:48:10.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.506" endtime="20201117 14:48:10.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.817" level="INFO">${RESULT} = [{'time': 0.024607097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010543000000000011, 'source_diff': 0.00010543000000000011}, {'time': 0.024715139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:10.813" endtime="20201117 14:48:10.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.830" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:10.818" endtime="20201117 14:48:10.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.834" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.833" endtime="20201117 14:48:10.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.836" level="INFO">VALUE: [0.00010543000000000011, 0.00010572199999999907, 0.00010492999999999961, 0.00010558299999999937, 0.00010562499999999808, 0.00010511100000000148, 0.0001048750000000008, 0.00010573599999999864, 0.00010493099999999908, 0.00010572199999999907, 0.00010480599999999896, 0.00010483400000000156, 0.00010500000000000093, 0.0001048880000000009, 0.00010490200000000047, 0.00010494399999999918, 0.00010504100000000016, 0.00010576399999999778, 0.00010483300000000209, 0.0001057079999999995, 0.00010556900000000327, 0.00010506999999999878, 0.00010501399999999703, 0.00010568099999999983, 0.00010477799999999982, 0.00010563900000000112, 0.00010561099999999851, 0.00010552800000000057, 0.00010563800000000165, 0.00010508399999999835, 0.00010476300000000077, 0.00010565199999999775, 0.00010511100000000148, 0.0001055689999999998, 0.00010488900000000037, 0.00010568000000000036, 0.00010562500000000155, 0.00010494400000000265, 0.00010575000000000168, 0.00010488900000000037, 0.00010497299999999779, 0.00010483400000000156, 0.0001048750000000008, 0.00010505600000000268, 0.00010508400000000181, 0.0001057079999999995, 0.0001050140000000005, 0.00010563900000000112, 0.00010494399999999918, 0.00010511100000000148]</msg>
<status status="PASS" starttime="20201117 14:48:10.835" endtime="20201117 14:48:10.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.830" endtime="20201117 14:48:10.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.840" endtime="20201117 14:48:10.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.843" endtime="20201117 14:48:10.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.841" endtime="20201117 14:48:10.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.838" endtime="20201117 14:48:10.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.470" endtime="20201117 14:48:10.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.469" endtime="20201117 14:48:10.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.468" endtime="20201117 14:48:10.864"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.866" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.874" endtime="20201117 14:48:10.893"></status>
</kw>
<msg timestamp="20201117 14:48:10.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.873" endtime="20201117 14:48:10.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.895" endtime="20201117 14:48:10.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.897" endtime="20201117 14:48:10.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.870" endtime="20201117 14:48:10.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.868" endtime="20201117 14:48:10.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.907" endtime="20201117 14:48:11.193"></status>
</kw>
<msg timestamp="20201117 14:48:11.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024294111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024400472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.905" endtime="20201117 14:48:11.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024294111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024400472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.197" endtime="20201117 14:48:11.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.205" endtime="20201117 14:48:11.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.902" endtime="20201117 14:48:11.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.901" endtime="20201117 14:48:11.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.212" level="INFO">${RESULT} = [{'time': 0.024400472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010636099999999926, 'source_diff': 0.00010636099999999926}, {'time': 0.024508472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:11.208" endtime="20201117 14:48:11.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.224" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:11.213" endtime="20201117 14:48:11.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.229" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.228" endtime="20201117 14:48:11.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.231" level="INFO">VALUE: [0.00010636099999999926, 0.0001057499999999982, 0.00010640299999999797, 0.00010677800000000182, 0.00010579200000000039, 0.00010598600000000236, 0.00010598700000000183, 0.00010659799999999942, 0.00010598599999999889, 0.00010591700000000051, 0.00010591700000000051, 0.00010658399999999985, 0.00010584699999999919, 0.00010601399999999803, 0.00010658300000000037, 0.00010661100000000298, 0.00010594400000000018, 0.00010672299999999954, 0.00010666700000000126, 0.00010637499999999883, 0.00010655599999999724, 0.00010583400000000256, 0.00010662499999999908, 0.0001058339999999991, 0.0001060560000000002, 0.00010590300000000094, 0.00010658300000000037, 0.00010655500000000123, 0.00010587499999999833, 0.0001067080000000005, 0.00010665299999999822, 0.00010663899999999865, 0.00010598599999999889, 0.00010661100000000298, 0.00010579200000000039, 0.00010577799999999735, 0.00010584699999999919, 0.0001058889999999979, 0.00010659799999999942, 0.0001067499999999992, 0.00010608400000000281, 0.0001058889999999979, 0.00010673599999999964, 0.00010580500000000048, 0.00010676400000000225, 0.00010595800000000322, 0.00010654099999999819, 0.00010583400000000256, 0.00010611099999999901, 0.00010586099999999876]</msg>
<status status="PASS" starttime="20201117 14:48:11.230" endtime="20201117 14:48:11.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.225" endtime="20201117 14:48:11.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.234" endtime="20201117 14:48:11.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.238" endtime="20201117 14:48:11.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.236" endtime="20201117 14:48:11.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.233" endtime="20201117 14:48:11.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.867" endtime="20201117 14:48:11.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.865" endtime="20201117 14:48:11.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.864" endtime="20201117 14:48:11.259"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.261" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.269" endtime="20201117 14:48:11.290"></status>
</kw>
<msg timestamp="20201117 14:48:11.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.268" endtime="20201117 14:48:11.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.291" endtime="20201117 14:48:11.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.294" endtime="20201117 14:48:11.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.265" endtime="20201117 14:48:11.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.263" endtime="20201117 14:48:11.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.303" endtime="20201117 14:48:11.588"></status>
</kw>
<msg timestamp="20201117 14:48:11.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024897667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025004542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.302" endtime="20201117 14:48:11.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024897667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025004542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.592" endtime="20201117 14:48:11.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.600" endtime="20201117 14:48:11.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.299" endtime="20201117 14:48:11.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.297" endtime="20201117 14:48:11.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.607" level="INFO">${RESULT} = [{'time': 0.025004542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001068750000000028, 'source_diff': 0.0001068750000000028}, {'time': 0.025113569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:11.604" endtime="20201117 14:48:11.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.621" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:11.608" endtime="20201117 14:48:11.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.626" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.625" endtime="20201117 14:48:11.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.628" level="INFO">VALUE: [0.0001068750000000028, 0.00010681899999999758, 0.0001077630000000003, 0.00010763800000000018, 0.00010704100000000216, 0.00010769400000000193, 0.00010736100000000026, 0.00010699999999999946, 0.00010691700000000151, 0.00010709700000000044, 0.00010765299999999922, 0.0001070560000000012, 0.00010687499999999933, 0.00010708400000000035, 0.00010762500000000008, 0.00010677800000000182, 0.00010694400000000118, 0.00010713799999999968, 0.00010770799999999803, 0.00010681900000000105, 0.00010683300000000062, 0.00010705499999999826, 0.00010715299999999872, 0.00010695800000000075, 0.00010769399999999846, 0.00010776399999999978, 0.00010768100000000183, 0.00010761100000000051, 0.00010761100000000051, 0.00010704199999999817, 0.00010699999999999946, 0.00010704200000000164, 0.00010690299999999847, 0.00010699999999999946, 0.00010761100000000051, 0.0001077219999999976, 0.0001077500000000002, 0.00010683299999999715, 0.00010761100000000051, 0.00010698599999999989, 0.00010684700000000019, 0.00010738900000000287, 0.0001070829999999974, 0.00010763899999999965, 0.00010704199999999817, 0.00010693100000000108, 0.00010762500000000008, 0.00010768100000000183, 0.0001077500000000002, 0.00010762500000000008]</msg>
<status status="PASS" starttime="20201117 14:48:11.627" endtime="20201117 14:48:11.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.622" endtime="20201117 14:48:11.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.631" endtime="20201117 14:48:11.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.634" endtime="20201117 14:48:11.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.633" endtime="20201117 14:48:11.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.629" endtime="20201117 14:48:11.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.262" endtime="20201117 14:48:11.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.260" endtime="20201117 14:48:11.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.259" endtime="20201117 14:48:11.656"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.658" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.670" endtime="20201117 14:48:11.689"></status>
</kw>
<msg timestamp="20201117 14:48:11.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.669" endtime="20201117 14:48:11.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.691" endtime="20201117 14:48:11.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.693" endtime="20201117 14:48:11.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.666" endtime="20201117 14:48:11.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.660" endtime="20201117 14:48:11.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.702" endtime="20201117 14:48:11.988"></status>
</kw>
<msg timestamp="20201117 14:48:11.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028465333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02857375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:11.701" endtime="20201117 14:48:11.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028465333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02857375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:11.992" endtime="20201117 14:48:11.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.000" endtime="20201117 14:48:12.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.698" endtime="20201117 14:48:12.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.696" endtime="20201117 14:48:12.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.006" level="INFO">${RESULT} = [{'time': 0.02857375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010841699999999954, 'source_diff': 0.00010841699999999954}, {'time': 0.028683764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:48:12.003" endtime="20201117 14:48:12.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.019" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:12.007" endtime="20201117 14:48:12.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.024" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.023" endtime="20201117 14:48:12.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.026" level="INFO">VALUE: [0.00010841699999999954, 0.0001080279999999996, 0.00010791699999999904, 0.00010858399999999838, 0.00010784700000000119, 0.00010805599999999874, 0.00010787500000000033, 0.00010807000000000178, 0.00010801300000000055, 0.0001080829999999984, 0.00010870799999999903, 0.00010865199999999728, 0.00010876400000000078, 0.00010780599999999849, 0.00010813800000000068, 0.0001085829999999989, 0.00010809700000000144, 0.00010777799999999935, 0.00010800000000000046, 0.00010779199999999892, 0.00010809800000000092, 0.00010798599999999742, 0.0001080279999999996, 0.0001080279999999996, 0.00010781900000000205, 0.00010792999999999567, 0.00010805500000000273, 0.00010862500000000108, 0.00010791599999999957, 0.00010799999999999699, 0.00010805599999999527, 0.0001080419999999957, 0.00010815299999999972, 0.00010782000000000153, 0.00010795899999999775, 0.00010859700000000194, 0.0001085560000000027, 0.00010779199999999545, 0.00010859800000000142, 0.00010779099999999597, 0.00010834700000000169, 0.00010805500000000273, 0.00010859700000000194, 0.00010865300000000022, 0.00010779200000000239, 0.00010791699999999904, 0.00010866699999999979, 0.0001080419999999957, 0.00010809700000000144, 0.00010804200000000264]</msg>
<status status="PASS" starttime="20201117 14:48:12.025" endtime="20201117 14:48:12.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.020" endtime="20201117 14:48:12.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.029" endtime="20201117 14:48:12.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.033" endtime="20201117 14:48:12.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.031" endtime="20201117 14:48:12.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.028" endtime="20201117 14:48:12.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.659" endtime="20201117 14:48:12.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.657" endtime="20201117 14:48:12.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.656" endtime="20201117 14:48:12.054"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.057" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.065" endtime="20201117 14:48:12.084"></status>
</kw>
<msg timestamp="20201117 14:48:12.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.063" endtime="20201117 14:48:12.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.086" endtime="20201117 14:48:12.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.088" endtime="20201117 14:48:12.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.061" endtime="20201117 14:48:12.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.059" endtime="20201117 14:48:12.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.097" endtime="20201117 14:48:12.383"></status>
</kw>
<msg timestamp="20201117 14:48:12.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024096347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024205194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.096" endtime="20201117 14:48:12.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024096347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024205194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.387" endtime="20201117 14:48:12.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.395" endtime="20201117 14:48:12.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.093" endtime="20201117 14:48:12.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.092" endtime="20201117 14:48:12.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.402" level="INFO">${RESULT} = [{'time': 0.024205194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010884699999999872, 'source_diff': 0.00010884699999999872}, {'time': 0.024316208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:12.399" endtime="20201117 14:48:12.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.415" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:12.403" endtime="20201117 14:48:12.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.419" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.418" endtime="20201117 14:48:12.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.422" level="INFO">VALUE: [0.00010884699999999872, 0.00010937499999999836, 0.00010901399999999756, 0.00010955500000000076, 0.00010965300000000122, 0.00010956900000000033, 0.0001090699999999993, 0.00010959699999999947, 0.00010959699999999947, 0.00010959699999999947, 0.00010965300000000122, 0.00010961099999999904, 0.00010887500000000133, 0.00010898600000000189, 0.00010875000000000121, 0.000108902000000001, 0.00010909699999999897, 0.00010901400000000103, 0.00010879100000000044, 0.00010881899999999958, 0.00010973599999999917, 0.00010870799999999903, 0.00010880599999999949, 0.00010976399999999831, 0.00010899999999999799, 0.00010968100000000036, 0.00010973600000000264, 0.00010911100000000201, 0.00010894399999999971, 0.00010884700000000219, 0.00010895799999999928, 0.00010877700000000087, 0.00010906899999999983, 0.00010965200000000175, 0.00010972200000000307, 0.00010906899999999983, 0.00010911100000000201, 0.00010884700000000219, 0.00010962500000000208, 0.00010974999999999874, 0.00010909699999999897, 0.00010898599999999842, 0.0001095699999999998, 0.00010874999999999774, 0.00010899999999999799, 0.00010961199999999852, 0.00010969400000000046, 0.00010961100000000251, 0.00010966599999999785, 0.0001095829999999999]</msg>
<status status="PASS" starttime="20201117 14:48:12.420" endtime="20201117 14:48:12.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.416" endtime="20201117 14:48:12.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.425" endtime="20201117 14:48:12.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.429" endtime="20201117 14:48:12.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.427" endtime="20201117 14:48:12.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.424" endtime="20201117 14:48:12.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.057" endtime="20201117 14:48:12.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.056" endtime="20201117 14:48:12.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.055" endtime="20201117 14:48:12.450"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.452" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.460" endtime="20201117 14:48:12.480"></status>
</kw>
<msg timestamp="20201117 14:48:12.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.459" endtime="20201117 14:48:12.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.481" endtime="20201117 14:48:12.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.484" endtime="20201117 14:48:12.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.456" endtime="20201117 14:48:12.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.454" endtime="20201117 14:48:12.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.493" endtime="20201117 14:48:12.778"></status>
</kw>
<msg timestamp="20201117 14:48:12.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024113431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024223472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.491" endtime="20201117 14:48:12.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024113431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024223472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.782" endtime="20201117 14:48:12.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.790" endtime="20201117 14:48:12.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.488" endtime="20201117 14:48:12.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.487" endtime="20201117 14:48:12.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.797" level="INFO">${RESULT} = [{'time': 0.024223472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011004099999999822, 'source_diff': 0.00011004099999999822}, {'time': 0.024336417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:12.794" endtime="20201117 14:48:12.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.810" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:12.798" endtime="20201117 14:48:12.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.814" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.813" endtime="20201117 14:48:12.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.817" level="INFO">VALUE: [0.00011004099999999822, 0.00011066699999999832, 0.00010988899999999843, 0.0001098890000000019, 0.00010977800000000135, 0.00011009699999999997, 0.00011055500000000176, 0.00010986099999999929, 0.00011056900000000133, 0.00011000000000000246, 0.0001100280000000016, 0.000109902999999998, 0.00011002799999999813, 0.0001105830000000009, 0.00010983300000000015, 0.00010976399999999831, 0.00011011099999999954, 0.0001107090000000005, 0.0001100419999999977, 0.0001107090000000005, 0.00010977800000000135, 0.00011068000000000189, 0.00011058299999999743, 0.00011002699999999865, 0.00010999999999999899, 0.00011036099999999979, 0.00011006900000000083, 0.00010980600000000049, 0.00011037499999999936, 0.00010988899999999843, 0.00010991700000000104, 0.0001100280000000016, 0.00010987499999999886, 0.0001098479999999992, 0.00011008399999999988, 0.00011074999999999974, 0.00010988899999999843, 0.00011001400000000203, 0.00010999999999999899, 0.00010997200000000332, 0.0001100830000000004, 0.00010983300000000015, 0.00010979200000000092, 0.0001107090000000005, 0.0001105830000000009, 0.0001105700000000008, 0.00010987499999999886, 0.00011059799999999995, 0.00010980599999999702, 0.0001098479999999992]</msg>
<status status="PASS" starttime="20201117 14:48:12.815" endtime="20201117 14:48:12.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.811" endtime="20201117 14:48:12.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.820" endtime="20201117 14:48:12.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.824" endtime="20201117 14:48:12.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.822" endtime="20201117 14:48:12.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.819" endtime="20201117 14:48:12.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.453" endtime="20201117 14:48:12.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.451" endtime="20201117 14:48:12.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.450" endtime="20201117 14:48:12.845"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.847" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.855" endtime="20201117 14:48:12.876"></status>
</kw>
<msg timestamp="20201117 14:48:12.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.854" endtime="20201117 14:48:12.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.878" endtime="20201117 14:48:12.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.880" endtime="20201117 14:48:12.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.851" endtime="20201117 14:48:12.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.849" endtime="20201117 14:48:12.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.889" endtime="20201117 14:48:13.175"></status>
</kw>
<msg timestamp="20201117 14:48:13.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02537125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025482889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:12.888" endtime="20201117 14:48:13.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02537125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025482889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:13.179" endtime="20201117 14:48:13.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.187" endtime="20201117 14:48:13.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.885" endtime="20201117 14:48:13.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.883" endtime="20201117 14:48:13.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:13.194" level="INFO">${RESULT} = [{'time': 0.025482889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011163900000000018, 'source_diff': 0.00011163900000000018}, {'time': 0.025596903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:13.191" endtime="20201117 14:48:13.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:13.208" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:13.195" endtime="20201117 14:48:13.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.213" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:48:13.212" endtime="20201117 14:48:13.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.215" level="INFO">VALUE: [0.00011163900000000018, 0.0001115700000000018, 0.00011158400000000138, 0.00011082000000000106, 0.00011154200000000267, 0.00011080599999999802, 0.00011101300000000008, 0.00011079099999999897, 0.00011079100000000244, 0.00011084700000000072, 0.00011083300000000115, 0.00011091699999999857, 0.00011097200000000085, 0.00011086100000000029, 0.00011106899999999836, 0.00011094500000000118, 0.00011095900000000075, 0.00011112500000000011, 0.00011108400000000088, 0.00011165299999999975, 0.00011111100000000054, 0.00011169399999999899, 0.00011112500000000011, 0.00011102699999999965, 0.00011173600000000117, 0.00011099999999999999, 0.00011161099999999757, 0.00011097200000000085, 0.00011165299999999975, 0.00011105600000000174, 0.00011111100000000054, 0.000110902999999999, 0.00011091699999999857, 0.00011165299999999975, 0.00011159799999999748, 0.00011162500000000061, 0.00011084700000000072, 0.0001110830000000014, 0.00011165200000000028, 0.00011101399999999956, 0.0001117359999999977, 0.00011109700000000097, 0.00011161099999999757, 0.00011087499999999986, 0.00011111100000000054, 0.000111596999999998, 0.00011155600000000224, 0.00011095900000000075, 0.00011094500000000118, 0.00011095900000000075]</msg>
<status status="PASS" starttime="20201117 14:48:13.214" endtime="20201117 14:48:13.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.209" endtime="20201117 14:48:13.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.218" endtime="20201117 14:48:13.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.222" endtime="20201117 14:48:13.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.220" endtime="20201117 14:48:13.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.217" endtime="20201117 14:48:13.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.848" endtime="20201117 14:48:13.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.846" endtime="20201117 14:48:13.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.845" endtime="20201117 14:48:13.243"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.245" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.253" endtime="20201117 14:48:13.273"></status>
</kw>
<msg timestamp="20201117 14:48:13.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.252" endtime="20201117 14:48:13.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.275" endtime="20201117 14:48:13.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.277" endtime="20201117 14:48:13.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.249" endtime="20201117 14:48:13.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.247" endtime="20201117 14:48:13.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.286" endtime="20201117 14:48:13.571"></status>
</kw>
<msg timestamp="20201117 14:48:13.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024115708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024228319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.285" endtime="20201117 14:48:13.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024115708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024228319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.575" endtime="20201117 14:48:13.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.583" endtime="20201117 14:48:13.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.282" endtime="20201117 14:48:13.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.281" endtime="20201117 14:48:13.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:13.590" level="INFO">${RESULT} = [{'time': 0.024228319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011261100000000204, 'source_diff': 0.00011261100000000204}, {'time': 0.024342417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:13.587" endtime="20201117 14:48:13.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:13.603" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201117 14:48:13.591" endtime="20201117 14:48:13.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.607" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:48:13.606" endtime="20201117 14:48:13.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.610" level="INFO">VALUE: [0.00011261100000000204, 0.00011194500000000218, 0.00011211100000000154, 0.00011272199999999913, 0.00011184699999999825, 0.00011216699999999982, 0.000112596999999999, 0.00011256999999999934, 0.00011184700000000172, 0.0001120700000000023, 0.00011263900000000118, 0.00011262499999999814, 0.00011191700000000304, 0.00011265200000000128, 0.000112596999999999, 0.00011205500000000326, 0.00011265200000000128, 0.00011195899999999828, 0.00011184699999999825, 0.00011261100000000204, 0.00011205599999999927, 0.00011261099999999857, 0.00011262500000000161, 0.00011262500000000161, 0.00011184799999999773, 0.00011255599999999977, 0.00011177799999999988, 0.00011195899999999828, 0.00011183400000000163, 0.00011272199999999913, 0.00011179099999999997, 0.00011177799999999988, 0.00011213900000000068, 0.000111903, 0.00011218099999999939, 0.00011263899999999771, 0.00011183400000000163, 0.00011197200000000185, 0.00011262500000000161, 0.00011195899999999828, 0.0001120419999999997, 0.00011209799999999798, 0.00011270899999999903, 0.00011274999999999827, 0.00011274999999999827, 0.00011261100000000204, 0.00011262500000000161, 0.00011262500000000161, 0.00011204100000000022, 0.0001120419999999997]</msg>
<status status="PASS" starttime="20201117 14:48:13.608" endtime="20201117 14:48:13.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.604" endtime="20201117 14:48:13.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.613" endtime="20201117 14:48:13.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.616" endtime="20201117 14:48:13.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.615" endtime="20201117 14:48:13.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.611" endtime="20201117 14:48:13.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.246" endtime="20201117 14:48:13.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.244" endtime="20201117 14:48:13.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.243" endtime="20201117 14:48:13.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.902" endtime="20201117 14:48:13.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.642" endtime="20201117 14:48:13.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.640" endtime="20201117 14:48:13.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.639" endtime="20201117 14:48:13.663"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:47:33.831" endtime="20201117 14:48:13.663" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:46:52.558" endtime="20201117 14:48:13.668"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201117 14:46:50.491" endtime="20201117 14:48:13.682"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
